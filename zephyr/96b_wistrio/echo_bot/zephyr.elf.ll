; ModuleID = 'build/96b_wistrio/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228871 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228861 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228851 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228841 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228831 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228821 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231284 to i8*), void (i8*)* inttoptr (i32 134230075 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231308 to i8*), void (i8*)* inttoptr (i32 134230075 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231116 to i8*), void (i8*)* inttoptr (i32 134228811 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [36 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !329
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !358
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !364
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !503
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !539
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !549
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !554
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !574
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !682
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !835
@.str.34 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !804
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !787
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !760
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !806
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !820
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !822
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !824
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !826
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !828
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !830
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !840
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !865
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !940
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !929
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !981
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !856
@.str.49 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1075
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1321
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1299
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1233
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !854
@.str.1.52 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1323
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1303
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1301
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !852
@.str.2.53 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1336
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1307
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1305
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1259
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !850
@.str.3.54 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1338
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1311
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1309
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !848
@.str.4.55 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1340
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1315
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1313
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1274
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !846
@.str.5.56 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1342
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1319
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1317
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1283
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !860
@.str.60 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1344
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1582
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1530
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1584
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1515
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1517
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !858
@.str.1.63 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1593
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1532
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1625
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1526
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1528
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1534
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1542
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1565
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1568
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1571
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !913
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1612
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1614
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1616
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1618
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1620
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1627
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1736
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1738
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1734
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1705
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1740
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1231
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1257
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1272
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1281
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1827
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1851
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1854
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1857
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1861
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1867
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2076
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2085
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2092
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2096
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.112 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.115, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.118, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2122
@.str.113 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.114 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.115 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.116 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.117 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.118 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2236
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2249
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2357
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2360
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2362
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2090
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2087
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2364
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2400
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1954
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2398
@.str.186 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2403
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3105 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3163, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3213, !srcloc !3214
  ret void, !dbg !3215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3218 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3220, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8* undef, metadata !3221, metadata !DIExpression()), !dbg !3223
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3224
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3225
  %5 = icmp eq i32 %4, 0, !dbg !3225
  br i1 %5, label %27, label %6, !dbg !3227

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3228
  %8 = icmp eq i32 %7, 0, !dbg !3229
  br i1 %8, label %27, label %9, !dbg !3229

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3222, metadata !DIExpression(DW_OP_deref)), !dbg !3223
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3230
  %10 = load i8, i8* %3, align 1, !dbg !3232
  call void @llvm.dbg.value(metadata i8 %10, metadata !3222, metadata !DIExpression()), !dbg !3223
  %11 = icmp eq i8 %10, 10, !dbg !3234
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3235
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3235
  br i1 %16, label %17, label %19, !dbg !3235

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3236
  store i8 0, i8* %18, align 1, !dbg !3238
  call fastcc void @k_msgq_put() #26, !dbg !3239
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3240
  br label %24, !dbg !3241

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3242
  br i1 %20, label %21, label %24, !dbg !3244

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3245
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3245
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3247
  store i8 %10, i8* %23, align 1, !dbg !3248
  br label %24, !dbg !3249

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3228
  %26 = icmp eq i32 %25, 0, !dbg !3229
  br i1 %26, label %27, label %9, !dbg !3229, !llvm.loop !3250

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3252
  ret void, !dbg !3252
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3253 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3256, metadata !DIExpression()), !dbg !3257
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3258, !srcloc !3260
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3261
  ret i32 %1, !dbg !3262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3263 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3265, metadata !DIExpression()), !dbg !3267
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3268
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3266, metadata !DIExpression()), !dbg !3267
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3269
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3269
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3271
  br i1 %4, label %7, label %5, !dbg !3272

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !3273
  br label %7, !dbg !3274

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3267
  ret i32 %8, !dbg !3275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3276 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3278, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i8* %0, metadata !3279, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 1, metadata !3280, metadata !DIExpression()), !dbg !3282
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3283
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3281, metadata !DIExpression()), !dbg !3282
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3284
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3284
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3286
  br i1 %5, label %8, label %6, !dbg !3287

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8* noundef %0, i32 noundef 1) #27, !dbg !3288
  br label %8, !dbg !3289

8:                                                ; preds = %1, %6
  ret void, !dbg !3290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3291 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3301, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3302, metadata !DIExpression()), !dbg !3304
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3305, !srcloc !3307
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3308
  ret void, !dbg !3309
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3310 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3312, metadata !DIExpression()), !dbg !3314
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3315
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3313, metadata !DIExpression()), !dbg !3314
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3316
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3316
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3318
  br i1 %4, label %7, label %5, !dbg !3319

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !3320
  br label %7, !dbg !3321

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3314
  ret i32 %8, !dbg !3322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3327, metadata !DIExpression()), !dbg !3331
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3332
  call void @llvm.dbg.value(metadata i32 %2, metadata !3328, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 0, metadata !3329, metadata !DIExpression()), !dbg !3333
  %3 = icmp sgt i32 %2, 0, !dbg !3334
  br i1 %3, label %5, label %4, !dbg !3336

4:                                                ; preds = %5, %1
  ret void, !dbg !3337

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3329, metadata !DIExpression()), !dbg !3333
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3338
  %8 = load i8, i8* %7, align 1, !dbg !3338
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3340
  %9 = add nuw nsw i32 %6, 1, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %9, metadata !3329, metadata !DIExpression()), !dbg !3333
  %10 = icmp eq i32 %9, %2, !dbg !3334
  br i1 %10, label %4, label %5, !dbg !3336, !llvm.loop !3342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3344 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3346, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.value(metadata i8 %0, metadata !3347, metadata !DIExpression()), !dbg !3348
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3349, !srcloc !3351
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3352
  ret void, !dbg !3353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3354 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3356, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i8 %0, metadata !3357, metadata !DIExpression()), !dbg !3359
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3360
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3358, metadata !DIExpression()), !dbg !3359
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3361
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3361
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #27, !dbg !3362
  ret void, !dbg !3363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3364 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3367
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3367
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3366, metadata !DIExpression()), !dbg !3368
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3369
  br i1 %3, label %5, label %4, !dbg !3371

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3372
  br label %11, !dbg !3374

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3375
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3376
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3377
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3378
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3379
  %7 = icmp eq i32 %6, 0, !dbg !3380
  br i1 %7, label %8, label %11, !dbg !3381

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3382
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3384
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3385
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3379
  %10 = icmp eq i32 %9, 0, !dbg !3380
  br i1 %10, label %8, label %11, !dbg !3381, !llvm.loop !3386

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3388
  ret void, !dbg !3388
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3389 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3394, metadata !DIExpression()), !dbg !3395
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3396, !srcloc !3398
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3399
  ret i1 %1, !dbg !3400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3401 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3403, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3404, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata i8* null, metadata !3405, metadata !DIExpression()), !dbg !3407
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3408
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3406, metadata !DIExpression()), !dbg !3407
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3409
  br i1 %2, label %8, label %3, !dbg !3411

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3412
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3412
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3413
  br i1 %6, label %8, label %7, !dbg !3414

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_42, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3415
  br label %8, !dbg !3417

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3419 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3421, metadata !DIExpression()), !dbg !3422
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3423, !srcloc !3425
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3426
  ret void, !dbg !3427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3428 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3434, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3432, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.value(metadata i8* %0, metadata !3433, metadata !DIExpression()), !dbg !3435
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3436, !srcloc !3438
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3439
  ret i32 %2, !dbg !3440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3441 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3443, metadata !DIExpression()), !dbg !3445
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3446
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3444, metadata !DIExpression()), !dbg !3445
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3447
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3447
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3449
  br i1 %4, label %6, label %5, !dbg !3450

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !3451
  br label %6, !dbg !3453

6:                                                ; preds = %5, %0
  ret void, !dbg !3454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3455 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !3457, metadata !DIExpression()), !dbg !3458
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !3459
  ret i1 %1, !dbg !3460
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3463, metadata !DIExpression()), !dbg !3464
  ret i32 0, !dbg !3465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3466 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3470, metadata !DIExpression()), !dbg !3471
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3472
  ret void, !dbg !3473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3474 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3477
  ret i8* %1, !dbg !3478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3479 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3491, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i8* %0, metadata !3490, metadata !DIExpression()), !dbg !3500
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3501
  ret void, !dbg !3503
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3508, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.value(metadata i8* %1, metadata !3509, metadata !DIExpression()), !dbg !3510
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3511
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3511
  ret i32 %4, !dbg !3512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3513 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3525, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3522, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %1, metadata !3523, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i8* %2, metadata !3524, metadata !DIExpression()), !dbg !3526
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3527
  ret void, !dbg !3528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3533, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i32 %1, metadata !3534, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i32 0, metadata !3535, metadata !DIExpression()), !dbg !3536
  %3 = icmp eq i32 %1, 0, !dbg !3537
  br i1 %3, label %13, label %4, !dbg !3540

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3535, metadata !DIExpression()), !dbg !3536
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3541
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3543
  %8 = load i8, i8* %7, align 1, !dbg !3543
  %9 = zext i8 %8 to i32, !dbg !3543
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3541
  %11 = add nuw i32 %5, 1, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %11, metadata !3535, metadata !DIExpression()), !dbg !3536
  %12 = icmp eq i32 %11, %1, !dbg !3537
  br i1 %12, label %13, label %4, !dbg !3540, !llvm.loop !3545

13:                                               ; preds = %4, %2
  ret void, !dbg !3547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3548 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3552, metadata !DIExpression()), !dbg !3554
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3555
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.va_start(i8* nonnull %3), !dbg !3557
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3558
  %5 = load i32, i32* %4, align 4, !dbg !3558
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3558
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3558
  call void @llvm.va_end(i8* nonnull %3), !dbg !3559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3560
  ret void, !dbg !3560
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3561 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3565, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 %1, metadata !3566, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i8* %2, metadata !3567, metadata !DIExpression()), !dbg !3570
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3571
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3571
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3568, metadata !DIExpression()), !dbg !3572
  call void @llvm.va_start(i8* nonnull %5), !dbg !3573
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3574
  %7 = load i32, i32* %6, align 4, !dbg !3574
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3574
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %9, metadata !3569, metadata !DIExpression()), !dbg !3570
  call void @llvm.va_end(i8* nonnull %5), !dbg !3575
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3576
  ret i32 %9, !dbg !3577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3578 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3585, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i8* %0, metadata !3582, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %1, metadata !3583, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i8* %2, metadata !3584, metadata !DIExpression()), !dbg !3592
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3593
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3593
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3586, metadata !DIExpression()), !dbg !3594
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3595
  store i8* %0, i8** %7, align 4, !dbg !3595
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3595
  store i32 %1, i32* %8, align 4, !dbg !3595
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3595
  store i32 0, i32* %9, align 4, !dbg !3595
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3596
  %10 = load i32, i32* %9, align 4, !dbg !3597
  %11 = load i32, i32* %8, align 4, !dbg !3599
  %12 = icmp slt i32 %10, %11, !dbg !3600
  br i1 %12, label %13, label %15, !dbg !3601

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3602
  store i8 0, i8* %14, align 1, !dbg !3604
  br label %15, !dbg !3605

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3606
  ret i32 %10, !dbg !3607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3613, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3614, metadata !DIExpression()), !dbg !3615
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3616
  %4 = load i8*, i8** %3, align 4, !dbg !3616
  %5 = icmp eq i8* %4, null, !dbg !3618
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3619
  br i1 %5, label %12, label %8, !dbg !3620

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3621
  %10 = load i32, i32* %9, align 4, !dbg !3621
  %11 = icmp slt i32 %7, %10, !dbg !3622
  br i1 %11, label %15, label %12, !dbg !3623

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3624
  %14 = add nsw i32 %7, 1, !dbg !3626
  store i32 %14, i32* %13, align 4, !dbg !3626
  br label %25, !dbg !3627

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3628
  %17 = icmp eq i32 %7, %16, !dbg !3630
  br i1 %17, label %18, label %21, !dbg !3631

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3632
  store i32 %19, i32* %6, align 4, !dbg !3632
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3634
  store i8 0, i8* %20, align 1, !dbg !3635
  br label %25, !dbg !3636

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3637
  %23 = add nsw i32 %7, 1, !dbg !3639
  store i32 %23, i32* %6, align 4, !dbg !3639
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3640
  store i8 %22, i8* %24, align 1, !dbg !3641
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3642
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3643 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3653, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %1, metadata !3654, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %2, metadata !3655, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %3, metadata !3656, metadata !DIExpression()), !dbg !3657
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3658
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3659
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3660
  unreachable, !dbg !3661
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3662 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3766
  ret %struct.k_thread* %1, !dbg !3767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3772, metadata !DIExpression()), !dbg !3773
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3774, !srcloc !3776
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3777
  ret void, !dbg !3778
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3779 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3780, !srcloc !3782
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3783
  ret %struct.k_thread* %1, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3785 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3796, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.value(metadata i8* %1, metadata !3797, metadata !DIExpression()), !dbg !3800
  %3 = icmp eq i8* %1, null, !dbg !3801
  br i1 %3, label %8, label %4, !dbg !3803

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3804
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3804
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3798, metadata !DIExpression()), !dbg !3800
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3805, !range !3806
  call void @llvm.dbg.value(metadata i32 %7, metadata !3799, metadata !DIExpression()), !dbg !3800
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3807
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3808
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3810 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3814, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %1, metadata !3815, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %1, metadata !3816, metadata !DIExpression()), !dbg !3818
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3819
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3817, metadata !DIExpression()), !dbg !3818
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3820
  %5 = ptrtoint i8* %4 to i32, !dbg !3821
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3821
  %7 = sub i32 %5, %6, !dbg !3821
  %8 = lshr i32 %7, 3, !dbg !3822
  ret i32 %8, !dbg !3823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3828, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %1, metadata !3829, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i1 %2, metadata !3830, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3833
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3834
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3831, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3832, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3833
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3835
  %6 = bitcast i8* %5 to i16*, !dbg !3835
  %7 = load i16, i16* %6, align 2, !dbg !3835
  %8 = and i16 %7, -2, !dbg !3839
  %9 = zext i1 %2 to i16, !dbg !3839
  %10 = or i16 %8, %9, !dbg !3839
  store i16 %10, i16* %6, align 2, !dbg !3835
  ret void, !dbg !3840
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3841 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %1, metadata !3846, metadata !DIExpression()), !dbg !3847
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3848
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3850
  br i1 %4, label %7, label %5, !dbg !3851

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3852
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3854
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3855
  br label %7, !dbg !3856

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3857, !range !3859
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3860
  br i1 %9, label %13, label %10, !dbg !3861

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3862
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3864, !range !3859
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3865
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %12, metadata !3846, metadata !DIExpression()), !dbg !3847
  br label %13, !dbg !3867

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3846, metadata !DIExpression()), !dbg !3847
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3868
  ret void, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3874, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 %1, metadata !3875, metadata !DIExpression()), !dbg !3876
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3877
  %4 = add i32 %3, %1, !dbg !3878
  ret i32 %4, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3886
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3887
  %4 = and i32 %3, 1, !dbg !3888
  %5 = icmp ne i32 %4, 0, !dbg !3887
  ret i1 %5, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3892, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3893, metadata !DIExpression()), !dbg !3897
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3898, !range !3899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %4, metadata !3894, metadata !DIExpression()), !dbg !3901
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3902
  ret void, !dbg !3903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3908, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %1, metadata !3909, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %2, metadata !3910, metadata !DIExpression()), !dbg !3913
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3914
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3915
  %6 = add i32 %5, %4, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %6, metadata !3911, metadata !DIExpression()), !dbg !3913
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3917
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3918
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3919
  ret void, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3923, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata i32 %1, metadata !3924, metadata !DIExpression()), !dbg !3925
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3926
  %4 = sub i32 %1, %3, !dbg !3927
  ret i32 %4, !dbg !3928
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3932, metadata !DIExpression()), !dbg !3936
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3937, !range !3899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %4, metadata !3933, metadata !DIExpression()), !dbg !3939
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3940
  ret void, !dbg !3941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3942 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3949
  %4 = lshr i32 %3, 1, !dbg !3950
  ret i32 %4, !dbg !3951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3956, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %1, metadata !3957, metadata !DIExpression()), !dbg !3959
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3960
  %4 = add i32 %1, 1, !dbg !3961
  %5 = sub i32 %4, %3, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %5, metadata !3958, metadata !DIExpression()), !dbg !3959
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3963, !range !3964
  %7 = sub nsw i32 31, %6, !dbg !3965
  ret i32 %7, !dbg !3966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3967 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3971, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %1, metadata !3972, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %2, metadata !3973, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3974, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3980
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3981
  %5 = load i32, i32* %4, align 4, !dbg !3981
  %6 = icmp eq i32 %5, 0, !dbg !3982
  br i1 %6, label %7, label %12, !dbg !3983

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3984
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3986
  %10 = load i32, i32* %9, align 4, !dbg !3987
  %11 = or i32 %10, %8, !dbg !3987
  store i32 %11, i32* %9, align 4, !dbg !3987
  store i32 %1, i32* %4, align 4, !dbg !3988
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3989
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3990
  br label %14, !dbg !3991

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3976, metadata !DIExpression()), !dbg !3992
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3993, !range !3994
  call void @llvm.dbg.value(metadata i32 %13, metadata !3979, metadata !DIExpression()), !dbg !3992
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3995
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3996
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3997
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3998
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4000 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4002, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %1, metadata !4003, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %2, metadata !4004, metadata !DIExpression()), !dbg !4005
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4006
  ret void, !dbg !4007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4010, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %1, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %2, metadata !4012, metadata !DIExpression()), !dbg !4013
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4014
  ret void, !dbg !4015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %1, metadata !4019, metadata !DIExpression()), !dbg !4020
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4021
  ret i32 %3, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %1, metadata !4028, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %2, metadata !4029, metadata !DIExpression()), !dbg !4032
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4033
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4030, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4032
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %5, metadata !4031, metadata !DIExpression()), !dbg !4032
  %6 = bitcast i8* %5 to i16*, !dbg !4035
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4038
  %8 = load i16, i16* %7, align 2, !dbg !4038
  %9 = zext i16 %8 to i32, !dbg !4038
  ret i32 %9, !dbg !4039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4040 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4044, metadata !DIExpression()), !dbg !4045
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4046
  ret %struct.chunk_unit_t* %2, !dbg !4047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4048 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4052, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %1, metadata !4053, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %3, metadata !4055, metadata !DIExpression()), !dbg !4058
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4056, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4057, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4058
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %6, metadata !4057, metadata !DIExpression()), !dbg !4058
  %7 = trunc i32 %3 to i16, !dbg !4061
  %8 = bitcast i8* %6 to i16*, !dbg !4064
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4065
  store i16 %7, i16* %9, align 2, !dbg !4066
  ret void, !dbg !4067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4068 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4072, metadata !DIExpression()), !dbg !4073
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4074
  ret i32 %2, !dbg !4075
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4076 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4080, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i32 %1, metadata !4081, metadata !DIExpression()), !dbg !4082
  %3 = add i32 %1, 4, !dbg !4083
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4084
  ret i32 %4, !dbg !4085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4090, metadata !DIExpression()), !dbg !4091
  %2 = add i32 %0, 7, !dbg !4092
  %3 = lshr i32 %2, 3, !dbg !4093
  ret i32 %3, !dbg !4094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4099, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %1, metadata !4100, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %2, metadata !4101, metadata !DIExpression()), !dbg !4102
  %4 = shl i32 %2, 1, !dbg !4103
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4104
  ret void, !dbg !4105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4106 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4108, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %1, metadata !4109, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %2, metadata !4110, metadata !DIExpression()), !dbg !4111
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4112
  ret void, !dbg !4113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4114 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32 %1, metadata !4117, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32 %2, metadata !4118, metadata !DIExpression()), !dbg !4124
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4125
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4119, metadata !DIExpression()), !dbg !4124
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4126
  %6 = icmp eq i32 %5, %1, !dbg !4127
  br i1 %6, label %7, label %14, !dbg !4128

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4129
  %9 = xor i32 %8, -1, !dbg !4131
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4132
  %11 = load i32, i32* %10, align 4, !dbg !4133
  %12 = and i32 %11, %9, !dbg !4133
  store i32 %12, i32* %10, align 4, !dbg !4133
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4134
  store i32 0, i32* %13, align 4, !dbg !4135
  br label %17, !dbg !4136

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %15, metadata !4120, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i32 %5, metadata !4123, metadata !DIExpression()), !dbg !4138
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4139
  store i32 %5, i32* %16, align 4, !dbg !4140
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4141
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4142
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4144 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4146, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i32 %1, metadata !4147, metadata !DIExpression()), !dbg !4148
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4149
  ret i32 %3, !dbg !4150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4151 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4155, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i8* %1, metadata !4156, metadata !DIExpression()), !dbg !4162
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4163
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4163
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4157, metadata !DIExpression()), !dbg !4162
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %5, metadata !4158, metadata !DIExpression()), !dbg !4162
  %6 = ptrtoint i8* %1 to i32, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %6, metadata !4159, metadata !DIExpression()), !dbg !4162
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4166
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4166
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %9, metadata !4160, metadata !DIExpression()), !dbg !4162
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4168
  %11 = shl i32 %10, 3, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %11, metadata !4161, metadata !DIExpression()), !dbg !4162
  %12 = sub i32 %9, %6, !dbg !4170
  %13 = add i32 %12, %11, !dbg !4171
  ret i32 %13, !dbg !4172
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4173 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4177, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 %1, metadata !4178, metadata !DIExpression()), !dbg !4183
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4184
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4184
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4179, metadata !DIExpression()), !dbg !4183
  %5 = icmp eq i32 %1, 0, !dbg !4185
  br i1 %5, label %19, label %6, !dbg !4187

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4188
  br i1 %7, label %19, label %8, !dbg !4189

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4190, !range !3806
  call void @llvm.dbg.value(metadata i32 %9, metadata !4181, metadata !DIExpression()), !dbg !4183
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %10, metadata !4182, metadata !DIExpression()), !dbg !4183
  %11 = icmp eq i32 %10, 0, !dbg !4192
  br i1 %11, label %19, label %12, !dbg !4194

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4195
  %14 = icmp ugt i32 %13, %9, !dbg !4197
  br i1 %14, label %15, label %17, !dbg !4198

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4199
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4201
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4202
  br label %17, !dbg !4203

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4204
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4205
  call void @llvm.dbg.value(metadata i8* %18, metadata !4180, metadata !DIExpression()), !dbg !4183
  br label %19, !dbg !4206

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4183
  ret i8* %20, !dbg !4207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4214
  %3 = lshr i32 %1, 3, !dbg !4215
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4216
  %5 = load i32, i32* %4, align 4, !dbg !4216
  %6 = icmp uge i32 %3, %5, !dbg !4217
  ret i1 %6, !dbg !4218
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4219 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4223, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %1, metadata !4224, metadata !DIExpression()), !dbg !4238
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %3, metadata !4225, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4226, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4238
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4240
  %5 = load i32, i32* %4, align 4, !dbg !4240
  %6 = icmp eq i32 %5, 0, !dbg !4241
  br i1 %6, label %19, label %7, !dbg !4242

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4243
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4244
  call void @llvm.dbg.value(metadata i32 %9, metadata !4230, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %8, metadata !4231, metadata !DIExpression()), !dbg !4245
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4246
  %11 = icmp ult i32 %10, %1, !dbg !4248
  br i1 %11, label %13, label %12, !dbg !4249

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4250
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4252
  store i32 %14, i32* %4, align 4, !dbg !4253
  %15 = add nsw i32 %9, -1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %15, metadata !4230, metadata !DIExpression()), !dbg !4244
  %16 = icmp eq i32 %15, 0, !dbg !4254
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4255
  br i1 %18, label %19, label %7, !dbg !4255, !llvm.loop !4256

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4259
  %21 = load i32, i32* %20, align 4, !dbg !4259
  %22 = add nsw i32 %3, 1, !dbg !4260
  %23 = shl nsw i32 -1, %22, !dbg !4260
  %24 = and i32 %21, %23, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %24, metadata !4233, metadata !DIExpression()), !dbg !4238
  %25 = icmp eq i32 %24, 0, !dbg !4262
  br i1 %25, label %30, label %26, !dbg !4263

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4264, !range !3964
  call void @llvm.dbg.value(metadata i32 %27, metadata !4234, metadata !DIExpression()), !dbg !4265
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4266
  %29 = load i32, i32* %28, align 4, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %29, metadata !4237, metadata !DIExpression()), !dbg !4265
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4267
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4238
  ret i32 %31, !dbg !4268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4269 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4271, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %1, metadata !4272, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %2, metadata !4273, metadata !DIExpression()), !dbg !4277
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %4, metadata !4274, metadata !DIExpression()), !dbg !4277
  %5 = sub i32 %2, %1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %5, metadata !4275, metadata !DIExpression()), !dbg !4277
  %6 = sub i32 %4, %5, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %6, metadata !4276, metadata !DIExpression()), !dbg !4277
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4281
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4282
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4283
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4284
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4285
  ret void, !dbg !4286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4287 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4291, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %1, metadata !4292, metadata !DIExpression()), !dbg !4295
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4296
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4293, metadata !DIExpression()), !dbg !4295
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4297
  call void @llvm.dbg.value(metadata i8* %4, metadata !4294, metadata !DIExpression()), !dbg !4295
  ret i8* %4, !dbg !4298
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4299 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4303, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %1, metadata !4304, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %2, metadata !4305, metadata !DIExpression()), !dbg !4315
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4316
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4316
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4306, metadata !DIExpression()), !dbg !4315
  %6 = sub i32 0, %1, !dbg !4317
  %7 = and i32 %6, %1, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %7, metadata !4308, metadata !DIExpression()), !dbg !4315
  %8 = icmp eq i32 %7, %1, !dbg !4319
  br i1 %8, label %13, label %9, !dbg !4321

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %10, metadata !4304, metadata !DIExpression()), !dbg !4315
  %11 = icmp ult i32 %7, 4, !dbg !4324
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4324
  br label %17, !dbg !4324

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4325
  br i1 %14, label %15, label %17, !dbg !4328

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4329
  br label %57, !dbg !4331

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4315
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4332
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4304, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %19, metadata !4307, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %18, metadata !4308, metadata !DIExpression()), !dbg !4315
  %21 = icmp eq i32 %2, 0, !dbg !4333
  br i1 %21, label %57, label %22, !dbg !4335

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4336
  br i1 %23, label %57, label %24, !dbg !4337

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4338
  %26 = add i32 %25, %20, !dbg !4339
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4340, !range !3806
  call void @llvm.dbg.value(metadata i32 %27, metadata !4309, metadata !DIExpression()), !dbg !4315
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %28, metadata !4310, metadata !DIExpression()), !dbg !4315
  %29 = icmp eq i32 %28, 0, !dbg !4342
  br i1 %29, label %57, label %30, !dbg !4344

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4345
  call void @llvm.dbg.value(metadata i8* %31, metadata !4311, metadata !DIExpression()), !dbg !4315
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4346
  %33 = ptrtoint i8* %32 to i32, !dbg !4346
  %34 = add i32 %20, -1, !dbg !4346
  %35 = add i32 %34, %33, !dbg !4346
  %36 = sub i32 0, %20, !dbg !4346
  %37 = and i32 %35, %36, !dbg !4346
  %38 = inttoptr i32 %37 to i8*, !dbg !4347
  %39 = sub i32 0, %18, !dbg !4348
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %40, metadata !4311, metadata !DIExpression()), !dbg !4315
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4349
  %42 = ptrtoint i8* %41 to i32, !dbg !4349
  %43 = add i32 %42, 7, !dbg !4349
  %44 = and i32 %43, -8, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %44, metadata !4312, metadata !DIExpression()), !dbg !4315
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %45, metadata !4313, metadata !DIExpression()), !dbg !4315
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4351
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4352
  %48 = sub i32 %44, %47, !dbg !4352
  %49 = ashr exact i32 %48, 3, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %49, metadata !4314, metadata !DIExpression()), !dbg !4315
  %50 = icmp ugt i32 %45, %28, !dbg !4353
  br i1 %50, label %51, label %52, !dbg !4355

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4356
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4358
  br label %52, !dbg !4359

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4360
  %54 = icmp ugt i32 %53, %49, !dbg !4362
  br i1 %54, label %55, label %56, !dbg !4363

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4364
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4366
  br label %56, !dbg !4367

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4368
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4315
  ret i8* %58, !dbg !4369
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4370 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4374, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i8* %1, metadata !4375, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %2, metadata !4376, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %3, metadata !4377, metadata !DIExpression()), !dbg !4393
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4394
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4378, metadata !DIExpression()), !dbg !4393
  %7 = icmp eq i8* %1, null, !dbg !4395
  br i1 %7, label %8, label %10, !dbg !4397

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4398
  br label %59, !dbg !4400

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4401
  br i1 %11, label %12, label %13, !dbg !4403

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4404
  br label %59, !dbg !4406

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4407
  br i1 %14, label %59, label %15, !dbg !4409

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4410, !range !3806
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4393
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %17, metadata !4380, metadata !DIExpression()), !dbg !4393
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4412
  %19 = ptrtoint i8* %1 to i32, !dbg !4413
  %20 = ptrtoint i8* %18 to i32, !dbg !4413
  %21 = sub i32 %19, %20, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %21, metadata !4381, metadata !DIExpression()), !dbg !4393
  %22 = add i32 %21, %3, !dbg !4414
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %23, metadata !4382, metadata !DIExpression()), !dbg !4393
  %24 = icmp eq i32 %2, 0, !dbg !4416
  br i1 %24, label %29, label %25, !dbg !4417

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4418
  %27 = and i32 %26, %19, !dbg !4419
  %28 = icmp eq i32 %27, 0, !dbg !4419
  br i1 %28, label %29, label %49, !dbg !4420

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4421
  %31 = icmp eq i32 %23, %30, !dbg !4422
  br i1 %31, label %59, label %32, !dbg !4423

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4424
  br i1 %33, label %34, label %36, !dbg !4425

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4426
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4428
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4429
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4430
  br label %59, !dbg !4431

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4432
  br i1 %37, label %49, label %38, !dbg !4433

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4434
  %40 = add i32 %39, %30, !dbg !4435
  %41 = icmp ult i32 %40, %23, !dbg !4436
  br i1 %41, label %49, label %42, !dbg !4437

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %43, metadata !4383, metadata !DIExpression()), !dbg !4439
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4440
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4441
  %45 = icmp ult i32 %43, %44, !dbg !4443
  br i1 %45, label %46, label %48, !dbg !4444

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4445
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4447
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4448
  br label %48, !dbg !4449

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4450
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4451
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4452
  call void @llvm.dbg.value(metadata i8* %50, metadata !4389, metadata !DIExpression()), !dbg !4393
  %51 = icmp eq i8* %50, null, !dbg !4453
  br i1 %51, label %59, label %52, !dbg !4454

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4455, !range !3899
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4456
  %55 = sub i32 %54, %21, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %55, metadata !4390, metadata !DIExpression()), !dbg !4458
  %56 = icmp ult i32 %55, %3, !dbg !4459
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4459
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4460
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4461
  br label %59, !dbg !4462

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4393
  ret i8* %60, !dbg !4463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4464 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4468, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata i32 %1, metadata !4469, metadata !DIExpression()), !dbg !4470
  %3 = shl i32 %1, 3, !dbg !4471
  %4 = add i32 %3, -4, !dbg !4472
  ret i32 %4, !dbg !4473
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4474 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4478, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i8* %1, metadata !4479, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 %2, metadata !4480, metadata !DIExpression()), !dbg !4489
  %4 = add i32 %2, -4, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %4, metadata !4480, metadata !DIExpression()), !dbg !4489
  %5 = ptrtoint i8* %1 to i32, !dbg !4491
  %6 = add i32 %5, 7, !dbg !4491
  %7 = and i32 %6, -8, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %7, metadata !4481, metadata !DIExpression()), !dbg !4489
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4492
  %9 = ptrtoint i8* %8 to i32, !dbg !4492
  %10 = and i32 %9, -8, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %10, metadata !4482, metadata !DIExpression()), !dbg !4489
  %11 = sub i32 %10, %7, !dbg !4493
  %12 = lshr exact i32 %11, 3, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %12, metadata !4483, metadata !DIExpression()), !dbg !4489
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4484, metadata !DIExpression()), !dbg !4489
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4496
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4497
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4498
  store i32 %12, i32* %15, align 8, !dbg !4499
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4500
  store i32 0, i32* %16, align 4, !dbg !4501
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4502
  call void @llvm.dbg.value(metadata i32 %17, metadata !4485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4489
  %18 = shl i32 %17, 2, !dbg !4503
  %19 = add i32 %18, 20, !dbg !4504
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4505
  call void @llvm.dbg.value(metadata i32 %20, metadata !4486, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 0, metadata !4487, metadata !DIExpression()), !dbg !4506
  %21 = icmp slt i32 %17, 0, !dbg !4507
  br i1 %21, label %22, label %24, !dbg !4509

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4510
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4511
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4512
  %23 = sub i32 %12, %20, !dbg !4513
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4514
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4515
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4516
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4517
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4518
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4519
  ret void, !dbg !4520

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4487, metadata !DIExpression()), !dbg !4506
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4521
  store i32 0, i32* %26, align 4, !dbg !4523
  %27 = add nuw i32 %25, 1, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %27, metadata !4487, metadata !DIExpression()), !dbg !4506
  %28 = icmp eq i32 %25, %17, !dbg !4507
  br i1 %28, label %22, label %24, !dbg !4509, !llvm.loop !4525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4527 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4537, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %1, metadata !4538, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %2, metadata !4539, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %4, metadata !4541, metadata !DIExpression()), !dbg !4668
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4669
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4669
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4542, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 0, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i1 undef, metadata !4548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4668
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4671

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4671

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4672
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %30, metadata !4539, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %29, metadata !4546, metadata !DIExpression()), !dbg !4668
  %31 = load i8, i8* %30, align 1, !dbg !4673
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4671

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4673
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %34, metadata !4539, metadata !DIExpression()), !dbg !4668
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %35, metadata !4550, metadata !DIExpression()), !dbg !4675
  %36 = icmp slt i32 %35, 0, !dbg !4676
  %37 = add i32 %29, 1, !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %36, label %365, label %28, !llvm.loop !4678

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4680
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4555, metadata !DIExpression()), !dbg !4681
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4681
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4600, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4603, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %30, metadata !4606, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 -1, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 -1, metadata !4608, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* null, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %14, metadata !4610, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 0, metadata !4611, metadata !DIExpression()), !dbg !4682
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %39, metadata !4539, metadata !DIExpression()), !dbg !4668
  %40 = load i24, i24* %15, align 8, !dbg !4684
  %41 = and i24 %40, 256, !dbg !4684
  %42 = icmp eq i24 %41, 0, !dbg !4684
  br i1 %42, label %51, label %43, !dbg !4686

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %44, metadata !4540, metadata !DIExpression()), !dbg !4668
  %45 = bitcast i8* %27 to i32*, !dbg !4687
  %46 = load i32, i32* %45, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %46, metadata !4607, metadata !DIExpression()), !dbg !4682
  %47 = icmp slt i32 %46, 0, !dbg !4689
  br i1 %47, label %48, label %56, !dbg !4691

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4692
  store i24 %49, i24* %15, align 8, !dbg !4692
  %50 = sub nsw i32 0, %46, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %50, metadata !4607, metadata !DIExpression()), !dbg !4682
  br label %56, !dbg !4695

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4696
  %53 = icmp eq i24 %52, 0, !dbg !4696
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4698
  br label %56, !dbg !4698

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4699
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4682
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %58, metadata !4607, metadata !DIExpression()), !dbg !4682
  %60 = and i24 %57, 1024, !dbg !4699
  %61 = icmp eq i24 %60, 0, !dbg !4699
  br i1 %61, label %69, label %62, !dbg !4700

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4701
  call void @llvm.dbg.value(metadata i8* %63, metadata !4540, metadata !DIExpression()), !dbg !4668
  %64 = bitcast i8* %59 to i32*, !dbg !4701
  %65 = load i32, i32* %64, align 4, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %65, metadata !4612, metadata !DIExpression()), !dbg !4702
  %66 = icmp slt i32 %65, 0, !dbg !4703
  br i1 %66, label %67, label %74, !dbg !4705

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4706
  store i24 %68, i24* %15, align 8, !dbg !4706
  br label %74, !dbg !4708

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4709
  %71 = icmp eq i24 %70, 0, !dbg !4709
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4711
  br label %74, !dbg !4711

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4712
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4682
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8* %77, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %76, metadata !4608, metadata !DIExpression()), !dbg !4682
  store i32 0, i32* %16, align 4, !dbg !4713
  store i32 0, i32* %17, align 8, !dbg !4714
  %78 = lshr i24 %75, 16, !dbg !4712
  call void @llvm.dbg.value(metadata i24 %78, metadata !4615, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4682
  %79 = lshr i24 %75, 11, !dbg !4715
  %80 = and i24 %79, 15, !dbg !4715
  %81 = zext i24 %80 to i32, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %81, metadata !4616, metadata !DIExpression()), !dbg !4682
  %82 = trunc i24 %78 to i3, !dbg !4716
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4716

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4717

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %85, metadata !4540, metadata !DIExpression()), !dbg !4668
  %86 = bitcast i8* %77 to i32*, !dbg !4720
  %87 = load i32, i32* %86, align 4, !dbg !4720
  %88 = sext i32 %87 to i64, !dbg !4720
  store i64 %88, i64* %20, align 8, !dbg !4722
  br label %115, !dbg !4723

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %90, metadata !4540, metadata !DIExpression()), !dbg !4668
  %91 = bitcast i8* %77 to i32*, !dbg !4724
  %92 = load i32, i32* %91, align 4, !dbg !4724
  %93 = sext i32 %92 to i64, !dbg !4724
  store i64 %93, i64* %20, align 8, !dbg !4727
  br label %115, !dbg !4728

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4729
  %96 = add i32 %95, 7, !dbg !4729
  %97 = and i32 %96, -8, !dbg !4729
  %98 = inttoptr i32 %97 to i8*, !dbg !4729
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %99, metadata !4540, metadata !DIExpression()), !dbg !4668
  %100 = inttoptr i32 %97 to i64*, !dbg !4729
  %101 = load i64, i64* %100, align 8, !dbg !4729
  store i64 %101, i64* %20, align 8, !dbg !4730
  br label %115, !dbg !4731

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4732
  %104 = add i32 %103, 7, !dbg !4732
  %105 = and i32 %104, -8, !dbg !4732
  %106 = inttoptr i32 %105 to i8*, !dbg !4732
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %107, metadata !4540, metadata !DIExpression()), !dbg !4668
  %108 = inttoptr i32 %105 to i64*, !dbg !4732
  %109 = load i64, i64* %108, align 8, !dbg !4732
  store i64 %109, i64* %20, align 8, !dbg !4733
  br label %115, !dbg !4734

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %111, metadata !4540, metadata !DIExpression()), !dbg !4668
  %112 = bitcast i8* %77 to i32*, !dbg !4735
  %113 = load i32, i32* %112, align 4, !dbg !4735
  %114 = sext i32 %113 to i64, !dbg !4736
  store i64 %114, i64* %20, align 8, !dbg !4737
  br label %115, !dbg !4738

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4739
  call void @llvm.dbg.value(metadata i8* %117, metadata !4540, metadata !DIExpression()), !dbg !4668
  %118 = trunc i24 %79 to i4, !dbg !4740
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4740

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4741
  %121 = ashr exact i64 %120, 56, !dbg !4741
  store i64 %121, i64* %20, align 8, !dbg !4744
  br label %177, !dbg !4745

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4746
  %124 = ashr exact i64 %123, 48, !dbg !4746
  store i64 %124, i64* %20, align 8, !dbg !4749
  br label %177, !dbg !4750

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4751

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %127, metadata !4540, metadata !DIExpression()), !dbg !4668
  %128 = bitcast i8* %77 to i32*, !dbg !4754
  %129 = load i32, i32* %128, align 4, !dbg !4754
  %130 = zext i32 %129 to i64, !dbg !4754
  store i64 %130, i64* %20, align 8, !dbg !4756
  br label %157, !dbg !4757

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %132, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %132, metadata !4540, metadata !DIExpression()), !dbg !4668
  %133 = bitcast i8* %77 to i32*, !dbg !4758
  %134 = load i32, i32* %133, align 4, !dbg !4758
  %135 = zext i32 %134 to i64, !dbg !4758
  store i64 %135, i64* %20, align 8, !dbg !4758
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4760
  %138 = add i32 %137, 7, !dbg !4760
  %139 = and i32 %138, -8, !dbg !4760
  %140 = inttoptr i32 %139 to i8*, !dbg !4760
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4760
  call void @llvm.dbg.value(metadata i8* %141, metadata !4540, metadata !DIExpression()), !dbg !4668
  %142 = inttoptr i32 %139 to i64*, !dbg !4760
  %143 = load i64, i64* %142, align 8, !dbg !4760
  store i64 %143, i64* %20, align 8, !dbg !4761
  br label %157, !dbg !4762

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4763
  %146 = add i32 %145, 7, !dbg !4763
  %147 = and i32 %146, -8, !dbg !4763
  %148 = inttoptr i32 %147 to i8*, !dbg !4763
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %149, metadata !4540, metadata !DIExpression()), !dbg !4668
  %150 = inttoptr i32 %147 to i64*, !dbg !4763
  %151 = load i64, i64* %150, align 8, !dbg !4763
  store i64 %151, i64* %20, align 8, !dbg !4764
  br label %157, !dbg !4765

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %153, metadata !4540, metadata !DIExpression()), !dbg !4668
  %154 = bitcast i8* %77 to i32*, !dbg !4766
  %155 = load i32, i32* %154, align 4, !dbg !4766
  %156 = zext i32 %155 to i64, !dbg !4767
  store i64 %156, i64* %20, align 8, !dbg !4768
  br label %157, !dbg !4769

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4770
  call void @llvm.dbg.value(metadata i8* %159, metadata !4540, metadata !DIExpression()), !dbg !4668
  %160 = trunc i24 %79 to i4, !dbg !4771
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4771

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4772
  store i64 %162, i64* %20, align 8, !dbg !4775
  br label %177, !dbg !4776

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4777
  store i64 %164, i64* %20, align 8, !dbg !4780
  br label %177, !dbg !4781

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4782
  %167 = add i32 %166, 7, !dbg !4782
  %168 = and i32 %167, -8, !dbg !4782
  %169 = inttoptr i32 %168 to i8*, !dbg !4782
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %170, metadata !4540, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %170, metadata !4540, metadata !DIExpression()), !dbg !4668
  %171 = inttoptr i32 %168 to double*, !dbg !4782
  %172 = load double, double* %171, align 8, !dbg !4782
  store double %172, double* %19, align 8, !dbg !4782
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %174, metadata !4540, metadata !DIExpression()), !dbg !4668
  %175 = bitcast i8* %77 to i8**, !dbg !4786
  %176 = load i8*, i8** %175, align 4, !dbg !4786
  store i8* %176, i8** %18, align 8, !dbg !4789
  br label %177, !dbg !4790

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8* %178, metadata !4540, metadata !DIExpression()), !dbg !4668
  %179 = and i24 %75, 3, !dbg !4791
  %180 = icmp eq i24 %179, 0, !dbg !4791
  br i1 %180, label %185, label %181, !dbg !4791

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %182, metadata !4617, metadata !DIExpression()), !dbg !4793
  %183 = icmp slt i32 %182, 0, !dbg !4794
  %184 = add i32 %182, %29, !dbg !4792
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4796
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4797

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %188, metadata !4621, metadata !DIExpression()), !dbg !4799
  %189 = icmp slt i32 %188, 0, !dbg !4800
  %190 = add i32 %29, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %192, metadata !4609, metadata !DIExpression()), !dbg !4682
  %193 = icmp sgt i32 %76, -1, !dbg !4803
  br i1 %193, label %194, label %196, !dbg !4805

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %195, metadata !4624, metadata !DIExpression()), !dbg !4808
  br label %241, !dbg !4809

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %197, metadata !4624, metadata !DIExpression()), !dbg !4808
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4609, metadata !DIExpression()), !dbg !4682
  %199 = load i64, i64* %20, align 8, !dbg !4812
  %200 = trunc i64 %199 to i8, !dbg !4813
  store i8 %200, i8* %10, align 1, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %23, metadata !4610, metadata !DIExpression()), !dbg !4682
  br label %245, !dbg !4815

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4816
  %203 = icmp eq i24 %202, 0, !dbg !4816
  %204 = trunc i24 %75 to i8, !dbg !4818
  %205 = shl i8 %204, 1, !dbg !4818
  %206 = and i8 %205, 32, !dbg !4818
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4818
  call void @llvm.dbg.value(metadata i8 %207, metadata !4611, metadata !DIExpression()), !dbg !4682
  %208 = load i64, i64* %20, align 8, !dbg !4819
  call void @llvm.dbg.value(metadata i64 %208, metadata !4547, metadata !DIExpression()), !dbg !4668
  %209 = icmp slt i64 %208, 0, !dbg !4820
  br i1 %209, label %210, label %212, !dbg !4822

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4611, metadata !DIExpression()), !dbg !4682
  %211 = sub nsw i64 0, %208, !dbg !4823
  store i64 %211, i64* %20, align 8, !dbg !4825
  br label %212, !dbg !4826

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4682
  call void @llvm.dbg.value(metadata i8 %213, metadata !4611, metadata !DIExpression()), !dbg !4682
  %214 = load i64, i64* %20, align 8, !dbg !4827
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %215, metadata !4609, metadata !DIExpression()), !dbg !4682
  br label %216, !dbg !4829

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4830
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4831
  call void @llvm.dbg.value(metadata i8* %218, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 %217, metadata !4611, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.label(metadata !4667), !dbg !4832
  %219 = icmp sgt i32 %76, -1, !dbg !4833
  br i1 %219, label %222, label %220, !dbg !4834

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4835
  br label %245, !dbg !4834

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4837
  %224 = sub i32 %22, %223, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %224, metadata !4626, metadata !DIExpression()), !dbg !4838
  %225 = load i24, i24* %15, align 8, !dbg !4839
  %226 = and i24 %225, -65, !dbg !4839
  store i24 %226, i24* %15, align 8, !dbg !4839
  %227 = icmp ugt i32 %76, %224, !dbg !4840
  br i1 %227, label %228, label %245, !dbg !4842

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4843
  store i32 %229, i32* %16, align 4, !dbg !4845
  br label %245, !dbg !4846

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4847
  %232 = icmp eq i8* %231, null, !dbg !4849
  br i1 %232, label %245, label %233, !dbg !4850

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4851
  %235 = zext i32 %234 to i64, !dbg !4851
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %236, metadata !4609, metadata !DIExpression()), !dbg !4682
  %237 = load i24, i24* %15, align 8, !dbg !4854
  %238 = or i24 %237, 1048576, !dbg !4854
  store i24 %238, i24* %15, align 8, !dbg !4854
  store i8 120, i8* %21, align 1, !dbg !4855
  br label %216, !dbg !4856

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4857
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4860
  br label %363, !dbg !4861

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4862
  call void @llvm.dbg.value(metadata i32 %242, metadata !4624, metadata !DIExpression()), !dbg !4808
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4863
  call void @llvm.dbg.value(metadata i32 -1, metadata !4608, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %29, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* %192, metadata !4609, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %243, metadata !4610, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 0, metadata !4611, metadata !DIExpression()), !dbg !4682
  %244 = icmp eq i8* %192, null, !dbg !4864
  br i1 %244, label %363, label %245, !dbg !4866, !llvm.loop !4678

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4835
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 0, metadata !4630, metadata !DIExpression()), !dbg !4682
  %250 = zext i8 %249 to i32, !dbg !4867
  %251 = icmp eq i8 %249, 0, !dbg !4869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %252 = icmp sgt i32 %58, 0, !dbg !4870
  br i1 %252, label %253, label %302, !dbg !4871

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4835
  %255 = icmp eq i24 %254, 0, !dbg !4835
  %256 = ptrtoint i8* %248 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %257 = ptrtoint i8* %247 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %258 = xor i1 %251, true, !dbg !4873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %259 = sext i1 %258 to i32, !dbg !4873
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %260 = lshr i24 %246, 19, !dbg !4874
  %261 = and i24 %260, 1, !dbg !4874
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4874
  %263 = zext i24 %262 to i32, !dbg !4874
  %264 = add i32 %257, %259, !dbg !4874
  %265 = add i32 %256, %263, !dbg !4874
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  %266 = and i24 %246, 4194304, !dbg !4875
  %267 = icmp eq i24 %266, 0, !dbg !4875
  %268 = load i32, i32* %16, align 4, !dbg !4877
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %269 = load i32, i32* %17, align 8, !dbg !4878
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4878
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4682
  %271 = add i32 %264, %58, !dbg !4878
  %272 = add i32 %265, %268, !dbg !4878
  %273 = add i32 %272, %270, !dbg !4879
  %274 = sub i32 %271, %273, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %274, metadata !4607, metadata !DIExpression()), !dbg !4682
  %275 = and i24 %246, 4, !dbg !4880
  %276 = icmp eq i24 %275, 0, !dbg !4880
  br i1 %276, label %277, label %302, !dbg !4881

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4631, metadata !DIExpression()), !dbg !4882
  %278 = and i24 %246, 64, !dbg !4883
  %279 = icmp eq i24 %278, 0, !dbg !4883
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4884
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4884
  %282 = select i1 %279, i32 32, i32 48, !dbg !4884
  br i1 %280, label %287, label %283, !dbg !4884

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %284, metadata !4636, metadata !DIExpression()), !dbg !4886
  %285 = icmp slt i32 %284, 0, !dbg !4887
  %286 = add i32 %29, 1, !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4682
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %290, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8 undef, metadata !4631, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8 %288, metadata !4611, metadata !DIExpression()), !dbg !4682
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4889
  %292 = add i32 %291, -1, !dbg !4889
  br label %293, !dbg !4889

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4890
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %295, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %294, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %294, metadata !4607, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  %296 = icmp sgt i32 %294, 0, !dbg !4891
  br i1 %296, label %297, label %302, !dbg !4889

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %298, metadata !4607, metadata !DIExpression()), !dbg !4682
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %299, metadata !4642, metadata !DIExpression()), !dbg !4894
  %300 = icmp slt i32 %299, 0, !dbg !4895
  %301 = add i32 %295, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %300, label %361, label %293, !llvm.loop !4897

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4682
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4682
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %305, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %304, metadata !4607, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 %303, metadata !4611, metadata !DIExpression()), !dbg !4682
  %306 = icmp eq i8 %303, 0, !dbg !4899
  br i1 %306, label %312, label %307, !dbg !4900

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4901
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %309, metadata !4645, metadata !DIExpression()), !dbg !4903
  %310 = icmp slt i32 %309, 0, !dbg !4904
  %311 = add i32 %305, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %313, metadata !4546, metadata !DIExpression()), !dbg !4668
  %314 = lshr i24 %246, 20, !dbg !4906
  %315 = lshr i24 %246, 19, !dbg !4907
  %316 = or i24 %314, %315, !dbg !4908
  %317 = and i24 %316, 1, !dbg !4908
  %318 = icmp eq i24 %317, 0, !dbg !4908
  br i1 %318, label %323, label %319, !dbg !4909

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %320, metadata !4649, metadata !DIExpression()), !dbg !4911
  %321 = icmp slt i32 %320, 0, !dbg !4912
  %322 = add i32 %313, 1, !dbg !4910
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %324, metadata !4546, metadata !DIExpression()), !dbg !4668
  %325 = and i24 %246, 1048576, !dbg !4914
  %326 = icmp eq i24 %325, 0, !dbg !4914
  br i1 %326, label %333, label %327, !dbg !4915

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4916
  %329 = zext i8 %328 to i32, !dbg !4916
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %330, metadata !4655, metadata !DIExpression()), !dbg !4917
  %331 = icmp slt i32 %330, 0, !dbg !4918
  %332 = add i32 %324, 1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %334, metadata !4546, metadata !DIExpression()), !dbg !4668
  %335 = load i32, i32* %16, align 4, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %335, metadata !4630, metadata !DIExpression()), !dbg !4682
  br label %336, !dbg !4921

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4922
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %338, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %337, metadata !4630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4682
  %339 = icmp sgt i32 %337, 0, !dbg !4923
  br i1 %339, label %340, label %345, !dbg !4921

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %341, metadata !4630, metadata !DIExpression()), !dbg !4682
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %342, metadata !4659, metadata !DIExpression()), !dbg !4926
  %343 = icmp slt i32 %342, 0, !dbg !4927
  %344 = add i32 %338, 1, !dbg !4925
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %343, label %361, label %336, !llvm.loop !4929

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %346, metadata !4662, metadata !DIExpression()), !dbg !4932
  %347 = icmp slt i32 %346, 0, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %349, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %304, metadata !4607, metadata !DIExpression()), !dbg !4682
  %350 = icmp sgt i32 %304, 0, !dbg !4935
  br i1 %350, label %351, label %363, !dbg !4936

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4936
  %353 = add i32 %352, %338, !dbg !4936
  br label %354, !dbg !4936

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %355, metadata !4607, metadata !DIExpression()), !dbg !4682
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %356, metadata !4664, metadata !DIExpression()), !dbg !4938
  %357 = icmp slt i32 %356, 0, !dbg !4939
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4941
  call void @llvm.dbg.value(metadata i32 undef, metadata !4546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4668
  call void @llvm.dbg.value(metadata i32 %359, metadata !4607, metadata !DIExpression()), !dbg !4682
  %360 = icmp sgt i32 %355, 1, !dbg !4935
  br i1 %360, label %354, label %363, !dbg !4936, !llvm.loop !4942

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4679
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %364, metadata !4546, metadata !DIExpression()), !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4679
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4944
  ret i32 %366, !dbg !4944
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4945 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4949, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8* %1, metadata !4950, metadata !DIExpression()), !dbg !4951
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4952
  store i24 0, i24* %3, align 4, !dbg !4952
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4952
  store i8 0, i8* %4, align 1, !dbg !4952
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4952
  store i32 0, i32* %5, align 4, !dbg !4952
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4952
  store i32 0, i32* %6, align 4, !dbg !4952
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4953
  call void @llvm.dbg.value(metadata i8* %7, metadata !4950, metadata !DIExpression()), !dbg !4951
  %8 = load i8, i8* %7, align 1, !dbg !4954
  %9 = icmp eq i8 %8, 37, !dbg !4956
  br i1 %9, label %10, label %12, !dbg !4957

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %11, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i8 37, i8* %4, align 1, !dbg !4960
  br label %18, !dbg !4961

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4962
  call void @llvm.dbg.value(metadata i8* %13, metadata !4950, metadata !DIExpression()), !dbg !4951
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4963
  call void @llvm.dbg.value(metadata i8* %14, metadata !4950, metadata !DIExpression()), !dbg !4951
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %15, metadata !4950, metadata !DIExpression()), !dbg !4951
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %16, metadata !4950, metadata !DIExpression()), !dbg !4951
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4966
  call void @llvm.dbg.value(metadata i8* %17, metadata !4950, metadata !DIExpression()), !dbg !4951
  br label %18, !dbg !4967

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4951
  ret i8* %19, !dbg !4968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4969 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4973, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %1, metadata !4974, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %2, metadata !4975, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %3, metadata !4976, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 0, metadata !4977, metadata !DIExpression()), !dbg !4980
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4981

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4982
  call void @llvm.dbg.value(metadata i32 %9, metadata !4977, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %8, metadata !4975, metadata !DIExpression()), !dbg !4980
  %10 = icmp ult i8* %8, %3, !dbg !4983
  br i1 %10, label %11, label %13, !dbg !4984

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4985
  br label %17, !dbg !4984

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4986

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4987
  %16 = icmp eq i8 %15, 0, !dbg !4986
  br i1 %16, label %24, label %17, !dbg !4981

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4985
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %19, metadata !4975, metadata !DIExpression()), !dbg !4980
  %20 = zext i8 %18 to i32, !dbg !4989
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %21, metadata !4978, metadata !DIExpression()), !dbg !4991
  %22 = icmp slt i32 %21, 0, !dbg !4992
  %23 = add i32 %9, 1, !dbg !4994
  call void @llvm.dbg.value(metadata i32 undef, metadata !4977, metadata !DIExpression()), !dbg !4980
  br i1 %22, label %24, label %7, !llvm.loop !4995

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4980
  ret i32 %25, !dbg !4997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4998 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5002, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5003, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %2, metadata !5004, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %3, metadata !5005, metadata !DIExpression()), !dbg !5012
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5013
  %6 = load i8, i8* %5, align 1, !dbg !5013
  %7 = zext i8 %6 to i32, !dbg !5014
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5015
  %9 = icmp eq i32 %8, 0, !dbg !5015
  call void @llvm.dbg.value(metadata i1 %9, metadata !5006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5012
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5016
  call void @llvm.dbg.value(metadata i32 %10, metadata !5007, metadata !DIExpression()), !dbg !5012
  %11 = ptrtoint i8* %3 to i32, !dbg !5017
  %12 = ptrtoint i8* %2 to i32, !dbg !5017
  %13 = sub i32 %11, %12, !dbg !5017
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5018
  call void @llvm.dbg.value(metadata i8* %14, metadata !5009, metadata !DIExpression()), !dbg !5012
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5019

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5012
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5002, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %18, metadata !5009, metadata !DIExpression()), !dbg !5012
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5020
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %25, metadata !5010, metadata !DIExpression()), !dbg !5022
  %26 = icmp ult i32 %25, 10, !dbg !5023
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5024
  %28 = add i32 %27, %25, !dbg !5022
  %29 = trunc i32 %28 to i8, !dbg !5024
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %30, metadata !5009, metadata !DIExpression()), !dbg !5012
  store i8 %29, i8* %30, align 1, !dbg !5026
  call void @llvm.dbg.value(metadata i64 %22, metadata !5002, metadata !DIExpression()), !dbg !5012
  %31 = icmp uge i64 %19, %15, !dbg !5027
  %32 = icmp ugt i8* %30, %2, !dbg !5028
  %33 = and i1 %31, %32, !dbg !5028
  br i1 %33, label %17, label %34, !dbg !5029, !llvm.loop !5030

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5032
  %36 = load i24, i24* %35, align 4, !dbg !5032
  %37 = and i24 %36, 32, !dbg !5032
  %38 = icmp eq i24 %37, 0, !dbg !5032
  br i1 %38, label %44, label %39, !dbg !5034

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5035

40:                                               ; preds = %39
  br label %41, !dbg !5037

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5041
  store i24 %43, i24* %35, align 4, !dbg !5041
  br label %44, !dbg !5042

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5042
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5043 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8* %1, metadata !5050, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i32 %2, metadata !5051, metadata !DIExpression()), !dbg !5052
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5053
  %5 = load i24, i24* %4, align 4, !dbg !5053
  %6 = lshr i24 %5, 11, !dbg !5053
  %7 = and i24 %6, 15, !dbg !5053
  %8 = zext i24 %7 to i32, !dbg !5053
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5054

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5055
  store i32 %2, i32* %10, align 4, !dbg !5057
  br label %28, !dbg !5058

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5059
  store i8 %12, i8* %1, align 1, !dbg !5060
  br label %28, !dbg !5061

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5062
  %15 = bitcast i8* %1 to i16*, !dbg !5063
  store i16 %14, i16* %15, align 2, !dbg !5064
  br label %28, !dbg !5065

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5066
  store i32 %2, i32* %17, align 4, !dbg !5067
  br label %28, !dbg !5068

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5069
  %20 = bitcast i8* %1 to i64*, !dbg !5070
  store i64 %19, i64* %20, align 8, !dbg !5071
  br label %28, !dbg !5072

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5073
  %23 = bitcast i8* %1 to i64*, !dbg !5074
  store i64 %22, i64* %23, align 8, !dbg !5075
  br label %28, !dbg !5076

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5077
  store i32 %2, i32* %25, align 4, !dbg !5078
  br label %28, !dbg !5079

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5080
  store i32 %2, i32* %27, align 4, !dbg !5081
  br label %28, !dbg !5082

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5083
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5087, metadata !DIExpression()), !dbg !5088
  %2 = add i32 %0, -65, !dbg !5089
  %3 = icmp ult i32 %2, 26, !dbg !5090
  %4 = zext i1 %3 to i32, !dbg !5090
  ret i32 %4, !dbg !5091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5092 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5096, metadata !DIExpression()), !dbg !5097
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5098

2:                                                ; preds = %1
  br label %4, !dbg !5099

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5101

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5102
  ret i32 %5, !dbg !5103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5106, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %1, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8 1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5110

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %5, metadata !5107, metadata !DIExpression()), !dbg !5109
  %6 = load i8, i8* %5, align 1, !dbg !5111
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5113

7:                                                ; preds = %4
  br label %11, !dbg !5114

8:                                                ; preds = %4
  br label %11, !dbg !5116

9:                                                ; preds = %4
  br label %11, !dbg !5117

10:                                               ; preds = %4
  br label %11, !dbg !5118

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5119
  %14 = or i24 %13, %12, !dbg !5119
  store i24 %14, i24* %3, align 4, !dbg !5119
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5107, metadata !DIExpression()), !dbg !5109
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %15, metadata !5107, metadata !DIExpression()), !dbg !5109
  %17 = load i24, i24* %3, align 4, !dbg !5120
  %18 = and i24 %17, 68, !dbg !5122
  %19 = icmp eq i24 %18, 68, !dbg !5122
  br i1 %19, label %20, label %22, !dbg !5122

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5123
  store i24 %21, i24* %3, align 4, !dbg !5123
  br label %22, !dbg !5125

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5127 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5129, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5134
  %5 = load i24, i24* %4, align 4, !dbg !5135
  %6 = or i24 %5, 128, !dbg !5135
  store i24 %6, i24* %4, align 4, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  %7 = load i8, i8* %1, align 1, !dbg !5136
  %8 = icmp eq i8 %7, 42, !dbg !5138
  br i1 %8, label %9, label %12, !dbg !5139

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5140
  store i24 %10, i24* %4, align 4, !dbg !5140
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5133
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %11, metadata !5130, metadata !DIExpression()), !dbg !5133
  store i8* %11, i8** %3, align 4, !dbg !5142
  br label %29, !dbg !5143

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5131, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i8** %3, metadata !5130, metadata !DIExpression(DW_OP_deref)), !dbg !5133
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %13, metadata !5132, metadata !DIExpression()), !dbg !5133
  %14 = load i8*, i8** %3, align 4, !dbg !5145
  call void @llvm.dbg.value(metadata i8* %14, metadata !5130, metadata !DIExpression()), !dbg !5133
  %15 = icmp eq i8* %14, %1, !dbg !5147
  br i1 %15, label %29, label %16, !dbg !5148

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5149
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5151
  store i32 %13, i32* %18, align 4, !dbg !5152
  %19 = lshr i32 %13, 31, !dbg !5153
  %20 = lshr i24 %17, 1, !dbg !5154
  %21 = and i24 %20, 1, !dbg !5154
  %22 = zext i24 %21 to i32, !dbg !5154
  %23 = or i32 %19, %22, !dbg !5154
  %24 = trunc i32 %23 to i24, !dbg !5154
  %25 = shl nuw nsw i24 %24, 1, !dbg !5154
  %26 = and i24 %17, -131, !dbg !5154
  %27 = or i24 %26, 128, !dbg !5154
  %28 = or i24 %25, %27, !dbg !5154
  store i24 %28, i24* %4, align 4, !dbg !5154
  br label %29, !dbg !5155

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5133
  ret i8* %30, !dbg !5156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5157 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5159, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5162
  %4 = load i8, i8* %1, align 1, !dbg !5163
  %5 = icmp eq i8 %4, 46, !dbg !5164
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5165
  %7 = load i24, i24* %6, align 4, !dbg !5166
  %8 = select i1 %5, i24 512, i24 0, !dbg !5166
  %9 = and i24 %7, -513, !dbg !5166
  %10 = or i24 %9, %8, !dbg !5166
  store i24 %10, i24* %6, align 4, !dbg !5166
  br i1 %5, label %11, label %32, !dbg !5167

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5160, metadata !DIExpression()), !dbg !5162
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %12, metadata !5160, metadata !DIExpression()), !dbg !5162
  store i8* %12, i8** %3, align 4, !dbg !5168
  %13 = load i8, i8* %12, align 1, !dbg !5169
  %14 = icmp eq i8 %13, 42, !dbg !5171
  br i1 %14, label %15, label %18, !dbg !5172

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5173
  store i24 %16, i24* %6, align 4, !dbg !5173
  call void @llvm.dbg.value(metadata i8* %12, metadata !5160, metadata !DIExpression()), !dbg !5162
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %17, metadata !5160, metadata !DIExpression()), !dbg !5162
  store i8* %17, i8** %3, align 4, !dbg !5175
  br label %32, !dbg !5176

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5160, metadata !DIExpression(DW_OP_deref)), !dbg !5162
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %19, metadata !5161, metadata !DIExpression()), !dbg !5162
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5178
  store i32 %19, i32* %20, align 4, !dbg !5179
  %21 = lshr i32 %19, 31, !dbg !5180
  %22 = load i24, i24* %6, align 4, !dbg !5181
  %23 = lshr i24 %22, 1, !dbg !5181
  %24 = and i24 %23, 1, !dbg !5181
  %25 = zext i24 %24 to i32, !dbg !5181
  %26 = or i32 %21, %25, !dbg !5181
  %27 = trunc i32 %26 to i24, !dbg !5181
  %28 = shl nuw nsw i24 %27, 1, !dbg !5181
  %29 = and i24 %22, -3, !dbg !5181
  %30 = or i24 %28, %29, !dbg !5181
  store i24 %30, i24* %6, align 4, !dbg !5181
  %31 = load i8*, i8** %3, align 4, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %31, metadata !5160, metadata !DIExpression()), !dbg !5162
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5162
  ret i8* %33, !dbg !5183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5184 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5186, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata i8* %1, metadata !5187, metadata !DIExpression()), !dbg !5188
  %3 = load i8, i8* %1, align 1, !dbg !5189
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5190

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %5, metadata !5187, metadata !DIExpression()), !dbg !5188
  %6 = load i8, i8* %5, align 1, !dbg !5194
  %7 = icmp eq i8 %6, 104, !dbg !5195
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5196
  %9 = load i24, i24* %8, align 4, !dbg !5196
  %10 = and i24 %9, -30721, !dbg !5196
  br i1 %7, label %11, label %14, !dbg !5197

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5198
  store i24 %12, i24* %8, align 4, !dbg !5198
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %13, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5201

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5202
  store i24 %15, i24* %8, align 4, !dbg !5202
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %17, metadata !5187, metadata !DIExpression()), !dbg !5188
  %18 = load i8, i8* %17, align 1, !dbg !5206
  %19 = icmp eq i8 %18, 108, !dbg !5207
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5208
  %21 = load i24, i24* %20, align 4, !dbg !5208
  %22 = and i24 %21, -30721, !dbg !5208
  br i1 %19, label %23, label %26, !dbg !5209

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5210
  store i24 %24, i24* %20, align 4, !dbg !5210
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5212
  call void @llvm.dbg.value(metadata i8* %25, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5213

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5214
  store i24 %27, i24* %20, align 4, !dbg !5214
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5216
  %30 = load i24, i24* %29, align 4, !dbg !5217
  %31 = and i24 %30, -30721, !dbg !5217
  %32 = or i24 %31, 10240, !dbg !5217
  store i24 %32, i24* %29, align 4, !dbg !5217
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %33, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5219

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5220
  %36 = load i24, i24* %35, align 4, !dbg !5221
  %37 = and i24 %36, -30721, !dbg !5221
  %38 = or i24 %37, 12288, !dbg !5221
  store i24 %38, i24* %35, align 4, !dbg !5221
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %39, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5223

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5224
  %42 = load i24, i24* %41, align 4, !dbg !5225
  %43 = and i24 %42, -30721, !dbg !5225
  %44 = or i24 %43, 14336, !dbg !5225
  store i24 %44, i24* %41, align 4, !dbg !5225
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %45, metadata !5187, metadata !DIExpression()), !dbg !5188
  br label %56, !dbg !5227

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5228
  %48 = load i24, i24* %47, align 4, !dbg !5229
  %49 = and i24 %48, -30723, !dbg !5229
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %50, metadata !5187, metadata !DIExpression()), !dbg !5188
  %51 = or i24 %49, 16386, !dbg !5231
  store i24 %51, i24* %47, align 4, !dbg !5231
  br label %56, !dbg !5232

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5233
  %54 = load i24, i24* %53, align 4, !dbg !5234
  %55 = and i24 %54, -30721, !dbg !5234
  store i24 %55, i24* %53, align 4, !dbg !5234
  br label %56, !dbg !5235

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5187, metadata !DIExpression()), !dbg !5188
  ret i8* %57, !dbg !5236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5237 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5239, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %1, metadata !5240, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8 0, metadata !5241, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %1, metadata !5240, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5244
  %3 = load i8, i8* %1, align 1, !dbg !5245
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5246
  store i8 %3, i8* %4, align 1, !dbg !5247
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5248

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5249

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5250
  %9 = load i24, i24* %8, align 4, !dbg !5250
  %10 = and i24 %9, -458753, !dbg !5250
  %11 = or i24 %10, %7, !dbg !5250
  call void @llvm.dbg.label(metadata !5242), !dbg !5251
  %12 = and i24 %9, 30720, !dbg !5252
  %13 = icmp eq i24 %12, 16384, !dbg !5252
  %14 = zext i1 %13 to i24, !dbg !5254
  %15 = or i24 %11, %14, !dbg !5254
  %16 = icmp eq i8 %3, 99, !dbg !5255
  br i1 %16, label %17, label %43, !dbg !5257

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5258
  %19 = icmp ne i24 %18, 0, !dbg !5258
  call void @llvm.dbg.value(metadata i1 %19, metadata !5241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5244
  br label %43, !dbg !5260

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5261
  %22 = load i24, i24* %21, align 4, !dbg !5262
  %23 = and i24 %22, -458753, !dbg !5262
  %24 = or i24 %23, 262144, !dbg !5262
  call void @llvm.dbg.value(metadata i8 1, metadata !5241, metadata !DIExpression()), !dbg !5244
  br label %43, !dbg !5263

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %27 = load i24, i24* %26, align 4, !dbg !5267
  %28 = and i24 %27, -458753, !dbg !5267
  %29 = or i24 %28, 196608, !dbg !5267
  %30 = and i24 %27, 30720, !dbg !5268
  %31 = icmp eq i24 %30, 16384, !dbg !5268
  br label %43, !dbg !5270

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  %34 = load i24, i24* %33, align 4, !dbg !5272
  %35 = and i24 %34, -458753, !dbg !5272
  %36 = or i24 %35, 196608, !dbg !5272
  %37 = and i24 %34, 30720, !dbg !5273
  %38 = icmp ne i24 %37, 0, !dbg !5273
  br label %43, !dbg !5275

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5276
  %41 = load i24, i24* %40, align 4, !dbg !5277
  %42 = or i24 %41, 1, !dbg !5277
  br label %43, !dbg !5278

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5279
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5280
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %48, metadata !5240, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8 poison, metadata !5241, metadata !DIExpression()), !dbg !5244
  %49 = lshr i24 %44, 1, !dbg !5279
  %50 = and i24 %49, 1, !dbg !5279
  %51 = zext i24 %50 to i32, !dbg !5279
  %52 = or i32 %51, %47, !dbg !5279
  %53 = trunc i32 %52 to i24, !dbg !5279
  %54 = shl nuw nsw i24 %53, 1, !dbg !5279
  %55 = and i24 %44, -3, !dbg !5279
  %56 = or i24 %54, %55, !dbg !5279
  store i24 %56, i24* %46, align 4, !dbg !5279
  ret i8* %48, !dbg !5282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5283 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5288, metadata !DIExpression()), !dbg !5291
  %2 = load i8*, i8** %0, align 4, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %2, metadata !5289, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i32 0, metadata !5290, metadata !DIExpression()), !dbg !5291
  %3 = load i8, i8* %2, align 1, !dbg !5293
  %4 = zext i8 %3 to i32, !dbg !5294
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5295
  %6 = icmp eq i32 %5, 0, !dbg !5296
  br i1 %6, label %19, label %7, !dbg !5296

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5290, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8* %10, metadata !5289, metadata !DIExpression()), !dbg !5291
  %11 = mul i32 %9, 10, !dbg !5297
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %12, metadata !5289, metadata !DIExpression()), !dbg !5291
  %13 = add i32 %11, -48, !dbg !5300
  %14 = add i32 %13, %8, !dbg !5301
  call void @llvm.dbg.value(metadata i32 %14, metadata !5290, metadata !DIExpression()), !dbg !5291
  %15 = load i8, i8* %12, align 1, !dbg !5293
  %16 = zext i8 %15 to i32, !dbg !5294
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5295
  %18 = icmp eq i32 %17, 0, !dbg !5296
  br i1 %18, label %19, label %7, !dbg !5296, !llvm.loop !5302

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5291
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5291
  store i8* %20, i8** %0, align 4, !dbg !5304
  ret i32 %21, !dbg !5305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5308, metadata !DIExpression()), !dbg !5309
  %2 = add i32 %0, -48, !dbg !5310
  %3 = icmp ult i32 %2, 10, !dbg !5311
  %4 = zext i1 %3 to i32, !dbg !5311
  ret i32 %4, !dbg !5312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5313 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5857, !srcloc !5858
  ret void, !dbg !5859
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5860 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5862, metadata !DIExpression()), !dbg !5864
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5865, !srcloc !5874
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5865
  call void @llvm.dbg.value(metadata i32 %3, metadata !5871, metadata !DIExpression()) #25, !dbg !5875
  call void @llvm.dbg.value(metadata i32 undef, metadata !5872, metadata !DIExpression()) #25, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %3, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.value(metadata i32 %3, metadata !5876, metadata !DIExpression()) #25, !dbg !5881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5883, !srcloc !5884
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5885
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !5886
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !5887
  ret i32 0, !dbg !5888
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !5889 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5894, metadata !DIExpression()), !dbg !5896
  %2 = bitcast i32* %1 to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5897
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5895, metadata !DIExpression()), !dbg !5898
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5899
  %4 = or i32 %3, 268435456, !dbg !5899
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5899
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5900
  %6 = and i32 %5, 268435456, !dbg !5900
  store volatile i32 %6, i32* %1, align 4, !dbg !5901
  %7 = load volatile i32, i32* %1, align 4, !dbg !5902
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5903
  ret void, !dbg !5903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !5904 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5907, metadata !DIExpression()), !dbg !5908
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5909
  %2 = and i32 %1, -6145, !dbg !5909
  %3 = or i32 %2, 2048, !dbg !5909
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5909
  ret void, !dbg !5910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5913, metadata !DIExpression()), !dbg !5914
  ret i32 0, !dbg !5915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5965, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5966, metadata !DIExpression()), !dbg !5967
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5987, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5988, metadata !DIExpression()), !dbg !5990
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5991
  %4 = load i32, i32* %3, align 4, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %4, metadata !5989, metadata !DIExpression()), !dbg !5990
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !5992
  ret void, !dbg !5993
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5994 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5998, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8* %0, metadata !5999, metadata !DIExpression()), !dbg !6001
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6002
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6002
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6000, metadata !DIExpression()), !dbg !6003
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6003
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6004
  %5 = bitcast i8* %4 to i32*, !dbg !6004
  %6 = load i32, i32* %5, align 4, !dbg !6004
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6005
  store i32 %6, i32* %7, align 4, !dbg !6006
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6007
  unreachable, !dbg !6008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6012, metadata !DIExpression()), !dbg !6013
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6014
  ret void, !dbg !6015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6021
  %2 = icmp sgt i32 %0, -1, !dbg !6022
  br i1 %2, label %3, label %8, !dbg !6024

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6025, !srcloc !6027
  %4 = and i32 %0, 31, !dbg !6028
  %5 = shl nuw i32 1, %4, !dbg !6029
  %6 = lshr i32 %0, 5, !dbg !6030
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6031
  store volatile i32 %5, i32* %7, align 4, !dbg !6032
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6033, !srcloc !6034
  br label %8, !dbg !6035

8:                                                ; preds = %3, %1
  ret void, !dbg !6036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6039, metadata !DIExpression()), !dbg !6040
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6041
  ret void, !dbg !6042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6045, metadata !DIExpression()), !dbg !6046
  %2 = icmp sgt i32 %0, -1, !dbg !6047
  br i1 %2, label %3, label %8, !dbg !6049

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6050
  %5 = shl nuw i32 1, %4, !dbg !6052
  %6 = lshr i32 %0, 5, !dbg !6053
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6054
  store volatile i32 %5, i32* %7, align 4, !dbg !6055
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6056, !srcloc !6060
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6061, !srcloc !6064
  br label %8, !dbg !6065

8:                                                ; preds = %3, %1
  ret void, !dbg !6066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !6067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6071, metadata !DIExpression()), !dbg !6072
  %2 = lshr i32 %0, 5, !dbg !6073
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6074
  %4 = load volatile i32, i32* %3, align 4, !dbg !6074
  %5 = and i32 %0, 31, !dbg !6075
  %6 = shl nuw i32 1, %5, !dbg !6075
  %7 = and i32 %4, %6, !dbg !6076
  ret i32 %7, !dbg !6077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !6078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6082, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata i32 %1, metadata !6083, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata i32 %2, metadata !6084, metadata !DIExpression()), !dbg !6085
  %4 = add i32 %1, 1, !dbg !6086
  call void @llvm.dbg.value(metadata i32 %4, metadata !6083, metadata !DIExpression()), !dbg !6085
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6089
  ret void, !dbg !6090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !6091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %1, metadata !6096, metadata !DIExpression()), !dbg !6097
  %3 = trunc i32 %1 to i8, !dbg !6098
  %4 = shl i8 %3, 4, !dbg !6098
  %5 = and i32 %0, 15, !dbg !6100
  %6 = add nsw i32 %5, -4, !dbg !6100
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6100
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6100
  %9 = icmp slt i32 %0, 0, !dbg !6100
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6100
  store volatile i8 %4, i8* %10, align 1, !dbg !6098
  ret void, !dbg !6101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6104, metadata !DIExpression()), !dbg !6105
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6106
  ret void, !dbg !6107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6108 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6110
  tail call void @z_arm_int_exit() #27, !dbg !6111
  ret void, !dbg !6112
}

; Function Attrs: optsize
declare !dbg !6113 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6114 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6116 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6118
  tail call void @z_bss_zero() #27, !dbg !6119
  tail call void @z_data_copy() #27, !dbg !6120
  tail call void @z_arm_interrupt_init() #27, !dbg !6121
  tail call void @z_cstart() #29, !dbg !6122
  unreachable, !dbg !6122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6123 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6124
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6125, !srcloc !6128
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6129, !srcloc !6132
  ret void, !dbg !6133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6137, metadata !DIExpression()), !dbg !6138
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6139
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6140
  store i32 %0, i32* %3, align 4, !dbg !6141
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6142
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6143
  store i32 %4, i32* %5, align 4, !dbg !6144
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6145
  %7 = or i32 %6, 268435456, !dbg !6145
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6145
  call void @llvm.dbg.value(metadata i32 0, metadata !6146, metadata !DIExpression()) #25, !dbg !6149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6151, !srcloc !6152
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6153
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6154
  %10 = load i32, i32* %9, align 4, !dbg !6154
  ret i32 %10, !dbg !6155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6266, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6267, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %2, metadata !6268, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6269, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %4, metadata !6270, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %5, metadata !6271, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %6, metadata !6272, metadata !DIExpression()), !dbg !6274
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6275
  call void @llvm.dbg.value(metadata i8* %8, metadata !6273, metadata !DIExpression()), !dbg !6274
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6276
  %10 = bitcast i8* %9 to i32*, !dbg !6276
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6277
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6278
  %12 = bitcast i8* %8 to i32*, !dbg !6279
  store i32 %11, i32* %12, align 4, !dbg !6280
  %13 = ptrtoint i8* %4 to i32, !dbg !6281
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6282
  %15 = bitcast i8* %14 to i32*, !dbg !6282
  store i32 %13, i32* %15, align 4, !dbg !6283
  %16 = ptrtoint i8* %5 to i32, !dbg !6284
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6285
  %18 = bitcast i8* %17 to i32*, !dbg !6285
  store i32 %16, i32* %18, align 4, !dbg !6286
  %19 = ptrtoint i8* %6 to i32, !dbg !6287
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6288
  %21 = bitcast i8* %20 to i32*, !dbg !6288
  store i32 %19, i32* %21, align 4, !dbg !6289
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6290
  %23 = bitcast i8* %22 to i32*, !dbg !6290
  store i32 16777216, i32* %23, align 4, !dbg !6291
  %24 = ptrtoint i8* %8 to i32, !dbg !6292
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6293
  store i32 %24, i32* %25, align 8, !dbg !6294
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6295
  store i32 0, i32* %26, align 4, !dbg !6296
  ret void, !dbg !6297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6303, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %1, metadata !6304, metadata !DIExpression()), !dbg !6309
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6310
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6305, metadata !DIExpression()), !dbg !6309
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6311
  br i1 %4, label %19, label %5, !dbg !6313

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6308, metadata !DIExpression()), !dbg !6309
  %6 = icmp eq i32 %0, -22, !dbg !6314
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6314
  %8 = load i32, i32* %7, align 4, !dbg !6314
  br i1 %6, label %16, label %9, !dbg !6316

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6314
  %11 = icmp ule i32 %10, %0, !dbg !6314
  %12 = icmp ugt i32 %8, %0, !dbg !6314
  %13 = and i1 %12, %11, !dbg !6314
  %14 = icmp ugt i32 %8, %1, !dbg !6314
  %15 = and i1 %14, %13, !dbg !6314
  br i1 %15, label %18, label %19, !dbg !6314

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6314
  br i1 %17, label %18, label %19, !dbg !6316

18:                                               ; preds = %9, %16
  br label %19, !dbg !6317

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6309
  ret i32 %20, !dbg !6319
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6324, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %1, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6328
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6329
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6330, !srcloc !6331
  unreachable, !dbg !6332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6333 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6351, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %1, metadata !6352, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %2, metadata !6353, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6354, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 0, metadata !6355, metadata !DIExpression()), !dbg !6361
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6362
  %9 = and i32 %8, 511, !dbg !6363
  call void @llvm.dbg.value(metadata i32 %9, metadata !6356, metadata !DIExpression()), !dbg !6361
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6364
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6364
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6365
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6360, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 0, metadata !6367, metadata !DIExpression()) #25, !dbg !6370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6372, !srcloc !6373
  call void @llvm.dbg.value(metadata i8* %6, metadata !6358, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %5, metadata !6357, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %12, metadata !6355, metadata !DIExpression()), !dbg !6361
  %13 = load i8, i8* %5, align 1, !dbg !6376, !range !6378
  call void @llvm.dbg.value(metadata i8 %13, metadata !6357, metadata !DIExpression()), !dbg !6361
  %14 = icmp eq i8 %13, 0, !dbg !6376
  br i1 %14, label %15, label %32, !dbg !6379

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6380
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6381
  %18 = load i8, i8* %6, align 1, !dbg !6382, !range !6378
  call void @llvm.dbg.value(metadata i8 %18, metadata !6358, metadata !DIExpression()), !dbg !6361
  %19 = icmp eq i8 %18, 0, !dbg !6382
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6384
  %21 = load i32, i32* %20, align 4, !dbg !6384
  br i1 %19, label %27, label %22, !dbg !6385

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6386
  %24 = icmp eq i32 %23, 0, !dbg !6389
  br i1 %24, label %25, label %31, !dbg !6390

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6391
  br label %29, !dbg !6393

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6394
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6384
  br label %31, !dbg !6396

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6396
  br label %32, !dbg !6397

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6397
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6397
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6397
  ret void, !dbg !6397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %1, metadata !6404, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %2, metadata !6405, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i8* %3, metadata !6406, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i8 0, metadata !6407, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6408, metadata !DIExpression()), !dbg !6409
  store i8 0, i8* %3, align 1, !dbg !6410
  %5 = icmp ult i32 %2, -16777216, !dbg !6411
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6413
  br i1 %8, label %16, label %9, !dbg !6413

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6414
  %11 = icmp eq i32 %10, 0, !dbg !6414
  br i1 %11, label %12, label %13, !dbg !6416

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  store i8 1, i8* %3, align 1, !dbg !6419
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6408, metadata !DIExpression()), !dbg !6409
  br label %16, !dbg !6422

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6409
  ret %struct.__esf* %17, !dbg !6423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6424 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6428, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 %1, metadata !6429, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %2, metadata !6430, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  store i8 0, i8* %2, align 1, !dbg !6433
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6434

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6435
  call void @llvm.dbg.value(metadata i32 %5, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6437

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %7, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6439

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6440
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6441

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6443

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6444
  br label %11, !dbg !6445

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6447 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6451, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata i8* %1, metadata !6452, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  store i8 0, i8* %1, align 1, !dbg !6455
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6456
  %4 = and i32 %3, 2, !dbg !6458
  %5 = icmp eq i32 %4, 0, !dbg !6459
  br i1 %5, label %6, label %33, !dbg !6460

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6461
  %8 = icmp sgt i32 %7, -1, !dbg !6463
  br i1 %8, label %9, label %33, !dbg !6464

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6465
  %11 = and i32 %10, 1073741824, !dbg !6467
  %12 = icmp eq i32 %11, 0, !dbg !6468
  br i1 %12, label %33, label %13, !dbg !6469

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6470
  br i1 %14, label %15, label %18, !dbg !6473

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6474
  %17 = load i32, i32* %16, align 4, !dbg !6474
  call void @llvm.dbg.value(metadata i32 %17, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6476

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6477
  %20 = and i32 %19, 255, !dbg !6479
  %21 = icmp eq i32 %20, 0, !dbg !6480
  br i1 %21, label %24, label %22, !dbg !6481

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %23, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6484

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6485
  %26 = and i32 %25, 65280, !dbg !6487
  %27 = icmp eq i32 %26, 0, !dbg !6488
  br i1 %27, label %29, label %28, !dbg !6489

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6490
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6492

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6493
  %31 = icmp ult i32 %30, 65536, !dbg !6495
  br i1 %31, label %33, label %32, !dbg !6496

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6497
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6499

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6454
  call void @llvm.dbg.value(metadata i32 %34, metadata !6453, metadata !DIExpression()), !dbg !6454
  ret i32 %34, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6503, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 %1, metadata !6504, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i8* %2, metadata !6505, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6506, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 -22, metadata !6507, metadata !DIExpression()), !dbg !6516
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6517
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6519
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6521
  %7 = and i32 %6, 2, !dbg !6522
  %8 = icmp eq i32 %7, 0, !dbg !6523
  br i1 %8, label %19, label %9, !dbg !6524

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %10, metadata !6508, metadata !DIExpression()), !dbg !6526
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6527
  %12 = and i32 %11, 128, !dbg !6529
  %13 = icmp eq i32 %12, 0, !dbg !6530
  br i1 %13, label %19, label %14, !dbg !6531

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6507, metadata !DIExpression()), !dbg !6516
  %15 = icmp eq i32 %1, 0, !dbg !6532
  br i1 %15, label %19, label %16, !dbg !6535

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6536
  %18 = and i32 %17, -129, !dbg !6536
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6536
  br label %19, !dbg !6538

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6516
  call void @llvm.dbg.value(metadata i32 %20, metadata !6507, metadata !DIExpression()), !dbg !6516
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6541
  %23 = and i32 %22, 16, !dbg !6542
  %24 = icmp eq i32 %23, 0, !dbg !6542
  br i1 %24, label %25, label %29, !dbg !6543

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6544
  %27 = and i32 %26, 2, !dbg !6545
  %28 = icmp eq i32 %27, 0, !dbg !6545
  br i1 %28, label %38, label %29, !dbg !6546

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6547
  %31 = and i32 %30, 2048, !dbg !6548
  %32 = icmp eq i32 %31, 0, !dbg !6548
  br i1 %32, label %38, label %33, !dbg !6549

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !6550
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #27, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %35, metadata !6511, metadata !DIExpression()), !dbg !6552
  %36 = icmp eq i32 %35, 0, !dbg !6553
  br i1 %36, label %38, label %37, !dbg !6555

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !6556, metadata !DIExpression()) #25, !dbg !6559
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #25, !dbg !6562, !srcloc !6563
  call void @llvm.dbg.value(metadata i32 2, metadata !6506, metadata !DIExpression()), !dbg !6516
  br label %38, !dbg !6564

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !6516
  call void @llvm.dbg.value(metadata i32 %39, metadata !6506, metadata !DIExpression()), !dbg !6516
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6565
  %41 = or i32 %40, 255, !dbg !6565
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6565
  store i8 0, i8* %2, align 1, !dbg !6566
  ret i32 %39, !dbg !6567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !6568 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6572, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 %0, metadata !6573, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 0, metadata !6575, metadata !DIExpression()), !dbg !6579
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6580
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6582
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6584
  %6 = and i32 %5, 512, !dbg !6585
  %7 = icmp eq i32 %6, 0, !dbg !6585
  br i1 %7, label %18, label %8, !dbg !6586

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6587
  call void @llvm.dbg.value(metadata i32 %9, metadata !6576, metadata !DIExpression()), !dbg !6588
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6589
  %11 = and i32 %10, 32768, !dbg !6591
  %12 = icmp ne i32 %11, 0, !dbg !6592
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6593
  br i1 %14, label %15, label %18, !dbg !6593

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6594
  %17 = and i32 %16, -32769, !dbg !6594
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6594
  br label %18, !dbg !6598

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6599
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6601
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6603
  %22 = or i32 %21, 65280, !dbg !6603
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6603
  store i8 0, i8* %1, align 1, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #16 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6612, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i32 0, metadata !6613, metadata !DIExpression()), !dbg !6614
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6615
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6617
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6619
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6621
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6623
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6625
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6627
  %8 = or i32 %7, -65536, !dbg !6627
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6627
  ret void, !dbg !6628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6629 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6633, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.value(metadata i8* %0, metadata !6634, metadata !DIExpression()), !dbg !6635
  store i8 0, i8* %0, align 1, !dbg !6636
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6638 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6642, metadata !DIExpression()), !dbg !6645
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6646
  %3 = load i32, i32* %2, align 4, !dbg !6646
  %4 = inttoptr i32 %3 to i16*, !dbg !6647
  call void @llvm.dbg.value(metadata i16* %4, metadata !6643, metadata !DIExpression()), !dbg !6645
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6648
  %6 = or i32 %5, 256, !dbg !6648
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6648
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6649, !srcloc !6652
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6653, !srcloc !6656
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6657
  %8 = load i16, i16* %7, align 2, !dbg !6658
  call void @llvm.dbg.value(metadata i16 %8, metadata !6644, metadata !DIExpression()), !dbg !6645
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6659
  %10 = and i32 %9, -257, !dbg !6659
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6659
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6660, !srcloc !6652
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6662, !srcloc !6656
  %11 = icmp eq i16 %8, -8446, !dbg !6664
  ret i1 %11, !dbg !6666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !6667 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6668
  %2 = or i32 %1, 16, !dbg !6668
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6668
  ret void, !dbg !6669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !6670 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6673, metadata !DIExpression()), !dbg !6674
  br label %1, !dbg !6675

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6673, metadata !DIExpression()), !dbg !6674
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6677
  %3 = add nuw nsw i32 %2, 1, !dbg !6680
  call void @llvm.dbg.value(metadata i32 %3, metadata !6673, metadata !DIExpression()), !dbg !6674
  %4 = icmp eq i32 %3, 45, !dbg !6681
  br i1 %4, label %5, label %1, !dbg !6675, !llvm.loop !6682

5:                                                ; preds = %1
  ret void, !dbg !6684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #16 !dbg !6685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6687, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.value(metadata i32 1, metadata !6688, metadata !DIExpression()), !dbg !6689
  %2 = and i32 %0, 15, !dbg !6690
  %3 = add nsw i32 %2, -4, !dbg !6690
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6690
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6690
  %6 = icmp slt i32 %0, 0, !dbg !6690
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6690
  store volatile i8 16, i8* %7, align 1, !dbg !6691
  ret void, !dbg !6693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6800, metadata !DIExpression()), !dbg !6801
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6802
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6804
  br i1 %3, label %4, label %12, !dbg !6805

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6806, !srcloc !6820
  call void @llvm.dbg.value(metadata i32 %5, metadata !6811, metadata !DIExpression()) #25, !dbg !6821
  %6 = icmp eq i32 %5, 0, !dbg !6822
  br i1 %6, label %12, label %7, !dbg !6823

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6824
  %9 = or i32 %8, 268435456, !dbg !6824
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6824
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6826
  %11 = and i32 %10, -32769, !dbg !6826
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6826
  br label %12, !dbg !6827

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6830 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !366 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !483, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i8 0, metadata !484, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i32 64, metadata !486, metadata !DIExpression()), !dbg !6833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6834
  %3 = load i32, i32* %2, align 4, !dbg !6834
  %4 = add i32 %3, -64, !dbg !6836
  call void @llvm.dbg.value(metadata i32 %4, metadata !485, metadata !DIExpression()), !dbg !6833
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6837
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6838
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6839
  call void @llvm.dbg.value(metadata i8 1, metadata !484, metadata !DIExpression()), !dbg !6833
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6840
  ret void, !dbg !6841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6842 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6843
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6844, !srcloc !6847
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6848, !srcloc !6851
  ret void, !dbg !6852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6853 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6854, !srcloc !6857
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !6860 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6875, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i8 %1, metadata !6876, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32 %2, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32 %3, metadata !6878, metadata !DIExpression()), !dbg !6879
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6880
  ret void, !dbg !6882
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6883 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6888, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i8 %1, metadata !6889, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 undef, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 undef, metadata !6891, metadata !DIExpression()), !dbg !6893
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6894
  call void @llvm.dbg.value(metadata i8 %3, metadata !6892, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6893
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %4, metadata !6892, metadata !DIExpression()), !dbg !6893
  %5 = trunc i32 %4 to i8, !dbg !6896
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6897
  ret void, !dbg !6898
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6899 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8 %1, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8 %2, metadata !6905, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i1 %3, metadata !6906, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6909
  %5 = zext i8 %2 to i32, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %5, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 0, metadata !6907, metadata !DIExpression()), !dbg !6909
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 0, metadata !6907, metadata !DIExpression()), !dbg !6909
  %7 = icmp eq i8 %1, 0, !dbg !6911
  br i1 %7, label %29, label %8, !dbg !6914

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %10, metadata !6907, metadata !DIExpression()), !dbg !6909
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6915
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6918
  %13 = load i32, i32* %12, align 4, !dbg !6918
  %14 = icmp eq i32 %13, 0, !dbg !6919
  br i1 %14, label %25, label %15, !dbg !6920

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6921

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6923
  %18 = icmp eq i32 %17, 0, !dbg !6923
  br i1 %18, label %29, label %19, !dbg !6924

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6925
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6926
  call void @llvm.dbg.value(metadata i32 %21, metadata !6908, metadata !DIExpression()), !dbg !6909
  %22 = icmp eq i32 %21, -22, !dbg !6927
  br i1 %22, label %29, label %23, !dbg !6929

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6930
  call void @llvm.dbg.value(metadata i32 %24, metadata !6908, metadata !DIExpression()), !dbg !6909
  br label %25, !dbg !6931

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6909
  call void @llvm.dbg.value(metadata i32 %26, metadata !6908, metadata !DIExpression()), !dbg !6909
  %27 = add nuw nsw i32 %10, 1, !dbg !6932
  call void @llvm.dbg.value(metadata i32 %27, metadata !6907, metadata !DIExpression()), !dbg !6909
  %28 = icmp eq i32 %27, %6, !dbg !6911
  br i1 %28, label %29, label %8, !dbg !6914, !llvm.loop !6933

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6909
  ret i32 %30, !dbg !6935
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6936 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6940, metadata !DIExpression()), !dbg !6942
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6943
  %3 = load i32, i32* %2, align 4, !dbg !6943
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6944, !range !3964
  %5 = icmp ult i32 %4, 2, !dbg !6944
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6945
  br i1 %7, label %8, label %15, !dbg !6945

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6946
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6947
  %11 = load i32, i32* %10, align 4, !dbg !6947
  %12 = and i32 %11, %9, !dbg !6948
  %13 = icmp eq i32 %12, 0, !dbg !6949
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6941, metadata !DIExpression()), !dbg !6942
  ret i32 %16, !dbg !6950
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6951 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6955, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6956, metadata !DIExpression()), !dbg !6958
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6959
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6959
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6957, metadata !DIExpression()), !dbg !6960
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6961
  %6 = load i32, i32* %5, align 4, !dbg !6961
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6962
  store i32 %6, i32* %7, align 4, !dbg !6963
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6964
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6965
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6966
  %11 = load i32, i32* %10, align 4, !dbg !6966
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !6967
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !6968
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6969
  ret i32 %12, !dbg !6970
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6971 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6978, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6979, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 undef, metadata !6980, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %2, metadata !6981, metadata !DIExpression()), !dbg !6982
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6983
  %5 = load i32, i32* %4, align 4, !dbg !6983
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !6984
  %7 = or i32 %6, %5, !dbg !6985
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6986
  store i32 %7, i32* %8, align 4, !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !6989 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6993, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6994, metadata !DIExpression()), !dbg !6995
  %3 = zext i8 %0 to i32, !dbg !6996
  %4 = icmp ugt i8 %0, 7, !dbg !6998
  br i1 %4, label %6, label %5, !dbg !6999

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7000
  br label %6, !dbg !7001

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6995
  ret i32 %7, !dbg !7002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7007, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7008, metadata !DIExpression()), !dbg !7009
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7010
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7011
  %4 = load i32, i32* %3, align 4, !dbg !7011
  %5 = and i32 %4, -32, !dbg !7012
  %6 = or i32 %5, %0, !dbg !7013
  %7 = or i32 %6, 16, !dbg !7013
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7014
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7015
  %9 = load i32, i32* %8, align 4, !dbg !7015
  %10 = or i32 %9, 1, !dbg !7016
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7017
  ret void, !dbg !7018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !7019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7022, metadata !DIExpression()), !dbg !7023
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7024
  ret void, !dbg !7025
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7030, metadata !DIExpression()), !dbg !7031
  %2 = icmp ult i32 %0, 33, !dbg !7032
  br i1 %2, label %11, label %3, !dbg !7034

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7035
  br i1 %4, label %11, label %5, !dbg !7037

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7038
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7039, !range !3964
  %8 = mul nsw i32 %7, -2, !dbg !7040
  %9 = add nsw i32 %8, 62, !dbg !7040
  %10 = and i32 %9, 62, !dbg !7041
  br label %11, !dbg !7042

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7031
  ret i32 %12, !dbg !7043
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !7044 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8 %1, metadata !7049, metadata !DIExpression()), !dbg !7050
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7051
  ret void, !dbg !7053
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7054 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7058, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8 %1, metadata !7059, metadata !DIExpression()), !dbg !7065
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7066
  call void @llvm.dbg.value(metadata i8 %3, metadata !7060, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7065
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %4, metadata !7060, metadata !DIExpression()), !dbg !7065
  %5 = icmp ne i32 %4, -22, !dbg !7068
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7069
  call void @llvm.dbg.value(metadata i32 %4, metadata !7061, metadata !DIExpression()), !dbg !7070
  br i1 %7, label %8, label %12, !dbg !7069

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7061, metadata !DIExpression()), !dbg !7070
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7071
  %10 = add i32 %9, 1, !dbg !7074
  call void @llvm.dbg.value(metadata i32 %10, metadata !7061, metadata !DIExpression()), !dbg !7070
  %11 = icmp eq i32 %10, 8, !dbg !7075
  br i1 %11, label %12, label %8, !dbg !7076, !llvm.loop !7077

12:                                               ; preds = %8, %2
  ret void, !dbg !7079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !7080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7083, metadata !DIExpression()), !dbg !7084
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7085
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7086
  ret void, !dbg !7087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7088 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7093
  %2 = icmp ugt i32 %1, 8, !dbg !7095
  br i1 %2, label %14, label %3, !dbg !7096

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7097
  call void @llvm.dbg.value(metadata i32 0, metadata !7092, metadata !DIExpression()), !dbg !7098
  %4 = icmp eq i32 %1, 0, !dbg !7099
  br i1 %4, label %12, label %5, !dbg !7102

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7102

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7092, metadata !DIExpression()), !dbg !7098
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7103
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7105
  %10 = add nuw i32 %8, 1, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %10, metadata !7092, metadata !DIExpression()), !dbg !7098
  %11 = icmp eq i32 %10, %1, !dbg !7099
  br i1 %11, label %12, label %7, !dbg !7102, !llvm.loop !7107

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7109
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7110
  tail call void @arm_core_mpu_enable() #26, !dbg !7111
  br label %14, !dbg !7112

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7098
  ret i32 %15, !dbg !7113
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7121, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i8* %1, metadata !7122, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i8* %0, metadata !7123, metadata !DIExpression()), !dbg !7124
  %3 = load i8, i8* %1, align 1, !dbg !7125
  %4 = icmp eq i8 %3, 0, !dbg !7126
  br i1 %4, label %13, label %5, !dbg !7127

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7121, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i8* %8, metadata !7122, metadata !DIExpression()), !dbg !7124
  store i8 %6, i8* %7, align 1, !dbg !7128
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7130
  call void @llvm.dbg.value(metadata i8* %9, metadata !7121, metadata !DIExpression()), !dbg !7124
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7131
  call void @llvm.dbg.value(metadata i8* %10, metadata !7122, metadata !DIExpression()), !dbg !7124
  %11 = load i8, i8* %10, align 1, !dbg !7125
  %12 = icmp eq i8 %11, 0, !dbg !7126
  br i1 %12, label %13, label %5, !dbg !7127, !llvm.loop !7132

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7134
  ret i8* %0, !dbg !7135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7140, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i8* %1, metadata !7141, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i32 %2, metadata !7142, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i8* %0, metadata !7143, metadata !DIExpression()), !dbg !7144
  %4 = icmp eq i32 %2, 0, !dbg !7145
  br i1 %4, label %22, label %5, !dbg !7146

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7140, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i32 %7, metadata !7142, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i8* %8, metadata !7141, metadata !DIExpression()), !dbg !7144
  %9 = load i8, i8* %8, align 1, !dbg !7147
  %10 = icmp eq i8 %9, 0, !dbg !7148
  br i1 %10, label %16, label %11, !dbg !7149

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7150
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7152
  call void @llvm.dbg.value(metadata i8* %12, metadata !7141, metadata !DIExpression()), !dbg !7144
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7153
  call void @llvm.dbg.value(metadata i8* %13, metadata !7140, metadata !DIExpression()), !dbg !7144
  %14 = add i32 %7, -1, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %14, metadata !7142, metadata !DIExpression()), !dbg !7144
  %15 = icmp eq i32 %14, 0, !dbg !7145
  br i1 %15, label %22, label %5, !dbg !7146, !llvm.loop !7155

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7140, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i32 %18, metadata !7142, metadata !DIExpression()), !dbg !7144
  store i8 0, i8* %17, align 1, !dbg !7157
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7159
  call void @llvm.dbg.value(metadata i8* %19, metadata !7140, metadata !DIExpression()), !dbg !7144
  %20 = add i32 %18, -1, !dbg !7160
  call void @llvm.dbg.value(metadata i32 %20, metadata !7142, metadata !DIExpression()), !dbg !7144
  %21 = icmp eq i32 %20, 0, !dbg !7161
  br i1 %21, label %22, label %16, !dbg !7162, !llvm.loop !7163

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7165
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7170, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32 %1, metadata !7171, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32 %1, metadata !7172, metadata !DIExpression()), !dbg !7173
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7174

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7170, metadata !DIExpression()), !dbg !7173
  %6 = load i8, i8* %5, align 1, !dbg !7175
  %7 = icmp eq i8 %6, %3, !dbg !7176
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7177
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7178
  call void @llvm.dbg.value(metadata i8* %10, metadata !7170, metadata !DIExpression()), !dbg !7173
  br i1 %9, label %11, label %4, !dbg !7177, !llvm.loop !7180

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7182
  ret i8* %12, !dbg !7183
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7186, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %1, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* null, metadata !7188, metadata !DIExpression()), !dbg !7189
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7190

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7189
  call void @llvm.dbg.value(metadata i8* %6, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %5, metadata !7186, metadata !DIExpression()), !dbg !7189
  %7 = load i8, i8* %5, align 1, !dbg !7191
  %8 = icmp eq i8 %7, %3, !dbg !7194
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7195
  call void @llvm.dbg.value(metadata i8* %9, metadata !7188, metadata !DIExpression()), !dbg !7189
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7196
  call void @llvm.dbg.value(metadata i8* %10, metadata !7186, metadata !DIExpression()), !dbg !7189
  %11 = icmp eq i8 %7, 0, !dbg !7197
  br i1 %11, label %12, label %4, !dbg !7197, !llvm.loop !7198

12:                                               ; preds = %4
  ret i8* %9, !dbg !7200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7205, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i32 0, metadata !7206, metadata !DIExpression()), !dbg !7207
  %2 = load i8, i8* %0, align 1, !dbg !7208
  %3 = icmp eq i8 %2, 0, !dbg !7209
  br i1 %3, label %11, label %4, !dbg !7210

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7206, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.value(metadata i8* %6, metadata !7205, metadata !DIExpression()), !dbg !7207
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7211
  call void @llvm.dbg.value(metadata i8* %7, metadata !7205, metadata !DIExpression()), !dbg !7207
  %8 = add i32 %5, 1, !dbg !7213
  call void @llvm.dbg.value(metadata i32 %8, metadata !7206, metadata !DIExpression()), !dbg !7207
  %9 = load i8, i8* %7, align 1, !dbg !7208
  %10 = icmp eq i8 %9, 0, !dbg !7209
  br i1 %10, label %11, label %4, !dbg !7210, !llvm.loop !7214

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7207
  ret i32 %12, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7221, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 %1, metadata !7222, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  %3 = load i8, i8* %0, align 1, !dbg !7225
  %4 = icmp ne i8 %3, 0, !dbg !7226
  %5 = icmp ne i32 %1, 0, !dbg !7227
  %6 = and i1 %4, %5, !dbg !7227
  br i1 %6, label %7, label %16, !dbg !7228

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7223, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8* %9, metadata !7221, metadata !DIExpression()), !dbg !7224
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7229
  call void @llvm.dbg.value(metadata i8* %10, metadata !7221, metadata !DIExpression()), !dbg !7224
  %11 = add nuw i32 %8, 1, !dbg !7231
  call void @llvm.dbg.value(metadata i32 %11, metadata !7223, metadata !DIExpression()), !dbg !7224
  %12 = load i8, i8* %10, align 1, !dbg !7225
  %13 = icmp ne i8 %12, 0, !dbg !7226
  %14 = icmp ult i32 %11, %1, !dbg !7227
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7227
  br i1 %15, label %7, label %16, !dbg !7228, !llvm.loop !7232

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7224
  ret i32 %17, !dbg !7234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %1, metadata !7240, metadata !DIExpression()), !dbg !7241
  %3 = load i8, i8* %0, align 1, !dbg !7242
  %4 = load i8, i8* %1, align 1, !dbg !7243
  %5 = icmp ne i8 %3, %4, !dbg !7244
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7245
  br i1 %7, label %18, label %8, !dbg !7245

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7240, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %10, metadata !7239, metadata !DIExpression()), !dbg !7241
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7246
  call void @llvm.dbg.value(metadata i8* %11, metadata !7239, metadata !DIExpression()), !dbg !7241
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7248
  call void @llvm.dbg.value(metadata i8* %12, metadata !7240, metadata !DIExpression()), !dbg !7241
  %13 = load i8, i8* %11, align 1, !dbg !7242
  %14 = load i8, i8* %12, align 1, !dbg !7243
  %15 = icmp ne i8 %13, %14, !dbg !7244
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7245
  br i1 %17, label %18, label %8, !dbg !7245, !llvm.loop !7249

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7242
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7243
  %21 = zext i8 %19 to i32, !dbg !7252
  %22 = zext i8 %20 to i32, !dbg !7253
  %23 = sub nsw i32 %21, %22, !dbg !7254
  ret i32 %23, !dbg !7255
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7256 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7260, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i8* %1, metadata !7261, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i32 %2, metadata !7262, metadata !DIExpression()), !dbg !7263
  %4 = icmp eq i32 %2, 0, !dbg !7264
  br i1 %4, label %23, label %5, !dbg !7264

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i8* %7, metadata !7261, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i8* %8, metadata !7260, metadata !DIExpression()), !dbg !7263
  %9 = load i8, i8* %8, align 1, !dbg !7265
  %10 = load i8, i8* %7, align 1, !dbg !7266
  %11 = icmp ne i8 %9, %10, !dbg !7267
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7268
  br i1 %13, label %19, label %14, !dbg !7268

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %15, metadata !7260, metadata !DIExpression()), !dbg !7263
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7271
  call void @llvm.dbg.value(metadata i8* %16, metadata !7261, metadata !DIExpression()), !dbg !7263
  %17 = add i32 %6, -1, !dbg !7272
  call void @llvm.dbg.value(metadata i32 %17, metadata !7262, metadata !DIExpression()), !dbg !7263
  %18 = icmp eq i32 %17, 0, !dbg !7264
  br i1 %18, label %23, label %5, !dbg !7264, !llvm.loop !7273

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7276
  %21 = zext i8 %10 to i32, !dbg !7277
  %22 = sub nsw i32 %20, %21, !dbg !7278
  br label %23, !dbg !7279

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7279
  ret i32 %24, !dbg !7280
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7286, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %1, metadata !7287, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8** %2, metadata !7288, metadata !DIExpression()), !dbg !7291
  %4 = icmp eq i8* %0, null, !dbg !7292
  br i1 %4, label %5, label %7, !dbg !7292

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7293
  br label %7, !dbg !7292

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7292
  call void @llvm.dbg.value(metadata i8* %8, metadata !7289, metadata !DIExpression()), !dbg !7291
  %9 = load i8, i8* %8, align 1, !dbg !7294
  %10 = icmp eq i8 %9, 0, !dbg !7294
  br i1 %10, label %33, label %11, !dbg !7295

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7289, metadata !DIExpression()), !dbg !7291
  %14 = zext i8 %12 to i32, !dbg !7294
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7296
  %16 = icmp eq i8* %15, null, !dbg !7295
  br i1 %16, label %21, label %17, !dbg !7297

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7298
  call void @llvm.dbg.value(metadata i8* %18, metadata !7289, metadata !DIExpression()), !dbg !7291
  %19 = load i8, i8* %18, align 1, !dbg !7294
  %20 = icmp eq i8 %19, 0, !dbg !7294
  br i1 %20, label %33, label %11, !dbg !7295, !llvm.loop !7300

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7290, metadata !DIExpression()), !dbg !7291
  %24 = zext i8 %22 to i32, !dbg !7302
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7303
  %26 = icmp eq i8* %25, null, !dbg !7304
  br i1 %26, label %27, label %31, !dbg !7305

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7306
  call void @llvm.dbg.value(metadata i8* %28, metadata !7290, metadata !DIExpression()), !dbg !7291
  %29 = load i8, i8* %28, align 1, !dbg !7302
  %30 = icmp eq i8 %29, 0, !dbg !7302
  br i1 %30, label %33, label %21, !dbg !7308, !llvm.loop !7309

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7311
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7314
  br label %33, !dbg !7315

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7291
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7291
  store i8* %34, i8** %2, align 4, !dbg !7291
  ret i8* %35, !dbg !7316
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7319, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.value(metadata i8* %1, metadata !7320, metadata !DIExpression()), !dbg !7321
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7322
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7323
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7324
  ret i8* %0, !dbg !7325
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8* %1, metadata !7329, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %2, metadata !7330, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8* %0, metadata !7331, metadata !DIExpression()), !dbg !7333
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %4, metadata !7332, metadata !DIExpression()), !dbg !7333
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7335
  call void @llvm.dbg.value(metadata i8* %5, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8* %1, metadata !7329, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %2, metadata !7330, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %2, metadata !7330, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7333
  %6 = icmp eq i32 %2, 0, !dbg !7336
  br i1 %6, label %18, label %7, !dbg !7337

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7338
  call void @llvm.dbg.value(metadata i8* %9, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i8* %10, metadata !7329, metadata !DIExpression()), !dbg !7333
  %12 = load i8, i8* %10, align 1, !dbg !7339
  %13 = icmp eq i8 %12, 0, !dbg !7340
  br i1 %13, label %18, label %14, !dbg !7341

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7342
  call void @llvm.dbg.value(metadata i8* %15, metadata !7329, metadata !DIExpression()), !dbg !7333
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7344
  call void @llvm.dbg.value(metadata i8* %16, metadata !7328, metadata !DIExpression()), !dbg !7333
  store i8 %12, i8* %9, align 1, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %11, metadata !7330, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %11, metadata !7330, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7333
  %17 = icmp eq i32 %11, 0, !dbg !7336
  br i1 %17, label %18, label %7, !dbg !7337, !llvm.loop !7346

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7333
  store i8 0, i8* %19, align 1, !dbg !7348
  ret i8* %0, !dbg !7349
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7354, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %1, metadata !7355, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i32 %2, metadata !7356, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %0, metadata !7357, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %1, metadata !7358, metadata !DIExpression()), !dbg !7359
  %4 = icmp eq i32 %2, 0, !dbg !7360
  br i1 %4, label %31, label %5, !dbg !7362

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %0, metadata !7357, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i32 %2, metadata !7356, metadata !DIExpression()), !dbg !7359
  %6 = add i32 %2, -1, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %6, metadata !7356, metadata !DIExpression()), !dbg !7359
  %7 = icmp eq i32 %6, 0, !dbg !7364
  br i1 %7, label %23, label %8, !dbg !7365

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7366
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7366
  br label %11, !dbg !7366

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %14, metadata !7357, metadata !DIExpression()), !dbg !7359
  %15 = load i8, i8* %14, align 1, !dbg !7367
  %16 = load i8, i8* %13, align 1, !dbg !7368
  %17 = icmp eq i8 %15, %16, !dbg !7369
  br i1 %17, label %18, label %23, !dbg !7366

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7370
  call void @llvm.dbg.value(metadata i8* %19, metadata !7357, metadata !DIExpression()), !dbg !7359
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7372
  call void @llvm.dbg.value(metadata i8* %20, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i32 %12, metadata !7356, metadata !DIExpression()), !dbg !7359
  %21 = add i32 %12, -1, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %21, metadata !7356, metadata !DIExpression()), !dbg !7359
  %22 = icmp eq i32 %21, 0, !dbg !7364
  br i1 %22, label %23, label %11, !dbg !7365, !llvm.loop !7373

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7359
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7359
  %26 = load i8, i8* %24, align 1, !dbg !7375
  %27 = zext i8 %26 to i32, !dbg !7375
  %28 = load i8, i8* %25, align 1, !dbg !7376
  %29 = zext i8 %28 to i32, !dbg !7376
  %30 = sub nsw i32 %27, %29, !dbg !7377
  br label %31, !dbg !7378

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7359
  ret i32 %32, !dbg !7379
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7384, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %1, metadata !7385, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 %2, metadata !7386, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %0, metadata !7387, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %1, metadata !7388, metadata !DIExpression()), !dbg !7389
  %4 = ptrtoint i8* %0 to i32, !dbg !7390
  %5 = ptrtoint i8* %1 to i32, !dbg !7390
  %6 = sub i32 %4, %5, !dbg !7390
  %7 = icmp ult i32 %6, %2, !dbg !7392
  br i1 %7, label %10, label %8, !dbg !7393

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %0, metadata !7387, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 %2, metadata !7386, metadata !DIExpression()), !dbg !7389
  %9 = icmp eq i32 %2, 0, !dbg !7394
  br i1 %9, label %26, label %17, !dbg !7396

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7386, metadata !DIExpression()), !dbg !7389
  %12 = add i32 %11, -1, !dbg !7397
  call void @llvm.dbg.value(metadata i32 %12, metadata !7386, metadata !DIExpression()), !dbg !7389
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7400
  %14 = load i8, i8* %13, align 1, !dbg !7400
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7401
  store i8 %14, i8* %15, align 1, !dbg !7402
  %16 = icmp eq i32 %12, 0, !dbg !7403
  br i1 %16, label %26, label %10, !dbg !7404, !llvm.loop !7405

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %19, metadata !7387, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 %20, metadata !7386, metadata !DIExpression()), !dbg !7389
  %21 = load i8, i8* %18, align 1, !dbg !7407
  store i8 %21, i8* %19, align 1, !dbg !7409
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7410
  call void @llvm.dbg.value(metadata i8* %22, metadata !7387, metadata !DIExpression()), !dbg !7389
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8* %23, metadata !7388, metadata !DIExpression()), !dbg !7389
  %24 = add i32 %20, -1, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %24, metadata !7386, metadata !DIExpression()), !dbg !7389
  %25 = icmp eq i32 %24, 0, !dbg !7394
  br i1 %25, label %26, label %17, !dbg !7396, !llvm.loop !7413

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %1, metadata !7423, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %2, metadata !7424, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %1, metadata !7426, metadata !DIExpression()), !dbg !7427
  %4 = icmp eq i32 %2, 0, !dbg !7428
  br i1 %4, label %14, label %5, !dbg !7429

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %7, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %8, metadata !7424, metadata !DIExpression()), !dbg !7427
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7430
  call void @llvm.dbg.value(metadata i8* %9, metadata !7426, metadata !DIExpression()), !dbg !7427
  %10 = load i8, i8* %6, align 1, !dbg !7432
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7433
  call void @llvm.dbg.value(metadata i8* %11, metadata !7425, metadata !DIExpression()), !dbg !7427
  store i8 %10, i8* %7, align 1, !dbg !7434
  %12 = add i32 %8, -1, !dbg !7435
  call void @llvm.dbg.value(metadata i32 %12, metadata !7424, metadata !DIExpression()), !dbg !7427
  %13 = icmp eq i32 %12, 0, !dbg !7428
  br i1 %13, label %14, label %5, !dbg !7429, !llvm.loop !7436

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7438
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7439 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7443, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %1, metadata !7444, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %2, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  %4 = trunc i32 %1 to i8, !dbg !7449
  call void @llvm.dbg.value(metadata i8 %4, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %2, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  %5 = icmp eq i32 %2, 0, !dbg !7450
  br i1 %5, label %12, label %6, !dbg !7451

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %8, metadata !7446, metadata !DIExpression()), !dbg !7448
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7452
  call void @llvm.dbg.value(metadata i8* %9, metadata !7446, metadata !DIExpression()), !dbg !7448
  store i8 %4, i8* %8, align 1, !dbg !7454
  %10 = add i32 %7, -1, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %10, metadata !7445, metadata !DIExpression()), !dbg !7448
  %11 = icmp eq i32 %10, 0, !dbg !7450
  br i1 %11, label %12, label %6, !dbg !7451, !llvm.loop !7456

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7459 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7463, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i32 %1, metadata !7464, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i32 %2, metadata !7465, metadata !DIExpression()), !dbg !7469
  %4 = icmp eq i32 %2, 0, !dbg !7470
  br i1 %4, label %17, label %5, !dbg !7471

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7472

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7473
  call void @llvm.dbg.value(metadata i8* %9, metadata !7466, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 %8, metadata !7465, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* %9, metadata !7466, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7473
  %10 = load i8, i8* %9, align 1, !dbg !7474
  %11 = icmp eq i8 %10, %6, !dbg !7477
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %12, metadata !7466, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 %13, metadata !7465, metadata !DIExpression()), !dbg !7469
  br i1 %15, label %16, label %7, !dbg !7478, !llvm.loop !7479

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7481

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7469
  ret i8* %19, !dbg !7482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7483 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7485, metadata !DIExpression()), !dbg !7486
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7491, metadata !DIExpression()), !dbg !7492
  ret i32 -1, !dbg !7493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32* %1, metadata !7499, metadata !DIExpression()), !dbg !7500
  %3 = ptrtoint i32* %1 to i32, !dbg !7501
  %4 = and i32 %3, -2, !dbg !7501
  %5 = icmp eq i32 %4, 2, !dbg !7501
  br i1 %5, label %6, label %9, !dbg !7501

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7502
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7502
  br label %9, !dbg !7503

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7503
  ret i32 %10, !dbg !7504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32* %1, metadata !7508, metadata !DIExpression()), !dbg !7509
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7510
  ret i32 %3, !dbg !7511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7515, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i32* %1, metadata !7516, metadata !DIExpression()), !dbg !7517
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7518, !srcloc !7520
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7521
  ret i32 %3, !dbg !7522
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7528, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i32* %1, metadata !7529, metadata !DIExpression()), !dbg !7532
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7533
  call void @llvm.dbg.value(metadata i32 %3, metadata !7530, metadata !DIExpression()), !dbg !7532
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7534
  call void @llvm.dbg.value(metadata i32 %4, metadata !7531, metadata !DIExpression()), !dbg !7532
  %5 = icmp ne i32 %3, %4, !dbg !7535
  %6 = sext i1 %5 to i32, !dbg !7536
  ret i32 %6, !dbg !7537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7538 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7542, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i32 %1, metadata !7543, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i32 %2, metadata !7544, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata i32* %3, metadata !7545, metadata !DIExpression()), !dbg !7546
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7547
  ret i32 %5, !dbg !7548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7549 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7551, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %1, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %2, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32* %3, metadata !7554, metadata !DIExpression()), !dbg !7555
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7556, !srcloc !7558
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7559
  ret i32 %5, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7563, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7564, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %2, metadata !7565, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32* %3, metadata !7566, metadata !DIExpression()), !dbg !7571
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7572
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7574
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7574
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7574
  br i1 %11, label %33, label %12, !dbg !7574

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7571
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7571
  call void @llvm.dbg.value(metadata i8* %14, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %13, metadata !7567, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7568, metadata !DIExpression()), !dbg !7571
  br label %15, !dbg !7575

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7577
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7571
  call void @llvm.dbg.value(metadata i8* %17, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %16, metadata !7568, metadata !DIExpression()), !dbg !7571
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7578
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7581
  call void @llvm.dbg.value(metadata i8* %19, metadata !7569, metadata !DIExpression()), !dbg !7571
  %20 = load i8, i8* %17, align 1, !dbg !7582
  %21 = zext i8 %20 to i32, !dbg !7583
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7578
  %23 = icmp eq i32 %22, -1, !dbg !7584
  br i1 %23, label %30, label %24, !dbg !7585

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7586
  call void @llvm.dbg.value(metadata i32 %25, metadata !7568, metadata !DIExpression()), !dbg !7571
  %26 = icmp eq i32 %25, 0, !dbg !7587
  br i1 %26, label %27, label %15, !dbg !7588, !llvm.loop !7589

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7591
  call void @llvm.dbg.value(metadata i32 %28, metadata !7567, metadata !DIExpression()), !dbg !7571
  %29 = icmp eq i32 %28, 0, !dbg !7592
  br i1 %29, label %30, label %12, !dbg !7593, !llvm.loop !7594

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7571
  call void @llvm.dbg.value(metadata i32 %31, metadata !7567, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.label(metadata !7570), !dbg !7597
  %32 = sub i32 %2, %31, !dbg !7598
  br label %33, !dbg !7599

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7571
  ret i32 %34, !dbg !7600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7605, metadata !DIExpression()), !dbg !7606
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7607
  %3 = icmp eq i32 %2, -1, !dbg !7609
  br i1 %3, label %8, label %4, !dbg !7610

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7611
  %6 = icmp eq i32 %5, -1, !dbg !7612
  %7 = sext i1 %6 to i32, !dbg !7611
  br label %8, !dbg !7613

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7606
  ret i32 %9, !dbg !7614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7615 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7617, metadata !DIExpression()), !dbg !7628
  %8 = bitcast i64* %2 to i8*, !dbg !7629
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !7629
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !7618, metadata !DIExpression()), !dbg !7630
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !7630
  store i64 %9, i64* %2, align 8, !dbg !7630
  %10 = bitcast i64* %4 to i8*, !dbg !7631
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !7626, metadata !DIExpression()), !dbg !7632
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !7632
  store i64 %11, i64* %4, align 8, !dbg !7632
  %12 = bitcast i64* %6 to i8*, !dbg !7633
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !7627, metadata !DIExpression()), !dbg !7634
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !7634
  store i64 %13, i64* %6, align 8, !dbg !7634
  %14 = trunc i64 %9 to i32, !dbg !7635
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !7635
  %16 = tail call fastcc zeroext i1 @device_is_ready.32(%struct.device* noundef %15) #26, !dbg !7637
  %17 = trunc i64 %13 to i32, !dbg !7638
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !7638
  br i1 %16, label %19, label %26, !dbg !7638

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !7638
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !7638
  %22 = tail call fastcc zeroext i1 @device_is_ready.32(%struct.device* noundef %21) #26, !dbg !7639
  br i1 %22, label %23, label %26, !dbg !7640

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready.32(%struct.device* noundef %18) #26, !dbg !7641
  br i1 %24, label %25, label %26, !dbg !7642

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !7643
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !7644
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !7645
  br label %26, !dbg !7646

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !7628
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !7647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !7647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !7647
  ret i32 %27, !dbg !7647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.32(%struct.device* noundef %0) unnamed_addr #1 !dbg !7648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7652, metadata !DIExpression()), !dbg !7653
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7654, !srcloc !7656
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.33(%struct.device* noundef %0) #26, !dbg !7657
  ret i1 %2, !dbg !7658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7659 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !7664, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata i32 %1, metadata !7665, metadata !DIExpression()), !dbg !7666
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !7667
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !7667
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !7668
  %6 = load i8, i8* %5, align 4, !dbg !7668
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !7669
  %8 = load i16, i16* %7, align 2, !dbg !7669
  %9 = zext i16 %8 to i32, !dbg !7670
  %10 = or i32 %9, %1, !dbg !7671
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !7672
  ret void, !dbg !7673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8 %1, metadata !7678, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7679, metadata !DIExpression()), !dbg !7680
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7681, !srcloc !7683
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !7684
  ret void, !dbg !7685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7688, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8 %1, metadata !7689, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %2, metadata !7690, metadata !DIExpression()), !dbg !7695
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !7696
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !7696
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !7696
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !7691, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8* undef, metadata !7692, metadata !DIExpression()), !dbg !7695
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7697
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !7697
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !7697
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !7694, metadata !DIExpression()), !dbg !7695
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !7698
  %13 = icmp ne i32 %12, 1048577, !dbg !7698
  %14 = or i1 %13, %11, !dbg !7698
  %15 = xor i32 %2, 786432, !dbg !7698
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !7698
  call void @llvm.dbg.value(metadata i32 %16, metadata !7690, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %16, metadata !7690, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !7695
  %17 = and i32 %16, 1, !dbg !7700
  %18 = icmp eq i32 %17, 0, !dbg !7702
  %19 = zext i8 %1 to i32, !dbg !7703
  %20 = shl nuw i32 1, %19, !dbg !7703
  br i1 %18, label %25, label %21, !dbg !7704

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7705
  %23 = load i32, i32* %22, align 4, !dbg !7707
  %24 = or i32 %23, %20, !dbg !7707
  store i32 %24, i32* %22, align 4, !dbg !7707
  br label %30, !dbg !7708

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !7709
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7711
  %28 = load i32, i32* %27, align 4, !dbg !7712
  %29 = and i32 %28, %26, !dbg !7712
  store i32 %29, i32* %27, align 4, !dbg !7712
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %31, metadata !7690, metadata !DIExpression()), !dbg !7695
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !7714
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !7714
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #27, !dbg !7715
  ret void, !dbg !7716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.33(%struct.device* noundef %0) unnamed_addr #1 !dbg !7717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7719, metadata !DIExpression()), !dbg !7720
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !7721
  ret i1 %2, !dbg !7722
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7725, metadata !DIExpression()), !dbg !7726
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7727
  ret void, !dbg !7728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7733, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %1, metadata !7734, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7735, metadata !DIExpression()), !dbg !7739
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7740
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7740
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7740
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7736, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %0, metadata !7738, metadata !DIExpression()), !dbg !7739
  %7 = icmp slt i32 %0, %1, !dbg !7741
  br i1 %7, label %8, label %22, !dbg !7744

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7738, metadata !DIExpression()), !dbg !7739
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7745
  %11 = icmp eq i32 %10, 0, !dbg !7745
  br i1 %11, label %19, label %12, !dbg !7748

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7749
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7751
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7751
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7753
  br i1 %15, label %19, label %16, !dbg !7754

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7755
  %18 = load i8*, i8** %17, align 4, !dbg !7755
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7756
  br label %19, !dbg !7757

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %20, metadata !7738, metadata !DIExpression()), !dbg !7739
  %21 = icmp eq i32 %20, %1, !dbg !7741
  br i1 %21, label %22, label %8, !dbg !7744, !llvm.loop !7759

22:                                               ; preds = %19, %3
  ret void, !dbg !7761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !7762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  %2 = shl nuw i32 1, %0, !dbg !7766
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7769
  ret i32 %3, !dbg !7770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7775, metadata !DIExpression()), !dbg !7776
  %2 = shl nuw i32 1, %0, !dbg !7777
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7780
  ret void, !dbg !7781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7785, metadata !DIExpression()), !dbg !7786
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7787
  ret void, !dbg !7788
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !7789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7791, metadata !DIExpression()), !dbg !7792
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7793
  %3 = and i32 %2, %0, !dbg !7793
  %4 = icmp eq i32 %3, %0, !dbg !7794
  %5 = zext i1 %4 to i32, !dbg !7794
  ret i32 %5, !dbg !7795
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7796 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7798, metadata !DIExpression()), !dbg !7799
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7804, metadata !DIExpression()), !dbg !7805
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7806
  ret void, !dbg !7807
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7810, metadata !DIExpression()), !dbg !7811
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7812
  ret void, !dbg !7813
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7816, metadata !DIExpression()), !dbg !7817
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7818
  ret void, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7822, metadata !DIExpression()), !dbg !7823
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7824
  ret void, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7828, metadata !DIExpression()), !dbg !7829
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7830
  ret void, !dbg !7831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7834, metadata !DIExpression()), !dbg !7835
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7836
  ret i32 0, !dbg !7837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !808 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !812, metadata !DIExpression()), !dbg !7838
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7839
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7841
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7843
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7845
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7847
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7849
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7851
  ret void, !dbg !7853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7856, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i32 0, metadata !7857, metadata !DIExpression()), !dbg !7858
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7859
  %3 = load i32, i32* %2, align 4, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %3, metadata !7857, metadata !DIExpression()), !dbg !7858
  %4 = shl nuw i32 1, %0, !dbg !7860
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7861
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7866, metadata !DIExpression()), !dbg !7867
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7868
  %3 = or i32 %2, %0, !dbg !7868
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7868
  ret void, !dbg !7869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !7870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7872, metadata !DIExpression()), !dbg !7873
  %2 = icmp slt i32 %0, 32, !dbg !7874
  br i1 %2, label %3, label %5, !dbg !7876

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7877
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7879
  br label %5, !dbg !7880

5:                                                ; preds = %1, %3
  ret void, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7884, metadata !DIExpression()), !dbg !7885
  %2 = xor i32 %0, -1, !dbg !7886
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7886
  %4 = and i32 %3, %2, !dbg !7886
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7886
  ret void, !dbg !7887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !7888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7892, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 %1, metadata !7893, metadata !DIExpression()), !dbg !7894
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7895

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7896
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7898
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7899
  br label %11, !dbg !7900

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7901
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7902
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7903
  br label %11, !dbg !7904

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7905
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7906
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7907
  br label %11, !dbg !7908

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7909
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7910
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7911
  br label %11, !dbg !7912

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7916, metadata !DIExpression()), !dbg !7917
  %2 = xor i32 %0, -1, !dbg !7918
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7918
  %4 = and i32 %3, %2, !dbg !7918
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7918
  ret void, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7922, metadata !DIExpression()), !dbg !7923
  %2 = xor i32 %0, -1, !dbg !7924
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7924
  %4 = and i32 %3, %2, !dbg !7924
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7924
  ret void, !dbg !7925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7928, metadata !DIExpression()), !dbg !7929
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7930
  %3 = or i32 %2, %0, !dbg !7930
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7930
  ret void, !dbg !7931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7934, metadata !DIExpression()), !dbg !7935
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7936
  %3 = or i32 %2, %0, !dbg !7936
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7936
  ret void, !dbg !7937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7942, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7943, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %2, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7947, metadata !DIExpression()), !dbg !7948
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7949
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7949
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7951
  br i1 %6, label %7, label %9, !dbg !7952

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7953
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7954
  store i8* %2, i8** %8, align 4, !dbg !7955
  br label %9, !dbg !7956

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7948
  ret i32 %10, !dbg !7957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7960, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7961, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7962, metadata !DIExpression()), !dbg !7963
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7964
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7965
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7966
  store i8* null, i8** %3, align 4, !dbg !7967
  ret void, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !7969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7971, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7972, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7973, metadata !DIExpression()), !dbg !7976
  %3 = bitcast i8* %1 to i32*, !dbg !7977
  %4 = load i32, i32* %3, align 4, !dbg !7977
  %5 = add i32 %4, -37, !dbg !7977
  %6 = icmp ult i32 %5, -9, !dbg !7977
  br i1 %6, label %15, label %7, !dbg !7979

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7980
  %9 = inttoptr i32 %8 to i32*, !dbg !7981
  call void @llvm.dbg.value(metadata i32* %9, metadata !7974, metadata !DIExpression()), !dbg !7976
  %10 = load volatile i32, i32* %9, align 4, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %10, metadata !7975, metadata !DIExpression()), !dbg !7976
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7983
  %12 = bitcast i8* %11 to i32*, !dbg !7983
  %13 = load i32, i32* %12, align 4, !dbg !7983
  %14 = or i32 %13, %10, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %14, metadata !7975, metadata !DIExpression()), !dbg !7976
  store volatile i32 %14, i32* %9, align 4, !dbg !7985
  br label %15, !dbg !7986

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7976
  ret i32 %16, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !7988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7990, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i8* %1, metadata !7991, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i8* %1, metadata !7992, metadata !DIExpression()), !dbg !7995
  %3 = bitcast i8* %1 to i32*, !dbg !7996
  %4 = load i32, i32* %3, align 4, !dbg !7996
  %5 = add i32 %4, -37, !dbg !7996
  %6 = icmp ult i32 %5, -9, !dbg !7996
  br i1 %6, label %16, label %7, !dbg !7998

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7999
  %9 = inttoptr i32 %8 to i32*, !dbg !8000
  call void @llvm.dbg.value(metadata i32* %9, metadata !7993, metadata !DIExpression()), !dbg !7995
  %10 = load volatile i32, i32* %9, align 4, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %10, metadata !7994, metadata !DIExpression()), !dbg !7995
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8002
  %12 = bitcast i8* %11 to i32*, !dbg !8002
  %13 = load i32, i32* %12, align 4, !dbg !8002
  %14 = xor i32 %13, -1, !dbg !8003
  %15 = and i32 %10, %14, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %15, metadata !7994, metadata !DIExpression()), !dbg !7995
  store volatile i32 %15, i32* %9, align 4, !dbg !8005
  br label %16, !dbg !8006

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7995
  ret i32 %17, !dbg !8007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #7 !dbg !8008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8010, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32* %2, metadata !8012, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8017
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %4, metadata !8014, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %4, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %4, metadata !8016, metadata !DIExpression()), !dbg !8017
  %5 = bitcast i8* %1 to i32*, !dbg !8019
  %6 = load i32, i32* %5, align 4, !dbg !8019
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8020

7:                                                ; preds = %3
  br label %10, !dbg !8021

8:                                                ; preds = %3
  br label %10, !dbg !8023

9:                                                ; preds = %3
  br label %10, !dbg !8024

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8025
  br label %12, !dbg !8026

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8017
  ret i32 %13, !dbg !8026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !8027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8029, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %1, metadata !8030, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %2, metadata !8031, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.value(metadata i8* %1, metadata !8032, metadata !DIExpression()), !dbg !8037
  %4 = bitcast i8* %1 to i32*, !dbg !8038
  %5 = load i32, i32* %4, align 4, !dbg !8038
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8039
  call void @llvm.dbg.value(metadata i32 %6, metadata !8036, metadata !DIExpression()), !dbg !8037
  %7 = icmp slt i32 %6, 0, !dbg !8040
  br i1 %7, label %22, label %8, !dbg !8042

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8032, metadata !DIExpression()), !dbg !8037
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8043
  %10 = bitcast i8* %9 to i32*, !dbg !8043
  %11 = load i32, i32* %10, align 4, !dbg !8043
  %12 = lshr i32 %11, 16, !dbg !8043
  %13 = and i32 %12, 7, !dbg !8043
  %14 = lshr i32 %11, 8, !dbg !8044
  %15 = and i32 %14, 31, !dbg !8044
  %16 = shl i32 %13, %15, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %16, metadata !8035, metadata !DIExpression()), !dbg !8037
  %17 = and i32 %11, 255, !dbg !8046
  %18 = or i32 %17, 1073887232, !dbg !8047
  %19 = inttoptr i32 %18 to i32*, !dbg !8048
  call void @llvm.dbg.value(metadata i32* %19, metadata !8033, metadata !DIExpression()), !dbg !8037
  %20 = load volatile i32, i32* %19, align 4, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %20, metadata !8034, metadata !DIExpression()), !dbg !8037
  %21 = or i32 %16, %20, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %21, metadata !8034, metadata !DIExpression()), !dbg !8037
  store volatile i32 %21, i32* %19, align 4, !dbg !8051
  br label %22, !dbg !8052

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8037
  ret i32 %23, !dbg !8053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8058, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.value(metadata i32 0, metadata !8059, metadata !DIExpression()), !dbg !8060
  %2 = add i32 %0, -1, !dbg !8061
  %3 = icmp ult i32 %2, 4, !dbg !8061
  br i1 %3, label %4, label %7, !dbg !8061

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8061
  %6 = load i32, i32* %5, align 4, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %6, metadata !8059, metadata !DIExpression()), !dbg !8060
  br label %7, !dbg !8062

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8060
  ret i32 %8, !dbg !8063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8064 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8066, metadata !DIExpression()), !dbg !8069
  tail call void @config_enable_default_clocks() #27, !dbg !8070
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8071
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8071
  %4 = lshr i32 %3, 4, !dbg !8071
  %5 = and i32 %4, 15, !dbg !8071
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8071
  %7 = load i8, i8* %6, align 1, !dbg !8071
  %8 = zext i8 %7 to i32, !dbg !8071
  %9 = lshr i32 %2, %8, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %9, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8068, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8069
  %10 = icmp ult i32 %9, 32000000, !dbg !8072
  br i1 %10, label %11, label %13, !dbg !8074

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !8075
  br label %13, !dbg !8077

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8078
  tail call fastcc void @set_up_plls() #26, !dbg !8079
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8080
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !8083
  br label %14, !dbg !8084

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8085
  %16 = icmp eq i32 %15, 12, !dbg !8086
  br i1 %16, label %17, label %14, !dbg !8084, !llvm.loop !8087

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8089
  br i1 %18, label %19, label %21, !dbg !8091

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !8092
  br label %21, !dbg !8094

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8095
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8096
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8097
  ret i32 0, !dbg !8098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !8099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8101
  %2 = and i32 %1, 240, !dbg !8101
  ret i32 %2, !dbg !8102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !8103 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8104
  %2 = icmp eq i32 %1, 1, !dbg !8108
  br i1 %2, label %7, label %3, !dbg !8109

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8110
  br label %4, !dbg !8112

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8113
  %6 = icmp eq i32 %5, 1, !dbg !8114
  br i1 %6, label %7, label %4, !dbg !8112, !llvm.loop !8115

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8117
  br label %8, !dbg !8120

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8121
  %10 = icmp eq i32 %9, 1, !dbg !8122
  br i1 %10, label %11, label %8, !dbg !8120, !llvm.loop !8123

11:                                               ; preds = %8
  ret void, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8126 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8127
  %2 = icmp eq i32 %1, 12, !dbg !8129
  br i1 %2, label %3, label %4, !dbg !8130

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8131
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8133
  br label %4, !dbg !8134

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8135
  tail call void @config_pll_sysclock() #27, !dbg !8136
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8137
  br label %5, !dbg !8138

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8139
  %7 = icmp eq i32 %6, 1, !dbg !8140
  br i1 %7, label %8, label %5, !dbg !8138, !llvm.loop !8141

8:                                                ; preds = %5
  ret void, !dbg !8143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !8144 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8146, metadata !DIExpression()), !dbg !8147
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8148
  %2 = and i32 %1, -241, !dbg !8148
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !8150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8152, metadata !DIExpression()), !dbg !8153
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8154
  %3 = and i32 %2, -4, !dbg !8154
  %4 = or i32 %3, %0, !dbg !8154
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8154
  ret void, !dbg !8155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !8156 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8157
  %2 = and i32 %1, 12, !dbg !8157
  ret i32 %2, !dbg !8158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !8159 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8161, metadata !DIExpression()), !dbg !8162
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8163
  %2 = and i32 %1, -1793, !dbg !8163
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !8165 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8167, metadata !DIExpression()), !dbg !8168
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8169
  %2 = and i32 %1, -14337, !dbg !8169
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8169
  ret void, !dbg !8170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !8171 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8172
  %2 = icmp eq i32 %1, 1, !dbg !8174
  br i1 %2, label %7, label %3, !dbg !8175

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8176
  br label %4, !dbg !8178

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8179
  %6 = icmp eq i32 %5, 1, !dbg !8180
  br i1 %6, label %7, label %4, !dbg !8178, !llvm.loop !8181

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !8183
  br label %8, !dbg !8184

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8185
  %10 = icmp eq i32 %9, 4, !dbg !8186
  br i1 %10, label %11, label %8, !dbg !8184, !llvm.loop !8187

11:                                               ; preds = %8
  ret void, !dbg !8189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !8190 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8191
  %2 = and i32 %1, -16777217, !dbg !8191
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8191
  ret void, !dbg !8192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !8193 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8194
  %2 = or i32 %1, 16777216, !dbg !8194
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8194
  ret void, !dbg !8195
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !8196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8197
  %2 = lshr i32 %1, 25, !dbg !8198
  %3 = and i32 %2, 1, !dbg !8198
  ret i32 %3, !dbg !8199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !8200 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8201
  %2 = lshr i32 %1, 1, !dbg !8202
  %3 = and i32 %2, 1, !dbg !8202
  ret i32 %3, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !8204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8205
  %2 = or i32 %1, 1, !dbg !8205
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8205
  ret void, !dbg !8206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !8207 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8208
  %2 = or i32 %1, 1, !dbg !8208
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8208
  ret void, !dbg !8209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !8210 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8211
  %2 = lshr i32 %1, 1, !dbg !8212
  %3 = and i32 %2, 1, !dbg !8212
  ret i32 %3, !dbg !8213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8214 {
  ret i32 16000000, !dbg !8216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !8219 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8220
  ret void, !dbg !8221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !8222 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 262144, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8228, metadata !DIExpression()), !dbg !8229
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8230
  %2 = and i32 %1, -16580609, !dbg !8230
  %3 = or i32 %2, 4456448, !dbg !8230
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8230
  ret void, !dbg !8231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #11 !dbg !8232 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8233
  %2 = zext i8 %1 to i32, !dbg !8233
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8233
  ret i32 %3, !dbg !8234
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !8235 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !8236
  ret void, !dbg !8237
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !8238 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8240, metadata !DIExpression()), !dbg !8242
  %2 = bitcast i32* %1 to i8*, !dbg !8243
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8243
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8241, metadata !DIExpression()), !dbg !8244
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8245
  %4 = or i32 %3, 1, !dbg !8245
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8245
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8246
  %6 = and i32 %5, 1, !dbg !8246
  store volatile i32 %6, i32* %1, align 4, !dbg !8247
  %7 = load volatile i32, i32* %1, align 4, !dbg !8248
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8249
  ret void, !dbg !8249
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8252, metadata !DIExpression()), !dbg !8253
  %2 = tail call fastcc zeroext i1 @device_is_ready.43() #26, !dbg !8254
  br i1 %2, label %3, label %4, !dbg !8256

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8257
  br label %4, !dbg !8258

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8253
  ret i32 %5, !dbg !8259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.43() unnamed_addr #1 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8264, metadata !DIExpression()), !dbg !8265
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8266, !srcloc !8268
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.46() #26, !dbg !8269
  ret i1 %1, !dbg !8270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8271 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8272
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8277, metadata !DIExpression()), !dbg !8278
  %2 = icmp eq i32 %0, 10, !dbg !8279
  br i1 %2, label %3, label %4, !dbg !8281

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.44(i8 noundef zeroext 13) #26, !dbg !8282
  br label %4, !dbg !8284

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8285
  tail call fastcc void @uart_poll_out.44(i8 noundef zeroext %5) #26, !dbg !8286
  ret i32 %0, !dbg !8287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8288 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8290, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i8 %0, metadata !8291, metadata !DIExpression()), !dbg !8292
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8293, !srcloc !8295
  tail call fastcc void @z_impl_uart_poll_out.45(i8 noundef zeroext %0) #26, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.45(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8298 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8300, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8 %0, metadata !8301, metadata !DIExpression()), !dbg !8303
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8304
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8302, metadata !DIExpression()), !dbg !8303
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8305
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8305
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #27, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.46() unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8310, metadata !DIExpression()), !dbg !8311
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !8312
  ret i1 %1, !dbg !8313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8361, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8362, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8363, metadata !DIExpression()), !dbg !8364
  ret void, !dbg !8365
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8366 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8368, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i8 %1, metadata !8369, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8370, metadata !DIExpression()), !dbg !8373
  %5 = bitcast i32* %4 to i8*, !dbg !8374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8374
  call void @llvm.dbg.value(metadata i32* %4, metadata !8372, metadata !DIExpression(DW_OP_deref)), !dbg !8373
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8375
  call void @llvm.dbg.value(metadata i32 %6, metadata !8371, metadata !DIExpression()), !dbg !8373
  %7 = icmp eq i32 %6, 0, !dbg !8376
  br i1 %7, label %8, label %31, !dbg !8378

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8371, metadata !DIExpression()), !dbg !8373
  %9 = and i32 %2, 131072, !dbg !8379
  %10 = icmp eq i32 %9, 0, !dbg !8381
  br i1 %10, label %28, label %11, !dbg !8382

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8383
  %13 = icmp eq i32 %12, 0, !dbg !8386
  br i1 %13, label %18, label %14, !dbg !8387

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8388
  %16 = shl nuw i32 1, %15, !dbg !8388
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8390
  br label %25, !dbg !8391

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8392
  %20 = icmp eq i32 %19, 0, !dbg !8394
  %21 = zext i8 %1 to i32, !dbg !8373
  br i1 %20, label %25, label %22, !dbg !8395

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8396
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8398
  br label %25, !dbg !8399

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8400
  %27 = load i32, i32* %4, align 4, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %30, metadata !8372, metadata !DIExpression()), !dbg !8373
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8402
  br label %31, !dbg !8403

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8400
  %30 = load i32, i32* %4, align 4, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %30, metadata !8372, metadata !DIExpression()), !dbg !8373
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8402
  call void @llvm.dbg.value(metadata i32 0, metadata !8371, metadata !DIExpression()), !dbg !8373
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8404
  ret i32 %6, !dbg !8404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata i32* %1, metadata !8410, metadata !DIExpression()), !dbg !8414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8415
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8415
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8411, metadata !DIExpression()), !dbg !8414
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8416
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8416
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8416
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8413, metadata !DIExpression()), !dbg !8414
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8417
  store i32 %9, i32* %1, align 4, !dbg !8418
  ret i32 0, !dbg !8419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !8420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8422, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %1, metadata !8423, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %2, metadata !8424, metadata !DIExpression()), !dbg !8428
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8429
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8429
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8429
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8425, metadata !DIExpression()), !dbg !8428
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8430
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8430
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8430
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8426, metadata !DIExpression()), !dbg !8428
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %10, metadata !8427, metadata !DIExpression()), !dbg !8428
  %11 = xor i32 %1, -1, !dbg !8432
  %12 = and i32 %10, %11, !dbg !8433
  %13 = and i32 %2, %1, !dbg !8434
  %14 = or i32 %12, %13, !dbg !8435
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8436
  ret i32 0, !dbg !8437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8440, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.value(metadata i32 %1, metadata !8441, metadata !DIExpression()), !dbg !8444
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8445
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8445
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8445
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8442, metadata !DIExpression()), !dbg !8444
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8446
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8446
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8446
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8443, metadata !DIExpression()), !dbg !8444
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8447
  store volatile i32 %1, i32* %9, align 4, !dbg !8447
  ret i32 0, !dbg !8448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8451, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i32 %1, metadata !8452, metadata !DIExpression()), !dbg !8455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8456
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8456
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8453, metadata !DIExpression()), !dbg !8455
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8457
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8457
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8457
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8454, metadata !DIExpression()), !dbg !8455
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8458
  ret i32 0, !dbg !8459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8462, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 %1, metadata !8463, metadata !DIExpression()), !dbg !8466
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8467
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8467
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8467
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8464, metadata !DIExpression()), !dbg !8466
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8468
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8468
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8468
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8465, metadata !DIExpression()), !dbg !8466
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8469
  %10 = load volatile i32, i32* %9, align 4, !dbg !8469
  %11 = xor i32 %10, %1, !dbg !8469
  store volatile i32 %11, i32* %9, align 4, !dbg !8469
  ret i32 0, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8473, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i8 %1, metadata !8474, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %2, metadata !8475, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %3, metadata !8476, metadata !DIExpression()), !dbg !8483
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8484
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8484
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8484
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8477, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i8* undef, metadata !8478, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 0, metadata !8480, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 0, metadata !8481, metadata !DIExpression()), !dbg !8483
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8485

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8486
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8490
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8491
  %12 = load i32, i32* %11, align 4, !dbg !8491
  %13 = icmp eq i32 %10, %12, !dbg !8492
  br i1 %13, label %14, label %29, !dbg !8493

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8494
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8496
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8497
  br label %29, !dbg !8498

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8499
  %17 = load i8*, i8** %16, align 4, !dbg !8499
  call void @llvm.dbg.value(metadata i8* %17, metadata !8478, metadata !DIExpression()), !dbg !8483
  %18 = zext i8 %1 to i32, !dbg !8500
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8502
  %20 = icmp eq i32 %19, 0, !dbg !8503
  br i1 %20, label %21, label %29, !dbg !8504

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8505
  %23 = load i32, i32* %22, align 4, !dbg !8505
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8506
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8507

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8480, metadata !DIExpression()), !dbg !8483
  br label %27, !dbg !8508

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8480, metadata !DIExpression()), !dbg !8483
  br label %27, !dbg !8510

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8480, metadata !DIExpression()), !dbg !8483
  br label %27, !dbg !8511

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8483
  call void @llvm.dbg.value(metadata i32 %28, metadata !8480, metadata !DIExpression()), !dbg !8483
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8512
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8513
  br label %29, !dbg !8513

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8483
  call void @llvm.dbg.value(metadata i32 %30, metadata !8481, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.label(metadata !8482), !dbg !8514
  ret i32 %30, !dbg !8515
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8518, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i1 %2, metadata !8520, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8522
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8523
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8523
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8521, metadata !DIExpression()), !dbg !8522
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8524
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8525
  ret i32 %8, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8533, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8534, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i1 %2, metadata !8535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8536
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8537
  br i1 %4, label %10, label %5, !dbg !8539

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8540
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8543
  %8 = or i1 %7, %2, !dbg !8544
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8544
  br i1 %2, label %11, label %13, !dbg !8544

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8545

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8546
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8549
  br label %13, !dbg !8550

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8536
  ret i32 %14, !dbg !8551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8552 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8556, metadata !DIExpression()), !dbg !8557
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8558
  %3 = icmp eq %struct._snode* %2, null, !dbg !8558
  ret i1 %3, !dbg !8558
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8559 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8563, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8564, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8565, metadata !DIExpression()), !dbg !8567
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8568
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8565, metadata !DIExpression()), !dbg !8567
  %4 = icmp eq %struct._snode* %3, null, !dbg !8570
  br i1 %4, label %15, label %5, !dbg !8568

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8565, metadata !DIExpression()), !dbg !8567
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8572
  br i1 %6, label %9, label %11, !dbg !8575

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8565, metadata !DIExpression()), !dbg !8567
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8572
  br i1 %8, label %9, label %11, !dbg !8575, !llvm.loop !8576

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8577
  br label %15, !dbg !8577

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8565, metadata !DIExpression()), !dbg !8567
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8570
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8566, metadata !DIExpression()), !dbg !8567
  %14 = icmp eq %struct._snode* %13, null, !dbg !8570
  br i1 %14, label %15, label %7, !dbg !8568, !llvm.loop !8576

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8580 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8584, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8585, metadata !DIExpression()), !dbg !8586
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8587
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8587
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8587
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8588
  %5 = icmp eq %struct._snode* %4, null, !dbg !8588
  br i1 %5, label %6, label %8, !dbg !8587

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8590
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8590
  br label %8, !dbg !8590

8:                                                ; preds = %6, %2
  ret void, !dbg !8587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8592 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8596, metadata !DIExpression()), !dbg !8597
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8598
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8598
  ret %struct._snode* %3, !dbg !8599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8600 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8605, metadata !DIExpression()), !dbg !8606
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8607
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8608
  ret void, !dbg !8609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8610 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8612, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8613, metadata !DIExpression()), !dbg !8614
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8615
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8622
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8622
  ret %struct._snode* %3, !dbg !8623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8624 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8626, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8627, metadata !DIExpression()), !dbg !8628
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8629
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8630
  ret void, !dbg !8631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8632 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8636, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8637, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8638, metadata !DIExpression()), !dbg !8639
  %4 = icmp eq %struct._snode* %1, null, !dbg !8640
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8642
  br i1 %4, label %6, label %11, !dbg !8643

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8644
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8646
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8646
  br i1 %8, label %9, label %15, !dbg !8644

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8648
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8648
  br label %15, !dbg !8648

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8650
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8652
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8652
  br i1 %13, label %14, label %15, !dbg !8650

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8654
  br label %15, !dbg !8654

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8643
  ret void, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8660, metadata !DIExpression()), !dbg !8661
  %2 = icmp eq %struct._snode* %0, null, !dbg !8662
  br i1 %2, label %5, label %3, !dbg !8662

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8662
  br label %5, !dbg !8662

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8662
  ret %struct._snode* %6, !dbg !8662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8663 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8665, metadata !DIExpression()), !dbg !8666
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8667
  ret %struct._snode* %2, !dbg !8667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8668 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8670, metadata !DIExpression()), !dbg !8671
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8672
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8672
  ret %struct._snode* %3, !dbg !8673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8679
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8680, !range !8681
  call void @llvm.dbg.value(metadata i32 %2, metadata !8677, metadata !DIExpression()), !dbg !8679
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %3, metadata !8678, metadata !DIExpression()), !dbg !8679
  ret i32 %3, !dbg !8683
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8686, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata i8* %1, metadata !8687, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata i8* %1, metadata !8688, metadata !DIExpression()), !dbg !8689
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8690
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8690
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8691
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8691
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8691
  %8 = shl nuw i32 1, %0, !dbg !8692
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8695 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8699, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8701, metadata !DIExpression()), !dbg !8705
  %4 = bitcast i64* %3 to i8*, !dbg !8706
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8706
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !8703, metadata !DIExpression()), !dbg !8705
  store i64 4294967328, i64* %3, align 8, !dbg !8707
  call void @llvm.dbg.value(metadata i64* %3, metadata !8703, metadata !DIExpression(DW_OP_deref)), !dbg !8705
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %5, metadata !8704, metadata !DIExpression()), !dbg !8705
  %6 = icmp eq i32 %5, 0, !dbg !8709
  br i1 %6, label %7, label %8, !dbg !8711

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8712
  br label %8, !dbg !8713

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8714
  ret void, !dbg !8714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i8* %0, metadata !8718, metadata !DIExpression()), !dbg !8720
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8721
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8722
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8722
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !8723
  ret i32 %5, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8727, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %1, metadata !8728, metadata !DIExpression()), !dbg !8730
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %3, metadata !8729, metadata !DIExpression()), !dbg !8730
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8732
  ret void, !dbg !8733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8738, metadata !DIExpression()), !dbg !8739
  %2 = sdiv i32 %0, 4, !dbg !8740
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8741
  %6 = add nsw i32 %5, 16, !dbg !8742
  %7 = shl i32 15, %6, !dbg !8743
  %8 = or i32 %7, %2, !dbg !8744
  ret i32 %8, !dbg !8745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8751, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i32 %1, metadata !8752, metadata !DIExpression()), !dbg !8753
  %3 = and i32 %1, 3, !dbg !8754
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !8754
  %5 = load volatile i32, i32* %4, align 4, !dbg !8754
  %6 = lshr i32 %1, 16, !dbg !8754
  %7 = xor i32 %6, -1, !dbg !8754
  %8 = and i32 %5, %7, !dbg !8754
  call void @llvm.dbg.value(metadata i32 %6, metadata !8755, metadata !DIExpression()) #25, !dbg !8759
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8761, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %9, metadata !8758, metadata !DIExpression()) #25, !dbg !8759
  call void @llvm.dbg.value(metadata i32 %9, metadata !8763, metadata !DIExpression()) #25, !dbg !8768
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8770, !range !3964
  %11 = shl i32 %0, %10, !dbg !8754
  %12 = or i32 %11, %8, !dbg !8754
  store volatile i32 %12, i32* %4, align 4, !dbg !8754
  ret void, !dbg !8771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8772 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8776, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8777, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %2, metadata !8778, metadata !DIExpression()), !dbg !8781
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8782
  %5 = icmp eq %struct._snode* %4, null, !dbg !8782
  br i1 %5, label %21, label %6, !dbg !8782

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8784
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8780, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8779, metadata !DIExpression()), !dbg !8781
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8785
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8785
  %11 = load i32, i32* %10, align 4, !dbg !8785
  %12 = and i32 %11, %2, !dbg !8789
  %13 = icmp eq i32 %12, 0, !dbg !8789
  br i1 %13, label %19, label %14, !dbg !8790

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8779, metadata !DIExpression()), !dbg !8781
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8791
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8791
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8791
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8793
  br label %19, !dbg !8794

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8779, metadata !DIExpression()), !dbg !8781
  %20 = icmp eq %struct._snode* %8, null, !dbg !8795
  br i1 %20, label %21, label %6, !dbg !8795

21:                                               ; preds = %19, %3
  ret void, !dbg !8796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = and i32 %0, 3, !dbg !8801
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !8801
  %4 = load volatile i32, i32* %3, align 4, !dbg !8801
  %5 = lshr i32 %0, 16, !dbg !8801
  %6 = and i32 %4, %5, !dbg !8801
  call void @llvm.dbg.value(metadata i32 %5, metadata !8755, metadata !DIExpression()) #25, !dbg !8802
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8804, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %7, metadata !8758, metadata !DIExpression()) #25, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %7, metadata !8763, metadata !DIExpression()) #25, !dbg !8805
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8807, !range !3964
  %9 = lshr i32 %6, %8, !dbg !8808
  ret i32 %9, !dbg !8809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = shl i32 %1, 16, !dbg !8818
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8818
  store volatile i32 %3, i32* %4, align 4, !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !8820 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8824, metadata !DIExpression()), !dbg !8825
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8826
  %3 = load volatile i32, i32* %2, align 4, !dbg !8826
  ret i32 %3, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8828 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 %1, metadata !8831, metadata !DIExpression()), !dbg !8832
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8833
  store volatile i32 %1, i32* %3, align 4, !dbg !8833
  ret void, !dbg !8834
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !8835 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8837, metadata !DIExpression()), !dbg !8838
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8839
  %3 = load volatile i32, i32* %2, align 4, !dbg !8839
  ret i32 %3, !dbg !8840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8845, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32* %1, metadata !8846, metadata !DIExpression()), !dbg !8847
  %3 = and i32 %0, 131072, !dbg !8848
  %4 = icmp eq i32 %3, 0, !dbg !8850
  br i1 %4, label %22, label %5, !dbg !8851

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8852
  %6 = and i32 %0, 2, !dbg !8854
  %7 = icmp eq i32 %6, 0, !dbg !8856
  br i1 %7, label %11, label %8, !dbg !8857

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8858
  %10 = icmp eq i32 %9, 0, !dbg !8858
  br i1 %10, label %33, label %11, !dbg !8861

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8862
  store i32 %12, i32* %1, align 4, !dbg !8862
  %13 = and i32 %0, 16, !dbg !8863
  %14 = icmp eq i32 %13, 0, !dbg !8865
  br i1 %14, label %17, label %15, !dbg !8866

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8867
  br label %31, !dbg !8869

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8870
  %19 = icmp eq i32 %18, 0, !dbg !8872
  br i1 %19, label %33, label %20, !dbg !8873

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8874
  br label %31, !dbg !8876

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8877
  %24 = icmp eq i32 %23, 0, !dbg !8879
  br i1 %24, label %31, label %25, !dbg !8880

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8881
  %27 = icmp eq i32 %26, 0, !dbg !8884
  br i1 %27, label %28, label %31, !dbg !8885

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8886
  br label %33, !dbg !8887

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8847
  ret i32 %34, !dbg !8887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8892, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %1, metadata !8893, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8894, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %3, metadata !8895, metadata !DIExpression()), !dbg !8903
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8904
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8904
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8904
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8896, metadata !DIExpression()), !dbg !8903
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8905
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8905
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8897, metadata !DIExpression()), !dbg !8903
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %11, metadata !8898, metadata !DIExpression()), !dbg !8903
  %12 = and i32 %2, 48, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %12, metadata !8899, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8901, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8902, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8903
  %13 = lshr i32 %2, 6, !dbg !8908
  %14 = and i32 %13, 1, !dbg !8908
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !8909
  %15 = lshr i32 %2, 7, !dbg !8910
  %16 = and i32 %15, 3, !dbg !8910
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !8911
  %17 = lshr i32 %2, 9, !dbg !8912
  %18 = and i32 %17, 3, !dbg !8912
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !8913
  %19 = icmp eq i32 %12, 32, !dbg !8914
  br i1 %19, label %20, label %24, !dbg !8916

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8917
  br i1 %21, label %22, label %23, !dbg !8920

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8921
  br label %24, !dbg !8923

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8924
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8926
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !8927
  ret void, !dbg !8928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !8929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8931, metadata !DIExpression()), !dbg !8933
  %2 = shl nuw i32 1, %0, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %2, metadata !8932, metadata !DIExpression()), !dbg !8933
  ret i32 %2, !dbg !8935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !8936 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8940, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8941, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %2, metadata !8942, metadata !DIExpression()), !dbg !8943
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8944
  %5 = load volatile i32, i32* %4, align 4, !dbg !8944
  %6 = xor i32 %1, -1, !dbg !8944
  %7 = and i32 %5, %6, !dbg !8944
  %8 = mul i32 %2, %1, !dbg !8944
  %9 = or i32 %7, %8, !dbg !8944
  store volatile i32 %9, i32* %4, align 4, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8946 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %2, metadata !8950, metadata !DIExpression()), !dbg !8951
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8952
  %5 = load volatile i32, i32* %4, align 4, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8953
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8955, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8956
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8958, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !8952
  %9 = shl i32 3, %8, !dbg !8952
  %10 = xor i32 %9, -1, !dbg !8952
  %11 = and i32 %5, %10, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8961
  %12 = shl i32 %2, %8, !dbg !8952
  %13 = or i32 %11, %12, !dbg !8952
  store volatile i32 %13, i32* %4, align 4, !dbg !8952
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8964 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8966, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 %1, metadata !8967, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 %2, metadata !8968, metadata !DIExpression()), !dbg !8969
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8970
  %5 = load volatile i32, i32* %4, align 4, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8971
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8973, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8971
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8974
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8976, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !8970
  %9 = shl i32 3, %8, !dbg !8970
  %10 = xor i32 %9, -1, !dbg !8970
  %11 = and i32 %5, %10, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8979
  %12 = shl i32 %2, %8, !dbg !8970
  %13 = or i32 %11, %12, !dbg !8970
  store volatile i32 %13, i32* %4, align 4, !dbg !8970
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %1, metadata !8985, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8987
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8988
  %5 = load volatile i32, i32* %4, align 4, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8989
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8991, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8992
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8994, !range !3964
  %8 = shl nuw nsw i32 %7, 2, !dbg !8988
  %9 = shl i32 15, %8, !dbg !8988
  %10 = xor i32 %9, -1, !dbg !8988
  %11 = and i32 %5, %10, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !8997
  %12 = shl i32 %2, %8, !dbg !8988
  %13 = or i32 %11, %12, !dbg !8988
  store volatile i32 %13, i32* %4, align 4, !dbg !8988
  ret void, !dbg !8999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9000 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9002, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 %2, metadata !9004, metadata !DIExpression()), !dbg !9005
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9006
  %5 = load volatile i32, i32* %4, align 4, !dbg !9006
  %6 = lshr i32 %1, 8, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %6, metadata !8755, metadata !DIExpression()) #25, !dbg !9007
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9009, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %7, metadata !8758, metadata !DIExpression()) #25, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %7, metadata !8763, metadata !DIExpression()) #25, !dbg !9010
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9012, !range !3964
  %9 = shl nuw nsw i32 %8, 2, !dbg !9006
  %10 = shl i32 15, %9, !dbg !9006
  %11 = xor i32 %10, -1, !dbg !9006
  %12 = and i32 %5, %11, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %6, metadata !8755, metadata !DIExpression()) #25, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %7, metadata !8758, metadata !DIExpression()) #25, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %7, metadata !8763, metadata !DIExpression()) #25, !dbg !9015
  %13 = shl i32 %2, %9, !dbg !9006
  %14 = or i32 %12, %13, !dbg !9006
  store volatile i32 %14, i32* %4, align 4, !dbg !9006
  ret void, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9020, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.value(metadata i32 %1, metadata !9021, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.value(metadata i32 %2, metadata !9022, metadata !DIExpression()), !dbg !9023
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9024
  %5 = load volatile i32, i32* %4, align 4, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !9025
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9027, !srcloc !8762
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !9028
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9030, !range !3964
  %8 = shl nuw nsw i32 %7, 1, !dbg !9024
  %9 = shl i32 3, %8, !dbg !9024
  %10 = xor i32 %9, -1, !dbg !9024
  %11 = and i32 %5, %10, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %1, metadata !8755, metadata !DIExpression()) #25, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()) #25, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()) #25, !dbg !9033
  %12 = shl i32 %2, %8, !dbg !9024
  %13 = or i32 %11, %12, !dbg !9024
  store volatile i32 %13, i32* %4, align 4, !dbg !9024
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9038, metadata !DIExpression()), !dbg !9041
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9042
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9042
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9039, metadata !DIExpression()), !dbg !9041
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9043
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9044
  %6 = tail call fastcc zeroext i1 @device_is_ready.58() #26, !dbg !9045
  br i1 %6, label %7, label %11, !dbg !9047

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %8, metadata !9040, metadata !DIExpression()), !dbg !9041
  %9 = icmp slt i32 %8, 0, !dbg !9049
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9051
  br label %11, !dbg !9051

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9041
  ret i32 %12, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.58() unnamed_addr #1 !dbg !9053 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9057, metadata !DIExpression()), !dbg !9058
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9059, !srcloc !9061
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.59() #26, !dbg !9062
  ret i1 %1, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9068, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i8 1, metadata !9069, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9070, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 0, metadata !9071, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9072, metadata !DIExpression()), !dbg !9073
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9074
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9074
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9074
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9070, metadata !DIExpression()), !dbg !9073
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9075
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9078
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %7, metadata !9071, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 %7, metadata !9071, metadata !DIExpression()), !dbg !9073
  ret i32 %7, !dbg !9080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.59() unnamed_addr #1 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9083, metadata !DIExpression()), !dbg !9084
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !9085
  ret i1 %1, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9091, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %1, metadata !9092, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %2, metadata !9093, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %3, metadata !9094, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 0, metadata !9095, metadata !DIExpression()), !dbg !9099
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9100
  %5 = icmp eq i32 %3, 17, !dbg !9101
  br i1 %5, label %6, label %14, !dbg !9102

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %7, metadata !9096, metadata !DIExpression()), !dbg !9104
  %8 = icmp eq i32 %7, 0, !dbg !9105
  %9 = shl nuw i32 1, %1, !dbg !9107
  br i1 %8, label %12, label %10, !dbg !9108

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9109
  br label %14, !dbg !9111

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9112
  br label %14, !dbg !9115

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9116
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9119, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i8* %1, metadata !9120, metadata !DIExpression()), !dbg !9123
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9124
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9124
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9124
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9121, metadata !DIExpression()), !dbg !9123
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9125
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9125
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9127
  %9 = icmp eq i32 %8, 0, !dbg !9127
  br i1 %9, label %12, label %10, !dbg !9128

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9129
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9131
  br label %12, !dbg !9132

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9133
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9135
  %15 = icmp eq i32 %14, 0, !dbg !9135
  br i1 %15, label %19, label %16, !dbg !9136

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9137
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9138
  store i8 %18, i8* %1, align 1, !dbg !9139
  br label %19, !dbg !9140

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9123
  ret i32 %20, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9144, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i8 %1, metadata !9145, metadata !DIExpression()), !dbg !9148
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9149
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9149
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9149
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9146, metadata !DIExpression()), !dbg !9148
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9150

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9151
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9154
  %10 = icmp eq i32 %9, 0, !dbg !9154
  br i1 %10, label %18, label %11, !dbg !9155

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9156, !srcloc !9163
  call void @llvm.dbg.value(metadata i32 undef, metadata !9159, metadata !DIExpression()) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i32 undef, metadata !9147, metadata !DIExpression()), !dbg !9148
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9165
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9167
  %15 = icmp eq i32 %14, 0, !dbg !9167
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9156
  br i1 %15, label %17, label %19, !dbg !9168

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9159, metadata !DIExpression()) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %16, metadata !9147, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i32 undef, metadata !9169, metadata !DIExpression()) #25, !dbg !9172
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9174, !srcloc !9175
  br label %18, !dbg !9176

18:                                               ; preds = %17, %7
  br label %7, !dbg !9151, !llvm.loop !9177

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9156
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9179
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %20, metadata !9169, metadata !DIExpression()) #25, !dbg !9181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9183, !srcloc !9175
  ret void, !dbg !9184
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !9185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9187, metadata !DIExpression()), !dbg !9190
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9191
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9191
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9191
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9188, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 0, metadata !9189, metadata !DIExpression()), !dbg !9190
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9192
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9192
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9194
  %8 = icmp ne i32 %7, 0, !dbg !9194
  %9 = zext i1 %8 to i32, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %9, metadata !9189, metadata !DIExpression()), !dbg !9190
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9196
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9198
  %12 = icmp eq i32 %11, 0, !dbg !9198
  %13 = or i32 %9, 2, !dbg !9199
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %14, metadata !9189, metadata !DIExpression()), !dbg !9190
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9200
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9202
  %17 = icmp eq i32 %16, 0, !dbg !9202
  %18 = or i32 %14, 4, !dbg !9203
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %19, metadata !9189, metadata !DIExpression()), !dbg !9190
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9204
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9206
  %22 = icmp eq i32 %21, 0, !dbg !9206
  %23 = or i32 %19, 8, !dbg !9207
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %24, metadata !9189, metadata !DIExpression()), !dbg !9190
  %25 = and i32 %24, 8, !dbg !9208
  %26 = icmp eq i32 %25, 0, !dbg !9208
  br i1 %26, label %29, label %27, !dbg !9210

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9211
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9213
  br label %29, !dbg !9214

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9215
  %31 = icmp eq i32 %30, 0, !dbg !9215
  br i1 %31, label %34, label %32, !dbg !9217

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9218
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9220
  br label %34, !dbg !9221

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9222
  %36 = icmp eq i32 %35, 0, !dbg !9222
  br i1 %36, label %39, label %37, !dbg !9224

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9225
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9227
  br label %39, !dbg !9228

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9229
  %41 = icmp eq i32 %40, 0, !dbg !9229
  br i1 %41, label %44, label %42, !dbg !9231

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9232
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9234
  br label %44, !dbg !9235

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9236
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9237
  ret i32 %24, !dbg !9238
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9241, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9242, metadata !DIExpression()), !dbg !9250
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9251
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9251
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9243, metadata !DIExpression()), !dbg !9250
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9252
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9252
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9252
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9244, metadata !DIExpression()), !dbg !9250
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9253
  %10 = load i8, i8* %9, align 4, !dbg !9253
  %11 = zext i8 %10 to i32, !dbg !9254
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %12, metadata !9246, metadata !DIExpression()), !dbg !9250
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9256
  %14 = load i8, i8* %13, align 1, !dbg !9256
  %15 = zext i8 %14 to i32, !dbg !9257
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %16, metadata !9247, metadata !DIExpression()), !dbg !9250
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9259
  %18 = load i8, i8* %17, align 2, !dbg !9259
  %19 = zext i8 %18 to i32, !dbg !9260
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %20, metadata !9248, metadata !DIExpression()), !dbg !9250
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9262
  %22 = load i8, i8* %21, align 1, !dbg !9262
  %23 = zext i8 %22 to i32, !dbg !9263
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9264
  call void @llvm.dbg.value(metadata i32 %24, metadata !9249, metadata !DIExpression()), !dbg !9250
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9265

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9267
  br i1 %26, label %69, label %27, !dbg !9269

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9270

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9271
  br i1 %29, label %65, label %30, !dbg !9271

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9273
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9250
  br i1 %31, label %38, label %34, !dbg !9275

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9276
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9276

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9279
  br i1 %37, label %38, label %69, !dbg !9280

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9281
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9282
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9283
  %41 = icmp eq i32 %12, %40, !dbg !9285
  br i1 %41, label %43, label %42, !dbg !9286

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9287
  br label %43, !dbg !9289

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9290
  %45 = icmp eq i32 %16, %44, !dbg !9292
  br i1 %45, label %47, label %46, !dbg !9293

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9294
  br label %47, !dbg !9296

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9297
  %49 = icmp eq i32 %20, %48, !dbg !9299
  br i1 %49, label %51, label %50, !dbg !9300

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9301
  br label %51, !dbg !9303

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9304
  %53 = icmp eq i32 %24, %52, !dbg !9306
  br i1 %53, label %55, label %54, !dbg !9307

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9308
  br label %55, !dbg !9310

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9311
  %57 = load i32, i32* %56, align 4, !dbg !9311
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9313
  %59 = load i32, i32* %58, align 4, !dbg !9313
  %60 = icmp eq i32 %57, %59, !dbg !9314
  br i1 %60, label %63, label %61, !dbg !9315

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9316
  %62 = load i32, i32* %56, align 4, !dbg !9318
  store i32 %62, i32* %58, align 4, !dbg !9319
  br label %63, !dbg !9320

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9321
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9322
  br label %69, !dbg !9323

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9271
  %67 = and i8 %66, 1, !dbg !9271
  %68 = icmp eq i8 %67, 0, !dbg !9271
  br i1 %68, label %30, label %69, !dbg !9271

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9250
  ret i32 %70, !dbg !9324
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9327, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9328, metadata !DIExpression()), !dbg !9330
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9331
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9331
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9331
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9329, metadata !DIExpression()), !dbg !9330
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9332
  %7 = load i32, i32* %6, align 4, !dbg !9332
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9333
  store i32 %7, i32* %8, align 4, !dbg !9334
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9335, !range !9336
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9337
  %11 = trunc i32 %10 to i8, !dbg !9337
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9338
  store i8 %11, i8* %12, align 4, !dbg !9339
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9340, !range !9341
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9342
  %15 = trunc i32 %14 to i8, !dbg !9342
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9343
  store i8 %15, i8* %16, align 1, !dbg !9344
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9345
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9346, !range !9336
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9347
  %20 = trunc i32 %19 to i8, !dbg !9347
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9348
  store i8 %20, i8* %21, align 2, !dbg !9349
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9350, !range !9351
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9352
  %24 = trunc i32 %23 to i8, !dbg !9352
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9353
  store i8 %24, i8* %25, align 1, !dbg !9354
  ret i32 0, !dbg !9355
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9356 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9358, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8* %1, metadata !9359, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 %2, metadata !9360, metadata !DIExpression()), !dbg !9364
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9365
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9365
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9365
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9361, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8 0, metadata !9362, metadata !DIExpression()), !dbg !9364
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9366
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9366
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9368
  %10 = icmp eq i32 %9, 0, !dbg !9368
  br i1 %10, label %30, label %11, !dbg !9369

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9370, !srcloc !9163
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %13, metadata !9159, metadata !DIExpression()) #25, !dbg !9372
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()) #25, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %13, metadata !9363, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8 0, metadata !9362, metadata !DIExpression()), !dbg !9364
  %14 = icmp sgt i32 %2, 0, !dbg !9373
  br i1 %14, label %15, label %28, !dbg !9374

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9362, metadata !DIExpression()), !dbg !9364
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9375
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9376
  %20 = icmp eq i32 %19, 0, !dbg !9374
  br i1 %20, label %28, label %21, !dbg !9377

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9378
  %23 = add i8 %17, 1, !dbg !9380
  call void @llvm.dbg.value(metadata i8 %23, metadata !9362, metadata !DIExpression()), !dbg !9364
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9381
  %25 = load i8, i8* %24, align 1, !dbg !9381
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9382
  %26 = zext i8 %23 to i32, !dbg !9383
  %27 = icmp slt i32 %26, %2, !dbg !9373
  br i1 %27, label %15, label %28, !dbg !9374, !llvm.loop !9384

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9383
  call void @llvm.dbg.value(metadata i32 %13, metadata !9169, metadata !DIExpression()) #25, !dbg !9386
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9388, !srcloc !9175
  br label %30, !dbg !9389

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9364
  ret i32 %31, !dbg !9390
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #15 !dbg !9391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9393, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8* %1, metadata !9394, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %2, metadata !9395, metadata !DIExpression()), !dbg !9398
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9399
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9399
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9399
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9396, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8 0, metadata !9397, metadata !DIExpression()), !dbg !9398
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9400
  call void @llvm.dbg.value(metadata i8 0, metadata !9397, metadata !DIExpression()), !dbg !9398
  %8 = icmp sgt i32 %2, 0, !dbg !9401
  br i1 %8, label %9, label %28, !dbg !9402

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9397, metadata !DIExpression()), !dbg !9398
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9400
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9403
  %14 = icmp eq i32 %13, 0, !dbg !9402
  br i1 %14, label %28, label %15, !dbg !9404

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9405
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9407
  %18 = add i8 %11, 1, !dbg !9408
  call void @llvm.dbg.value(metadata i8 %18, metadata !9397, metadata !DIExpression()), !dbg !9398
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9409
  store i8 %17, i8* %19, align 1, !dbg !9410
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9411
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9413
  %22 = icmp eq i32 %21, 0, !dbg !9413
  br i1 %22, label %25, label %23, !dbg !9414

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9415
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9417
  br label %25, !dbg !9418

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9397, metadata !DIExpression()), !dbg !9398
  %26 = zext i8 %18 to i32, !dbg !9419
  %27 = icmp slt i32 %26, %2, !dbg !9401
  br i1 %27, label %9, label %28, !dbg !9402, !llvm.loop !9420

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9419
  ret i32 %29, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9425, metadata !DIExpression()), !dbg !9427
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9428
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9428
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9426, metadata !DIExpression()), !dbg !9427
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9429
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9429
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9430
  ret void, !dbg !9431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9432 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9434, metadata !DIExpression()), !dbg !9436
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9437
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9437
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9437
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9435, metadata !DIExpression()), !dbg !9436
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9438
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9438
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9439
  ret void, !dbg !9440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9446
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9446
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9446
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9444, metadata !DIExpression()), !dbg !9445
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9447
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9447
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9448
  %8 = icmp eq i32 %7, 0, !dbg !9448
  br i1 %8, label %14, label %9, !dbg !9449

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9450
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9451
  %12 = icmp ne i32 %11, 0, !dbg !9449
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9455, metadata !DIExpression()), !dbg !9457
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9458
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9458
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9458
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9456, metadata !DIExpression()), !dbg !9457
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9459
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9459
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9460
  ret void, !dbg !9461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9464, metadata !DIExpression()), !dbg !9466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9467
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9467
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9465, metadata !DIExpression()), !dbg !9466
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9468
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9468
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9469
  ret void, !dbg !9470
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #17 !dbg !9471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9473, metadata !DIExpression()), !dbg !9475
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9476
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9476
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9476
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9474, metadata !DIExpression()), !dbg !9475
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9477
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9477
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9478
  ret i32 %7, !dbg !9479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9482, metadata !DIExpression()), !dbg !9484
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9485
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9485
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9485
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9483, metadata !DIExpression()), !dbg !9484
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9486
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9486
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9487
  ret i32 %7, !dbg !9488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9491, metadata !DIExpression()), !dbg !9493
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9494
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9494
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9494
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9492, metadata !DIExpression()), !dbg !9493
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9495
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9495
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9496
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9497
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9497
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !9497

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9499
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9501
  br label %11, !dbg !9502

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9501
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9503
  ret void, !dbg !9504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9507, metadata !DIExpression()), !dbg !9509
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9510
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9510
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9510
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9508, metadata !DIExpression()), !dbg !9509
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9511
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9511
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9512
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9513
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9513
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !9513

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9515
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9517
  br label %11, !dbg !9518

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9517
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9519
  ret void, !dbg !9520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !9521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9526
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9526
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9526
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9524, metadata !DIExpression()), !dbg !9525
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9527
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9527
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9528
  %8 = icmp eq i32 %7, 0, !dbg !9528
  br i1 %8, label %13, label %9, !dbg !9529

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9530
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9531
  %12 = icmp eq i32 %11, 0, !dbg !9531
  br i1 %12, label %13, label %22, !dbg !9532

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9533
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9534
  %16 = icmp eq i32 %15, 0, !dbg !9534
  br i1 %16, label %22, label %17, !dbg !9535

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9536
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9537
  %20 = icmp ne i32 %19, 0, !dbg !9535
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9539 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9541, metadata !DIExpression()), !dbg !9542
  ret i32 1, !dbg !9543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9546, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9547, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %2, metadata !9548, metadata !DIExpression()), !dbg !9550
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9551
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9551
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9549, metadata !DIExpression()), !dbg !9550
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9552
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9553
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9554
  store i8* %2, i8** %8, align 4, !dbg !9555
  ret void, !dbg !9556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9557 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9562, metadata !DIExpression()), !dbg !9563
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9564
  %3 = load volatile i32, i32* %2, align 4, !dbg !9564
  %4 = lshr i32 %3, 5, !dbg !9565
  %5 = and i32 %4, 1, !dbg !9565
  ret i32 %5, !dbg !9566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9569, metadata !DIExpression()), !dbg !9570
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9571
  %3 = load volatile i32, i32* %2, align 4, !dbg !9571
  %4 = lshr i32 %3, 5, !dbg !9572
  %5 = and i32 %4, 1, !dbg !9572
  ret i32 %5, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9576, metadata !DIExpression()), !dbg !9577
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9578
  %3 = load volatile i32, i32* %2, align 4, !dbg !9578
  %4 = lshr i32 %3, 6, !dbg !9579
  %5 = and i32 %4, 1, !dbg !9579
  ret i32 %5, !dbg !9580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9581 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9583, metadata !DIExpression()), !dbg !9584
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9585
  %3 = load volatile i32, i32* %2, align 4, !dbg !9585
  %4 = lshr i32 %3, 6, !dbg !9586
  %5 = and i32 %4, 1, !dbg !9586
  ret i32 %5, !dbg !9587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9588 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9592, metadata !DIExpression()), !dbg !9593
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9594
  %3 = load volatile i32, i32* %2, align 4, !dbg !9594
  %4 = and i32 %3, -2, !dbg !9594
  store volatile i32 %4, i32* %2, align 4, !dbg !9594
  ret void, !dbg !9595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9596 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9598, metadata !DIExpression()), !dbg !9599
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9600
  %3 = load volatile i32, i32* %2, align 4, !dbg !9600
  %4 = and i32 %3, -65, !dbg !9600
  store volatile i32 %4, i32* %2, align 4, !dbg !9600
  ret void, !dbg !9601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9602 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9604, metadata !DIExpression()), !dbg !9605
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9606
  %3 = load volatile i32, i32* %2, align 4, !dbg !9606
  %4 = and i32 %3, -257, !dbg !9606
  store volatile i32 %4, i32* %2, align 4, !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9610, metadata !DIExpression()), !dbg !9611
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9612
  %3 = load volatile i32, i32* %2, align 4, !dbg !9612
  %4 = or i32 %3, 1, !dbg !9612
  store volatile i32 %4, i32* %2, align 4, !dbg !9612
  ret void, !dbg !9613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9618
  %3 = load volatile i32, i32* %2, align 4, !dbg !9618
  %4 = or i32 %3, 64, !dbg !9618
  store volatile i32 %4, i32* %2, align 4, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9620 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9622, metadata !DIExpression()), !dbg !9623
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9624
  %3 = load volatile i32, i32* %2, align 4, !dbg !9624
  %4 = or i32 %3, 256, !dbg !9624
  store volatile i32 %4, i32* %2, align 4, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9626 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9628, metadata !DIExpression()), !dbg !9629
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9630
  %3 = load volatile i32, i32* %2, align 4, !dbg !9630
  %4 = and i32 %3, -33, !dbg !9630
  store volatile i32 %4, i32* %2, align 4, !dbg !9630
  ret void, !dbg !9631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9634, metadata !DIExpression()), !dbg !9635
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9636
  %3 = load volatile i32, i32* %2, align 4, !dbg !9636
  %4 = or i32 %3, 32, !dbg !9636
  store volatile i32 %4, i32* %2, align 4, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9638 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9640, metadata !DIExpression()), !dbg !9641
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9642
  %3 = load volatile i32, i32* %2, align 4, !dbg !9642
  %4 = lshr i32 %3, 7, !dbg !9643
  %5 = and i32 %4, 1, !dbg !9643
  ret i32 %5, !dbg !9644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9649
  %3 = load volatile i32, i32* %2, align 4, !dbg !9649
  %4 = and i32 %3, -65, !dbg !9649
  store volatile i32 %4, i32* %2, align 4, !dbg !9649
  ret void, !dbg !9650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9655
  %3 = load volatile i32, i32* %2, align 4, !dbg !9655
  %4 = or i32 %3, 64, !dbg !9655
  store volatile i32 %4, i32* %2, align 4, !dbg !9655
  ret void, !dbg !9656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9661, metadata !DIExpression()), !dbg !9662
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9663
  %3 = load volatile i32, i32* %2, align 4, !dbg !9663
  %4 = trunc i32 %3 to i8, !dbg !9664
  ret i8 %4, !dbg !9665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9666 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9668, metadata !DIExpression()), !dbg !9669
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9670
  %3 = load volatile i32, i32* %2, align 4, !dbg !9670
  %4 = lshr i32 %3, 3, !dbg !9671
  %5 = and i32 %4, 1, !dbg !9671
  ret i32 %5, !dbg !9672
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9673 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9675, metadata !DIExpression()), !dbg !9677
  %3 = bitcast i32* %2 to i8*, !dbg !9678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9676, metadata !DIExpression()), !dbg !9679
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9680
  %5 = load volatile i32, i32* %4, align 4, !dbg !9680
  store volatile i32 %5, i32* %2, align 4, !dbg !9681
  %6 = load volatile i32, i32* %2, align 4, !dbg !9682
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9683
  %8 = load volatile i32, i32* %7, align 4, !dbg !9683
  store volatile i32 %8, i32* %2, align 4, !dbg !9684
  %9 = load volatile i32, i32* %2, align 4, !dbg !9685
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9686
  ret void, !dbg !9686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9691, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i8 %1, metadata !9692, metadata !DIExpression()), !dbg !9693
  %3 = zext i8 %1 to i32, !dbg !9694
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9695
  store volatile i32 %3, i32* %4, align 4, !dbg !9696
  ret void, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9702, metadata !DIExpression()), !dbg !9704
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9705
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9705
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9705
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9703, metadata !DIExpression()), !dbg !9704
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9706
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9706
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9707
  ret i32 %7, !dbg !9708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9713, metadata !DIExpression()), !dbg !9714
  %2 = icmp eq i32 %0, 1024, !dbg !9715
  %3 = select i1 %2, i32 2, i32 0, !dbg !9715
  %4 = icmp eq i32 %0, 1536, !dbg !9715
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9715
  ret i32 %5, !dbg !9716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9721
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9722
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9722
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9722
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9720, metadata !DIExpression()), !dbg !9721
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9723
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9723
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9724
  ret i32 %7, !dbg !9725
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9732
  %3 = icmp ult i32 %2, 4, !dbg !9732
  br i1 %3, label %4, label %7, !dbg !9732

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9732
  %6 = load i32, i32* %5, align 4, !dbg !9732
  br label %7, !dbg !9732

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9733
  ret i32 %8, !dbg !9735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9736 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9738, metadata !DIExpression()), !dbg !9740
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9741
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9741
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9741
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9739, metadata !DIExpression()), !dbg !9740
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9742
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9742
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9743
  ret i32 %7, !dbg !9744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9749, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i32 %1, metadata !9750, metadata !DIExpression()), !dbg !9751
  %3 = icmp eq i32 %0, 4096, !dbg !9752
  %4 = icmp eq i32 %1, 0, !dbg !9752
  %5 = select i1 %4, i32 4, i32 3, !dbg !9752
  %6 = select i1 %4, i32 3, i32 2, !dbg !9752
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9752
  ret i32 %7, !dbg !9753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9756, metadata !DIExpression()), !dbg !9758
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9759
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9759
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9757, metadata !DIExpression()), !dbg !9758
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9760
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9760
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9761
  ret i32 %7, !dbg !9762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9767, metadata !DIExpression()), !dbg !9768
  %2 = icmp eq i32 %0, 768, !dbg !9769
  %3 = zext i1 %2 to i32, !dbg !9768
  ret i32 %3, !dbg !9771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9772 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9774, metadata !DIExpression()), !dbg !9775
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9776
  %3 = load volatile i32, i32* %2, align 4, !dbg !9776
  %4 = and i32 %3, 768, !dbg !9776
  ret i32 %4, !dbg !9777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9782
  %3 = load volatile i32, i32* %2, align 4, !dbg !9782
  %4 = and i32 %3, 4096, !dbg !9782
  ret i32 %4, !dbg !9783
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9784 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9786, metadata !DIExpression()), !dbg !9787
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9788
  %3 = load volatile i32, i32* %2, align 4, !dbg !9788
  %4 = and i32 %3, 12288, !dbg !9788
  ret i32 %4, !dbg !9789
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9792, metadata !DIExpression()), !dbg !9793
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9794
  %3 = load volatile i32, i32* %2, align 4, !dbg !9794
  %4 = and i32 %3, 1536, !dbg !9794
  ret i32 %4, !dbg !9795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9800, metadata !DIExpression()), !dbg !9801
  %2 = icmp eq i32 %0, 2, !dbg !9802
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9802
  %4 = icmp eq i32 %0, 1, !dbg !9802
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9802
  ret i32 %5, !dbg !9803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9808, metadata !DIExpression()), !dbg !9809
  %2 = icmp ult i32 %0, 3, !dbg !9810
  br i1 %2, label %3, label %6, !dbg !9810

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9810
  %5 = load i32, i32* %4, align 4, !dbg !9810
  br label %6, !dbg !9810

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9811
  ret i32 %7, !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9818, metadata !DIExpression()), !dbg !9820
  call void @llvm.dbg.value(metadata i32 %1, metadata !9819, metadata !DIExpression()), !dbg !9820
  %3 = icmp eq i32 %0, 4, !dbg !9821
  %4 = icmp eq i32 %1, 0, !dbg !9821
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9821
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9821
  ret i32 %6, !dbg !9822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9827, metadata !DIExpression()), !dbg !9828
  %2 = icmp eq i32 %0, 1, !dbg !9829
  %3 = select i1 %2, i32 768, i32 0, !dbg !9828
  ret i32 %3, !dbg !9831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9834, metadata !DIExpression()), !dbg !9835
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9836
  %3 = load volatile i32, i32* %2, align 4, !dbg !9836
  %4 = and i32 %3, -8193, !dbg !9836
  store volatile i32 %4, i32* %2, align 4, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9842, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 %1, metadata !9843, metadata !DIExpression()), !dbg !9845
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9846
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9846
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9846
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9844, metadata !DIExpression()), !dbg !9845
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9847
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9847
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9848
  ret void, !dbg !9849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 %1, metadata !9853, metadata !DIExpression()), !dbg !9855
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9856
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9856
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9854, metadata !DIExpression()), !dbg !9855
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9857
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9857
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9858
  ret void, !dbg !9859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9860 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9862, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.value(metadata i32 %1, metadata !9863, metadata !DIExpression()), !dbg !9865
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9866
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9866
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9866
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9864, metadata !DIExpression()), !dbg !9865
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9867
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9867
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9868
  ret void, !dbg !9869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9872, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i32 %1, metadata !9873, metadata !DIExpression()), !dbg !9875
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9876
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9876
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9874, metadata !DIExpression()), !dbg !9875
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9877
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9877
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9878
  ret void, !dbg !9879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9880 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %1, metadata !9883, metadata !DIExpression()), !dbg !9887
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9888
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9888
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9888
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9884, metadata !DIExpression()), !dbg !9887
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9889
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9889
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9889
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9885, metadata !DIExpression()), !dbg !9887
  %10 = bitcast i32* %3 to i8*, !dbg !9890
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9890
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9891
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9891
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9895
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9895
  %15 = load i8*, i8** %14, align 4, !dbg !9895
  call void @llvm.dbg.value(metadata i32* %3, metadata !9886, metadata !DIExpression(DW_OP_deref)), !dbg !9887
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9896
  %17 = icmp slt i32 %16, 0, !dbg !9897
  br i1 %17, label %23, label %18, !dbg !9898

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9899
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9899
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9900
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9901
  %22 = load i32, i32* %3, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %22, metadata !9886, metadata !DIExpression()), !dbg !9887
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9903
  br label %23, !dbg !9904

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9904
  ret void, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9907, metadata !DIExpression()), !dbg !9908
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9909
  %3 = load volatile i32, i32* %2, align 4, !dbg !9909
  %4 = or i32 %3, 8192, !dbg !9909
  store volatile i32 %4, i32* %2, align 4, !dbg !9909
  ret void, !dbg !9910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9913, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %1, metadata !9914, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32* %2, metadata !9915, metadata !DIExpression()), !dbg !9917
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9918
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9918
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9918
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9916, metadata !DIExpression()), !dbg !9917
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9919
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9919
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9921
  br i1 %9, label %12, label %10, !dbg !9922

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !9923
  br label %12, !dbg !9924

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9917
  ret i32 %13, !dbg !9925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9926 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !9932
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9933
  %3 = load volatile i32, i32* %2, align 4, !dbg !9933
  %4 = and i32 %3, -32769, !dbg !9933
  store volatile i32 %4, i32* %2, align 4, !dbg !9933
  ret void, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9939, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i32 %1, metadata !9940, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i32 0, metadata !9941, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i32 %2, metadata !9942, metadata !DIExpression()), !dbg !9943
  %4 = mul i32 %1, 25, !dbg !9944
  %5 = shl i32 %2, 2, !dbg !9944
  %6 = udiv i32 %4, %5, !dbg !9944
  %7 = udiv i32 %6, 100, !dbg !9944
  %8 = shl nuw nsw i32 %7, 4, !dbg !9944
  %9 = mul i32 %7, -100, !dbg !9944
  %10 = add i32 %9, %6, !dbg !9944
  %11 = shl i32 %10, 4, !dbg !9944
  %12 = add i32 %11, 50, !dbg !9944
  %13 = udiv i32 %12, 100, !dbg !9944
  %14 = and i32 %13, 240, !dbg !9944
  %15 = add nuw nsw i32 %14, %8, !dbg !9944
  %16 = and i32 %13, 15, !dbg !9944
  %17 = and i32 %15, 65520, !dbg !9947
  %18 = or i32 %17, %16, !dbg !9947
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9948
  store volatile i32 %18, i32* %19, align 4, !dbg !9949
  ret void, !dbg !9950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9951 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 %1, metadata !9954, metadata !DIExpression()), !dbg !9955
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9956
  %4 = load volatile i32, i32* %3, align 4, !dbg !9956
  %5 = and i32 %4, -769, !dbg !9956
  %6 = or i32 %5, %1, !dbg !9956
  store volatile i32 %6, i32* %3, align 4, !dbg !9956
  ret void, !dbg !9957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9960, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i32 %1, metadata !9961, metadata !DIExpression()), !dbg !9962
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9963
  %4 = load volatile i32, i32* %3, align 4, !dbg !9963
  %5 = and i32 %4, -4097, !dbg !9963
  %6 = or i32 %5, %1, !dbg !9963
  store volatile i32 %6, i32* %3, align 4, !dbg !9963
  ret void, !dbg !9964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9967, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i32 %1, metadata !9968, metadata !DIExpression()), !dbg !9969
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9970
  %4 = load volatile i32, i32* %3, align 4, !dbg !9970
  %5 = and i32 %4, -12289, !dbg !9970
  %6 = or i32 %5, %1, !dbg !9970
  store volatile i32 %6, i32* %3, align 4, !dbg !9970
  ret void, !dbg !9971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !9975, metadata !DIExpression()), !dbg !9976
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9977
  %4 = load volatile i32, i32* %3, align 4, !dbg !9977
  %5 = and i32 %4, -1537, !dbg !9977
  %6 = or i32 %5, %1, !dbg !9977
  store volatile i32 %6, i32* %3, align 4, !dbg !9977
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9983
  %3 = load volatile i32, i32* %2, align 4, !dbg !9983
  %4 = and i32 %3, 1, !dbg !9983
  ret i32 %4, !dbg !9984
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9985 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9987, metadata !DIExpression()), !dbg !9988
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9989
  %3 = load volatile i32, i32* %2, align 4, !dbg !9989
  %4 = lshr i32 %3, 1, !dbg !9990
  %5 = and i32 %4, 1, !dbg !9990
  ret i32 %5, !dbg !9991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9994, metadata !DIExpression()), !dbg !9995
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9996
  %3 = load volatile i32, i32* %2, align 4, !dbg !9996
  %4 = lshr i32 %3, 8, !dbg !9997
  %5 = and i32 %4, 1, !dbg !9997
  ret i32 %5, !dbg !9998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10003
  store volatile i32 -257, i32* %2, align 4, !dbg !10003
  ret void, !dbg !10004
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10005 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = bitcast i32* %2 to i8*, !dbg !10010
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10010
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10008, metadata !DIExpression()), !dbg !10011
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10012
  %5 = load volatile i32, i32* %4, align 4, !dbg !10012
  store volatile i32 %5, i32* %2, align 4, !dbg !10013
  %6 = load volatile i32, i32* %2, align 4, !dbg !10014
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10015
  %8 = load volatile i32, i32* %7, align 4, !dbg !10015
  store volatile i32 %8, i32* %2, align 4, !dbg !10016
  %9 = load volatile i32, i32* %2, align 4, !dbg !10017
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10018
  ret void, !dbg !10018
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10019 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10021, metadata !DIExpression()), !dbg !10023
  %3 = bitcast i32* %2 to i8*, !dbg !10024
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10024
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10022, metadata !DIExpression()), !dbg !10025
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10026
  %5 = load volatile i32, i32* %4, align 4, !dbg !10026
  store volatile i32 %5, i32* %2, align 4, !dbg !10027
  %6 = load volatile i32, i32* %2, align 4, !dbg !10028
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10029
  %8 = load volatile i32, i32* %7, align 4, !dbg !10029
  store volatile i32 %8, i32* %2, align 4, !dbg !10030
  %9 = load volatile i32, i32* %2, align 4, !dbg !10031
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10032
  ret void, !dbg !10032
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10033 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10035, metadata !DIExpression()), !dbg !10037
  %3 = bitcast i32* %2 to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10038
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10036, metadata !DIExpression()), !dbg !10039
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10040
  %5 = load volatile i32, i32* %4, align 4, !dbg !10040
  store volatile i32 %5, i32* %2, align 4, !dbg !10041
  %6 = load volatile i32, i32* %2, align 4, !dbg !10042
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10043
  %8 = load volatile i32, i32* %7, align 4, !dbg !10043
  store volatile i32 %8, i32* %2, align 4, !dbg !10044
  %9 = load volatile i32, i32* %2, align 4, !dbg !10045
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10046
  ret void, !dbg !10046
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1575, metadata !DIExpression()), !dbg !10047
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #27, !dbg !10048
  tail call void @arch_irq_enable(i32 noundef 38) #27, !dbg !10050
  ret void, !dbg !10050
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1624, metadata !DIExpression()), !dbg !10051
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #27, !dbg !10052
  tail call void @arch_irq_enable(i32 noundef 37) #27, !dbg !10054
  ret void, !dbg !10054
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10057, metadata !DIExpression()), !dbg !10059
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10060
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10060
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10060
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10058, metadata !DIExpression()), !dbg !10059
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10061
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10061
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10063
  br i1 %7, label %11, label %8, !dbg !10064

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10065
  %10 = load i8*, i8** %9, align 4, !dbg !10065
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10067
  br label %11, !dbg !10068

11:                                               ; preds = %8, %1
  ret void, !dbg !10069
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10072, metadata !DIExpression()), !dbg !10078
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10079
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10079
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10079
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10073, metadata !DIExpression()), !dbg !10078
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10080
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10080
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10080
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10074, metadata !DIExpression()), !dbg !10078
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10081
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10082
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10082
  %10 = tail call fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %9) #26, !dbg !10084
  br i1 %10, label %11, label %51, !dbg !10085

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10086
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10087
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10087
  %15 = load i8*, i8** %14, align 4, !dbg !10087
  %16 = tail call fastcc i32 @clock_control_on.66(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10088
  call void @llvm.dbg.value(metadata i32 %16, metadata !10077, metadata !DIExpression()), !dbg !10078
  %17 = icmp eq i32 %16, 0, !dbg !10089
  br i1 %17, label %18, label %51, !dbg !10091

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10092
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10092
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %21, metadata !10077, metadata !DIExpression()), !dbg !10078
  %22 = icmp slt i32 %21, 0, !dbg !10094
  br i1 %22, label %51, label %23, !dbg !10096

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10097
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10097
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10098
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10099
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10100
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10101
  %28 = load i32, i32* %27, align 4, !dbg !10101
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10103

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 4096, metadata !10076, metadata !DIExpression()), !dbg !10078
  br label %31, !dbg !10104

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 0, metadata !10076, metadata !DIExpression()), !dbg !10078
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10107
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10107
  call void @llvm.dbg.value(metadata i32 %33, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %32, metadata !10075, metadata !DIExpression()), !dbg !10078
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10108
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10109
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10110
  %36 = load i8, i8* %35, align 4, !dbg !10110, !range !6378
  %37 = icmp eq i8 %36, 0, !dbg !10110
  br i1 %37, label %39, label %38, !dbg !10112

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10113
  br label %39, !dbg !10115

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10116
  %41 = load i32, i32* %40, align 4, !dbg !10116
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10117
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10118
  %43 = load i8, i8* %42, align 4, !dbg !10118, !range !6378
  %44 = icmp eq i8 %43, 0, !dbg !10118
  br i1 %44, label %47, label %45, !dbg !10120

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10121
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10123
  br label %47, !dbg !10124

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10125
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10126
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10127
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10127
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10128
  br label %51, !dbg !10129

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10078
  ret i32 %52, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10133, metadata !DIExpression()), !dbg !10137
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10138
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10138
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10138
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10134, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10135, metadata !DIExpression()), !dbg !10137
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10139
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10140
  ret void, !dbg !10141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !10142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10146, metadata !DIExpression()), !dbg !10147
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10148, !srcloc !10150
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) #26, !dbg !10151
  ret i1 %2, !dbg !10152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.66(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10155, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i8* %1, metadata !10156, metadata !DIExpression()), !dbg !10158
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10159
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10159
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10159
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10157, metadata !DIExpression()), !dbg !10158
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10160
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10160
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10161
  ret i32 %8, !dbg !10162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10163 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10167, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata i8 0, metadata !10168, metadata !DIExpression()), !dbg !10171
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10172
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10170, metadata !DIExpression(DW_OP_deref)), !dbg !10171
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10173
  call void @llvm.dbg.value(metadata i32 %4, metadata !10169, metadata !DIExpression()), !dbg !10171
  %5 = icmp slt i32 %4, 0, !dbg !10174
  br i1 %5, label %9, label %6, !dbg !10176

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10177
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10170, metadata !DIExpression()), !dbg !10171
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10178
  br label %9, !dbg !10179

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10180
  ret i32 %10, !dbg !10180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10183, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 12, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  %4 = or i32 %3, 12, !dbg !10186
  store volatile i32 %4, i32* %2, align 4, !dbg !10186
  ret void, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10190, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %1, metadata !10191, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %2, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 0, metadata !10193, metadata !DIExpression()), !dbg !10194
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10195
  %5 = load volatile i32, i32* %4, align 4, !dbg !10195
  %6 = and i32 %5, -5633, !dbg !10195
  %7 = or i32 %2, %1, !dbg !10195
  %8 = or i32 %7, %6, !dbg !10195
  store volatile i32 %8, i32* %4, align 4, !dbg !10195
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10196
  %10 = load volatile i32, i32* %9, align 4, !dbg !10196
  %11 = and i32 %10, -12289, !dbg !10196
  store volatile i32 %11, i32* %9, align 4, !dbg !10196
  ret void, !dbg !10197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10198 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10200, metadata !DIExpression()), !dbg !10201
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10202
  %3 = load volatile i32, i32* %2, align 4, !dbg !10202
  %4 = or i32 %3, 8, !dbg !10202
  store volatile i32 %4, i32* %2, align 4, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10204 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10208, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 0, metadata !10210, metadata !DIExpression()), !dbg !10211
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10212
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10212
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10213
  %5 = load i8, i8* %4, align 4, !dbg !10213
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10214
  ret i32 %6, !dbg !10215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10218, metadata !DIExpression()), !dbg !10219
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10220
  ret i1 %2, !dbg !10221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  tail call fastcc void @__NVIC_SetPriority.69() #26, !dbg !10226
  store i32 3199, i32* @last_load, align 4, !dbg !10227
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10228
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10229
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10230
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10231
  %3 = or i32 %2, 7, !dbg !10231
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10231
  ret i32 0, !dbg !10232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69() unnamed_addr #16 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10235, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i32 1, metadata !10236, metadata !DIExpression()), !dbg !10237
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10238
  ret void, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10244, metadata !DIExpression()), !dbg !10246
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10247
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10248
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10249
  %5 = add i32 %4, %3, !dbg !10249
  store i32 %5, i32* @cycle_count, align 4, !dbg !10249
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10250
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10251
  %7 = sub i32 %5, %6, !dbg !10254
  %8 = udiv i32 %7, 3200, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %8, metadata !10245, metadata !DIExpression()), !dbg !10246
  %9 = mul nuw i32 %8, 3200, !dbg !10256
  %10 = add i32 %9, %6, !dbg !10257
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10257
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10258
  tail call void @z_arm_int_exit() #27, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10261 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %1, metadata !10263, metadata !DIExpression()), !dbg !10267
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %2, metadata !10264, metadata !DIExpression()), !dbg !10267
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10269
  call void @llvm.dbg.value(metadata i32 %3, metadata !10265, metadata !DIExpression()), !dbg !10267
  %4 = and i32 %2, 65536, !dbg !10270
  %5 = icmp ne i32 %4, 0, !dbg !10270
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10272
  %8 = load i32, i32* @last_load, align 4, !dbg !10267
  br i1 %7, label %9, label %13, !dbg !10272

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10273
  %11 = add i32 %10, %8, !dbg !10273
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10273
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10275
  br label %13, !dbg !10276

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10277
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10278
  %16 = add i32 %14, %15, !dbg !10279
  ret i32 %16, !dbg !10280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10285, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i1 %1, metadata !10286, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10298
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10299
  br i1 %4, label %5, label %8, !dbg !10299

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10301
  %7 = and i32 %6, -2, !dbg !10301
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10301
  store i32 -16777216, i32* @last_load, align 4, !dbg !10303
  br label %54, !dbg !10304

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %9, metadata !10290, metadata !DIExpression()), !dbg !10298
  br i1 %3, label %18, label %10, !dbg !10306

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10306
  call void @llvm.dbg.value(metadata i32 undef, metadata !10285, metadata !DIExpression()), !dbg !10298
  %12 = icmp slt i32 %11, 1, !dbg !10307
  br i1 %12, label %18, label %13, !dbg !10307

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10307
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10307
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10307
  %17 = add nuw nsw i32 %16, 3199, !dbg !10307
  br label %18, !dbg !10307

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10285, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10308, metadata !DIExpression()) #25, !dbg !10315
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10317, !srcloc !10323
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %21, metadata !10320, metadata !DIExpression()) #25, !dbg !10324
  call void @llvm.dbg.value(metadata i32 undef, metadata !10321, metadata !DIExpression()) #25, !dbg !10324
  call void @llvm.dbg.value(metadata i32 %21, metadata !10314, metadata !DIExpression()) #25, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %21, metadata !10291, metadata !DIExpression()), !dbg !10298
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %22, metadata !10296, metadata !DIExpression()), !dbg !10298
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %23, metadata !10288, metadata !DIExpression()), !dbg !10298
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10327
  %25 = add i32 %24, %22, !dbg !10327
  store i32 %25, i32* @cycle_count, align 4, !dbg !10327
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10328
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10329
  %27 = sub i32 %25, %26, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %27, metadata !10297, metadata !DIExpression()), !dbg !10298
  %28 = icmp slt i32 %27, 0, !dbg !10331
  br i1 %28, label %38, label %29, !dbg !10333

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10287, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 undef, metadata !10287, metadata !DIExpression()), !dbg !10298
  %30 = add nuw i32 %19, %27, !dbg !10334
  %31 = urem i32 %30, 3200, !dbg !10336
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10287, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10298
  %32 = sub nuw nsw i32 %19, %31, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %32, metadata !10287, metadata !DIExpression()), !dbg !10298
  %33 = icmp ugt i32 %32, 1024, !dbg !10338
  br i1 %33, label %34, label %36, !dbg !10338

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10287, metadata !DIExpression()), !dbg !10298
  %35 = icmp ugt i32 %32, 16771200, !dbg !10339
  br i1 %35, label %38, label %36, !dbg !10341

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10342
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %40, metadata !10289, metadata !DIExpression()), !dbg !10298
  %41 = add nsw i32 %39, -1, !dbg !10344
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10345
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10346
  %42 = icmp ult i32 %23, %40, !dbg !10347
  br i1 %42, label %43, label %48, !dbg !10349

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10350
  %45 = add i32 %23, %9, !dbg !10352
  %46 = sub i32 %45, %40, !dbg !10353
  %47 = add i32 %46, %44, !dbg !10350
  br label %52, !dbg !10354

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10355
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10357
  %51 = add i32 %49, %50, !dbg !10357
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10358
  store i32 %53, i32* @cycle_count, align 4, !dbg !10358
  call void @llvm.dbg.value(metadata i32 %21, metadata !10359, metadata !DIExpression()) #25, !dbg !10365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10364, metadata !DIExpression()) #25, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %21, metadata !10367, metadata !DIExpression()) #25, !dbg !10370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10372, !srcloc !10373
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10308, metadata !DIExpression()) #25, !dbg !10379
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10381, !srcloc !10323
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %2, metadata !10320, metadata !DIExpression()) #25, !dbg !10383
  call void @llvm.dbg.value(metadata i32 undef, metadata !10321, metadata !DIExpression()) #25, !dbg !10383
  call void @llvm.dbg.value(metadata i32 %2, metadata !10314, metadata !DIExpression()) #25, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %2, metadata !10377, metadata !DIExpression()), !dbg !10384
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10385
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10386
  %5 = add i32 %4, %3, !dbg !10387
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10388
  %7 = sub i32 %5, %6, !dbg !10389
  call void @llvm.dbg.value(metadata i32 %7, metadata !10378, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10359, metadata !DIExpression()) #25, !dbg !10390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10364, metadata !DIExpression()) #25, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %2, metadata !10367, metadata !DIExpression()) #25, !dbg !10392
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10394, !srcloc !10373
  %8 = udiv i32 %7, 3200, !dbg !10395
  ret i32 %8, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10308, metadata !DIExpression()) #25, !dbg !10401
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10403, !srcloc !10323
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %2, metadata !10320, metadata !DIExpression()) #25, !dbg !10405
  call void @llvm.dbg.value(metadata i32 undef, metadata !10321, metadata !DIExpression()) #25, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %2, metadata !10314, metadata !DIExpression()) #25, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10399, metadata !DIExpression()), !dbg !10406
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10407
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10408
  %5 = add i32 %4, %3, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %5, metadata !10400, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.value(metadata i32 %2, metadata !10359, metadata !DIExpression()) #25, !dbg !10410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10364, metadata !DIExpression()) #25, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %2, metadata !10367, metadata !DIExpression()) #25, !dbg !10412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10414, !srcloc !10373
  ret i32 %5, !dbg !10415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10416 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10417
  %2 = icmp eq i32 %1, -16777216, !dbg !10419
  br i1 %2, label %3, label %6, !dbg !10420

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10421
  %5 = or i32 %4, 1, !dbg !10421
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10421
  br label %6, !dbg !10423

6:                                                ; preds = %3, %0
  ret void, !dbg !10424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10425 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10426
  %2 = and i32 %1, -2, !dbg !10426
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10426
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10454, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.value(metadata i8 %1, metadata !10455, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10456, metadata !DIExpression()), !dbg !10457
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10458
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10458
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10457
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10459
  %8 = load i8, i8* %6, align 4, !dbg !10460
  %9 = zext i8 %8 to i32, !dbg !10461
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10461
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10462
  br i1 %11, label %18, label %24, !dbg !10463

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10457
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10459
  %14 = load i8, i8* %6, align 4, !dbg !10460
  %15 = zext i8 %14 to i32, !dbg !10461
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10461
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10462
  br i1 %17, label %18, label %24, !dbg !10463, !llvm.loop !10464

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10466
  %21 = load i8, i8* %20, align 1, !dbg !10466
  %22 = icmp eq i8 %21, %1, !dbg !10469
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10470
  br i1 %22, label %24, label %12, !dbg !10471

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10457
  ret i32 %25, !dbg !10472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10484, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i8 %1, metadata !10485, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 %2, metadata !10486, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 0, metadata !10489, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 0, metadata !10490, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i8 0, metadata !10491, metadata !DIExpression()), !dbg !10501
  %4 = icmp eq i8 %1, 0, !dbg !10502
  br i1 %4, label %35, label %5, !dbg !10503

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10502
  br label %9, !dbg !10503

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10491, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.value(metadata i32 %29, metadata !10489, metadata !DIExpression()), !dbg !10500
  %8 = icmp eq i32 %34, %6, !dbg !10502
  br i1 %8, label %35, label %9, !dbg !10503, !llvm.loop !10504

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10491, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.value(metadata i32 %11, metadata !10489, metadata !DIExpression()), !dbg !10500
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10506
  %13 = load i32, i32* %12, align 4, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %13, metadata !10488, metadata !DIExpression()), !dbg !10500
  %14 = and i32 %13, 31, !dbg !10507
  %15 = icmp ult i32 %14, 16, !dbg !10508
  br i1 %15, label %16, label %20, !dbg !10509

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10510
  %18 = load i32, i32* %17, align 4, !dbg !10510
  %19 = or i32 %18, 32, !dbg !10512
  call void @llvm.dbg.value(metadata i32 %19, metadata !10489, metadata !DIExpression()), !dbg !10500
  br label %28, !dbg !10513

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10514

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10515
  %23 = load i32, i32* %22, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %23, metadata !10493, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10516
  %24 = lshr i32 %23, 7, !dbg !10517
  %25 = and i32 %24, 16, !dbg !10517
  %26 = or i32 %25, %23, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %26, metadata !10489, metadata !DIExpression()), !dbg !10500
  br label %28, !dbg !10518

27:                                               ; preds = %20
  br label %28, !dbg !10519

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10500
  call void @llvm.dbg.value(metadata i32 %29, metadata !10489, metadata !DIExpression()), !dbg !10500
  %30 = lshr i32 %13, 5, !dbg !10519
  %31 = and i32 %30, 255, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %31, metadata !10487, metadata !DIExpression()), !dbg !10500
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %32, metadata !10490, metadata !DIExpression()), !dbg !10500
  %33 = icmp slt i32 %32, 0, !dbg !10521
  %34 = add nuw nsw i32 %10, 1, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %34, metadata !10491, metadata !DIExpression()), !dbg !10501
  br i1 %33, label %35, label %7, !dbg !10524

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10530, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata i32 %1, metadata !10531, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata i32 %2, metadata !10532, metadata !DIExpression()), !dbg !10534
  %4 = icmp ugt i32 %0, 175, !dbg !10535
  br i1 %4, label %17, label %5, !dbg !10537

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10538
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10539
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10539
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10533, metadata !DIExpression()), !dbg !10534
  %9 = lshr i32 1888, %6, !dbg !10540
  %10 = and i32 %9, 1, !dbg !10540
  %11 = icmp eq i32 %10, 0, !dbg !10540
  br i1 %11, label %12, label %17, !dbg !10542

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %8) #26, !dbg !10543
  br i1 %13, label %14, label %17, !dbg !10544

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10545
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #27, !dbg !10546
  br label %17, !dbg !10547

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10534
  ret i32 %18, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %0) unnamed_addr #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10553, metadata !DIExpression()), !dbg !10554
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10555, !srcloc !10557
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) #26, !dbg !10558
  ret i1 %2, !dbg !10559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10562, metadata !DIExpression()), !dbg !10563
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10564
  ret i1 %2, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10566 {
  ret void, !dbg !10567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !10568 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10570, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 0, metadata !10571, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 0, metadata !10572, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 0, metadata !10573, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 0, metadata !10574, metadata !DIExpression()), !dbg !10575
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %1, metadata !10570, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !10575
  %2 = lshr i32 %1, 2, !dbg !10577
  %3 = and i32 %2, 3, !dbg !10577
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !10577

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10578
  %6 = lshr i32 %5, 13, !dbg !10580
  %7 = and i32 %6, 7, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10574, metadata !DIExpression()), !dbg !10575
  %8 = shl nuw nsw i32 65536, %7, !dbg !10581
  br label %31, !dbg !10582

9:                                                ; preds = %0
  br label %31, !dbg !10583

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10584
  call void @llvm.dbg.value(metadata i32 %11, metadata !10571, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !10575
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %12, metadata !10572, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !10575
  %13 = lshr i32 %11, 18, !dbg !10586
  %14 = and i32 %13, 15, !dbg !10586
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !10587
  %16 = load i8, i8* %15, align 1, !dbg !10587
  %17 = zext i8 %16 to i32, !dbg !10587
  call void @llvm.dbg.value(metadata i32 %17, metadata !10571, metadata !DIExpression()), !dbg !10575
  %18 = lshr i32 %12, 22, !dbg !10588
  %19 = and i32 %18, 3, !dbg !10588
  %20 = add nuw nsw i32 %19, 1, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %20, metadata !10572, metadata !DIExpression()), !dbg !10575
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10590
  %22 = and i32 %21, 65536, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %22, metadata !10573, metadata !DIExpression()), !dbg !10575
  %23 = icmp eq i32 %22, 0, !dbg !10592
  br i1 %23, label %24, label %27, !dbg !10594

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !10595
  %26 = udiv i32 %25, %20, !dbg !10597
  br label %31, !dbg !10598

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !10599
  %29 = udiv i32 %28, %20, !dbg !10601
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !10602
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10603
  %34 = lshr i32 %33, 4, !dbg !10604
  %35 = and i32 %34, 15, !dbg !10604
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !10605
  %37 = load i8, i8* %36, align 1, !dbg !10605
  %38 = zext i8 %37 to i32, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %38, metadata !10570, metadata !DIExpression()), !dbg !10575
  %39 = lshr i32 %32, %38, !dbg !10606
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !10606
  ret void, !dbg !10607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10608 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10616
  %2 = and i32 %1, 16711935, !dbg !10616
  %3 = or i32 %2, 45056, !dbg !10616
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10616
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10617
  %5 = or i32 %4, 256, !dbg !10617
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10617
  %6 = tail call i32 @HAL_GetTick() #27, !dbg !10618
  call void @llvm.dbg.value(metadata i32 %6, metadata !10614, metadata !DIExpression()), !dbg !10619
  br label %7, !dbg !10620

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10621
  %9 = and i32 %8, 512, !dbg !10621
  %10 = icmp eq i32 %9, 0, !dbg !10622
  br i1 %10, label %11, label %15, !dbg !10620

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #27, !dbg !10623
  %13 = sub i32 %12, %6, !dbg !10626
  %14 = icmp ugt i32 %13, 2, !dbg !10627
  br i1 %14, label %47, label %7, !dbg !10628, !llvm.loop !10629

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10631
  %17 = and i32 %16, -4, !dbg !10631
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10631
  br label %18, !dbg !10632

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10633
  %20 = and i32 %19, 12, !dbg !10633
  %21 = icmp eq i32 %20, 0, !dbg !10634
  br i1 %21, label %26, label %22, !dbg !10632

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #27, !dbg !10635
  %24 = sub i32 %23, %6, !dbg !10638
  %25 = icmp ugt i32 %24, 5000, !dbg !10639
  br i1 %25, label %47, label %18, !dbg !10640, !llvm.loop !10641

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !10643
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !10644
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #27, !dbg !10645
  call void @llvm.dbg.value(metadata i32 %28, metadata !10615, metadata !DIExpression()), !dbg !10619
  %29 = icmp eq i32 %28, 0, !dbg !10646
  br i1 %29, label %30, label %47, !dbg !10648

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  %32 = and i32 %31, -285278210, !dbg !10649
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10650
  %34 = and i32 %33, -262145, !dbg !10650
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10650
  %35 = tail call i32 @HAL_GetTick() #27, !dbg !10651
  call void @llvm.dbg.value(metadata i32 %35, metadata !10614, metadata !DIExpression()), !dbg !10619
  br label %36, !dbg !10652

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10653
  %38 = and i32 %37, 33554432, !dbg !10653
  %39 = icmp eq i32 %38, 0, !dbg !10654
  br i1 %39, label %44, label %40, !dbg !10652

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #27, !dbg !10655
  %42 = sub i32 %41, %35, !dbg !10658
  %43 = icmp ugt i32 %42, 2, !dbg !10659
  br i1 %43, label %47, label %36, !dbg !10660, !llvm.loop !10661

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10663
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10664
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10665
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10666
  %46 = or i32 %45, 16777216, !dbg !10666
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10666
  br label %47, !dbg !10667

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !10619
  ret i32 %48, !dbg !10668
}

; Function Attrs: optsize
declare !dbg !10669 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !10671 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10674 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10700, metadata !DIExpression()), !dbg !10713
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10714
  br i1 %3, label %385, label %4, !dbg !10716

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10717
  %6 = and i32 %5, 12, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %6, metadata !10703, metadata !DIExpression()), !dbg !10713
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10718
  %8 = and i32 %7, 65536, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %8, metadata !10704, metadata !DIExpression()), !dbg !10713
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10719
  %10 = load i32, i32* %9, align 4, !dbg !10719
  %11 = and i32 %10, 1, !dbg !10721
  %12 = icmp eq i32 %11, 0, !dbg !10722
  br i1 %12, label %69, label %13, !dbg !10723

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !10724
  br i1 %14, label %19, label %15, !dbg !10727

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !10728
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !10729
  br i1 %18, label %19, label %27, !dbg !10729

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10730
  %21 = and i32 %20, 131072, !dbg !10730
  %22 = icmp eq i32 %21, 0, !dbg !10733
  br i1 %22, label %69, label %23, !dbg !10734

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10735
  %25 = load i32, i32* %24, align 4, !dbg !10735
  %26 = icmp eq i32 %25, 0, !dbg !10736
  br i1 %26, label %385, label %69, !dbg !10737

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10738
  %29 = load i32, i32* %28, align 4, !dbg !10738
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !10742

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10743
  %32 = or i32 %31, 65536, !dbg !10743
  br label %48, !dbg !10743

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10745
  %35 = and i32 %34, -65537, !dbg !10745
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10745
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10745
  %37 = and i32 %36, -262145, !dbg !10745
  br label %48, !dbg !10745

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10748
  %40 = or i32 %39, 262144, !dbg !10748
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10748
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10748
  %42 = or i32 %41, 65536, !dbg !10748
  br label %48, !dbg !10748

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  %45 = and i32 %44, -65537, !dbg !10751
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  %47 = and i32 %46, -262145, !dbg !10751
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10753
  %50 = load i32, i32* %28, align 4, !dbg !10754
  %51 = icmp eq i32 %50, 0, !dbg !10756
  %52 = tail call i32 @HAL_GetTick() #27, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %52, metadata !10701, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %52, metadata !10701, metadata !DIExpression()), !dbg !10713
  br i1 %51, label %61, label %53, !dbg !10758

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10759
  %55 = and i32 %54, 131072, !dbg !10759
  %56 = icmp eq i32 %55, 0, !dbg !10761
  br i1 %56, label %57, label %69, !dbg !10762

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #27, !dbg !10763
  %59 = sub i32 %58, %52, !dbg !10766
  %60 = icmp ugt i32 %59, 100, !dbg !10767
  br i1 %60, label %385, label %53, !dbg !10768, !llvm.loop !10769

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10771
  %63 = and i32 %62, 131072, !dbg !10771
  %64 = icmp eq i32 %63, 0, !dbg !10773
  br i1 %64, label %69, label %65, !dbg !10774

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !10775
  %67 = sub i32 %66, %52, !dbg !10778
  %68 = icmp ugt i32 %67, 100, !dbg !10779
  br i1 %68, label %385, label %61, !dbg !10780, !llvm.loop !10781

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !10783
  %71 = and i32 %70, 2, !dbg !10785
  %72 = icmp eq i32 %71, 0, !dbg !10786
  br i1 %72, label %118, label %73, !dbg !10787

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !10788
  br i1 %74, label %79, label %75, !dbg !10791

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !10792
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !10793
  br i1 %78, label %79, label %87, !dbg !10793

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10794
  %81 = and i32 %80, 2, !dbg !10794
  %82 = icmp eq i32 %81, 0, !dbg !10797
  br i1 %82, label %111, label %83, !dbg !10798

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10799
  %85 = load i32, i32* %84, align 4, !dbg !10799
  %86 = icmp eq i32 %85, 1, !dbg !10800
  br i1 %86, label %111, label %385, !dbg !10801

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10802
  %89 = load i32, i32* %88, align 4, !dbg !10802
  %90 = icmp eq i32 %89, 0, !dbg !10805
  br i1 %90, label %101, label %91, !dbg !10806

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10807
  %92 = tail call i32 @HAL_GetTick() #27, !dbg !10809
  call void @llvm.dbg.value(metadata i32 %92, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %93, !dbg !10810

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10811
  %95 = and i32 %94, 2, !dbg !10811
  %96 = icmp eq i32 %95, 0, !dbg !10812
  br i1 %96, label %97, label %111, !dbg !10810

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #27, !dbg !10813
  %99 = sub i32 %98, %92, !dbg !10816
  %100 = icmp ugt i32 %99, 2, !dbg !10817
  br i1 %100, label %385, label %93, !dbg !10818, !llvm.loop !10819

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10821
  %102 = tail call i32 @HAL_GetTick() #27, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %102, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %103, !dbg !10824

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %105 = and i32 %104, 2, !dbg !10825
  %106 = icmp eq i32 %105, 0, !dbg !10826
  br i1 %106, label %118, label %107, !dbg !10824

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #27, !dbg !10827
  %109 = sub i32 %108, %102, !dbg !10830
  %110 = icmp ugt i32 %109, 2, !dbg !10831
  br i1 %110, label %385, label %103, !dbg !10832, !llvm.loop !10833

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10835
  %113 = and i32 %112, -7937, !dbg !10835
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10835
  %115 = load i32, i32* %114, align 4, !dbg !10835
  %116 = shl i32 %115, 8, !dbg !10835
  %117 = or i32 %116, %113, !dbg !10835
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10835
  br label %118, !dbg !10836

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !10836
  %120 = and i32 %119, 16, !dbg !10838
  %121 = icmp eq i32 %120, 0, !dbg !10839
  br i1 %121, label %215, label %122, !dbg !10840

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !10841
  br i1 %123, label %124, label %179, !dbg !10844

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10845
  %126 = and i32 %125, 512, !dbg !10845
  %127 = icmp eq i32 %126, 0, !dbg !10848
  br i1 %127, label %132, label %128, !dbg !10849

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10850
  %130 = load i32, i32* %129, align 4, !dbg !10850
  %131 = icmp eq i32 %130, 0, !dbg !10851
  br i1 %131, label %385, label %132, !dbg !10852

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10853
  %134 = load i32, i32* %133, align 4, !dbg !10853
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10856
  %136 = and i32 %135, 57344, !dbg !10856
  %137 = icmp ugt i32 %134, %136, !dbg !10857
  br i1 %137, label %138, label %152, !dbg !10858

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !10859
  %140 = icmp eq i32 %139, 0, !dbg !10862
  br i1 %140, label %141, label %385, !dbg !10863

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10864
  %143 = and i32 %142, -57345, !dbg !10864
  %144 = load i32, i32* %133, align 4, !dbg !10864
  %145 = or i32 %143, %144, !dbg !10864
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10864
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10865
  %147 = and i32 %146, 16777215, !dbg !10865
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10865
  %149 = load i32, i32* %148, align 4, !dbg !10865
  %150 = shl i32 %149, 24, !dbg !10865
  %151 = or i32 %150, %147, !dbg !10865
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10865
  br label %165, !dbg !10866

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10867
  %154 = and i32 %153, -57345, !dbg !10867
  %155 = or i32 %154, %134, !dbg !10867
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10867
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10869
  %157 = and i32 %156, 16777215, !dbg !10869
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10869
  %159 = load i32, i32* %158, align 4, !dbg !10869
  %160 = shl i32 %159, 24, !dbg !10869
  %161 = or i32 %160, %157, !dbg !10869
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10869
  %162 = load i32, i32* %133, align 4, !dbg !10870
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !10872
  %164 = icmp eq i32 %163, 0, !dbg !10873
  br i1 %164, label %165, label %385, !dbg !10874

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !10875
  %167 = lshr i32 %166, 13, !dbg !10876
  %168 = shl i32 65536, %167, !dbg !10877
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10878
  %170 = lshr i32 %169, 4, !dbg !10879
  %171 = and i32 %170, 15, !dbg !10879
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !10880
  %173 = load i8, i8* %172, align 1, !dbg !10880
  %174 = zext i8 %173 to i32, !dbg !10880
  %175 = lshr i32 %168, %174, !dbg !10881
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !10882
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !10883
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #27, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %177, metadata !10702, metadata !DIExpression()), !dbg !10713
  %178 = icmp eq i32 %177, 0, !dbg !10885
  br i1 %178, label %215, label %385, !dbg !10887

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10888
  %181 = load i32, i32* %180, align 4, !dbg !10888
  %182 = icmp eq i32 %181, 0, !dbg !10891
  br i1 %182, label %205, label %183, !dbg !10892

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10893
  %184 = tail call i32 @HAL_GetTick() #27, !dbg !10895
  call void @llvm.dbg.value(metadata i32 %184, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %185, !dbg !10896

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10897
  %187 = and i32 %186, 512, !dbg !10897
  %188 = icmp eq i32 %187, 0, !dbg !10898
  br i1 %188, label %189, label %193, !dbg !10896

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #27, !dbg !10899
  %191 = sub i32 %190, %184, !dbg !10902
  %192 = icmp ugt i32 %191, 2, !dbg !10903
  br i1 %192, label %385, label %185, !dbg !10904, !llvm.loop !10905

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10907
  %195 = and i32 %194, -57345, !dbg !10907
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10907
  %197 = load i32, i32* %196, align 4, !dbg !10907
  %198 = or i32 %195, %197, !dbg !10907
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10907
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10908
  %200 = and i32 %199, 16777215, !dbg !10908
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10908
  %202 = load i32, i32* %201, align 4, !dbg !10908
  %203 = shl i32 %202, 24, !dbg !10908
  %204 = or i32 %203, %200, !dbg !10908
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10908
  br label %215, !dbg !10909

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10910
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !10912
  call void @llvm.dbg.value(metadata i32 %206, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %207, !dbg !10913

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10914
  %209 = and i32 %208, 512, !dbg !10914
  %210 = icmp eq i32 %209, 0, !dbg !10915
  br i1 %210, label %215, label %211, !dbg !10913

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #27, !dbg !10916
  %213 = sub i32 %212, %206, !dbg !10919
  %214 = icmp ugt i32 %213, 2, !dbg !10920
  br i1 %214, label %385, label %207, !dbg !10921, !llvm.loop !10922

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !10924
  %217 = and i32 %216, 8, !dbg !10926
  %218 = icmp eq i32 %217, 0, !dbg !10927
  br i1 %218, label %243, label %219, !dbg !10928

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10929
  %221 = load i32, i32* %220, align 4, !dbg !10929
  %222 = icmp eq i32 %221, 0, !dbg !10932
  br i1 %222, label %233, label %223, !dbg !10933

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10934
  %224 = tail call i32 @HAL_GetTick() #27, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %224, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %225, !dbg !10937

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10938
  %227 = and i32 %226, 2, !dbg !10938
  %228 = icmp eq i32 %227, 0, !dbg !10939
  br i1 %228, label %229, label %243, !dbg !10937

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !10940
  %231 = sub i32 %230, %224, !dbg !10943
  %232 = icmp ugt i32 %231, 2, !dbg !10944
  br i1 %232, label %385, label %225, !dbg !10945, !llvm.loop !10946

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10948
  %234 = tail call i32 @HAL_GetTick() #27, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %234, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %235, !dbg !10951

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10952
  %237 = and i32 %236, 2, !dbg !10952
  %238 = icmp eq i32 %237, 0, !dbg !10953
  br i1 %238, label %243, label %239, !dbg !10951

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #27, !dbg !10954
  %241 = sub i32 %240, %234, !dbg !10957
  %242 = icmp ugt i32 %241, 2, !dbg !10958
  br i1 %242, label %385, label %235, !dbg !10959, !llvm.loop !10960

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !10962
  %245 = and i32 %244, 4, !dbg !10963
  %246 = icmp eq i32 %245, 0, !dbg !10964
  br i1 %246, label %320, label %247, !dbg !10965

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !10705, metadata !DIExpression()), !dbg !10966
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10967
  %249 = and i32 %248, 268435456, !dbg !10967
  %250 = icmp eq i32 %249, 0, !dbg !10967
  br i1 %250, label %251, label %258, !dbg !10968

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !10969
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !10969
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10709, metadata !DIExpression()), !dbg !10969
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10969
  %254 = or i32 %253, 268435456, !dbg !10969
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10969
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10969
  %256 = and i32 %255, 268435456, !dbg !10969
  store volatile i32 %256, i32* %2, align 4, !dbg !10969
  %257 = load volatile i32, i32* %2, align 4, !dbg !10969
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !10970
  call void @llvm.dbg.value(metadata i32 1, metadata !10705, metadata !DIExpression()), !dbg !10966
  br label %258, !dbg !10971

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !10705, metadata !DIExpression()), !dbg !10966
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10972
  %260 = and i32 %259, 256, !dbg !10972
  %261 = icmp eq i32 %260, 0, !dbg !10972
  br i1 %261, label %262, label %274, !dbg !10974

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10975
  %264 = or i32 %263, 256, !dbg !10975
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10975
  %265 = tail call i32 @HAL_GetTick() #27, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %265, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %266, !dbg !10978

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10979
  %268 = and i32 %267, 256, !dbg !10979
  %269 = icmp eq i32 %268, 0, !dbg !10979
  br i1 %269, label %270, label %274, !dbg !10978

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #27, !dbg !10980
  %272 = sub i32 %271, %265, !dbg !10983
  %273 = icmp ugt i32 %272, 100, !dbg !10984
  br i1 %273, label %385, label %266, !dbg !10985, !llvm.loop !10986

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10988
  %276 = load i32, i32* %275, align 4, !dbg !10988
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !10991

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10992
  %279 = or i32 %278, 256, !dbg !10992
  br label %295, !dbg !10992

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10994
  %282 = and i32 %281, -257, !dbg !10994
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10994
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10994
  %284 = and i32 %283, -1025, !dbg !10994
  br label %295, !dbg !10994

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10997
  %287 = or i32 %286, 1024, !dbg !10997
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10997
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10997
  %289 = or i32 %288, 256, !dbg !10997
  br label %295, !dbg !10997

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11000
  %292 = and i32 %291, -257, !dbg !11000
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11000
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11000
  %294 = and i32 %293, -1025, !dbg !11000
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11002
  %297 = load i32, i32* %275, align 4, !dbg !11003
  %298 = icmp eq i32 %297, 0, !dbg !11005
  %299 = tail call i32 @HAL_GetTick() #27, !dbg !11006
  call void @llvm.dbg.value(metadata i32 %299, metadata !10701, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %299, metadata !10701, metadata !DIExpression()), !dbg !10713
  br i1 %298, label %308, label %300, !dbg !11007

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11008
  %302 = and i32 %301, 512, !dbg !11008
  %303 = icmp eq i32 %302, 0, !dbg !11010
  br i1 %303, label %304, label %316, !dbg !11011

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #27, !dbg !11012
  %306 = sub i32 %305, %299, !dbg !11015
  %307 = icmp ugt i32 %306, 5000, !dbg !11016
  br i1 %307, label %385, label %300, !dbg !11017, !llvm.loop !11018

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11020
  %310 = and i32 %309, 512, !dbg !11020
  %311 = icmp eq i32 %310, 0, !dbg !11022
  br i1 %311, label %316, label %312, !dbg !11023

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #27, !dbg !11024
  %314 = sub i32 %313, %299, !dbg !11027
  %315 = icmp ugt i32 %314, 5000, !dbg !11028
  br i1 %315, label %385, label %308, !dbg !11029, !llvm.loop !11030

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !11032

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11033
  %319 = and i32 %318, -268435457, !dbg !11033
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11033
  br label %320, !dbg !11036

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11037
  %322 = load i32, i32* %321, align 4, !dbg !11037
  %323 = icmp eq i32 %322, 0, !dbg !11039
  br i1 %323, label %384, label %324, !dbg !11040

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !11041
  br i1 %325, label %366, label %326, !dbg !11044

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !11045
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11048
  %328 = tail call i32 @HAL_GetTick() #27, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %328, metadata !10701, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %328, metadata !10701, metadata !DIExpression()), !dbg !10713
  br i1 %327, label %329, label %358, !dbg !11049

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11050
  %331 = and i32 %330, 33554432, !dbg !11050
  %332 = icmp eq i32 %331, 0, !dbg !11052
  br i1 %332, label %337, label %333, !dbg !11053

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #27, !dbg !11054
  %335 = sub i32 %334, %328, !dbg !11057
  %336 = icmp ugt i32 %335, 2, !dbg !11058
  br i1 %336, label %385, label %329, !dbg !11059, !llvm.loop !11060

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11062
  %339 = and i32 %338, -16580609, !dbg !11062
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11062
  %341 = load i32, i32* %340, align 4, !dbg !11062
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11062
  %343 = load i32, i32* %342, align 4, !dbg !11062
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11062
  %345 = load i32, i32* %344, align 4, !dbg !11062
  %346 = or i32 %339, %341, !dbg !11062
  %347 = or i32 %346, %343, !dbg !11062
  %348 = or i32 %347, %345, !dbg !11062
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11062
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11063
  %349 = tail call i32 @HAL_GetTick() #27, !dbg !11064
  call void @llvm.dbg.value(metadata i32 %349, metadata !10701, metadata !DIExpression()), !dbg !10713
  br label %350, !dbg !11065

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11066
  %352 = and i32 %351, 33554432, !dbg !11066
  %353 = icmp eq i32 %352, 0, !dbg !11067
  br i1 %353, label %354, label %384, !dbg !11065

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #27, !dbg !11068
  %356 = sub i32 %355, %349, !dbg !11071
  %357 = icmp ugt i32 %356, 2, !dbg !11072
  br i1 %357, label %385, label %350, !dbg !11073, !llvm.loop !11074

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11076
  %360 = and i32 %359, 33554432, !dbg !11076
  %361 = icmp eq i32 %360, 0, !dbg !11078
  br i1 %361, label %384, label %362, !dbg !11079

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #27, !dbg !11080
  %364 = sub i32 %363, %328, !dbg !11083
  %365 = icmp ugt i32 %364, 2, !dbg !11084
  br i1 %365, label %385, label %358, !dbg !11085, !llvm.loop !11086

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !11088
  br i1 %367, label %385, label %368, !dbg !11091

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %369, metadata !10704, metadata !DIExpression()), !dbg !10713
  %370 = and i32 %369, 65536, !dbg !11094
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11096
  %372 = load i32, i32* %371, align 4, !dbg !11096
  %373 = icmp eq i32 %370, %372, !dbg !11097
  br i1 %373, label %374, label %385, !dbg !11098

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !11099
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11100
  %377 = load i32, i32* %376, align 4, !dbg !11100
  %378 = icmp eq i32 %375, %377, !dbg !11101
  br i1 %378, label %379, label %385, !dbg !11102

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !11103
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11104
  %382 = load i32, i32* %381, align 4, !dbg !11104
  %383 = icmp eq i32 %380, %382, !dbg !11105
  br i1 %383, label %384, label %385, !dbg !11106

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !11107

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !10713
  ret i32 %386, !dbg !11108
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !11109 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11111, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 0, metadata !11113, metadata !DIExpression()), !dbg !11120
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11121
  %4 = and i32 %3, 240, !dbg !11121
  %5 = icmp eq i32 %4, 0, !dbg !11122
  br i1 %5, label %6, label %31, !dbg !11123

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11124
  %8 = and i32 %7, 268435456, !dbg !11124
  %9 = icmp eq i32 %8, 0, !dbg !11124
  br i1 %9, label %12, label %10, !dbg !11125

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %11, metadata !11112, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11120
  br label %22, !dbg !11128

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !11129
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !11129
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11114, metadata !DIExpression()), !dbg !11129
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11129
  %15 = or i32 %14, 268435456, !dbg !11129
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11129
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11129
  %17 = and i32 %16, 268435456, !dbg !11129
  store volatile i32 %17, i32* %2, align 4, !dbg !11129
  %18 = load volatile i32, i32* %2, align 4, !dbg !11129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !11130
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %19, metadata !11112, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11120
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11132
  %21 = and i32 %20, -268435457, !dbg !11132
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11132
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %24, metadata !11112, metadata !DIExpression()), !dbg !11120
  %25 = icmp eq i32 %24, 6144, !dbg !11134
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !11136
  call void @llvm.dbg.value(metadata i32 undef, metadata !11113, metadata !DIExpression()), !dbg !11120
  br i1 %27, label %28, label %31, !dbg !11137

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11139
  %30 = or i32 %29, 4, !dbg !11139
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11139
  br label %31, !dbg !11139

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11137
  %34 = and i32 %33, -2, !dbg !11137
  %35 = or i32 %34, %32, !dbg !11137
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11137
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11142
  %37 = and i32 %36, 1, !dbg !11142
  %38 = xor i32 %37, %32, !dbg !11120
  ret i32 %38, !dbg !11144
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11158, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11159, metadata !DIExpression()), !dbg !11162
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11163
  br i1 %3, label %136, label %4, !dbg !11165

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11166
  %6 = and i32 %5, 1, !dbg !11166
  %7 = icmp ult i32 %6, %1, !dbg !11168
  br i1 %7, label %8, label %20, !dbg !11169

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !11170
  br i1 %9, label %10, label %13, !dbg !11174

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11175
  %12 = or i32 %11, 4, !dbg !11175
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11175
  br label %13, !dbg !11175

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11174
  %15 = and i32 %14, -2, !dbg !11174
  %16 = or i32 %15, %1, !dbg !11174
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11174
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11177
  %18 = and i32 %17, 1, !dbg !11177
  %19 = icmp eq i32 %18, %1, !dbg !11179
  br i1 %19, label %20, label %136, !dbg !11180

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11181
  %22 = load i32, i32* %21, align 4, !dbg !11181
  %23 = and i32 %22, 2, !dbg !11183
  %24 = icmp eq i32 %23, 0, !dbg !11184
  br i1 %24, label %32, label %25, !dbg !11185

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11186
  %27 = and i32 %26, -241, !dbg !11186
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11186
  %29 = load i32, i32* %28, align 4, !dbg !11186
  %30 = or i32 %27, %29, !dbg !11186
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11186
  %31 = load i32, i32* %21, align 4, !dbg !11188
  br label %32, !dbg !11190

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11188
  %34 = and i32 %33, 1, !dbg !11191
  %35 = icmp eq i32 %34, 0, !dbg !11192
  br i1 %35, label %93, label %36, !dbg !11193

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11194
  %38 = load i32, i32* %37, align 4, !dbg !11194
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11197

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11198
  %41 = and i32 %40, 131072, !dbg !11198
  %42 = icmp eq i32 %41, 0, !dbg !11201
  br i1 %42, label %136, label %55, !dbg !11202

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %45 = and i32 %44, 33554432, !dbg !11203
  %46 = icmp eq i32 %45, 0, !dbg !11207
  br i1 %46, label %136, label %55, !dbg !11208

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11209
  %49 = and i32 %48, 2, !dbg !11209
  %50 = icmp eq i32 %49, 0, !dbg !11213
  br i1 %50, label %136, label %55, !dbg !11214

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11215
  %53 = and i32 %52, 512, !dbg !11215
  %54 = icmp eq i32 %53, 0, !dbg !11218
  br i1 %54, label %136, label %55, !dbg !11219

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11220
  %57 = and i32 %56, -4, !dbg !11220
  %58 = or i32 %57, %38, !dbg !11220
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11220
  %59 = tail call i32 @HAL_GetTick() #27, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %59, metadata !11160, metadata !DIExpression()), !dbg !11162
  %60 = load i32, i32* %37, align 4, !dbg !11222
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11224

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11225
  %63 = and i32 %62, 12, !dbg !11225
  %64 = icmp eq i32 %63, 8, !dbg !11227
  br i1 %64, label %93, label %65, !dbg !11228

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !11229
  %67 = sub i32 %66, %59, !dbg !11232
  %68 = icmp ugt i32 %67, 5000, !dbg !11233
  br i1 %68, label %136, label %61, !dbg !11234, !llvm.loop !11235

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11237
  %71 = and i32 %70, 12, !dbg !11237
  %72 = icmp eq i32 %71, 12, !dbg !11240
  br i1 %72, label %93, label %73, !dbg !11241

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #27, !dbg !11242
  %75 = sub i32 %74, %59, !dbg !11245
  %76 = icmp ugt i32 %75, 5000, !dbg !11246
  br i1 %76, label %136, label %69, !dbg !11247, !llvm.loop !11248

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11250
  %79 = and i32 %78, 12, !dbg !11250
  %80 = icmp eq i32 %79, 4, !dbg !11253
  br i1 %80, label %93, label %81, !dbg !11254

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !11255
  %83 = sub i32 %82, %59, !dbg !11258
  %84 = icmp ugt i32 %83, 5000, !dbg !11259
  br i1 %84, label %136, label %77, !dbg !11260, !llvm.loop !11261

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11263
  %87 = and i32 %86, 12, !dbg !11263
  %88 = icmp eq i32 %87, 0, !dbg !11265
  br i1 %88, label %93, label %89, !dbg !11266

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #27, !dbg !11267
  %91 = sub i32 %90, %59, !dbg !11270
  %92 = icmp ugt i32 %91, 5000, !dbg !11271
  br i1 %92, label %136, label %85, !dbg !11272, !llvm.loop !11273

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11275
  %95 = and i32 %94, 1, !dbg !11275
  %96 = icmp ugt i32 %95, %1, !dbg !11277
  br i1 %96, label %97, label %103, !dbg !11278

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11279
  %99 = and i32 %98, -2, !dbg !11279
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11279
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11282
  %101 = and i32 %100, 1, !dbg !11282
  %102 = icmp eq i32 %101, 0, !dbg !11284
  br i1 %102, label %103, label %136, !dbg !11285

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11286
  %105 = and i32 %104, 4, !dbg !11288
  %106 = icmp eq i32 %105, 0, !dbg !11289
  br i1 %106, label %114, label %107, !dbg !11290

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11291
  %109 = and i32 %108, -1793, !dbg !11291
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11291
  %111 = load i32, i32* %110, align 4, !dbg !11291
  %112 = or i32 %109, %111, !dbg !11291
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11291
  %113 = load i32, i32* %21, align 4, !dbg !11293
  br label %114, !dbg !11295

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11293
  %116 = and i32 %115, 8, !dbg !11296
  %117 = icmp eq i32 %116, 0, !dbg !11297
  br i1 %117, label %125, label %118, !dbg !11298

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11299
  %120 = and i32 %119, -14337, !dbg !11299
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11299
  %122 = load i32, i32* %121, align 4, !dbg !11299
  %123 = shl i32 %122, 3, !dbg !11299
  %124 = or i32 %123, %120, !dbg !11299
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11299
  br label %125, !dbg !11301

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11302
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11303
  %128 = lshr i32 %127, 4, !dbg !11304
  %129 = and i32 %128, 15, !dbg !11304
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11305
  %131 = load i8, i8* %130, align 1, !dbg !11305
  %132 = zext i8 %131 to i32, !dbg !11305
  %133 = lshr i32 %126, %132, !dbg !11306
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11307
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11308
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #27, !dbg !11309
  call void @llvm.dbg.value(metadata i32 %135, metadata !11161, metadata !DIExpression()), !dbg !11162
  br label %136, !dbg !11310

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !11162
  ret i32 %137, !dbg !11311
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !11312 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11320
  call void @llvm.dbg.value(metadata i32 %1, metadata !11314, metadata !DIExpression()), !dbg !11321
  %2 = lshr i32 %1, 2, !dbg !11322
  %3 = and i32 %2, 3, !dbg !11322
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11322

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %26, !dbg !11323

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11326
  %7 = and i32 %6, 15, !dbg !11326
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11328
  %9 = load i8, i8* %8, align 1, !dbg !11328
  call void @llvm.dbg.value(metadata i8 %9, metadata !11315, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11321
  %10 = lshr i32 %1, 22, !dbg !11329
  %11 = and i32 %10, 3, !dbg !11329
  %12 = add nuw nsw i32 %11, 1, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %12, metadata !11316, metadata !DIExpression()), !dbg !11321
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11331
  %14 = and i32 %13, 65536, !dbg !11331
  %15 = icmp eq i32 %14, 0, !dbg !11333
  %16 = zext i8 %9 to i32, !dbg !11334
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11334
  %18 = mul nuw i32 %17, %16, !dbg !11334
  %19 = udiv i32 %18, %12, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %19, metadata !11317, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata i32 %19, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %26, !dbg !11336

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11337
  %23 = lshr i32 %22, 13, !dbg !11339
  %24 = and i32 %23, 7, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %24, metadata !11318, metadata !DIExpression()), !dbg !11321
  %25 = shl nuw nsw i32 65536, %24, !dbg !11340
  call void @llvm.dbg.value(metadata i32 %25, metadata !11319, metadata !DIExpression()), !dbg !11321
  br label %26, !dbg !11341

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11342
  call void @llvm.dbg.value(metadata i32 %27, metadata !11319, metadata !DIExpression()), !dbg !11321
  ret i32 %27, !dbg !11343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11344 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11346, metadata !DIExpression()), !dbg !11361
  call void @llvm.dbg.value(metadata i32 %1, metadata !11347, metadata !DIExpression()), !dbg !11361
  call void @llvm.dbg.value(metadata i32 %2, metadata !11348, metadata !DIExpression()), !dbg !11361
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11362
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11362
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11349, metadata !DIExpression()), !dbg !11363
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11364
  store i32 2, i32* %7, align 4, !dbg !11365
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11366
  store i32 2, i32* %8, align 4, !dbg !11367
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11368
  store i32 0, i32* %9, align 4, !dbg !11369
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11370
  store i32 256, i32* %10, align 4, !dbg !11371
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11372
  store i32 0, i32* %11, align 4, !dbg !11373
  %12 = bitcast i32* %5 to i8*, !dbg !11374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11374
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11359, metadata !DIExpression()), !dbg !11374
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11374
  %14 = or i32 %13, 1, !dbg !11374
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11374
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11374
  %16 = and i32 %15, 1, !dbg !11374
  store volatile i32 %16, i32* %5, align 4, !dbg !11374
  %17 = load volatile i32, i32* %5, align 4, !dbg !11374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11375
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11376
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11377
  %19 = and i32 %18, -1996488705, !dbg !11377
  %20 = or i32 %2, %1, !dbg !11377
  %21 = or i32 %20, %19, !dbg !11377
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11377
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11378
  ret void, !dbg !11378
}

; Function Attrs: optsize
declare !dbg !11379 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !11383 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11384
  ret void, !dbg !11385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !11386 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11387
  ret void, !dbg !11388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11389 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11390
  ret i32 %1, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !11392 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11393
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11394
  %3 = lshr i32 %2, 8, !dbg !11395
  %4 = and i32 %3, 7, !dbg !11395
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11396
  %6 = load i8, i8* %5, align 1, !dbg !11396
  %7 = zext i8 %6 to i32, !dbg !11396
  %8 = lshr i32 %1, %7, !dbg !11397
  ret i32 %8, !dbg !11398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !11399 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11400
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11401
  %3 = lshr i32 %2, 11, !dbg !11402
  %4 = and i32 %3, 7, !dbg !11402
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11403
  %6 = load i8, i8* %5, align 1, !dbg !11403
  %7 = zext i8 %6 to i32, !dbg !11403
  %8 = lshr i32 %1, %7, !dbg !11404
  ret i32 %8, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11410, metadata !DIExpression()), !dbg !11411
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11412
  store i32 31, i32* %2, align 4, !dbg !11413
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11414
  %4 = and i32 %3, 262144, !dbg !11416
  %5 = icmp eq i32 %4, 0, !dbg !11417
  br i1 %5, label %8, label %6, !dbg !11418

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11419
  store i32 5, i32* %7, align 4, !dbg !11421
  br label %15, !dbg !11422

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11423
  %10 = and i32 %9, 65536, !dbg !11425
  %11 = icmp eq i32 %10, 0, !dbg !11426
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11427
  br i1 %11, label %14, label %13, !dbg !11428

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11429
  br label %15, !dbg !11431

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11432
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11434
  %17 = and i32 %16, 1, !dbg !11436
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11437
  store i32 %17, i32* %18, align 4, !dbg !11439
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11440
  %20 = lshr i32 %19, 8, !dbg !11441
  %21 = and i32 %20, 31, !dbg !11441
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11442
  store i32 %21, i32* %22, align 4, !dbg !11443
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11444
  %24 = lshr i32 %23, 8, !dbg !11446
  %25 = and i32 %24, 1, !dbg !11446
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11447
  store i32 %25, i32* %26, align 4, !dbg !11449
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11450
  %28 = lshr i32 %27, 24, !dbg !11451
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11452
  store i32 %28, i32* %29, align 4, !dbg !11453
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11454
  %31 = and i32 %30, 57344, !dbg !11455
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11456
  store i32 %31, i32* %32, align 4, !dbg !11457
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11458
  %34 = and i32 %33, 1024, !dbg !11460
  %35 = icmp eq i32 %34, 0, !dbg !11461
  br i1 %35, label %38, label %36, !dbg !11462

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11463
  store i32 5, i32* %37, align 4, !dbg !11465
  br label %45, !dbg !11466

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11467
  %40 = and i32 %39, 256, !dbg !11469
  %41 = icmp eq i32 %40, 0, !dbg !11470
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11471
  br i1 %41, label %44, label %43, !dbg !11472

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11473
  br label %45, !dbg !11475

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11476
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11478
  %47 = and i32 %46, 1, !dbg !11480
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11481
  store i32 %47, i32* %48, align 4, !dbg !11483
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11484
  %50 = and i32 %49, 16777216, !dbg !11486
  %51 = icmp eq i32 %50, 0, !dbg !11487
  %52 = select i1 %51, i32 1, i32 2, !dbg !11488
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11489
  store i32 %52, i32* %53, align 4, !dbg !11491
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11492
  %55 = and i32 %54, 65536, !dbg !11493
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11494
  store i32 %55, i32* %56, align 4, !dbg !11495
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11496
  %58 = and i32 %57, 3932160, !dbg !11497
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11498
  store i32 %58, i32* %59, align 4, !dbg !11499
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11500
  %61 = and i32 %60, 12582912, !dbg !11501
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11502
  store i32 %61, i32* %62, align 4, !dbg !11503
  ret void, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !11505 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11509, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.value(metadata i32* %1, metadata !11510, metadata !DIExpression()), !dbg !11511
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11512
  store i32 15, i32* %3, align 4, !dbg !11513
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11514
  %5 = and i32 %4, 3, !dbg !11515
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11516
  store i32 %5, i32* %6, align 4, !dbg !11517
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11518
  %8 = and i32 %7, 240, !dbg !11519
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11520
  store i32 %8, i32* %9, align 4, !dbg !11521
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11522
  %11 = and i32 %10, 1792, !dbg !11523
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11524
  store i32 %11, i32* %12, align 4, !dbg !11525
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %14 = lshr i32 %13, 3, !dbg !11527
  %15 = and i32 %14, 1792, !dbg !11527
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11528
  store i32 %15, i32* %16, align 4, !dbg !11529
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11530
  %18 = and i32 %17, 1, !dbg !11530
  store i32 %18, i32* %1, align 4, !dbg !11531
  ret void, !dbg !11532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11533 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11534
  %2 = and i32 %1, 128, !dbg !11534
  %3 = icmp eq i32 %2, 0, !dbg !11534
  br i1 %3, label %5, label %4, !dbg !11536

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11537
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11539
  br label %5, !dbg !11540

5:                                                ; preds = %4, %0
  ret void, !dbg !11541
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11542 {
  ret void, !dbg !11543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !11544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11549
  ret void, !dbg !11550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !11551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11554, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 1000, metadata !11555, metadata !DIExpression()), !dbg !11556
  %2 = udiv i32 %0, 1000, !dbg !11557
  %3 = add nsw i32 %2, -1, !dbg !11558
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11559
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11560
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11561
  ret void, !dbg !11562
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !11563 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11565, metadata !DIExpression()), !dbg !11568
  %3 = bitcast i32* %2 to i8*, !dbg !11569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11569
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11566, metadata !DIExpression()), !dbg !11570
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11571
  store volatile i32 %4, i32* %2, align 4, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  %5 = load volatile i32, i32* %2, align 4, !dbg !11572
  %6 = icmp eq i32 %0, -1, !dbg !11573
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11567, metadata !DIExpression()), !dbg !11568
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %8, metadata !11567, metadata !DIExpression()), !dbg !11568
  br label %9, !dbg !11575

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11567, metadata !DIExpression()), !dbg !11568
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11567, metadata !DIExpression()), !dbg !11568
  %12 = shl i32 %11, 15, !dbg !11568
  %13 = ashr i32 %12, 31, !dbg !11568
  %14 = add i32 %13, %10, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %14, metadata !11567, metadata !DIExpression()), !dbg !11568
  %15 = icmp eq i32 %14, 0, !dbg !11579
  br i1 %15, label %16, label %9, !dbg !11575

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11580
  ret void, !dbg !11580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11585
  ret void, !dbg !11586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !11587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11592, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.value(metadata i32 0, metadata !11593, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.value(metadata i32 0, metadata !11594, metadata !DIExpression()), !dbg !11595
  %2 = add i32 %0, -32000001, !dbg !11596
  %3 = icmp ult i32 %2, -32000000, !dbg !11596
  br i1 %3, label %22, label %4, !dbg !11596

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11598
  %6 = icmp eq i32 %5, 2048, !dbg !11601
  br i1 %6, label %7, label %9, !dbg !11602

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !11603
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()), !dbg !11595
  br i1 %8, label %16, label %17, !dbg !11606

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11607
  %11 = icmp eq i32 %10, 4096, !dbg !11609
  br i1 %11, label %12, label %14, !dbg !11610

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !11611
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()), !dbg !11595
  br i1 %13, label %16, label %17, !dbg !11606

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !11614
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()), !dbg !11595
  br i1 %15, label %16, label %17, !dbg !11606

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !11617
  br label %17, !dbg !11620

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !11621
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11622
  %20 = icmp ne i32 %19, %18, !dbg !11624
  %21 = zext i1 %20 to i32, !dbg !11625
  br label %22, !dbg !11625

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !11595
  call void @llvm.dbg.value(metadata i32 %23, metadata !11593, metadata !DIExpression()), !dbg !11595
  ret i32 %23, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !11627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11628
  %2 = and i32 %1, 6144, !dbg !11628
  ret i32 %2, !dbg !11629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !11630 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11631
  %2 = or i32 %1, 4, !dbg !11631
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11631
  ret void, !dbg !11632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !11633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11635, metadata !DIExpression()), !dbg !11636
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11637
  %3 = and i32 %2, -2, !dbg !11637
  %4 = or i32 %3, %0, !dbg !11637
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !11639 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11640
  %2 = and i32 %1, 1, !dbg !11640
  ret i32 %2, !dbg !11641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11642 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11659, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11660, metadata !DIExpression()), !dbg !11663
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11664
  %4 = icmp eq i32 %3, 0, !dbg !11666
  br i1 %4, label %5, label %19, !dbg !11667

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !11668
  call void @llvm.dbg.value(metadata i32 %6, metadata !11662, metadata !DIExpression()), !dbg !11663
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #26, !dbg !11670
  %8 = icmp eq i32 %7, 1, !dbg !11672
  br i1 %8, label %13, label %9, !dbg !11673

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.87() #26, !dbg !11674
  br label %10, !dbg !11676

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #26, !dbg !11677
  %12 = icmp eq i32 %11, 1, !dbg !11678
  br i1 %12, label %13, label %10, !dbg !11676, !llvm.loop !11679

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !11681
  %15 = load i32, i32* %14, align 4, !dbg !11681
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !11682
  %17 = load i32, i32* %16, align 4, !dbg !11682
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !11683
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %18, metadata !11661, metadata !DIExpression()), !dbg !11663
  br label %19, !dbg !11685

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !11686
  call void @llvm.dbg.value(metadata i32 %20, metadata !11661, metadata !DIExpression()), !dbg !11663
  ret i32 %20, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !11688 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11692, metadata !DIExpression()), !dbg !11693
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #26, !dbg !11694
  %2 = icmp ne i32 %1, 0, !dbg !11696
  %3 = zext i1 %2 to i32, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %3, metadata !11692, metadata !DIExpression()), !dbg !11693
  ret i32 %3, !dbg !11698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11703, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !11704, metadata !DIExpression()), !dbg !11706
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !11707
  %4 = load i32, i32* %3, align 4, !dbg !11707
  %5 = lshr i32 %4, 18, !dbg !11708
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !11709
  %7 = load i8, i8* %6, align 1, !dbg !11709
  %8 = zext i8 %7 to i32, !dbg !11710
  %9 = mul i32 %8, %0, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %9, metadata !11705, metadata !DIExpression()), !dbg !11706
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !11712
  %11 = load i32, i32* %10, align 4, !dbg !11712
  %12 = lshr i32 %11, 22, !dbg !11713
  %13 = add nuw nsw i32 %12, 1, !dbg !11714
  %14 = udiv i32 %9, %13, !dbg !11715
  call void @llvm.dbg.value(metadata i32 %14, metadata !11705, metadata !DIExpression()), !dbg !11706
  ret i32 %14, !dbg !11716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.86() unnamed_addr #17 !dbg !11717 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11718
  %2 = lshr i32 %1, 1, !dbg !11719
  %3 = and i32 %2, 1, !dbg !11719
  ret i32 %3, !dbg !11720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.87() unnamed_addr #16 !dbg !11721 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  %2 = or i32 %1, 1, !dbg !11722
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  ret void, !dbg !11723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11726, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i32 %1, metadata !11727, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i32 %2, metadata !11728, metadata !DIExpression()), !dbg !11729
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  %5 = and i32 %4, -16580609, !dbg !11730
  %6 = or i32 %1, %0, !dbg !11730
  %7 = or i32 %6, %2, !dbg !11730
  %8 = or i32 %7, %5, !dbg !11730
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  ret void, !dbg !11731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !11732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11736, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11737, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.value(metadata i32 0, metadata !11738, metadata !DIExpression()), !dbg !11740
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11741
  %4 = load i32, i32* %3, align 4, !dbg !11741
  %5 = lshr i32 %4, 4, !dbg !11741
  %6 = and i32 %5, 15, !dbg !11741
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11741
  %8 = load i8, i8* %7, align 1, !dbg !11741
  %9 = zext i8 %8 to i32, !dbg !11741
  %10 = lshr i32 %0, %9, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %10, metadata !11739, metadata !DIExpression()), !dbg !11740
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11742
  %12 = icmp ult i32 %11, %10, !dbg !11744
  br i1 %12, label %13, label %16, !dbg !11745

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %14, metadata !11738, metadata !DIExpression()), !dbg !11740
  %15 = icmp eq i32 %14, 0, !dbg !11748
  br i1 %15, label %16, label %30, !dbg !11750

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.89() #26, !dbg !11751
  br label %17, !dbg !11753

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #26, !dbg !11754
  %19 = icmp eq i32 %18, 1, !dbg !11755
  br i1 %19, label %20, label %17, !dbg !11753, !llvm.loop !11756

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11758
  tail call fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %21) #26, !dbg !11759
  tail call fastcc void @LL_RCC_SetSysClkSource.92() #26, !dbg !11760
  br label %22, !dbg !11761

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.93() #26, !dbg !11762
  %24 = icmp eq i32 %23, 12, !dbg !11763
  br i1 %24, label %25, label %22, !dbg !11761, !llvm.loop !11764

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11766
  %27 = load i32, i32* %26, align 4, !dbg !11766
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %27) #26, !dbg !11767
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11768
  %29 = load i32, i32* %28, align 4, !dbg !11768
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %29) #26, !dbg !11769
  br label %30, !dbg !11770

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11771
  %33 = icmp ugt i32 %32, %10, !dbg !11773
  br i1 %33, label %34, label %36, !dbg !11774

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %35, metadata !11738, metadata !DIExpression()), !dbg !11740
  br label %36, !dbg !11777

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11740
  call void @llvm.dbg.value(metadata i32 %37, metadata !11738, metadata !DIExpression()), !dbg !11740
  %38 = icmp eq i32 %37, 0, !dbg !11778
  br i1 %38, label %39, label %40, !dbg !11780

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11781
  br label %40, !dbg !11783

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.89() unnamed_addr #16 !dbg !11785 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11786
  %2 = or i32 %1, 16777216, !dbg !11786
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11786
  ret void, !dbg !11787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.90() unnamed_addr #17 !dbg !11788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11789
  %2 = lshr i32 %1, 25, !dbg !11790
  %3 = and i32 %2, 1, !dbg !11790
  ret i32 %3, !dbg !11791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %0) unnamed_addr #16 !dbg !11792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11794, metadata !DIExpression()), !dbg !11795
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11796
  %3 = and i32 %2, -241, !dbg !11796
  %4 = or i32 %3, %0, !dbg !11796
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11796
  ret void, !dbg !11797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.92() unnamed_addr #16 !dbg !11798 {
  call void @llvm.dbg.value(metadata i32 3, metadata !11800, metadata !DIExpression()), !dbg !11801
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11802
  %2 = or i32 %1, 3, !dbg !11802
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11802
  ret void, !dbg !11803
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.93() unnamed_addr #17 !dbg !11804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11805
  %2 = and i32 %1, 12, !dbg !11805
  ret i32 %2, !dbg !11806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %0) unnamed_addr #16 !dbg !11807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11809, metadata !DIExpression()), !dbg !11810
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11811
  %3 = and i32 %2, -1793, !dbg !11811
  %4 = or i32 %3, %0, !dbg !11811
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %0) unnamed_addr #16 !dbg !11813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11817
  %3 = and i32 %2, -14337, !dbg !11817
  %4 = or i32 %3, %0, !dbg !11817
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !11819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11823, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 %1, metadata !11824, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !11825, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11826, metadata !DIExpression()), !dbg !11829
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11830
  %6 = icmp eq i32 %5, 0, !dbg !11832
  br i1 %6, label %7, label %25, !dbg !11833

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %8, metadata !11828, metadata !DIExpression()), !dbg !11829
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11836
  %10 = icmp eq i32 %9, 1, !dbg !11838
  br i1 %10, label %19, label %11, !dbg !11839

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11840
  br i1 %12, label %13, label %14, !dbg !11843

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11844
  br label %15, !dbg !11846

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !11847
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !11849
  br label %16, !dbg !11850

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11851
  %18 = icmp eq i32 %17, 1, !dbg !11852
  br i1 %18, label %19, label %16, !dbg !11850, !llvm.loop !11853

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !11855
  %21 = load i32, i32* %20, align 4, !dbg !11855
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !11856
  %23 = load i32, i32* %22, align 4, !dbg !11856
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !11857
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %24, metadata !11827, metadata !DIExpression()), !dbg !11829
  br label %25, !dbg !11859

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !11860
  call void @llvm.dbg.value(metadata i32 %26, metadata !11827, metadata !DIExpression()), !dbg !11829
  ret i32 %26, !dbg !11861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !11862 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11863
  %2 = lshr i32 %1, 17, !dbg !11864
  %3 = and i32 %2, 1, !dbg !11864
  ret i32 %3, !dbg !11865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !11866 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  %2 = or i32 %1, 262144, !dbg !11867
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  ret void, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !11869 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %2 = and i32 %1, -262145, !dbg !11870
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  ret void, !dbg !11871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !11872 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11873
  %2 = or i32 %1, 65536, !dbg !11873
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11873
  ret void, !dbg !11874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11875 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11878, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11878, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11878, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11894
  ret void, !dbg !11895
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11900, metadata !DIExpression()), !dbg !11902
  %2 = icmp eq i8* %0, null, !dbg !11903
  br i1 %2, label %29, label %3, !dbg !11905

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11906
  %5 = icmp eq i8 %4, 0, !dbg !11907
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11908
  br i1 %6, label %29, label %8, !dbg !11908

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11901, metadata !DIExpression()), !dbg !11902
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11909

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11901, metadata !DIExpression()), !dbg !11902
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11911
  br i1 %10, label %11, label %15, !dbg !11916

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11917
  %13 = load i8*, i8** %12, align 4, !dbg !11917
  %14 = icmp eq i8* %13, %0, !dbg !11918
  br i1 %14, label %29, label %15, !dbg !11919

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11920
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11901, metadata !DIExpression()), !dbg !11902
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11921
  br i1 %17, label %7, label %8, !dbg !11922, !llvm.loop !11923

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11901, metadata !DIExpression()), !dbg !11902
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11925
  br i1 %20, label %21, label %26, !dbg !11929

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11930
  %23 = load i8*, i8** %22, align 4, !dbg !11930
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11931
  %25 = icmp eq i32 %24, 0, !dbg !11932
  br i1 %25, label %29, label %26, !dbg !11933

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11901, metadata !DIExpression()), !dbg !11902
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11935
  br i1 %28, label %29, label %18, !dbg !11909, !llvm.loop !11936

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11902
  ret %struct.device* %30, !dbg !11938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11943, metadata !DIExpression()), !dbg !11944
  %2 = icmp eq %struct.device* %0, null, !dbg !11945
  br i1 %2, label %14, label %3, !dbg !11947

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11948
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11948
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11949
  %7 = load i8, i8* %6, align 1, !dbg !11949
  %8 = and i8 %7, 1, !dbg !11949
  %9 = icmp eq i8 %8, 0, !dbg !11949
  br i1 %9, label %14, label %10, !dbg !11950

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11951
  %12 = load i8, i8* %11, align 1, !dbg !11951
  %13 = icmp eq i8 %12, 0, !dbg !11952
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11944
  ret i1 %15, !dbg !11953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11954 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11959, metadata !DIExpression()), !dbg !11960
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11961
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11963 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11971, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11972, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.value(metadata i8* %2, metadata !11973, metadata !DIExpression()), !dbg !11976
  %5 = bitcast i32* %4 to i8*, !dbg !11977
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11977
  call void @llvm.dbg.value(metadata i32 0, metadata !11974, metadata !DIExpression()), !dbg !11976
  store i32 0, i32* %4, align 4, !dbg !11978
  call void @llvm.dbg.value(metadata i32* %4, metadata !11974, metadata !DIExpression(DW_OP_deref)), !dbg !11976
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11979
  call void @llvm.dbg.value(metadata i16* %6, metadata !11975, metadata !DIExpression()), !dbg !11976
  %7 = load i32, i32* %4, align 4, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %7, metadata !11974, metadata !DIExpression()), !dbg !11976
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11981
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11982
  ret i32 %8, !dbg !11983
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11988, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32* %1, metadata !11989, metadata !DIExpression()), !dbg !11994
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11995
  %4 = load i16*, i16** %3, align 4, !dbg !11995
  call void @llvm.dbg.value(metadata i16* %4, metadata !11990, metadata !DIExpression()), !dbg !11994
  %5 = icmp eq i16* %4, null, !dbg !11996
  br i1 %5, label %14, label %6, !dbg !11997

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11998
  call void @llvm.dbg.value(metadata i32 %7, metadata !11991, metadata !DIExpression()), !dbg !11998
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11999
  %9 = load i16, i16* %8, align 2, !dbg !11999
  %10 = add i16 %9, -32767, !dbg !12000
  %11 = icmp ult i16 %10, 2, !dbg !12000
  %12 = add i32 %7, 1, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %12, metadata !11991, metadata !DIExpression()), !dbg !11998
  br i1 %11, label %13, label %6, !dbg !12000, !llvm.loop !12003

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12006
  br label %14, !dbg !12007

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12009 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12013, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %1, metadata !12014, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12015, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8* %3, metadata !12016, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12017, metadata !DIExpression()), !dbg !12025
  %5 = icmp eq i32 %1, 0, !dbg !12026
  br i1 %5, label %16, label %8, !dbg !12027

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12017, metadata !DIExpression()), !dbg !12025
  %7 = icmp eq i32 %15, %1, !dbg !12026
  br i1 %7, label %16, label %8, !dbg !12027, !llvm.loop !12028

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12017, metadata !DIExpression()), !dbg !12025
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12030
  %11 = load i16, i16* %10, align 2, !dbg !12030
  call void @llvm.dbg.value(metadata i16 %11, metadata !12019, metadata !DIExpression()), !dbg !12031
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12032
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12022, metadata !DIExpression()), !dbg !12031
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %13, metadata !12023, metadata !DIExpression()), !dbg !12031
  %14 = icmp slt i32 %13, 0, !dbg !12034
  %15 = add nuw i32 %9, 1, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %15, metadata !12017, metadata !DIExpression()), !dbg !12025
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12038 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12042, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12043, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12044, metadata !DIExpression()), !dbg !12045
  %2 = sext i16 %0 to i32, !dbg !12046
  %3 = icmp slt i16 %0, 1, !dbg !12048
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12049
  %6 = add nsw i32 %2, -1, !dbg !12049
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12049
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12049
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12043, metadata !DIExpression()), !dbg !12045
  ret %struct.device* %8, !dbg !12050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12051 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12053, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12054, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i8* %2, metadata !12055, metadata !DIExpression()), !dbg !12058
  %5 = bitcast i32* %4 to i8*, !dbg !12059
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 0, metadata !12056, metadata !DIExpression()), !dbg !12058
  store i32 0, i32* %4, align 4, !dbg !12060
  call void @llvm.dbg.value(metadata i32* %4, metadata !12056, metadata !DIExpression(DW_OP_deref)), !dbg !12058
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12061
  call void @llvm.dbg.value(metadata i16* %6, metadata !12057, metadata !DIExpression()), !dbg !12058
  %7 = load i32, i32* %4, align 4, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %7, metadata !12056, metadata !DIExpression()), !dbg !12058
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12064
  ret i32 %8, !dbg !12065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12068, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32* %1, metadata !12069, metadata !DIExpression()), !dbg !12073
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12074
  %4 = load i16*, i16** %3, align 4, !dbg !12074
  call void @llvm.dbg.value(metadata i16* %4, metadata !12070, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12072, metadata !DIExpression()), !dbg !12073
  %5 = icmp eq i16* %4, null, !dbg !12075
  br i1 %5, label %22, label %6, !dbg !12077

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i16* %8, metadata !12070, metadata !DIExpression()), !dbg !12073
  %9 = load i16, i16* %8, align 2, !dbg !12078
  %10 = icmp eq i16 %9, -32768, !dbg !12082
  call void @llvm.dbg.value(metadata i32 undef, metadata !12071, metadata !DIExpression()), !dbg !12073
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12083
  call void @llvm.dbg.value(metadata i16* %11, metadata !12070, metadata !DIExpression()), !dbg !12073
  %12 = zext i1 %10 to i32, !dbg !12084
  %13 = add i32 %7, %12, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %13, metadata !12071, metadata !DIExpression()), !dbg !12073
  %14 = icmp eq i32 %13, 2, !dbg !12085
  br i1 %14, label %15, label %6, !dbg !12086

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12073
  call void @llvm.dbg.value(metadata i32 %16, metadata !12072, metadata !DIExpression()), !dbg !12073
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12087
  %18 = load i16, i16* %17, align 2, !dbg !12087
  %19 = icmp eq i16 %18, 32767, !dbg !12088
  %20 = add i32 %16, 1, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %20, metadata !12072, metadata !DIExpression()), !dbg !12073
  br i1 %19, label %21, label %15, !dbg !12091, !llvm.loop !12092

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12094
  br label %22, !dbg !12095

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12096
  call void @llvm.dbg.value(metadata i16* %23, metadata !12070, metadata !DIExpression()), !dbg !12073
  ret i16* %23, !dbg !12097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12098 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12101
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12102
  ret i32* %2, !dbg !12103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12104 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12252, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12253, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12254, metadata !DIExpression()), !dbg !12255
  ret void, !dbg !12256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12261, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 %1, metadata !12262, metadata !DIExpression()), !dbg !12263
  ret void, !dbg !12264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12265 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12269, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %1, metadata !12270, metadata !DIExpression()), !dbg !12271
  ret void, !dbg !12272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12277, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i8* %1, metadata !12278, metadata !DIExpression()), !dbg !12279
  ret i32 -134, !dbg !12280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12285, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i8* %1, metadata !12286, metadata !DIExpression()), !dbg !12287
  ret i32 -134, !dbg !12288
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12292, metadata !DIExpression()), !dbg !12293
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12294, !srcloc !12300
  call void @llvm.dbg.value(metadata i32 undef, metadata !12297, metadata !DIExpression()) #25, !dbg !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #25, !dbg !12301
  br label %3, !dbg !12302

3:                                                ; preds = %3, %1
  br label %3, !dbg !12303, !llvm.loop !12306
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12313, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12314, metadata !DIExpression()), !dbg !12315
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12316
  unreachable, !dbg !12316
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12319, metadata !DIExpression()), !dbg !12320
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12321
  unreachable, !dbg !12321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12324, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12325, metadata !DIExpression()), !dbg !12328
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12329, !srcloc !12300
  call void @llvm.dbg.value(metadata i32 undef, metadata !12297, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12327, metadata !DIExpression()), !dbg !12328
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12332
  br i1 %4, label %6, label %5, !dbg !12334

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12335
  br label %7, !dbg !12336

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12335
  br label %7, !dbg !12339

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %8, metadata !12297, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %8, metadata !12326, metadata !DIExpression()), !dbg !12328
  %9 = tail call fastcc %struct.k_thread* @k_current_get.102() #28, !dbg !12341
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12327, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata i32 undef, metadata !12342, metadata !DIExpression()) #25, !dbg !12345
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12347, !srcloc !12348
  tail call fastcc void @k_thread_abort.103(%struct.k_thread* noundef %9) #26, !dbg !12349
  ret void, !dbg !12352
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #9 !dbg !12353 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.104() #28, !dbg !12357
  ret %struct.k_thread* %1, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.103(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12363, metadata !DIExpression()), !dbg !12364
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12365, !srcloc !12367
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12368
  ret void, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.104() unnamed_addr #9 !dbg !12370 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12371, !srcloc !12373
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12374
  ret %struct.k_thread* %1, !dbg !12375
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12380, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %1, metadata !12381, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %2, metadata !12382, metadata !DIExpression()), !dbg !12383
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12384
  ret void, !dbg !12385
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12386 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12390, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8* %1, metadata !12391, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 %2, metadata !12392, metadata !DIExpression()), !dbg !12393
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12396 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12397
  ret void, !dbg !12398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12401, metadata !DIExpression()), !dbg !12402
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12403
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12404
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12405
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12406
  %4 = trunc i32 %0 to i8, !dbg !12407
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12408
  store i8 %4, i8* %5, align 4, !dbg !12409
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12410
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12411
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12412
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12413
  store i8* %8, i8** %9, align 4, !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12418, metadata !DIExpression()), !dbg !12424
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12425
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12419, metadata !DIExpression()), !dbg !12424
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12426
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12420, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i8* null, metadata !12423, metadata !DIExpression()), !dbg !12424
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12427
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12428
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12429
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12430
  ret void, !dbg !12431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12432 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12436, metadata !DIExpression()), !dbg !12437
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12438
  ret i8* %2, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12445, metadata !DIExpression()), !dbg !12446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12447
  %3 = load i8, i8* %2, align 1, !dbg !12448
  %4 = and i8 %3, -5, !dbg !12448
  store i8 %4, i8* %2, align 1, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12450 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12453
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12454
  %3 = ptrtoint i8* %2 to i32, !dbg !12463
  %4 = add i32 %3, 2048, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %4, metadata !12458, metadata !DIExpression()) #25, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %4, metadata !12466, metadata !DIExpression()) #25, !dbg !12469
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12471, !srcloc !12472
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12473
  %6 = or i32 %5, 512, !dbg !12473
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12473
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -2, i32 noundef 255) #27, !dbg !12474
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -5, i32 noundef 0) #27, !dbg !12477
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -12, i32 noundef 0) #27, !dbg !12478
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -11, i32 noundef 0) #27, !dbg !12479
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -10, i32 noundef 0) #27, !dbg !12480
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef -4, i32 noundef 0) #27, !dbg !12481
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12482
  %8 = or i32 %7, 458752, !dbg !12482
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12482
  tail call void @z_arm_fault_init() #27, !dbg !12483
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12484
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12485
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12488
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12489
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12490
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12491
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12491
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12452, metadata !DIExpression()), !dbg !12492
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12493
  call void @z_device_state_init() #27, !dbg !12494
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12495
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12496
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12497
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12498
  unreachable, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2102, metadata !DIExpression()), !dbg !12499
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12500
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12500
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2103, metadata !DIExpression()), !dbg !12499
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2103, metadata !DIExpression()), !dbg !12499
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12501
  br i1 %7, label %8, label %35, !dbg !12502

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2103, metadata !DIExpression()), !dbg !12499
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12503
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12503
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2113, metadata !DIExpression()), !dbg !12504
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12505
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12505
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %14, metadata !2117, metadata !DIExpression()), !dbg !12504
  %15 = icmp eq %struct.device* %11, null, !dbg !12507
  br i1 %15, label %32, label %16, !dbg !12509

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12510
  br i1 %17, label %26, label %18, !dbg !12513

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12514
  call void @llvm.dbg.value(metadata i32 %19, metadata !2117, metadata !DIExpression()), !dbg !12504
  %20 = icmp ult i32 %19, 255, !dbg !12516
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %21, metadata !2117, metadata !DIExpression()), !dbg !12504
  %22 = trunc i32 %21 to i8, !dbg !12517
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12518
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12518
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12519
  store i8 %22, i8* %25, align 1, !dbg !12520
  br label %26, !dbg !12521

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12522
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12522
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12523
  %30 = load i8, i8* %29, align 1, !dbg !12524
  %31 = or i8 %30, 1, !dbg !12524
  store i8 %31, i8* %29, align 1, !dbg !12524
  br label %32, !dbg !12525

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2103, metadata !DIExpression()), !dbg !12499
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12501
  br i1 %34, label %8, label %35, !dbg !12502, !llvm.loop !12527

35:                                               ; preds = %32, %1
  ret void, !dbg !12529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.111(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 %1, metadata !12533, metadata !DIExpression()), !dbg !12534
  %3 = trunc i32 %1 to i8, !dbg !12535
  %4 = shl i8 %3, 4, !dbg !12535
  %5 = and i32 %0, 15, !dbg !12538
  %6 = add nsw i32 %5, -4, !dbg !12539
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12540
  store volatile i8 %4, i8* %7, align 1, !dbg !12541
  ret void, !dbg !12542
}

; Function Attrs: optsize
declare !dbg !12543 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12547, metadata !DIExpression()), !dbg !12548
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12549
  store i8 1, i8* %2, align 1, !dbg !12550
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12551
  store i8 1, i8* %3, align 4, !dbg !12552
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12553
  store i32 0, i32* %4, align 4, !dbg !12554
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12555
  store i32 0, i32* %5, align 4, !dbg !12556
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12557
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12558
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12561 {
  tail call void @z_sched_init() #27, !dbg !12566
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12567
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0)) #27, !dbg !12568
  call void @llvm.dbg.value(metadata i8* %1, metadata !12565, metadata !DIExpression()), !dbg !12569
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12570
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12571
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12572
  ret i8* %1, !dbg !12573
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12576, metadata !DIExpression()), !dbg !12577
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12578
  unreachable, !dbg !12579
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %1, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %2, metadata !12584, metadata !DIExpression()), !dbg !12585
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12586
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12587
  tail call void @boot_banner() #27, !dbg !12588
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12589
  tail call void @z_init_static_threads() #27, !dbg !12590
  tail call void @main() #27, !dbg !12591
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12592
  %5 = and i8 %4, -2, !dbg !12592
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12592
  ret void, !dbg !12593
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12594 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12604, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8* %1, metadata !12605, metadata !DIExpression()), !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12608 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.value(metadata i8* %1, metadata !12611, metadata !DIExpression()), !dbg !12612
  ret void, !dbg !12613
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12614 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12615, !srcloc !12622
  call void @llvm.dbg.value(metadata i32 %1, metadata !12618, metadata !DIExpression()) #25, !dbg !12623
  %2 = icmp ne i32 %1, 0, !dbg !12624
  ret i1 %2, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12626 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12627
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12628
  %3 = load i8, i8* %2, align 4, !dbg !12629
  %4 = or i8 %3, 1, !dbg !12629
  store i8 %4, i8* %2, align 4, !dbg !12629
  ret void, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12631 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12633
  %3 = load i8, i8* %2, align 4, !dbg !12634
  %4 = and i8 %3, -2, !dbg !12634
  store i8 %4, i8* %2, align 4, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12636 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12638
  %3 = load i8, i8* %2, align 4, !dbg !12638
  %4 = and i8 %3, 1, !dbg !12639
  %5 = icmp ne i8 %4, 0, !dbg !12640
  ret i1 %5, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12646, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i8* %1, metadata !12647, metadata !DIExpression()), !dbg !12648
  ret i32 -88, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12654, metadata !DIExpression()), !dbg !12655
  ret i8* null, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12661, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i8* %1, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %2, metadata !12663, metadata !DIExpression()), !dbg !12664
  ret i32 -88, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2240, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* %1, metadata !2241, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %2, metadata !2242, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 0, metadata !2243, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8 undef, metadata !2245, metadata !DIExpression()), !dbg !12666
  %4 = icmp eq i8* %1, null, !dbg !12667
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12669
  br i1 %6, label %46, label %7, !dbg !12669

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12670
  %9 = load i8, i8* %8, align 1, !dbg !12670
  call void @llvm.dbg.value(metadata i8 %9, metadata !2245, metadata !DIExpression()), !dbg !12666
  %10 = add i32 %2, -1, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %10, metadata !2242, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8 0, metadata !2246, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i8 %9, metadata !2245, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 0, metadata !2243, metadata !DIExpression()), !dbg !12666
  %11 = icmp eq i8 %9, 0, !dbg !12673
  br i1 %11, label %12, label %15, !dbg !12675

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12676
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12677
  store i8 0, i8* %14, align 1, !dbg !12678
  br label %46, !dbg !12679

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2246, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i8 %17, metadata !2245, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %18, metadata !2243, metadata !DIExpression()), !dbg !12666
  %19 = zext i8 %17 to i32, !dbg !12680
  %20 = zext i8 %16 to i32, !dbg !12681
  %21 = shl nuw i32 1, %20, !dbg !12681
  call void @llvm.dbg.value(metadata i32 %21, metadata !2244, metadata !DIExpression()), !dbg !12666
  %22 = and i32 %21, %19, !dbg !12683
  %23 = icmp eq i32 %22, 0, !dbg !12685
  br i1 %23, label %42, label %24, !dbg !12686

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12687
  %26 = sub i32 %10, %18, !dbg !12688
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12689
  %28 = load i8*, i8** %27, align 4, !dbg !12689
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12690
  %30 = load i32, i32* %29, align 4, !dbg !12690
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12691
  %32 = add i32 %31, %18, !dbg !12692
  call void @llvm.dbg.value(metadata i32 %32, metadata !2243, metadata !DIExpression()), !dbg !12666
  %33 = trunc i32 %21 to i8, !dbg !12693
  %34 = xor i8 %33, -1, !dbg !12693
  %35 = and i8 %17, %34, !dbg !12693
  call void @llvm.dbg.value(metadata i8 %35, metadata !2245, metadata !DIExpression()), !dbg !12666
  %36 = icmp eq i8 %35, 0, !dbg !12694
  br i1 %36, label %12, label %37, !dbg !12696

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12697
  %39 = sub i32 %10, %32, !dbg !12699
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12700
  %41 = add i32 %40, %32, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %41, metadata !2243, metadata !DIExpression()), !dbg !12666
  br label %42, !dbg !12702

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12666
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12666
  call void @llvm.dbg.value(metadata i8 %44, metadata !2245, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %43, metadata !2243, metadata !DIExpression()), !dbg !12666
  %45 = add i8 %16, 1, !dbg !12703
  call void @llvm.dbg.value(metadata i8 %45, metadata !2246, metadata !DIExpression()), !dbg !12672
  br label %15, !dbg !12675

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !12666
  ret i8* %47, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12709, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 %1, metadata !12710, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i8* %2, metadata !12711, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 %3, metadata !12712, metadata !DIExpression()), !dbg !12714
  %5 = icmp ult i32 %1, %3, !dbg !12715
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12715
  call void @llvm.dbg.value(metadata i32 %6, metadata !12713, metadata !DIExpression()), !dbg !12714
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12716
  ret i32 %6, !dbg !12717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12722, metadata !DIExpression()), !dbg !12723
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12724
  ret void, !dbg !12725
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12735, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12736, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %2, metadata !12737, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12738, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %4, metadata !12739, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %5, metadata !12740, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %6, metadata !12741, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %7, metadata !12742, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %8, metadata !12743, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* undef, metadata !12744, metadata !DIExpression()), !dbg !12746
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12747
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !12748
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12749
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12750
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12751
  call void @llvm.dbg.value(metadata i8* %13, metadata !12745, metadata !DIExpression()), !dbg !12746
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12752
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12753
  store i8* null, i8** %14, align 4, !dbg !12754
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12755
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12755
  br i1 %16, label %20, label %17, !dbg !12757

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12758
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12758
  br label %20, !dbg !12759

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12746
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12760
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12762
  ret i8* %13, !dbg !12763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !12764 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12771
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12779, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %1, metadata !12780, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %2, metadata !12781, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %3, metadata !12782, metadata !DIExpression()), !dbg !12783
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12784
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12785
  %6 = trunc i32 %3 to i8, !dbg !12786
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12787
  store i8 %6, i8* %7, align 4, !dbg !12788
  %8 = trunc i32 %2 to i8, !dbg !12789
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12790
  store i8 %8, i8* %9, align 1, !dbg !12791
  %10 = trunc i32 %1 to i8, !dbg !12792
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12793
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12793
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12793
  store i8 %10, i8* %13, align 2, !dbg !12794
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12795
  store i8 0, i8* %14, align 1, !dbg !12796
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12797
  ret void, !dbg !12798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12803, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12804, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %2, metadata !12805, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %4 = add i32 %2, 7, !dbg !12812
  %5 = and i32 %4, -8, !dbg !12812
  %6 = add i32 %5, 64, !dbg !12812
  call void @llvm.dbg.value(metadata i32 %6, metadata !12806, metadata !DIExpression()), !dbg !12811
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12814
  call void @llvm.dbg.value(metadata i8* %7, metadata !12809, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %5, metadata !12807, metadata !DIExpression()), !dbg !12811
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12815
  call void @llvm.dbg.value(metadata i8* %8, metadata !12808, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %9 = ptrtoint i8* %7 to i32, !dbg !12816
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12817
  store i32 %9, i32* %10, align 4, !dbg !12818
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12819
  store i32 %5, i32* %11, align 4, !dbg !12820
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12821
  store i32 0, i32* %12, align 4, !dbg !12822
  call void @llvm.dbg.value(metadata i8* %8, metadata !12808, metadata !DIExpression()), !dbg !12811
  ret i8* %8, !dbg !12823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12828, metadata !DIExpression()), !dbg !12829
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12830
  ret i8* %2, !dbg !12831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12837, metadata !DIExpression()), !dbg !12838
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12839
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12840
  ret void, !dbg !12841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12842 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12844, metadata !DIExpression()), !dbg !12845
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12846
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12847
  ret void, !dbg !12848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12849 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12853, metadata !DIExpression()), !dbg !12854
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12855
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12856
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12857
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12858
  ret void, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12865, metadata !DIExpression()), !dbg !12866
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12867
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12868
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12869
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12870
  ret void, !dbg !12871
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12872 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12889, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12880, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12881, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %2, metadata !12882, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12883, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %4, metadata !12884, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %5, metadata !12885, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %6, metadata !12886, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %7, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %8, metadata !12888, metadata !DIExpression()), !dbg !12890
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12891
  %13 = icmp eq i64 %11, -1, !dbg !12892
  br i1 %13, label %15, label %14, !dbg !12894

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12895
  br label %15, !dbg !12897

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12899 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12903, metadata !DIExpression()), !dbg !12905
  %4 = icmp eq i64 %3, 0, !dbg !12906
  br i1 %4, label %5, label %6, !dbg !12908

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12909
  br label %7, !dbg !12911

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12912
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12919, metadata !DIExpression()), !dbg !12920
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12921, !srcloc !12923
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12926 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12929, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12928, metadata !DIExpression()), !dbg !12930
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12931
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12932
  ret void, !dbg !12933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12934 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12936, metadata !DIExpression()), !dbg !12956
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12957

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12958
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12954, metadata !DIExpression()), !dbg !12959
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12960

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12936, metadata !DIExpression()), !dbg !12956
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12961
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12961
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12964
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12964
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12965
  %9 = load i32, i32* %8, align 4, !dbg !12965
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12966
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12966
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12967
  %13 = load i8*, i8** %12, align 4, !dbg !12967
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12968
  %15 = load i8*, i8** %14, align 4, !dbg !12968
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12969
  %17 = load i8*, i8** %16, align 4, !dbg !12969
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12970
  %19 = load i32, i32* %18, align 4, !dbg !12970
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12971
  %21 = load i32, i32* %20, align 4, !dbg !12971
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12972
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12973
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12974
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12975
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12975
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12976
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12936, metadata !DIExpression()), !dbg !12956
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12977
  br i1 %27, label %2, label %1, !dbg !12957, !llvm.loop !12979

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !12958
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12954, metadata !DIExpression()), !dbg !12959
  br label %29, !dbg !12960

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !12981
  ret void, !dbg !12982

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12954, metadata !DIExpression()), !dbg !12959
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12983
  %33 = load i32, i32* %32, align 4, !dbg !12983
  %34 = icmp eq i32 %33, -1, !dbg !12987
  br i1 %34, label %43, label %35, !dbg !12988

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12989
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12989
  %38 = icmp sgt i32 %33, 0, !dbg !12991
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12991
  %40 = zext i32 %39 to i64, !dbg !12991
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12991
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12992
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12992
  br label %43, !dbg !12993

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12994
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12954, metadata !DIExpression()), !dbg !12959
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12995
  br i1 %45, label %30, label %29, !dbg !12960, !llvm.loop !12997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12999 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.value(metadata i64 %0, metadata !13006, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 1000, metadata !13011, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 10000, metadata !13012, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13013, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13014, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13015, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13016, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13018, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i64 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i64 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  %2 = mul i64 %0, 10, !dbg !13025
  ret i64 %2, !dbg !13031
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13032 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13034, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %1, metadata !13035, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %2, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %3, metadata !13037, metadata !DIExpression()), !dbg !13038
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13039
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13040
  %7 = load i8, i8* %6, align 4, !dbg !13041
  %8 = or i8 %7, 4, !dbg !13041
  store i8 %8, i8* %6, align 4, !dbg !13041
  tail call void @z_thread_essential_clear() #26, !dbg !13042
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13043
  unreachable, !dbg !13043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13048, metadata !DIExpression()), !dbg !13049
  ret i32 -134, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %1, metadata !13056, metadata !DIExpression()), !dbg !13057
  ret i32 -134, !dbg !13058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13066, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13067, metadata !DIExpression()), !dbg !13068
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13069
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13071
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13068
  ret i32 %6, !dbg !13072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13073 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13077, metadata !DIExpression()), !dbg !13078
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13079
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13078
  ret i32 %3, !dbg !13081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13082 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13086 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13088, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %1, metadata !13089, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %2, metadata !13090, metadata !DIExpression()), !dbg !13091
  br label %4, !dbg !13092

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13093, !srcloc !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13096, metadata !DIExpression()) #25, !dbg !13101
  call void @llvm.dbg.value(metadata i32 undef, metadata !13097, metadata !DIExpression()) #25, !dbg !13101
  tail call fastcc void @k_cpu_idle() #26, !dbg !13102
  br label %4, !dbg !13092, !llvm.loop !13103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13105 {
  tail call void @arch_cpu_idle() #27, !dbg !13106
  ret void, !dbg !13107
}

; Function Attrs: optsize
declare !dbg !13108 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13127, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* %1, metadata !13128, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %2, metadata !13129, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %3, metadata !13130, metadata !DIExpression()), !dbg !13131
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13132
  store i32 %2, i32* %5, align 4, !dbg !13133
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13134
  store i32 %3, i32* %6, align 4, !dbg !13135
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13136
  store i8* %1, i8** %7, align 4, !dbg !13137
  %8 = mul i32 %3, %2, !dbg !13138
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13139
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13140
  store i8* %9, i8** %10, align 4, !dbg !13141
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13142
  store i8* %1, i8** %11, align 4, !dbg !13143
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13144
  store i8* %1, i8** %12, align 4, !dbg !13145
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13146
  store i32 0, i32* %13, align 4, !dbg !13147
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13148
  store i8 0, i8* %14, align 4, !dbg !13149
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13150
  tail call fastcc void @z_waitq_init.126(%struct._wait_q_t* noundef %15) #26, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.126(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13153 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13157, metadata !DIExpression()), !dbg !13158
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13159
  tail call fastcc void @sys_dlist_init.127(%struct._dnode* noundef %2) #26, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.127(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13167, metadata !DIExpression()), !dbg !13168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13169
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13170
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13171
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13172
  ret void, !dbg !13173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13174 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13178, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 %1, metadata !13179, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 %2, metadata !13180, metadata !DIExpression()), !dbg !13184
  %5 = bitcast i32* %4 to i8*, !dbg !13185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13185
  call void @llvm.dbg.value(metadata i32* %4, metadata !13183, metadata !DIExpression(DW_OP_deref)), !dbg !13184
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13186
  br i1 %6, label %13, label %7, !dbg !13188

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %8, metadata !13183, metadata !DIExpression()), !dbg !13184
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13191
  call void @llvm.dbg.value(metadata i8* %9, metadata !13181, metadata !DIExpression()), !dbg !13184
  %10 = icmp eq i8* %9, null, !dbg !13192
  br i1 %10, label %13, label %11, !dbg !13194

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13195
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13197
  store i8 1, i8* %12, align 4, !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13182, metadata !DIExpression()), !dbg !13184
  br label %13, !dbg !13199

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13200
  call void @llvm.dbg.value(metadata i32 %14, metadata !13182, metadata !DIExpression()), !dbg !13184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13201
  ret i32 %14, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13208, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 %1, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32* %2, metadata !13210, metadata !DIExpression()), !dbg !13211
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13212
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13212
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13212
  store i32 %6, i32* %2, align 4, !dbg !13212
  ret i1 %5, !dbg !13213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13218, metadata !DIExpression()), !dbg !13219
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13220
  ret i8* %2, !dbg !13221
}

; Function Attrs: optsize
declare !dbg !13222 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13225 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13229, metadata !DIExpression()), !dbg !13230
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13231
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13231
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13231
  br i1 %4, label %5, label %15, !dbg !13233

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13234
  %7 = load i8, i8* %6, align 4, !dbg !13234
  %8 = and i8 %7, 1, !dbg !13236
  %9 = icmp eq i8 %8, 0, !dbg !13237
  br i1 %9, label %15, label %10, !dbg !13238

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13239
  %12 = load i8*, i8** %11, align 4, !dbg !13239
  tail call void @k_free(i8* noundef %12) #27, !dbg !13241
  %13 = load i8, i8* %6, align 4, !dbg !13242
  %14 = and i8 %13, -2, !dbg !13242
  store i8 %14, i8* %6, align 4, !dbg !13242
  br label %15, !dbg !13243

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13230
  ret i32 %16, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13249, metadata !DIExpression()), !dbg !13250
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13251
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13252
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13253
  ret %struct.k_thread* %4, !dbg !13254
}

; Function Attrs: optsize
declare !dbg !13255 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13260, metadata !DIExpression()), !dbg !13261
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13262
  br i1 %2, label %6, label %3, !dbg !13262

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13263
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13263
  br label %6, !dbg !13262

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13262
  ret %struct._dnode* %7, !dbg !13264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13265 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13269, metadata !DIExpression()), !dbg !13270
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13271
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13271
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13272
  ret i1 %4, !dbg !13273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13284, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13282, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i8* %1, metadata !13283, metadata !DIExpression()), !dbg !13292
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13301
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13303, !srcloc !13309
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %6, metadata !13306, metadata !DIExpression()) #25, !dbg !13310
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %6, metadata !13300, metadata !DIExpression()) #25, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %6, metadata !13286, metadata !DIExpression()), !dbg !13292
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13311
  %8 = load i32, i32* %7, align 4, !dbg !13311
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13313
  %10 = load i32, i32* %9, align 4, !dbg !13313
  %11 = icmp ult i32 %8, %10, !dbg !13314
  br i1 %11, label %12, label %42, !dbg !13315

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13316
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13285, metadata !DIExpression()), !dbg !13292
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13319
  br i1 %15, label %24, label %16, !dbg !13321

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13322
  %18 = load i8*, i8** %17, align 4, !dbg !13322
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13324
  %20 = load i32, i32* %19, align 4, !dbg !13324
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13326, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata i32 0, metadata !13331, metadata !DIExpression()), !dbg !13332
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13334
  store i32 0, i32* %22, align 4, !dbg !13335
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !13336
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13337
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !13337
  br label %53, !dbg !13338

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13339
  %26 = load i8*, i8** %25, align 4, !dbg !13339
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13341
  %28 = load i32, i32* %27, align 4, !dbg !13341
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !13342
  %30 = load i32, i32* %27, align 4, !dbg !13343
  %31 = load i8*, i8** %25, align 4, !dbg !13344
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13344
  store i8* %32, i8** %25, align 4, !dbg !13344
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13345
  %34 = load i8*, i8** %33, align 4, !dbg !13345
  %35 = icmp eq i8* %32, %34, !dbg !13347
  br i1 %35, label %36, label %39, !dbg !13348

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13349
  %38 = load i8*, i8** %37, align 4, !dbg !13349
  store i8* %38, i8** %25, align 4, !dbg !13351
  br label %39, !dbg !13352

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13353
  %41 = add i32 %40, 1, !dbg !13353
  store i32 %41, i32* %7, align 4, !dbg !13353
  call void @llvm.dbg.value(metadata i32 0, metadata !13291, metadata !DIExpression()), !dbg !13292
  br label %51, !dbg !13354

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13284, metadata !DIExpression()), !dbg !13292
  %44 = icmp eq i64 %43, 0, !dbg !13355
  br i1 %44, label %51, label %45, !dbg !13357

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13358
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13360
  store i8* %1, i8** %47, align 4, !dbg !13361
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13362
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13363
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %50, metadata !13291, metadata !DIExpression()), !dbg !13292
  br label %53, !dbg !13364

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13365
  call void @llvm.dbg.value(metadata i32 %52, metadata !13291, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 %6, metadata !13366, metadata !DIExpression()) #25, !dbg !13372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %6, metadata !13374, metadata !DIExpression()) #25, !dbg !13377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13379, !srcloc !13380
  br label %53, !dbg !13381

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13292
  ret i32 %54, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13383 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13393, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13394, metadata !DIExpression()), !dbg !13395
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13396
  %4 = load i32, i32* %3, align 4, !dbg !13396
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13397
  store i32 %4, i32* %5, align 4, !dbg !13398
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13399
  %7 = load i32, i32* %6, align 4, !dbg !13399
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13400
  store i32 %7, i32* %8, align 4, !dbg !13401
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13402
  %10 = load i32, i32* %9, align 4, !dbg !13402
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13403
  store i32 %10, i32* %11, align 4, !dbg !13404
  ret void, !dbg !13405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13406 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13410, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i8* %1, metadata !13411, metadata !DIExpression()), !dbg !13416
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13418
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13420, !srcloc !13309
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %6, metadata !13306, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %6, metadata !13300, metadata !DIExpression()) #25, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %6, metadata !13413, metadata !DIExpression()), !dbg !13416
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13423
  %8 = load i32, i32* %7, align 4, !dbg !13423
  %9 = icmp eq i32 %8, 0, !dbg !13425
  br i1 %9, label %51, label %10, !dbg !13426

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13427
  %12 = load i8*, i8** %11, align 4, !dbg !13427
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13429
  %14 = load i32, i32* %13, align 4, !dbg !13429
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !13430
  %16 = load i32, i32* %13, align 4, !dbg !13431
  %17 = load i8*, i8** %11, align 4, !dbg !13432
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13432
  store i8* %18, i8** %11, align 4, !dbg !13432
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13433
  %20 = load i8*, i8** %19, align 4, !dbg !13433
  %21 = icmp eq i8* %18, %20, !dbg !13435
  br i1 %21, label %22, label %25, !dbg !13436

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13437
  %24 = load i8*, i8** %23, align 4, !dbg !13437
  store i8* %24, i8** %11, align 4, !dbg !13439
  br label %25, !dbg !13440

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13441
  %27 = add i32 %26, -1, !dbg !13441
  store i32 %27, i32* %7, align 4, !dbg !13441
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13442
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13414, metadata !DIExpression()), !dbg !13416
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13444
  br i1 %30, label %60, label %31, !dbg !13446

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13447
  %33 = load i8*, i8** %32, align 4, !dbg !13447
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13449
  %35 = load i8*, i8** %34, align 4, !dbg !13449
  %36 = load i32, i32* %13, align 4, !dbg !13450
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !13451
  %38 = load i32, i32* %13, align 4, !dbg !13452
  %39 = load i8*, i8** %32, align 4, !dbg !13453
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13453
  store i8* %40, i8** %32, align 4, !dbg !13453
  %41 = load i8*, i8** %19, align 4, !dbg !13454
  %42 = icmp eq i8* %40, %41, !dbg !13456
  br i1 %42, label %43, label %46, !dbg !13457

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13458
  %45 = load i8*, i8** %44, align 4, !dbg !13458
  store i8* %45, i8** %32, align 4, !dbg !13460
  br label %46, !dbg !13461

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13462
  %48 = add i32 %47, 1, !dbg !13462
  store i32 %48, i32* %7, align 4, !dbg !13462
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13326, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.value(metadata i32 0, metadata !13331, metadata !DIExpression()), !dbg !13463
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13465
  store i32 0, i32* %49, align 4, !dbg !13466
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !13467
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13468
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !13468
  br label %62, !dbg !13469

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13412, metadata !DIExpression()), !dbg !13416
  %53 = icmp eq i64 %52, 0, !dbg !13470
  br i1 %53, label %60, label %54, !dbg !13472

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13473
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13475
  store i8* %1, i8** %56, align 4, !dbg !13476
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13477
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13478
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !13478
  call void @llvm.dbg.value(metadata i32 %59, metadata !13415, metadata !DIExpression()), !dbg !13416
  br label %62, !dbg !13479

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13480
  call void @llvm.dbg.value(metadata i32 %61, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 %6, metadata !13366, metadata !DIExpression()) #25, !dbg !13481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13481
  call void @llvm.dbg.value(metadata i32 %6, metadata !13374, metadata !DIExpression()) #25, !dbg !13483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13485, !srcloc !13380
  br label %62, !dbg !13486

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13416
  ret i32 %63, !dbg !13487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13492, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i8* %1, metadata !13493, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13497
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13499, !srcloc !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13300, metadata !DIExpression()) #25, !dbg !13497
  call void @llvm.dbg.value(metadata i32 undef, metadata !13494, metadata !DIExpression()), !dbg !13496
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13502
  %5 = load i32, i32* %4, align 4, !dbg !13502
  %6 = icmp eq i32 %5, 0, !dbg !13504
  br i1 %6, label %13, label %7, !dbg !13505

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13506
  %9 = load i8*, i8** %8, align 4, !dbg !13506
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13508
  %11 = load i32, i32* %10, align 4, !dbg !13508
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !13509
  call void @llvm.dbg.value(metadata i32 0, metadata !13495, metadata !DIExpression()), !dbg !13496
  br label %13, !dbg !13510

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13511
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %15, metadata !13306, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 %15, metadata !13300, metadata !DIExpression()) #25, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %15, metadata !13494, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i32 %14, metadata !13495, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i32 undef, metadata !13366, metadata !DIExpression()) #25, !dbg !13512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13374, metadata !DIExpression()) #25, !dbg !13514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !13516, !srcloc !13380
  ret i32 %14, !dbg !13517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13518 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13522, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13526
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13528, !srcloc !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13300, metadata !DIExpression()) #25, !dbg !13526
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()), !dbg !13525
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13531
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13524, metadata !DIExpression()), !dbg !13525
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13532
  br i1 %5, label %11, label %6, !dbg !13533

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13326, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.value(metadata i32 -35, metadata !13331, metadata !DIExpression()), !dbg !13534
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13537
  store i32 -35, i32* %8, align 4, !dbg !13538
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !13539
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13531
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13524, metadata !DIExpression()), !dbg !13525
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13532
  br i1 %10, label %11, label %6, !dbg !13533, !llvm.loop !13540

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13528
  call void @llvm.dbg.value(metadata i32 %12, metadata !13306, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 %12, metadata !13300, metadata !DIExpression()) #25, !dbg !13526
  call void @llvm.dbg.value(metadata i32 %12, metadata !13523, metadata !DIExpression()), !dbg !13525
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13542
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13543
  store i32 0, i32* %14, align 4, !dbg !13544
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13545
  %16 = load i8*, i8** %15, align 4, !dbg !13545
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13546
  store i8* %16, i8** %17, align 4, !dbg !13547
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13548
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !13548
  ret void, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13554, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13555, metadata !DIExpression()), !dbg !13558
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13559
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13559
  %5 = load i8, i8* %4, align 2, !dbg !13559
  call void @llvm.dbg.value(metadata i8 %5, metadata !13556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13558
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13560
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13560
  %8 = load i8, i8* %7, align 2, !dbg !13560
  call void @llvm.dbg.value(metadata i8 %8, metadata !13557, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13558
  %9 = icmp eq i8 %8, %5, !dbg !13561
  %10 = sext i8 %5 to i32, !dbg !13563
  %11 = sext i8 %8 to i32, !dbg !13563
  %12 = sub nsw i32 %11, %10, !dbg !13563
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13563
  ret i32 %13, !dbg !13564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13569, metadata !DIExpression()), !dbg !13570
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13571
  %3 = icmp eq i32 %2, 0, !dbg !13573
  br i1 %3, label %8, label %4, !dbg !13574

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13575
  %6 = add i32 %5, %2, !dbg !13577
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13578
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13579
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13580
  br label %8, !dbg !13581

8:                                                ; preds = %4, %1
  ret void, !dbg !13582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13587, metadata !DIExpression()), !dbg !13589
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %1, metadata !13588, metadata !DIExpression()), !dbg !13589
  ret i32 %1, !dbg !13591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13596, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 %1, metadata !13597, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 0, metadata !13598, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !13614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13616, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13616
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !13614
  call void @llvm.dbg.value(metadata i32 %4, metadata !13604, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()), !dbg !13606
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13624
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13627
  %6 = icmp sgt i32 %0, 0, !dbg !13628
  %7 = icmp sgt i32 %5, 2, !dbg !13630
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13630
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13630
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13631
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13632
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !13640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !13645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !13647, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !13598, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()), !dbg !13606
  ret void, !dbg !13649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata i32 %0, metadata !13654, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i32 1000, metadata !13657, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 10000, metadata !13658, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i1 false, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  %2 = mul i32 %0, 10, !dbg !13671
  ret i32 %2, !dbg !13677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13680, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !13683
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13685, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13685
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !13687
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !13683
  call void @llvm.dbg.value(metadata i32 %3, metadata !13681, metadata !DIExpression()), !dbg !13682
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13688
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13690
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13691
  br i1 %6, label %7, label %8, !dbg !13692

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13693
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !13697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !13699, !srcloc !13648
  br label %24, !dbg !13700

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13701
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13702
  %10 = icmp eq i32 %9, 0, !dbg !13702
  br i1 %10, label %21, label %11, !dbg !13704

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13705
  br i1 %12, label %13, label %21, !dbg !13706

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13707
  %15 = icmp sgt i32 %14, %0, !dbg !13710
  br i1 %15, label %19, label %16, !dbg !13711

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13712
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13712
  call void @llvm.dbg.value(metadata i32 %18, metadata !13681, metadata !DIExpression()), !dbg !13682
  br label %22, !dbg !13714

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13715
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13715
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13717
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13682
  call void @llvm.dbg.value(metadata i32 %23, metadata !13681, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata i32 %23, metadata !13634, metadata !DIExpression()) #25, !dbg !13719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13719
  call void @llvm.dbg.value(metadata i32 %23, metadata !13642, metadata !DIExpression()) #25, !dbg !13721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !13723, !srcloc !13648
  br label %24, !dbg !13724

24:                                               ; preds = %22, %7
  ret void, !dbg !13724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13729, metadata !DIExpression()), !dbg !13731
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13732
  %3 = icmp eq i32 %2, 0, !dbg !13732
  br i1 %3, label %16, label %4, !dbg !13733

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13734
  br i1 %5, label %16, label %6, !dbg !13735

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13736
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13736
  %9 = load i8, i8* %8, align 2, !dbg !13736
  %10 = sext i8 %9 to i32, !dbg !13737
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13738
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13739
  br i1 %12, label %16, label %13, !dbg !13740

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13741
  %15 = xor i1 %14, true, !dbg !13742
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13731
  call void @llvm.dbg.value(metadata i1 %17, metadata !13730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13731
  ret i1 %17, !dbg !13743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13744 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13748, metadata !DIExpression()), !dbg !13750
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13749, metadata !DIExpression()), !dbg !13750
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13752
  br i1 %3, label %5, label %4, !dbg !13754

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13755
  br label %5, !dbg !13757

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13748, metadata !DIExpression()), !dbg !13750
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13758
  ret i32 %6, !dbg !13759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13762, metadata !DIExpression()), !dbg !13764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13765
  %3 = load i8, i8* %2, align 1, !dbg !13765
  call void @llvm.dbg.value(metadata i8 %3, metadata !13763, metadata !DIExpression()), !dbg !13764
  %4 = and i8 %3, 31, !dbg !13766
  %5 = icmp ne i8 %4, 0, !dbg !13767
  ret i1 %5, !dbg !13768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13771, metadata !DIExpression()), !dbg !13772
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13773
  br i1 %2, label %3, label %7, !dbg !13775

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !13779
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13782
  %5 = load i8, i8* %4, align 1, !dbg !13783
  %6 = and i8 %5, 127, !dbg !13783
  store i8 %6, i8* %4, align 1, !dbg !13783
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !13787
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !13791
  br label %7, !dbg !13792

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !13796
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13798
  %9 = load i8, i8* %8, align 1, !dbg !13799
  %10 = or i8 %9, -128, !dbg !13799
  store i8 %10, i8* %8, align 1, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !13803
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !13815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !13815
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13817
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13819
  br i1 %12, label %23, label %13, !dbg !13817

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13821
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !13822
  %17 = icmp sgt i32 %16, 0, !dbg !13825
  br i1 %17, label %18, label %20, !dbg !13826

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13827
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !13829
  br label %25, !dbg !13830

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !13819
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13819
  br i1 %22, label %23, label %13, !dbg !13817, !llvm.loop !13831

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13833
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !13834
  br label %25, !dbg !13835

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13836
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13837
  %28 = zext i1 %27 to i32, !dbg !13837
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13838
  ret void, !dbg !13839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13842, metadata !DIExpression()), !dbg !13843
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13844
  ret i1 %2, !dbg !13845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13846 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13848, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13849, metadata !DIExpression()), !dbg !13850
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13851
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13852
  ret void, !dbg !13853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.133(%struct._dnode* noundef %0) #26, !dbg !13860
  br i1 %2, label %6, label %3, !dbg !13860

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13861
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13861
  br label %6, !dbg !13860

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13860
  ret %struct._dnode* %7, !dbg !13862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13863 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13867, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13868, metadata !DIExpression()), !dbg !13871
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13872
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13872
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13869, metadata !DIExpression()), !dbg !13871
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13873
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13874
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13875
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13876
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13877
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13878
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13885, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13886, metadata !DIExpression()), !dbg !13887
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13888
  br i1 %3, label %6, label %4, !dbg !13889

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13890
  br label %6, !dbg !13889

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13889
  ret %struct._dnode* %7, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13896, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13897, metadata !DIExpression()), !dbg !13899
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13900
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13900
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13898, metadata !DIExpression()), !dbg !13899
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13901
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13902
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13903
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13904
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13905
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13906
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13907
  ret void, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13911, metadata !DIExpression()), !dbg !13913
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13914
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13921, metadata !DIExpression()) #25, !dbg !13923
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13924
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13925
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13912, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13926, metadata !DIExpression()) #25, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %0, metadata !13931, metadata !DIExpression()) #25, !dbg !13932
  %6 = icmp eq i32 %0, 0, !dbg !13935
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13937
  br i1 %6, label %8, label %15, !dbg !13938

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !13939
  br i1 %9, label %15, label %10, !dbg !13941

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !13942
  br i1 %11, label %15, label %12, !dbg !13944

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !13945
  %14 = icmp eq i32 %13, 0, !dbg !13945
  br i1 %14, label %18, label %15, !dbg !13947

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13948
  br i1 %16, label %18, label %17, !dbg !13951

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13952
  br label %18, !dbg !13954

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13937
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13937
  ret void, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13960, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13961, metadata !DIExpression()), !dbg !13963
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %0) #26, !dbg !13964
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13962, metadata !DIExpression()), !dbg !13963
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13961, metadata !DIExpression()), !dbg !13963
  ret %struct.k_thread* %3, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13968, metadata !DIExpression()), !dbg !13969
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13970
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13971
  %4 = xor i1 %3, true, !dbg !13972
  ret i1 %4, !dbg !13973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13976, metadata !DIExpression()), !dbg !13977
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13978
  %3 = load i16, i16* %2, align 2, !dbg !13978
  %4 = icmp ult i16 %3, 128, !dbg !13979
  %5 = zext i1 %4 to i32, !dbg !13979
  ret i32 %5, !dbg !13980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13981 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13989
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13990
  %4 = xor i1 %3, true, !dbg !13991
  ret i1 %4, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13999, metadata !DIExpression()), !dbg !14000
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14001
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14001
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14002
  ret i1 %4, !dbg !14003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14006, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14007, metadata !DIExpression()), !dbg !14008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14009
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14009
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14010
  br i1 %5, label %9, label %6, !dbg !14011

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14012
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14012
  br label %9, !dbg !14011

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14011
  ret %struct._dnode* %10, !dbg !14013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.133(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14018, metadata !DIExpression()), !dbg !14019
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14020
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14020
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14021
  ret i1 %4, !dbg !14022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14023 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14027, metadata !DIExpression()), !dbg !14030
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14031
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14031
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14028, metadata !DIExpression()), !dbg !14030
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14032
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14032
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14029, metadata !DIExpression()), !dbg !14030
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14033
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14034
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14035
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14036
  tail call fastcc void @sys_dnode_init.134(%struct._dnode* noundef %0) #26, !dbg !14037
  ret void, !dbg !14038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.134(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14043
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14044
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14045
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14046
  ret void, !dbg !14047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14052, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 128, metadata !14053, metadata !DIExpression()), !dbg !14054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14055
  %3 = load i8, i8* %2, align 1, !dbg !14055
  %4 = icmp slt i8 %3, 0, !dbg !14056
  ret i1 %4, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32 %1, metadata !14063, metadata !DIExpression()), !dbg !14064
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14065
  ret i1 %3, !dbg !14066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14071
  ret i1 %2, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %1, metadata !14076, metadata !DIExpression()), !dbg !14077
  %3 = icmp slt i32 %0, %1, !dbg !14078
  ret i1 %3, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 0, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14088
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14090, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14088
  call void @llvm.dbg.value(metadata i32 %3, metadata !14085, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14083, metadata !DIExpression()), !dbg !14087
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14102, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14083, metadata !DIExpression()), !dbg !14087
  ret void, !dbg !14103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14106, metadata !DIExpression()), !dbg !14107
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14108
  br i1 %2, label %24, label %3, !dbg !14110

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14111
  br i1 %4, label %5, label %24, !dbg !14112

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !14113
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14116
  %7 = load i8, i8* %6, align 1, !dbg !14117
  %8 = or i8 %7, -128, !dbg !14117
  store i8 %8, i8* %6, align 1, !dbg !14117
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !14118
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14120
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14122
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14123
  br i1 %10, label %21, label %11, !dbg !14122

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14125
  %15 = icmp sgt i32 %14, 0, !dbg !14126
  br i1 %15, label %16, label %18, !dbg !14127

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14128
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14129
  br label %23, !dbg !14130

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14123
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14123
  br i1 %20, label %21, label %11, !dbg !14122, !llvm.loop !14131

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14133
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14134
  br label %23, !dbg !14135

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14136
  br label %24, !dbg !14137

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14143
  br i1 %2, label %6, label %3, !dbg !14144

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14145
  %5 = xor i1 %4, true, !dbg !14144
  br label %6, !dbg !14144

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14149, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.value(metadata i32 0, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14155
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14157, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %3, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 undef, metadata !14150, metadata !DIExpression()), !dbg !14154
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14160
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14167, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 undef, metadata !14150, metadata !DIExpression()), !dbg !14154
  ret void, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14171, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14174
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14176, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14176
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14178
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %3, metadata !14172, metadata !DIExpression()), !dbg !14173
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14179
  br i1 %4, label %5, label %6, !dbg !14181

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14187, !srcloc !13648
  br label %8, !dbg !14188

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef %0) #26, !dbg !14189
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14190
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14191
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14191
  br label %8, !dbg !14192

8:                                                ; preds = %6, %5
  ret void, !dbg !14192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14195, metadata !DIExpression()), !dbg !14196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14197
  %3 = load i8, i8* %2, align 1, !dbg !14197
  %4 = and i8 %3, 4, !dbg !14198
  %5 = icmp eq i8 %4, 0, !dbg !14199
  ret i1 %5, !dbg !14200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.139(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14203, metadata !DIExpression()), !dbg !14204
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14205
  %3 = load i8, i8* %2, align 1, !dbg !14206
  %4 = and i8 %3, -5, !dbg !14206
  store i8 %4, i8* %2, align 1, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14208 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14210, metadata !DIExpression()), !dbg !14212
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14213
  br i1 %4, label %5, label %9, !dbg !14215

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14216
  br i1 %6, label %7, label %9, !dbg !14217

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14218, metadata !DIExpression()) #25, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !14224
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14227
  br label %10, !dbg !14228

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14234, !srcloc !13648
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i32 %0, metadata !14242, metadata !DIExpression()), !dbg !14247
  %2 = icmp eq i32 %0, 0, !dbg !14249
  br i1 %2, label %3, label %6, !dbg !14250

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14251, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %4, metadata !14254, metadata !DIExpression()) #25, !dbg !14259
  %5 = icmp eq i32 %4, 0, !dbg !14260
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14241
  ret i1 %7, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14262 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14265
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14264, metadata !DIExpression()), !dbg !14266
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14267
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14268
  ret i1 %3, !dbg !14269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14272, metadata !DIExpression()), !dbg !14274
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14275
  call void @llvm.dbg.value(metadata i32 %2, metadata !14273, metadata !DIExpression()), !dbg !14274
  ret i32 %2, !dbg !14276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14279, metadata !DIExpression()), !dbg !14283
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14284
  call void @llvm.dbg.value(metadata i32 0, metadata !14280, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14286
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14288, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %4, metadata !14282, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14280, metadata !DIExpression()), !dbg !14285
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14291
  br i1 %5, label %6, label %10, !dbg !14295

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14296
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14299
  %8 = load i8, i8* %7, align 1, !dbg !14300
  %9 = and i8 %8, 127, !dbg !14300
  store i8 %9, i8* %7, align 1, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14301
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14303
  br label %10, !dbg !14304

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14305
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14306
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14307
  %13 = zext i1 %12 to i32, !dbg !14307
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14308
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !14309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !14311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14313, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14280, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14280, metadata !DIExpression()), !dbg !14285
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14314
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14316
  br i1 %15, label %16, label %17, !dbg !14317

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14318
  br label %17, !dbg !14320

17:                                               ; preds = %16, %10
  ret void, !dbg !14321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14326
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14327
  ret i32 %3, !dbg !14328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14333
  %3 = load i8, i8* %2, align 1, !dbg !14334
  %4 = or i8 %3, 16, !dbg !14334
  store i8 %4, i8* %2, align 1, !dbg !14334
  ret void, !dbg !14335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14336 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14337, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14337
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14339
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14340
  ret void, !dbg !14341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14346
  br i1 %2, label %3, label %5, !dbg !14348

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14349
  br label %6, !dbg !14351

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13642, metadata !DIExpression()) #25, !dbg !14352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14355, !srcloc !13648
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14364, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %3, metadata !14360, metadata !DIExpression()), !dbg !14361
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14367
  br i1 %4, label %6, label %5, !dbg !14369

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14375, !srcloc !13648
  br label %8, !dbg !14376

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14377
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14378
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14379
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14379
  br label %8, !dbg !14380

8:                                                ; preds = %6, %5
  ret void, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14384
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14385
  %3 = load i8, i8* %2, align 1, !dbg !14385
  %4 = and i8 %3, 16, !dbg !14386
  %5 = icmp ne i8 %4, 0, !dbg !14387
  ret i1 %5, !dbg !14388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14391, metadata !DIExpression()), !dbg !14392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14393
  %3 = load i8, i8* %2, align 1, !dbg !14394
  %4 = and i8 %3, -17, !dbg !14394
  store i8 %4, i8* %2, align 1, !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14396 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14406, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14404, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14405, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 0, metadata !14407, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14412
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14414, !srcloc !13622
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14414
  call void @llvm.dbg.value(metadata i32 %5, metadata !13619, metadata !DIExpression()) #25, !dbg !14416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14416
  call void @llvm.dbg.value(metadata i32 %5, metadata !13613, metadata !DIExpression()) #25, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %5, metadata !14409, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()), !dbg !14411
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14417
  call void @llvm.dbg.value(metadata i32 %5, metadata !13634, metadata !DIExpression()) #25, !dbg !14420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14420
  call void @llvm.dbg.value(metadata i32 %5, metadata !13642, metadata !DIExpression()) #25, !dbg !14422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14424, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14407, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()), !dbg !14411
  ret void, !dbg !14425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14426 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14430, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14428, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14429, metadata !DIExpression()), !dbg !14431
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14432
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14433
  ret void, !dbg !14434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14440, metadata !DIExpression()), !dbg !14441
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14442
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14443
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14444
  br i1 %3, label %21, label %4, !dbg !14446

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14447
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14449
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14450
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13807, metadata !DIExpression()) #25, !dbg !14451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14451
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef nonnull %6) #27, !dbg !14453
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14454
  br i1 %8, label %19, label %9, !dbg !14453

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !14456
  %13 = icmp sgt i32 %12, 0, !dbg !14457
  br i1 %13, label %14, label %16, !dbg !14458

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14459
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !14460
  br label %21, !dbg !14461

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !14454
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14454
  br i1 %18, label %19, label %9, !dbg !14453, !llvm.loop !14462

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14464
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !14465
  br label %21, !dbg !14466

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14468 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14473, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14472, metadata !DIExpression()), !dbg !14474
  %4 = icmp eq i64 %3, -1, !dbg !14475
  br i1 %4, label %6, label %5, !dbg !14477

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14478
  br label %6, !dbg !14480

6:                                                ; preds = %5, %2
  ret void, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14485, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14486
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14487
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14492, metadata !DIExpression()), !dbg !14500
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14501
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14493, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 0, metadata !14494, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14503
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14505, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14494, metadata !DIExpression()), !dbg !14502
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14508
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14509
  %7 = load i8, i8* %6, align 1, !dbg !14509
  %8 = and i8 %7, 40, !dbg !14510
  %9 = icmp eq i8 %8, 0, !dbg !14510
  call void @llvm.dbg.value(metadata i1 %9, metadata !14497, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  br i1 %9, label %10, label %17, !dbg !14512

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14513
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14513
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14513
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14517
  br i1 %14, label %16, label %15, !dbg !14518

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14519
  br label %16, !dbg !14521

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef nonnull %3) #26, !dbg !14522
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14523
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14524
  br label %17, !dbg !14525

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14505
  call void @llvm.dbg.value(metadata i32 %18, metadata !13619, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 %18, metadata !13613, metadata !DIExpression()) #25, !dbg !14503
  call void @llvm.dbg.value(metadata i32 %18, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14526
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14530, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14494, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14494, metadata !DIExpression()), !dbg !14502
  ret void, !dbg !14531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14534, metadata !DIExpression()), !dbg !14535
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14536
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14538
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14539
  ret void, !dbg !14540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14543, metadata !DIExpression()), !dbg !14544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14545
  %3 = load i8, i8* %2, align 1, !dbg !14546
  %4 = and i8 %3, -3, !dbg !14546
  store i8 %4, i8* %2, align 1, !dbg !14546
  ret void, !dbg !14547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14551
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14552
  br i1 %2, label %3, label %7, !dbg !14554

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14555
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14558
  %5 = load i8, i8* %4, align 1, !dbg !14559
  %6 = and i8 %5, 127, !dbg !14559
  store i8 %6, i8* %4, align 1, !dbg !14559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14560
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14562
  br label %7, !dbg !14563

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14564
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14565
  %10 = zext i1 %9 to i32, !dbg !14565
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14566
  ret void, !dbg !14567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()), !dbg !14571
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14572
  %3 = load i8, i8* %2, align 1, !dbg !14573
  %4 = or i8 %3, 2, !dbg !14573
  store i8 %4, i8* %2, align 1, !dbg !14573
  ret void, !dbg !14574
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !14575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14585, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14587
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14583
  call void @llvm.dbg.value(metadata i32 %3, metadata !14580, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()), !dbg !14582
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14595, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14578, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()), !dbg !14582
  ret void, !dbg !14596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14597 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14603, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 %0, metadata !14601, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14602, metadata !DIExpression()), !dbg !14608
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14609
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14610
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14611
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14612
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %6, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14615
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14617, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14614
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14620
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14624
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14625
  br i1 %10, label %11, label %12, !dbg !14626

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14627
  br label %12, !dbg !14629

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %13, metadata !13619, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %13, metadata !13613, metadata !DIExpression()) #25, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %13, metadata !14607, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !14634, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14605, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14614
  ret i32 %6, !dbg !14635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14636 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14641, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata i64 undef, metadata !14643, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14640, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14642, metadata !DIExpression()), !dbg !14644
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14645
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14647
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14649, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14647
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14652
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !14653
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14218, metadata !DIExpression()) #25, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !14654
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !14656
  ret i32 %9, !dbg !14657
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14662, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 0, metadata !14664, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14671, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14664, metadata !DIExpression()), !dbg !14668
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14663, metadata !DIExpression()), !dbg !14667
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14677
  br i1 %5, label %7, label %6, !dbg !14679

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14680
  br label %7, !dbg !14682

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14671
  call void @llvm.dbg.value(metadata i32 %8, metadata !13619, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %8, metadata !13613, metadata !DIExpression()) #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %8, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14687, !srcloc !13648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14664, metadata !DIExpression()), !dbg !14668
  ret %struct.k_thread* %4, !dbg !14688
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14691, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14698
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14700, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14697
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14703
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14692, metadata !DIExpression()), !dbg !14696
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14706
  br i1 %5, label %8, label %6, !dbg !14708

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14709
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14711
  br label %8, !dbg !14712

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %9, metadata !13619, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %9, metadata !13613, metadata !DIExpression()) #25, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %9, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14717, !srcloc !13648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14697
  ret %struct.k_thread* %4, !dbg !14718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14721, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()) #25, !dbg !14723
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14726
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14728, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14730
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14730
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14726
  call void @llvm.dbg.value(metadata i32 %3, metadata !14580, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14736, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14741, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 %1, metadata !14742, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i8 0, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 0, metadata !14744, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14749
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14751, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i8 poison, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()), !dbg !14748
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14754
  call void @llvm.dbg.value(metadata i1 %6, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14747
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14757

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14758
  %11 = load i8, i8* %4, align 1, !dbg !14764
  %12 = and i8 %11, 127, !dbg !14764
  store i8 %12, i8* %4, align 1, !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14765
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14767
  store i8 %9, i8* %8, align 2, !dbg !14768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !14769
  %13 = load i8, i8* %4, align 1, !dbg !14771
  %14 = or i8 %13, -128, !dbg !14771
  store i8 %14, i8* %4, align 1, !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !14772
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !14774
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14774
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14776
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14777
  br i1 %16, label %26, label %17, !dbg !14776

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !14779
  %21 = icmp sgt i32 %20, 0, !dbg !14780
  br i1 %21, label %22, label %23, !dbg !14781

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !14782
  br label %27, !dbg !14783

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !14777
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14777
  br i1 %25, label %26, label %17, !dbg !14776, !llvm.loop !14784

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !14786
  br label %27, !dbg !14787

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14788
  br label %29, !dbg !14789

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14790
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %30, metadata !13619, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %30, metadata !13613, metadata !DIExpression()) #25, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %30, metadata !14746, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !14796, !srcloc !13648
  call void @llvm.dbg.value(metadata i8 poison, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()), !dbg !14748
  ret i1 %6, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14802, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %1, metadata !14803, metadata !DIExpression()), !dbg !14805
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14806
  call void @llvm.dbg.value(metadata i1 %3, metadata !14804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14805
  br i1 %3, label %4, label %12, !dbg !14807

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14809
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14810
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14810
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14810
  %9 = load i8, i8* %8, align 1, !dbg !14810
  %10 = icmp eq i8 %9, 0, !dbg !14811
  br i1 %10, label %11, label %12, !dbg !14812

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14813
  br label %12, !dbg !14815

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14819, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14823
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14825, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %2, metadata !14821, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14822
  tail call fastcc void @z_sched_lock() #26, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %2, metadata !13642, metadata !DIExpression()) #25, !dbg !14833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14835, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14819, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14822
  ret void, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14837 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14839
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14839
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14839
  %5 = load i8, i8* %4, align 1, !dbg !14840
  %6 = add i8 %5, -1, !dbg !14840
  store i8 %6, i8* %4, align 1, !dbg !14840
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14841, !srcloc !14843
  ret void, !dbg !14844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14845 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14847, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14851
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14853, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14855
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14851
  call void @llvm.dbg.value(metadata i32 %2, metadata !14849, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14847, metadata !DIExpression()), !dbg !14850
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14856
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14859
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14859
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14859
  %7 = load i8, i8* %6, align 1, !dbg !14860
  %8 = add i8 %7, 1, !dbg !14860
  store i8 %8, i8* %6, align 1, !dbg !14860
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #25, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14862
  call void @llvm.dbg.value(metadata i32 %2, metadata !13642, metadata !DIExpression()) #25, !dbg !14864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14866, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14847, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14847, metadata !DIExpression()), !dbg !14850
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14867
  ret void, !dbg !14868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14869 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14870
  ret %struct.k_thread* %1, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14872 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14876, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14877, metadata !DIExpression()), !dbg !14881
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14878, metadata !DIExpression()), !dbg !14881
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14879, metadata !DIExpression()), !dbg !14881
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14884
  call void @llvm.dbg.value(metadata i32 %5, metadata !14880, metadata !DIExpression()), !dbg !14881
  %6 = icmp sgt i32 %5, 0, !dbg !14885
  br i1 %6, label %17, label %7, !dbg !14887

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14888
  br i1 %8, label %17, label %9, !dbg !14890

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14891
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14891
  %12 = load i32, i32* %11, align 8, !dbg !14891
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14893
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14893
  %15 = load i32, i32* %14, align 8, !dbg !14893
  %16 = icmp ult i32 %12, %15, !dbg !14894
  br label %17, !dbg !14895

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14896
  ret i1 %18, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14898 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14915, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14916, metadata !DIExpression()), !dbg !14930
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14931
  %5 = load i32, i32* %4, align 4, !dbg !14932
  %6 = add nsw i32 %5, 1, !dbg !14932
  store i32 %6, i32* %4, align 4, !dbg !14932
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14933
  store i32 %5, i32* %7, align 8, !dbg !14934
  %8 = load i32, i32* %4, align 4, !dbg !14935
  %9 = icmp eq i32 %8, 0, !dbg !14936
  br i1 %9, label %10, label %32, !dbg !14937

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14938
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14938
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14918, metadata !DIExpression()), !dbg !14938
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14938
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14938
  %14 = load i32, i32* %13, align 4, !dbg !14938
  %15 = shl i32 %14, 2, !dbg !14938
  %16 = alloca i8, i32 %15, align 8, !dbg !14938
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14938
  store i8* %16, i8** %17, align 4, !dbg !14938
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14938
  %19 = alloca i8, i32 %14, align 8, !dbg !14938
  store i8* %19, i8** %18, align 4, !dbg !14938
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14938
  store i32 -1, i32* %20, align 4, !dbg !14938
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14927, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14917, metadata !DIExpression()), !dbg !14930
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14941
  br i1 %22, label %23, label %24, !dbg !14938

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14941
  br label %32, !dbg !14942

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14917, metadata !DIExpression()), !dbg !14930
  %26 = load i32, i32* %4, align 4, !dbg !14943
  %27 = add nsw i32 %26, 1, !dbg !14943
  store i32 %27, i32* %4, align 4, !dbg !14943
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14945
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14945
  store i32 %26, i32* %29, align 8, !dbg !14946
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14927, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14917, metadata !DIExpression()), !dbg !14930
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14941
  br i1 %31, label %23, label %24, !dbg !14938, !llvm.loop !14947

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14949
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14950
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !14951
  ret void, !dbg !14952
}

; Function Attrs: optsize
declare !dbg !14953 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14958 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14961 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14963, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14964, metadata !DIExpression()), !dbg !14965
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14966
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14967
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !14968
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14969
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14969
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14971
  br i1 %7, label %8, label %10, !dbg !14972

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14973
  store i32 0, i32* %9, align 4, !dbg !14975
  br label %10, !dbg !14976

10:                                               ; preds = %8, %2
  ret void, !dbg !14977
}

; Function Attrs: optsize
declare !dbg !14978 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14979 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14983, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14984, metadata !DIExpression()), !dbg !14986
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14987
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14988
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14985, metadata !DIExpression()), !dbg !14986
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14984, metadata !DIExpression()), !dbg !14986
  ret %struct.k_thread* %4, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !14996
  ret %struct.rbnode* %2, !dbg !14997
}

; Function Attrs: optsize
declare !dbg !14998 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15001 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15011, metadata !DIExpression()), !dbg !15015
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15016
  %3 = load i32, i32* %2, align 4, !dbg !15016
  %4 = icmp eq i32 %3, 0, !dbg !15018
  br i1 %4, label %10, label %5, !dbg !15019

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15012, metadata !DIExpression()), !dbg !15015
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15020, !range !3964
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15021
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15013, metadata !DIExpression()), !dbg !15015
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %7) #26, !dbg !15022
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15014, metadata !DIExpression()), !dbg !15015
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15012, metadata !DIExpression()), !dbg !15015
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15015
  ret %struct.k_thread* %11, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15028, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 0, metadata !15029, metadata !DIExpression()), !dbg !15031
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15030, metadata !DIExpression()), !dbg !15031
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15033
  br i1 %3, label %8, label %4, !dbg !15034

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15035
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15037
  call void @llvm.dbg.value(metadata i32 1, metadata !15029, metadata !DIExpression()), !dbg !15031
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15030, metadata !DIExpression()), !dbg !15031
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15033
  br i1 %7, label %8, label %4, !dbg !15034, !llvm.loop !15038

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15031
  ret i32 %9, !dbg !15040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15041 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15043, metadata !DIExpression()), !dbg !15044
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15045
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %2) #26, !dbg !15046
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15047
  ret %struct.k_thread* %4, !dbg !15048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15049 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15058, metadata !DIExpression()), !dbg !15059
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15060
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef nonnull %2) #26, !dbg !15061
  ret void, !dbg !15062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15063 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15069
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15070
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15071
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15072
  ret void, !dbg !15073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15074 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15075
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15076
  ret void, !dbg !15077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15085
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15085
  %4 = load i8, i8* %3, align 2, !dbg !15085
  %5 = sext i8 %4 to i32, !dbg !15086
  ret i32 %5, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15092, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata i32 %1, metadata !15093, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15094, metadata !DIExpression()), !dbg !15095
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15096
  ret void, !dbg !15097
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15098 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15099
  br i1 %1, label %8, label %2, !dbg !15100

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15101
  br i1 %3, label %8, label %4, !dbg !15102

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15103
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15104
  %7 = xor i1 %6, true, !dbg !15102
  br label %8, !dbg !15102

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15106 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15107, !range !6378
  %2 = icmp eq i8 %1, 0, !dbg !15107
  ret i1 %2, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15112
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15114, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !15111, metadata !DIExpression()), !dbg !15117
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13776, metadata !DIExpression()) #25, !dbg !15121
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15123
  %4 = load i8, i8* %3, align 1, !dbg !15124
  %5 = and i8 %4, 127, !dbg !15124
  store i8 %5, i8* %3, align 1, !dbg !15124
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13784, metadata !DIExpression()) #25, !dbg !15125
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15127
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13793, metadata !DIExpression()) #25, !dbg !15129
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15131
  %8 = load i8, i8* %7, align 1, !dbg !15132
  %9 = or i8 %8, -128, !dbg !15132
  store i8 %9, i8* %7, align 1, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13800, metadata !DIExpression()) #25, !dbg !15133
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !15135
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13813, metadata !DIExpression()) #25, !dbg !15135
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15137
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15138
  br i1 %11, label %22, label %12, !dbg !15137

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15139
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15140
  %16 = icmp sgt i32 %15, 0, !dbg !15141
  br i1 %16, label %17, label %19, !dbg !15142

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15143
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15144
  br label %24, !dbg !15145

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15138
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15138
  br i1 %21, label %22, label %12, !dbg !15137, !llvm.loop !15146

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15148
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15149
  br label %24, !dbg !15150

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %25, metadata !13619, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %25, metadata !13613, metadata !DIExpression()) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %25, metadata !15111, metadata !DIExpression()), !dbg !15117
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14218, metadata !DIExpression()) #25, !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15152
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15154
  ret void, !dbg !15155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15156 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15160, metadata !DIExpression()), !dbg !15163
  %3 = icmp eq i64 %2, -1, !dbg !15164
  br i1 %3, label %4, label %6, !dbg !15166

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15167
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15169
  br label %11, !dbg !15170

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15161, metadata !DIExpression()), !dbg !15163
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15171
  %8 = sext i32 %7 to i64, !dbg !15171
  call void @llvm.dbg.value(metadata i64 %8, metadata !15161, metadata !DIExpression()), !dbg !15163
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15172
  %10 = trunc i64 %9 to i32, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %10, metadata !15162, metadata !DIExpression()), !dbg !15163
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15163
  ret i32 %12, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15178, metadata !DIExpression()), !dbg !15179
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15180, !srcloc !15182
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15183
  ret void, !dbg !15184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15185 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15189, metadata !DIExpression()), !dbg !15193
  %2 = icmp eq i64 %0, 0, !dbg !15194
  br i1 %2, label %3, label %4, !dbg !15196

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15197
  br label %29, !dbg !15199

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15191, metadata !DIExpression()), !dbg !15193
  %5 = icmp sgt i64 %0, -3, !dbg !15200
  br i1 %5, label %6, label %10, !dbg !15202

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15203
  %8 = trunc i64 %0 to i32, !dbg !15205
  %9 = add i32 %7, %8, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %9, metadata !15190, metadata !DIExpression()), !dbg !15193
  br label %13, !dbg !15206

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15207
  %12 = sub i32 -2, %11, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %12, metadata !15190, metadata !DIExpression()), !dbg !15193
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15209
  call void @llvm.dbg.value(metadata i32 %14, metadata !15190, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15210
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15212, !srcloc !13622
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15212
  call void @llvm.dbg.value(metadata i32 %16, metadata !13619, metadata !DIExpression()) #25, !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15214
  call void @llvm.dbg.value(metadata i32 %16, metadata !13613, metadata !DIExpression()) #25, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %16, metadata !15192, metadata !DIExpression()), !dbg !15193
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15215
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15216
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15217
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15218
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15219
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15219
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15220
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %16, metadata !14218, metadata !DIExpression()) #25, !dbg !15222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15222
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15224
  %22 = zext i32 %14 to i64, !dbg !15225
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15226
  %24 = zext i32 %23 to i64, !dbg !15226
  %25 = sub nsw i64 %22, %24, !dbg !15227
  call void @llvm.dbg.value(metadata i64 %25, metadata !15189, metadata !DIExpression()), !dbg !15193
  %26 = icmp sgt i64 %25, 0, !dbg !15228
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15228
  %28 = trunc i64 %27 to i32, !dbg !15228
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15193
  ret i32 %30, !dbg !15229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15230 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15232, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 10000, metadata !13657, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 1000, metadata !13658, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i1 true, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15234
  %2 = udiv i64 %0, 10, !dbg !15236
  ret i64 %2, !dbg !15240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15241 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15242, !srcloc !15244
  tail call void @z_impl_k_yield() #26, !dbg !15245
  ret void, !dbg !15246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15251, metadata !DIExpression()), !dbg !15253
  %2 = sext i32 %0 to i64, !dbg !15254
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15255
  call void @llvm.dbg.value(metadata i64 %3, metadata !15252, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  %4 = shl i64 %3, 32, !dbg !15256
  %5 = ashr exact i64 %4, 32, !dbg !15256
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %6, metadata !15252, metadata !DIExpression()), !dbg !15253
  %7 = sext i32 %6 to i64, !dbg !15258
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15259
  %9 = trunc i64 %8 to i32, !dbg !15259
  ret i32 %9, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15261 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13657, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 10000, metadata !13658, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i1 true, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i1 false, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i1 true, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15265
  %2 = add i64 %0, 99, !dbg !15267
  call void @llvm.dbg.value(metadata i64 %2, metadata !13654, metadata !DIExpression()), !dbg !15265
  %3 = udiv i64 %2, 100, !dbg !15268
  ret i64 %3, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15270 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15272, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 10000, metadata !13657, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13658, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i1 true, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15274
  %2 = mul i64 %0, 100, !dbg !15276
  ret i64 %2, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15283
  br i1 %2, label %14, label %3, !dbg !15285

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15286
  %5 = icmp slt i32 %4, 0, !dbg !15288
  br i1 %5, label %6, label %10, !dbg !15289

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15290
  %8 = load i8, i8* %7, align 1, !dbg !15290
  %9 = icmp eq i8 %8, 16, !dbg !15293
  br i1 %9, label %10, label %14, !dbg !15294

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15295
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15296
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15297, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %11, metadata !14254, metadata !DIExpression()) #25, !dbg !15301
  %12 = icmp eq i32 %11, 0, !dbg !15302
  br i1 %12, label %13, label %14, !dbg !15303

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15304
  br label %14, !dbg !15306

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15310, metadata !DIExpression()), !dbg !15311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15312
  %3 = load i8, i8* %2, align 1, !dbg !15312
  %4 = and i8 %3, 2, !dbg !15313
  %5 = icmp ne i8 %4, 0, !dbg !15314
  ret i1 %5, !dbg !15315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15316 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15320, metadata !DIExpression()), !dbg !15322
  ret %struct.k_thread* %1, !dbg !15323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15324 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15325, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %1, metadata !14254, metadata !DIExpression()) #25, !dbg !15328
  %2 = icmp eq i32 %1, 0, !dbg !15329
  br i1 %2, label %3, label %8, !dbg !15330

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15331
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15332
  %6 = icmp ne i32 %5, 0, !dbg !15330
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15336, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15339
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15341, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15341
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %3, metadata !15337, metadata !DIExpression()), !dbg !15338
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15344
  %5 = load i8, i8* %4, align 4, !dbg !15344
  %6 = and i8 %5, 1, !dbg !15346
  %7 = icmp eq i8 %6, 0, !dbg !15347
  br i1 %7, label %9, label %8, !dbg !15348

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15354, !srcloc !13648
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !15355, !srcloc !15357
  br label %24, !dbg !15358

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15359
  %11 = load i8, i8* %10, align 1, !dbg !15359
  %12 = and i8 %11, 8, !dbg !15361
  %13 = icmp eq i8 %12, 0, !dbg !15362
  br i1 %13, label %15, label %14, !dbg !15363

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15367
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15369, !srcloc !13648
  br label %24, !dbg !15370

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15371
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15372
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15374
  br i1 %17, label %18, label %23, !dbg !15375

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15376, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %19, metadata !14254, metadata !DIExpression()) #25, !dbg !15379
  %20 = icmp eq i32 %19, 0, !dbg !15380
  br i1 %20, label %21, label %23, !dbg !15381

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14218, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15382
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15385
  br label %23, !dbg !15386

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15391, !srcloc !13648
  br label %24, !dbg !15392

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15395, metadata !DIExpression()), !dbg !15396
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15397
  %3 = load i8, i8* %2, align 1, !dbg !15397
  %4 = and i8 %3, 8, !dbg !15399
  %5 = icmp eq i8 %4, 0, !dbg !15400
  br i1 %5, label %6, label %20, !dbg !15401

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15402
  %8 = or i8 %7, 8, !dbg !15402
  store i8 %8, i8* %2, align 1, !dbg !15402
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15404
  br i1 %9, label %10, label %12, !dbg !15406

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !15407
  %11 = and i8 %8, 95, !dbg !15410
  store i8 %11, i8* %2, align 1, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !15411
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !15413
  br label %12, !dbg !15414

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15415
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15415
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15417
  br i1 %15, label %17, label %16, !dbg !15418

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15419
  br label %17, !dbg !15421

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15422
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15423
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !15424
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15425
  br label %20, !dbg !15426

20:                                               ; preds = %17, %1
  ret void, !dbg !15427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15428 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15432, metadata !DIExpression()), !dbg !15434
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15433, metadata !DIExpression()), !dbg !15434
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15436
  br i1 %3, label %10, label %4, !dbg !15437

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15438
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15440
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15441, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.value(metadata i32 0, metadata !15446, metadata !DIExpression()), !dbg !15447
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15449
  store i32 0, i32* %7, align 4, !dbg !15450
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15451
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15433, metadata !DIExpression()), !dbg !15434
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15436
  br i1 %9, label %10, label %4, !dbg !15437, !llvm.loop !15452

10:                                               ; preds = %4, %1
  ret void, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15460, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15459, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15464
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15466, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %4, metadata !15461, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i32 0, metadata !15462, metadata !DIExpression()), !dbg !15463
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15469
  %6 = load i8, i8* %5, align 1, !dbg !15469
  %7 = and i8 %6, 8, !dbg !15471
  %8 = icmp eq i8 %7, 0, !dbg !15472
  br i1 %8, label %9, label %24, !dbg !15473

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15460, metadata !DIExpression()), !dbg !15463
  %11 = icmp eq i64 %10, 0, !dbg !15474
  br i1 %11, label %24, label %12, !dbg !15476

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15479
  br i1 %14, label %24, label %15, !dbg !15480

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15481
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15481
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15482
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15483
  br i1 %19, label %24, label %20, !dbg !15484

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15485
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !15487
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15488
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %4, metadata !14218, metadata !DIExpression()) #25, !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15490
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %23, metadata !15462, metadata !DIExpression()), !dbg !15463
  br label %26, !dbg !15493

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15494
  call void @llvm.dbg.value(metadata i32 %25, metadata !15462, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !15497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15499, !srcloc !13648
  br label %26, !dbg !15500

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15463
  ret i32 %27, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15502 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15506, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 %1, metadata !15507, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i8* %2, metadata !15508, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i8 0, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 0, metadata !15511, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15516
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15518, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i8 poison, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15515
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15509, metadata !DIExpression()), !dbg !15514
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15524
  br i1 %7, label %12, label %8, !dbg !15526

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15527, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 %1, metadata !15532, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i8* %2, metadata !15533, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15441, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 %1, metadata !15446, metadata !DIExpression()), !dbg !15537
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15539
  store i32 %1, i32* %9, align 4, !dbg !15540
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15541
  store i8* %2, i8** %10, align 4, !dbg !15542
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15543
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15544
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15545
  call void @llvm.dbg.value(metadata i8 1, metadata !15510, metadata !DIExpression()), !dbg !15514
  br label %12, !dbg !15546

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15518
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %14, metadata !13619, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %14, metadata !13613, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %14, metadata !15513, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i8 poison, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !15549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15551, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15515
  ret i1 %13, !dbg !15552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15553 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15559, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i64 undef, metadata !15561, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15558, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15560, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i8** %4, metadata !15562, metadata !DIExpression()), !dbg !15564
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %6, metadata !15563, metadata !DIExpression()), !dbg !15564
  %7 = icmp eq i8** %4, null, !dbg !15566
  br i1 %7, label %12, label %8, !dbg !15568

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15569
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15571
  %11 = load i8*, i8** %10, align 4, !dbg !15571
  store i8* %11, i8** %4, align 4, !dbg !15572
  br label %12, !dbg !15573

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15575 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !15577
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !15578
  ret void, !dbg !15579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15580 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15590, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15588, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15589, metadata !DIExpression()), !dbg !15607
  %5 = icmp eq i64 %4, -1, !dbg !15608
  br i1 %5, label %55, label %6, !dbg !15610

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15611
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15612
  call void @llvm.dbg.value(metadata i32 0, metadata !15591, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15621
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15623, !srcloc !15629
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15623
  call void @llvm.dbg.value(metadata i32 %9, metadata !15626, metadata !DIExpression()) #25, !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %9, metadata !15620, metadata !DIExpression()) #25, !dbg !15621
  call void @llvm.dbg.value(metadata i32 %9, metadata !15597, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15613
  %10 = icmp slt i64 %4, -1, !dbg !15631
  br i1 %10, label %11, label %17, !dbg !15632

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15633
  %13 = add i64 %4, %12, !dbg !15634
  %14 = sub i64 -2, %13, !dbg !15634
  call void @llvm.dbg.value(metadata i64 %14, metadata !15601, metadata !DIExpression()), !dbg !15635
  %15 = icmp sgt i64 %14, 1, !dbg !15636
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15636
  br label %22, !dbg !15637

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15638
  %19 = tail call fastcc i32 @elapsed.165() #26, !dbg !15640
  %20 = sext i32 %19 to i64, !dbg !15640
  %21 = add nsw i64 %18, %20, !dbg !15641
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15642
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15643
  store i64 %23, i64* %24, align 8, !dbg !15644
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15645
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15598, metadata !DIExpression()), !dbg !15647
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15648
  br i1 %26, label %42, label %27, !dbg !15648

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15649
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15598, metadata !DIExpression()), !dbg !15647
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15653
  %31 = load i64, i64* %30, align 8, !dbg !15653
  %32 = icmp slt i64 %28, %31, !dbg !15654
  br i1 %32, label %33, label %38, !dbg !15655

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15653
  %35 = sub nsw i64 %31, %28, !dbg !15656
  store i64 %35, i64* %34, align 8, !dbg !15656
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15658
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15659
  tail call fastcc void @sys_dlist_insert.166(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15660
  br label %44, !dbg !15661

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15662
  store i64 %39, i64* %24, align 8, !dbg !15662
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15663
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15598, metadata !DIExpression()), !dbg !15647
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15648
  br i1 %41, label %42, label %27, !dbg !15648, !llvm.loop !15664

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15666
  tail call fastcc void @sys_dlist_append.167(%struct._dnode* noundef %43) #26, !dbg !15669
  br label %44, !dbg !15670

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15671
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15672
  br i1 %46, label %47, label %54, !dbg !15673

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %48, metadata !15604, metadata !DIExpression()), !dbg !15675
  %49 = icmp ne i32 %48, 0, !dbg !15676
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15678
  br i1 %52, label %54, label %53, !dbg !15678

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !15679
  br label %54, !dbg !15681

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15682, metadata !DIExpression()) #25, !dbg !15688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15688
  call void @llvm.dbg.value(metadata i32 %9, metadata !15690, metadata !DIExpression()) #25, !dbg !15693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15695, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15613
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.165() unnamed_addr #1 !dbg !15698 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15701
  %2 = icmp eq i32 %1, 0, !dbg !15702
  br i1 %2, label %3, label %5, !dbg !15701

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !15703
  br label %5, !dbg !15701

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15701
  ret i32 %6, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15705 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.170() #26, !dbg !15711
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15709, metadata !DIExpression()), !dbg !15712
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15713
  ret %struct._timeout* %2, !dbg !15714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.166(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15715 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15719, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15720, metadata !DIExpression()), !dbg !15723
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15724
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15724
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15721, metadata !DIExpression()), !dbg !15723
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15725
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15726
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15727
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15728
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15729
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15730
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15731
  ret void, !dbg !15732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15737, metadata !DIExpression()), !dbg !15739
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15740
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef %2) #26, !dbg !15741
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15738, metadata !DIExpression()), !dbg !15739
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15742
  ret %struct._timeout* %4, !dbg !15743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.167(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15744 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15749, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15750, metadata !DIExpression()), !dbg !15752
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15753
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15751, metadata !DIExpression()), !dbg !15752
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15754
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15755
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15756
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15757
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15758
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15759
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15760
  ret void, !dbg !15761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15762 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15767
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15764, metadata !DIExpression()), !dbg !15768
  %2 = tail call fastcc i32 @elapsed.165() #26, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %2, metadata !15765, metadata !DIExpression()), !dbg !15768
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15770
  br i1 %3, label %14, label %4, !dbg !15772

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15773
  %6 = load i64, i64* %5, align 8, !dbg !15773
  %7 = sext i32 %2 to i64, !dbg !15774
  %8 = sub nsw i64 %6, %7, !dbg !15775
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15776
  br i1 %9, label %14, label %10, !dbg !15777

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15778
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15778
  %13 = trunc i64 %12 to i32, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %13, metadata !15766, metadata !DIExpression()), !dbg !15768
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15780
  call void @llvm.dbg.value(metadata i32 %15, metadata !15766, metadata !DIExpression()), !dbg !15768
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15781
  %17 = icmp ne i32 %16, 0, !dbg !15783
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15784
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %20, metadata !15766, metadata !DIExpression()), !dbg !15768
  ret i32 %20, !dbg !15785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15786 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15790, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15791, metadata !DIExpression()), !dbg !15792
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15793
  br i1 %2, label %5, label %3, !dbg !15794

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef nonnull %0) #26, !dbg !15795
  br label %5, !dbg !15794

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15794
  ret %struct._dnode* %6, !dbg !15796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15797 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15799, metadata !DIExpression()), !dbg !15801
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15800, metadata !DIExpression()), !dbg !15801
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15802
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15803
  br i1 %3, label %7, label %4, !dbg !15804

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15805
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15805
  br label %7, !dbg !15804

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15804
  ret %struct._dnode* %8, !dbg !15806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.170() unnamed_addr #5 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15811, metadata !DIExpression()), !dbg !15812
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.171() #26, !dbg !15813
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15813
  ret %struct._dnode* %3, !dbg !15814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.171() unnamed_addr #5 !dbg !15815 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15819, metadata !DIExpression()), !dbg !15820
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15821
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15822
  ret i1 %2, !dbg !15823
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15824 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15828, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 0, metadata !15830, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15835
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15837, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 undef, metadata !15832, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()), !dbg !15834
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %3) #26, !dbg !15840
  br i1 %4, label %5, label %6, !dbg !15844

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15845
  call void @llvm.dbg.value(metadata i32 0, metadata !15829, metadata !DIExpression()), !dbg !15833
  br label %6, !dbg !15847

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15833
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %8, metadata !15626, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %8, metadata !15620, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %8, metadata !15832, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 %7, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15682, metadata !DIExpression()) #25, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15852, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()), !dbg !15834
  ret i32 %7, !dbg !15853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15862
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15862
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15863
  ret i1 %4, !dbg !15864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15865 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15867, metadata !DIExpression()), !dbg !15868
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15869
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15871
  br i1 %3, label %10, label %4, !dbg !15872

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15873
  %6 = load i64, i64* %5, align 8, !dbg !15873
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15875
  %8 = load i64, i64* %7, align 8, !dbg !15876
  %9 = add nsw i64 %8, %6, !dbg !15876
  store i64 %9, i64* %7, align 8, !dbg !15876
  br label %10, !dbg !15877

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15878
  tail call fastcc void @sys_dlist_remove.175(%struct._dnode* noundef %11) #26, !dbg !15879
  ret void, !dbg !15880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.175(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15885, metadata !DIExpression()), !dbg !15888
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15889
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15889
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15886, metadata !DIExpression()), !dbg !15888
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15890
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15890
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15887, metadata !DIExpression()), !dbg !15888
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15891
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15892
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15893
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15894
  tail call fastcc void @sys_dnode_init.176(%struct._dnode* noundef %0) #26, !dbg !15895
  ret void, !dbg !15896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.176(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15897 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15899, metadata !DIExpression()), !dbg !15900
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15901
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15902
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15903
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15904
  ret void, !dbg !15905
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15906 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15912, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 0, metadata !15914, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15919
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15921, !srcloc !15629
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %3, metadata !15626, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %3, metadata !15620, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15924
  call void @llvm.dbg.value(metadata i64 %4, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 %3, metadata !15682, metadata !DIExpression()) #25, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()) #25, !dbg !15929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15931, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  ret i64 %4, !dbg !15932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15933 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i64 0, metadata !15936, metadata !DIExpression()), !dbg !15939
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* noundef %0) #26, !dbg !15940
  br i1 %2, label %21, label %3, !dbg !15942

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15943
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 0, metadata !15936, metadata !DIExpression()), !dbg !15939
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15945
  br i1 %5, label %16, label %6, !dbg !15947

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 %8, metadata !15936, metadata !DIExpression()), !dbg !15939
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15948
  %10 = load i64, i64* %9, align 8, !dbg !15948
  %11 = add nsw i64 %10, %8, !dbg !15950
  call void @llvm.dbg.value(metadata i64 %11, metadata !15936, metadata !DIExpression()), !dbg !15939
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15951
  br i1 %12, label %16, label %13, !dbg !15953

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15954
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 %11, metadata !15936, metadata !DIExpression()), !dbg !15939
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15945
  br i1 %15, label %16, label %6, !dbg !15947, !llvm.loop !15955

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15939
  call void @llvm.dbg.value(metadata i64 %17, metadata !15936, metadata !DIExpression()), !dbg !15939
  %18 = tail call fastcc i32 @elapsed.165() #26, !dbg !15957
  %19 = sext i32 %18 to i64, !dbg !15957
  %20 = sub nsw i64 %17, %19, !dbg !15958
  br label %21, !dbg !15959

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15939
  ret i64 %22, !dbg !15960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15961 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15965, metadata !DIExpression()), !dbg !15966
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15967
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %2) #26, !dbg !15968
  %4 = xor i1 %3, true, !dbg !15969
  ret i1 %4, !dbg !15970
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15973, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i64 0, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 0, metadata !15975, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15982, !srcloc !15629
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %3, metadata !15626, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %3, metadata !15620, metadata !DIExpression()) #25, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %3, metadata !15977, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 0, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15979
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15985
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15988
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15974, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15978
  call void @llvm.dbg.value(metadata i32 %3, metadata !15682, metadata !DIExpression()) #25, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()) #25, !dbg !15991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15993, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15979
  %6 = add i64 %5, %4, !dbg !15994
  ret i64 %6, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 0, metadata !15999, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16004
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16006, !srcloc !15629
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %2, metadata !15626, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %2, metadata !15620, metadata !DIExpression()) #25, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %2, metadata !16001, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i32 -1, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16003
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !16009
  call void @llvm.dbg.value(metadata i32 %3, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 %2, metadata !15682, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %2, metadata !15690, metadata !DIExpression()) #25, !dbg !16014
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16016, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16003
  ret i32 %3, !dbg !16017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16020, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i1 %1, metadata !16021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16030
  call void @llvm.dbg.value(metadata i32 0, metadata !16022, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16032
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16034, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16032
  call void @llvm.dbg.value(metadata i32 undef, metadata !16024, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16022, metadata !DIExpression()), !dbg !16031
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !16037
  call void @llvm.dbg.value(metadata i32 %4, metadata !16025, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i1 undef, metadata !16028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  %5 = icmp slt i32 %4, 2, !dbg !16039
  call void @llvm.dbg.value(metadata i1 %5, metadata !16029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16040
  call void @llvm.dbg.value(metadata i1 %6, metadata !16028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  br i1 %7, label %11, label %8, !dbg !16040

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16042
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16042
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !16044
  br label %11, !dbg !16045

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %12, metadata !15626, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %12, metadata !15620, metadata !DIExpression()) #25, !dbg !16032
  call void @llvm.dbg.value(metadata i32 %12, metadata !16024, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !15682, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !16048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16050, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 1, metadata !16022, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16022, metadata !DIExpression()), !dbg !16031
  ret void, !dbg !16051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16056, metadata !DIExpression()), !dbg !16061
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16065, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16063
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16061
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16068
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16069
  br i1 %4, label %28, label %5, !dbg !16070

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16071
  %10 = load i64, i64* %9, align 8, !dbg !16071
  %11 = sext i32 %8 to i64, !dbg !16072
  %12 = icmp sgt i64 %10, %11, !dbg !16073
  br i1 %12, label %26, label %13, !dbg !16074

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16061
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16058, metadata !DIExpression()), !dbg !16075
  %15 = trunc i64 %10 to i32, !dbg !16076
  call void @llvm.dbg.value(metadata i32 %15, metadata !16060, metadata !DIExpression()), !dbg !16075
  %16 = sext i32 %15 to i64, !dbg !16077
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16078
  %18 = add i64 %17, %16, !dbg !16078
  store i64 %18, i64* @curr_tick, align 8, !dbg !16078
  store i64 0, i64* %9, align 8, !dbg !16079
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16080
  call void @llvm.dbg.value(metadata i32 %14, metadata !15682, metadata !DIExpression()) #25, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %14, metadata !15690, metadata !DIExpression()) #25, !dbg !16083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16085, !srcloc !15696
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16086
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16086
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16088
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16090, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16093
  %23 = sub nsw i32 %22, %15, !dbg !16093
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16061
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16068
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16069
  br i1 %25, label %28, label %5, !dbg !16070, !llvm.loop !16094

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16096
  store i64 %27, i64* %9, align 8, !dbg !16096
  br label %32, !dbg !16099

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16061
  %31 = sext i32 %30 to i64, !dbg !16100
  br label %32, !dbg !16100

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16100
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16061
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16101
  %37 = add i64 %36, %33, !dbg !16101
  store i64 %37, i64* @curr_tick, align 8, !dbg !16101
  store i32 0, i32* @announce_remaining, align 4, !dbg !16102
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16103
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %35, metadata !15682, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 %35, metadata !15690, metadata !DIExpression()) #25, !dbg !16107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16109, !srcloc !15696
  ret void, !dbg !16110
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16111 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16115, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata i32 0, metadata !16116, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16121
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16123, !srcloc !15629
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %2, metadata !15626, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 %2, metadata !15620, metadata !DIExpression()) #25, !dbg !16121
  call void @llvm.dbg.value(metadata i32 %2, metadata !16118, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata i64 0, metadata !16115, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()), !dbg !16120
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16126
  %4 = tail call fastcc i32 @elapsed.165() #26, !dbg !16129
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16115, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16119
  call void @llvm.dbg.value(metadata i32 %2, metadata !15682, metadata !DIExpression()) #25, !dbg !16130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %2, metadata !15690, metadata !DIExpression()) #25, !dbg !16132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16134, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()), !dbg !16120
  %5 = sext i32 %4 to i64, !dbg !16129
  %6 = add i64 %3, %5, !dbg !16135
  ret i64 %6, !dbg !16136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16137 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16138
  %2 = trunc i64 %1 to i32, !dbg !16139
  ret i32 %2, !dbg !16140
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16141 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16142
  ret i64 %1, !dbg !16143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16146, metadata !DIExpression()), !dbg !16153
  %2 = icmp eq i32 %0, 0, !dbg !16154
  br i1 %2, label %10, label %3, !dbg !16156

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %4, metadata !16147, metadata !DIExpression()), !dbg !16153
  %5 = shl i32 %0, 5, !dbg !16158
  call void @llvm.dbg.value(metadata i32 %5, metadata !16148, metadata !DIExpression()), !dbg !16153
  br label %6, !dbg !16159

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16160
  call void @llvm.dbg.value(metadata i32 %7, metadata !16149, metadata !DIExpression()), !dbg !16161
  %8 = sub i32 %7, %4, !dbg !16162
  %9 = icmp ult i32 %8, %5, !dbg !16164
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16166 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16167
  ret i32 %1, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16169 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16171
  ret i32 %1, !dbg !16172
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16173 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16177, metadata !DIExpression()), !dbg !16179
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16180

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16181
  br label %14, !dbg !16185

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16178, metadata !DIExpression()), !dbg !16179
  %6 = icmp slt i64 %2, -1, !dbg !16186
  br i1 %6, label %7, label %9, !dbg !16189

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16190
  br label %14, !dbg !16191

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16193
  %11 = icmp ugt i64 %2, 1, !dbg !16194
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16194
  %13 = add nsw i64 %10, %12, !dbg !16195
  br label %14, !dbg !16196

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16197
  ret i64 %15, !dbg !16198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16199 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.186, i32 0, i32 0)) #27, !dbg !16201
  ret void, !dbg !16202
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16205, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16206, metadata !DIExpression()), !dbg !16226
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16227

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16228

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16206, metadata !DIExpression()), !dbg !16226
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16229
  %6 = load i8*, i8** %5, align 4, !dbg !16229
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16233
  %8 = load i32, i32* %7, align 4, !dbg !16233
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16234
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16235
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16206, metadata !DIExpression()), !dbg !16226
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16236
  br i1 %10, label %3, label %2, !dbg !16227, !llvm.loop !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16240 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16244, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i8* %1, metadata !16245, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 %2, metadata !16246, metadata !DIExpression()), !dbg !16247
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16248
  tail call fastcc void @z_waitq_init.188(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16249
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16250
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16251
  ret void, !dbg !16252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.188(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16253 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16258, metadata !DIExpression()), !dbg !16259
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16260
  tail call fastcc void @sys_dlist_init.189(%struct._dnode* noundef %2) #26, !dbg !16261
  ret void, !dbg !16262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.189(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16263 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16268, metadata !DIExpression()), !dbg !16269
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16270
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16271
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16272
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16273
  ret void, !dbg !16274
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16275 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16286, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16283, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %1, metadata !16284, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %2, metadata !16285, metadata !DIExpression()), !dbg !16296
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16297
  call void @llvm.dbg.value(metadata i64 %6, metadata !16288, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  %7 = icmp eq i64 %5, -1, !dbg !16298
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16298
  call void @llvm.dbg.value(metadata i64 %8, metadata !16288, metadata !DIExpression()), !dbg !16296
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16307
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16309, !srcloc !16315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16312, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16306, metadata !DIExpression()) #25, !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8 0, metadata !16295, metadata !DIExpression()), !dbg !16296
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8 0, metadata !16295, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16317
  call void @llvm.dbg.value(metadata i8* %12, metadata !16289, metadata !DIExpression()), !dbg !16296
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16319
  call void @llvm.dbg.value(metadata i64 %13, metadata !16287, metadata !DIExpression()), !dbg !16296
  %14 = icmp eq i8* %12, null, !dbg !16320
  br i1 %14, label %15, label %31, !dbg !16322

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16322

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16295, metadata !DIExpression()), !dbg !16296
  %20 = sub nsw i64 %8, %18, !dbg !16323
  %21 = icmp slt i64 %20, 1, !dbg !16324
  br i1 %21, label %31, label %22, !dbg !16325

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i8 undef, metadata !16295, metadata !DIExpression()), !dbg !16296
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16326
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16326
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16327
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16329, !srcloc !16315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16312, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16306, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16317
  call void @llvm.dbg.value(metadata i8* %28, metadata !16289, metadata !DIExpression()), !dbg !16296
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16319
  call void @llvm.dbg.value(metadata i64 %29, metadata !16287, metadata !DIExpression()), !dbg !16296
  %30 = icmp eq i8* %28, null, !dbg !16320
  br i1 %30, label %17, label %31, !dbg !16322, !llvm.loop !16332

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16317
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i8* %33, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %34, metadata !16335, metadata !DIExpression()) #25, !dbg !16341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16341
  call void @llvm.dbg.value(metadata i32 %34, metadata !16343, metadata !DIExpression()) #25, !dbg !16346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !16348, !srcloc !16349
  ret i8* %33, !dbg !16350
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16351 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16357, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16355, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.value(metadata i32 %1, metadata !16356, metadata !DIExpression()), !dbg !16359
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !16360
  call void @llvm.dbg.value(metadata i8* %4, metadata !16358, metadata !DIExpression()), !dbg !16359
  ret i8* %4, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16362 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16366, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i8* %1, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16370
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16372, !srcloc !16315
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %4, metadata !16312, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %4, metadata !16306, metadata !DIExpression()) #25, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %4, metadata !16368, metadata !DIExpression()), !dbg !16369
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16375
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !16376
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16377
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !16379
  %8 = icmp eq i32 %7, 0, !dbg !16380
  br i1 %8, label %12, label %9, !dbg !16381

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16382
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16383
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !16383
  br label %13, !dbg !16385

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16335, metadata !DIExpression()) #25, !dbg !16386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %4, metadata !16343, metadata !DIExpression()) #25, !dbg !16389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16391, !srcloc !16349
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16392
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!837, !2, !2436, !27, !264, !2438, !2440, !2473, !2511, !274, !331, !2513, !2524, !2570, !2572, !2600, !2628, !2671, !2742, !2787, !360, !505, !2815, !541, !551, !576, !684, !867, !2820, !983, !1077, !1346, !1629, !2841, !1742, !1829, !2843, !2914, !2963, !1863, !2966, !1869, !2229, !2984, !2986, !2251, !3090, !2366, !3093, !2405}
!llvm.ident = !{!3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095, !3095}
!llvm.module.flags = !{!3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !274, file: !304, line: 60, type: !305, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !303, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!276 = !{!277, !297}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 372, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !280, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !280, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !280, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !280, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !280, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !280, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !280, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !280, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !280, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !280, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !280, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !280, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !280, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 364, baseType: !299)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 64, elements: !300)
!300 = !{!301, !302}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !299, file: !279, line: 362, baseType: !283, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !299, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!303 = !{!272}
!304 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !328}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !306, file: !307, line: 60, baseType: !310, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DISubroutineType(types: !312)
!312 = !{!107, !313}
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !316)
!316 = !{!317, !318, !319, !320, !326, !327}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !315, file: !120, line: 380, baseType: !123, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !315, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !315, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !315, file: !120, line: 386, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !323)
!323 = !{!324, !325}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !322, file: !120, line: 359, baseType: !133, size: 8)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !322, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !315, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !306, file: !307, line: 65, baseType: !313, size: 32, offset: 32)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !331, file: !334, line: 71, type: !335, isLocal: true, isDefinition: true, align: 32)
!331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !333, splitDebugInlining: false, nameTableKind: None)
!332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!333 = !{!329}
!334 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !337)
!337 = !{!338, !357}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !336, file: !307, line: 60, baseType: !339, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!340 = !DISubroutineType(types: !341)
!341 = !{!107, !342}
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !345)
!345 = !{!346, !347, !348, !349, !355, !356}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !344, file: !120, line: 380, baseType: !123, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !344, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !344, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !344, file: !120, line: 386, baseType: !350, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !352)
!352 = !{!353, !354}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !351, file: !120, line: 359, baseType: !133, size: 8)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !351, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !344, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !344, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !336, file: !307, line: 65, baseType: !342, size: 32, offset: 32)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "static_regions", scope: !360, file: !367, line: 62, type: !501, isLocal: true, isDefinition: true)
!360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !361, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !362, globals: !363, splitDebugInlining: false, nameTableKind: None)
!361 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!362 = !{!252, !107, !162, !102}
!363 = !{!364, !358}
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !366, file: !367, line: 198, type: !487, isLocal: true, isDefinition: true)
!366 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !367, file: !367, line: 175, type: !368, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !482)
!367 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !DISubroutineType(types: !369)
!369 = !{null, !370}
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !373)
!372 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!373 = !{!374, !439, !452, !453, !454, !455, !461, !477}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !371, file: !372, line: 247, baseType: !375, size: 384)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !376)
!376 = !{!377, !404, !411, !412, !413, !426, !427, !428}
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !375, file: !372, line: 60, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !375, file: !372, line: 60, size: 64, elements: !379)
!379 = !{!380, !395}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !378, file: !372, line: 61, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !383)
!383 = !{!384, !390}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !233, line: 38, baseType: !385, size: 32)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !233, line: 38, size: 32, elements: !386)
!386 = !{!387, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !385, file: !233, line: 39, baseType: !388, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !385, file: !233, line: 40, baseType: !388, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !233, line: 42, baseType: !391, size: 32, offset: 32)
!391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !233, line: 42, size: 32, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !391, file: !233, line: 43, baseType: !388, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !391, file: !233, line: 44, baseType: !388, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !378, file: !372, line: 62, baseType: !396, size: 64)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !398)
!397 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!398 = !{!399}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !396, file: !397, line: 50, baseType: !400, size: 64)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !401, size: 64, elements: !402)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!402 = !{!403}
!403 = !DISubrange(count: 2)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !375, file: !372, line: 68, baseType: !405, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !407)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !407, file: !228, line: 232, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !382)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !375, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !375, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!413 = !DIDerivedType(tag: DW_TAG_member, scope: !375, file: !372, line: 90, baseType: !414, size: 16, offset: 112)
!414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !375, file: !372, line: 90, size: 16, elements: !415)
!415 = !{!416, !423}
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !372, line: 91, baseType: !417, size: 16)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !414, file: !372, line: 91, size: 16, elements: !418)
!418 = !{!419, !422}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !417, file: !372, line: 96, baseType: !420, size: 8)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !421)
!421 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !417, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !414, file: !372, line: 100, baseType: !424, size: 16)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !425)
!425 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !375, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !375, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !375, file: !372, line: 131, baseType: !429, size: 192, offset: 192)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !430)
!430 = !{!431, !432, !438}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !429, file: !228, line: 245, baseType: !381, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !429, file: !228, line: 246, baseType: !433, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!435 = !DISubroutineType(types: !436)
!436 = !{null, !437}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !429, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !371, file: !372, line: 250, baseType: !440, size: 288, offset: 384)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = !{!443, !444, !445, !446, !447, !448, !449, !450, !451}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !440, file: !441, line: 26, baseType: !162, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !440, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !440, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !440, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !440, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !440, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !440, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !440, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !440, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !371, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !371, file: !372, line: 256, baseType: !406, size: 64, offset: 704)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !371, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !371, file: !372, line: 300, baseType: !456, size: 96, offset: 800)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !456, file: !372, line: 153, baseType: !22, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !456, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !456, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !371, file: !372, line: 325, baseType: !462, size: 32, offset: 896)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 32)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !464)
!464 = !{!465, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !463, file: !224, line: 5074, baseType: !466, size: 96)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !468)
!467 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!468 = !{!469, !472, !473}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !466, file: !467, line: 57, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !467, line: 57, flags: DIFlagFwdDecl)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !466, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !466, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !463, file: !224, line: 5075, baseType: !406, size: 64, offset: 96)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !463, file: !224, line: 5076, baseType: !476, offset: 160)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !371, file: !372, line: 343, baseType: !478, size: 64, offset: 928)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !478, file: !441, line: 63, baseType: !162, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !478, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!482 = !{!483, !484, !485, !486}
!483 = !DILocalVariable(name: "thread", arg: 1, scope: !366, file: !367, line: 175, type: !370)
!484 = !DILocalVariable(name: "region_num", scope: !366, file: !367, line: 200, type: !133)
!485 = !DILocalVariable(name: "guard_start", scope: !366, file: !367, line: 265, type: !22)
!486 = !DILocalVariable(name: "guard_size", scope: !366, file: !367, line: 266, type: !252)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 96, elements: !499)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !489, line: 52, size: 96, elements: !490)
!489 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!490 = !{!491, !492, !493}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !488, file: !489, line: 53, baseType: !22, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !488, file: !489, line: 54, baseType: !252, size: 32, offset: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !488, file: !489, line: 55, baseType: !494, size: 32, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !495, line: 151, baseType: !496)
!495 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 149, size: 32, elements: !497)
!497 = !{!498}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !496, file: !495, line: 150, baseType: !162, size: 32)
!499 = !{!500}
!500 = !DISubrange(count: 1)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 96, elements: !499)
!502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!503 = !DIGlobalVariableExpression(var: !504, expr: !DIExpression())
!504 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !505, file: !538, line: 39, type: !133, isLocal: true, isDefinition: true)
!505 = distinct !DICompileUnit(language: DW_LANG_C99, file: !506, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !507, globals: !537, splitDebugInlining: false, nameTableKind: None)
!506 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!507 = !{!508, !102, !107, !525, !133}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !510, line: 1168, baseType: !511)
!510 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 1155, size: 352, elements: !512)
!512 = !{!513, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !511, file: !510, line: 1157, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !511, file: !510, line: 1158, baseType: !283, size: 32, offset: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !511, file: !510, line: 1159, baseType: !283, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !511, file: !510, line: 1160, baseType: !283, size: 32, offset: 96)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !511, file: !510, line: 1161, baseType: !283, size: 32, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !511, file: !510, line: 1162, baseType: !283, size: 32, offset: 160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !511, file: !510, line: 1163, baseType: !283, size: 32, offset: 192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !511, file: !510, line: 1164, baseType: !283, size: 32, offset: 224)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !511, file: !510, line: 1165, baseType: !283, size: 32, offset: 256)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !511, file: !510, line: 1166, baseType: !283, size: 32, offset: 288)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !511, file: !510, line: 1167, baseType: !283, size: 32, offset: 320)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !528, line: 27, size: 96, elements: !529)
!528 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!529 = !{!530, !531, !532}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !527, file: !528, line: 29, baseType: !162, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !527, file: !528, line: 31, baseType: !123, size: 32, offset: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !527, file: !528, line: 37, baseType: !533, size: 32, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !495, line: 146, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !495, line: 141, size: 32, elements: !535)
!535 = !{!536}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !534, file: !495, line: 143, baseType: !162, size: 32)
!537 = !{!503}
!538 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !541, file: !548, line: 21, type: !269, isLocal: true, isDefinition: true)
!541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !543, globals: !547, splitDebugInlining: false, nameTableKind: None)
!542 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!543 = !{!544, !107, !102}
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !546, line: 22, baseType: !107)
!546 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !{!539}
!548 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !551, file: !556, line: 13, type: !573, isLocal: true, isDefinition: true)
!551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !553, splitDebugInlining: false, nameTableKind: None)
!552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!553 = !{!554, !549}
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_config", scope: !551, file: !556, line: 37, type: !557, isLocal: false, isDefinition: true)
!556 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !528, line: 41, size: 64, elements: !559)
!559 = !{!560, !561}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !558, file: !528, line: 43, baseType: !162, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !558, file: !528, line: 45, baseType: !562, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !528, line: 27, size: 96, elements: !565)
!565 = !{!566, !567, !568}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !564, file: !528, line: 29, baseType: !162, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !564, file: !528, line: 31, baseType: !123, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !564, file: !528, line: 37, baseType: !569, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !495, line: 146, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !495, line: 141, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !570, file: !495, line: 143, baseType: !162, size: 32)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 192, elements: !402)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !576, file: !673, line: 36, type: !674, isLocal: true, isDefinition: true, align: 32)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !578, retainedTypes: !590, globals: !672, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!578 = !{!579, !585}
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !580, line: 506, baseType: !32, size: 32, elements: !581)
!580 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!581 = !{!582, !583, !584}
!582 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!583 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!584 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!585 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !580, line: 512, baseType: !32, size: 32, elements: !586)
!586 = !{!587, !588, !589}
!587 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!588 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!589 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!590 = !{!591, !661, !666, !626, !585, !579, !671, !102}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !580, line: 523, size: 288, elements: !594)
!594 = !{!595, !616, !622, !627, !631, !632, !633, !637, !657}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !593, file: !580, line: 524, baseType: !596, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = !DISubroutineType(types: !598)
!598 = !{!107, !599, !614, !615}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !602)
!602 = !{!603, !604, !605, !606, !612, !613}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !120, line: 380, baseType: !123, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !601, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !601, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !601, file: !120, line: 386, baseType: !607, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 32)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !609)
!609 = !{!610, !611}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !608, file: !120, line: 359, baseType: !133, size: 8)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !608, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !601, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !601, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !580, line: 237, baseType: !133)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !580, line: 257, baseType: !162)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !593, file: !580, line: 530, baseType: !617, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DISubroutineType(types: !619)
!619 = !{!107, !599, !620}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !580, line: 229, baseType: !162)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !593, file: !580, line: 532, baseType: !623, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = !DISubroutineType(types: !625)
!625 = !{!107, !599, !626, !621}
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !580, line: 216, baseType: !162)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !593, file: !580, line: 535, baseType: !628, size: 32, offset: 96)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 32)
!629 = !DISubroutineType(types: !630)
!630 = !{!107, !599, !626}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !593, file: !580, line: 537, baseType: !628, size: 32, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !593, file: !580, line: 539, baseType: !628, size: 32, offset: 160)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !593, file: !580, line: 541, baseType: !634, size: 32, offset: 192)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DISubroutineType(types: !636)
!636 = !{!107, !599, !614, !579, !585}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !593, file: !580, line: 544, baseType: !638, size: 32, offset: 224)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = !DISubroutineType(types: !640)
!640 = !{!107, !599, !641, !136}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !580, line: 478, size: 96, elements: !643)
!643 = !{!644, !651, !656}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !642, file: !580, line: 482, baseType: !645, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !646, line: 33, baseType: !647)
!646 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !646, line: 29, size: 32, elements: !648)
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !647, file: !646, line: 30, baseType: !650, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !642, file: !580, line: 485, baseType: !652, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !580, line: 464, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 32)
!654 = !DISubroutineType(types: !655)
!655 = !{null, !599, !641, !626}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !642, file: !580, line: 493, baseType: !626, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !593, file: !580, line: 547, baseType: !658, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DISubroutineType(types: !660)
!660 = !{!162, !599}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !580, line: 428, size: 32, elements: !664)
!664 = !{!665}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !663, file: !580, line: 434, baseType: !626, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !580, line: 441, size: 32, elements: !669)
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !668, file: !580, line: 447, baseType: !626, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!672 = !{!574}
!673 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !676)
!676 = !{!677, !681}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !675, file: !307, line: 60, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DISubroutineType(types: !680)
!680 = !{!107, !599}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !675, file: !307, line: 65, baseType: !599, size: 32, offset: 32)
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !684, file: !756, line: 48, type: !832, isLocal: true, isDefinition: true)
!684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !686, retainedTypes: !742, globals: !753, splitDebugInlining: false, nameTableKind: None)
!685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!686 = !{!30, !687}
!687 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 69, baseType: !107, size: 32, elements: !688)
!688 = !{!689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741}
!689 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!690 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!691 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!692 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!693 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!694 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!695 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!696 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!697 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!698 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!699 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!700 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!701 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!702 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!703 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!704 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!705 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!706 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!707 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!708 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!709 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!710 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!711 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!712 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!713 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!714 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!715 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!716 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!717 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!718 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!719 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!720 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!721 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!722 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!723 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!724 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!725 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!726 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!727 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!728 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!729 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!730 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!731 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!732 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!733 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!734 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!735 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!736 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!737 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!738 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!739 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!740 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!741 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!742 = !{!252, !107, !102, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 270, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 262, size: 192, elements: !746)
!746 = !{!747, !748, !749, !750, !751, !752}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !745, file: !279, line: 264, baseType: !283, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !745, file: !279, line: 265, baseType: !283, size: 32, offset: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !745, file: !279, line: 266, baseType: !283, size: 32, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !745, file: !279, line: 267, baseType: !283, size: 32, offset: 96)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !745, file: !279, line: 268, baseType: !283, size: 32, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !745, file: !279, line: 269, baseType: !283, size: 32, offset: 160)
!753 = !{!754, !760, !776, !787, !804, !682, !806, !820, !822, !824, !826, !828, !830}
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !684, file: !756, line: 424, type: !757, isLocal: false, isDefinition: true, align: 16)
!756 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 4)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !684, file: !756, line: 424, type: !762, isLocal: false, isDefinition: true, align: 32)
!762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !764)
!764 = !{!765, !766, !767, !768, !774, !775}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !763, file: !120, line: 380, baseType: !123, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !763, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !763, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !763, file: !120, line: 386, baseType: !769, size: 32, offset: 96)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 32)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !771)
!771 = !{!772, !773}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !770, file: !120, line: 359, baseType: !133, size: 8)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !770, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !763, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !763, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !684, file: !756, line: 424, type: !778, isLocal: true, isDefinition: true, align: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !780)
!780 = !{!781, !786}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !779, file: !307, line: 60, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DISubroutineType(types: !784)
!784 = !{!107, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !779, file: !307, line: 65, baseType: !785, size: 32, offset: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "exti_data", scope: !684, file: !756, line: 423, type: !789, isLocal: true, isDefinition: true)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !756, line: 107, size: 1024, elements: !790)
!790 = !{!791}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !789, file: !756, line: 109, baseType: !792, size: 1024)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 1024, elements: !802)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !756, line: 101, size: 64, elements: !794)
!794 = !{!795, !801}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !793, file: !756, line: 102, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !797, line: 63, baseType: !798)
!797 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !107, !102}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !793, file: !756, line: 103, baseType: !102, size: 32, offset: 32)
!802 = !{!803}
!803 = !DISubrange(count: 16)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !684, file: !756, line: 424, type: !770, isLocal: true, isDefinition: true, align: 8)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !808, file: !756, line: 493, type: !813, isLocal: true, isDefinition: true, align: 32)
!808 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !756, file: !756, line: 460, type: !809, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !811)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !785}
!811 = !{!812}
!812 = !DILocalVariable(name: "dev", arg: 1, scope: !808, file: !756, line: 460, type: !785)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !814)
!814 = !{!815, !817, !818, !819}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !813, file: !10, line: 55, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !813, file: !10, line: 57, baseType: !816, size: 32, offset: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !813, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !813, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !808, file: !756, line: 497, type: !813, isLocal: true, isDefinition: true, align: 32)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !808, file: !756, line: 507, type: !813, isLocal: true, isDefinition: true, align: 32)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !808, file: !756, line: 512, type: !813, isLocal: true, isDefinition: true, align: 32)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !808, file: !756, line: 516, type: !813, isLocal: true, isDefinition: true, align: 32)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !808, file: !756, line: 523, type: !813, isLocal: true, isDefinition: true, align: 32)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !808, file: !756, line: 527, type: !813, isLocal: true, isDefinition: true, align: 32)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !833, size: 512, elements: !802)
!833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 127, baseType: !687)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !837, file: !842, line: 21, type: !862, isLocal: false, isDefinition: true, align: 16)
!837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !839, splitDebugInlining: false, nameTableKind: None)
!838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!839 = !{!840, !835, !846, !848, !850, !852, !854, !856, !858, !860}
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !837, file: !842, line: 16, type: !843, isLocal: false, isDefinition: true, align: 16)
!842 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 176, elements: !844)
!844 = !{!845}
!845 = !DISubrange(count: 11)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !837, file: !842, line: 28, type: !757, isLocal: false, isDefinition: true, align: 16)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !837, file: !842, line: 35, type: !757, isLocal: false, isDefinition: true, align: 16)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !837, file: !842, line: 42, type: !757, isLocal: false, isDefinition: true, align: 16)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !837, file: !842, line: 49, type: !757, isLocal: false, isDefinition: true, align: 16)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !837, file: !842, line: 56, type: !757, isLocal: false, isDefinition: true, align: 16)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !837, file: !842, line: 63, type: !757, isLocal: false, isDefinition: true, align: 16)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !837, file: !842, line: 70, type: !757, isLocal: false, isDefinition: true, align: 16)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !837, file: !842, line: 77, type: !757, isLocal: false, isDefinition: true, align: 16)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 3)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !867, file: !911, line: 398, type: !942, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !882, globals: !908, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!869 = !{!870, !30, !875}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !871, line: 190, baseType: !32, size: 32, elements: !872)
!871 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874}
!873 = !DIEnumerator(name: "SUCCESS", value: 0)
!874 = !DIEnumerator(name: "ERROR", value: 1)
!875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !876, line: 44, baseType: !32, size: 32, elements: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !{!878, !879, !880, !881}
!878 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!879 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!880 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!881 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!882 = !{!102, !107, !162, !883, !901, !907}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !885, file: !279, line: 372, baseType: !283, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !885, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !885, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !885, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !885, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !885, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !885, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !885, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !885, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !885, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !885, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !885, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !885, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !885, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !903, line: 343, size: 64, elements: !904)
!903 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !902, file: !903, line: 344, baseType: !162, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !902, file: !903, line: 345, baseType: !162, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!908 = !{!909, !913, !929, !940, !865}
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !867, file: !911, line: 752, type: !912, isLocal: false, isDefinition: true, align: 16)
!911 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 512, elements: !219)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !867, file: !911, line: 752, type: !915, isLocal: false, isDefinition: true, align: 32)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !917)
!917 = !{!918, !919, !920, !921, !927, !928}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !916, file: !120, line: 380, baseType: !123, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !916, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !916, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !916, file: !120, line: 386, baseType: !922, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !924)
!924 = !{!925, !926}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !923, file: !120, line: 359, baseType: !133, size: 8)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !923, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !916, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !916, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !867, file: !911, line: 752, type: !931, isLocal: true, isDefinition: true, align: 32)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !933)
!933 = !{!934, !939}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !932, file: !307, line: 60, baseType: !935, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!107, !938}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !932, file: !307, line: 65, baseType: !938, size: 32, offset: 32)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !867, file: !911, line: 752, type: !923, isLocal: true, isDefinition: true, align: 8)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !876, line: 100, size: 224, elements: !943)
!943 = !{!944, !950, !951, !960, !965, !970, !976}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !942, file: !876, line: 101, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !876, line: 76, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!107, !938, !949}
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !876, line: 56, baseType: !102)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !942, file: !876, line: 102, baseType: !945, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !942, file: !876, line: 103, baseType: !952, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !876, line: 83, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DISubroutineType(types: !955)
!955 = !{!107, !938, !949, !956, !102}
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !876, line: 72, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !938, !949, !102}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !942, file: !876, line: 104, baseType: !961, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !876, line: 79, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!107, !938, !949, !907}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !942, file: !876, line: 105, baseType: !966, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !876, line: 88, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!875, !938, !949}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !942, file: !876, line: 106, baseType: !971, size: 32, offset: 160)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !876, line: 92, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!107, !938, !949, !975}
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !876, line: 64, baseType: !102)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !942, file: !876, line: 107, baseType: !977, size: 32, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !876, line: 96, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!107, !938, !949, !102}
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !983, file: !1068, line: 603, type: !1070, isLocal: true, isDefinition: true, align: 32)
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !985, globals: !1065, splitDebugInlining: false, nameTableKind: None)
!984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!985 = !{!102, !107, !986}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !989)
!989 = !{!990, !1009, !1013, !1017, !1030, !1035, !1039, !1043, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !988, file: !111, line: 365, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!107, !994, !144}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1007, !1008}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !996, file: !120, line: 380, baseType: !123, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !996, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !996, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !996, file: !120, line: 386, baseType: !1002, size: 32, offset: 96)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1004)
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1003, file: !120, line: 359, baseType: !133, size: 8)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1003, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !996, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !996, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !988, file: !111, line: 366, baseType: !1010, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{null, !994, !134}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !988, file: !111, line: 374, baseType: !1014, size: 32, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!107, !994}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !988, file: !111, line: 377, baseType: !1018, size: 32, offset: 96)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!107, !994, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1023, file: !111, line: 123, baseType: !162, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1023, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1023, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1023, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1023, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !988, file: !111, line: 379, baseType: !1031, size: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!107, !994, !1034}
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !988, file: !111, line: 384, baseType: !1036, size: 32, offset: 160)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!107, !994, !176, !107}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !988, file: !111, line: 393, baseType: !1040, size: 32, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!107, !994, !182, !183}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !988, file: !111, line: 402, baseType: !1044, size: 32, offset: 224)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !994}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !988, file: !111, line: 405, baseType: !1044, size: 32, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !988, file: !111, line: 408, baseType: !1014, size: 32, offset: 288)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !988, file: !111, line: 411, baseType: !1044, size: 32, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !988, file: !111, line: 414, baseType: !1044, size: 32, offset: 352)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !988, file: !111, line: 417, baseType: !1014, size: 32, offset: 384)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !988, file: !111, line: 420, baseType: !1014, size: 32, offset: 416)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !988, file: !111, line: 423, baseType: !1044, size: 32, offset: 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !988, file: !111, line: 426, baseType: !1044, size: 32, offset: 480)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !988, file: !111, line: 429, baseType: !1014, size: 32, offset: 512)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !988, file: !111, line: 432, baseType: !1014, size: 32, offset: 544)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !988, file: !111, line: 435, baseType: !1058, size: 32, offset: 576)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !994, !1061, !102}
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{null, !994, !102}
!1065 = !{!981, !1066}
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !983, file: !1068, line: 38, type: !1069, isLocal: true, isDefinition: true)
!1068 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1071, file: !307, line: 60, baseType: !1014, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1071, file: !307, line: 65, baseType: !994, size: 32, offset: 32)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1077, file: !1227, line: 762, type: !1325, isLocal: true, isDefinition: true)
!1077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1079, retainedTypes: !1086, globals: !1224, splitDebugInlining: false, nameTableKind: None)
!1078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1079 = !{!30, !579, !585, !1080, !875}
!1080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !797, line: 43, baseType: !32, size: 32, elements: !1081)
!1081 = !{!1082, !1083, !1084, !1085}
!1082 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1083 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1084 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1085 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1086 = !{!102, !107, !1087, !1151, !1156, !626, !585, !579, !1161, !1162, !162, !1176, !1132, !256, !1184, !1185}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !580, line: 523, size: 288, elements: !1090)
!1090 = !{!1091, !1110, !1114, !1118, !1122, !1123, !1124, !1128, !1147}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1089, file: !580, line: 524, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!107, !1095, !614, !615}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1108, !1109}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1097, file: !120, line: 380, baseType: !123, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1097, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1097, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1097, file: !120, line: 386, baseType: !1103, size: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1105)
!1105 = !{!1106, !1107}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1104, file: !120, line: 359, baseType: !133, size: 8)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1104, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1097, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1097, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1089, file: !580, line: 530, baseType: !1111, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!107, !1095, !620}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1089, file: !580, line: 532, baseType: !1115, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!107, !1095, !626, !621}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1089, file: !580, line: 535, baseType: !1119, size: 32, offset: 96)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!107, !1095, !626}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1089, file: !580, line: 537, baseType: !1119, size: 32, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1089, file: !580, line: 539, baseType: !1119, size: 32, offset: 160)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1089, file: !580, line: 541, baseType: !1125, size: 32, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!107, !1095, !614, !579, !585}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1089, file: !580, line: 544, baseType: !1129, size: 32, offset: 224)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!107, !1095, !1132, !136}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !580, line: 478, size: 96, elements: !1134)
!1134 = !{!1135, !1141, !1146}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1133, file: !580, line: 482, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !646, line: 33, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !646, line: 29, size: 32, elements: !1138)
!1138 = !{!1139}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1137, file: !646, line: 30, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1133, file: !580, line: 485, baseType: !1142, size: 32, offset: 32)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !580, line: 464, baseType: !1143)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !1095, !1132, !626}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1133, file: !580, line: 493, baseType: !626, size: 32, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1089, file: !580, line: 547, baseType: !1148, size: 32, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!162, !1095}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !580, line: 428, size: 32, elements: !1154)
!1154 = !{!1155}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1153, file: !580, line: 434, baseType: !626, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !580, line: 441, size: 32, elements: !1159)
!1159 = !{!1160}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1158, file: !580, line: 447, baseType: !626, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 314, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 303, size: 320, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1164, file: !279, line: 305, baseType: !283, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1164, file: !279, line: 306, baseType: !283, size: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1164, file: !279, line: 307, baseType: !283, size: 32, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1164, file: !279, line: 308, baseType: !283, size: 32, offset: 96)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1164, file: !279, line: 309, baseType: !283, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1164, file: !279, line: 310, baseType: !283, size: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1164, file: !279, line: 311, baseType: !283, size: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1164, file: !279, line: 312, baseType: !283, size: 32, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1164, file: !279, line: 313, baseType: !1175, size: 64, offset: 256)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !402)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 325, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 320, size: 192, elements: !1179)
!1179 = !{!1180, !1181, !1182}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1178, file: !279, line: 322, baseType: !283, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1178, file: !279, line: 323, baseType: !283, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1178, file: !279, line: 324, baseType: !1183, size: 128, offset: 64)
!1183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !758)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !876, line: 100, size: 224, elements: !1188)
!1188 = !{!1189, !1194, !1195, !1204, !1209, !1214, !1219}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1187, file: !876, line: 101, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !876, line: 76, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!107, !1095, !949}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1187, file: !876, line: 102, baseType: !1190, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1187, file: !876, line: 103, baseType: !1196, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !876, line: 83, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!107, !1095, !949, !1200, !102}
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !876, line: 72, baseType: !1201)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{null, !1095, !949, !102}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1187, file: !876, line: 104, baseType: !1205, size: 32, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !876, line: 79, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!107, !1095, !949, !907}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1187, file: !876, line: 105, baseType: !1210, size: 32, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !876, line: 88, baseType: !1211)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!875, !1095, !949}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1187, file: !876, line: 106, baseType: !1215, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !876, line: 92, baseType: !1216)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!107, !1095, !949, !975}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1187, file: !876, line: 107, baseType: !1220, size: 32, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !876, line: 96, baseType: !1221)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!107, !1095, !949, !102}
!1224 = !{!1225, !1231, !1233, !1243, !1248, !1250, !1252, !1257, !1259, !1261, !1266, !1268, !1270, !1272, !1274, !1276, !1281, !1283, !1285, !1299, !1301, !1303, !1305, !1307, !1309, !1311, !1313, !1315, !1317, !1319, !1075, !1321, !1323, !1336, !1338, !1340, !1342}
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1077, file: !1227, line: 762, type: !1228, isLocal: false, isDefinition: true, align: 16)
!1227 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 8)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1077, file: !1227, line: 762, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1077, file: !1227, line: 762, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1237)
!1237 = !{!1238, !1242}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1236, file: !307, line: 60, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!107, !1095}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1236, file: !307, line: 65, baseType: !1095, size: 32, offset: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1077, file: !1227, line: 766, type: !1245, isLocal: false, isDefinition: true, align: 16)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 144, elements: !1246)
!1246 = !{!1247}
!1247 = !DISubrange(count: 9)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1077, file: !1227, line: 766, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1077, file: !1227, line: 766, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1077, file: !1227, line: 770, type: !1254, isLocal: false, isDefinition: true, align: 16)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 96, elements: !1255)
!1255 = !{!1256}
!1256 = !DISubrange(count: 6)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1077, file: !1227, line: 770, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1077, file: !1227, line: 770, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1077, file: !1227, line: 774, type: !1263, isLocal: false, isDefinition: true, align: 16)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1264)
!1264 = !{!1265}
!1265 = !DISubrange(count: 5)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1077, file: !1227, line: 774, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1077, file: !1227, line: 774, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1077, file: !1227, line: 778, type: !1263, isLocal: false, isDefinition: true, align: 16)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1077, file: !1227, line: 778, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1077, file: !1227, line: 778, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1077, file: !1227, line: 790, type: !1278, isLocal: false, isDefinition: true, align: 16)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 112, elements: !1279)
!1279 = !{!1280}
!1280 = !DISubrange(count: 7)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1077, file: !1227, line: 790, type: !1096, isLocal: false, isDefinition: true, align: 32)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1077, file: !1227, line: 790, type: !1235, isLocal: true, isDefinition: true, align: 32)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1077, file: !1227, line: 762, type: !1287, isLocal: true, isDefinition: true)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1288, line: 237, size: 128, elements: !1289)
!1288 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1289 = !{!1290, !1291, !1292}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1287, file: !1288, line: 239, baseType: !1158, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1287, file: !1288, line: 241, baseType: !1095, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1287, file: !1288, line: 243, baseType: !1293, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !646, line: 40, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !646, line: 35, size: 64, elements: !1295)
!1295 = !{!1296, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1294, file: !646, line: 36, baseType: !1297, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1294, file: !646, line: 37, baseType: !1297, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1077, file: !1227, line: 762, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1077, file: !1227, line: 766, type: !1287, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1077, file: !1227, line: 766, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1077, file: !1227, line: 770, type: !1287, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1077, file: !1227, line: 770, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1077, file: !1227, line: 774, type: !1287, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1077, file: !1227, line: 774, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1077, file: !1227, line: 778, type: !1287, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1077, file: !1227, line: 778, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1077, file: !1227, line: 790, type: !1287, isLocal: true, isDefinition: true)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1077, file: !1227, line: 790, type: !1104, isLocal: true, isDefinition: true, align: 8)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1077, file: !1227, line: 656, type: !1088, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1077, file: !1227, line: 766, type: !1325, isLocal: true, isDefinition: true)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1288, line: 224, size: 160, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1326, file: !1288, line: 226, baseType: !1153, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1326, file: !1288, line: 228, baseType: !907, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1326, file: !1288, line: 230, baseType: !107, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1326, file: !1288, line: 231, baseType: !1332, size: 64, offset: 96)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !903, line: 343, size: 64, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1332, file: !903, line: 344, baseType: !162, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1332, file: !903, line: 345, baseType: !162, size: 32, offset: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1077, file: !1227, line: 770, type: !1325, isLocal: true, isDefinition: true)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1077, file: !1227, line: 774, type: !1325, isLocal: true, isDefinition: true)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1077, file: !1227, line: 778, type: !1325, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1077, file: !1227, line: 790, type: !1325, isLocal: true, isDefinition: true)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1346, file: !1514, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1348, retainedTypes: !1381, globals: !1511, splitDebugInlining: false, nameTableKind: None)
!1347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1348 = !{!30, !1349, !1356, !1363, !1370, !1376, !875}
!1349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1350)
!1350 = !{!1351, !1352, !1353, !1354, !1355}
!1351 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1352 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1353 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1354 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1355 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1357)
!1357 = !{!1358, !1359, !1360, !1361, !1362}
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1360 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1361 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1362 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1369}
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1367 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1368 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1369 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375}
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1373 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1374 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1375 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1377)
!1377 = !{!1378, !1379, !1380}
!1378 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1379 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1380 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1381 = !{!102, !107, !1382, !134, !133, !1461, !162, !949, !1472, !424}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1385)
!1385 = !{!1386, !1405, !1409, !1413, !1426, !1431, !1435, !1439, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1384, file: !111, line: 365, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!107, !1390, !144}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1403, !1404}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1392, file: !120, line: 380, baseType: !123, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1392, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1392, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1392, file: !120, line: 386, baseType: !1398, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1399, file: !120, line: 359, baseType: !133, size: 8)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1399, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1392, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1392, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1384, file: !111, line: 366, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1390, !134}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1384, file: !111, line: 374, baseType: !1410, size: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!107, !1390}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1384, file: !111, line: 377, baseType: !1414, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!107, !1390, !1417}
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424, !1425}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1419, file: !111, line: 123, baseType: !162, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1419, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1419, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1419, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1419, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1384, file: !111, line: 379, baseType: !1427, size: 32, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!107, !1390, !1430}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1384, file: !111, line: 384, baseType: !1432, size: 32, offset: 160)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!107, !1390, !176, !107}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1384, file: !111, line: 393, baseType: !1436, size: 32, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!107, !1390, !182, !183}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1384, file: !111, line: 402, baseType: !1440, size: 32, offset: 224)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{null, !1390}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1384, file: !111, line: 405, baseType: !1440, size: 32, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1384, file: !111, line: 408, baseType: !1410, size: 32, offset: 288)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1384, file: !111, line: 411, baseType: !1440, size: 32, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1384, file: !111, line: 414, baseType: !1440, size: 32, offset: 352)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1384, file: !111, line: 417, baseType: !1410, size: 32, offset: 384)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1384, file: !111, line: 420, baseType: !1410, size: 32, offset: 416)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1384, file: !111, line: 423, baseType: !1440, size: 32, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1384, file: !111, line: 426, baseType: !1440, size: 32, offset: 480)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1384, file: !111, line: 429, baseType: !1410, size: 32, offset: 512)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1384, file: !111, line: 432, baseType: !1410, size: 32, offset: 544)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1384, file: !111, line: 435, baseType: !1454, size: 32, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{null, !1390, !1457, !102}
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !1390, !102}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 505, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 496, size: 224, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1463, file: !279, line: 498, baseType: !283, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1463, file: !279, line: 499, baseType: !283, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1463, file: !279, line: 500, baseType: !283, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1463, file: !279, line: 501, baseType: !283, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1463, file: !279, line: 502, baseType: !283, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1463, file: !279, line: 503, baseType: !283, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1463, file: !279, line: 504, baseType: !283, size: 32, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !876, line: 100, size: 224, elements: !1475)
!1475 = !{!1476, !1481, !1482, !1491, !1496, !1501, !1506}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1474, file: !876, line: 101, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !876, line: 76, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!107, !1390, !949}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1474, file: !876, line: 102, baseType: !1477, size: 32, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1474, file: !876, line: 103, baseType: !1483, size: 32, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !876, line: 83, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!107, !1390, !949, !1487, !102}
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !876, line: 72, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{null, !1390, !949, !102}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1474, file: !876, line: 104, baseType: !1492, size: 32, offset: 96)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !876, line: 79, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!107, !1390, !949, !907}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1474, file: !876, line: 105, baseType: !1497, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !876, line: 88, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!875, !1390, !949}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1474, file: !876, line: 106, baseType: !1502, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !876, line: 92, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!107, !1390, !949, !975}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1474, file: !876, line: 107, baseType: !1507, size: 32, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !876, line: 96, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!107, !1390, !949, !102}
!1511 = !{!1512, !1515, !1517, !1524, !1526, !1528, !1530, !1532, !1344, !1534, !1542, !1565, !1568, !1571, !1582, !1584, !1593, !1612, !1614, !1616, !1618, !1620, !1625}
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1228, isLocal: false, isDefinition: true, align: 16)
!1514 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1391, isLocal: false, isDefinition: true, align: 32)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1519, isLocal: true, isDefinition: true, align: 32)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1521)
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1520, file: !307, line: 60, baseType: !1410, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1520, file: !307, line: 65, baseType: !1390, size: 32, offset: 32)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1228, isLocal: false, isDefinition: true, align: 16)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1391, isLocal: false, isDefinition: true, align: 32)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1519, isLocal: true, isDefinition: true, align: 32)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1399, isLocal: true, isDefinition: true, align: 8)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1399, isLocal: true, isDefinition: true, align: 8)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1346, file: !1514, line: 1914, type: !1536, isLocal: true, isDefinition: true)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 64, elements: !499)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !903, line: 343, size: 64, elements: !1539)
!1539 = !{!1540, !1541}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1538, file: !903, line: 344, baseType: !162, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1538, file: !903, line: 345, baseType: !162, size: 32, offset: 32)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1546, line: 60, size: 64, elements: !1547)
!1546 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1547 = !{!1548, !1564}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1545, file: !1546, line: 69, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1546, line: 50, size: 64, elements: !1552)
!1552 = !{!1553, !1562, !1563}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1551, file: !1546, line: 52, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1557, line: 37, baseType: !1558)
!1557 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1557, line: 32, size: 64, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1558, file: !1557, line: 34, baseType: !162, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1558, file: !1557, line: 36, baseType: !162, size: 32, offset: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1551, file: !1546, line: 54, baseType: !133, size: 8, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1551, file: !1546, line: 56, baseType: !133, size: 8, offset: 40)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1545, file: !1546, line: 71, baseType: !133, size: 8, offset: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1567, isLocal: true, isDefinition: true)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1550, size: 64, elements: !499)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1346, file: !1514, line: 1914, type: !1570, isLocal: true, isDefinition: true)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1555, size: 128, elements: !402)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1573, file: !1514, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1573 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1514, file: !1514, line: 1914, type: !1441, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !1574)
!1574 = !{!1575}
!1575 = !DILocalVariable(name: "dev", arg: 1, scope: !1573, file: !1514, line: 1914, type: !1390)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1576, file: !10, line: 55, baseType: !816, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1576, file: !10, line: 57, baseType: !816, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1576, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1576, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1346, file: !1514, line: 1539, type: !1383, isLocal: true, isDefinition: true)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1346, file: !1514, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1587, line: 74, size: 128, elements: !1588)
!1587 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1588 = !{!1589, !1590, !1591, !1592}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1586, file: !1587, line: 76, baseType: !162, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1586, file: !1587, line: 78, baseType: !1390, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1586, file: !1587, line: 80, baseType: !1457, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1586, file: !1587, line: 81, baseType: !102, size: 32, offset: 96)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1346, file: !1514, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1587, line: 22, size: 256, elements: !1597)
!1597 = !{!1598, !1599, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1610}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1596, file: !1587, line: 24, baseType: !1461, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1596, file: !1587, line: 26, baseType: !1600, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1596, file: !1587, line: 28, baseType: !252, size: 32, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1596, file: !1587, line: 30, baseType: !136, size: 8, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1596, file: !1587, line: 32, baseType: !107, size: 32, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1596, file: !1587, line: 34, baseType: !136, size: 8, offset: 160)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1596, file: !1587, line: 36, baseType: !136, size: 8, offset: 168)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1596, file: !1587, line: 38, baseType: !136, size: 8, offset: 176)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1596, file: !1587, line: 40, baseType: !136, size: 8, offset: 184)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1596, file: !1587, line: 41, baseType: !1609, size: 32, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1596, file: !1587, line: 44, baseType: !1611, size: 32, offset: 224)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1440)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1346, file: !1514, line: 1914, type: !1536, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1567, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1346, file: !1514, line: 1914, type: !1570, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1622, file: !1514, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1622 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1514, file: !1514, line: 1914, type: !1441, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !1623)
!1623 = !{!1624}
!1624 = !DILocalVariable(name: "dev", arg: 1, scope: !1622, file: !1514, line: 1914, type: !1390)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1346, file: !1514, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1629, file: !1707, line: 65, type: !283, isLocal: true, isDefinition: true)
!1629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1631, retainedTypes: !1632, globals: !1704, splitDebugInlining: false, nameTableKind: None)
!1630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1631 = !{!687}
!1632 = !{!103, !1633, !816, !133, !162, !1641, !1672}
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !510, line: 712, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 706, size: 128, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1635, file: !510, line: 708, baseType: !283, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1635, file: !510, line: 709, baseType: !283, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1635, file: !510, line: 710, baseType: !283, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1635, file: !510, line: 711, baseType: !514, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !510, line: 360, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 345, size: 28704, elements: !1644)
!1644 = !{!1645, !1647, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1662, !1667, !1671}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1643, file: !510, line: 347, baseType: !1646, size: 256)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1229)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1643, file: !510, line: 348, baseType: !1648, size: 768, offset: 256)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 24)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1643, file: !510, line: 349, baseType: !1646, size: 256, offset: 1024)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1643, file: !510, line: 350, baseType: !1648, size: 768, offset: 1280)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1643, file: !510, line: 351, baseType: !1646, size: 256, offset: 2048)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1643, file: !510, line: 352, baseType: !1648, size: 768, offset: 2304)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1643, file: !510, line: 353, baseType: !1646, size: 256, offset: 3072)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1643, file: !510, line: 354, baseType: !1648, size: 768, offset: 3328)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1643, file: !510, line: 355, baseType: !1646, size: 256, offset: 4096)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1643, file: !510, line: 356, baseType: !1659, size: 1792, offset: 4352)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1660)
!1660 = !{!1661}
!1661 = !DISubrange(count: 56)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1643, file: !510, line: 357, baseType: !1663, size: 1920, offset: 6144)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 1920, elements: !1665)
!1664 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1665 = !{!1666}
!1666 = !DISubrange(count: 240)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1643, file: !510, line: 358, baseType: !1668, size: 20608, offset: 8064)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 644)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1643, file: !510, line: 359, baseType: !283, size: 32, offset: 28672)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1695, !1696, !1697, !1699, !1701, !1703}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1674, file: !510, line: 381, baseType: !514, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1674, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1674, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1674, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1674, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1674, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1674, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 96, elements: !1684)
!1684 = !{!1685}
!1685 = !DISubrange(count: 12)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1674, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1674, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1674, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1674, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1674, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1674, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1674, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1674, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 64, elements: !402)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1674, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1674, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1674, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 128, elements: !758)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1674, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 160, elements: !1264)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1674, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1264)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1674, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!1704 = !{!1705, !1731, !1734, !1736, !1738, !1627}
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1629, file: !1707, line: 285, type: !1708, isLocal: true, isDefinition: true, align: 32)
!1707 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1710)
!1710 = !{!1711, !1730}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1709, file: !307, line: 60, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!107, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1728, !1729}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1717, file: !120, line: 380, baseType: !123, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1717, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1717, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1717, file: !120, line: 386, baseType: !1723, size: 32, offset: 96)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1725)
!1725 = !{!1726, !1727}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1724, file: !120, line: 359, baseType: !133, size: 8)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1724, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1717, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1717, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1709, file: !307, line: 65, baseType: !1715, size: 32, offset: 32)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "lock", scope: !1629, file: !1707, line: 34, type: !1733, isLocal: true, isDefinition: true)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "last_load", scope: !1629, file: !1707, line: 36, type: !162, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1629, file: !1707, line: 48, type: !162, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1629, file: !1707, line: 54, type: !162, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1742, file: !1823, line: 22, type: !1825, isLocal: true, isDefinition: true)
!1742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !578, retainedTypes: !1744, globals: !1820, splitDebugInlining: false, nameTableKind: None)
!1743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1744 = !{!1745, !1809, !1814, !626, !585, !579, !1819, !102}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !580, line: 523, size: 288, elements: !1748)
!1748 = !{!1749, !1768, !1772, !1776, !1780, !1781, !1782, !1786, !1805}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1747, file: !580, line: 524, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!107, !1753, !614, !615}
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1766, !1767}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1755, file: !120, line: 380, baseType: !123, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1755, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1755, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1755, file: !120, line: 386, baseType: !1761, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1763)
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1762, file: !120, line: 359, baseType: !133, size: 8)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1762, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1755, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1755, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1747, file: !580, line: 530, baseType: !1769, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!107, !1753, !620}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1747, file: !580, line: 532, baseType: !1773, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!107, !1753, !626, !621}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1747, file: !580, line: 535, baseType: !1777, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!107, !1753, !626}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1747, file: !580, line: 537, baseType: !1777, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1747, file: !580, line: 539, baseType: !1777, size: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1747, file: !580, line: 541, baseType: !1783, size: 32, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!107, !1753, !614, !579, !585}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1747, file: !580, line: 544, baseType: !1787, size: 32, offset: 224)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!107, !1753, !1790, !136}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !580, line: 478, size: 96, elements: !1792)
!1792 = !{!1793, !1799, !1804}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1791, file: !580, line: 482, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !646, line: 33, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !646, line: 29, size: 32, elements: !1796)
!1796 = !{!1797}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1795, file: !646, line: 30, baseType: !1798, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1791, file: !580, line: 485, baseType: !1800, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !580, line: 464, baseType: !1801)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{null, !1753, !1790, !626}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1791, file: !580, line: 493, baseType: !626, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1747, file: !580, line: 547, baseType: !1806, size: 32, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!162, !1753}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !580, line: 428, size: 32, elements: !1812)
!1812 = !{!1813}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1811, file: !580, line: 434, baseType: !626, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !580, line: 441, size: 32, elements: !1817)
!1817 = !{!1818}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1816, file: !580, line: 447, baseType: !626, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1820 = !{!1821, !1740}
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1822 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1742, file: !1823, line: 37, type: !1824, isLocal: true, isDefinition: true)
!1823 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 352, elements: !844)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1829, file: !1853, line: 129, type: !1860, isLocal: false, isDefinition: true)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1831, globals: !1850, splitDebugInlining: false, nameTableKind: None)
!1830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1831 = !{!1832}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1834, file: !279, line: 372, baseType: !283, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1834, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1834, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1834, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1834, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1834, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1834, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1834, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1834, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1834, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1834, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1834, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1834, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1834, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!1850 = !{!1851, !1854, !1857, !1827}
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression())
!1852 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1829, file: !1853, line: 126, type: !162, isLocal: false, isDefinition: true)
!1853 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1829, file: !1853, line: 127, type: !1856, isLocal: false, isDefinition: true)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 72, elements: !1246)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1829, file: !1853, line: 128, type: !1859, isLocal: false, isDefinition: true)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !802)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1229)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1863, file: !1866, line: 23, type: !183, isLocal: false, isDefinition: true)
!1863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!1864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1865 = !{!1861}
!1866 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1869, file: !1873, line: 86, type: !2119, isLocal: false, isDefinition: true, align: 512)
!1869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1871, retainedTypes: !1880, globals: !1953, splitDebugInlining: false, nameTableKind: None)
!1870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!1871 = !{!1872, !30, !687}
!1872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1873, line: 63, baseType: !32, size: 32, elements: !1874)
!1873 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1874 = !{!1875, !1876, !1877, !1878, !1879}
!1875 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1876 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1877 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1878 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1879 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1880 = !{!252, !102, !107, !1881, !256, !162, !1911, !816, !133, !1936}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1884, line: 51, size: 64, elements: !1885)
!1884 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1885 = !{!1886, !1906}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1883, file: !1884, line: 52, baseType: !1887, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1884, line: 38, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!107, !1891, !182, !424}
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1904, !1905}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1893, file: !120, line: 380, baseType: !123, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1893, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1893, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1893, file: !120, line: 386, baseType: !1899, size: 32, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1900, file: !120, line: 359, baseType: !133, size: 8)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1900, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1893, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1893, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1883, file: !1884, line: 53, baseType: !1907, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1884, line: 47, baseType: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!107, !1891, !182, !424, !162}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1913, file: !510, line: 381, baseType: !514, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1913, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1913, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1913, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1913, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1913, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1913, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1913, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1913, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1913, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1913, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1913, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1913, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1913, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1913, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1913, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1913, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1913, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1913, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1913, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1913, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !510, line: 360, baseType: !1938)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 345, size: 28704, elements: !1939)
!1939 = !{!1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1938, file: !510, line: 347, baseType: !1646, size: 256)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1938, file: !510, line: 348, baseType: !1648, size: 768, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1938, file: !510, line: 349, baseType: !1646, size: 256, offset: 1024)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1938, file: !510, line: 350, baseType: !1648, size: 768, offset: 1280)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1938, file: !510, line: 351, baseType: !1646, size: 256, offset: 2048)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1938, file: !510, line: 352, baseType: !1648, size: 768, offset: 2304)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1938, file: !510, line: 353, baseType: !1646, size: 256, offset: 3072)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1938, file: !510, line: 354, baseType: !1648, size: 768, offset: 3328)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1938, file: !510, line: 355, baseType: !1646, size: 256, offset: 4096)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1938, file: !510, line: 356, baseType: !1659, size: 1792, offset: 4352)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1938, file: !510, line: 357, baseType: !1663, size: 1920, offset: 6144)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1938, file: !510, line: 358, baseType: !1668, size: 20608, offset: 8064)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1938, file: !510, line: 359, baseType: !283, size: 32, offset: 28672)
!1953 = !{!1954, !2076, !2085, !2087, !1867, !2090, !2092, !2096}
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "_kernel", scope: !1869, file: !1873, line: 40, type: !1956, isLocal: false, isDefinition: true)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !1957)
!1957 = !{!1958, !2071}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1956, file: !228, line: 159, baseType: !1959, size: 192)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 192, elements: !499)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !1961)
!1961 = !{!1962, !1963, !1964, !2065, !2066, !2067, !2068}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1960, file: !228, line: 102, baseType: !162, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1960, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1960, file: !228, line: 108, baseType: !1965, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !1967)
!1967 = !{!1968, !2026, !2038, !2039, !2040, !2041, !2047, !2060}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1966, file: !372, line: 247, baseType: !1969, size: 384)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !1970)
!1970 = !{!1971, !1995, !2002, !2003, !2004, !2013, !2014, !2015}
!1971 = !DIDerivedType(tag: DW_TAG_member, scope: !1969, file: !372, line: 60, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1969, file: !372, line: 60, size: 64, elements: !1973)
!1973 = !{!1974, !1989}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1972, file: !372, line: 61, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !1977)
!1977 = !{!1978, !1984}
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1976, file: !233, line: 38, baseType: !1979, size: 32)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1976, file: !233, line: 38, size: 32, elements: !1980)
!1980 = !{!1981, !1983}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1979, file: !233, line: 39, baseType: !1982, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1979, file: !233, line: 40, baseType: !1982, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, scope: !1976, file: !233, line: 42, baseType: !1985, size: 32, offset: 32)
!1985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1976, file: !233, line: 42, size: 32, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1985, file: !233, line: 43, baseType: !1982, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1985, file: !233, line: 44, baseType: !1982, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1972, file: !372, line: 62, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !1991)
!1991 = !{!1992}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1990, file: !397, line: 50, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1994, size: 64, elements: !402)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1969, file: !372, line: 68, baseType: !1996, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !1999)
!1999 = !{!2000}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1998, file: !228, line: 232, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !1976)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1969, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1969, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!2004 = !DIDerivedType(tag: DW_TAG_member, scope: !1969, file: !372, line: 90, baseType: !2005, size: 16, offset: 112)
!2005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1969, file: !372, line: 90, size: 16, elements: !2006)
!2006 = !{!2007, !2012}
!2007 = !DIDerivedType(tag: DW_TAG_member, scope: !2005, file: !372, line: 91, baseType: !2008, size: 16)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2005, file: !372, line: 91, size: 16, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2008, file: !372, line: 96, baseType: !420, size: 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2008, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2005, file: !372, line: 100, baseType: !424, size: 16)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1969, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1969, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1969, file: !372, line: 131, baseType: !2016, size: 192, offset: 192)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2017)
!2017 = !{!2018, !2019, !2025}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2016, file: !228, line: 245, baseType: !1975, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2016, file: !228, line: 246, baseType: !2020, size: 32, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 32)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{null, !2024}
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2016, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1966, file: !372, line: 250, baseType: !2027, size: 288, offset: 384)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !2028)
!2028 = !{!2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2027, file: !441, line: 26, baseType: !162, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2027, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2027, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2027, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2027, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2027, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2027, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2027, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2027, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1966, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1966, file: !372, line: 256, baseType: !1997, size: 64, offset: 704)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1966, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1966, file: !372, line: 300, baseType: !2042, size: 96, offset: 800)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !2043)
!2043 = !{!2044, !2045, !2046}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2042, file: !372, line: 153, baseType: !22, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2042, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2042, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1966, file: !372, line: 325, baseType: !2048, size: 32, offset: 896)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2050)
!2050 = !{!2051, !2057, !2058}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2049, file: !224, line: 5074, baseType: !2052, size: 96)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2053)
!2053 = !{!2054, !2055, !2056}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2052, file: !467, line: 57, baseType: !470, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2052, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2052, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2049, file: !224, line: 5075, baseType: !1997, size: 64, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2049, file: !224, line: 5076, baseType: !2059, offset: 160)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1966, file: !372, line: 343, baseType: !2061, size: 64, offset: 928)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2061, file: !441, line: 63, baseType: !162, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2061, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1960, file: !228, line: 111, baseType: !1965, size: 32, offset: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1960, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1960, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1960, file: !228, line: 153, baseType: !2069, offset: 168)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2070, line: 33, elements: !250)
!2070 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1956, file: !228, line: 170, baseType: !2072, size: 96, offset: 192)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2073)
!2073 = !{!2074, !2075}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2072, file: !228, line: 86, baseType: !1965, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2072, file: !228, line: 90, baseType: !2001, size: 64, offset: 32)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression())
!2077 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1869, file: !1873, line: 43, type: !2078, isLocal: false, isDefinition: true, align: 512)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2079, size: 8704, elements: !2083)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2080, line: 47, size: 8, elements: !2081)
!2080 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2079, file: !2080, line: 48, baseType: !125, size: 8)
!2083 = !{!2084}
!2084 = !DISubrange(count: 1088)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1869, file: !1873, line: 44, type: !1966, isLocal: false, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1869, file: !1873, line: 48, type: !2089, isLocal: false, isDefinition: true)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1966, size: 1024, elements: !499)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1869, file: !1873, line: 217, type: !136, isLocal: false, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1869, file: !1873, line: 50, type: !2094, isLocal: true, isDefinition: true, align: 512)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2079, size: 2560, elements: !2095)
!2095 = !{!500, !215}
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "levels", scope: !2098, file: !1873, line: 232, type: !2118, isLocal: true, isDefinition: true)
!2098 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1873, file: !1873, line: 230, type: !2099, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !2101)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !1872}
!2101 = !{!2102, !2103, !2113, !2117}
!2102 = !DILocalVariable(name: "level", arg: 1, scope: !2098, file: !1873, line: 230, type: !1872)
!2103 = !DILocalVariable(name: "entry", scope: !2098, file: !1873, line: 244, type: !2104)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !2107)
!2107 = !{!2108, !2112}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2106, file: !307, line: 60, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!107, !1891}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2106, file: !307, line: 65, baseType: !1891, size: 32, offset: 32)
!2113 = !DILocalVariable(name: "dev", scope: !2114, file: !1873, line: 247, type: !1891)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !1873, line: 246, column: 64)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !1873, line: 246, column: 2)
!2116 = distinct !DILexicalBlock(scope: !2098, file: !1873, line: 246, column: 2)
!2117 = !DILocalVariable(name: "rc", scope: !2114, file: !1873, line: 248, type: !107)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2104, size: 192, elements: !1255)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2079, size: 16896, elements: !2120)
!2120 = !{!500, !2121}
!2121 = !DISubrange(count: 2112)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "states_str", scope: !2124, file: !2125, line: 276, type: !2248, isLocal: true, isDefinition: true)
!2124 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2125, file: !2125, line: 271, type: !2126, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !2239)
!2125 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!123, !2128, !256, !252}
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !372, line: 347, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !2131)
!2131 = !{!2132, !2190, !2202, !2203, !2204, !2205, !2211, !2224}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2130, file: !372, line: 247, baseType: !2133, size: 384)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !2134)
!2134 = !{!2135, !2159, !2166, !2167, !2168, !2177, !2178, !2179}
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !372, line: 60, baseType: !2136, size: 64)
!2136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2133, file: !372, line: 60, size: 64, elements: !2137)
!2137 = !{!2138, !2153}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2136, file: !372, line: 61, baseType: !2139, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2140)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2141)
!2141 = !{!2142, !2148}
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !233, line: 38, baseType: !2143, size: 32)
!2143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2140, file: !233, line: 38, size: 32, elements: !2144)
!2144 = !{!2145, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2143, file: !233, line: 39, baseType: !2146, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2143, file: !233, line: 40, baseType: !2146, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !233, line: 42, baseType: !2149, size: 32, offset: 32)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2140, file: !233, line: 42, size: 32, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2149, file: !233, line: 43, baseType: !2146, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2149, file: !233, line: 44, baseType: !2146, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2136, file: !372, line: 62, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !2155)
!2155 = !{!2156}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2154, file: !397, line: 50, baseType: !2157, size: 64)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 64, elements: !402)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2133, file: !372, line: 68, baseType: !2160, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2163)
!2163 = !{!2164}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2162, file: !228, line: 232, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2140)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2133, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2133, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!2168 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !372, line: 90, baseType: !2169, size: 16, offset: 112)
!2169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2133, file: !372, line: 90, size: 16, elements: !2170)
!2170 = !{!2171, !2176}
!2171 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !372, line: 91, baseType: !2172, size: 16)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2169, file: !372, line: 91, size: 16, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2172, file: !372, line: 96, baseType: !420, size: 8)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2172, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2169, file: !372, line: 100, baseType: !424, size: 16)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2133, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2133, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2133, file: !372, line: 131, baseType: !2180, size: 192, offset: 192)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2181)
!2181 = !{!2182, !2183, !2189}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2180, file: !228, line: 245, baseType: !2139, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2180, file: !228, line: 246, baseType: !2184, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{null, !2188}
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2180, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2130, file: !372, line: 250, baseType: !2191, size: 288, offset: 384)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !2192)
!2192 = !{!2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2191, file: !441, line: 26, baseType: !162, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2191, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2191, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2191, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2191, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2191, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2191, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2191, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2191, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2130, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2130, file: !372, line: 256, baseType: !2161, size: 64, offset: 704)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2130, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2130, file: !372, line: 300, baseType: !2206, size: 96, offset: 800)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !2207)
!2207 = !{!2208, !2209, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2206, file: !372, line: 153, baseType: !22, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2206, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2206, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2130, file: !372, line: 325, baseType: !2212, size: 32, offset: 896)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2214)
!2214 = !{!2215, !2221, !2222}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2213, file: !224, line: 5074, baseType: !2216, size: 96)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2217)
!2217 = !{!2218, !2219, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2216, file: !467, line: 57, baseType: !470, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2216, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2216, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2213, file: !224, line: 5075, baseType: !2161, size: 64, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2213, file: !224, line: 5076, baseType: !2223, offset: 160)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2130, file: !372, line: 343, baseType: !2225, size: 64, offset: 928)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !2226)
!2226 = !{!2227, !2228}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2225, file: !441, line: 63, baseType: !162, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2225, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!2229 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2230, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2231, globals: !2235, splitDebugInlining: false, nameTableKind: None)
!2230 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2231 = !{!102, !123, !103, !133, !107, !2232, !24, !252, !256, !22, !162, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2234)
!2234 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2235 = !{!2122, !2236}
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "states_sz", scope: !2124, file: !2125, line: 279, type: !2238, isLocal: true, isDefinition: true)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 256, elements: !1229)
!2239 = !{!2240, !2241, !2242, !2243, !2244, !2245, !2246}
!2240 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2124, file: !2125, line: 271, type: !2128)
!2241 = !DILocalVariable(name: "buf", arg: 2, scope: !2124, file: !2125, line: 271, type: !256)
!2242 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2124, file: !2125, line: 271, type: !252)
!2243 = !DILocalVariable(name: "off", scope: !2124, file: !2125, line: 273, type: !252)
!2244 = !DILocalVariable(name: "bit", scope: !2124, file: !2125, line: 274, type: !133)
!2245 = !DILocalVariable(name: "thread_state", scope: !2124, file: !2125, line: 275, type: !133)
!2246 = !DILocalVariable(name: "index", scope: !2247, file: !2125, line: 293, type: !133)
!2247 = distinct !DILexicalBlock(scope: !2124, file: !2125, line: 293, column: 2)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1229)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2251, file: !2359, line: 56, type: !2348, isLocal: false, isDefinition: true)
!2251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2253, globals: !2356, splitDebugInlining: false, nameTableKind: None)
!2252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2253 = !{!2254, !256, !102, !2354, !182, !103, !816, !107, !162, !2233, !2355}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !2256)
!2256 = !{!2257, !2315, !2327, !2328, !2329, !2330, !2336, !2349}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2255, file: !372, line: 247, baseType: !2258, size: 384)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !2259)
!2259 = !{!2260, !2284, !2291, !2292, !2293, !2302, !2303, !2304}
!2260 = !DIDerivedType(tag: DW_TAG_member, scope: !2258, file: !372, line: 60, baseType: !2261, size: 64)
!2261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2258, file: !372, line: 60, size: 64, elements: !2262)
!2262 = !{!2263, !2278}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2261, file: !372, line: 61, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2266)
!2266 = !{!2267, !2273}
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2265, file: !233, line: 38, baseType: !2268, size: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2265, file: !233, line: 38, size: 32, elements: !2269)
!2269 = !{!2270, !2272}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2268, file: !233, line: 39, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2268, file: !233, line: 40, baseType: !2271, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2265, file: !233, line: 42, baseType: !2274, size: 32, offset: 32)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2265, file: !233, line: 42, size: 32, elements: !2275)
!2275 = !{!2276, !2277}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2274, file: !233, line: 43, baseType: !2271, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2274, file: !233, line: 44, baseType: !2271, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2261, file: !372, line: 62, baseType: !2279, size: 64)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2279, file: !397, line: 50, baseType: !2282, size: 64)
!2282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2283, size: 64, elements: !402)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2258, file: !372, line: 68, baseType: !2285, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2287)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2288)
!2288 = !{!2289}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2287, file: !228, line: 232, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2265)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2258, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2258, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!2293 = !DIDerivedType(tag: DW_TAG_member, scope: !2258, file: !372, line: 90, baseType: !2294, size: 16, offset: 112)
!2294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2258, file: !372, line: 90, size: 16, elements: !2295)
!2295 = !{!2296, !2301}
!2296 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !372, line: 91, baseType: !2297, size: 16)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2294, file: !372, line: 91, size: 16, elements: !2298)
!2298 = !{!2299, !2300}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2297, file: !372, line: 96, baseType: !420, size: 8)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2297, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2294, file: !372, line: 100, baseType: !424, size: 16)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2258, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2258, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2258, file: !372, line: 131, baseType: !2305, size: 192, offset: 192)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2306)
!2306 = !{!2307, !2308, !2314}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2305, file: !228, line: 245, baseType: !2264, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2305, file: !228, line: 246, baseType: !2309, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{null, !2313}
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2305, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2255, file: !372, line: 250, baseType: !2316, size: 288, offset: 384)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2316, file: !441, line: 26, baseType: !162, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2316, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2316, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2316, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2316, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2316, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2316, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2316, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2316, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2255, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2255, file: !372, line: 256, baseType: !2286, size: 64, offset: 704)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2255, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2255, file: !372, line: 300, baseType: !2331, size: 96, offset: 800)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !2332)
!2332 = !{!2333, !2334, !2335}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2331, file: !372, line: 153, baseType: !22, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2331, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2331, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2255, file: !372, line: 325, baseType: !2337, size: 32, offset: 896)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2339)
!2339 = !{!2340, !2346, !2347}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2338, file: !224, line: 5074, baseType: !2341, size: 96)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2342)
!2342 = !{!2343, !2344, !2345}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2341, file: !467, line: 57, baseType: !470, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2341, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2341, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2338, file: !224, line: 5075, baseType: !2286, size: 64, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2338, file: !224, line: 5076, baseType: !2348, offset: 160)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2255, file: !372, line: 343, baseType: !2350, size: 64, offset: 928)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !2351)
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2350, file: !441, line: 63, baseType: !162, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2350, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2356 = !{!2249, !2357, !2360, !2362}
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2251, file: !2359, line: 404, type: !107, isLocal: true, isDefinition: true)
!2359 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2251, file: !2359, line: 405, type: !107, isLocal: true, isDefinition: true)
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "pending_current", scope: !2251, file: !2359, line: 425, type: !2254, isLocal: true, isDefinition: true)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2366, file: !2396, line: 15, type: !2233, isLocal: true, isDefinition: true)
!2366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2368, globals: !2393, splitDebugInlining: false, nameTableKind: None)
!2367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2368 = !{!103, !102, !816, !162, !2233, !107, !2369, !256, !105}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2371)
!2371 = !{!2372, !2387, !2392}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2370, file: !228, line: 245, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2374)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2375)
!2375 = !{!2376, !2382}
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2374, file: !233, line: 38, baseType: !2377, size: 32)
!2377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2374, file: !233, line: 38, size: 32, elements: !2378)
!2378 = !{!2379, !2381}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2377, file: !233, line: 39, baseType: !2380, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2377, file: !233, line: 40, baseType: !2380, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, scope: !2374, file: !233, line: 42, baseType: !2383, size: 32, offset: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2374, file: !233, line: 42, size: 32, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2383, file: !233, line: 43, baseType: !2380, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2383, file: !233, line: 44, baseType: !2380, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2370, file: !228, line: 246, baseType: !2388, size: 32, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2389)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{null, !2369}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2370, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2393 = !{!2364, !2394, !2398, !2400}
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2366, file: !2396, line: 19, type: !2397, isLocal: true, isDefinition: true)
!2396 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2366, file: !2396, line: 25, type: !107, isLocal: true, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2366, file: !2396, line: 17, type: !2402, isLocal: true, isDefinition: true)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2374)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2405, file: !2424, line: 55, type: !2425, isLocal: true, isDefinition: true, align: 32)
!2405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2407, globals: !2423, splitDebugInlining: false, nameTableKind: None)
!2406 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2407 = !{!102, !103, !107, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2411)
!2411 = !{!2412, !2418}
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !233, line: 38, baseType: !2413, size: 32)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !233, line: 38, size: 32, elements: !2414)
!2414 = !{!2415, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2413, file: !233, line: 39, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2413, file: !233, line: 40, baseType: !2416, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !233, line: 42, baseType: !2419, size: 32, offset: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !233, line: 42, size: 32, elements: !2420)
!2420 = !{!2421, !2422}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2419, file: !233, line: 43, baseType: !2416, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2419, file: !233, line: 44, baseType: !2416, size: 32)
!2423 = !{!2403}
!2424 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !2427)
!2427 = !{!2428, !2435}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2426, file: !307, line: 60, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!107, !2432}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!2434 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !307, line: 48, flags: DIFlagFwdDecl)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2426, file: !307, line: 65, baseType: !2432, size: 32, offset: 32)
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2439, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2439 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2442, retainedTypes: !2450, splitDebugInlining: false, nameTableKind: None)
!2441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2442 = !{!30, !2443}
!2443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2444, line: 54, baseType: !32, size: 32, elements: !2445)
!2444 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2445 = !{!2446, !2447, !2448, !2449}
!2446 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2447 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2448 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2449 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2450 = !{!102, !252, !182, !24, !2451, !22, !2457, !107, !907, !2472}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2444, line: 58, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2444, line: 58, size: 64, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2453, file: !2444, line: 58, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1229)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2444, line: 68, size: 128, elements: !2459)
!2459 = !{!2460, !2463, !2464, !2465}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2458, file: !2444, line: 69, baseType: !2461, size: 64)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2462, size: 64, elements: !402)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2444, line: 61, baseType: !162)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2458, file: !2444, line: 70, baseType: !2462, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2458, file: !2444, line: 71, baseType: !162, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2458, file: !2444, line: 77, baseType: !2466, offset: 128)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2467, elements: !2470)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2444, line: 64, size: 32, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2467, file: !2444, line: 65, baseType: !2462, size: 32)
!2470 = !{!2471}
!2471 = !DISubrange(count: 0)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!2473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2474, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2475, retainedTypes: !2495, splitDebugInlining: false, nameTableKind: None)
!2474 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2475 = !{!2476, !2484}
!2476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2477, line: 69, baseType: !32, size: 32, elements: !2478)
!2477 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2478 = !{!2479, !2480, !2481, !2482, !2483}
!2479 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2480 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2481 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2482 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2483 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2477, line: 56, baseType: !32, size: 32, elements: !2485)
!2485 = !{!2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494}
!2486 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2487 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2488 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2489 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2490 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2491 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2492 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2493 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2494 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2495 = !{!107, !2476, !2484, !2496, !421, !143, !2498, !2499, !134, !425, !123, !252, !102, !22, !32, !2501, !2502, !2503, !2504, !2505, !106, !2506, !2497, !2507, !2508, !2509, !2510}
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2477, line: 31, baseType: !2497)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2477, line: 32, baseType: !2500)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2234)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2504 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2514, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2515, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2514 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2515 = !{!2516, !30}
!2516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2517, line: 27, baseType: !32, size: 32, elements: !2518)
!2517 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2518 = !{!2519, !2520, !2521, !2522, !2523}
!2519 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2520 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2521 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2522 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2523 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2525, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2526, retainedTypes: !2527, splitDebugInlining: false, nameTableKind: None)
!2525 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2526 = !{!687, !2516, !30}
!2527 = !{!834, !2528, !102, !107, !816, !162, !133, !2545}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !510, line: 360, baseType: !2530)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 345, size: 28704, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2530, file: !510, line: 347, baseType: !1646, size: 256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2530, file: !510, line: 348, baseType: !1648, size: 768, offset: 256)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2530, file: !510, line: 349, baseType: !1646, size: 256, offset: 1024)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2530, file: !510, line: 350, baseType: !1648, size: 768, offset: 1280)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2530, file: !510, line: 351, baseType: !1646, size: 256, offset: 2048)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2530, file: !510, line: 352, baseType: !1648, size: 768, offset: 2304)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2530, file: !510, line: 353, baseType: !1646, size: 256, offset: 3072)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2530, file: !510, line: 354, baseType: !1648, size: 768, offset: 3328)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2530, file: !510, line: 355, baseType: !1646, size: 256, offset: 4096)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2530, file: !510, line: 356, baseType: !1659, size: 1792, offset: 4352)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2530, file: !510, line: 357, baseType: !1663, size: 1920, offset: 6144)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2530, file: !510, line: 358, baseType: !1668, size: 20608, offset: 8064)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2530, file: !510, line: 359, baseType: !283, size: 32, offset: 28672)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2547)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2548)
!2548 = !{!2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2547, file: !510, line: 381, baseType: !514, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2547, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2547, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2547, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2547, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2547, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2547, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2547, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2547, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2547, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2547, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2547, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2547, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2547, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2547, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2547, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2547, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2547, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2547, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2547, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2547, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2573, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2574, splitDebugInlining: false, nameTableKind: None)
!2573 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2574 = !{!102, !107, !22, !2575}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2577)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2577, file: !510, line: 381, baseType: !514, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2577, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2577, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2577, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2577, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2577, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2577, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2577, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2577, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2577, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2577, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2577, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2577, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2577, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2577, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2577, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2577, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2577, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2577, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2577, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2577, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2601, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2602, splitDebugInlining: false, nameTableKind: None)
!2601 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2602 = !{!2603, !102, !107}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2605, file: !510, line: 381, baseType: !514, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2605, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2605, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2605, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2605, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2605, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2605, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2605, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2605, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2605, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2605, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2605, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2605, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2605, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2605, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2605, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2605, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2605, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2605, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2605, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2605, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2630, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2630 = !{!2631, !162, !102, !107}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2633, line: 98, size: 256, elements: !2634)
!2633 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2634 = !{!2635, !2640, !2645, !2650, !2655, !2660, !2665, !2670}
!2635 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 99, baseType: !2636, size: 32)
!2636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 99, size: 32, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2636, file: !2633, line: 99, baseType: !162, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2636, file: !2633, line: 99, baseType: !162, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 100, baseType: !2641, size: 32, offset: 32)
!2641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 100, size: 32, elements: !2642)
!2642 = !{!2643, !2644}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2641, file: !2633, line: 100, baseType: !162, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2641, file: !2633, line: 100, baseType: !162, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 101, baseType: !2646, size: 32, offset: 64)
!2646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 101, size: 32, elements: !2647)
!2647 = !{!2648, !2649}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2646, file: !2633, line: 101, baseType: !162, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2646, file: !2633, line: 101, baseType: !162, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 102, baseType: !2651, size: 32, offset: 96)
!2651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 102, size: 32, elements: !2652)
!2652 = !{!2653, !2654}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2651, file: !2633, line: 102, baseType: !162, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2651, file: !2633, line: 102, baseType: !162, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 103, baseType: !2656, size: 32, offset: 128)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 103, size: 32, elements: !2657)
!2657 = !{!2658, !2659}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2656, file: !2633, line: 103, baseType: !162, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2656, file: !2633, line: 103, baseType: !162, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 104, baseType: !2661, size: 32, offset: 160)
!2661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 104, size: 32, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2661, file: !2633, line: 104, baseType: !162, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2661, file: !2633, line: 104, baseType: !162, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !2633, line: 105, baseType: !2666, size: 32, offset: 192)
!2666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !2633, line: 105, size: 32, elements: !2667)
!2667 = !{!2668, !2669}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2666, file: !2633, line: 105, baseType: !162, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2666, file: !2633, line: 105, baseType: !162, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2632, file: !2633, line: 106, baseType: !162, size: 32, offset: 224)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2515, retainedTypes: !2673, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2673 = !{!2674, !102, !107, !2699, !2472, !162}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2676, file: !510, line: 381, baseType: !514, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2676, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2676, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2676, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2676, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2676, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2676, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2676, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2676, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2676, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2676, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2676, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2676, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2676, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2676, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2676, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2676, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2676, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2676, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2676, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2676, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2633, line: 141, baseType: !2701)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2633, line: 97, size: 256, elements: !2702)
!2702 = !{!2703}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2701, file: !2633, line: 107, baseType: !2704, size: 256)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2633, line: 98, size: 256, elements: !2705)
!2705 = !{!2706, !2711, !2716, !2721, !2726, !2731, !2736, !2741}
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 99, baseType: !2707, size: 32)
!2707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 99, size: 32, elements: !2708)
!2708 = !{!2709, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2707, file: !2633, line: 99, baseType: !162, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2707, file: !2633, line: 99, baseType: !162, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 100, baseType: !2712, size: 32, offset: 32)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 100, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2712, file: !2633, line: 100, baseType: !162, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2712, file: !2633, line: 100, baseType: !162, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 101, baseType: !2717, size: 32, offset: 64)
!2717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 101, size: 32, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2717, file: !2633, line: 101, baseType: !162, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2717, file: !2633, line: 101, baseType: !162, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 102, baseType: !2722, size: 32, offset: 96)
!2722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 102, size: 32, elements: !2723)
!2723 = !{!2724, !2725}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2722, file: !2633, line: 102, baseType: !162, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2722, file: !2633, line: 102, baseType: !162, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 103, baseType: !2727, size: 32, offset: 128)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 103, size: 32, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2727, file: !2633, line: 103, baseType: !162, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2727, file: !2633, line: 103, baseType: !162, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 104, baseType: !2732, size: 32, offset: 160)
!2732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 104, size: 32, elements: !2733)
!2733 = !{!2734, !2735}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2732, file: !2633, line: 104, baseType: !162, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2732, file: !2633, line: 104, baseType: !162, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2633, line: 105, baseType: !2737, size: 32, offset: 192)
!2737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2633, line: 105, size: 32, elements: !2738)
!2738 = !{!2739, !2740}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2737, file: !2633, line: 105, baseType: !162, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2737, file: !2633, line: 105, baseType: !162, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2704, file: !2633, line: 106, baseType: !162, size: 32, offset: 224)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1631, retainedTypes: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2744 = !{!834, !816, !133, !162, !2745, !2762}
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !510, line: 360, baseType: !2747)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 345, size: 28704, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2747, file: !510, line: 347, baseType: !1646, size: 256)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2747, file: !510, line: 348, baseType: !1648, size: 768, offset: 256)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2747, file: !510, line: 349, baseType: !1646, size: 256, offset: 1024)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2747, file: !510, line: 350, baseType: !1648, size: 768, offset: 1280)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2747, file: !510, line: 351, baseType: !1646, size: 256, offset: 2048)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2747, file: !510, line: 352, baseType: !1648, size: 768, offset: 2304)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2747, file: !510, line: 353, baseType: !1646, size: 256, offset: 3072)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2747, file: !510, line: 354, baseType: !1648, size: 768, offset: 3328)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2747, file: !510, line: 355, baseType: !1646, size: 256, offset: 4096)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2747, file: !510, line: 356, baseType: !1659, size: 1792, offset: 4352)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2747, file: !510, line: 357, baseType: !1663, size: 1920, offset: 6144)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2747, file: !510, line: 358, baseType: !1668, size: 20608, offset: 8064)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2747, file: !510, line: 359, baseType: !283, size: 32, offset: 28672)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2764, file: !510, line: 381, baseType: !514, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2764, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2764, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2764, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2764, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2764, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2764, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2764, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2764, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2764, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2764, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2764, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2764, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2764, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2764, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2764, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2764, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2764, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2764, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2764, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2764, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2788, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2789, splitDebugInlining: false, nameTableKind: None)
!2788 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2789 = !{!2790, !102, !107}
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !510, line: 402, baseType: !2792)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 379, size: 1120, elements: !2793)
!2793 = !{!2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2792, file: !510, line: 381, baseType: !514, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2792, file: !510, line: 382, baseType: !283, size: 32, offset: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2792, file: !510, line: 383, baseType: !283, size: 32, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2792, file: !510, line: 384, baseType: !283, size: 32, offset: 96)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2792, file: !510, line: 385, baseType: !283, size: 32, offset: 128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2792, file: !510, line: 386, baseType: !283, size: 32, offset: 160)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2792, file: !510, line: 387, baseType: !1683, size: 96, offset: 192)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2792, file: !510, line: 388, baseType: !283, size: 32, offset: 288)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2792, file: !510, line: 389, baseType: !283, size: 32, offset: 320)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2792, file: !510, line: 390, baseType: !283, size: 32, offset: 352)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2792, file: !510, line: 391, baseType: !283, size: 32, offset: 384)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2792, file: !510, line: 392, baseType: !283, size: 32, offset: 416)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2792, file: !510, line: 393, baseType: !283, size: 32, offset: 448)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2792, file: !510, line: 394, baseType: !283, size: 32, offset: 480)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2792, file: !510, line: 395, baseType: !1694, size: 64, offset: 512)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2792, file: !510, line: 396, baseType: !514, size: 32, offset: 576)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2792, file: !510, line: 397, baseType: !514, size: 32, offset: 608)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2792, file: !510, line: 398, baseType: !1698, size: 128, offset: 640)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2792, file: !510, line: 399, baseType: !1700, size: 160, offset: 768)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2792, file: !510, line: 400, baseType: !1702, size: 160, offset: 928)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2792, file: !510, line: 401, baseType: !283, size: 32, offset: 1088)
!2815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2816, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2817, splitDebugInlining: false, nameTableKind: None)
!2816 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2817 = !{!125, !256, !252, !144, !2818, !134, !102}
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2822, splitDebugInlining: false, nameTableKind: None)
!2821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2822 = !{!2823}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2825, file: !279, line: 372, baseType: !283, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2825, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2825, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2825, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2825, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2825, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2825, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2825, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2825, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2825, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2825, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2825, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2825, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2825, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!2841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2845, retainedTypes: !2861, splitDebugInlining: false, nameTableKind: None)
!2844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2845 = !{!2846, !2853, !2857}
!2846 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2847, line: 39, baseType: !32, size: 32, elements: !2848)
!2847 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2848 = !{!2849, !2850, !2851, !2852}
!2849 = !DIEnumerator(name: "HAL_OK", value: 0)
!2850 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2851 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2852 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2853 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !871, line: 183, baseType: !32, size: 32, elements: !2854)
!2854 = !{!2855, !2856}
!2855 = !DIEnumerator(name: "DISABLE", value: 0)
!2856 = !DIEnumerator(name: "ENABLE", value: 1)
!2857 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !871, line: 177, baseType: !32, size: 32, elements: !2858)
!2858 = !{!2859, !2860}
!2859 = !DIEnumerator(name: "RESET", value: 0)
!2860 = !DIEnumerator(name: "SET", value: 1)
!2861 = !{!2862, !102, !162, !133, !2880, !2881, !2887, !424, !2900, !2233, !2913}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2864, file: !279, line: 372, baseType: !283, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2864, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2864, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2864, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2864, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2864, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2864, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2864, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2864, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2864, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2864, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2864, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2864, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2864, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 364, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 64, elements: !2884)
!2884 = !{!2885, !2886}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2883, file: !279, line: 362, baseType: !283, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2883, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 286, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 275, size: 288, elements: !2890)
!2890 = !{!2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2889, file: !279, line: 277, baseType: !283, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2889, file: !279, line: 278, baseType: !283, size: 32, offset: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2889, file: !279, line: 279, baseType: !283, size: 32, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2889, file: !279, line: 280, baseType: !283, size: 32, offset: 96)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2889, file: !279, line: 281, baseType: !283, size: 32, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2889, file: !279, line: 282, baseType: !283, size: 32, offset: 160)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2889, file: !279, line: 283, baseType: !283, size: 32, offset: 192)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2889, file: !279, line: 284, baseType: !283, size: 32, offset: 224)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2889, file: !279, line: 285, baseType: !283, size: 32, offset: 256)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 314, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 303, size: 320, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2902, file: !279, line: 305, baseType: !283, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2902, file: !279, line: 306, baseType: !283, size: 32, offset: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2902, file: !279, line: 307, baseType: !283, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2902, file: !279, line: 308, baseType: !283, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2902, file: !279, line: 309, baseType: !283, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2902, file: !279, line: 310, baseType: !283, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2902, file: !279, line: 311, baseType: !283, size: 32, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2902, file: !279, line: 312, baseType: !283, size: 32, offset: 224)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2902, file: !279, line: 313, baseType: !1175, size: 64, offset: 256)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2916, retainedTypes: !2917, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2916 = !{!870}
!2917 = !{!2918, !162, !2926, !2932, !2945}
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !510, line: 712, baseType: !2920)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 706, size: 128, elements: !2921)
!2921 = !{!2922, !2923, !2924, !2925}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2920, file: !510, line: 708, baseType: !283, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2920, file: !510, line: 709, baseType: !283, size: 32, offset: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2920, file: !510, line: 710, baseType: !283, size: 32, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2920, file: !510, line: 711, baseType: !514, size: 32, offset: 96)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 364, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 360, size: 64, elements: !2929)
!2929 = !{!2930, !2931}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2928, file: !279, line: 362, baseType: !283, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2928, file: !279, line: 363, baseType: !283, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 286, baseType: !2934)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 275, size: 288, elements: !2935)
!2935 = !{!2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2934, file: !279, line: 277, baseType: !283, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2934, file: !279, line: 278, baseType: !283, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2934, file: !279, line: 279, baseType: !283, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2934, file: !279, line: 280, baseType: !283, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2934, file: !279, line: 281, baseType: !283, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2934, file: !279, line: 282, baseType: !283, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2934, file: !279, line: 283, baseType: !283, size: 32, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2934, file: !279, line: 284, baseType: !283, size: 32, offset: 224)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2934, file: !279, line: 285, baseType: !283, size: 32, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 386, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 448, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2947, file: !279, line: 372, baseType: !283, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2947, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2947, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2947, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2947, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2947, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2947, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2947, file: !279, line: 379, baseType: !283, size: 32, offset: 224)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2947, file: !279, line: 380, baseType: !283, size: 32, offset: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2947, file: !279, line: 381, baseType: !283, size: 32, offset: 288)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2947, file: !279, line: 382, baseType: !283, size: 32, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2947, file: !279, line: 383, baseType: !283, size: 32, offset: 352)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2947, file: !279, line: 384, baseType: !283, size: 32, offset: 384)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2947, file: !279, line: 385, baseType: !283, size: 32, offset: 416)
!2963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2965, splitDebugInlining: false, nameTableKind: None)
!2964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2965 = !{!102, !252}
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2968, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2968 = !{!2969, !2976, !30}
!2969 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2970, line: 14, baseType: !32, size: 32, elements: !2971)
!2970 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2971 = !{!2972, !2973, !2974, !2975}
!2972 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2973 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2974 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2975 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2976 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2970, line: 42, baseType: !32, size: 32, elements: !2977)
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983}
!2978 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2979 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2980 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2981 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2982 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2983 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2988, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!2988 = !{!102, !107, !2989, !3004}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2992)
!2992 = !{!2993, !2999}
!2993 = !DIDerivedType(tag: DW_TAG_member, scope: !2991, file: !233, line: 38, baseType: !2994, size: 32)
!2994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2991, file: !233, line: 38, size: 32, elements: !2995)
!2995 = !{!2996, !2998}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2994, file: !233, line: 39, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2994, file: !233, line: 40, baseType: !2997, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2991, file: !233, line: 42, baseType: !3000, size: 32, offset: 32)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2991, file: !233, line: 42, size: 32, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3000, file: !233, line: 43, baseType: !2997, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3000, file: !233, line: 44, baseType: !2997, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !3006)
!3006 = !{!3007, !3051, !3063, !3064, !3065, !3066, !3072, !3085}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3005, file: !372, line: 247, baseType: !3008, size: 384)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !3009)
!3009 = !{!3010, !3020, !3027, !3028, !3029, !3038, !3039, !3040}
!3010 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !372, line: 60, baseType: !3011, size: 64)
!3011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !372, line: 60, size: 64, elements: !3012)
!3012 = !{!3013, !3014}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3011, file: !372, line: 61, baseType: !2990, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3011, file: !372, line: 62, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !3016)
!3016 = !{!3017}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3015, file: !397, line: 50, baseType: !3018, size: 64)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3019, size: 64, elements: !402)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3008, file: !372, line: 68, baseType: !3021, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3024)
!3024 = !{!3025}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3023, file: !228, line: 232, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2991)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3008, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3008, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!3029 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !372, line: 90, baseType: !3030, size: 16, offset: 112)
!3030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !372, line: 90, size: 16, elements: !3031)
!3031 = !{!3032, !3037}
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3030, file: !372, line: 91, baseType: !3033, size: 16)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3030, file: !372, line: 91, size: 16, elements: !3034)
!3034 = !{!3035, !3036}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3033, file: !372, line: 96, baseType: !420, size: 8)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3033, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3030, file: !372, line: 100, baseType: !424, size: 16)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3008, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3008, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3008, file: !372, line: 131, baseType: !3041, size: 192, offset: 192)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3042)
!3042 = !{!3043, !3044, !3050}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3041, file: !228, line: 245, baseType: !2990, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3041, file: !228, line: 246, baseType: !3045, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3046)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 32)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{null, !3049}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3041, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3005, file: !372, line: 250, baseType: !3052, size: 288, offset: 384)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !3053)
!3053 = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3052, file: !441, line: 26, baseType: !162, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3052, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3052, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3052, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3052, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3052, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3052, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3052, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3052, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3005, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3005, file: !372, line: 256, baseType: !3022, size: 64, offset: 704)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3005, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3005, file: !372, line: 300, baseType: !3067, size: 96, offset: 800)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !3068)
!3068 = !{!3069, !3070, !3071}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3067, file: !372, line: 153, baseType: !22, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3067, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3067, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3005, file: !372, line: 325, baseType: !3073, size: 32, offset: 896)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 32)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3075)
!3075 = !{!3076, !3082, !3083}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3074, file: !224, line: 5074, baseType: !3077, size: 96)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !3078)
!3078 = !{!3079, !3080, !3081}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3077, file: !467, line: 57, baseType: !470, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3077, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3077, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3074, file: !224, line: 5075, baseType: !3022, size: 64, offset: 96)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3074, file: !224, line: 5076, baseType: !3084, offset: 160)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3005, file: !372, line: 343, baseType: !3086, size: 64, offset: 928)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !3087)
!3087 = !{!3088, !3089}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3086, file: !441, line: 63, baseType: !162, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3086, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!3090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3091, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3092, splitDebugInlining: false, nameTableKind: None)
!3091 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!3092 = !{!22, !102, !107}
!3093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3094, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3094 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!3095 = !{!"Ubuntu clang version 14.0.6"}
!3096 = !{i32 7, !"Dwarf Version", i32 4}
!3097 = !{i32 2, !"Debug Info Version", i32 3}
!3098 = !{i32 1, !"wchar_size", i32 4}
!3099 = !{i32 1, !"min_enum_size", i32 4}
!3100 = !{i32 1, !"branch-target-enforcement", i32 0}
!3101 = !{i32 1, !"sign-return-address", i32 0}
!3102 = !{i32 1, !"sign-return-address-all", i32 0}
!3103 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3104 = !{i32 7, !"frame-pointer", i32 2}
!3105 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3106, file: !3106, line: 26, type: !3107, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !250)
!3106 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3107 = !DISubroutineType(types: !3108)
!3108 = !{null}
!3109 = !DILocation(line: 28, column: 1, scope: !3105)
!3110 = !{i64 2152483037, i64 2152483057, i64 2152483120}
!3111 = !DILocation(line: 29, column: 1, scope: !3105)
!3112 = !{i64 2152483452, i64 2152483472, i64 2152483535}
!3113 = !DILocation(line: 30, column: 1, scope: !3105)
!3114 = !{i64 2152487932, i64 2152487952, i64 2152488015}
!3115 = !DILocation(line: 31, column: 1, scope: !3105)
!3116 = !{i64 2152488351, i64 2152488371, i64 2152488434}
!3117 = !DILocation(line: 33, column: 1, scope: !3105)
!3118 = !{i64 2152488643, i64 2152488663, i64 2152488726}
!3119 = !DILocation(line: 35, column: 1, scope: !3105)
!3120 = !{i64 2152488968, i64 2152488988, i64 2152489051}
!3121 = !DILocation(line: 50, column: 1, scope: !3105)
!3122 = !{i64 2152489395, i64 2152489415, i64 2152489478}
!3123 = !DILocation(line: 54, column: 1, scope: !3105)
!3124 = !{i64 2152489834, i64 2152489854, i64 2152489917}
!3125 = !DILocation(line: 61, column: 1, scope: !3105)
!3126 = !{i64 2152490151, i64 2152490171, i64 2152490234}
!3127 = !DILocation(line: 63, column: 1, scope: !3105)
!3128 = !{i64 2152490531, i64 2152490551, i64 2152490614}
!3129 = !DILocation(line: 64, column: 1, scope: !3105)
!3130 = !{i64 2152491053, i64 2152491073, i64 2152491136}
!3131 = !DILocation(line: 65, column: 1, scope: !3105)
!3132 = !{i64 2152491551, i64 2152491571, i64 2152491634}
!3133 = !DILocation(line: 66, column: 1, scope: !3105)
!3134 = !{i64 2152492033, i64 2152492053, i64 2152492116}
!3135 = !DILocation(line: 67, column: 1, scope: !3105)
!3136 = !{i64 2152492540, i64 2152492560, i64 2152492623}
!3137 = !DILocation(line: 68, column: 1, scope: !3105)
!3138 = !{i64 2152493028, i64 2152493048, i64 2152493111}
!3139 = !DILocation(line: 70, column: 1, scope: !3105)
!3140 = !{i64 2152493496, i64 2152493516, i64 2152493579}
!3141 = !DILocation(line: 71, column: 1, scope: !3105)
!3142 = !{i64 2152493938, i64 2152493958, i64 2152494021}
!3143 = !DILocation(line: 72, column: 1, scope: !3105)
!3144 = !{i64 2152494396, i64 2152494416, i64 2152494479}
!3145 = !DILocation(line: 79, column: 1, scope: !3105)
!3146 = !{i64 2152494850, i64 2152494870, i64 2152494933}
!3147 = !DILocation(line: 80, column: 1, scope: !3105)
!3148 = !{i64 2152495361, i64 2152495381, i64 2152495444}
!3149 = !DILocation(line: 82, column: 1, scope: !3105)
!3150 = !{i64 2152495852, i64 2152495872, i64 2152495935}
!3151 = !DILocation(line: 97, column: 1, scope: !3105)
!3152 = !{i64 2152496189, i64 2152496209, i64 2152496272}
!3153 = !DILocation(line: 99, column: 1, scope: !3105)
!3154 = !{i64 2152496407, i64 2152496427, i64 2152496490}
!3155 = !DILocation(line: 102, column: 1, scope: !3105)
!3156 = !{i64 2152496664, i64 2152496684, i64 2152496747}
!3157 = !DILocation(line: 105, column: 1, scope: !3105)
!3158 = !{i64 2152496904, i64 2152496924, i64 2152496987}
!3159 = !DILocation(line: 115, column: 1, scope: !3105)
!3160 = !{i64 2152497243, i64 2152497263, i64 2152497326}
!3161 = !DILocation(line: 118, column: 1, scope: !3105)
!3162 = !{i64 2152501648, i64 2152501668, i64 2152501731}
!3163 = !DILocation(line: 32, column: 1, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3105, file: !3165, discriminator: 0)
!3165 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3166 = !{i64 2152502004, i64 2152502024, i64 2152502087}
!3167 = !DILocation(line: 33, column: 1, scope: !3164)
!3168 = !{i64 2152502516, i64 2152502536, i64 2152502599}
!3169 = !DILocation(line: 53, column: 1, scope: !3164)
!3170 = !{i64 2152503024, i64 2152503044, i64 2152503107}
!3171 = !DILocation(line: 54, column: 1, scope: !3164)
!3172 = !{i64 2152503442, i64 2152503462, i64 2152503525}
!3173 = !DILocation(line: 55, column: 1, scope: !3164)
!3174 = !{i64 2152503860, i64 2152503880, i64 2152503943}
!3175 = !DILocation(line: 56, column: 1, scope: !3164)
!3176 = !{i64 2152504278, i64 2152504298, i64 2152504361}
!3177 = !DILocation(line: 57, column: 1, scope: !3164)
!3178 = !{i64 2152504696, i64 2152504716, i64 2152504779}
!3179 = !DILocation(line: 58, column: 1, scope: !3164)
!3180 = !{i64 2152505114, i64 2152505134, i64 2152505197}
!3181 = !DILocation(line: 59, column: 1, scope: !3164)
!3182 = !{i64 2152505532, i64 2152505552, i64 2152505615}
!3183 = !DILocation(line: 60, column: 1, scope: !3164)
!3184 = !{i64 2152505956, i64 2152505976, i64 2152506039}
!3185 = !DILocation(line: 61, column: 1, scope: !3164)
!3186 = !{i64 2152506273, i64 2152506293, i64 2152506356}
!3187 = !DILocation(line: 70, column: 1, scope: !3164)
!3188 = !{i64 2152506502, i64 2152506522, i64 2152506585}
!3189 = !DILocation(line: 72, column: 1, scope: !3164)
!3190 = !{i64 2152506834, i64 2152506854, i64 2152506917}
!3191 = !DILocation(line: 73, column: 1, scope: !3164)
!3192 = !{i64 2152507284, i64 2152507304, i64 2152507367}
!3193 = !DILocation(line: 74, column: 1, scope: !3164)
!3194 = !{i64 2152507734, i64 2152507754, i64 2152507817}
!3195 = !DILocation(line: 75, column: 1, scope: !3164)
!3196 = !{i64 2152508184, i64 2152508204, i64 2152508267}
!3197 = !DILocation(line: 76, column: 1, scope: !3164)
!3198 = !{i64 2152508634, i64 2152508654, i64 2152508717}
!3199 = !DILocation(line: 77, column: 1, scope: !3164)
!3200 = !{i64 2152509084, i64 2152509104, i64 2152509167}
!3201 = !DILocation(line: 78, column: 1, scope: !3164)
!3202 = !{i64 2152509534, i64 2152509554, i64 2152509617}
!3203 = !DILocation(line: 79, column: 1, scope: !3164)
!3204 = !{i64 2152509984, i64 2152510004, i64 2152510067}
!3205 = !DILocation(line: 80, column: 1, scope: !3164)
!3206 = !{i64 2152510437, i64 2152510457, i64 2152510520}
!3207 = !DILocation(line: 84, column: 1, scope: !3164)
!3208 = !{i64 2152514830, i64 2152514850, i64 2152514913}
!3209 = !DILocation(line: 91, column: 1, scope: !3164)
!3210 = !{i64 2152515227, i64 2152515247, i64 2152515310}
!3211 = !DILocation(line: 93, column: 1, scope: !3164)
!3212 = !{i64 2152515594, i64 2152515614, i64 2152515677}
!3213 = !DILocation(line: 106, column: 1, scope: !3164)
!3214 = !{i64 2152515864, i64 2152515884, i64 2152515947}
!3215 = !DILocation(line: 11, column: 1, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3105, file: !3217, discriminator: 0)
!3217 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3218 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3219)
!3219 = !{!3220, !3221, !3222}
!3220 = !DILocalVariable(name: "dev", arg: 1, scope: !3218, file: !209, line: 31, type: !117)
!3221 = !DILocalVariable(name: "user_data", arg: 2, scope: !3218, file: !209, line: 31, type: !102)
!3222 = !DILocalVariable(name: "c", scope: !3218, file: !209, line: 33, type: !133)
!3223 = !DILocation(line: 0, scope: !3218)
!3224 = !DILocation(line: 33, column: 2, scope: !3218)
!3225 = !DILocation(line: 35, column: 7, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3218, file: !209, line: 35, column: 6)
!3227 = !DILocation(line: 35, column: 6, scope: !3218)
!3228 = !DILocation(line: 39, column: 9, scope: !3218)
!3229 = !DILocation(line: 39, column: 2, scope: !3218)
!3230 = !DILocation(line: 41, column: 3, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3218, file: !209, line: 39, column: 38)
!3232 = !DILocation(line: 43, column: 8, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3231, file: !209, line: 43, column: 7)
!3234 = !DILocation(line: 43, column: 10, scope: !3233)
!3235 = !DILocation(line: 43, column: 18, scope: !3233)
!3236 = !DILocation(line: 45, column: 4, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !209, line: 43, column: 51)
!3238 = !DILocation(line: 45, column: 23, scope: !3237)
!3239 = !DILocation(line: 48, column: 4, scope: !3237)
!3240 = !DILocation(line: 51, column: 15, scope: !3237)
!3241 = !DILocation(line: 52, column: 3, scope: !3237)
!3242 = !DILocation(line: 52, column: 25, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3233, file: !209, line: 52, column: 14)
!3244 = !DILocation(line: 52, column: 14, scope: !3233)
!3245 = !DILocation(line: 53, column: 21, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3243, file: !209, line: 52, column: 49)
!3247 = !DILocation(line: 53, column: 4, scope: !3246)
!3248 = !DILocation(line: 53, column: 25, scope: !3246)
!3249 = !DILocation(line: 54, column: 3, scope: !3246)
!3250 = distinct !{!3250, !3229, !3251}
!3251 = !DILocation(line: 56, column: 2, scope: !3218)
!3252 = !DILocation(line: 57, column: 1, scope: !3218)
!3253 = distinct !DISubprogram(name: "uart_irq_update", scope: !3254, file: !3254, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3255)
!3254 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!3255 = !{!3256}
!3256 = !DILocalVariable(name: "dev", arg: 1, scope: !3253, file: !3254, line: 360, type: !117)
!3257 = !DILocation(line: 0, scope: !3253)
!3258 = !DILocation(line: 368, column: 2, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3253, file: !3254, line: 368, column: 2)
!3260 = !{i64 2152465343}
!3261 = !DILocation(line: 369, column: 9, scope: !3253)
!3262 = !DILocation(line: 369, column: 2, scope: !3253)
!3263 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3264)
!3264 = !{!3265, !3266}
!3265 = !DILocalVariable(name: "dev", arg: 1, scope: !3263, file: !111, line: 1024, type: !117)
!3266 = !DILocalVariable(name: "api", scope: !3263, file: !111, line: 1027, type: !108)
!3267 = !DILocation(line: 0, scope: !3263)
!3268 = !DILocation(line: 1028, column: 40, scope: !3263)
!3269 = !DILocation(line: 1030, column: 11, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !111, line: 1030, column: 6)
!3271 = !DILocation(line: 1030, column: 24, scope: !3270)
!3272 = !DILocation(line: 1030, column: 6, scope: !3263)
!3273 = !DILocation(line: 1033, column: 9, scope: !3263)
!3274 = !DILocation(line: 1033, column: 2, scope: !3263)
!3275 = !DILocation(line: 1038, column: 1, scope: !3263)
!3276 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3277)
!3277 = !{!3278, !3279, !3280, !3281}
!3278 = !DILocalVariable(name: "dev", arg: 1, scope: !3276, file: !111, line: 785, type: !117)
!3279 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3276, file: !111, line: 785, type: !182)
!3280 = !DILocalVariable(name: "size", arg: 3, scope: !3276, file: !111, line: 786, type: !183)
!3281 = !DILocalVariable(name: "api", scope: !3276, file: !111, line: 789, type: !108)
!3282 = !DILocation(line: 0, scope: !3276)
!3283 = !DILocation(line: 790, column: 40, scope: !3276)
!3284 = !DILocation(line: 792, column: 11, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3276, file: !111, line: 792, column: 6)
!3286 = !DILocation(line: 792, column: 21, scope: !3285)
!3287 = !DILocation(line: 792, column: 6, scope: !3276)
!3288 = !DILocation(line: 796, column: 9, scope: !3276)
!3289 = !DILocation(line: 796, column: 2, scope: !3276)
!3290 = !DILocation(line: 803, column: 1, scope: !3276)
!3291 = distinct !DISubprogram(name: "k_msgq_put", scope: !3292, file: !3292, line: 1129, type: !3293, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3300)
!3292 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!107, !3295, !13, !3296}
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3297)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3298)
!3298 = !{!3299}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3297, file: !104, line: 66, baseType: !103, size: 64)
!3300 = !{!3301, !3302, !3303}
!3301 = !DILocalVariable(name: "msgq", arg: 1, scope: !3291, file: !3292, line: 1129, type: !3295)
!3302 = !DILocalVariable(name: "data", arg: 2, scope: !3291, file: !3292, line: 1129, type: !13)
!3303 = !DILocalVariable(name: "timeout", arg: 3, scope: !3291, file: !3292, line: 1129, type: !3296)
!3304 = !DILocation(line: 0, scope: !3291)
!3305 = !DILocation(line: 1139, column: 2, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3291, file: !3292, line: 1139, column: 2)
!3307 = !{i64 2152217161}
!3308 = !DILocation(line: 1140, column: 9, scope: !3291)
!3309 = !DILocation(line: 1140, column: 2, scope: !3291)
!3310 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3311)
!3311 = !{!3312, !3313}
!3312 = !DILocalVariable(name: "dev", arg: 1, scope: !3310, file: !111, line: 1136, type: !117)
!3313 = !DILocalVariable(name: "api", scope: !3310, file: !111, line: 1139, type: !108)
!3314 = !DILocation(line: 0, scope: !3310)
!3315 = !DILocation(line: 1140, column: 40, scope: !3310)
!3316 = !DILocation(line: 1142, column: 11, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3310, file: !111, line: 1142, column: 6)
!3318 = !DILocation(line: 1142, column: 22, scope: !3317)
!3319 = !DILocation(line: 1142, column: 6, scope: !3310)
!3320 = !DILocation(line: 1145, column: 9, scope: !3310)
!3321 = !DILocation(line: 1145, column: 2, scope: !3310)
!3322 = !DILocation(line: 1150, column: 1, scope: !3310)
!3323 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3324, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3326)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{null, !256}
!3326 = !{!3327, !3328, !3329}
!3327 = !DILocalVariable(name: "buf", arg: 1, scope: !3323, file: !209, line: 62, type: !256)
!3328 = !DILocalVariable(name: "msg_len", scope: !3323, file: !209, line: 64, type: !107)
!3329 = !DILocalVariable(name: "i", scope: !3330, file: !209, line: 66, type: !107)
!3330 = distinct !DILexicalBlock(scope: !3323, file: !209, line: 66, column: 2)
!3331 = !DILocation(line: 0, scope: !3323)
!3332 = !DILocation(line: 64, column: 16, scope: !3323)
!3333 = !DILocation(line: 0, scope: !3330)
!3334 = !DILocation(line: 66, column: 20, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !209, line: 66, column: 2)
!3336 = !DILocation(line: 66, column: 2, scope: !3330)
!3337 = !DILocation(line: 69, column: 1, scope: !3323)
!3338 = !DILocation(line: 67, column: 27, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3335, file: !209, line: 66, column: 36)
!3340 = !DILocation(line: 67, column: 3, scope: !3339)
!3341 = !DILocation(line: 66, column: 32, scope: !3335)
!3342 = distinct !{!3342, !3336, !3343}
!3343 = !DILocation(line: 68, column: 2, scope: !3330)
!3344 = distinct !DISubprogram(name: "uart_poll_out", scope: !3254, file: !3254, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3345)
!3345 = !{!3346, !3347}
!3346 = !DILocalVariable(name: "dev", arg: 1, scope: !3344, file: !3254, line: 95, type: !117)
!3347 = !DILocalVariable(name: "out_char", arg: 2, scope: !3344, file: !3254, line: 95, type: !134)
!3348 = !DILocation(line: 0, scope: !3344)
!3349 = !DILocation(line: 105, column: 2, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3344, file: !3254, line: 105, column: 2)
!3351 = !{i64 2152464595}
!3352 = !DILocation(line: 106, column: 2, scope: !3344)
!3353 = !DILocation(line: 107, column: 1, scope: !3344)
!3354 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3355)
!3355 = !{!3356, !3357, !3358}
!3356 = !DILocalVariable(name: "dev", arg: 1, scope: !3354, file: !111, line: 574, type: !117)
!3357 = !DILocalVariable(name: "out_char", arg: 2, scope: !3354, file: !111, line: 575, type: !134)
!3358 = !DILocalVariable(name: "api", scope: !3354, file: !111, line: 577, type: !108)
!3359 = !DILocation(line: 0, scope: !3354)
!3360 = !DILocation(line: 578, column: 40, scope: !3354)
!3361 = !DILocation(line: 580, column: 7, scope: !3354)
!3362 = !DILocation(line: 580, column: 2, scope: !3354)
!3363 = !DILocation(line: 581, column: 1, scope: !3354)
!3364 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3107, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3365)
!3365 = !{!3366}
!3366 = !DILocalVariable(name: "tx_buf", scope: !3364, file: !209, line: 73, type: !218)
!3367 = !DILocation(line: 73, column: 2, scope: !3364)
!3368 = !DILocation(line: 73, column: 7, scope: !3364)
!3369 = !DILocation(line: 75, column: 7, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3364, file: !209, line: 75, column: 6)
!3371 = !DILocation(line: 75, column: 6, scope: !3364)
!3372 = !DILocation(line: 76, column: 3, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3370, file: !209, line: 75, column: 34)
!3374 = !DILocation(line: 77, column: 3, scope: !3373)
!3375 = !DILocation(line: 81, column: 2, scope: !3364)
!3376 = !DILocation(line: 82, column: 2, scope: !3364)
!3377 = !DILocation(line: 84, column: 2, scope: !3364)
!3378 = !DILocation(line: 85, column: 2, scope: !3364)
!3379 = !DILocation(line: 88, column: 9, scope: !3364)
!3380 = !DILocation(line: 88, column: 52, scope: !3364)
!3381 = !DILocation(line: 88, column: 2, scope: !3364)
!3382 = !DILocation(line: 89, column: 3, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3364, file: !209, line: 88, column: 58)
!3384 = !DILocation(line: 90, column: 3, scope: !3383)
!3385 = !DILocation(line: 91, column: 3, scope: !3383)
!3386 = distinct !{!3386, !3381, !3387}
!3387 = !DILocation(line: 92, column: 2, scope: !3364)
!3388 = !DILocation(line: 93, column: 1, scope: !3364)
!3389 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !3391, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3393)
!3390 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!136, !117}
!3393 = !{!3394}
!3394 = !DILocalVariable(name: "dev", arg: 1, scope: !3389, file: !3390, line: 47, type: !117)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 55, column: 2, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3389, file: !3390, line: 55, column: 2)
!3398 = !{i64 2152381350}
!3399 = !DILocation(line: 56, column: 9, scope: !3389)
!3400 = !DILocation(line: 56, column: 2, scope: !3389)
!3401 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3402)
!3402 = !{!3403, !3404, !3405, !3406}
!3403 = !DILocalVariable(name: "dev", arg: 1, scope: !3401, file: !111, line: 1163, type: !117)
!3404 = !DILocalVariable(name: "cb", arg: 2, scope: !3401, file: !111, line: 1164, type: !202)
!3405 = !DILocalVariable(name: "user_data", arg: 3, scope: !3401, file: !111, line: 1165, type: !102)
!3406 = !DILocalVariable(name: "api", scope: !3401, file: !111, line: 1168, type: !108)
!3407 = !DILocation(line: 0, scope: !3401)
!3408 = !DILocation(line: 1169, column: 40, scope: !3401)
!3409 = !DILocation(line: 1171, column: 11, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3401, file: !111, line: 1171, column: 6)
!3411 = !DILocation(line: 1171, column: 20, scope: !3410)
!3412 = !DILocation(line: 1171, column: 29, scope: !3410)
!3413 = !DILocation(line: 1171, column: 46, scope: !3410)
!3414 = !DILocation(line: 1171, column: 6, scope: !3401)
!3415 = !DILocation(line: 1172, column: 3, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3410, file: !111, line: 1171, column: 56)
!3417 = !DILocation(line: 1173, column: 2, scope: !3416)
!3418 = !DILocation(line: 1179, column: 1, scope: !3401)
!3419 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3254, file: !3254, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3420)
!3420 = !{!3421}
!3421 = !DILocalVariable(name: "dev", arg: 1, scope: !3419, file: !3254, line: 241, type: !117)
!3422 = !DILocation(line: 0, scope: !3419)
!3423 = !DILocation(line: 250, column: 2, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3419, file: !3254, line: 250, column: 2)
!3425 = !{i64 2152465003}
!3426 = !DILocation(line: 251, column: 2, scope: !3419)
!3427 = !DILocation(line: 252, column: 1, scope: !3419)
!3428 = distinct !DISubprogram(name: "k_msgq_get", scope: !3292, file: !3292, line: 1147, type: !3429, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3431)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!107, !3295, !102, !3296}
!3431 = !{!3432, !3433, !3434}
!3432 = !DILocalVariable(name: "msgq", arg: 1, scope: !3428, file: !3292, line: 1147, type: !3295)
!3433 = !DILocalVariable(name: "data", arg: 2, scope: !3428, file: !3292, line: 1147, type: !102)
!3434 = !DILocalVariable(name: "timeout", arg: 3, scope: !3428, file: !3292, line: 1147, type: !3296)
!3435 = !DILocation(line: 0, scope: !3428)
!3436 = !DILocation(line: 1157, column: 2, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3428, file: !3292, line: 1157, column: 2)
!3438 = !{i64 2152217229}
!3439 = !DILocation(line: 1158, column: 9, scope: !3428)
!3440 = !DILocation(line: 1158, column: 2, scope: !3428)
!3441 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3442)
!3442 = !{!3443, !3444}
!3443 = !DILocalVariable(name: "dev", arg: 1, scope: !3441, file: !111, line: 934, type: !117)
!3444 = !DILocalVariable(name: "api", scope: !3441, file: !111, line: 937, type: !108)
!3445 = !DILocation(line: 0, scope: !3441)
!3446 = !DILocation(line: 938, column: 40, scope: !3441)
!3447 = !DILocation(line: 940, column: 11, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3441, file: !111, line: 940, column: 6)
!3449 = !DILocation(line: 940, column: 25, scope: !3448)
!3450 = !DILocation(line: 940, column: 6, scope: !3441)
!3451 = !DILocation(line: 941, column: 3, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !111, line: 940, column: 34)
!3453 = !DILocation(line: 942, column: 2, scope: !3452)
!3454 = !DILocation(line: 946, column: 1, scope: !3441)
!3455 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3391, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3456)
!3456 = !{!3457}
!3457 = !DILocalVariable(name: "dev", arg: 1, scope: !3455, file: !120, line: 730, type: !117)
!3458 = !DILocation(line: 0, scope: !3455)
!3459 = !DILocation(line: 732, column: 9, scope: !3455)
!3460 = !DILocation(line: 732, column: 2, scope: !3455)
!3461 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3462)
!3462 = !{!3463}
!3463 = !DILocalVariable(name: "c", arg: 1, scope: !3461, file: !268, line: 45, type: !107)
!3464 = !DILocation(line: 0, scope: !3461)
!3465 = !DILocation(line: 50, column: 2, scope: !3461)
!3466 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3467, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3469)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{null, !269}
!3469 = !{!3470}
!3470 = !DILocalVariable(name: "fn", arg: 1, scope: !3466, file: !268, line: 63, type: !269)
!3471 = !DILocation(line: 0, scope: !3466)
!3472 = !DILocation(line: 65, column: 12, scope: !3466)
!3473 = !DILocation(line: 66, column: 1, scope: !3466)
!3474 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3475, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!102}
!3477 = !DILocation(line: 78, column: 9, scope: !3474)
!3478 = !DILocation(line: 78, column: 2, scope: !3474)
!3479 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3480, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3489)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{null, !123, !3482}
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3483, line: 99, baseType: !3484)
!3483 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3483, line: 40, baseType: !3485)
!3485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3486)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3487)
!3487 = !{!3488}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3486, file: !268, line: 79, baseType: !102, size: 32)
!3489 = !{!3490, !3491, !3492}
!3490 = !DILocalVariable(name: "fmt", arg: 1, scope: !3479, file: !268, line: 113, type: !123)
!3491 = !DILocalVariable(name: "ap", arg: 2, scope: !3479, file: !268, line: 113, type: !3482)
!3492 = !DILocalVariable(name: "ctx", scope: !3493, file: !268, line: 121, type: !3495)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !268, line: 120, column: 27)
!3494 = distinct !DILexicalBlock(scope: !3479, file: !268, line: 120, column: 6)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3496)
!3496 = !{!3497, !3498}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3495, file: !268, line: 85, baseType: !32, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3495, file: !268, line: 86, baseType: !3499, offset: 32)
!3499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2470)
!3500 = !DILocation(line: 0, scope: !3479)
!3501 = !DILocation(line: 148, column: 3, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3494, file: !268, line: 138, column: 9)
!3503 = !DILocation(line: 155, column: 1, scope: !3479)
!3504 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3505, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3507)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!107, !107, !102}
!3507 = !{!3508, !3509}
!3508 = !DILocalVariable(name: "c", arg: 1, scope: !3504, file: !268, line: 107, type: !107)
!3509 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3504, file: !268, line: 107, type: !102)
!3510 = !DILocation(line: 0, scope: !3504)
!3511 = !DILocation(line: 110, column: 9, scope: !3504)
!3512 = !DILocation(line: 110, column: 2, scope: !3504)
!3513 = distinct !DISubprogram(name: "cbvprintf", scope: !3514, file: !3514, line: 739, type: !3515, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3521)
!3514 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!107, !3517, !102, !123, !3482}
!3517 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3514, line: 297, baseType: !3518)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 32)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!107, null}
!3521 = !{!3522, !3523, !3524, !3525}
!3522 = !DILocalVariable(name: "out", arg: 1, scope: !3513, file: !3514, line: 739, type: !3517)
!3523 = !DILocalVariable(name: "ctx", arg: 2, scope: !3513, file: !3514, line: 739, type: !102)
!3524 = !DILocalVariable(name: "format", arg: 3, scope: !3513, file: !3514, line: 739, type: !123)
!3525 = !DILocalVariable(name: "ap", arg: 4, scope: !3513, file: !3514, line: 739, type: !3482)
!3526 = !DILocation(line: 0, scope: !3513)
!3527 = !DILocation(line: 741, column: 9, scope: !3513)
!3528 = !DILocation(line: 741, column: 2, scope: !3513)
!3529 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3530, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3532)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{null, !256, !252}
!3532 = !{!3533, !3534, !3535}
!3533 = !DILocalVariable(name: "c", arg: 1, scope: !3529, file: !268, line: 157, type: !256)
!3534 = !DILocalVariable(name: "n", arg: 2, scope: !3529, file: !268, line: 157, type: !252)
!3535 = !DILocalVariable(name: "i", scope: !3529, file: !268, line: 159, type: !252)
!3536 = !DILocation(line: 0, scope: !3529)
!3537 = !DILocation(line: 164, column: 16, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !268, line: 164, column: 2)
!3539 = distinct !DILexicalBlock(scope: !3529, file: !268, line: 164, column: 2)
!3540 = !DILocation(line: 164, column: 2, scope: !3539)
!3541 = !DILocation(line: 165, column: 3, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3538, file: !268, line: 164, column: 26)
!3543 = !DILocation(line: 165, column: 13, scope: !3542)
!3544 = !DILocation(line: 164, column: 22, scope: !3538)
!3545 = distinct !{!3545, !3540, !3546}
!3546 = !DILocation(line: 166, column: 2, scope: !3539)
!3547 = !DILocation(line: 171, column: 1, scope: !3529)
!3548 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3549, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !123, null}
!3551 = !{!3552, !3553}
!3552 = !DILocalVariable(name: "fmt", arg: 1, scope: !3548, file: !268, line: 203, type: !123)
!3553 = !DILocalVariable(name: "ap", scope: !3548, file: !268, line: 205, type: !3482)
!3554 = !DILocation(line: 0, scope: !3548)
!3555 = !DILocation(line: 205, column: 2, scope: !3548)
!3556 = !DILocation(line: 205, column: 10, scope: !3548)
!3557 = !DILocation(line: 207, column: 2, scope: !3548)
!3558 = !DILocation(line: 209, column: 2, scope: !3548)
!3559 = !DILocation(line: 211, column: 2, scope: !3548)
!3560 = !DILocation(line: 212, column: 1, scope: !3548)
!3561 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3562, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3564)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!107, !256, !252, !123, null}
!3564 = !{!3565, !3566, !3567, !3568, !3569}
!3565 = !DILocalVariable(name: "str", arg: 1, scope: !3561, file: !268, line: 239, type: !256)
!3566 = !DILocalVariable(name: "size", arg: 2, scope: !3561, file: !268, line: 239, type: !252)
!3567 = !DILocalVariable(name: "fmt", arg: 3, scope: !3561, file: !268, line: 239, type: !123)
!3568 = !DILocalVariable(name: "ap", scope: !3561, file: !268, line: 241, type: !3482)
!3569 = !DILocalVariable(name: "ret", scope: !3561, file: !268, line: 242, type: !107)
!3570 = !DILocation(line: 0, scope: !3561)
!3571 = !DILocation(line: 241, column: 2, scope: !3561)
!3572 = !DILocation(line: 241, column: 10, scope: !3561)
!3573 = !DILocation(line: 244, column: 2, scope: !3561)
!3574 = !DILocation(line: 245, column: 8, scope: !3561)
!3575 = !DILocation(line: 246, column: 2, scope: !3561)
!3576 = !DILocation(line: 249, column: 1, scope: !3561)
!3577 = !DILocation(line: 248, column: 2, scope: !3561)
!3578 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3579, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!107, !256, !252, !123, !3482}
!3581 = !{!3582, !3583, !3584, !3585, !3586}
!3582 = !DILocalVariable(name: "str", arg: 1, scope: !3578, file: !268, line: 251, type: !256)
!3583 = !DILocalVariable(name: "size", arg: 2, scope: !3578, file: !268, line: 251, type: !252)
!3584 = !DILocalVariable(name: "fmt", arg: 3, scope: !3578, file: !268, line: 251, type: !123)
!3585 = !DILocalVariable(name: "ap", arg: 4, scope: !3578, file: !268, line: 251, type: !3482)
!3586 = !DILocalVariable(name: "ctx", scope: !3578, file: !268, line: 253, type: !3587)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3588)
!3588 = !{!3589, !3590, !3591}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3587, file: !268, line: 218, baseType: !256, size: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3587, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3587, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3592 = !DILocation(line: 0, scope: !3578)
!3593 = !DILocation(line: 253, column: 2, scope: !3578)
!3594 = !DILocation(line: 253, column: 21, scope: !3578)
!3595 = !DILocation(line: 253, column: 27, scope: !3578)
!3596 = !DILocation(line: 255, column: 2, scope: !3578)
!3597 = !DILocation(line: 257, column: 10, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3578, file: !268, line: 257, column: 6)
!3599 = !DILocation(line: 257, column: 22, scope: !3598)
!3600 = !DILocation(line: 257, column: 16, scope: !3598)
!3601 = !DILocation(line: 257, column: 6, scope: !3578)
!3602 = !DILocation(line: 258, column: 3, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !268, line: 257, column: 27)
!3604 = !DILocation(line: 258, column: 18, scope: !3603)
!3605 = !DILocation(line: 259, column: 2, scope: !3603)
!3606 = !DILocation(line: 262, column: 1, scope: !3578)
!3607 = !DILocation(line: 261, column: 2, scope: !3578)
!3608 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3609, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3612)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!107, !107, !3611}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 32)
!3612 = !{!3613, !3614}
!3613 = !DILocalVariable(name: "c", arg: 1, scope: !3608, file: !268, line: 223, type: !107)
!3614 = !DILocalVariable(name: "ctx", arg: 2, scope: !3608, file: !268, line: 223, type: !3611)
!3615 = !DILocation(line: 0, scope: !3608)
!3616 = !DILocation(line: 225, column: 11, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3608, file: !268, line: 225, column: 6)
!3618 = !DILocation(line: 225, column: 15, scope: !3617)
!3619 = !DILocation(line: 0, scope: !3617)
!3620 = !DILocation(line: 225, column: 23, scope: !3617)
!3621 = !DILocation(line: 225, column: 45, scope: !3617)
!3622 = !DILocation(line: 225, column: 37, scope: !3617)
!3623 = !DILocation(line: 225, column: 6, scope: !3608)
!3624 = !DILocation(line: 226, column: 8, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3617, file: !268, line: 225, column: 50)
!3626 = !DILocation(line: 226, column: 13, scope: !3625)
!3627 = !DILocation(line: 227, column: 3, scope: !3625)
!3628 = !DILocation(line: 230, column: 29, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3608, file: !268, line: 230, column: 6)
!3630 = !DILocation(line: 230, column: 17, scope: !3629)
!3631 = !DILocation(line: 230, column: 6, scope: !3608)
!3632 = !DILocation(line: 231, column: 22, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3629, file: !268, line: 230, column: 34)
!3634 = !DILocation(line: 231, column: 3, scope: !3633)
!3635 = !DILocation(line: 231, column: 26, scope: !3633)
!3636 = !DILocation(line: 232, column: 2, scope: !3633)
!3637 = !DILocation(line: 233, column: 28, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3629, file: !268, line: 232, column: 9)
!3639 = !DILocation(line: 233, column: 22, scope: !3638)
!3640 = !DILocation(line: 233, column: 3, scope: !3638)
!3641 = !DILocation(line: 233, column: 26, scope: !3638)
!3642 = !DILocation(line: 237, column: 1, scope: !3608)
!3643 = distinct !DISubprogram(name: "z_thread_entry", scope: !3644, file: !3644, line: 30, type: !3645, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !3652)
!3644 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3645 = !DISubroutineType(types: !3646)
!3646 = !{null, !3647, !102, !102, !102}
!3647 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3648, line: 46, baseType: !3649)
!3648 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 32)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !102, !102, !102}
!3652 = !{!3653, !3654, !3655, !3656}
!3653 = !DILocalVariable(name: "entry", arg: 1, scope: !3643, file: !3644, line: 30, type: !3647)
!3654 = !DILocalVariable(name: "p1", arg: 2, scope: !3643, file: !3644, line: 31, type: !102)
!3655 = !DILocalVariable(name: "p2", arg: 3, scope: !3643, file: !3644, line: 31, type: !102)
!3656 = !DILocalVariable(name: "p3", arg: 4, scope: !3643, file: !3644, line: 31, type: !102)
!3657 = !DILocation(line: 0, scope: !3643)
!3658 = !DILocation(line: 36, column: 2, scope: !3643)
!3659 = !DILocation(line: 38, column: 17, scope: !3643)
!3660 = !DILocation(line: 38, column: 2, scope: !3643)
!3661 = !DILocation(line: 45, column: 2, scope: !3643)
!3662 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3663, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !250)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!3665}
!3665 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !372, line: 347, baseType: !3666)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !3668)
!3668 = !{!3669, !3727, !3739, !3740, !3741, !3742, !3748, !3761}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3667, file: !372, line: 247, baseType: !3670, size: 384)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !3671)
!3671 = !{!3672, !3696, !3703, !3704, !3705, !3714, !3715, !3716}
!3672 = !DIDerivedType(tag: DW_TAG_member, scope: !3670, file: !372, line: 60, baseType: !3673, size: 64)
!3673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3670, file: !372, line: 60, size: 64, elements: !3674)
!3674 = !{!3675, !3690}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3673, file: !372, line: 61, baseType: !3676, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3677)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3678)
!3678 = !{!3679, !3685}
!3679 = !DIDerivedType(tag: DW_TAG_member, scope: !3677, file: !233, line: 38, baseType: !3680, size: 32)
!3680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3677, file: !233, line: 38, size: 32, elements: !3681)
!3681 = !{!3682, !3684}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3680, file: !233, line: 39, baseType: !3683, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3680, file: !233, line: 40, baseType: !3683, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3677, file: !233, line: 42, baseType: !3686, size: 32, offset: 32)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3677, file: !233, line: 42, size: 32, elements: !3687)
!3687 = !{!3688, !3689}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3686, file: !233, line: 43, baseType: !3683, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3686, file: !233, line: 44, baseType: !3683, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3673, file: !372, line: 62, baseType: !3691, size: 64)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !3692)
!3692 = !{!3693}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3691, file: !397, line: 50, baseType: !3694, size: 64)
!3694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3695, size: 64, elements: !402)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3670, file: !372, line: 68, baseType: !3697, size: 32, offset: 64)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3699)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3700)
!3700 = !{!3701}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3699, file: !228, line: 232, baseType: !3702, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3677)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3670, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3670, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!3705 = !DIDerivedType(tag: DW_TAG_member, scope: !3670, file: !372, line: 90, baseType: !3706, size: 16, offset: 112)
!3706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3670, file: !372, line: 90, size: 16, elements: !3707)
!3707 = !{!3708, !3713}
!3708 = !DIDerivedType(tag: DW_TAG_member, scope: !3706, file: !372, line: 91, baseType: !3709, size: 16)
!3709 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3706, file: !372, line: 91, size: 16, elements: !3710)
!3710 = !{!3711, !3712}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3709, file: !372, line: 96, baseType: !420, size: 8)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3709, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3706, file: !372, line: 100, baseType: !424, size: 16)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3670, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3670, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3670, file: !372, line: 131, baseType: !3717, size: 192, offset: 192)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3718)
!3718 = !{!3719, !3720, !3726}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3717, file: !228, line: 245, baseType: !3676, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3717, file: !228, line: 246, baseType: !3721, size: 32, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3722)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 32)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{null, !3725}
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3717, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3667, file: !372, line: 250, baseType: !3728, size: 288, offset: 384)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !3729)
!3729 = !{!3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3728, file: !441, line: 26, baseType: !162, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3728, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3728, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3728, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3728, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3728, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3728, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3728, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3728, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3667, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3667, file: !372, line: 256, baseType: !3698, size: 64, offset: 704)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3667, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3667, file: !372, line: 300, baseType: !3743, size: 96, offset: 800)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !3744)
!3744 = !{!3745, !3746, !3747}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3743, file: !372, line: 153, baseType: !22, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3743, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3743, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3667, file: !372, line: 325, baseType: !3749, size: 32, offset: 896)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 32)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3751)
!3751 = !{!3752, !3758, !3759}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3750, file: !224, line: 5074, baseType: !3753, size: 96)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !3754)
!3754 = !{!3755, !3756, !3757}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3753, file: !467, line: 57, baseType: !470, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3753, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3753, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3750, file: !224, line: 5075, baseType: !3698, size: 64, offset: 96)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3750, file: !224, line: 5076, baseType: !3760, offset: 160)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3667, file: !372, line: 343, baseType: !3762, size: 64, offset: 928)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !3763)
!3763 = !{!3764, !3765}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3762, file: !441, line: 63, baseType: !162, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3762, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!3766 = !DILocation(line: 535, column: 9, scope: !3662)
!3767 = !DILocation(line: 535, column: 2, scope: !3662)
!3768 = distinct !DISubprogram(name: "k_thread_abort", scope: !3292, file: !3292, line: 188, type: !3769, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{null, !3665}
!3771 = !{!3772}
!3772 = !DILocalVariable(name: "thread", arg: 1, scope: !3768, file: !3292, line: 188, type: !3665)
!3773 = !DILocation(line: 0, scope: !3768)
!3774 = !DILocation(line: 197, column: 2, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3768, file: !3292, line: 197, column: 2)
!3776 = !{i64 2152212353}
!3777 = !DILocation(line: 198, column: 2, scope: !3768)
!3778 = !DILocation(line: 199, column: 1, scope: !3768)
!3779 = distinct !DISubprogram(name: "z_current_get", scope: !3292, file: !3292, line: 173, type: !3663, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !250)
!3780 = !DILocation(line: 180, column: 2, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3779, file: !3292, line: 180, column: 2)
!3782 = !{i64 2152212285}
!3783 = !DILocation(line: 181, column: 9, scope: !3779)
!3784 = !DILocation(line: 181, column: 2, scope: !3779)
!3785 = distinct !DISubprogram(name: "sys_heap_free", scope: !3786, file: !3786, line: 163, type: !3787, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3795)
!3786 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3787 = !DISubroutineType(types: !3788)
!3788 = !{null, !3789, !102}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 32)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !3791)
!3791 = !{!3792, !3793, !3794}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3790, file: !467, line: 57, baseType: !2457, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3790, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3790, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!3795 = !{!3796, !3797, !3798, !3799}
!3796 = !DILocalVariable(name: "heap", arg: 1, scope: !3785, file: !3786, line: 163, type: !3789)
!3797 = !DILocalVariable(name: "mem", arg: 2, scope: !3785, file: !3786, line: 163, type: !102)
!3798 = !DILocalVariable(name: "h", scope: !3785, file: !3786, line: 168, type: !2457)
!3799 = !DILocalVariable(name: "c", scope: !3785, file: !3786, line: 169, type: !2462)
!3800 = !DILocation(line: 0, scope: !3785)
!3801 = !DILocation(line: 165, column: 10, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3785, file: !3786, line: 165, column: 6)
!3803 = !DILocation(line: 165, column: 6, scope: !3785)
!3804 = !DILocation(line: 168, column: 27, scope: !3785)
!3805 = !DILocation(line: 169, column: 16, scope: !3785)
!3806 = !{i32 0, i32 536870912}
!3807 = !DILocation(line: 187, column: 2, scope: !3785)
!3808 = !DILocation(line: 197, column: 2, scope: !3785)
!3809 = !DILocation(line: 198, column: 1, scope: !3785)
!3810 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3786, file: !3786, line: 157, type: !3811, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3813)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!2462, !2457, !102}
!3813 = !{!3814, !3815, !3816, !3817}
!3814 = !DILocalVariable(name: "h", arg: 1, scope: !3810, file: !3786, line: 157, type: !2457)
!3815 = !DILocalVariable(name: "p", arg: 2, scope: !3810, file: !3786, line: 157, type: !102)
!3816 = !DILocalVariable(name: "mem", scope: !3810, file: !3786, line: 159, type: !182)
!3817 = !DILocalVariable(name: "base", scope: !3810, file: !3786, line: 159, type: !182)
!3818 = !DILocation(line: 0, scope: !3810)
!3819 = !DILocation(line: 159, column: 39, scope: !3810)
!3820 = !DILocation(line: 160, column: 14, scope: !3810)
!3821 = !DILocation(line: 160, column: 38, scope: !3810)
!3822 = !DILocation(line: 160, column: 46, scope: !3810)
!3823 = !DILocation(line: 160, column: 2, scope: !3810)
!3824 = distinct !DISubprogram(name: "set_chunk_used", scope: !2444, file: !2444, line: 147, type: !3825, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{null, !2457, !2462, !136}
!3827 = !{!3828, !3829, !3830, !3831, !3832}
!3828 = !DILocalVariable(name: "h", arg: 1, scope: !3824, file: !2444, line: 147, type: !2457)
!3829 = !DILocalVariable(name: "c", arg: 2, scope: !3824, file: !2444, line: 147, type: !2462)
!3830 = !DILocalVariable(name: "used", arg: 3, scope: !3824, file: !2444, line: 147, type: !136)
!3831 = !DILocalVariable(name: "buf", scope: !3824, file: !2444, line: 149, type: !2451)
!3832 = !DILocalVariable(name: "cmem", scope: !3824, file: !2444, line: 150, type: !102)
!3833 = !DILocation(line: 0, scope: !3824)
!3834 = !DILocation(line: 149, column: 22, scope: !3824)
!3835 = !DILocation(line: 0, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !2444, line: 159, column: 7)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !2444, line: 158, column: 9)
!3838 = distinct !DILexicalBlock(scope: !3824, file: !2444, line: 152, column: 6)
!3839 = !DILocation(line: 159, column: 7, scope: !3837)
!3840 = !DILocation(line: 165, column: 1, scope: !3824)
!3841 = distinct !DISubprogram(name: "free_chunk", scope: !3786, file: !3786, line: 133, type: !3842, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3844)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !2457, !2462}
!3844 = !{!3845, !3846}
!3845 = !DILocalVariable(name: "h", arg: 1, scope: !3841, file: !3786, line: 133, type: !2457)
!3846 = !DILocalVariable(name: "c", arg: 2, scope: !3841, file: !3786, line: 133, type: !2462)
!3847 = !DILocation(line: 0, scope: !3841)
!3848 = !DILocation(line: 136, column: 21, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3841, file: !3786, line: 136, column: 6)
!3850 = !DILocation(line: 136, column: 7, scope: !3849)
!3851 = !DILocation(line: 136, column: 6, scope: !3841)
!3852 = !DILocation(line: 137, column: 3, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !3786, line: 136, column: 41)
!3854 = !DILocation(line: 138, column: 22, scope: !3853)
!3855 = !DILocation(line: 138, column: 3, scope: !3853)
!3856 = !DILocation(line: 139, column: 2, scope: !3853)
!3857 = !DILocation(line: 142, column: 21, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3841, file: !3786, line: 142, column: 6)
!3859 = !{i32 -65535, i32 536903678}
!3860 = !DILocation(line: 142, column: 7, scope: !3858)
!3861 = !DILocation(line: 142, column: 6, scope: !3841)
!3862 = !DILocation(line: 143, column: 3, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3858, file: !3786, line: 142, column: 40)
!3864 = !DILocation(line: 144, column: 19, scope: !3863)
!3865 = !DILocation(line: 144, column: 3, scope: !3863)
!3866 = !DILocation(line: 145, column: 7, scope: !3863)
!3867 = !DILocation(line: 146, column: 2, scope: !3863)
!3868 = !DILocation(line: 148, column: 2, scope: !3841)
!3869 = !DILocation(line: 149, column: 1, scope: !3841)
!3870 = distinct !DISubprogram(name: "right_chunk", scope: !2444, file: !2444, line: 204, type: !3871, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!2462, !2457, !2462}
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "h", arg: 1, scope: !3870, file: !2444, line: 204, type: !2457)
!3875 = !DILocalVariable(name: "c", arg: 2, scope: !3870, file: !2444, line: 204, type: !2462)
!3876 = !DILocation(line: 0, scope: !3870)
!3877 = !DILocation(line: 206, column: 13, scope: !3870)
!3878 = !DILocation(line: 206, column: 11, scope: !3870)
!3879 = !DILocation(line: 206, column: 2, scope: !3870)
!3880 = distinct !DISubprogram(name: "chunk_used", scope: !2444, file: !2444, line: 137, type: !3881, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!136, !2457, !2462}
!3883 = !{!3884, !3885}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !2444, line: 137, type: !2457)
!3885 = !DILocalVariable(name: "c", arg: 2, scope: !3880, file: !2444, line: 137, type: !2462)
!3886 = !DILocation(line: 0, scope: !3880)
!3887 = !DILocation(line: 139, column: 9, scope: !3880)
!3888 = !DILocation(line: 139, column: 42, scope: !3880)
!3889 = !DILocation(line: 139, column: 2, scope: !3880)
!3890 = distinct !DISubprogram(name: "free_list_remove", scope: !3786, file: !3786, line: 60, type: !3842, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3891)
!3891 = !{!3892, !3893, !3894}
!3892 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !3786, line: 60, type: !2457)
!3893 = !DILocalVariable(name: "c", arg: 2, scope: !3890, file: !3786, line: 60, type: !2462)
!3894 = !DILocalVariable(name: "bidx", scope: !3895, file: !3786, line: 63, type: !107)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !3786, line: 62, column: 31)
!3896 = distinct !DILexicalBlock(scope: !3890, file: !3786, line: 62, column: 6)
!3897 = !DILocation(line: 0, scope: !3890)
!3898 = !DILocation(line: 63, column: 28, scope: !3895)
!3899 = !{i32 0, i32 32768}
!3900 = !DILocation(line: 63, column: 14, scope: !3895)
!3901 = !DILocation(line: 0, scope: !3895)
!3902 = !DILocation(line: 64, column: 3, scope: !3895)
!3903 = !DILocation(line: 66, column: 1, scope: !3890)
!3904 = distinct !DISubprogram(name: "merge_chunks", scope: !3786, file: !3786, line: 125, type: !3905, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !2457, !2462, !2462}
!3907 = !{!3908, !3909, !3910, !3911}
!3908 = !DILocalVariable(name: "h", arg: 1, scope: !3904, file: !3786, line: 125, type: !2457)
!3909 = !DILocalVariable(name: "lc", arg: 2, scope: !3904, file: !3786, line: 125, type: !2462)
!3910 = !DILocalVariable(name: "rc", arg: 3, scope: !3904, file: !3786, line: 125, type: !2462)
!3911 = !DILocalVariable(name: "newsz", scope: !3904, file: !3786, line: 127, type: !3912)
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2444, line: 62, baseType: !162)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 127, column: 20, scope: !3904)
!3915 = !DILocation(line: 127, column: 40, scope: !3904)
!3916 = !DILocation(line: 127, column: 38, scope: !3904)
!3917 = !DILocation(line: 129, column: 2, scope: !3904)
!3918 = !DILocation(line: 130, column: 25, scope: !3904)
!3919 = !DILocation(line: 130, column: 2, scope: !3904)
!3920 = !DILocation(line: 131, column: 1, scope: !3904)
!3921 = distinct !DISubprogram(name: "left_chunk", scope: !2444, file: !2444, line: 199, type: !3871, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3922)
!3922 = !{!3923, !3924}
!3923 = !DILocalVariable(name: "h", arg: 1, scope: !3921, file: !2444, line: 199, type: !2457)
!3924 = !DILocalVariable(name: "c", arg: 2, scope: !3921, file: !2444, line: 199, type: !2462)
!3925 = !DILocation(line: 0, scope: !3921)
!3926 = !DILocation(line: 201, column: 13, scope: !3921)
!3927 = !DILocation(line: 201, column: 11, scope: !3921)
!3928 = !DILocation(line: 201, column: 2, scope: !3921)
!3929 = distinct !DISubprogram(name: "free_list_add", scope: !3786, file: !3786, line: 98, type: !3842, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3930)
!3930 = !{!3931, !3932, !3933}
!3931 = !DILocalVariable(name: "h", arg: 1, scope: !3929, file: !3786, line: 98, type: !2457)
!3932 = !DILocalVariable(name: "c", arg: 2, scope: !3929, file: !3786, line: 98, type: !2462)
!3933 = !DILocalVariable(name: "bidx", scope: !3934, file: !3786, line: 101, type: !107)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3786, line: 100, column: 31)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !3786, line: 100, column: 6)
!3936 = !DILocation(line: 0, scope: !3929)
!3937 = !DILocation(line: 101, column: 28, scope: !3934)
!3938 = !DILocation(line: 101, column: 14, scope: !3934)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 102, column: 3, scope: !3934)
!3941 = !DILocation(line: 104, column: 1, scope: !3929)
!3942 = distinct !DISubprogram(name: "chunk_size", scope: !2444, file: !2444, line: 142, type: !3943, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3945)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!3912, !2457, !2462}
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3942, file: !2444, line: 142, type: !2457)
!3947 = !DILocalVariable(name: "c", arg: 2, scope: !3942, file: !2444, line: 142, type: !2462)
!3948 = !DILocation(line: 0, scope: !3942)
!3949 = !DILocation(line: 144, column: 9, scope: !3942)
!3950 = !DILocation(line: 144, column: 42, scope: !3942)
!3951 = !DILocation(line: 144, column: 2, scope: !3942)
!3952 = distinct !DISubprogram(name: "bucket_idx", scope: !2444, file: !2444, line: 250, type: !3953, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!107, !2457, !3912}
!3955 = !{!3956, !3957, !3958}
!3956 = !DILocalVariable(name: "h", arg: 1, scope: !3952, file: !2444, line: 250, type: !2457)
!3957 = !DILocalVariable(name: "sz", arg: 2, scope: !3952, file: !2444, line: 250, type: !3912)
!3958 = !DILocalVariable(name: "usable_sz", scope: !3952, file: !2444, line: 252, type: !32)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 252, column: 32, scope: !3952)
!3961 = !DILocation(line: 252, column: 30, scope: !3952)
!3962 = !DILocation(line: 252, column: 50, scope: !3952)
!3963 = !DILocation(line: 253, column: 14, scope: !3952)
!3964 = !{i32 0, i32 33}
!3965 = !DILocation(line: 253, column: 12, scope: !3952)
!3966 = !DILocation(line: 253, column: 2, scope: !3952)
!3967 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3786, file: !3786, line: 68, type: !3968, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !3970)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !2457, !2462, !107}
!3970 = !{!3971, !3972, !3973, !3974, !3976, !3979}
!3971 = !DILocalVariable(name: "h", arg: 1, scope: !3967, file: !3786, line: 68, type: !2457)
!3972 = !DILocalVariable(name: "c", arg: 2, scope: !3967, file: !3786, line: 68, type: !2462)
!3973 = !DILocalVariable(name: "bidx", arg: 3, scope: !3967, file: !3786, line: 68, type: !107)
!3974 = !DILocalVariable(name: "b", scope: !3967, file: !3786, line: 70, type: !3975)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!3976 = !DILocalVariable(name: "second", scope: !3977, file: !3786, line: 84, type: !2462)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3786, line: 80, column: 9)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !3786, line: 72, column: 6)
!3979 = !DILocalVariable(name: "first", scope: !3977, file: !3786, line: 85, type: !2462)
!3980 = !DILocation(line: 0, scope: !3967)
!3981 = !DILocation(line: 72, column: 9, scope: !3978)
!3982 = !DILocation(line: 72, column: 14, scope: !3978)
!3983 = !DILocation(line: 72, column: 6, scope: !3967)
!3984 = !DILocation(line: 76, column: 23, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3978, file: !3786, line: 72, column: 21)
!3986 = !DILocation(line: 76, column: 6, scope: !3985)
!3987 = !DILocation(line: 76, column: 20, scope: !3985)
!3988 = !DILocation(line: 77, column: 11, scope: !3985)
!3989 = !DILocation(line: 78, column: 3, scope: !3985)
!3990 = !DILocation(line: 79, column: 3, scope: !3985)
!3991 = !DILocation(line: 80, column: 2, scope: !3985)
!3992 = !DILocation(line: 0, scope: !3977)
!3993 = !DILocation(line: 85, column: 21, scope: !3977)
!3994 = !{i32 0, i32 65536}
!3995 = !DILocation(line: 87, column: 3, scope: !3977)
!3996 = !DILocation(line: 88, column: 3, scope: !3977)
!3997 = !DILocation(line: 89, column: 3, scope: !3977)
!3998 = !DILocation(line: 90, column: 3, scope: !3977)
!3999 = !DILocation(line: 96, column: 1, scope: !3967)
!4000 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2444, file: !2444, line: 187, type: !3905, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4001)
!4001 = !{!4002, !4003, !4004}
!4002 = !DILocalVariable(name: "h", arg: 1, scope: !4000, file: !2444, line: 187, type: !2457)
!4003 = !DILocalVariable(name: "c", arg: 2, scope: !4000, file: !2444, line: 187, type: !2462)
!4004 = !DILocalVariable(name: "prev", arg: 3, scope: !4000, file: !2444, line: 188, type: !2462)
!4005 = !DILocation(line: 0, scope: !4000)
!4006 = !DILocation(line: 190, column: 2, scope: !4000)
!4007 = !DILocation(line: 191, column: 1, scope: !4000)
!4008 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2444, file: !2444, line: 193, type: !3905, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4009)
!4009 = !{!4010, !4011, !4012}
!4010 = !DILocalVariable(name: "h", arg: 1, scope: !4008, file: !2444, line: 193, type: !2457)
!4011 = !DILocalVariable(name: "c", arg: 2, scope: !4008, file: !2444, line: 193, type: !2462)
!4012 = !DILocalVariable(name: "next", arg: 3, scope: !4008, file: !2444, line: 194, type: !2462)
!4013 = !DILocation(line: 0, scope: !4008)
!4014 = !DILocation(line: 196, column: 2, scope: !4008)
!4015 = !DILocation(line: 197, column: 1, scope: !4008)
!4016 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2444, file: !2444, line: 177, type: !3871, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4017)
!4017 = !{!4018, !4019}
!4018 = !DILocalVariable(name: "h", arg: 1, scope: !4016, file: !2444, line: 177, type: !2457)
!4019 = !DILocalVariable(name: "c", arg: 2, scope: !4016, file: !2444, line: 177, type: !2462)
!4020 = !DILocation(line: 0, scope: !4016)
!4021 = !DILocation(line: 179, column: 9, scope: !4016)
!4022 = !DILocation(line: 179, column: 2, scope: !4016)
!4023 = distinct !DISubprogram(name: "chunk_field", scope: !2444, file: !2444, line: 107, type: !4024, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!2462, !2457, !2462, !2443}
!4026 = !{!4027, !4028, !4029, !4030, !4031}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2444, line: 107, type: !2457)
!4028 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !2444, line: 107, type: !2462)
!4029 = !DILocalVariable(name: "f", arg: 3, scope: !4023, file: !2444, line: 108, type: !2443)
!4030 = !DILocalVariable(name: "buf", scope: !4023, file: !2444, line: 110, type: !2451)
!4031 = !DILocalVariable(name: "cmem", scope: !4023, file: !2444, line: 111, type: !102)
!4032 = !DILocation(line: 0, scope: !4023)
!4033 = !DILocation(line: 110, column: 22, scope: !4023)
!4034 = !DILocation(line: 111, column: 15, scope: !4023)
!4035 = !DILocation(line: 116, column: 11, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !2444, line: 115, column: 9)
!4037 = distinct !DILexicalBlock(scope: !4023, file: !2444, line: 113, column: 6)
!4038 = !DILocation(line: 116, column: 10, scope: !4036)
!4039 = !DILocation(line: 118, column: 1, scope: !4023)
!4040 = distinct !DISubprogram(name: "chunk_buf", scope: !2444, file: !2444, line: 101, type: !4041, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4043)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!2451, !2457}
!4043 = !{!4044}
!4044 = !DILocalVariable(name: "h", arg: 1, scope: !4040, file: !2444, line: 101, type: !2457)
!4045 = !DILocation(line: 0, scope: !4040)
!4046 = !DILocation(line: 104, column: 9, scope: !4040)
!4047 = !DILocation(line: 104, column: 2, scope: !4040)
!4048 = distinct !DISubprogram(name: "chunk_set", scope: !2444, file: !2444, line: 120, type: !4049, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !2457, !2462, !2443, !2462}
!4051 = !{!4052, !4053, !4054, !4055, !4056, !4057}
!4052 = !DILocalVariable(name: "h", arg: 1, scope: !4048, file: !2444, line: 120, type: !2457)
!4053 = !DILocalVariable(name: "c", arg: 2, scope: !4048, file: !2444, line: 120, type: !2462)
!4054 = !DILocalVariable(name: "f", arg: 3, scope: !4048, file: !2444, line: 121, type: !2443)
!4055 = !DILocalVariable(name: "val", arg: 4, scope: !4048, file: !2444, line: 121, type: !2462)
!4056 = !DILocalVariable(name: "buf", scope: !4048, file: !2444, line: 125, type: !2451)
!4057 = !DILocalVariable(name: "cmem", scope: !4048, file: !2444, line: 126, type: !102)
!4058 = !DILocation(line: 0, scope: !4048)
!4059 = !DILocation(line: 125, column: 22, scope: !4048)
!4060 = !DILocation(line: 126, column: 15, scope: !4048)
!4061 = !DILocation(line: 133, column: 27, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !2444, line: 131, column: 9)
!4063 = distinct !DILexicalBlock(scope: !4048, file: !2444, line: 128, column: 6)
!4064 = !DILocation(line: 133, column: 4, scope: !4062)
!4065 = !DILocation(line: 133, column: 3, scope: !4062)
!4066 = !DILocation(line: 133, column: 25, scope: !4062)
!4067 = !DILocation(line: 135, column: 1, scope: !4048)
!4068 = distinct !DISubprogram(name: "min_chunk_size", scope: !2444, file: !2444, line: 240, type: !4069, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!3912, !2457}
!4071 = !{!4072}
!4072 = !DILocalVariable(name: "h", arg: 1, scope: !4068, file: !2444, line: 240, type: !2457)
!4073 = !DILocation(line: 0, scope: !4068)
!4074 = !DILocation(line: 242, column: 9, scope: !4068)
!4075 = !DILocation(line: 242, column: 2, scope: !4068)
!4076 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2444, file: !2444, line: 235, type: !4077, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!3912, !2457, !252}
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "h", arg: 1, scope: !4076, file: !2444, line: 235, type: !2457)
!4081 = !DILocalVariable(name: "bytes", arg: 2, scope: !4076, file: !2444, line: 235, type: !252)
!4082 = !DILocation(line: 0, scope: !4076)
!4083 = !DILocation(line: 237, column: 39, scope: !4076)
!4084 = !DILocation(line: 237, column: 9, scope: !4076)
!4085 = !DILocation(line: 237, column: 2, scope: !4076)
!4086 = distinct !DISubprogram(name: "chunksz", scope: !2444, file: !2444, line: 230, type: !4087, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!3912, !252}
!4089 = !{!4090}
!4090 = !DILocalVariable(name: "bytes", arg: 1, scope: !4086, file: !2444, line: 230, type: !252)
!4091 = !DILocation(line: 0, scope: !4086)
!4092 = !DILocation(line: 232, column: 29, scope: !4086)
!4093 = !DILocation(line: 232, column: 35, scope: !4086)
!4094 = !DILocation(line: 232, column: 2, scope: !4086)
!4095 = distinct !DISubprogram(name: "set_chunk_size", scope: !2444, file: !2444, line: 172, type: !4096, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{null, !2457, !2462, !3912}
!4098 = !{!4099, !4100, !4101}
!4099 = !DILocalVariable(name: "h", arg: 1, scope: !4095, file: !2444, line: 172, type: !2457)
!4100 = !DILocalVariable(name: "c", arg: 2, scope: !4095, file: !2444, line: 172, type: !2462)
!4101 = !DILocalVariable(name: "size", arg: 3, scope: !4095, file: !2444, line: 172, type: !3912)
!4102 = !DILocation(line: 0, scope: !4095)
!4103 = !DILocation(line: 174, column: 38, scope: !4095)
!4104 = !DILocation(line: 174, column: 2, scope: !4095)
!4105 = !DILocation(line: 175, column: 1, scope: !4095)
!4106 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2444, file: !2444, line: 209, type: !4096, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4107)
!4107 = !{!4108, !4109, !4110}
!4108 = !DILocalVariable(name: "h", arg: 1, scope: !4106, file: !2444, line: 209, type: !2457)
!4109 = !DILocalVariable(name: "c", arg: 2, scope: !4106, file: !2444, line: 209, type: !2462)
!4110 = !DILocalVariable(name: "size", arg: 3, scope: !4106, file: !2444, line: 210, type: !3912)
!4111 = !DILocation(line: 0, scope: !4106)
!4112 = !DILocation(line: 212, column: 2, scope: !4106)
!4113 = !DILocation(line: 213, column: 1, scope: !4106)
!4114 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3786, file: !3786, line: 34, type: !3968, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4115)
!4115 = !{!4116, !4117, !4118, !4119, !4120, !4123}
!4116 = !DILocalVariable(name: "h", arg: 1, scope: !4114, file: !3786, line: 34, type: !2457)
!4117 = !DILocalVariable(name: "c", arg: 2, scope: !4114, file: !3786, line: 34, type: !2462)
!4118 = !DILocalVariable(name: "bidx", arg: 3, scope: !4114, file: !3786, line: 34, type: !107)
!4119 = !DILocalVariable(name: "b", scope: !4114, file: !3786, line: 36, type: !3975)
!4120 = !DILocalVariable(name: "first", scope: !4121, file: !3786, line: 47, type: !2462)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3786, line: 46, column: 9)
!4122 = distinct !DILexicalBlock(scope: !4114, file: !3786, line: 42, column: 6)
!4123 = !DILocalVariable(name: "second", scope: !4121, file: !3786, line: 48, type: !2462)
!4124 = !DILocation(line: 0, scope: !4114)
!4125 = !DILocation(line: 36, column: 29, scope: !4114)
!4126 = !DILocation(line: 42, column: 6, scope: !4122)
!4127 = !DILocation(line: 42, column: 28, scope: !4122)
!4128 = !DILocation(line: 42, column: 6, scope: !4114)
!4129 = !DILocation(line: 44, column: 24, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4122, file: !3786, line: 42, column: 34)
!4131 = !DILocation(line: 44, column: 23, scope: !4130)
!4132 = !DILocation(line: 44, column: 6, scope: !4130)
!4133 = !DILocation(line: 44, column: 20, scope: !4130)
!4134 = !DILocation(line: 45, column: 6, scope: !4130)
!4135 = !DILocation(line: 45, column: 11, scope: !4130)
!4136 = !DILocation(line: 46, column: 2, scope: !4130)
!4137 = !DILocation(line: 47, column: 21, scope: !4121)
!4138 = !DILocation(line: 0, scope: !4121)
!4139 = !DILocation(line: 50, column: 6, scope: !4121)
!4140 = !DILocation(line: 50, column: 11, scope: !4121)
!4141 = !DILocation(line: 51, column: 3, scope: !4121)
!4142 = !DILocation(line: 52, column: 3, scope: !4121)
!4143 = !DILocation(line: 58, column: 1, scope: !4114)
!4144 = distinct !DISubprogram(name: "next_free_chunk", scope: !2444, file: !2444, line: 182, type: !3871, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4145)
!4145 = !{!4146, !4147}
!4146 = !DILocalVariable(name: "h", arg: 1, scope: !4144, file: !2444, line: 182, type: !2457)
!4147 = !DILocalVariable(name: "c", arg: 2, scope: !4144, file: !2444, line: 182, type: !2462)
!4148 = !DILocation(line: 0, scope: !4144)
!4149 = !DILocation(line: 184, column: 9, scope: !4144)
!4150 = !DILocation(line: 184, column: 2, scope: !4144)
!4151 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3786, file: !3786, line: 200, type: !4152, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4154)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!252, !3789, !102}
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161}
!4155 = !DILocalVariable(name: "heap", arg: 1, scope: !4151, file: !3786, line: 200, type: !3789)
!4156 = !DILocalVariable(name: "mem", arg: 2, scope: !4151, file: !3786, line: 200, type: !102)
!4157 = !DILocalVariable(name: "h", scope: !4151, file: !3786, line: 202, type: !2457)
!4158 = !DILocalVariable(name: "c", scope: !4151, file: !3786, line: 203, type: !2462)
!4159 = !DILocalVariable(name: "addr", scope: !4151, file: !3786, line: 204, type: !252)
!4160 = !DILocalVariable(name: "chunk_base", scope: !4151, file: !3786, line: 205, type: !252)
!4161 = !DILocalVariable(name: "chunk_sz", scope: !4151, file: !3786, line: 206, type: !252)
!4162 = !DILocation(line: 0, scope: !4151)
!4163 = !DILocation(line: 202, column: 27, scope: !4151)
!4164 = !DILocation(line: 203, column: 16, scope: !4151)
!4165 = !DILocation(line: 204, column: 16, scope: !4151)
!4166 = !DILocation(line: 205, column: 31, scope: !4151)
!4167 = !DILocation(line: 205, column: 22, scope: !4151)
!4168 = !DILocation(line: 206, column: 20, scope: !4151)
!4169 = !DILocation(line: 206, column: 37, scope: !4151)
!4170 = !DILocation(line: 208, column: 26, scope: !4151)
!4171 = !DILocation(line: 208, column: 18, scope: !4151)
!4172 = !DILocation(line: 208, column: 2, scope: !4151)
!4173 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3786, file: !3786, line: 263, type: !4174, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4176)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!102, !3789, !252}
!4176 = !{!4177, !4178, !4179, !4180, !4181, !4182}
!4177 = !DILocalVariable(name: "heap", arg: 1, scope: !4173, file: !3786, line: 263, type: !3789)
!4178 = !DILocalVariable(name: "bytes", arg: 2, scope: !4173, file: !3786, line: 263, type: !252)
!4179 = !DILocalVariable(name: "h", scope: !4173, file: !3786, line: 265, type: !2457)
!4180 = !DILocalVariable(name: "mem", scope: !4173, file: !3786, line: 266, type: !102)
!4181 = !DILocalVariable(name: "chunk_sz", scope: !4173, file: !3786, line: 272, type: !3912)
!4182 = !DILocalVariable(name: "c", scope: !4173, file: !3786, line: 273, type: !2462)
!4183 = !DILocation(line: 0, scope: !4173)
!4184 = !DILocation(line: 265, column: 27, scope: !4173)
!4185 = !DILocation(line: 268, column: 12, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 268, column: 6)
!4187 = !DILocation(line: 268, column: 18, scope: !4186)
!4188 = !DILocation(line: 268, column: 21, scope: !4186)
!4189 = !DILocation(line: 268, column: 6, scope: !4173)
!4190 = !DILocation(line: 272, column: 23, scope: !4173)
!4191 = !DILocation(line: 273, column: 16, scope: !4173)
!4192 = !DILocation(line: 274, column: 8, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 274, column: 6)
!4194 = !DILocation(line: 274, column: 6, scope: !4173)
!4195 = !DILocation(line: 279, column: 6, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4173, file: !3786, line: 279, column: 6)
!4197 = !DILocation(line: 279, column: 23, scope: !4196)
!4198 = !DILocation(line: 279, column: 6, scope: !4173)
!4199 = !DILocation(line: 280, column: 24, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4196, file: !3786, line: 279, column: 35)
!4201 = !DILocation(line: 280, column: 3, scope: !4200)
!4202 = !DILocation(line: 281, column: 3, scope: !4200)
!4203 = !DILocation(line: 282, column: 2, scope: !4200)
!4204 = !DILocation(line: 284, column: 2, scope: !4173)
!4205 = !DILocation(line: 286, column: 8, scope: !4173)
!4206 = !DILocation(line: 298, column: 2, scope: !4173)
!4207 = !DILocation(line: 299, column: 1, scope: !4173)
!4208 = distinct !DISubprogram(name: "size_too_big", scope: !2444, file: !2444, line: 256, type: !4209, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!136, !2457, !252}
!4211 = !{!4212, !4213}
!4212 = !DILocalVariable(name: "h", arg: 1, scope: !4208, file: !2444, line: 256, type: !2457)
!4213 = !DILocalVariable(name: "bytes", arg: 2, scope: !4208, file: !2444, line: 256, type: !252)
!4214 = !DILocation(line: 0, scope: !4208)
!4215 = !DILocation(line: 262, column: 16, scope: !4208)
!4216 = !DILocation(line: 262, column: 36, scope: !4208)
!4217 = !DILocation(line: 262, column: 30, scope: !4208)
!4218 = !DILocation(line: 262, column: 2, scope: !4208)
!4219 = distinct !DISubprogram(name: "alloc_chunk", scope: !3786, file: !3786, line: 211, type: !4220, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!2462, !2457, !3912}
!4222 = !{!4223, !4224, !4225, !4226, !4227, !4230, !4231, !4233, !4234, !4237}
!4223 = !DILocalVariable(name: "h", arg: 1, scope: !4219, file: !3786, line: 211, type: !2457)
!4224 = !DILocalVariable(name: "sz", arg: 2, scope: !4219, file: !3786, line: 211, type: !3912)
!4225 = !DILocalVariable(name: "bi", scope: !4219, file: !3786, line: 213, type: !107)
!4226 = !DILocalVariable(name: "b", scope: !4219, file: !3786, line: 214, type: !3975)
!4227 = !DILocalVariable(name: "first", scope: !4228, file: !3786, line: 233, type: !2462)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3786, line: 232, column: 15)
!4229 = distinct !DILexicalBlock(scope: !4219, file: !3786, line: 232, column: 6)
!4230 = !DILocalVariable(name: "i", scope: !4228, file: !3786, line: 234, type: !107)
!4231 = !DILocalVariable(name: "c", scope: !4232, file: !3786, line: 236, type: !2462)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !3786, line: 235, column: 6)
!4233 = !DILocalVariable(name: "bmask", scope: !4219, file: !3786, line: 249, type: !162)
!4234 = !DILocalVariable(name: "minbucket", scope: !4235, file: !3786, line: 252, type: !107)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3786, line: 251, column: 19)
!4236 = distinct !DILexicalBlock(scope: !4219, file: !3786, line: 251, column: 6)
!4237 = !DILocalVariable(name: "c", scope: !4235, file: !3786, line: 253, type: !2462)
!4238 = !DILocation(line: 0, scope: !4219)
!4239 = !DILocation(line: 213, column: 11, scope: !4219)
!4240 = !DILocation(line: 232, column: 9, scope: !4229)
!4241 = !DILocation(line: 232, column: 6, scope: !4229)
!4242 = !DILocation(line: 232, column: 6, scope: !4219)
!4243 = !DILocation(line: 236, column: 21, scope: !4232)
!4244 = !DILocation(line: 0, scope: !4228)
!4245 = !DILocation(line: 0, scope: !4232)
!4246 = !DILocation(line: 237, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4232, file: !3786, line: 237, column: 8)
!4248 = !DILocation(line: 237, column: 25, scope: !4247)
!4249 = !DILocation(line: 237, column: 8, scope: !4232)
!4250 = !DILocation(line: 238, column: 5, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !3786, line: 237, column: 32)
!4252 = !DILocation(line: 241, column: 14, scope: !4232)
!4253 = !DILocation(line: 241, column: 12, scope: !4232)
!4254 = !DILocation(line: 243, column: 12, scope: !4228)
!4255 = !DILocation(line: 243, column: 16, scope: !4228)
!4256 = distinct !{!4256, !4257, !4258}
!4257 = !DILocation(line: 235, column: 3, scope: !4228)
!4258 = !DILocation(line: 243, column: 35, scope: !4228)
!4259 = !DILocation(line: 249, column: 22, scope: !4219)
!4260 = !DILocation(line: 249, column: 39, scope: !4219)
!4261 = !DILocation(line: 249, column: 36, scope: !4219)
!4262 = !DILocation(line: 251, column: 12, scope: !4236)
!4263 = !DILocation(line: 251, column: 6, scope: !4219)
!4264 = !DILocation(line: 252, column: 19, scope: !4235)
!4265 = !DILocation(line: 0, scope: !4235)
!4266 = !DILocation(line: 253, column: 39, scope: !4235)
!4267 = !DILocation(line: 255, column: 3, scope: !4235)
!4268 = !DILocation(line: 261, column: 1, scope: !4219)
!4269 = distinct !DISubprogram(name: "split_chunks", scope: !3786, file: !3786, line: 109, type: !3905, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4270)
!4270 = !{!4271, !4272, !4273, !4274, !4275, !4276}
!4271 = !DILocalVariable(name: "h", arg: 1, scope: !4269, file: !3786, line: 109, type: !2457)
!4272 = !DILocalVariable(name: "lc", arg: 2, scope: !4269, file: !3786, line: 109, type: !2462)
!4273 = !DILocalVariable(name: "rc", arg: 3, scope: !4269, file: !3786, line: 109, type: !2462)
!4274 = !DILocalVariable(name: "sz0", scope: !4269, file: !3786, line: 114, type: !3912)
!4275 = !DILocalVariable(name: "lsz", scope: !4269, file: !3786, line: 115, type: !3912)
!4276 = !DILocalVariable(name: "rsz", scope: !4269, file: !3786, line: 116, type: !3912)
!4277 = !DILocation(line: 0, scope: !4269)
!4278 = !DILocation(line: 114, column: 18, scope: !4269)
!4279 = !DILocation(line: 115, column: 21, scope: !4269)
!4280 = !DILocation(line: 116, column: 22, scope: !4269)
!4281 = !DILocation(line: 118, column: 2, scope: !4269)
!4282 = !DILocation(line: 119, column: 2, scope: !4269)
!4283 = !DILocation(line: 120, column: 2, scope: !4269)
!4284 = !DILocation(line: 121, column: 25, scope: !4269)
!4285 = !DILocation(line: 121, column: 2, scope: !4269)
!4286 = !DILocation(line: 122, column: 1, scope: !4269)
!4287 = distinct !DISubprogram(name: "chunk_mem", scope: !3786, file: !3786, line: 24, type: !4288, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!102, !2457, !2462}
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DILocalVariable(name: "h", arg: 1, scope: !4287, file: !3786, line: 24, type: !2457)
!4292 = !DILocalVariable(name: "c", arg: 2, scope: !4287, file: !3786, line: 24, type: !2462)
!4293 = !DILocalVariable(name: "buf", scope: !4287, file: !3786, line: 26, type: !2451)
!4294 = !DILocalVariable(name: "ret", scope: !4287, file: !3786, line: 27, type: !182)
!4295 = !DILocation(line: 0, scope: !4287)
!4296 = !DILocation(line: 26, column: 22, scope: !4287)
!4297 = !DILocation(line: 27, column: 38, scope: !4287)
!4298 = !DILocation(line: 31, column: 2, scope: !4287)
!4299 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3786, file: !3786, line: 301, type: !4300, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!102, !3789, !252, !252}
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314}
!4303 = !DILocalVariable(name: "heap", arg: 1, scope: !4299, file: !3786, line: 301, type: !3789)
!4304 = !DILocalVariable(name: "align", arg: 2, scope: !4299, file: !3786, line: 301, type: !252)
!4305 = !DILocalVariable(name: "bytes", arg: 3, scope: !4299, file: !3786, line: 301, type: !252)
!4306 = !DILocalVariable(name: "h", scope: !4299, file: !3786, line: 303, type: !2457)
!4307 = !DILocalVariable(name: "gap", scope: !4299, file: !3786, line: 304, type: !252)
!4308 = !DILocalVariable(name: "rew", scope: !4299, file: !3786, line: 304, type: !252)
!4309 = !DILocalVariable(name: "padded_sz", scope: !4299, file: !3786, line: 335, type: !3912)
!4310 = !DILocalVariable(name: "c0", scope: !4299, file: !3786, line: 336, type: !2462)
!4311 = !DILocalVariable(name: "mem", scope: !4299, file: !3786, line: 341, type: !182)
!4312 = !DILocalVariable(name: "end", scope: !4299, file: !3786, line: 345, type: !2451)
!4313 = !DILocalVariable(name: "c", scope: !4299, file: !3786, line: 348, type: !2462)
!4314 = !DILocalVariable(name: "c_end", scope: !4299, file: !3786, line: 349, type: !2462)
!4315 = !DILocation(line: 0, scope: !4299)
!4316 = !DILocation(line: 303, column: 27, scope: !4299)
!4317 = !DILocation(line: 313, column: 16, scope: !4299)
!4318 = !DILocation(line: 313, column: 14, scope: !4299)
!4319 = !DILocation(line: 314, column: 12, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 314, column: 6)
!4321 = !DILocation(line: 314, column: 6, scope: !4299)
!4322 = !DILocation(line: 315, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !3786, line: 314, column: 20)
!4324 = !DILocation(line: 316, column: 9, scope: !4323)
!4325 = !DILocation(line: 318, column: 13, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !3786, line: 318, column: 7)
!4327 = distinct !DILexicalBlock(scope: !4320, file: !3786, line: 317, column: 9)
!4328 = !DILocation(line: 318, column: 7, scope: !4327)
!4329 = !DILocation(line: 319, column: 11, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3786, line: 318, column: 39)
!4331 = !DILocation(line: 319, column: 4, scope: !4330)
!4332 = !DILocation(line: 0, scope: !4320)
!4333 = !DILocation(line: 326, column: 12, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 326, column: 6)
!4335 = !DILocation(line: 326, column: 17, scope: !4334)
!4336 = !DILocation(line: 326, column: 20, scope: !4334)
!4337 = !DILocation(line: 326, column: 6, scope: !4299)
!4338 = !DILocation(line: 335, column: 50, scope: !4299)
!4339 = !DILocation(line: 335, column: 58, scope: !4299)
!4340 = !DILocation(line: 335, column: 24, scope: !4299)
!4341 = !DILocation(line: 336, column: 17, scope: !4299)
!4342 = !DILocation(line: 338, column: 9, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 338, column: 6)
!4344 = !DILocation(line: 338, column: 6, scope: !4299)
!4345 = !DILocation(line: 341, column: 17, scope: !4299)
!4346 = !DILocation(line: 344, column: 20, scope: !4299)
!4347 = !DILocation(line: 344, column: 8, scope: !4299)
!4348 = !DILocation(line: 344, column: 47, scope: !4299)
!4349 = !DILocation(line: 345, column: 39, scope: !4299)
!4350 = !DILocation(line: 348, column: 16, scope: !4299)
!4351 = !DILocation(line: 349, column: 26, scope: !4299)
!4352 = !DILocation(line: 349, column: 24, scope: !4299)
!4353 = !DILocation(line: 353, column: 8, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 353, column: 6)
!4355 = !DILocation(line: 353, column: 6, scope: !4299)
!4356 = !DILocation(line: 354, column: 3, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !3786, line: 353, column: 14)
!4358 = !DILocation(line: 355, column: 3, scope: !4357)
!4359 = !DILocation(line: 356, column: 2, scope: !4357)
!4360 = !DILocation(line: 359, column: 6, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4299, file: !3786, line: 359, column: 6)
!4362 = !DILocation(line: 359, column: 24, scope: !4361)
!4363 = !DILocation(line: 359, column: 6, scope: !4299)
!4364 = !DILocation(line: 360, column: 3, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !3786, line: 359, column: 33)
!4366 = !DILocation(line: 361, column: 3, scope: !4365)
!4367 = !DILocation(line: 362, column: 2, scope: !4365)
!4368 = !DILocation(line: 364, column: 2, scope: !4299)
!4369 = !DILocation(line: 377, column: 1, scope: !4299)
!4370 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3786, file: !3786, line: 379, type: !4371, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!102, !3789, !102, !252, !252}
!4373 = !{!4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4389, !4390}
!4374 = !DILocalVariable(name: "heap", arg: 1, scope: !4370, file: !3786, line: 379, type: !3789)
!4375 = !DILocalVariable(name: "ptr", arg: 2, scope: !4370, file: !3786, line: 379, type: !102)
!4376 = !DILocalVariable(name: "align", arg: 3, scope: !4370, file: !3786, line: 380, type: !252)
!4377 = !DILocalVariable(name: "bytes", arg: 4, scope: !4370, file: !3786, line: 380, type: !252)
!4378 = !DILocalVariable(name: "h", scope: !4370, file: !3786, line: 382, type: !2457)
!4379 = !DILocalVariable(name: "c", scope: !4370, file: !3786, line: 399, type: !2462)
!4380 = !DILocalVariable(name: "rc", scope: !4370, file: !3786, line: 400, type: !2462)
!4381 = !DILocalVariable(name: "align_gap", scope: !4370, file: !3786, line: 401, type: !252)
!4382 = !DILocalVariable(name: "chunks_need", scope: !4370, file: !3786, line: 402, type: !3912)
!4383 = !DILocalVariable(name: "split_size", scope: !4384, file: !3786, line: 435, type: !3912)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3786, line: 433, column: 61)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !3786, line: 432, column: 13)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3786, line: 409, column: 13)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !3786, line: 406, column: 13)
!4388 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 404, column: 6)
!4389 = !DILocalVariable(name: "ptr2", scope: !4370, file: !3786, line: 474, type: !102)
!4390 = !DILocalVariable(name: "prev_size", scope: !4391, file: !3786, line: 477, type: !252)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3786, line: 476, column: 20)
!4392 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 476, column: 6)
!4393 = !DILocation(line: 0, scope: !4370)
!4394 = !DILocation(line: 382, column: 27, scope: !4370)
!4395 = !DILocation(line: 385, column: 10, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 385, column: 6)
!4397 = !DILocation(line: 385, column: 6, scope: !4370)
!4398 = !DILocation(line: 386, column: 10, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !3786, line: 385, column: 19)
!4400 = !DILocation(line: 386, column: 3, scope: !4399)
!4401 = !DILocation(line: 388, column: 12, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 388, column: 6)
!4403 = !DILocation(line: 388, column: 6, scope: !4370)
!4404 = !DILocation(line: 389, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3786, line: 388, column: 18)
!4406 = !DILocation(line: 390, column: 3, scope: !4405)
!4407 = !DILocation(line: 395, column: 6, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4370, file: !3786, line: 395, column: 6)
!4409 = !DILocation(line: 395, column: 6, scope: !4370)
!4410 = !DILocation(line: 399, column: 16, scope: !4370)
!4411 = !DILocation(line: 400, column: 17, scope: !4370)
!4412 = !DILocation(line: 401, column: 49, scope: !4370)
!4413 = !DILocation(line: 401, column: 36, scope: !4370)
!4414 = !DILocation(line: 402, column: 52, scope: !4370)
!4415 = !DILocation(line: 402, column: 26, scope: !4370)
!4416 = !DILocation(line: 404, column: 6, scope: !4388)
!4417 = !DILocation(line: 404, column: 12, scope: !4388)
!4418 = !DILocation(line: 404, column: 40, scope: !4388)
!4419 = !DILocation(line: 404, column: 31, scope: !4388)
!4420 = !DILocation(line: 404, column: 6, scope: !4370)
!4421 = !DILocation(line: 406, column: 13, scope: !4387)
!4422 = !DILocation(line: 406, column: 30, scope: !4387)
!4423 = !DILocation(line: 406, column: 13, scope: !4388)
!4424 = !DILocation(line: 409, column: 30, scope: !4386)
!4425 = !DILocation(line: 409, column: 13, scope: !4387)
!4426 = !DILocation(line: 420, column: 24, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4386, file: !3786, line: 409, column: 45)
!4428 = !DILocation(line: 420, column: 3, scope: !4427)
!4429 = !DILocation(line: 421, column: 3, scope: !4427)
!4430 = !DILocation(line: 422, column: 3, scope: !4427)
!4431 = !DILocation(line: 431, column: 3, scope: !4427)
!4432 = !DILocation(line: 432, column: 14, scope: !4385)
!4433 = !DILocation(line: 432, column: 32, scope: !4385)
!4434 = !DILocation(line: 433, column: 26, scope: !4385)
!4435 = !DILocation(line: 433, column: 24, scope: !4385)
!4436 = !DILocation(line: 433, column: 44, scope: !4385)
!4437 = !DILocation(line: 432, column: 13, scope: !4386)
!4438 = !DILocation(line: 435, column: 38, scope: !4384)
!4439 = !DILocation(line: 0, scope: !4384)
!4440 = !DILocation(line: 445, column: 3, scope: !4384)
!4441 = !DILocation(line: 447, column: 20, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4384, file: !3786, line: 447, column: 7)
!4443 = !DILocation(line: 447, column: 18, scope: !4442)
!4444 = !DILocation(line: 447, column: 7, scope: !4384)
!4445 = !DILocation(line: 448, column: 27, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !3786, line: 447, column: 39)
!4447 = !DILocation(line: 448, column: 4, scope: !4446)
!4448 = !DILocation(line: 449, column: 4, scope: !4446)
!4449 = !DILocation(line: 450, column: 3, scope: !4446)
!4450 = !DILocation(line: 452, column: 3, scope: !4384)
!4451 = !DILocation(line: 453, column: 3, scope: !4384)
!4452 = !DILocation(line: 474, column: 15, scope: !4370)
!4453 = !DILocation(line: 476, column: 11, scope: !4392)
!4454 = !DILocation(line: 476, column: 6, scope: !4370)
!4455 = !DILocation(line: 477, column: 42, scope: !4391)
!4456 = !DILocation(line: 477, column: 22, scope: !4391)
!4457 = !DILocation(line: 477, column: 60, scope: !4391)
!4458 = !DILocation(line: 0, scope: !4391)
!4459 = !DILocation(line: 479, column: 21, scope: !4391)
!4460 = !DILocation(line: 479, column: 3, scope: !4391)
!4461 = !DILocation(line: 480, column: 3, scope: !4391)
!4462 = !DILocation(line: 481, column: 2, scope: !4391)
!4463 = !DILocation(line: 483, column: 1, scope: !4370)
!4464 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2444, file: !2444, line: 245, type: !4465, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!252, !2457, !3912}
!4467 = !{!4468, !4469}
!4468 = !DILocalVariable(name: "h", arg: 1, scope: !4464, file: !2444, line: 245, type: !2457)
!4469 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4464, file: !2444, line: 245, type: !3912)
!4470 = !DILocation(line: 0, scope: !4464)
!4471 = !DILocation(line: 247, column: 20, scope: !4464)
!4472 = !DILocation(line: 247, column: 33, scope: !4464)
!4473 = !DILocation(line: 247, column: 2, scope: !4464)
!4474 = distinct !DISubprogram(name: "sys_heap_init", scope: !3786, file: !3786, line: 485, type: !4475, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !3789, !102, !252}
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487}
!4478 = !DILocalVariable(name: "heap", arg: 1, scope: !4474, file: !3786, line: 485, type: !3789)
!4479 = !DILocalVariable(name: "mem", arg: 2, scope: !4474, file: !3786, line: 485, type: !102)
!4480 = !DILocalVariable(name: "bytes", arg: 3, scope: !4474, file: !3786, line: 485, type: !252)
!4481 = !DILocalVariable(name: "addr", scope: !4474, file: !3786, line: 502, type: !22)
!4482 = !DILocalVariable(name: "end", scope: !4474, file: !3786, line: 503, type: !22)
!4483 = !DILocalVariable(name: "heap_sz", scope: !4474, file: !3786, line: 504, type: !3912)
!4484 = !DILocalVariable(name: "h", scope: !4474, file: !3786, line: 509, type: !2457)
!4485 = !DILocalVariable(name: "nb_buckets", scope: !4474, file: !3786, line: 520, type: !107)
!4486 = !DILocalVariable(name: "chunk0_size", scope: !4474, file: !3786, line: 521, type: !3912)
!4487 = !DILocalVariable(name: "i", scope: !4488, file: !3786, line: 526, type: !107)
!4488 = distinct !DILexicalBlock(scope: !4474, file: !3786, line: 526, column: 2)
!4489 = !DILocation(line: 0, scope: !4474)
!4490 = !DILocation(line: 499, column: 8, scope: !4474)
!4491 = !DILocation(line: 502, column: 19, scope: !4474)
!4492 = !DILocation(line: 503, column: 18, scope: !4474)
!4493 = !DILocation(line: 504, column: 27, scope: !4474)
!4494 = !DILocation(line: 504, column: 35, scope: !4474)
!4495 = !DILocation(line: 509, column: 21, scope: !4474)
!4496 = !DILocation(line: 510, column: 8, scope: !4474)
!4497 = !DILocation(line: 510, column: 13, scope: !4474)
!4498 = !DILocation(line: 511, column: 5, scope: !4474)
!4499 = !DILocation(line: 511, column: 15, scope: !4474)
!4500 = !DILocation(line: 512, column: 5, scope: !4474)
!4501 = !DILocation(line: 512, column: 19, scope: !4474)
!4502 = !DILocation(line: 520, column: 19, scope: !4474)
!4503 = !DILocation(line: 522, column: 21, scope: !4474)
!4504 = !DILocation(line: 521, column: 56, scope: !4474)
!4505 = !DILocation(line: 521, column: 26, scope: !4474)
!4506 = !DILocation(line: 0, scope: !4488)
!4507 = !DILocation(line: 526, column: 20, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4488, file: !3786, line: 526, column: 2)
!4509 = !DILocation(line: 526, column: 2, scope: !4488)
!4510 = !DILocation(line: 531, column: 2, scope: !4474)
!4511 = !DILocation(line: 532, column: 2, scope: !4474)
!4512 = !DILocation(line: 533, column: 2, scope: !4474)
!4513 = !DILocation(line: 536, column: 41, scope: !4474)
!4514 = !DILocation(line: 536, column: 2, scope: !4474)
!4515 = !DILocation(line: 537, column: 2, scope: !4474)
!4516 = !DILocation(line: 540, column: 2, scope: !4474)
!4517 = !DILocation(line: 541, column: 2, scope: !4474)
!4518 = !DILocation(line: 542, column: 2, scope: !4474)
!4519 = !DILocation(line: 544, column: 2, scope: !4474)
!4520 = !DILocation(line: 545, column: 1, scope: !4474)
!4521 = !DILocation(line: 527, column: 17, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4508, file: !3786, line: 526, column: 39)
!4523 = !DILocation(line: 527, column: 22, scope: !4522)
!4524 = !DILocation(line: 526, column: 35, scope: !4508)
!4525 = distinct !{!4525, !4509, !4526}
!4526 = !DILocation(line: 528, column: 2, scope: !4488)
!4527 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2477, file: !2477, line: 1338, type: !4528, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !4536)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!107, !3517, !102, !123, !4530, !162}
!4530 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3483, line: 99, baseType: !4531)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3483, line: 40, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2477, baseType: !4533)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4534)
!4534 = !{!4535}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4533, file: !2477, baseType: !102, size: 32)
!4536 = !{!4537, !4538, !4539, !4540, !4541, !4542, !4546, !4547, !4548, !4550, !4555, !4600, !4603, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4615, !4616, !4617, !4621, !4624, !4626, !4629, !4630, !4631, !4636, !4642, !4645, !4649, !4655, !4659, !4662, !4664, !4667}
!4537 = !DILocalVariable(name: "out", arg: 1, scope: !4527, file: !2477, line: 1338, type: !3517)
!4538 = !DILocalVariable(name: "ctx", arg: 2, scope: !4527, file: !2477, line: 1338, type: !102)
!4539 = !DILocalVariable(name: "fp", arg: 3, scope: !4527, file: !2477, line: 1338, type: !123)
!4540 = !DILocalVariable(name: "ap", arg: 4, scope: !4527, file: !2477, line: 1339, type: !4530)
!4541 = !DILocalVariable(name: "flags", arg: 5, scope: !4527, file: !2477, line: 1339, type: !162)
!4542 = !DILocalVariable(name: "buf", scope: !4527, file: !2477, line: 1341, type: !4543)
!4543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4544)
!4544 = !{!4545}
!4545 = !DISubrange(count: 22)
!4546 = !DILocalVariable(name: "count", scope: !4527, file: !2477, line: 1342, type: !252)
!4547 = !DILocalVariable(name: "sint", scope: !4527, file: !2477, line: 1343, type: !2496)
!4548 = !DILocalVariable(name: "tagged_ap", scope: !4527, file: !2477, line: 1345, type: !4549)
!4549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2477, line: 1377, type: !107)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2477, line: 1377, column: 4)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2477, line: 1376, column: 19)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1376, column: 7)
!4554 = distinct !DILexicalBlock(scope: !4527, file: !2477, line: 1375, column: 19)
!4555 = !DILocalVariable(name: "state", scope: !4554, file: !2477, line: 1395, type: !4556)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4527, file: !2477, line: 1392, size: 192, elements: !4557)
!4557 = !{!4558, !4568}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4556, file: !2477, line: 1393, baseType: !4559, size: 64)
!4559 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2477, line: 166, size: 64, elements: !4560)
!4560 = !{!4561, !4562, !4563, !4565, !4567}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4559, file: !2477, line: 168, baseType: !2496, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4559, file: !2477, line: 171, baseType: !2499, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4559, file: !2477, line: 174, baseType: !4564, size: 64)
!4564 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4559, file: !2477, line: 177, baseType: !4566, size: 64)
!4566 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4559, file: !2477, line: 180, baseType: !102, size: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4556, file: !2477, line: 1394, baseType: !4569, size: 96, offset: 64)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2477, line: 189, size: 96, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4595}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4569, file: !2477, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4569, file: !2477, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4569, file: !2477, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4569, file: !2477, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4569, file: !2477, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4569, file: !2477, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4569, file: !2477, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4569, file: !2477, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4569, file: !2477, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4569, file: !2477, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4569, file: !2477, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4569, file: !2477, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4569, file: !2477, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4569, file: !2477, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4569, file: !2477, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4569, file: !2477, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4569, file: !2477, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4569, file: !2477, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4569, file: !2477, line: 260, baseType: !134, size: 8, offset: 24)
!4590 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2477, line: 262, baseType: !4591, size: 32, offset: 32)
!4591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2477, line: 262, size: 32, elements: !4592)
!4592 = !{!4593, !4594}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4591, file: !2477, line: 267, baseType: !107, size: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4591, file: !2477, line: 289, baseType: !107, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2477, line: 292, baseType: !4596, size: 32, offset: 64)
!4596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2477, line: 292, size: 32, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4596, file: !2477, line: 297, baseType: !107, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4596, file: !2477, line: 306, baseType: !107, size: 32)
!4600 = !DILocalVariable(name: "conv", scope: !4554, file: !2477, line: 1400, type: !4601)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 32)
!4603 = !DILocalVariable(name: "value", scope: !4554, file: !2477, line: 1401, type: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4605)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 32)
!4606 = !DILocalVariable(name: "sp", scope: !4554, file: !2477, line: 1402, type: !123)
!4607 = !DILocalVariable(name: "width", scope: !4554, file: !2477, line: 1403, type: !107)
!4608 = !DILocalVariable(name: "precision", scope: !4554, file: !2477, line: 1404, type: !107)
!4609 = !DILocalVariable(name: "bps", scope: !4554, file: !2477, line: 1405, type: !123)
!4610 = !DILocalVariable(name: "bpe", scope: !4554, file: !2477, line: 1406, type: !123)
!4611 = !DILocalVariable(name: "sign", scope: !4554, file: !2477, line: 1407, type: !125)
!4612 = !DILocalVariable(name: "arg", scope: !4613, file: !2477, line: 1432, type: !107)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2477, line: 1431, column: 24)
!4614 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1431, column: 7)
!4615 = !DILocalVariable(name: "specifier_cat", scope: !4554, file: !2477, line: 1468, type: !2476)
!4616 = !DILocalVariable(name: "length_mod", scope: !4554, file: !2477, line: 1470, type: !2484)
!4617 = !DILocalVariable(name: "rc", scope: !4618, file: !2477, line: 1575, type: !107)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2477, line: 1575, column: 4)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2477, line: 1574, column: 43)
!4620 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1574, column: 7)
!4621 = !DILocalVariable(name: "rc", scope: !4622, file: !2477, line: 1584, type: !107)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1584, column: 4)
!4623 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1582, column: 28)
!4624 = !DILocalVariable(name: "len", scope: !4625, file: !2477, line: 1589, type: !252)
!4625 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1586, column: 13)
!4626 = !DILocalVariable(name: "len", scope: !4627, file: !2477, line: 1641, type: !252)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2477, line: 1640, column: 24)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1640, column: 8)
!4629 = !DILocalVariable(name: "nj_len", scope: !4554, file: !2477, line: 1722, type: !252)
!4630 = !DILocalVariable(name: "pad_len", scope: !4554, file: !2477, line: 1723, type: !107)
!4631 = !DILocalVariable(name: "pad", scope: !4632, file: !2477, line: 1751, type: !125)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2477, line: 1750, column: 26)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2477, line: 1750, column: 8)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2477, line: 1747, column: 18)
!4635 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1747, column: 7)
!4636 = !DILocalVariable(name: "rc", scope: !4637, file: !2477, line: 1758, type: !107)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !2477, line: 1758, column: 7)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2477, line: 1757, column: 21)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2477, line: 1757, column: 10)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2477, line: 1756, column: 26)
!4641 = distinct !DILexicalBlock(scope: !4632, file: !2477, line: 1756, column: 9)
!4642 = !DILocalVariable(name: "rc", scope: !4643, file: !2477, line: 1765, type: !107)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2477, line: 1765, column: 6)
!4644 = distinct !DILexicalBlock(scope: !4632, file: !2477, line: 1764, column: 25)
!4645 = !DILocalVariable(name: "rc", scope: !4646, file: !2477, line: 1774, type: !107)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2477, line: 1774, column: 4)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2477, line: 1773, column: 18)
!4648 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1773, column: 7)
!4649 = !DILocalVariable(name: "rc", scope: !4650, file: !2477, line: 1819, type: !107)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2477, line: 1819, column: 5)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !2477, line: 1818, column: 44)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2477, line: 1818, column: 8)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2477, line: 1817, column: 10)
!4654 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1777, column: 7)
!4655 = !DILocalVariable(name: "rc", scope: !4656, file: !2477, line: 1823, type: !107)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2477, line: 1823, column: 5)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2477, line: 1822, column: 26)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !2477, line: 1822, column: 8)
!4659 = !DILocalVariable(name: "rc", scope: !4660, file: !2477, line: 1828, type: !107)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2477, line: 1828, column: 5)
!4661 = distinct !DILexicalBlock(scope: !4653, file: !2477, line: 1827, column: 26)
!4662 = !DILocalVariable(name: "rc", scope: !4663, file: !2477, line: 1831, type: !107)
!4663 = distinct !DILexicalBlock(scope: !4653, file: !2477, line: 1831, column: 4)
!4664 = !DILocalVariable(name: "rc", scope: !4665, file: !2477, line: 1836, type: !107)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2477, line: 1836, column: 4)
!4666 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1835, column: 21)
!4667 = !DILabel(scope: !4623, name: "prec_int_pad0", file: !2477, line: 1634)
!4668 = !DILocation(line: 0, scope: !4527)
!4669 = !DILocation(line: 1341, column: 2, scope: !4527)
!4670 = !DILocation(line: 1341, column: 7, scope: !4527)
!4671 = !DILocation(line: 1375, column: 2, scope: !4527)
!4672 = !DILocation(line: 1342, column: 9, scope: !4527)
!4673 = !DILocation(line: 1375, column: 9, scope: !4527)
!4674 = !DILocation(line: 1377, column: 4, scope: !4551)
!4675 = !DILocation(line: 0, scope: !4551)
!4676 = !DILocation(line: 1377, column: 4, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4551, file: !2477, line: 1377, column: 4)
!4678 = distinct !{!4678, !4671, !4679}
!4679 = !DILocation(line: 1839, column: 2, scope: !4527)
!4680 = !DILocation(line: 1392, column: 3, scope: !4554)
!4681 = !DILocation(line: 1395, column: 5, scope: !4554)
!4682 = !DILocation(line: 0, scope: !4554)
!4683 = !DILocation(line: 1409, column: 8, scope: !4554)
!4684 = !DILocation(line: 1414, column: 13, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1414, column: 7)
!4686 = !DILocation(line: 1414, column: 7, scope: !4554)
!4687 = !DILocation(line: 1415, column: 12, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !2477, line: 1414, column: 25)
!4689 = !DILocation(line: 1417, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4688, file: !2477, line: 1417, column: 8)
!4691 = !DILocation(line: 1417, column: 8, scope: !4688)
!4692 = !DILocation(line: 1418, column: 21, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !2477, line: 1417, column: 19)
!4694 = !DILocation(line: 1419, column: 13, scope: !4693)
!4695 = !DILocation(line: 1420, column: 4, scope: !4693)
!4696 = !DILocation(line: 1421, column: 20, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4685, file: !2477, line: 1421, column: 14)
!4698 = !DILocation(line: 1421, column: 14, scope: !4685)
!4699 = !DILocation(line: 1431, column: 13, scope: !4614)
!4700 = !DILocation(line: 1431, column: 7, scope: !4554)
!4701 = !DILocation(line: 1432, column: 14, scope: !4613)
!4702 = !DILocation(line: 0, scope: !4613)
!4703 = !DILocation(line: 1434, column: 12, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4613, file: !2477, line: 1434, column: 8)
!4705 = !DILocation(line: 1434, column: 8, scope: !4613)
!4706 = !DILocation(line: 1435, column: 24, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4704, file: !2477, line: 1434, column: 17)
!4708 = !DILocation(line: 1436, column: 4, scope: !4707)
!4709 = !DILocation(line: 1439, column: 20, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4614, file: !2477, line: 1439, column: 14)
!4711 = !DILocation(line: 1439, column: 14, scope: !4614)
!4712 = !DILocation(line: 1469, column: 37, scope: !4554)
!4713 = !DILocation(line: 1448, column: 20, scope: !4554)
!4714 = !DILocation(line: 1449, column: 22, scope: !4554)
!4715 = !DILocation(line: 1471, column: 34, scope: !4554)
!4716 = !DILocation(line: 1478, column: 7, scope: !4554)
!4717 = !DILocation(line: 1479, column: 4, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2477, line: 1478, column: 40)
!4719 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1478, column: 7)
!4720 = !DILocation(line: 1484, column: 19, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !2477, line: 1479, column: 24)
!4722 = !DILocation(line: 1484, column: 17, scope: !4721)
!4723 = !DILocation(line: 1485, column: 5, scope: !4721)
!4724 = !DILocation(line: 1492, column: 20, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2477, line: 1491, column: 12)
!4726 = distinct !DILexicalBlock(scope: !4721, file: !2477, line: 1487, column: 9)
!4727 = !DILocation(line: 1492, column: 18, scope: !4725)
!4728 = !DILocation(line: 1494, column: 5, scope: !4721)
!4729 = !DILocation(line: 1497, column: 23, scope: !4721)
!4730 = !DILocation(line: 1496, column: 17, scope: !4721)
!4731 = !DILocation(line: 1498, column: 5, scope: !4721)
!4732 = !DILocation(line: 1501, column: 23, scope: !4721)
!4733 = !DILocation(line: 1500, column: 17, scope: !4721)
!4734 = !DILocation(line: 1502, column: 5, scope: !4721)
!4735 = !DILocation(line: 1513, column: 23, scope: !4721)
!4736 = !DILocation(line: 1513, column: 6, scope: !4721)
!4737 = !DILocation(line: 1512, column: 17, scope: !4721)
!4738 = !DILocation(line: 1514, column: 5, scope: !4721)
!4739 = !DILocation(line: 0, scope: !4721)
!4740 = !DILocation(line: 1516, column: 8, scope: !4718)
!4741 = !DILocation(line: 1517, column: 19, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2477, line: 1516, column: 33)
!4743 = distinct !DILexicalBlock(scope: !4718, file: !2477, line: 1516, column: 8)
!4744 = !DILocation(line: 1517, column: 17, scope: !4742)
!4745 = !DILocation(line: 1518, column: 4, scope: !4742)
!4746 = !DILocation(line: 1519, column: 19, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2477, line: 1518, column: 39)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !2477, line: 1518, column: 15)
!4749 = !DILocation(line: 1519, column: 17, scope: !4747)
!4750 = !DILocation(line: 1520, column: 4, scope: !4747)
!4751 = !DILocation(line: 1522, column: 4, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2477, line: 1521, column: 47)
!4753 = distinct !DILexicalBlock(scope: !4719, file: !2477, line: 1521, column: 14)
!4754 = !DILocation(line: 1527, column: 19, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !2477, line: 1522, column: 24)
!4756 = !DILocation(line: 1527, column: 17, scope: !4755)
!4757 = !DILocation(line: 1528, column: 5, scope: !4755)
!4758 = !DILocation(line: 0, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !2477, line: 1530, column: 9)
!4760 = !DILocation(line: 1540, column: 23, scope: !4755)
!4761 = !DILocation(line: 1539, column: 17, scope: !4755)
!4762 = !DILocation(line: 1542, column: 5, scope: !4755)
!4763 = !DILocation(line: 1545, column: 23, scope: !4755)
!4764 = !DILocation(line: 1544, column: 17, scope: !4755)
!4765 = !DILocation(line: 1547, column: 5, scope: !4755)
!4766 = !DILocation(line: 1551, column: 23, scope: !4755)
!4767 = !DILocation(line: 1551, column: 6, scope: !4755)
!4768 = !DILocation(line: 1550, column: 17, scope: !4755)
!4769 = !DILocation(line: 1552, column: 5, scope: !4755)
!4770 = !DILocation(line: 0, scope: !4755)
!4771 = !DILocation(line: 1554, column: 8, scope: !4752)
!4772 = !DILocation(line: 1555, column: 19, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2477, line: 1554, column: 33)
!4774 = distinct !DILexicalBlock(scope: !4752, file: !2477, line: 1554, column: 8)
!4775 = !DILocation(line: 1555, column: 17, scope: !4773)
!4776 = !DILocation(line: 1556, column: 4, scope: !4773)
!4777 = !DILocation(line: 1557, column: 19, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !2477, line: 1556, column: 39)
!4779 = distinct !DILexicalBlock(scope: !4774, file: !2477, line: 1556, column: 15)
!4780 = !DILocation(line: 1557, column: 17, scope: !4778)
!4781 = !DILocation(line: 1558, column: 4, scope: !4778)
!4782 = !DILocation(line: 0, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2477, line: 1560, column: 8)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !2477, line: 1559, column: 45)
!4785 = distinct !DILexicalBlock(scope: !4753, file: !2477, line: 1559, column: 14)
!4786 = !DILocation(line: 1566, column: 17, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2477, line: 1565, column: 46)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !2477, line: 1565, column: 14)
!4789 = !DILocation(line: 1566, column: 15, scope: !4787)
!4790 = !DILocation(line: 1567, column: 3, scope: !4787)
!4791 = !DILocation(line: 1574, column: 21, scope: !4620)
!4792 = !DILocation(line: 1575, column: 4, scope: !4618)
!4793 = !DILocation(line: 0, scope: !4618)
!4794 = !DILocation(line: 1575, column: 4, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4618, file: !2477, line: 1575, column: 4)
!4796 = !DILocation(line: 1582, column: 17, scope: !4554)
!4797 = !DILocation(line: 1582, column: 3, scope: !4554)
!4798 = !DILocation(line: 1584, column: 4, scope: !4622)
!4799 = !DILocation(line: 0, scope: !4622)
!4800 = !DILocation(line: 1584, column: 4, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4622, file: !2477, line: 1584, column: 4)
!4802 = !DILocation(line: 1587, column: 31, scope: !4625)
!4803 = !DILocation(line: 1591, column: 18, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4625, file: !2477, line: 1591, column: 8)
!4805 = !DILocation(line: 1591, column: 8, scope: !4625)
!4806 = !DILocation(line: 1592, column: 11, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !2477, line: 1591, column: 24)
!4808 = !DILocation(line: 0, scope: !4625)
!4809 = !DILocation(line: 1593, column: 4, scope: !4807)
!4810 = !DILocation(line: 1594, column: 11, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4804, file: !2477, line: 1593, column: 11)
!4812 = !DILocation(line: 1604, column: 51, scope: !4623)
!4813 = !DILocation(line: 1604, column: 13, scope: !4623)
!4814 = !DILocation(line: 1604, column: 11, scope: !4623)
!4815 = !DILocation(line: 1606, column: 4, scope: !4623)
!4816 = !DILocation(line: 1609, column: 14, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1609, column: 8)
!4818 = !DILocation(line: 1609, column: 8, scope: !4623)
!4819 = !DILocation(line: 1619, column: 18, scope: !4623)
!4820 = !DILocation(line: 1620, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1620, column: 8)
!4822 = !DILocation(line: 1620, column: 8, scope: !4623)
!4823 = !DILocation(line: 1622, column: 36, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !2477, line: 1620, column: 18)
!4825 = !DILocation(line: 1622, column: 17, scope: !4824)
!4826 = !DILocation(line: 1623, column: 4, scope: !4824)
!4827 = !DILocation(line: 1632, column: 29, scope: !4623)
!4828 = !DILocation(line: 1632, column: 10, scope: !4623)
!4829 = !DILocation(line: 1632, column: 4, scope: !4623)
!4830 = !DILocation(line: 1407, column: 8, scope: !4554)
!4831 = !DILocation(line: 0, scope: !4623)
!4832 = !DILocation(line: 1634, column: 3, scope: !4623)
!4833 = !DILocation(line: 1640, column: 18, scope: !4628)
!4834 = !DILocation(line: 1640, column: 8, scope: !4623)
!4835 = !DILocation(line: 1729, column: 13, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1729, column: 7)
!4837 = !DILocation(line: 1641, column: 22, scope: !4627)
!4838 = !DILocation(line: 0, scope: !4627)
!4839 = !DILocation(line: 1646, column: 21, scope: !4627)
!4840 = !DILocation(line: 1649, column: 13, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4627, file: !2477, line: 1649, column: 9)
!4842 = !DILocation(line: 1649, column: 9, scope: !4627)
!4843 = !DILocation(line: 1650, column: 35, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4841, file: !2477, line: 1649, column: 34)
!4845 = !DILocation(line: 1650, column: 23, scope: !4844)
!4846 = !DILocation(line: 1651, column: 5, scope: !4844)
!4847 = !DILocation(line: 1660, column: 15, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1660, column: 8)
!4849 = !DILocation(line: 1660, column: 19, scope: !4848)
!4850 = !DILocation(line: 1660, column: 8, scope: !4623)
!4851 = !DILocation(line: 1661, column: 23, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !2477, line: 1660, column: 28)
!4853 = !DILocation(line: 1661, column: 11, scope: !4852)
!4854 = !DILocation(line: 1665, column: 22, scope: !4852)
!4855 = !DILocation(line: 1666, column: 21, scope: !4852)
!4856 = !DILocation(line: 1668, column: 5, scope: !4852)
!4857 = !DILocation(line: 1677, column: 30, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2477, line: 1676, column: 49)
!4859 = distinct !DILexicalBlock(scope: !4623, file: !2477, line: 1676, column: 8)
!4860 = !DILocation(line: 1677, column: 5, scope: !4858)
!4861 = !DILocation(line: 1680, column: 4, scope: !4623)
!4862 = !DILocation(line: 0, scope: !4804)
!4863 = !DILocation(line: 1597, column: 14, scope: !4625)
!4864 = !DILocation(line: 1699, column: 11, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1699, column: 7)
!4866 = !DILocation(line: 1699, column: 7, scope: !4554)
!4867 = !DILocation(line: 1725, column: 7, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1725, column: 7)
!4869 = !DILocation(line: 1725, column: 12, scope: !4868)
!4870 = !DILocation(line: 1747, column: 13, scope: !4635)
!4871 = !DILocation(line: 1747, column: 7, scope: !4554)
!4872 = !DILocation(line: 1722, column: 24, scope: !4554)
!4873 = !DILocation(line: 1725, column: 7, scope: !4554)
!4874 = !DILocation(line: 1729, column: 7, scope: !4554)
!4875 = !DILocation(line: 1736, column: 13, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4554, file: !2477, line: 1736, column: 7)
!4877 = !DILocation(line: 1735, column: 19, scope: !4554)
!4878 = !DILocation(line: 1736, column: 7, scope: !4554)
!4879 = !DILocation(line: 1748, column: 10, scope: !4634)
!4880 = !DILocation(line: 1750, column: 15, scope: !4633)
!4881 = !DILocation(line: 1750, column: 8, scope: !4634)
!4882 = !DILocation(line: 0, scope: !4632)
!4883 = !DILocation(line: 1756, column: 15, scope: !4641)
!4884 = !DILocation(line: 1756, column: 9, scope: !4632)
!4885 = !DILocation(line: 1758, column: 7, scope: !4637)
!4886 = !DILocation(line: 0, scope: !4637)
!4887 = !DILocation(line: 1758, column: 7, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4637, file: !2477, line: 1758, column: 7)
!4889 = !DILocation(line: 1764, column: 5, scope: !4632)
!4890 = !DILocation(line: 0, scope: !4634)
!4891 = !DILocation(line: 1764, column: 20, scope: !4632)
!4892 = !DILocation(line: 1764, column: 17, scope: !4632)
!4893 = !DILocation(line: 1765, column: 6, scope: !4643)
!4894 = !DILocation(line: 0, scope: !4643)
!4895 = !DILocation(line: 1765, column: 6, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4643, file: !2477, line: 1765, column: 6)
!4897 = distinct !{!4897, !4889, !4898}
!4898 = !DILocation(line: 1766, column: 5, scope: !4632)
!4899 = !DILocation(line: 1773, column: 12, scope: !4648)
!4900 = !DILocation(line: 1773, column: 7, scope: !4554)
!4901 = !DILocation(line: 1773, column: 7, scope: !4648)
!4902 = !DILocation(line: 1774, column: 4, scope: !4646)
!4903 = !DILocation(line: 0, scope: !4646)
!4904 = !DILocation(line: 1774, column: 4, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4646, file: !2477, line: 1774, column: 4)
!4906 = !DILocation(line: 1818, column: 8, scope: !4652)
!4907 = !DILocation(line: 1818, column: 27, scope: !4652)
!4908 = !DILocation(line: 1818, column: 25, scope: !4652)
!4909 = !DILocation(line: 1818, column: 8, scope: !4653)
!4910 = !DILocation(line: 1819, column: 5, scope: !4650)
!4911 = !DILocation(line: 0, scope: !4650)
!4912 = !DILocation(line: 1819, column: 5, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4650, file: !2477, line: 1819, column: 5)
!4914 = !DILocation(line: 1822, column: 14, scope: !4658)
!4915 = !DILocation(line: 1822, column: 8, scope: !4653)
!4916 = !DILocation(line: 1823, column: 5, scope: !4656)
!4917 = !DILocation(line: 0, scope: !4656)
!4918 = !DILocation(line: 1823, column: 5, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4656, file: !2477, line: 1823, column: 5)
!4920 = !DILocation(line: 1826, column: 20, scope: !4653)
!4921 = !DILocation(line: 1827, column: 4, scope: !4653)
!4922 = !DILocation(line: 0, scope: !4653)
!4923 = !DILocation(line: 1827, column: 21, scope: !4653)
!4924 = !DILocation(line: 1827, column: 18, scope: !4653)
!4925 = !DILocation(line: 1828, column: 5, scope: !4660)
!4926 = !DILocation(line: 0, scope: !4660)
!4927 = !DILocation(line: 1828, column: 5, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4660, file: !2477, line: 1828, column: 5)
!4929 = distinct !{!4929, !4921, !4930}
!4930 = !DILocation(line: 1829, column: 4, scope: !4653)
!4931 = !DILocation(line: 1831, column: 4, scope: !4663)
!4932 = !DILocation(line: 0, scope: !4663)
!4933 = !DILocation(line: 1831, column: 4, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4663, file: !2477, line: 1831, column: 4)
!4935 = !DILocation(line: 1835, column: 16, scope: !4554)
!4936 = !DILocation(line: 1835, column: 3, scope: !4554)
!4937 = !DILocation(line: 1836, column: 4, scope: !4665)
!4938 = !DILocation(line: 0, scope: !4665)
!4939 = !DILocation(line: 1836, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4665, file: !2477, line: 1836, column: 4)
!4941 = !DILocation(line: 1837, column: 4, scope: !4666)
!4942 = distinct !{!4942, !4936, !4943}
!4943 = !DILocation(line: 1838, column: 3, scope: !4554)
!4944 = !DILocation(line: 1844, column: 1, scope: !4527)
!4945 = distinct !DISubprogram(name: "extract_conversion", scope: !2477, file: !2477, line: 642, type: !4946, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !4948)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!123, !4602, !123}
!4948 = !{!4949, !4950}
!4949 = !DILocalVariable(name: "conv", arg: 1, scope: !4945, file: !2477, line: 642, type: !4602)
!4950 = !DILocalVariable(name: "sp", arg: 2, scope: !4945, file: !2477, line: 643, type: !123)
!4951 = !DILocation(line: 0, scope: !4945)
!4952 = !DILocation(line: 645, column: 10, scope: !4945)
!4953 = !DILocation(line: 653, column: 2, scope: !4945)
!4954 = !DILocation(line: 654, column: 6, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4945, file: !2477, line: 654, column: 6)
!4956 = !DILocation(line: 654, column: 10, scope: !4955)
!4957 = !DILocation(line: 654, column: 6, scope: !4945)
!4958 = !DILocation(line: 655, column: 24, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4955, file: !2477, line: 654, column: 18)
!4960 = !DILocation(line: 655, column: 19, scope: !4959)
!4961 = !DILocation(line: 656, column: 3, scope: !4959)
!4962 = !DILocation(line: 659, column: 7, scope: !4945)
!4963 = !DILocation(line: 660, column: 7, scope: !4945)
!4964 = !DILocation(line: 661, column: 7, scope: !4945)
!4965 = !DILocation(line: 662, column: 7, scope: !4945)
!4966 = !DILocation(line: 663, column: 7, scope: !4945)
!4967 = !DILocation(line: 665, column: 2, scope: !4945)
!4968 = !DILocation(line: 666, column: 1, scope: !4945)
!4969 = distinct !DISubprogram(name: "outs", scope: !2477, file: !2477, line: 1319, type: !4970, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !4972)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!107, !3517, !102, !123, !123}
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978}
!4973 = !DILocalVariable(name: "out", arg: 1, scope: !4969, file: !2477, line: 1319, type: !3517)
!4974 = !DILocalVariable(name: "ctx", arg: 2, scope: !4969, file: !2477, line: 1320, type: !102)
!4975 = !DILocalVariable(name: "sp", arg: 3, scope: !4969, file: !2477, line: 1321, type: !123)
!4976 = !DILocalVariable(name: "ep", arg: 4, scope: !4969, file: !2477, line: 1322, type: !123)
!4977 = !DILocalVariable(name: "count", scope: !4969, file: !2477, line: 1324, type: !252)
!4978 = !DILocalVariable(name: "rc", scope: !4979, file: !2477, line: 1327, type: !107)
!4979 = distinct !DILexicalBlock(scope: !4969, file: !2477, line: 1326, column: 45)
!4980 = !DILocation(line: 0, scope: !4969)
!4981 = !DILocation(line: 1326, column: 2, scope: !4969)
!4982 = !DILocation(line: 1324, column: 9, scope: !4969)
!4983 = !DILocation(line: 1326, column: 13, scope: !4969)
!4984 = !DILocation(line: 1326, column: 19, scope: !4969)
!4985 = !DILocation(line: 1327, column: 21, scope: !4979)
!4986 = !DILocation(line: 1326, column: 36, scope: !4969)
!4987 = !DILocation(line: 1326, column: 39, scope: !4969)
!4988 = !DILocation(line: 1327, column: 24, scope: !4979)
!4989 = !DILocation(line: 1327, column: 16, scope: !4979)
!4990 = !DILocation(line: 1327, column: 12, scope: !4979)
!4991 = !DILocation(line: 0, scope: !4979)
!4992 = !DILocation(line: 1329, column: 10, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4979, file: !2477, line: 1329, column: 7)
!4994 = !DILocation(line: 1329, column: 7, scope: !4979)
!4995 = distinct !{!4995, !4981, !4996}
!4996 = !DILocation(line: 1333, column: 2, scope: !4969)
!4997 = !DILocation(line: 1336, column: 1, scope: !4969)
!4998 = distinct !DISubprogram(name: "encode_uint", scope: !2477, file: !2477, line: 788, type: !4999, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{!256, !2499, !4602, !256, !123}
!5001 = !{!5002, !5003, !5004, !5005, !5006, !5007, !5009, !5010}
!5002 = !DILocalVariable(name: "value", arg: 1, scope: !4998, file: !2477, line: 788, type: !2499)
!5003 = !DILocalVariable(name: "conv", arg: 2, scope: !4998, file: !2477, line: 789, type: !4602)
!5004 = !DILocalVariable(name: "bps", arg: 3, scope: !4998, file: !2477, line: 790, type: !256)
!5005 = !DILocalVariable(name: "bpe", arg: 4, scope: !4998, file: !2477, line: 791, type: !123)
!5006 = !DILocalVariable(name: "upcase", scope: !4998, file: !2477, line: 793, type: !136)
!5007 = !DILocalVariable(name: "radix", scope: !4998, file: !2477, line: 794, type: !5008)
!5008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5009 = !DILocalVariable(name: "bp", scope: !4998, file: !2477, line: 795, type: !256)
!5010 = !DILocalVariable(name: "lsv", scope: !5011, file: !2477, line: 798, type: !32)
!5011 = distinct !DILexicalBlock(scope: !4998, file: !2477, line: 797, column: 5)
!5012 = !DILocation(line: 0, scope: !4998)
!5013 = !DILocation(line: 793, column: 35, scope: !4998)
!5014 = !DILocation(line: 793, column: 24, scope: !4998)
!5015 = !DILocation(line: 793, column: 16, scope: !4998)
!5016 = !DILocation(line: 794, column: 29, scope: !4998)
!5017 = !DILocation(line: 795, column: 24, scope: !4998)
!5018 = !DILocation(line: 795, column: 17, scope: !4998)
!5019 = !DILocation(line: 797, column: 2, scope: !4998)
!5020 = !DILocation(line: 802, column: 9, scope: !5011)
!5021 = !DILocation(line: 798, column: 22, scope: !5011)
!5022 = !DILocation(line: 0, scope: !5011)
!5023 = !DILocation(line: 800, column: 16, scope: !5011)
!5024 = !DILocation(line: 800, column: 11, scope: !5011)
!5025 = !DILocation(line: 800, column: 4, scope: !5011)
!5026 = !DILocation(line: 800, column: 9, scope: !5011)
!5027 = !DILocation(line: 803, column: 18, scope: !4998)
!5028 = !DILocation(line: 803, column: 24, scope: !4998)
!5029 = !DILocation(line: 803, column: 2, scope: !5011)
!5030 = distinct !{!5030, !5019, !5031}
!5031 = !DILocation(line: 803, column: 37, scope: !4998)
!5032 = !DILocation(line: 808, column: 12, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4998, file: !2477, line: 808, column: 6)
!5034 = !DILocation(line: 808, column: 6, scope: !4998)
!5035 = !DILocation(line: 809, column: 7, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5033, file: !2477, line: 808, column: 23)
!5037 = !DILocation(line: 813, column: 3, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !2477, line: 811, column: 27)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !2477, line: 811, column: 14)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !2477, line: 809, column: 7)
!5041 = !DILocation(line: 0, scope: !5040)
!5042 = !DILocation(line: 818, column: 2, scope: !4998)
!5043 = distinct !DISubprogram(name: "store_count", scope: !2477, file: !2477, line: 1280, type: !5044, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5048)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{null, !5046, !102, !107}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 32)
!5047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!5048 = !{!5049, !5050, !5051}
!5049 = !DILocalVariable(name: "conv", arg: 1, scope: !5043, file: !2477, line: 1280, type: !5046)
!5050 = !DILocalVariable(name: "dp", arg: 2, scope: !5043, file: !2477, line: 1281, type: !102)
!5051 = !DILocalVariable(name: "count", arg: 3, scope: !5043, file: !2477, line: 1282, type: !107)
!5052 = !DILocation(line: 0, scope: !5043)
!5053 = !DILocation(line: 1284, column: 38, scope: !5043)
!5054 = !DILocation(line: 1284, column: 2, scope: !5043)
!5055 = !DILocation(line: 1286, column: 4, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5043, file: !2477, line: 1284, column: 50)
!5057 = !DILocation(line: 1286, column: 14, scope: !5056)
!5058 = !DILocation(line: 1287, column: 3, scope: !5056)
!5059 = !DILocation(line: 1289, column: 24, scope: !5056)
!5060 = !DILocation(line: 1289, column: 22, scope: !5056)
!5061 = !DILocation(line: 1290, column: 3, scope: !5056)
!5062 = !DILocation(line: 1292, column: 18, scope: !5056)
!5063 = !DILocation(line: 1292, column: 4, scope: !5056)
!5064 = !DILocation(line: 1292, column: 16, scope: !5056)
!5065 = !DILocation(line: 1293, column: 3, scope: !5056)
!5066 = !DILocation(line: 1295, column: 4, scope: !5056)
!5067 = !DILocation(line: 1295, column: 15, scope: !5056)
!5068 = !DILocation(line: 1296, column: 3, scope: !5056)
!5069 = !DILocation(line: 1298, column: 22, scope: !5056)
!5070 = !DILocation(line: 1298, column: 4, scope: !5056)
!5071 = !DILocation(line: 1298, column: 20, scope: !5056)
!5072 = !DILocation(line: 1299, column: 3, scope: !5056)
!5073 = !DILocation(line: 1301, column: 21, scope: !5056)
!5074 = !DILocation(line: 1301, column: 4, scope: !5056)
!5075 = !DILocation(line: 1301, column: 19, scope: !5056)
!5076 = !DILocation(line: 1302, column: 3, scope: !5056)
!5077 = !DILocation(line: 1304, column: 4, scope: !5056)
!5078 = !DILocation(line: 1304, column: 17, scope: !5056)
!5079 = !DILocation(line: 1305, column: 3, scope: !5056)
!5080 = !DILocation(line: 1307, column: 4, scope: !5056)
!5081 = !DILocation(line: 1307, column: 20, scope: !5056)
!5082 = !DILocation(line: 1308, column: 3, scope: !5056)
!5083 = !DILocation(line: 1316, column: 1, scope: !5043)
!5084 = distinct !DISubprogram(name: "isupper", scope: !5085, file: !5085, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5086)
!5085 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5086 = !{!5087}
!5087 = !DILocalVariable(name: "a", arg: 1, scope: !5084, file: !5085, line: 16, type: !107)
!5088 = !DILocation(line: 0, scope: !5084)
!5089 = !DILocation(line: 18, column: 29, scope: !5084)
!5090 = !DILocation(line: 18, column: 45, scope: !5084)
!5091 = !DILocation(line: 18, column: 2, scope: !5084)
!5092 = distinct !DISubprogram(name: "conversion_radix", scope: !2477, file: !2477, line: 761, type: !5093, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5095)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!252, !125}
!5095 = !{!5096}
!5096 = !DILocalVariable(name: "specifier", arg: 1, scope: !5092, file: !2477, line: 761, type: !125)
!5097 = !DILocation(line: 0, scope: !5092)
!5098 = !DILocation(line: 763, column: 2, scope: !5092)
!5099 = !DILocation(line: 770, column: 3, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5092, file: !2477, line: 763, column: 21)
!5101 = !DILocation(line: 774, column: 3, scope: !5100)
!5102 = !DILocation(line: 0, scope: !5100)
!5103 = !DILocation(line: 776, column: 1, scope: !5092)
!5104 = distinct !DISubprogram(name: "extract_flags", scope: !2477, file: !2477, line: 339, type: !4946, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5105)
!5105 = !{!5106, !5107, !5108}
!5106 = !DILocalVariable(name: "conv", arg: 1, scope: !5104, file: !2477, line: 339, type: !4602)
!5107 = !DILocalVariable(name: "sp", arg: 2, scope: !5104, file: !2477, line: 340, type: !123)
!5108 = !DILocalVariable(name: "loop", scope: !5104, file: !2477, line: 342, type: !136)
!5109 = !DILocation(line: 0, scope: !5104)
!5110 = !DILocation(line: 344, column: 2, scope: !5104)
!5111 = !DILocation(line: 345, column: 11, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5104, file: !2477, line: 344, column: 5)
!5113 = !DILocation(line: 345, column: 3, scope: !5112)
!5114 = !DILocation(line: 351, column: 4, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5112, file: !2477, line: 345, column: 16)
!5116 = !DILocation(line: 354, column: 4, scope: !5115)
!5117 = !DILocation(line: 357, column: 4, scope: !5115)
!5118 = !DILocation(line: 360, column: 4, scope: !5115)
!5119 = !DILocation(line: 0, scope: !5115)
!5120 = !DILocation(line: 370, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5104, file: !2477, line: 370, column: 6)
!5122 = !DILocation(line: 370, column: 22, scope: !5121)
!5123 = !DILocation(line: 371, column: 19, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !2477, line: 370, column: 42)
!5125 = !DILocation(line: 372, column: 2, scope: !5124)
!5126 = !DILocation(line: 376, column: 2, scope: !5104)
!5127 = distinct !DISubprogram(name: "extract_width", scope: !2477, file: !2477, line: 388, type: !4946, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5128)
!5128 = !{!5129, !5130, !5131, !5132}
!5129 = !DILocalVariable(name: "conv", arg: 1, scope: !5127, file: !2477, line: 388, type: !4602)
!5130 = !DILocalVariable(name: "sp", arg: 2, scope: !5127, file: !2477, line: 389, type: !123)
!5131 = !DILocalVariable(name: "wp", scope: !5127, file: !2477, line: 398, type: !123)
!5132 = !DILocalVariable(name: "width", scope: !5127, file: !2477, line: 399, type: !252)
!5133 = !DILocation(line: 0, scope: !5127)
!5134 = !DILocation(line: 391, column: 8, scope: !5127)
!5135 = !DILocation(line: 391, column: 22, scope: !5127)
!5136 = !DILocation(line: 393, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5127, file: !2477, line: 393, column: 6)
!5138 = !DILocation(line: 393, column: 10, scope: !5137)
!5139 = !DILocation(line: 393, column: 6, scope: !5127)
!5140 = !DILocation(line: 394, column: 20, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !2477, line: 393, column: 18)
!5142 = !DILocation(line: 395, column: 10, scope: !5141)
!5143 = !DILocation(line: 395, column: 3, scope: !5141)
!5144 = !DILocation(line: 399, column: 17, scope: !5127)
!5145 = !DILocation(line: 401, column: 6, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5127, file: !2477, line: 401, column: 6)
!5147 = !DILocation(line: 401, column: 9, scope: !5146)
!5148 = !DILocation(line: 401, column: 6, scope: !5127)
!5149 = !DILocation(line: 402, column: 23, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !2477, line: 401, column: 16)
!5151 = !DILocation(line: 403, column: 9, scope: !5150)
!5152 = !DILocation(line: 403, column: 21, scope: !5150)
!5153 = !DILocation(line: 405, column: 11, scope: !5150)
!5154 = !DILocation(line: 404, column: 21, scope: !5150)
!5155 = !DILocation(line: 406, column: 2, scope: !5150)
!5156 = !DILocation(line: 409, column: 1, scope: !5127)
!5157 = distinct !DISubprogram(name: "extract_prec", scope: !2477, file: !2477, line: 420, type: !4946, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5158)
!5158 = !{!5159, !5160, !5161}
!5159 = !DILocalVariable(name: "conv", arg: 1, scope: !5157, file: !2477, line: 420, type: !4602)
!5160 = !DILocalVariable(name: "sp", arg: 2, scope: !5157, file: !2477, line: 421, type: !123)
!5161 = !DILocalVariable(name: "prec", scope: !5157, file: !2477, line: 435, type: !252)
!5162 = !DILocation(line: 0, scope: !5157)
!5163 = !DILocation(line: 423, column: 24, scope: !5157)
!5164 = !DILocation(line: 423, column: 28, scope: !5157)
!5165 = !DILocation(line: 423, column: 8, scope: !5157)
!5166 = !DILocation(line: 423, column: 21, scope: !5157)
!5167 = !DILocation(line: 425, column: 6, scope: !5157)
!5168 = !DILocation(line: 428, column: 2, scope: !5157)
!5169 = !DILocation(line: 430, column: 6, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5157, file: !2477, line: 430, column: 6)
!5171 = !DILocation(line: 430, column: 10, scope: !5170)
!5172 = !DILocation(line: 430, column: 6, scope: !5157)
!5173 = !DILocation(line: 431, column: 19, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !2477, line: 430, column: 18)
!5175 = !DILocation(line: 432, column: 10, scope: !5174)
!5176 = !DILocation(line: 432, column: 3, scope: !5174)
!5177 = !DILocation(line: 435, column: 16, scope: !5157)
!5178 = !DILocation(line: 437, column: 8, scope: !5157)
!5179 = !DILocation(line: 437, column: 19, scope: !5157)
!5180 = !DILocation(line: 439, column: 10, scope: !5157)
!5181 = !DILocation(line: 438, column: 20, scope: !5157)
!5182 = !DILocation(line: 441, column: 9, scope: !5157)
!5183 = !DILocation(line: 442, column: 1, scope: !5157)
!5184 = distinct !DISubprogram(name: "extract_length", scope: !2477, file: !2477, line: 453, type: !4946, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5185)
!5185 = !{!5186, !5187}
!5186 = !DILocalVariable(name: "conv", arg: 1, scope: !5184, file: !2477, line: 453, type: !4602)
!5187 = !DILocalVariable(name: "sp", arg: 2, scope: !5184, file: !2477, line: 454, type: !123)
!5188 = !DILocation(line: 0, scope: !5184)
!5189 = !DILocation(line: 456, column: 10, scope: !5184)
!5190 = !DILocation(line: 456, column: 2, scope: !5184)
!5191 = !DILocation(line: 458, column: 8, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !2477, line: 458, column: 7)
!5193 = distinct !DILexicalBlock(scope: !5184, file: !2477, line: 456, column: 15)
!5194 = !DILocation(line: 458, column: 7, scope: !5192)
!5195 = !DILocation(line: 458, column: 13, scope: !5192)
!5196 = !DILocation(line: 0, scope: !5192)
!5197 = !DILocation(line: 458, column: 7, scope: !5193)
!5198 = !DILocation(line: 459, column: 21, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5192, file: !2477, line: 458, column: 21)
!5200 = !DILocation(line: 460, column: 4, scope: !5199)
!5201 = !DILocation(line: 461, column: 3, scope: !5199)
!5202 = !DILocation(line: 462, column: 21, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5192, file: !2477, line: 461, column: 10)
!5204 = !DILocation(line: 466, column: 8, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5193, file: !2477, line: 466, column: 7)
!5206 = !DILocation(line: 466, column: 7, scope: !5205)
!5207 = !DILocation(line: 466, column: 13, scope: !5205)
!5208 = !DILocation(line: 0, scope: !5205)
!5209 = !DILocation(line: 466, column: 7, scope: !5193)
!5210 = !DILocation(line: 467, column: 21, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5205, file: !2477, line: 466, column: 21)
!5212 = !DILocation(line: 468, column: 4, scope: !5211)
!5213 = !DILocation(line: 469, column: 3, scope: !5211)
!5214 = !DILocation(line: 470, column: 21, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5205, file: !2477, line: 469, column: 10)
!5216 = !DILocation(line: 474, column: 9, scope: !5193)
!5217 = !DILocation(line: 474, column: 20, scope: !5193)
!5218 = !DILocation(line: 475, column: 3, scope: !5193)
!5219 = !DILocation(line: 476, column: 3, scope: !5193)
!5220 = !DILocation(line: 478, column: 9, scope: !5193)
!5221 = !DILocation(line: 478, column: 20, scope: !5193)
!5222 = !DILocation(line: 479, column: 3, scope: !5193)
!5223 = !DILocation(line: 480, column: 3, scope: !5193)
!5224 = !DILocation(line: 482, column: 9, scope: !5193)
!5225 = !DILocation(line: 482, column: 20, scope: !5193)
!5226 = !DILocation(line: 483, column: 3, scope: !5193)
!5227 = !DILocation(line: 484, column: 3, scope: !5193)
!5228 = !DILocation(line: 486, column: 9, scope: !5193)
!5229 = !DILocation(line: 486, column: 20, scope: !5193)
!5230 = !DILocation(line: 487, column: 3, scope: !5193)
!5231 = !DILocation(line: 492, column: 21, scope: !5193)
!5232 = !DILocation(line: 493, column: 3, scope: !5193)
!5233 = !DILocation(line: 495, column: 9, scope: !5193)
!5234 = !DILocation(line: 495, column: 20, scope: !5193)
!5235 = !DILocation(line: 496, column: 3, scope: !5193)
!5236 = !DILocation(line: 498, column: 2, scope: !5184)
!5237 = distinct !DISubprogram(name: "extract_specifier", scope: !2477, file: !2477, line: 513, type: !4946, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5238)
!5238 = !{!5239, !5240, !5241, !5242}
!5239 = !DILocalVariable(name: "conv", arg: 1, scope: !5237, file: !2477, line: 513, type: !4602)
!5240 = !DILocalVariable(name: "sp", arg: 2, scope: !5237, file: !2477, line: 514, type: !123)
!5241 = !DILocalVariable(name: "unsupported", scope: !5237, file: !2477, line: 516, type: !136)
!5242 = !DILabel(scope: !5243, name: "int_conv", file: !2477, line: 526)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !2477, line: 520, column: 27)
!5244 = !DILocation(line: 0, scope: !5237)
!5245 = !DILocation(line: 518, column: 20, scope: !5237)
!5246 = !DILocation(line: 518, column: 8, scope: !5237)
!5247 = !DILocation(line: 518, column: 18, scope: !5237)
!5248 = !DILocation(line: 520, column: 2, scope: !5237)
!5249 = !DILocation(line: 525, column: 3, scope: !5243)
!5250 = !DILocation(line: 0, scope: !5243)
!5251 = !DILocation(line: 526, column: 1, scope: !5243)
!5252 = !DILocation(line: 528, column: 24, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5243, file: !2477, line: 528, column: 7)
!5254 = !DILocation(line: 528, column: 7, scope: !5243)
!5255 = !DILocation(line: 535, column: 23, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5243, file: !2477, line: 535, column: 7)
!5257 = !DILocation(line: 535, column: 7, scope: !5243)
!5258 = !DILocation(line: 536, column: 36, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5256, file: !2477, line: 535, column: 31)
!5260 = !DILocation(line: 537, column: 3, scope: !5259)
!5261 = !DILocation(line: 570, column: 9, scope: !5243)
!5262 = !DILocation(line: 570, column: 23, scope: !5243)
!5263 = !DILocation(line: 575, column: 4, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !2477, line: 573, column: 48)
!5265 = distinct !DILexicalBlock(scope: !5243, file: !2477, line: 573, column: 7)
!5266 = !DILocation(line: 603, column: 9, scope: !5243)
!5267 = !DILocation(line: 603, column: 23, scope: !5243)
!5268 = !DILocation(line: 605, column: 24, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5243, file: !2477, line: 605, column: 7)
!5270 = !DILocation(line: 605, column: 7, scope: !5243)
!5271 = !DILocation(line: 612, column: 9, scope: !5243)
!5272 = !DILocation(line: 612, column: 23, scope: !5243)
!5273 = !DILocation(line: 619, column: 24, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5243, file: !2477, line: 619, column: 7)
!5275 = !DILocation(line: 619, column: 7, scope: !5243)
!5276 = !DILocation(line: 625, column: 9, scope: !5243)
!5277 = !DILocation(line: 625, column: 17, scope: !5243)
!5278 = !DILocation(line: 626, column: 3, scope: !5243)
!5279 = !DILocation(line: 629, column: 20, scope: !5237)
!5280 = !DILocation(line: 629, column: 8, scope: !5237)
!5281 = !DILocation(line: 518, column: 23, scope: !5237)
!5282 = !DILocation(line: 631, column: 2, scope: !5237)
!5283 = distinct !DISubprogram(name: "extract_decimal", scope: !2477, file: !2477, line: 318, type: !5284, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5287)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{!252, !5286}
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5287 = !{!5288, !5289, !5290}
!5288 = !DILocalVariable(name: "str", arg: 1, scope: !5283, file: !2477, line: 318, type: !5286)
!5289 = !DILocalVariable(name: "sp", scope: !5283, file: !2477, line: 320, type: !123)
!5290 = !DILocalVariable(name: "val", scope: !5283, file: !2477, line: 321, type: !252)
!5291 = !DILocation(line: 0, scope: !5283)
!5292 = !DILocation(line: 320, column: 19, scope: !5283)
!5293 = !DILocation(line: 323, column: 37, scope: !5283)
!5294 = !DILocation(line: 323, column: 17, scope: !5283)
!5295 = !DILocation(line: 323, column: 9, scope: !5283)
!5296 = !DILocation(line: 323, column: 2, scope: !5283)
!5297 = !DILocation(line: 324, column: 13, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5283, file: !2477, line: 323, column: 43)
!5299 = !DILocation(line: 324, column: 24, scope: !5298)
!5300 = !DILocation(line: 324, column: 19, scope: !5298)
!5301 = !DILocation(line: 324, column: 27, scope: !5298)
!5302 = distinct !{!5302, !5296, !5303}
!5303 = !DILocation(line: 325, column: 2, scope: !5283)
!5304 = !DILocation(line: 326, column: 7, scope: !5283)
!5305 = !DILocation(line: 327, column: 2, scope: !5283)
!5306 = distinct !DISubprogram(name: "isdigit", scope: !5085, file: !5085, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !5307)
!5307 = !{!5308}
!5308 = !DILocalVariable(name: "a", arg: 1, scope: !5306, file: !5085, line: 43, type: !107)
!5309 = !DILocation(line: 0, scope: !5306)
!5310 = !DILocation(line: 45, column: 29, scope: !5306)
!5311 = !DILocation(line: 45, column: 45, scope: !5306)
!5312 = !DILocation(line: 45, column: 2, scope: !5306)
!5313 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5314, file: !5314, line: 9, type: !3107, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !250)
!5314 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!5315 = !DILocation(line: 11, column: 1, scope: !5313)
!5316 = !{i64 2147560507, i64 2147560550, i64 2147560590}
!5317 = !DILocation(line: 12, column: 1, scope: !5313)
!5318 = !{i64 2147564734, i64 2147564777, i64 2147564817}
!5319 = !DILocation(line: 13, column: 1, scope: !5313)
!5320 = !{i64 2147564943, i64 2147564986, i64 2147565026}
!5321 = !DILocation(line: 14, column: 1, scope: !5313)
!5322 = !{i64 2147565160, i64 2147565203, i64 2147565243}
!5323 = !DILocation(line: 15, column: 1, scope: !5313)
!5324 = !{i64 2147565329, i64 2147565372, i64 2147565412}
!5325 = !DILocation(line: 16, column: 1, scope: !5313)
!5326 = !{i64 2147565492, i64 2147565535, i64 2147565575}
!5327 = !DILocation(line: 17, column: 1, scope: !5313)
!5328 = !{i64 2147565676, i64 2147565719, i64 2147565759}
!5329 = !DILocation(line: 18, column: 1, scope: !5313)
!5330 = !{i64 2147565855, i64 2147565898, i64 2147565938}
!5331 = !DILocation(line: 19, column: 1, scope: !5313)
!5332 = !{i64 2147566097, i64 2147566140, i64 2147566180}
!5333 = !DILocation(line: 20, column: 1, scope: !5313)
!5334 = !{i64 2147566332, i64 2147566375, i64 2147566415}
!5335 = !DILocation(line: 21, column: 1, scope: !5313)
!5336 = !{i64 2147566518, i64 2147566561, i64 2147566601}
!5337 = !DILocation(line: 22, column: 1, scope: !5313)
!5338 = !{i64 2147566734, i64 2147566777, i64 2147566817}
!5339 = !DILocation(line: 23, column: 1, scope: !5313)
!5340 = !{i64 2147566937, i64 2147566980, i64 2147567020}
!5341 = !DILocation(line: 24, column: 1, scope: !5313)
!5342 = !{i64 2147567140, i64 2147567183, i64 2147567223}
!5343 = !DILocation(line: 25, column: 1, scope: !5313)
!5344 = !{i64 2147567315, i64 2147567358, i64 2147567398}
!5345 = !DILocation(line: 26, column: 1, scope: !5313)
!5346 = !{i64 2147567523, i64 2147567566, i64 2147567606}
!5347 = !DILocation(line: 27, column: 1, scope: !5313)
!5348 = !{i64 2147567727, i64 2147567770, i64 2147567810}
!5349 = !DILocation(line: 28, column: 1, scope: !5313)
!5350 = !{i64 2147567920, i64 2147567963, i64 2147568003}
!5351 = !DILocation(line: 29, column: 1, scope: !5313)
!5352 = !{i64 2147568122, i64 2147568165, i64 2147568205}
!5353 = !DILocation(line: 30, column: 1, scope: !5313)
!5354 = !{i64 2147568349, i64 2147568392, i64 2147568432}
!5355 = !DILocation(line: 31, column: 1, scope: !5313)
!5356 = !{i64 2147568551, i64 2147568594, i64 2147568634}
!5357 = !DILocation(line: 32, column: 1, scope: !5313)
!5358 = !{i64 2147568766, i64 2147568809, i64 2147568849}
!5359 = !DILocation(line: 33, column: 1, scope: !5313)
!5360 = !{i64 2147568938, i64 2147568981, i64 2147569021}
!5361 = !DILocation(line: 34, column: 1, scope: !5313)
!5362 = !{i64 2147569140, i64 2147569183, i64 2147569223}
!5363 = !DILocation(line: 35, column: 1, scope: !5313)
!5364 = !{i64 2147569366, i64 2147569409, i64 2147569449}
!5365 = !DILocation(line: 36, column: 1, scope: !5313)
!5366 = !{i64 2147569565, i64 2147569608, i64 2147569648}
!5367 = !DILocation(line: 37, column: 1, scope: !5313)
!5368 = !{i64 2147569740, i64 2147569783, i64 2147569823}
!5369 = !DILocation(line: 38, column: 1, scope: !5313)
!5370 = !{i64 2147569993, i64 2147570036, i64 2147570076}
!5371 = !DILocation(line: 39, column: 1, scope: !5313)
!5372 = !{i64 2147570231, i64 2147570274, i64 2147570314}
!5373 = !DILocation(line: 40, column: 1, scope: !5313)
!5374 = !{i64 2147570466, i64 2147570509, i64 2147570549}
!5375 = !DILocation(line: 41, column: 1, scope: !5313)
!5376 = !{i64 2147570698, i64 2147570741, i64 2147570781}
!5377 = !DILocation(line: 42, column: 1, scope: !5313)
!5378 = !{i64 2147570924, i64 2147570967, i64 2147571007}
!5379 = !DILocation(line: 43, column: 1, scope: !5313)
!5380 = !{i64 2147571183, i64 2147571226, i64 2147571266}
!5381 = !DILocation(line: 44, column: 1, scope: !5313)
!5382 = !{i64 2147571409, i64 2147571452, i64 2147571492}
!5383 = !DILocation(line: 45, column: 1, scope: !5313)
!5384 = !{i64 2147571650, i64 2147571693, i64 2147571733}
!5385 = !DILocation(line: 46, column: 1, scope: !5313)
!5386 = !{i64 2147571894, i64 2147571937, i64 2147571977}
!5387 = !DILocation(line: 47, column: 1, scope: !5313)
!5388 = !{i64 2147572135, i64 2147572178, i64 2147572218}
!5389 = !DILocation(line: 48, column: 1, scope: !5313)
!5390 = !{i64 2147572370, i64 2147572413, i64 2147572453}
!5391 = !DILocation(line: 49, column: 1, scope: !5313)
!5392 = !{i64 2147572596, i64 2147572639, i64 2147572679}
!5393 = !DILocation(line: 50, column: 1, scope: !5313)
!5394 = !{i64 2147572822, i64 2147572865, i64 2147572905}
!5395 = !DILocation(line: 51, column: 1, scope: !5313)
!5396 = !{i64 2147573066, i64 2147573109, i64 2147573149}
!5397 = !DILocation(line: 52, column: 1, scope: !5313)
!5398 = !{i64 2147573304, i64 2147573347, i64 2147573387}
!5399 = !DILocation(line: 53, column: 1, scope: !5313)
!5400 = !{i64 2147577639, i64 2147577682, i64 2147577722}
!5401 = !DILocation(line: 54, column: 1, scope: !5313)
!5402 = !{i64 2147577877, i64 2147577920, i64 2147577960}
!5403 = !DILocation(line: 55, column: 1, scope: !5313)
!5404 = !{i64 2147578121, i64 2147578164, i64 2147578204}
!5405 = !DILocation(line: 56, column: 1, scope: !5313)
!5406 = !{i64 2147578371, i64 2147578414, i64 2147578454}
!5407 = !DILocation(line: 57, column: 1, scope: !5313)
!5408 = !{i64 2147578618, i64 2147578661, i64 2147578701}
!5409 = !DILocation(line: 58, column: 1, scope: !5313)
!5410 = !{i64 2147578853, i64 2147578896, i64 2147578936}
!5411 = !DILocation(line: 59, column: 1, scope: !5313)
!5412 = !{i64 2147579088, i64 2147579131, i64 2147579171}
!5413 = !DILocation(line: 60, column: 1, scope: !5313)
!5414 = !{i64 2147579323, i64 2147579366, i64 2147579406}
!5415 = !DILocation(line: 61, column: 1, scope: !5313)
!5416 = !{i64 2147579561, i64 2147579604, i64 2147579644}
!5417 = !DILocation(line: 62, column: 1, scope: !5313)
!5418 = !{i64 2147579802, i64 2147579845, i64 2147579885}
!5419 = !DILocation(line: 63, column: 1, scope: !5313)
!5420 = !{i64 2147580061, i64 2147580104, i64 2147580144}
!5421 = !DILocation(line: 64, column: 1, scope: !5313)
!5422 = !{i64 2147580341, i64 2147580384, i64 2147580424}
!5423 = !DILocation(line: 65, column: 1, scope: !5313)
!5424 = !{i64 2147580570, i64 2147580613, i64 2147580653}
!5425 = !DILocation(line: 66, column: 1, scope: !5313)
!5426 = !{i64 2147580778, i64 2147580821, i64 2147580861}
!5427 = !DILocation(line: 67, column: 1, scope: !5313)
!5428 = !{i64 2147580989, i64 2147581032, i64 2147581072}
!5429 = !DILocation(line: 68, column: 1, scope: !5313)
!5430 = !{i64 2147581224, i64 2147581267, i64 2147581307}
!5431 = !DILocation(line: 69, column: 1, scope: !5313)
!5432 = !{i64 2147581453, i64 2147581496, i64 2147581536}
!5433 = !DILocation(line: 70, column: 1, scope: !5313)
!5434 = !{i64 2147581691, i64 2147581734, i64 2147581774}
!5435 = !DILocation(line: 71, column: 1, scope: !5313)
!5436 = !{i64 2147581923, i64 2147581966, i64 2147582006}
!5437 = !DILocation(line: 72, column: 1, scope: !5313)
!5438 = !{i64 2147582149, i64 2147582192, i64 2147582232}
!5439 = !DILocation(line: 73, column: 1, scope: !5313)
!5440 = !{i64 2147582366, i64 2147582409, i64 2147582449}
!5441 = !DILocation(line: 74, column: 1, scope: !5313)
!5442 = !{i64 2147582598, i64 2147582641, i64 2147582681}
!5443 = !DILocation(line: 75, column: 1, scope: !5313)
!5444 = !{i64 2147582824, i64 2147582867, i64 2147582907}
!5445 = !DILocation(line: 76, column: 1, scope: !5313)
!5446 = !{i64 2147583038, i64 2147583081, i64 2147583121}
!5447 = !DILocation(line: 77, column: 1, scope: !5313)
!5448 = !{i64 2147583258, i64 2147583301, i64 2147583341}
!5449 = !DILocation(line: 78, column: 1, scope: !5313)
!5450 = !{i64 2147583490, i64 2147583533, i64 2147583573}
!5451 = !DILocation(line: 79, column: 1, scope: !5313)
!5452 = !{i64 2147583698, i64 2147583741, i64 2147583781}
!5453 = !DILocation(line: 80, column: 1, scope: !5313)
!5454 = !{i64 2147583903, i64 2147583946, i64 2147583986}
!5455 = !DILocation(line: 81, column: 1, scope: !5313)
!5456 = !{i64 2147584120, i64 2147584163, i64 2147584203}
!5457 = !DILocation(line: 82, column: 1, scope: !5313)
!5458 = !{i64 2147584334, i64 2147584377, i64 2147584417}
!5459 = !DILocation(line: 83, column: 1, scope: !5313)
!5460 = !{i64 2147584560, i64 2147584603, i64 2147584643}
!5461 = !DILocation(line: 84, column: 1, scope: !5313)
!5462 = !{i64 2147584780, i64 2147584823, i64 2147584863}
!5463 = !DILocation(line: 85, column: 1, scope: !5313)
!5464 = !{i64 2147584985, i64 2147585028, i64 2147585068}
!5465 = !DILocation(line: 86, column: 1, scope: !5313)
!5466 = !{i64 2147585217, i64 2147585260, i64 2147585300}
!5467 = !DILocation(line: 87, column: 1, scope: !5313)
!5468 = !{i64 2147585452, i64 2147585495, i64 2147585535}
!5469 = !DILocation(line: 88, column: 1, scope: !5313)
!5470 = !{i64 2147589763, i64 2147589806, i64 2147589846}
!5471 = !DILocation(line: 89, column: 1, scope: !5313)
!5472 = !{i64 2147590013, i64 2147590056, i64 2147590096}
!5473 = !DILocation(line: 90, column: 1, scope: !5313)
!5474 = !{i64 2147590251, i64 2147590294, i64 2147590334}
!5475 = !DILocation(line: 91, column: 1, scope: !5313)
!5476 = !{i64 2147590462, i64 2147590505, i64 2147590545}
!5477 = !DILocation(line: 92, column: 1, scope: !5313)
!5478 = !{i64 2147590679, i64 2147590722, i64 2147590762}
!5479 = !DILocation(line: 93, column: 1, scope: !5313)
!5480 = !{i64 2147590875, i64 2147590918, i64 2147590958}
!5481 = !DILocation(line: 94, column: 1, scope: !5313)
!5482 = !{i64 2147591077, i64 2147591120, i64 2147591160}
!5483 = !DILocation(line: 95, column: 1, scope: !5313)
!5484 = !{i64 2147591270, i64 2147591313, i64 2147591353}
!5485 = !DILocation(line: 96, column: 1, scope: !5313)
!5486 = !{i64 2147591478, i64 2147591521, i64 2147591561}
!5487 = !DILocation(line: 97, column: 1, scope: !5313)
!5488 = !{i64 2147591674, i64 2147591717, i64 2147591757}
!5489 = !DILocation(line: 98, column: 1, scope: !5313)
!5490 = !{i64 2147591879, i64 2147591922, i64 2147591962}
!5491 = !DILocation(line: 99, column: 1, scope: !5313)
!5492 = !{i64 2147592090, i64 2147592133, i64 2147592173}
!5493 = !DILocation(line: 100, column: 1, scope: !5313)
!5494 = !{i64 2147592289, i64 2147592332, i64 2147592372}
!5495 = !DILocation(line: 101, column: 1, scope: !5313)
!5496 = !{i64 2147592464, i64 2147592507, i64 2147592547}
!5497 = !DILocation(line: 102, column: 1, scope: !5313)
!5498 = !{i64 2147592648, i64 2147592691, i64 2147592731}
!5499 = !DILocation(line: 103, column: 1, scope: !5313)
!5500 = !{i64 2147592850, i64 2147592893, i64 2147592933}
!5501 = !DILocation(line: 104, column: 1, scope: !5313)
!5502 = !{i64 2147593052, i64 2147593095, i64 2147593135}
!5503 = !DILocation(line: 105, column: 1, scope: !5313)
!5504 = !{i64 2147593218, i64 2147593261, i64 2147593301}
!5505 = !DILocation(line: 106, column: 1, scope: !5313)
!5506 = !{i64 2147593402, i64 2147593445, i64 2147593485}
!5507 = !DILocation(line: 107, column: 1, scope: !5313)
!5508 = !{i64 2147593592, i64 2147593635, i64 2147593675}
!5509 = !DILocation(line: 108, column: 1, scope: !5313)
!5510 = !{i64 2147593776, i64 2147593819, i64 2147593859}
!5511 = !DILocation(line: 109, column: 1, scope: !5313)
!5512 = !{i64 2147593990, i64 2147594033, i64 2147594073}
!5513 = !DILocation(line: 110, column: 1, scope: !5313)
!5514 = !{i64 2147594201, i64 2147594244, i64 2147594284}
!5515 = !DILocation(line: 111, column: 1, scope: !5313)
!5516 = !{i64 2147594424, i64 2147594467, i64 2147594507}
!5517 = !DILocation(line: 112, column: 1, scope: !5313)
!5518 = !{i64 2147594608, i64 2147594651, i64 2147594691}
!5519 = !DILocation(line: 113, column: 1, scope: !5313)
!5520 = !{i64 2147594822, i64 2147594865, i64 2147594905}
!5521 = !DILocation(line: 114, column: 1, scope: !5313)
!5522 = !{i64 2147594988, i64 2147595031, i64 2147595071}
!5523 = !DILocation(line: 115, column: 1, scope: !5313)
!5524 = !{i64 2147595169, i64 2147595212, i64 2147595252}
!5525 = !DILocation(line: 116, column: 1, scope: !5313)
!5526 = !{i64 2147595362, i64 2147595405, i64 2147595445}
!5527 = !DILocation(line: 117, column: 1, scope: !5313)
!5528 = !{i64 2147595588, i64 2147595631, i64 2147595671}
!5529 = !DILocation(line: 118, column: 1, scope: !5313)
!5530 = !{i64 2147595802, i64 2147595845, i64 2147595885}
!5531 = !DILocation(line: 119, column: 1, scope: !5313)
!5532 = !{i64 2147596028, i64 2147596071, i64 2147596111}
!5533 = !DILocation(line: 120, column: 1, scope: !5313)
!5534 = !{i64 2147596245, i64 2147596288, i64 2147596328}
!5535 = !DILocation(line: 121, column: 1, scope: !5313)
!5536 = !{i64 2147596522, i64 2147596565, i64 2147596605}
!5537 = !DILocation(line: 122, column: 1, scope: !5313)
!5538 = !{i64 2147596748, i64 2147596791, i64 2147596831}
!5539 = !DILocation(line: 123, column: 1, scope: !5313)
!5540 = !{i64 2147596944, i64 2147596987, i64 2147597027}
!5541 = !DILocation(line: 124, column: 1, scope: !5313)
!5542 = !{i64 2147597209, i64 2147597252, i64 2147597292}
!5543 = !DILocation(line: 125, column: 1, scope: !5313)
!5544 = !{i64 2147597423, i64 2147597466, i64 2147597506}
!5545 = !DILocation(line: 126, column: 1, scope: !5313)
!5546 = !{i64 2147597598, i64 2147597641, i64 2147597681}
!5547 = !DILocation(line: 127, column: 1, scope: !5313)
!5548 = !{i64 2147597852, i64 2147597895, i64 2147597935}
!5549 = !DILocation(line: 128, column: 1, scope: !5313)
!5550 = !{i64 2147598051, i64 2147598094, i64 2147598134}
!5551 = !DILocation(line: 129, column: 1, scope: !5313)
!5552 = !{i64 2147598293, i64 2147598336, i64 2147598376}
!5553 = !DILocation(line: 130, column: 1, scope: !5313)
!5554 = !{i64 2147598456, i64 2147598499, i64 2147598539}
!5555 = !DILocation(line: 131, column: 1, scope: !5313)
!5556 = !{i64 2147598643, i64 2147598686, i64 2147598726}
!5557 = !DILocation(line: 132, column: 1, scope: !5313)
!5558 = !{i64 2147598836, i64 2147598879, i64 2147598919}
!5559 = !DILocation(line: 133, column: 1, scope: !5313)
!5560 = !{i64 2147603079, i64 2147603122, i64 2147603162}
!5561 = !DILocation(line: 134, column: 1, scope: !5313)
!5562 = !{i64 2147603293, i64 2147603336, i64 2147603376}
!5563 = !DILocation(line: 135, column: 1, scope: !5313)
!5564 = !{i64 2147603504, i64 2147603547, i64 2147603587}
!5565 = !DILocation(line: 136, column: 1, scope: !5313)
!5566 = !{i64 2147603724, i64 2147603767, i64 2147603807}
!5567 = !DILocation(line: 137, column: 1, scope: !5313)
!5568 = !{i64 2147603931, i64 2147603974, i64 2147604014}
!5569 = !DILocation(line: 138, column: 1, scope: !5313)
!5570 = !{i64 2147604204, i64 2147604247, i64 2147604287}
!5571 = !DILocation(line: 139, column: 1, scope: !5313)
!5572 = !{i64 2147604452, i64 2147604495, i64 2147604535}
!5573 = !DILocation(line: 140, column: 1, scope: !5313)
!5574 = !{i64 2147604651, i64 2147604694, i64 2147604734}
!5575 = !DILocation(line: 141, column: 1, scope: !5313)
!5576 = !{i64 2147604886, i64 2147604929, i64 2147604969}
!5577 = !DILocation(line: 142, column: 1, scope: !5313)
!5578 = !{i64 2147605136, i64 2147605179, i64 2147605219}
!5579 = !DILocation(line: 143, column: 1, scope: !5313)
!5580 = !{i64 2147605338, i64 2147605381, i64 2147605421}
!5581 = !DILocation(line: 144, column: 1, scope: !5313)
!5582 = !{i64 2147605561, i64 2147605604, i64 2147605644}
!5583 = !DILocation(line: 145, column: 1, scope: !5313)
!5584 = !{i64 2147605775, i64 2147605818, i64 2147605858}
!5585 = !DILocation(line: 146, column: 1, scope: !5313)
!5586 = !{i64 2147606019, i64 2147606062, i64 2147606102}
!5587 = !DILocation(line: 147, column: 1, scope: !5313)
!5588 = !{i64 2147606248, i64 2147606291, i64 2147606331}
!5589 = !DILocation(line: 148, column: 1, scope: !5313)
!5590 = !{i64 2147606477, i64 2147606520, i64 2147606560}
!5591 = !DILocation(line: 149, column: 1, scope: !5313)
!5592 = !{i64 2147606685, i64 2147606728, i64 2147606768}
!5593 = !DILocation(line: 150, column: 1, scope: !5313)
!5594 = !{i64 2147606923, i64 2147606966, i64 2147607006}
!5595 = !DILocation(line: 151, column: 1, scope: !5313)
!5596 = !{i64 2147607149, i64 2147607192, i64 2147607232}
!5597 = !DILocation(line: 152, column: 1, scope: !5313)
!5598 = !{i64 2147607408, i64 2147607451, i64 2147607491}
!5599 = !DILocation(line: 153, column: 1, scope: !5313)
!5600 = !{i64 2147607628, i64 2147607671, i64 2147607711}
!5601 = !DILocation(line: 154, column: 1, scope: !5313)
!5602 = !{i64 2147607860, i64 2147607903, i64 2147607943}
!5603 = !DILocation(line: 155, column: 1, scope: !5313)
!5604 = !{i64 2147608101, i64 2147608144, i64 2147608184}
!5605 = !DILocation(line: 156, column: 1, scope: !5313)
!5606 = !{i64 2147608342, i64 2147608385, i64 2147608425}
!5607 = !DILocation(line: 157, column: 1, scope: !5313)
!5608 = !{i64 2147608565, i64 2147608608, i64 2147608648}
!5609 = !DILocation(line: 158, column: 1, scope: !5313)
!5610 = !{i64 2147608782, i64 2147608825, i64 2147608865}
!5611 = !DILocation(line: 159, column: 1, scope: !5313)
!5612 = !{i64 2147609023, i64 2147609066, i64 2147609106}
!5613 = !DILocation(line: 160, column: 1, scope: !5313)
!5614 = !{i64 2147609210, i64 2147609253, i64 2147609293}
!5615 = !DILocation(line: 161, column: 1, scope: !5313)
!5616 = !{i64 2147609373, i64 2147609416, i64 2147609456}
!5617 = !DILocation(line: 162, column: 1, scope: !5313)
!5618 = !{i64 2147609632, i64 2147609675, i64 2147609715}
!5619 = !DILocation(line: 163, column: 1, scope: !5313)
!5620 = !{i64 2147609855, i64 2147609898, i64 2147609938}
!5621 = !DILocation(line: 164, column: 1, scope: !5313)
!5622 = !{i64 2147610084, i64 2147610127, i64 2147610167}
!5623 = !DILocation(line: 165, column: 1, scope: !5313)
!5624 = !{i64 2147610280, i64 2147610323, i64 2147610363}
!5625 = !DILocation(line: 166, column: 1, scope: !5313)
!5626 = !{i64 2147610492, i64 2147610535, i64 2147610575}
!5627 = !DILocation(line: 167, column: 1, scope: !5313)
!5628 = !{i64 2147610713, i64 2147610756, i64 2147610796}
!5629 = !DILocation(line: 168, column: 1, scope: !5313)
!5630 = !{i64 2147610927, i64 2147610970, i64 2147611010}
!5631 = !DILocation(line: 169, column: 1, scope: !5313)
!5632 = !{i64 2147611117, i64 2147611160, i64 2147611200}
!5633 = !DILocation(line: 170, column: 1, scope: !5313)
!5634 = !{i64 2147611316, i64 2147611359, i64 2147611399}
!5635 = !DILocation(line: 171, column: 1, scope: !5313)
!5636 = !{i64 2147615582, i64 2147615625, i64 2147615665}
!5637 = !DILocation(line: 172, column: 1, scope: !5313)
!5638 = !{i64 2147615802, i64 2147615845, i64 2147615885}
!5639 = !DILocation(line: 173, column: 1, scope: !5313)
!5640 = !{i64 2147616003, i64 2147616046, i64 2147616086}
!5641 = !DILocation(line: 174, column: 1, scope: !5313)
!5642 = !{i64 2147616202, i64 2147616245, i64 2147616285}
!5643 = !DILocation(line: 175, column: 1, scope: !5313)
!5644 = !{i64 2147616407, i64 2147616450, i64 2147616490}
!5645 = !DILocation(line: 176, column: 1, scope: !5313)
!5646 = !{i64 2147616576, i64 2147616619, i64 2147616659}
!5647 = !DILocation(line: 177, column: 1, scope: !5313)
!5648 = !{i64 2147616760, i64 2147616803, i64 2147616843}
!5649 = !DILocation(line: 178, column: 1, scope: !5313)
!5650 = !{i64 2147616944, i64 2147616987, i64 2147617027}
!5651 = !DILocation(line: 179, column: 1, scope: !5313)
!5652 = !{i64 2147617131, i64 2147617174, i64 2147617214}
!5653 = !DILocation(line: 180, column: 1, scope: !5313)
!5654 = !{i64 2147617315, i64 2147617358, i64 2147617398}
!5655 = !DILocation(line: 181, column: 1, scope: !5313)
!5656 = !{i64 2147617553, i64 2147617596, i64 2147617636}
!5657 = !DILocation(line: 182, column: 1, scope: !5313)
!5658 = !{i64 2147617783, i64 2147617826, i64 2147617866}
!5659 = !DILocation(line: 183, column: 1, scope: !5313)
!5660 = !{i64 2147618012, i64 2147618055, i64 2147618095}
!5661 = !DILocation(line: 184, column: 1, scope: !5313)
!5662 = !{i64 2147618199, i64 2147618242, i64 2147618282}
!5663 = !DILocation(line: 185, column: 1, scope: !5313)
!5664 = !{i64 2147618395, i64 2147618438, i64 2147618478}
!5665 = !DILocation(line: 186, column: 1, scope: !5313)
!5666 = !{i64 2147618603, i64 2147618646, i64 2147618686}
!5667 = !DILocation(line: 187, column: 1, scope: !5313)
!5668 = !{i64 2147618815, i64 2147618858, i64 2147618898}
!5669 = !DILocation(line: 188, column: 1, scope: !5313)
!5670 = !{i64 2147619014, i64 2147619057, i64 2147619097}
!5671 = !DILocation(line: 189, column: 1, scope: !5313)
!5672 = !{i64 2147619252, i64 2147619295, i64 2147619335}
!5673 = !DILocation(line: 190, column: 1, scope: !5313)
!5674 = !{i64 2147619448, i64 2147619491, i64 2147619531}
!5675 = !DILocation(line: 191, column: 1, scope: !5313)
!5676 = !{i64 2147619650, i64 2147619693, i64 2147619733}
!5677 = !DILocation(line: 192, column: 1, scope: !5313)
!5678 = !{i64 2147619843, i64 2147619886, i64 2147619926}
!5679 = !DILocation(line: 193, column: 1, scope: !5313)
!5680 = !{i64 2147620077, i64 2147620120, i64 2147620160}
!5681 = !DILocation(line: 194, column: 1, scope: !5313)
!5682 = !{i64 2147620240, i64 2147620283, i64 2147620323}
!5683 = !DILocation(line: 195, column: 1, scope: !5313)
!5684 = !{i64 2147620479, i64 2147620522, i64 2147620562}
!5685 = !DILocation(line: 196, column: 1, scope: !5313)
!5686 = !{i64 2147620718, i64 2147620761, i64 2147620801}
!5687 = !DILocation(line: 197, column: 1, scope: !5313)
!5688 = !{i64 2147620954, i64 2147620997, i64 2147621037}
!5689 = !DILocation(line: 198, column: 1, scope: !5313)
!5690 = !{i64 2147621184, i64 2147621227, i64 2147621267}
!5691 = !DILocation(line: 199, column: 1, scope: !5313)
!5692 = !{i64 2147621371, i64 2147621414, i64 2147621454}
!5693 = !DILocation(line: 200, column: 1, scope: !5313)
!5694 = !{i64 2147621570, i64 2147621613, i64 2147621653}
!5695 = !DILocation(line: 201, column: 1, scope: !5313)
!5696 = !{i64 2147621841, i64 2147621884, i64 2147621924}
!5697 = !DILocation(line: 202, column: 1, scope: !5313)
!5698 = !{i64 2147622016, i64 2147622059, i64 2147622099}
!5699 = !DILocation(line: 203, column: 1, scope: !5313)
!5700 = !{i64 2147622250, i64 2147622293, i64 2147622333}
!5701 = !DILocation(line: 204, column: 1, scope: !5313)
!5702 = !{i64 2147622458, i64 2147622501, i64 2147622541}
!5703 = !DILocation(line: 205, column: 1, scope: !5313)
!5704 = !{i64 2147622676, i64 2147622719, i64 2147622759}
!5705 = !DILocation(line: 206, column: 1, scope: !5313)
!5706 = !{i64 2147622866, i64 2147622909, i64 2147622949}
!5707 = !DILocation(line: 207, column: 1, scope: !5313)
!5708 = !{i64 2147623062, i64 2147623105, i64 2147623145}
!5709 = !DILocation(line: 208, column: 1, scope: !5313)
!5710 = !{i64 2147623268, i64 2147623311, i64 2147623351}
!5711 = !DILocation(line: 209, column: 1, scope: !5313)
!5712 = !{i64 2147623473, i64 2147623516, i64 2147623556}
!5713 = !DILocation(line: 210, column: 1, scope: !5313)
!5714 = !{i64 2147623699, i64 2147623742, i64 2147623782}
!5715 = !DILocation(line: 211, column: 1, scope: !5313)
!5716 = !{i64 2147623931, i64 2147623974, i64 2147624014}
!5717 = !DILocation(line: 212, column: 1, scope: !5313)
!5718 = !{i64 2147624115, i64 2147624158, i64 2147624198}
!5719 = !DILocation(line: 213, column: 1, scope: !5313)
!5720 = !{i64 2147624324, i64 2147624367, i64 2147624407}
!5721 = !DILocation(line: 214, column: 1, scope: !5313)
!5722 = !{i64 2147624508, i64 2147624551, i64 2147624591}
!5723 = !DILocation(line: 215, column: 1, scope: !5313)
!5724 = !{i64 2147628795, i64 2147628838, i64 2147628878}
!5725 = !DILocation(line: 216, column: 1, scope: !5313)
!5726 = !{i64 2147629021, i64 2147629064, i64 2147629104}
!5727 = !DILocation(line: 217, column: 1, scope: !5313)
!5728 = !{i64 2147629247, i64 2147629290, i64 2147629330}
!5729 = !DILocation(line: 218, column: 1, scope: !5313)
!5730 = !{i64 2147629473, i64 2147629516, i64 2147629556}
!5731 = !DILocation(line: 219, column: 1, scope: !5313)
!5732 = !{i64 2147629699, i64 2147629742, i64 2147629782}
!5733 = !DILocation(line: 220, column: 1, scope: !5313)
!5734 = !{i64 2147629931, i64 2147629974, i64 2147630014}
!5735 = !DILocation(line: 221, column: 1, scope: !5313)
!5736 = !{i64 2147630169, i64 2147630212, i64 2147630252}
!5737 = !DILocation(line: 222, column: 1, scope: !5313)
!5738 = !{i64 2147630401, i64 2147630444, i64 2147630484}
!5739 = !DILocation(line: 223, column: 1, scope: !5313)
!5740 = !{i64 2147630603, i64 2147630646, i64 2147630686}
!5741 = !DILocation(line: 224, column: 1, scope: !5313)
!5742 = !{i64 2147630853, i64 2147630896, i64 2147630936}
!5743 = !DILocation(line: 225, column: 1, scope: !5313)
!5744 = !{i64 2147631091, i64 2147631134, i64 2147631174}
!5745 = !DILocation(line: 226, column: 1, scope: !5313)
!5746 = !{i64 2147631275, i64 2147631318, i64 2147631358}
!5747 = !DILocation(line: 227, column: 1, scope: !5313)
!5748 = !{i64 2147631498, i64 2147631541, i64 2147631581}
!5749 = !DILocation(line: 228, column: 1, scope: !5313)
!5750 = !{i64 2147631736, i64 2147631779, i64 2147631819}
!5751 = !DILocation(line: 229, column: 1, scope: !5313)
!5752 = !{i64 2147631974, i64 2147632017, i64 2147632057}
!5753 = !DILocation(line: 230, column: 1, scope: !5313)
!5754 = !{i64 2147632167, i64 2147632210, i64 2147632250}
!5755 = !DILocation(line: 231, column: 1, scope: !5313)
!5756 = !{i64 2147632420, i64 2147632463, i64 2147632503}
!5757 = !DILocation(line: 232, column: 1, scope: !5313)
!5758 = !{i64 2147632634, i64 2147632677, i64 2147632717}
!5759 = !DILocation(line: 233, column: 1, scope: !5313)
!5760 = !{i64 2147632842, i64 2147632885, i64 2147632925}
!5761 = !DILocation(line: 234, column: 1, scope: !5313)
!5762 = !{i64 2147633032, i64 2147633075, i64 2147633115}
!5763 = !DILocation(line: 235, column: 1, scope: !5313)
!5764 = !{i64 2147633246, i64 2147633289, i64 2147633329}
!5765 = !DILocation(line: 236, column: 1, scope: !5313)
!5766 = !{i64 2147633508, i64 2147633551, i64 2147633591}
!5767 = !DILocation(line: 237, column: 1, scope: !5313)
!5768 = !{i64 2147633719, i64 2147633762, i64 2147633802}
!5769 = !DILocation(line: 238, column: 1, scope: !5313)
!5770 = !{i64 2147633963, i64 2147634006, i64 2147634046}
!5771 = !DILocation(line: 239, column: 1, scope: !5313)
!5772 = !{i64 2147634174, i64 2147634217, i64 2147634257}
!5773 = !DILocation(line: 240, column: 1, scope: !5313)
!5774 = !{i64 2147634403, i64 2147634446, i64 2147634486}
!5775 = !DILocation(line: 241, column: 1, scope: !5313)
!5776 = !{i64 2147634668, i64 2147634711, i64 2147634751}
!5777 = !DILocation(line: 242, column: 1, scope: !5313)
!5778 = !{i64 2147634873, i64 2147634916, i64 2147634956}
!5779 = !DILocation(line: 243, column: 1, scope: !5313)
!5780 = !{i64 2147635069, i64 2147635112, i64 2147635152}
!5781 = !DILocation(line: 244, column: 1, scope: !5313)
!5782 = !{i64 2147635292, i64 2147635335, i64 2147635375}
!5783 = !DILocation(line: 245, column: 1, scope: !5313)
!5784 = !{i64 2147635455, i64 2147635498, i64 2147635538}
!5785 = !DILocation(line: 246, column: 1, scope: !5313)
!5786 = !{i64 2147635660, i64 2147635703, i64 2147635743}
!5787 = !DILocation(line: 247, column: 1, scope: !5313)
!5788 = !{i64 2147635880, i64 2147635923, i64 2147635963}
!5789 = !DILocation(line: 248, column: 1, scope: !5313)
!5790 = !{i64 2147636094, i64 2147636137, i64 2147636177}
!5791 = !DILocation(line: 249, column: 1, scope: !5313)
!5792 = !{i64 2147636308, i64 2147636351, i64 2147636391}
!5793 = !DILocation(line: 250, column: 1, scope: !5313)
!5794 = !{i64 2147636519, i64 2147636562, i64 2147636602}
!5795 = !DILocation(line: 251, column: 1, scope: !5313)
!5796 = !{i64 2147636712, i64 2147636755, i64 2147636795}
!5797 = !DILocation(line: 252, column: 1, scope: !5313)
!5798 = !{i64 2147636911, i64 2147636954, i64 2147636994}
!5799 = !DILocation(line: 253, column: 1, scope: !5313)
!5800 = !{i64 2147637083, i64 2147637126, i64 2147637166}
!5801 = !DILocation(line: 254, column: 1, scope: !5313)
!5802 = !{i64 2147637276, i64 2147637319, i64 2147637359}
!5803 = !DILocation(line: 255, column: 1, scope: !5313)
!5804 = !{i64 2147641533, i64 2147641576, i64 2147641616}
!5805 = !DILocation(line: 256, column: 1, scope: !5313)
!5806 = !{i64 2147641760, i64 2147641803, i64 2147641843}
!5807 = !DILocation(line: 257, column: 1, scope: !5313)
!5808 = !{i64 2147641977, i64 2147642020, i64 2147642060}
!5809 = !DILocation(line: 258, column: 1, scope: !5313)
!5810 = !{i64 2147642269, i64 2147642312, i64 2147642352}
!5811 = !DILocation(line: 259, column: 1, scope: !5313)
!5812 = !{i64 2147642501, i64 2147642544, i64 2147642584}
!5813 = !DILocation(line: 260, column: 1, scope: !5313)
!5814 = !{i64 2147642718, i64 2147642761, i64 2147642801}
!5815 = !DILocation(line: 261, column: 1, scope: !5313)
!5816 = !{i64 2147642925, i64 2147642968, i64 2147643008}
!5817 = !DILocation(line: 262, column: 1, scope: !5313)
!5818 = !{i64 2147643126, i64 2147643169, i64 2147643209}
!5819 = !DILocation(line: 263, column: 1, scope: !5313)
!5820 = !{i64 2147643358, i64 2147643401, i64 2147643441}
!5821 = !DILocation(line: 264, column: 1, scope: !5313)
!5822 = !{i64 2147643566, i64 2147643609, i64 2147643649}
!5823 = !DILocation(line: 265, column: 1, scope: !5313)
!5824 = !{i64 2147643756, i64 2147643799, i64 2147643839}
!5825 = !DILocation(line: 266, column: 1, scope: !5313)
!5826 = !{i64 2147643982, i64 2147644025, i64 2147644065}
!5827 = !DILocation(line: 267, column: 1, scope: !5313)
!5828 = !{i64 2147644171, i64 2147644214, i64 2147644254}
!5829 = !DILocation(line: 268, column: 1, scope: !5313)
!5830 = !{i64 2147644442, i64 2147644485, i64 2147644525}
!5831 = !DILocation(line: 269, column: 1, scope: !5313)
!5832 = !{i64 2147644662, i64 2147644705, i64 2147644745}
!5833 = !DILocation(line: 270, column: 1, scope: !5313)
!5834 = !{i64 2147644915, i64 2147644958, i64 2147644998}
!5835 = !DILocation(line: 271, column: 1, scope: !5313)
!5836 = !{i64 2147645123, i64 2147645166, i64 2147645206}
!5837 = !DILocation(line: 272, column: 1, scope: !5313)
!5838 = !{i64 2147645355, i64 2147645398, i64 2147645438}
!5839 = !DILocation(line: 273, column: 1, scope: !5313)
!5840 = !{i64 2147645566, i64 2147645609, i64 2147645649}
!5841 = !DILocation(line: 274, column: 1, scope: !5313)
!5842 = !{i64 2147645756, i64 2147645799, i64 2147645839}
!5843 = !DILocation(line: 275, column: 1, scope: !5313)
!5844 = !{i64 2147645970, i64 2147646013, i64 2147646053}
!5845 = !DILocation(line: 276, column: 1, scope: !5313)
!5846 = !{i64 2147646169, i64 2147646212, i64 2147646252}
!5847 = !DILocation(line: 277, column: 1, scope: !5313)
!5848 = !{i64 2147646356, i64 2147646399, i64 2147646439}
!5849 = !DILocation(line: 278, column: 1, scope: !5313)
!5850 = !{i64 2147646564, i64 2147646607, i64 2147646647}
!5851 = !DILocation(line: 279, column: 1, scope: !5313)
!5852 = !{i64 2147646793, i64 2147646836, i64 2147646876}
!5853 = !DILocation(line: 280, column: 1, scope: !5313)
!5854 = !{i64 2147646995, i64 2147647038, i64 2147647078}
!5855 = !DILocation(line: 281, column: 1, scope: !5313)
!5856 = !{i64 2147647194, i64 2147647237, i64 2147647277}
!5857 = !DILocation(line: 282, column: 1, scope: !5313)
!5858 = !{i64 2147647411, i64 2147647454, i64 2147647494}
!5859 = !DILocation(line: 284, column: 1, scope: !5313)
!5860 = distinct !DISubprogram(name: "stm32l1_init", scope: !304, file: !304, line: 31, type: !311, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5861)
!5861 = !{!5862, !5863}
!5862 = !DILocalVariable(name: "arg", arg: 1, scope: !5860, file: !304, line: 31, type: !313)
!5863 = !DILocalVariable(name: "key", scope: !5860, file: !304, line: 33, type: !162)
!5864 = !DILocation(line: 0, scope: !5860)
!5865 = !DILocation(line: 55, column: 2, scope: !5866, inlinedAt: !5873)
!5866 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5870)
!5867 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5868 = !DISubroutineType(types: !5869)
!5869 = !{!32}
!5870 = !{!5871, !5872}
!5871 = !DILocalVariable(name: "key", scope: !5866, file: !5867, line: 44, type: !32)
!5872 = !DILocalVariable(name: "tmp", scope: !5866, file: !5867, line: 53, type: !32)
!5873 = distinct !DILocation(line: 37, column: 8, scope: !5860)
!5874 = !{i64 1523269}
!5875 = !DILocation(line: 0, scope: !5866, inlinedAt: !5873)
!5876 = !DILocalVariable(name: "key", arg: 1, scope: !5877, file: !5867, line: 84, type: !32)
!5877 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5880)
!5878 = !DISubroutineType(types: !5879)
!5879 = !{null, !32}
!5880 = !{!5876}
!5881 = !DILocation(line: 0, scope: !5877, inlinedAt: !5882)
!5882 = distinct !DILocation(line: 44, column: 2, scope: !5860)
!5883 = !DILocation(line: 95, column: 2, scope: !5877, inlinedAt: !5882)
!5884 = !{i64 1524086}
!5885 = !DILocation(line: 48, column: 18, scope: !5860)
!5886 = !DILocation(line: 54, column: 2, scope: !5860)
!5887 = !DILocation(line: 55, column: 2, scope: !5860)
!5888 = !DILocation(line: 57, column: 2, scope: !5860)
!5889 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5890, file: !5890, line: 531, type: !5891, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5893)
!5890 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5891 = !DISubroutineType(types: !5892)
!5892 = !{null, !162}
!5893 = !{!5894, !5895}
!5894 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5889, file: !5890, line: 531, type: !162)
!5895 = !DILocalVariable(name: "tmpreg", scope: !5889, file: !5890, line: 533, type: !283)
!5896 = !DILocation(line: 0, scope: !5889)
!5897 = !DILocation(line: 533, column: 3, scope: !5889)
!5898 = !DILocation(line: 533, column: 17, scope: !5889)
!5899 = !DILocation(line: 534, column: 3, scope: !5889)
!5900 = !DILocation(line: 536, column: 12, scope: !5889)
!5901 = !DILocation(line: 536, column: 10, scope: !5889)
!5902 = !DILocation(line: 537, column: 9, scope: !5889)
!5903 = !DILocation(line: 538, column: 1, scope: !5889)
!5904 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5905, file: !5905, line: 272, type: !5891, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5906)
!5905 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5906 = !{!5907}
!5907 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5904, file: !5905, line: 272, type: !162)
!5908 = !DILocation(line: 0, scope: !5904)
!5909 = !DILocation(line: 274, column: 3, scope: !5904)
!5910 = !DILocation(line: 275, column: 1, scope: !5904)
!5911 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !334, file: !334, line: 26, type: !340, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5912)
!5912 = !{!5913}
!5913 = !DILocalVariable(name: "dev", arg: 1, scope: !5911, file: !334, line: 26, type: !342)
!5914 = !DILocation(line: 0, scope: !5911)
!5915 = !DILocation(line: 68, column: 2, scope: !5911)
!5916 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5917, file: !5917, line: 57, type: !5918, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5964)
!5917 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5918 = !DISubroutineType(types: !5919)
!5919 = !{null, !32, !5920}
!5920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5921, size: 32)
!5921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5922)
!5922 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2633, line: 141, baseType: !5923)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2633, line: 97, size: 256, elements: !5924)
!5924 = !{!5925}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5923, file: !2633, line: 107, baseType: !5926, size: 256)
!5926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2633, line: 98, size: 256, elements: !5927)
!5927 = !{!5928, !5933, !5938, !5943, !5948, !5953, !5958, !5963}
!5928 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 99, baseType: !5929, size: 32)
!5929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 99, size: 32, elements: !5930)
!5930 = !{!5931, !5932}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5929, file: !2633, line: 99, baseType: !162, size: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5929, file: !2633, line: 99, baseType: !162, size: 32)
!5933 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 100, baseType: !5934, size: 32, offset: 32)
!5934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 100, size: 32, elements: !5935)
!5935 = !{!5936, !5937}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5934, file: !2633, line: 100, baseType: !162, size: 32)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5934, file: !2633, line: 100, baseType: !162, size: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 101, baseType: !5939, size: 32, offset: 64)
!5939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 101, size: 32, elements: !5940)
!5940 = !{!5941, !5942}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5939, file: !2633, line: 101, baseType: !162, size: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5939, file: !2633, line: 101, baseType: !162, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 102, baseType: !5944, size: 32, offset: 96)
!5944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 102, size: 32, elements: !5945)
!5945 = !{!5946, !5947}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5944, file: !2633, line: 102, baseType: !162, size: 32)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5944, file: !2633, line: 102, baseType: !162, size: 32)
!5948 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 103, baseType: !5949, size: 32, offset: 128)
!5949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 103, size: 32, elements: !5950)
!5950 = !{!5951, !5952}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5949, file: !2633, line: 103, baseType: !162, size: 32)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5949, file: !2633, line: 103, baseType: !162, size: 32)
!5953 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 104, baseType: !5954, size: 32, offset: 160)
!5954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 104, size: 32, elements: !5955)
!5955 = !{!5956, !5957}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5954, file: !2633, line: 104, baseType: !162, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5954, file: !2633, line: 104, baseType: !162, size: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, scope: !5926, file: !2633, line: 105, baseType: !5959, size: 32, offset: 192)
!5959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5926, file: !2633, line: 105, size: 32, elements: !5960)
!5960 = !{!5961, !5962}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5959, file: !2633, line: 105, baseType: !162, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5959, file: !2633, line: 105, baseType: !162, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5926, file: !2633, line: 106, baseType: !162, size: 32, offset: 224)
!5964 = !{!5965, !5966}
!5965 = !DILocalVariable(name: "reason", arg: 1, scope: !5916, file: !5917, line: 57, type: !32)
!5966 = !DILocalVariable(name: "esf", arg: 2, scope: !5916, file: !5917, line: 57, type: !5920)
!5967 = !DILocation(line: 0, scope: !5916)
!5968 = !DILocation(line: 63, column: 2, scope: !5916)
!5969 = !DILocation(line: 64, column: 1, scope: !5916)
!5970 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5917, file: !5917, line: 82, type: !5971, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5986)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{null, !5920, !5973}
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 32)
!5974 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !441, line: 37, baseType: !5975)
!5975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !5976)
!5976 = !{!5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985}
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5975, file: !441, line: 26, baseType: !162, size: 32)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5975, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5975, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5975, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5975, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5975, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5975, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5975, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5975, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!5986 = !{!5987, !5988, !5989}
!5987 = !DILocalVariable(name: "esf", arg: 1, scope: !5970, file: !5917, line: 82, type: !5920)
!5988 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5970, file: !5917, line: 82, type: !5973)
!5989 = !DILocalVariable(name: "reason", scope: !5970, file: !5917, line: 88, type: !32)
!5990 = !DILocation(line: 0, scope: !5970)
!5991 = !DILocation(line: 88, column: 35, scope: !5970)
!5992 = !DILocation(line: 108, column: 2, scope: !5970)
!5993 = !DILocation(line: 131, column: 1, scope: !5970)
!5994 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5917, file: !5917, line: 133, type: !5995, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{null, !102}
!5997 = !{!5998, !5999, !6000}
!5998 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5994, file: !5917, line: 133, type: !102)
!5999 = !DILocalVariable(name: "ssf_contents", scope: !5994, file: !5917, line: 135, type: !907)
!6000 = !DILocalVariable(name: "oops_esf", scope: !5994, file: !5917, line: 136, type: !5922)
!6001 = !DILocation(line: 0, scope: !5994)
!6002 = !DILocation(line: 136, column: 2, scope: !5994)
!6003 = !DILocation(line: 136, column: 15, scope: !5994)
!6004 = !DILocation(line: 139, column: 22, scope: !5994)
!6005 = !DILocation(line: 139, column: 17, scope: !5994)
!6006 = !DILocation(line: 139, column: 20, scope: !5994)
!6007 = !DILocation(line: 141, column: 2, scope: !5994)
!6008 = !DILocation(line: 142, column: 2, scope: !5994)
!6009 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6010, file: !6010, line: 40, type: !5878, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6011)
!6010 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6011 = !{!6012}
!6012 = !DILocalVariable(name: "irq", arg: 1, scope: !6009, file: !6010, line: 40, type: !32)
!6013 = !DILocation(line: 0, scope: !6009)
!6014 = !DILocation(line: 42, column: 2, scope: !6009)
!6015 = !DILocation(line: 43, column: 1, scope: !6009)
!6016 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !510, file: !510, line: 1508, type: !6017, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{null, !834}
!6019 = !{!6020}
!6020 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6016, file: !510, line: 1508, type: !834)
!6021 = !DILocation(line: 0, scope: !6016)
!6022 = !DILocation(line: 1510, column: 23, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6016, file: !510, line: 1510, column: 7)
!6024 = !DILocation(line: 1510, column: 7, scope: !6016)
!6025 = !DILocation(line: 1512, column: 5, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !510, line: 1511, column: 3)
!6027 = !{i64 2149969066}
!6028 = !DILocation(line: 1513, column: 81, scope: !6026)
!6029 = !DILocation(line: 1513, column: 60, scope: !6026)
!6030 = !DILocation(line: 1513, column: 34, scope: !6026)
!6031 = !DILocation(line: 1513, column: 5, scope: !6026)
!6032 = !DILocation(line: 1513, column: 43, scope: !6026)
!6033 = !DILocation(line: 1514, column: 5, scope: !6026)
!6034 = !{i64 2149969180}
!6035 = !DILocation(line: 1515, column: 3, scope: !6026)
!6036 = !DILocation(line: 1516, column: 1, scope: !6016)
!6037 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6010, file: !6010, line: 45, type: !5878, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6038)
!6038 = !{!6039}
!6039 = !DILocalVariable(name: "irq", arg: 1, scope: !6037, file: !6010, line: 45, type: !32)
!6040 = !DILocation(line: 0, scope: !6037)
!6041 = !DILocation(line: 47, column: 2, scope: !6037)
!6042 = !DILocation(line: 48, column: 1, scope: !6037)
!6043 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !510, file: !510, line: 1546, type: !6017, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6044)
!6044 = !{!6045}
!6045 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6043, file: !510, line: 1546, type: !834)
!6046 = !DILocation(line: 0, scope: !6043)
!6047 = !DILocation(line: 1548, column: 23, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !510, line: 1548, column: 7)
!6049 = !DILocation(line: 1548, column: 7, scope: !6043)
!6050 = !DILocation(line: 1550, column: 81, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6048, file: !510, line: 1549, column: 3)
!6052 = !DILocation(line: 1550, column: 60, scope: !6051)
!6053 = !DILocation(line: 1550, column: 34, scope: !6051)
!6054 = !DILocation(line: 1550, column: 5, scope: !6051)
!6055 = !DILocation(line: 1550, column: 43, scope: !6051)
!6056 = !DILocation(line: 271, column: 3, scope: !6057, inlinedAt: !6059)
!6057 = distinct !DISubprogram(name: "__DSB", scope: !6058, file: !6058, line: 269, type: !3107, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !250)
!6058 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6059 = distinct !DILocation(line: 1551, column: 5, scope: !6051)
!6060 = !{i64 2426568}
!6061 = !DILocation(line: 260, column: 3, scope: !6062, inlinedAt: !6063)
!6062 = distinct !DISubprogram(name: "__ISB", scope: !6058, file: !6058, line: 258, type: !3107, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !250)
!6063 = distinct !DILocation(line: 1552, column: 5, scope: !6051)
!6064 = !{i64 2426285}
!6065 = !DILocation(line: 1553, column: 3, scope: !6051)
!6066 = !DILocation(line: 1554, column: 1, scope: !6043)
!6067 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6010, file: !6010, line: 50, type: !6068, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6070)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!107, !32}
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "irq", arg: 1, scope: !6067, file: !6010, line: 50, type: !32)
!6072 = !DILocation(line: 0, scope: !6067)
!6073 = !DILocation(line: 52, column: 20, scope: !6067)
!6074 = !DILocation(line: 52, column: 9, scope: !6067)
!6075 = !DILocation(line: 52, column: 41, scope: !6067)
!6076 = !DILocation(line: 52, column: 39, scope: !6067)
!6077 = !DILocation(line: 52, column: 2, scope: !6067)
!6078 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6010, file: !6010, line: 64, type: !6079, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6081)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{null, !32, !32, !162}
!6081 = !{!6082, !6083, !6084}
!6082 = !DILocalVariable(name: "irq", arg: 1, scope: !6078, file: !6010, line: 64, type: !32)
!6083 = !DILocalVariable(name: "prio", arg: 2, scope: !6078, file: !6010, line: 64, type: !32)
!6084 = !DILocalVariable(name: "flags", arg: 3, scope: !6078, file: !6010, line: 64, type: !162)
!6085 = !DILocation(line: 0, scope: !6078)
!6086 = !DILocation(line: 83, column: 8, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !6010, line: 82, column: 9)
!6088 = distinct !DILexicalBlock(scope: !6078, file: !6010, line: 76, column: 6)
!6089 = !DILocation(line: 95, column: 2, scope: !6078)
!6090 = !DILocation(line: 96, column: 1, scope: !6078)
!6091 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !510, file: !510, line: 1638, type: !6092, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{null, !834, !162}
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6091, file: !510, line: 1638, type: !834)
!6096 = !DILocalVariable(name: "priority", arg: 2, scope: !6091, file: !510, line: 1638, type: !162)
!6097 = !DILocation(line: 0, scope: !6091)
!6098 = !DILocation(line: 0, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6091, file: !510, line: 1640, column: 7)
!6100 = !DILocation(line: 1640, column: 7, scope: !6091)
!6101 = !DILocation(line: 1648, column: 1, scope: !6091)
!6102 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6010, file: !6010, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !6103)
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "unused", arg: 1, scope: !6102, file: !6010, line: 155, type: !13)
!6105 = !DILocation(line: 0, scope: !6102)
!6106 = !DILocation(line: 159, column: 2, scope: !6102)
!6107 = !DILocation(line: 160, column: 1, scope: !6102)
!6108 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6109, file: !6109, line: 87, type: !3107, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !250)
!6109 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6110 = !DILocation(line: 89, column: 2, scope: !6108)
!6111 = !DILocation(line: 90, column: 2, scope: !6108)
!6112 = !DILocation(line: 91, column: 1, scope: !6108)
!6113 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6109, file: !6109, line: 23, type: !3107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6114 = !DISubprogram(name: "z_arm_int_exit", scope: !6115, file: !6115, line: 153, type: !3107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6115 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6116 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6117, file: !6117, line: 256, type: !3107, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !250)
!6117 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = !DILocation(line: 258, column: 2, scope: !6116)
!6119 = !DILocation(line: 262, column: 2, scope: !6116)
!6120 = !DILocation(line: 263, column: 2, scope: !6116)
!6121 = !DILocation(line: 267, column: 2, scope: !6116)
!6122 = !DILocation(line: 268, column: 2, scope: !6116)
!6123 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6117, file: !6117, line: 53, type: !3107, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !250)
!6124 = !DILocation(line: 55, column: 12, scope: !6123)
!6125 = !DILocation(line: 271, column: 3, scope: !6126, inlinedAt: !6127)
!6126 = distinct !DISubprogram(name: "__DSB", scope: !6058, file: !6058, line: 269, type: !3107, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !250)
!6127 = distinct !DILocation(line: 56, column: 2, scope: !6123)
!6128 = !{i64 2425239}
!6129 = !DILocation(line: 260, column: 3, scope: !6130, inlinedAt: !6131)
!6130 = distinct !DISubprogram(name: "__ISB", scope: !6058, file: !6058, line: 258, type: !3107, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !250)
!6131 = distinct !DILocation(line: 57, column: 2, scope: !6123)
!6132 = !{i64 2424956}
!6133 = !DILocation(line: 58, column: 1, scope: !6123)
!6134 = distinct !DISubprogram(name: "arch_swap", scope: !6135, file: !6135, line: 33, type: !6068, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !6136)
!6135 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6136 = !{!6137}
!6137 = !DILocalVariable(name: "key", arg: 1, scope: !6134, file: !6135, line: 33, type: !32)
!6138 = !DILocation(line: 0, scope: !6134)
!6139 = !DILocation(line: 36, column: 2, scope: !6134)
!6140 = !DILocation(line: 36, column: 17, scope: !6134)
!6141 = !DILocation(line: 36, column: 25, scope: !6134)
!6142 = !DILocation(line: 37, column: 37, scope: !6134)
!6143 = !DILocation(line: 37, column: 17, scope: !6134)
!6144 = !DILocation(line: 37, column: 35, scope: !6134)
!6145 = !DILocation(line: 41, column: 12, scope: !6134)
!6146 = !DILocalVariable(name: "key", arg: 1, scope: !6147, file: !5867, line: 84, type: !32)
!6147 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !6148)
!6148 = !{!6146}
!6149 = !DILocation(line: 0, scope: !6147, inlinedAt: !6150)
!6150 = distinct !DILocation(line: 44, column: 2, scope: !6134)
!6151 = !DILocation(line: 95, column: 2, scope: !6147, inlinedAt: !6150)
!6152 = !{i64 1648239}
!6153 = !DILocation(line: 53, column: 9, scope: !6134)
!6154 = !DILocation(line: 53, column: 24, scope: !6134)
!6155 = !DILocation(line: 53, column: 2, scope: !6134)
!6156 = distinct !DISubprogram(name: "arch_new_thread", scope: !6157, file: !6157, line: 56, type: !6158, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6265)
!6157 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6158 = !DISubroutineType(types: !6159)
!6159 = !{null, !6160, !6260, !256, !3647, !102, !102, !102}
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 32)
!6161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !6162)
!6162 = !{!6163, !6221, !6233, !6234, !6235, !6236, !6242, !6255}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6161, file: !372, line: 247, baseType: !6164, size: 384)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !6165)
!6165 = !{!6166, !6190, !6197, !6198, !6199, !6208, !6209, !6210}
!6166 = !DIDerivedType(tag: DW_TAG_member, scope: !6164, file: !372, line: 60, baseType: !6167, size: 64)
!6167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6164, file: !372, line: 60, size: 64, elements: !6168)
!6168 = !{!6169, !6184}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6167, file: !372, line: 61, baseType: !6170, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6171)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6172)
!6172 = !{!6173, !6179}
!6173 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !233, line: 38, baseType: !6174, size: 32)
!6174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !233, line: 38, size: 32, elements: !6175)
!6175 = !{!6176, !6178}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6174, file: !233, line: 39, baseType: !6177, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6174, file: !233, line: 40, baseType: !6177, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !233, line: 42, baseType: !6180, size: 32, offset: 32)
!6180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !233, line: 42, size: 32, elements: !6181)
!6181 = !{!6182, !6183}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6180, file: !233, line: 43, baseType: !6177, size: 32)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6180, file: !233, line: 44, baseType: !6177, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6167, file: !372, line: 62, baseType: !6185, size: 64)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !6186)
!6186 = !{!6187}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6185, file: !397, line: 50, baseType: !6188, size: 64)
!6188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6189, size: 64, elements: !402)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6164, file: !372, line: 68, baseType: !6191, size: 32, offset: 64)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6193)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6194)
!6194 = !{!6195}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6193, file: !228, line: 232, baseType: !6196, size: 64)
!6196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6171)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6164, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6164, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!6199 = !DIDerivedType(tag: DW_TAG_member, scope: !6164, file: !372, line: 90, baseType: !6200, size: 16, offset: 112)
!6200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6164, file: !372, line: 90, size: 16, elements: !6201)
!6201 = !{!6202, !6207}
!6202 = !DIDerivedType(tag: DW_TAG_member, scope: !6200, file: !372, line: 91, baseType: !6203, size: 16)
!6203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6200, file: !372, line: 91, size: 16, elements: !6204)
!6204 = !{!6205, !6206}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6203, file: !372, line: 96, baseType: !420, size: 8)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6203, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6200, file: !372, line: 100, baseType: !424, size: 16)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6164, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6164, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6164, file: !372, line: 131, baseType: !6211, size: 192, offset: 192)
!6211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6212)
!6212 = !{!6213, !6214, !6220}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6211, file: !228, line: 245, baseType: !6170, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6211, file: !228, line: 246, baseType: !6215, size: 32, offset: 64)
!6215 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6216)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 32)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !6219}
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6211, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6161, file: !372, line: 250, baseType: !6222, size: 288, offset: 384)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !6223)
!6223 = !{!6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6222, file: !441, line: 26, baseType: !162, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6222, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6222, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6222, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6222, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6222, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6222, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6222, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6222, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6161, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6161, file: !372, line: 256, baseType: !6192, size: 64, offset: 704)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6161, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6161, file: !372, line: 300, baseType: !6237, size: 96, offset: 800)
!6237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !6238)
!6238 = !{!6239, !6240, !6241}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6237, file: !372, line: 153, baseType: !22, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6237, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6237, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6161, file: !372, line: 325, baseType: !6243, size: 32, offset: 896)
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 32)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6245)
!6245 = !{!6246, !6252, !6253}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6244, file: !224, line: 5074, baseType: !6247, size: 96)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !6248)
!6248 = !{!6249, !6250, !6251}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6247, file: !467, line: 57, baseType: !470, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6247, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6247, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6244, file: !224, line: 5075, baseType: !6192, size: 64, offset: 96)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6244, file: !224, line: 5076, baseType: !6254, offset: 160)
!6254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6161, file: !372, line: 343, baseType: !6256, size: 64, offset: 928)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !6257)
!6257 = !{!6258, !6259}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6256, file: !441, line: 63, baseType: !162, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6256, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3648, line: 44, baseType: !6262)
!6262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2080, line: 47, size: 8, elements: !6263)
!6263 = !{!6264}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6262, file: !2080, line: 48, baseType: !125, size: 8)
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273}
!6266 = !DILocalVariable(name: "thread", arg: 1, scope: !6156, file: !6157, line: 56, type: !6160)
!6267 = !DILocalVariable(name: "stack", arg: 2, scope: !6156, file: !6157, line: 56, type: !6260)
!6268 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6156, file: !6157, line: 57, type: !256)
!6269 = !DILocalVariable(name: "entry", arg: 4, scope: !6156, file: !6157, line: 57, type: !3647)
!6270 = !DILocalVariable(name: "p1", arg: 5, scope: !6156, file: !6157, line: 58, type: !102)
!6271 = !DILocalVariable(name: "p2", arg: 6, scope: !6156, file: !6157, line: 58, type: !102)
!6272 = !DILocalVariable(name: "p3", arg: 7, scope: !6156, file: !6157, line: 58, type: !102)
!6273 = !DILocalVariable(name: "iframe", scope: !6156, file: !6157, line: 60, type: !2631)
!6274 = !DILocation(line: 0, scope: !6156)
!6275 = !DILocation(line: 85, column: 11, scope: !6156)
!6276 = !DILocation(line: 93, column: 10, scope: !6156)
!6277 = !DILocation(line: 98, column: 13, scope: !6156)
!6278 = !DILocation(line: 100, column: 15, scope: !6156)
!6279 = !DILocation(line: 100, column: 10, scope: !6156)
!6280 = !DILocation(line: 100, column: 13, scope: !6156)
!6281 = !DILocation(line: 101, column: 15, scope: !6156)
!6282 = !DILocation(line: 101, column: 10, scope: !6156)
!6283 = !DILocation(line: 101, column: 13, scope: !6156)
!6284 = !DILocation(line: 102, column: 15, scope: !6156)
!6285 = !DILocation(line: 102, column: 10, scope: !6156)
!6286 = !DILocation(line: 102, column: 13, scope: !6156)
!6287 = !DILocation(line: 103, column: 15, scope: !6156)
!6288 = !DILocation(line: 103, column: 10, scope: !6156)
!6289 = !DILocation(line: 103, column: 13, scope: !6156)
!6290 = !DILocation(line: 106, column: 10, scope: !6156)
!6291 = !DILocation(line: 106, column: 15, scope: !6156)
!6292 = !DILocation(line: 122, column: 29, scope: !6156)
!6293 = !DILocation(line: 122, column: 23, scope: !6156)
!6294 = !DILocation(line: 122, column: 27, scope: !6156)
!6295 = !DILocation(line: 123, column: 15, scope: !6156)
!6296 = !DILocation(line: 123, column: 23, scope: !6156)
!6297 = !DILocation(line: 143, column: 1, scope: !6156)
!6298 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6157, file: !6157, line: 385, type: !6299, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6302)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!162, !6301, !6301}
!6301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6302 = !{!6303, !6304, !6305, !6308}
!6303 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6298, file: !6157, line: 385, type: !6301)
!6304 = !DILocalVariable(name: "psp", arg: 2, scope: !6298, file: !6157, line: 385, type: !6301)
!6305 = !DILocalVariable(name: "thread", scope: !6298, file: !6157, line: 388, type: !6306)
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6161)
!6308 = !DILocalVariable(name: "guard_len", scope: !6298, file: !6157, line: 405, type: !162)
!6309 = !DILocation(line: 0, scope: !6298)
!6310 = !DILocation(line: 388, column: 34, scope: !6298)
!6311 = !DILocation(line: 390, column: 13, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6298, file: !6157, line: 390, column: 6)
!6313 = !DILocation(line: 390, column: 6, scope: !6298)
!6314 = !DILocation(line: 438, column: 6, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6298, file: !6157, line: 438, column: 6)
!6316 = !DILocation(line: 438, column: 6, scope: !6298)
!6317 = !DILocation(line: 442, column: 3, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !6157, line: 440, column: 22)
!6319 = !DILocation(line: 455, column: 1, scope: !6298)
!6320 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6157, file: !6157, line: 530, type: !6321, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{null, !6160, !256, !3647}
!6323 = !{!6324, !6325, !6326}
!6324 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6320, file: !6157, line: 530, type: !6160)
!6325 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6320, file: !6157, line: 530, type: !256)
!6326 = !DILocalVariable(name: "_main", arg: 3, scope: !6320, file: !6157, line: 531, type: !3647)
!6327 = !DILocation(line: 0, scope: !6320)
!6328 = !DILocation(line: 535, column: 11, scope: !6320)
!6329 = !DILocation(line: 560, column: 2, scope: !6320)
!6330 = !DILocation(line: 576, column: 2, scope: !6320)
!6331 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6332 = !DILocation(line: 603, column: 2, scope: !6320)
!6333 = distinct !DISubprogram(name: "z_arm_fault", scope: !6334, file: !6334, line: 1036, type: !6335, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6350)
!6334 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6335 = !DISubroutineType(types: !6336)
!6336 = !{null, !162, !162, !162, !6337}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !441, line: 37, baseType: !6339)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !6340)
!6340 = !{!6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6339, file: !441, line: 26, baseType: !162, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6339, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6339, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6339, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6339, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6339, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6339, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6339, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6339, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!6350 = !{!6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6351 = !DILocalVariable(name: "msp", arg: 1, scope: !6333, file: !6334, line: 1036, type: !162)
!6352 = !DILocalVariable(name: "psp", arg: 2, scope: !6333, file: !6334, line: 1036, type: !162)
!6353 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6333, file: !6334, line: 1036, type: !162)
!6354 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6333, file: !6334, line: 1037, type: !6337)
!6355 = !DILocalVariable(name: "reason", scope: !6333, file: !6334, line: 1039, type: !162)
!6356 = !DILocalVariable(name: "fault", scope: !6333, file: !6334, line: 1040, type: !107)
!6357 = !DILocalVariable(name: "recoverable", scope: !6333, file: !6334, line: 1041, type: !136)
!6358 = !DILocalVariable(name: "nested_exc", scope: !6333, file: !6334, line: 1041, type: !136)
!6359 = !DILocalVariable(name: "esf", scope: !6333, file: !6334, line: 1042, type: !2699)
!6360 = !DILocalVariable(name: "esf_copy", scope: !6333, file: !6334, line: 1047, type: !2700)
!6361 = !DILocation(line: 0, scope: !6333)
!6362 = !DILocation(line: 1040, column: 19, scope: !6333)
!6363 = !DILocation(line: 1040, column: 24, scope: !6333)
!6364 = !DILocation(line: 1041, column: 2, scope: !6333)
!6365 = !DILocation(line: 1047, column: 2, scope: !6333)
!6366 = !DILocation(line: 1047, column: 15, scope: !6333)
!6367 = !DILocalVariable(name: "key", arg: 1, scope: !6368, file: !5867, line: 84, type: !32)
!6368 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6369)
!6369 = !{!6367}
!6370 = !DILocation(line: 0, scope: !6368, inlinedAt: !6371)
!6371 = distinct !DILocation(line: 1050, column: 2, scope: !6333)
!6372 = !DILocation(line: 95, column: 2, scope: !6368, inlinedAt: !6371)
!6373 = !{i64 1681483}
!6374 = !DILocation(line: 1055, column: 9, scope: !6333)
!6375 = !DILocation(line: 1063, column: 11, scope: !6333)
!6376 = !DILocation(line: 1064, column: 6, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6333, file: !6334, line: 1064, column: 6)
!6378 = !{i8 0, i8 2}
!6379 = !DILocation(line: 1064, column: 6, scope: !6333)
!6380 = !DILocation(line: 1070, column: 20, scope: !6333)
!6381 = !DILocation(line: 1070, column: 2, scope: !6333)
!6382 = !DILocation(line: 1089, column: 6, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6333, file: !6334, line: 1089, column: 6)
!6384 = !DILocation(line: 0, scope: !6383)
!6385 = !DILocation(line: 1089, column: 6, scope: !6333)
!6386 = !DILocation(line: 1090, column: 28, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !6334, line: 1090, column: 7)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !6334, line: 1089, column: 18)
!6389 = !DILocation(line: 1090, column: 44, scope: !6387)
!6390 = !DILocation(line: 1090, column: 7, scope: !6388)
!6391 = !DILocation(line: 1091, column: 24, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !6334, line: 1090, column: 50)
!6393 = !DILocation(line: 1092, column: 3, scope: !6392)
!6394 = !DILocation(line: 1094, column: 23, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6383, file: !6334, line: 1093, column: 9)
!6396 = !DILocation(line: 1097, column: 2, scope: !6333)
!6397 = !DILocation(line: 1098, column: 1, scope: !6333)
!6398 = distinct !DISubprogram(name: "get_esf", scope: !6334, file: !6334, line: 894, type: !6399, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6402)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!2699, !162, !162, !162, !6401}
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6402 = !{!6403, !6404, !6405, !6406, !6407, !6408}
!6403 = !DILocalVariable(name: "msp", arg: 1, scope: !6398, file: !6334, line: 894, type: !162)
!6404 = !DILocalVariable(name: "psp", arg: 2, scope: !6398, file: !6334, line: 894, type: !162)
!6405 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6398, file: !6334, line: 894, type: !162)
!6406 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6398, file: !6334, line: 895, type: !6401)
!6407 = !DILocalVariable(name: "alternative_state_exc", scope: !6398, file: !6334, line: 897, type: !136)
!6408 = !DILocalVariable(name: "ptr_esf", scope: !6398, file: !6334, line: 898, type: !2699)
!6409 = !DILocation(line: 0, scope: !6398)
!6410 = !DILocation(line: 900, column: 14, scope: !6398)
!6411 = !DILocation(line: 902, column: 49, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 902, column: 6)
!6413 = !DILocation(line: 902, column: 6, scope: !6398)
!6414 = !DILocation(line: 983, column: 18, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 983, column: 6)
!6416 = !DILocation(line: 991, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !6334, line: 990, column: 30)
!6418 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 990, column: 6)
!6419 = !DILocation(line: 998, column: 16, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !6334, line: 995, column: 10)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !6334, line: 991, column: 7)
!6422 = !DILocation(line: 1002, column: 2, scope: !6398)
!6423 = !DILocation(line: 1003, column: 1, scope: !6398)
!6424 = distinct !DISubprogram(name: "fault_handle", scope: !6334, file: !6334, line: 786, type: !6425, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6427)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!162, !2699, !107, !6401}
!6427 = !{!6428, !6429, !6430, !6431}
!6428 = !DILocalVariable(name: "esf", arg: 1, scope: !6424, file: !6334, line: 786, type: !2699)
!6429 = !DILocalVariable(name: "fault", arg: 2, scope: !6424, file: !6334, line: 786, type: !107)
!6430 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6424, file: !6334, line: 786, type: !6401)
!6431 = !DILocalVariable(name: "reason", scope: !6424, file: !6334, line: 788, type: !162)
!6432 = !DILocation(line: 0, scope: !6424)
!6433 = !DILocation(line: 790, column: 15, scope: !6424)
!6434 = !DILocation(line: 792, column: 2, scope: !6424)
!6435 = !DILocation(line: 794, column: 12, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6424, file: !6334, line: 792, column: 17)
!6437 = !DILocation(line: 795, column: 3, scope: !6436)
!6438 = !DILocation(line: 800, column: 12, scope: !6436)
!6439 = !DILocation(line: 801, column: 3, scope: !6436)
!6440 = !DILocation(line: 803, column: 12, scope: !6436)
!6441 = !DILocation(line: 804, column: 3, scope: !6436)
!6442 = !DILocation(line: 806, column: 12, scope: !6436)
!6443 = !DILocation(line: 807, column: 3, scope: !6436)
!6444 = !DILocation(line: 814, column: 3, scope: !6436)
!6445 = !DILocation(line: 815, column: 3, scope: !6436)
!6446 = !DILocation(line: 829, column: 2, scope: !6424)
!6447 = distinct !DISubprogram(name: "hard_fault", scope: !6334, file: !6334, line: 709, type: !6448, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6450)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{!162, !2699, !6401}
!6450 = !{!6451, !6452, !6453}
!6451 = !DILocalVariable(name: "esf", arg: 1, scope: !6447, file: !6334, line: 709, type: !2699)
!6452 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6447, file: !6334, line: 709, type: !6401)
!6453 = !DILocalVariable(name: "reason", scope: !6447, file: !6334, line: 711, type: !162)
!6454 = !DILocation(line: 0, scope: !6447)
!6455 = !DILocation(line: 732, column: 15, scope: !6447)
!6456 = !DILocation(line: 734, column: 12, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6447, file: !6334, line: 734, column: 6)
!6458 = !DILocation(line: 734, column: 17, scope: !6457)
!6459 = !DILocation(line: 734, column: 41, scope: !6457)
!6460 = !DILocation(line: 734, column: 6, scope: !6447)
!6461 = !DILocation(line: 736, column: 19, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6457, file: !6334, line: 736, column: 13)
!6463 = !DILocation(line: 736, column: 49, scope: !6462)
!6464 = !DILocation(line: 736, column: 13, scope: !6457)
!6465 = !DILocation(line: 738, column: 19, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6462, file: !6334, line: 738, column: 13)
!6467 = !DILocation(line: 738, column: 24, scope: !6466)
!6468 = !DILocation(line: 738, column: 47, scope: !6466)
!6469 = !DILocation(line: 738, column: 13, scope: !6462)
!6470 = !DILocation(line: 740, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !6334, line: 740, column: 7)
!6472 = distinct !DILexicalBlock(scope: !6466, file: !6334, line: 738, column: 53)
!6473 = !DILocation(line: 740, column: 7, scope: !6472)
!6474 = !DILocation(line: 742, column: 24, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !6334, line: 740, column: 38)
!6476 = !DILocation(line: 743, column: 3, scope: !6475)
!6477 = !DILocation(line: 743, column: 20, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6471, file: !6334, line: 743, column: 14)
!6479 = !DILocation(line: 743, column: 25, scope: !6478)
!6480 = !DILocation(line: 743, column: 52, scope: !6478)
!6481 = !DILocation(line: 743, column: 14, scope: !6471)
!6482 = !DILocation(line: 744, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6478, file: !6334, line: 743, column: 58)
!6484 = !DILocation(line: 745, column: 3, scope: !6483)
!6485 = !DILocation(line: 745, column: 20, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6478, file: !6334, line: 745, column: 14)
!6487 = !DILocation(line: 745, column: 25, scope: !6486)
!6488 = !DILocation(line: 745, column: 52, scope: !6486)
!6489 = !DILocation(line: 745, column: 14, scope: !6478)
!6490 = !DILocation(line: 746, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6486, file: !6334, line: 745, column: 58)
!6492 = !DILocation(line: 747, column: 3, scope: !6491)
!6493 = !DILocation(line: 747, column: 20, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6486, file: !6334, line: 747, column: 14)
!6495 = !DILocation(line: 747, column: 52, scope: !6494)
!6496 = !DILocation(line: 747, column: 14, scope: !6486)
!6497 = !DILocation(line: 748, column: 13, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6494, file: !6334, line: 747, column: 58)
!6499 = !DILocation(line: 753, column: 3, scope: !6498)
!6500 = !DILocation(line: 766, column: 2, scope: !6447)
!6501 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6334, file: !6334, line: 229, type: !6425, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6502)
!6502 = !{!6503, !6504, !6505, !6506, !6507, !6508, !6511}
!6503 = !DILocalVariable(name: "esf", arg: 1, scope: !6501, file: !6334, line: 229, type: !2699)
!6504 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6501, file: !6334, line: 229, type: !107)
!6505 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6501, file: !6334, line: 230, type: !6401)
!6506 = !DILocalVariable(name: "reason", scope: !6501, file: !6334, line: 232, type: !162)
!6507 = !DILocalVariable(name: "mmfar", scope: !6501, file: !6334, line: 233, type: !162)
!6508 = !DILocalVariable(name: "temp", scope: !6509, file: !6334, line: 254, type: !162)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !6334, line: 244, column: 48)
!6510 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 244, column: 6)
!6511 = !DILocalVariable(name: "min_stack_ptr", scope: !6512, file: !6334, line: 309, type: !162)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !6334, line: 308, column: 43)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !6334, line: 308, column: 7)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !6334, line: 289, column: 40)
!6515 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 288, column: 6)
!6516 = !DILocation(line: 0, scope: !6501)
!6517 = !DILocation(line: 237, column: 12, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 237, column: 6)
!6519 = !DILocation(line: 241, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 241, column: 6)
!6521 = !DILocation(line: 244, column: 12, scope: !6510)
!6522 = !DILocation(line: 244, column: 17, scope: !6510)
!6523 = !DILocation(line: 244, column: 42, scope: !6510)
!6524 = !DILocation(line: 244, column: 6, scope: !6501)
!6525 = !DILocation(line: 254, column: 24, scope: !6509)
!6526 = !DILocation(line: 0, scope: !6509)
!6527 = !DILocation(line: 256, column: 13, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6509, file: !6334, line: 256, column: 7)
!6529 = !DILocation(line: 256, column: 18, scope: !6528)
!6530 = !DILocation(line: 256, column: 44, scope: !6528)
!6531 = !DILocation(line: 256, column: 7, scope: !6509)
!6532 = !DILocation(line: 259, column: 24, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !6334, line: 259, column: 8)
!6534 = distinct !DILexicalBlock(scope: !6528, file: !6334, line: 256, column: 50)
!6535 = !DILocation(line: 259, column: 8, scope: !6534)
!6536 = !DILocation(line: 261, column: 15, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !6334, line: 259, column: 30)
!6538 = !DILocation(line: 262, column: 4, scope: !6537)
!6539 = !DILocation(line: 265, column: 12, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 265, column: 6)
!6541 = !DILocation(line: 288, column: 12, scope: !6515)
!6542 = !DILocation(line: 288, column: 17, scope: !6515)
!6543 = !DILocation(line: 288, column: 41, scope: !6515)
!6544 = !DILocation(line: 289, column: 9, scope: !6515)
!6545 = !DILocation(line: 289, column: 14, scope: !6515)
!6546 = !DILocation(line: 288, column: 6, scope: !6501)
!6547 = !DILocation(line: 308, column: 12, scope: !6513)
!6548 = !DILocation(line: 308, column: 17, scope: !6513)
!6549 = !DILocation(line: 308, column: 7, scope: !6514)
!6550 = !DILocation(line: 310, column: 6, scope: !6512)
!6551 = !DILocation(line: 309, column: 29, scope: !6512)
!6552 = !DILocation(line: 0, scope: !6512)
!6553 = !DILocation(line: 312, column: 8, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6512, file: !6334, line: 312, column: 8)
!6555 = !DILocation(line: 312, column: 8, scope: !6512)
!6556 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6557, file: !6058, line: 1099, type: !162)
!6557 = distinct !DISubprogram(name: "__set_PSP", scope: !6058, file: !6058, line: 1099, type: !5891, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6558)
!6558 = !{!6556}
!6559 = !DILocation(line: 0, scope: !6557, inlinedAt: !6560)
!6560 = distinct !DILocation(line: 338, column: 5, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !6334, line: 312, column: 23)
!6562 = !DILocation(line: 1101, column: 3, scope: !6557, inlinedAt: !6560)
!6563 = !{i64 2476208}
!6564 = !DILocation(line: 341, column: 4, scope: !6561)
!6565 = !DILocation(line: 366, column: 12, scope: !6501)
!6566 = !DILocation(line: 369, column: 15, scope: !6501)
!6567 = !DILocation(line: 371, column: 2, scope: !6501)
!6568 = distinct !DISubprogram(name: "bus_fault", scope: !6334, file: !6334, line: 383, type: !6569, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{!107, !2699, !107, !6401}
!6571 = !{!6572, !6573, !6574, !6575, !6576}
!6572 = !DILocalVariable(name: "esf", arg: 1, scope: !6568, file: !6334, line: 383, type: !2699)
!6573 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6568, file: !6334, line: 383, type: !107)
!6574 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6568, file: !6334, line: 383, type: !6401)
!6575 = !DILocalVariable(name: "reason", scope: !6568, file: !6334, line: 385, type: !162)
!6576 = !DILocalVariable(name: "bfar", scope: !6577, file: !6334, line: 405, type: !162)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 395, column: 42)
!6578 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 395, column: 6)
!6579 = !DILocation(line: 0, scope: !6568)
!6580 = !DILocation(line: 389, column: 11, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 389, column: 6)
!6582 = !DILocation(line: 392, column: 11, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 392, column: 6)
!6584 = !DILocation(line: 395, column: 11, scope: !6578)
!6585 = !DILocation(line: 395, column: 16, scope: !6578)
!6586 = !DILocation(line: 395, column: 6, scope: !6568)
!6587 = !DILocation(line: 405, column: 3, scope: !6577)
!6588 = !DILocation(line: 0, scope: !6577)
!6589 = !DILocation(line: 407, column: 13, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6577, file: !6334, line: 407, column: 7)
!6591 = !DILocation(line: 407, column: 18, scope: !6590)
!6592 = !DILocation(line: 407, column: 44, scope: !6590)
!6593 = !DILocation(line: 407, column: 7, scope: !6577)
!6594 = !DILocation(line: 411, column: 15, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !6334, line: 409, column: 30)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !6334, line: 409, column: 8)
!6597 = distinct !DILexicalBlock(scope: !6590, file: !6334, line: 407, column: 50)
!6598 = !DILocation(line: 412, column: 4, scope: !6595)
!6599 = !DILocation(line: 415, column: 11, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 415, column: 6)
!6601 = !DILocation(line: 418, column: 12, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 418, column: 6)
!6603 = !DILocation(line: 524, column: 12, scope: !6568)
!6604 = !DILocation(line: 526, column: 15, scope: !6568)
!6605 = !DILocation(line: 528, column: 2, scope: !6568)
!6606 = distinct !DISubprogram(name: "usage_fault", scope: !6334, file: !6334, line: 539, type: !6607, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6611)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!162, !6609}
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 32)
!6610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2700)
!6611 = !{!6612, !6613}
!6612 = !DILocalVariable(name: "esf", arg: 1, scope: !6606, file: !6334, line: 539, type: !6609)
!6613 = !DILocalVariable(name: "reason", scope: !6606, file: !6334, line: 541, type: !162)
!6614 = !DILocation(line: 0, scope: !6606)
!6615 = !DILocation(line: 546, column: 12, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 546, column: 6)
!6617 = !DILocation(line: 549, column: 12, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 549, column: 6)
!6619 = !DILocation(line: 567, column: 12, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 567, column: 6)
!6621 = !DILocation(line: 570, column: 12, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 570, column: 6)
!6623 = !DILocation(line: 573, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 573, column: 6)
!6625 = !DILocation(line: 576, column: 12, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 576, column: 6)
!6627 = !DILocation(line: 581, column: 12, scope: !6606)
!6628 = !DILocation(line: 583, column: 2, scope: !6606)
!6629 = distinct !DISubprogram(name: "debug_monitor", scope: !6334, file: !6334, line: 632, type: !6630, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6632)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{null, !2699, !6401}
!6632 = !{!6633, !6634}
!6633 = !DILocalVariable(name: "esf", arg: 1, scope: !6629, file: !6334, line: 632, type: !2699)
!6634 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6629, file: !6334, line: 632, type: !6401)
!6635 = !DILocation(line: 0, scope: !6629)
!6636 = !DILocation(line: 634, column: 15, scope: !6629)
!6637 = !DILocation(line: 652, column: 1, scope: !6629)
!6638 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6334, file: !6334, line: 658, type: !6639, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !6641)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!136, !2699}
!6641 = !{!6642, !6643, !6644}
!6642 = !DILocalVariable(name: "esf", arg: 1, scope: !6638, file: !6334, line: 658, type: !2699)
!6643 = !DILocalVariable(name: "ret_addr", scope: !6638, file: !6334, line: 660, type: !2472)
!6644 = !DILocalVariable(name: "fault_insn", scope: !6638, file: !6334, line: 686, type: !424)
!6645 = !DILocation(line: 0, scope: !6638)
!6646 = !DILocation(line: 660, column: 46, scope: !6638)
!6647 = !DILocation(line: 660, column: 23, scope: !6638)
!6648 = !DILocation(line: 682, column: 11, scope: !6638)
!6649 = !DILocation(line: 271, column: 3, scope: !6650, inlinedAt: !6651)
!6650 = distinct !DISubprogram(name: "__DSB", scope: !6058, file: !6058, line: 269, type: !3107, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !250)
!6651 = distinct !DILocation(line: 683, column: 2, scope: !6638)
!6652 = !{i64 2452343}
!6653 = !DILocation(line: 260, column: 3, scope: !6654, inlinedAt: !6655)
!6654 = distinct !DISubprogram(name: "__ISB", scope: !6058, file: !6058, line: 258, type: !3107, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !250)
!6655 = distinct !DILocation(line: 684, column: 2, scope: !6638)
!6656 = !{i64 2452060}
!6657 = !DILocation(line: 686, column: 35, scope: !6638)
!6658 = !DILocation(line: 686, column: 24, scope: !6638)
!6659 = !DILocation(line: 688, column: 11, scope: !6638)
!6660 = !DILocation(line: 271, column: 3, scope: !6650, inlinedAt: !6661)
!6661 = distinct !DILocation(line: 689, column: 2, scope: !6638)
!6662 = !DILocation(line: 260, column: 3, scope: !6654, inlinedAt: !6663)
!6663 = distinct !DILocation(line: 690, column: 2, scope: !6638)
!6664 = !DILocation(line: 693, column: 45, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6638, file: !6334, line: 693, column: 6)
!6666 = !DILocation(line: 699, column: 1, scope: !6638)
!6667 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6334, file: !6334, line: 1107, type: !3107, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !250)
!6668 = !DILocation(line: 1111, column: 11, scope: !6667)
!6669 = !DILocation(line: 1136, column: 1, scope: !6667)
!6670 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6671, file: !6671, line: 26, type: !3107, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6672)
!6671 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6672 = !{!6673}
!6673 = !DILocalVariable(name: "irq", scope: !6670, file: !6671, line: 28, type: !107)
!6674 = !DILocation(line: 0, scope: !6670)
!6675 = !DILocation(line: 30, column: 2, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6670, file: !6671, line: 30, column: 2)
!6677 = !DILocation(line: 31, column: 3, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6671, line: 30, column: 39)
!6679 = distinct !DILexicalBlock(scope: !6676, file: !6671, line: 30, column: 2)
!6680 = !DILocation(line: 30, column: 35, scope: !6679)
!6681 = !DILocation(line: 30, column: 13, scope: !6679)
!6682 = distinct !{!6682, !6675, !6683}
!6683 = !DILocation(line: 32, column: 2, scope: !6676)
!6684 = !DILocation(line: 33, column: 1, scope: !6670)
!6685 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !510, file: !510, line: 1638, type: !6092, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6686)
!6686 = !{!6687, !6688}
!6687 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6685, file: !510, line: 1638, type: !834)
!6688 = !DILocalVariable(name: "priority", arg: 2, scope: !6685, file: !510, line: 1638, type: !162)
!6689 = !DILocation(line: 0, scope: !6685)
!6690 = !DILocation(line: 1640, column: 7, scope: !6685)
!6691 = !DILocation(line: 0, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6685, file: !510, line: 1640, column: 7)
!6693 = !DILocation(line: 1648, column: 1, scope: !6685)
!6694 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6695, file: !6695, line: 27, type: !6696, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2787, retainedNodes: !6799)
!6695 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6696 = !DISubroutineType(types: !6697)
!6697 = !{null, !6698}
!6698 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !372, line: 347, baseType: !6699)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 32)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !6701)
!6701 = !{!6702, !6760, !6772, !6773, !6774, !6775, !6781, !6794}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6700, file: !372, line: 247, baseType: !6703, size: 384)
!6703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !6704)
!6704 = !{!6705, !6729, !6736, !6737, !6738, !6747, !6748, !6749}
!6705 = !DIDerivedType(tag: DW_TAG_member, scope: !6703, file: !372, line: 60, baseType: !6706, size: 64)
!6706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6703, file: !372, line: 60, size: 64, elements: !6707)
!6707 = !{!6708, !6723}
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6706, file: !372, line: 61, baseType: !6709, size: 64)
!6709 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6710)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6711)
!6711 = !{!6712, !6718}
!6712 = !DIDerivedType(tag: DW_TAG_member, scope: !6710, file: !233, line: 38, baseType: !6713, size: 32)
!6713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !233, line: 38, size: 32, elements: !6714)
!6714 = !{!6715, !6717}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6713, file: !233, line: 39, baseType: !6716, size: 32)
!6716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6710, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6713, file: !233, line: 40, baseType: !6716, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, scope: !6710, file: !233, line: 42, baseType: !6719, size: 32, offset: 32)
!6719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !233, line: 42, size: 32, elements: !6720)
!6720 = !{!6721, !6722}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6719, file: !233, line: 43, baseType: !6716, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6719, file: !233, line: 44, baseType: !6716, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6706, file: !372, line: 62, baseType: !6724, size: 64)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !6725)
!6725 = !{!6726}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6724, file: !397, line: 50, baseType: !6727, size: 64)
!6727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6728, size: 64, elements: !402)
!6728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6703, file: !372, line: 68, baseType: !6730, size: 32, offset: 64)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 32)
!6731 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6732)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6733)
!6733 = !{!6734}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6732, file: !228, line: 232, baseType: !6735, size: 64)
!6735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6710)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6703, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6703, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!6738 = !DIDerivedType(tag: DW_TAG_member, scope: !6703, file: !372, line: 90, baseType: !6739, size: 16, offset: 112)
!6739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6703, file: !372, line: 90, size: 16, elements: !6740)
!6740 = !{!6741, !6746}
!6741 = !DIDerivedType(tag: DW_TAG_member, scope: !6739, file: !372, line: 91, baseType: !6742, size: 16)
!6742 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6739, file: !372, line: 91, size: 16, elements: !6743)
!6743 = !{!6744, !6745}
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6742, file: !372, line: 96, baseType: !420, size: 8)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6742, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6739, file: !372, line: 100, baseType: !424, size: 16)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6703, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6703, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6703, file: !372, line: 131, baseType: !6750, size: 192, offset: 192)
!6750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6751)
!6751 = !{!6752, !6753, !6759}
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6750, file: !228, line: 245, baseType: !6709, size: 64)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6750, file: !228, line: 246, baseType: !6754, size: 32, offset: 64)
!6754 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6755)
!6755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6756, size: 32)
!6756 = !DISubroutineType(types: !6757)
!6757 = !{null, !6758}
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6750, size: 32)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6750, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6700, file: !372, line: 250, baseType: !6761, size: 288, offset: 384)
!6761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !6762)
!6762 = !{!6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771}
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6761, file: !441, line: 26, baseType: !162, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6761, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6761, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6761, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6761, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6761, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6761, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6761, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6761, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6700, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6700, file: !372, line: 256, baseType: !6731, size: 64, offset: 704)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6700, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6700, file: !372, line: 300, baseType: !6776, size: 96, offset: 800)
!6776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !6777)
!6777 = !{!6778, !6779, !6780}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6776, file: !372, line: 153, baseType: !22, size: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6776, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6776, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6700, file: !372, line: 325, baseType: !6782, size: 32, offset: 896)
!6782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6783, size: 32)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6784)
!6784 = !{!6785, !6791, !6792}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6783, file: !224, line: 5074, baseType: !6786, size: 96)
!6786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !6787)
!6787 = !{!6788, !6789, !6790}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6786, file: !467, line: 57, baseType: !470, size: 32)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6786, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6786, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6783, file: !224, line: 5075, baseType: !6731, size: 64, offset: 96)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6783, file: !224, line: 5076, baseType: !6793, offset: 160)
!6793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6700, file: !372, line: 343, baseType: !6795, size: 64, offset: 928)
!6795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !6796)
!6796 = !{!6797, !6798}
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6795, file: !441, line: 63, baseType: !162, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6795, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!6799 = !{!6800}
!6800 = !DILocalVariable(name: "thread", arg: 1, scope: !6694, file: !6695, line: 27, type: !6698)
!6801 = !DILocation(line: 0, scope: !6694)
!6802 = !DILocation(line: 29, column: 6, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6694, file: !6695, line: 29, column: 6)
!6804 = !DILocation(line: 29, column: 15, scope: !6803)
!6805 = !DILocation(line: 29, column: 6, scope: !6694)
!6806 = !DILocation(line: 1031, column: 3, scope: !6807, inlinedAt: !6812)
!6807 = distinct !DISubprogram(name: "__get_IPSR", scope: !6058, file: !6058, line: 1027, type: !6808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2787, retainedNodes: !6810)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!162}
!6810 = !{!6811}
!6811 = !DILocalVariable(name: "result", scope: !6807, file: !6058, line: 1029, type: !162)
!6812 = distinct !DILocation(line: 48, column: 10, scope: !6813, inlinedAt: !6817)
!6813 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6814, file: !6814, line: 46, type: !6815, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2787, retainedNodes: !250)
!6814 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6815 = !DISubroutineType(types: !6816)
!6816 = !{!136}
!6817 = distinct !DILocation(line: 30, column: 7, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6695, line: 30, column: 7)
!6819 = distinct !DILexicalBlock(scope: !6803, file: !6695, line: 29, column: 26)
!6820 = !{i64 2441191}
!6821 = !DILocation(line: 0, scope: !6807, inlinedAt: !6812)
!6822 = !DILocation(line: 48, column: 9, scope: !6813, inlinedAt: !6817)
!6823 = !DILocation(line: 30, column: 7, scope: !6819)
!6824 = !DILocation(line: 42, column: 14, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6818, file: !6695, line: 30, column: 25)
!6826 = !DILocation(line: 48, column: 15, scope: !6825)
!6827 = !DILocation(line: 49, column: 3, scope: !6825)
!6828 = !DILocation(line: 52, column: 2, scope: !6694)
!6829 = !DILocation(line: 53, column: 1, scope: !6694)
!6830 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !367, file: !367, line: 127, type: !3107, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !360, retainedNodes: !250)
!6831 = !DILocation(line: 134, column: 2, scope: !6830)
!6832 = !DILocation(line: 156, column: 1, scope: !6830)
!6833 = !DILocation(line: 0, scope: !366)
!6834 = !DILocation(line: 289, column: 36, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !366, file: !367, line: 285, column: 2)
!6836 = !DILocation(line: 289, column: 42, scope: !6835)
!6837 = !DILocation(line: 300, column: 36, scope: !366)
!6838 = !DILocation(line: 301, column: 35, scope: !366)
!6839 = !DILocation(line: 302, column: 37, scope: !366)
!6840 = !DILocation(line: 311, column: 2, scope: !366)
!6841 = !DILocation(line: 316, column: 1, scope: !366)
!6842 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !538, file: !538, line: 180, type: !3107, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !250)
!6843 = !DILocation(line: 188, column: 12, scope: !6842)
!6844 = !DILocation(line: 271, column: 3, scope: !6845, inlinedAt: !6846)
!6845 = distinct !DISubprogram(name: "__DSB", scope: !6058, file: !6058, line: 269, type: !3107, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !250)
!6846 = distinct !DILocation(line: 192, column: 2, scope: !6842)
!6847 = !{i64 2597042}
!6848 = !DILocation(line: 260, column: 3, scope: !6849, inlinedAt: !6850)
!6849 = distinct !DISubprogram(name: "__ISB", scope: !6058, file: !6058, line: 258, type: !3107, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !250)
!6850 = distinct !DILocation(line: 193, column: 2, scope: !6842)
!6851 = !{i64 2596759}
!6852 = !DILocation(line: 194, column: 1, scope: !6842)
!6853 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !538, file: !538, line: 199, type: !3107, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !250)
!6854 = !DILocation(line: 282, column: 3, scope: !6855, inlinedAt: !6856)
!6855 = distinct !DISubprogram(name: "__DMB", scope: !6058, file: !6058, line: 280, type: !3107, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !250)
!6856 = distinct !DILocation(line: 202, column: 2, scope: !6853)
!6857 = !{i64 2597318}
!6858 = !DILocation(line: 205, column: 12, scope: !6853)
!6859 = !DILocation(line: 206, column: 1, scope: !6853)
!6860 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !538, file: !538, line: 275, type: !6861, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6874)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{null, !6863, !177, !6301, !6301}
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 32)
!6864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6865)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !489, line: 52, size: 96, elements: !6866)
!6866 = !{!6867, !6868, !6869}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6865, file: !489, line: 53, baseType: !22, size: 32)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6865, file: !489, line: 54, baseType: !252, size: 32, offset: 32)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6865, file: !489, line: 55, baseType: !6870, size: 32, offset: 64)
!6870 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !495, line: 151, baseType: !6871)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 149, size: 32, elements: !6872)
!6872 = !{!6873}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6871, file: !495, line: 150, baseType: !162, size: 32)
!6874 = !{!6875, !6876, !6877, !6878}
!6875 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6860, file: !538, line: 276, type: !6863)
!6876 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6860, file: !538, line: 276, type: !177)
!6877 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6860, file: !538, line: 277, type: !6301)
!6878 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6860, file: !538, line: 277, type: !6301)
!6879 = !DILocation(line: 0, scope: !6860)
!6880 = !DILocation(line: 279, column: 6, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6860, file: !538, line: 279, column: 6)
!6882 = !DILocation(line: 285, column: 1, scope: !6860)
!6883 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6884, file: !6884, line: 220, type: !6885, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6887)
!6884 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6885 = !DISubroutineType(types: !6886)
!6886 = !{!107, !6863, !177, !6301, !6301}
!6887 = !{!6888, !6889, !6890, !6891, !6892}
!6888 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6883, file: !6884, line: 221, type: !6863)
!6889 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6883, file: !6884, line: 221, type: !177)
!6890 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6883, file: !6884, line: 222, type: !6301)
!6891 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6883, file: !6884, line: 223, type: !6301)
!6892 = !DILocalVariable(name: "mpu_reg_index", scope: !6883, file: !6884, line: 225, type: !107)
!6893 = !DILocation(line: 0, scope: !6883)
!6894 = !DILocation(line: 225, column: 22, scope: !6883)
!6895 = !DILocation(line: 233, column: 18, scope: !6883)
!6896 = !DILocation(line: 236, column: 23, scope: !6883)
!6897 = !DILocation(line: 236, column: 21, scope: !6883)
!6898 = !DILocation(line: 238, column: 2, scope: !6883)
!6899 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !538, file: !538, line: 105, type: !6900, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6902)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!107, !6863, !133, !133, !136}
!6902 = !{!6903, !6904, !6905, !6906, !6907, !6908}
!6903 = !DILocalVariable(name: "regions", arg: 1, scope: !6899, file: !538, line: 106, type: !6863)
!6904 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6899, file: !538, line: 106, type: !133)
!6905 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6899, file: !538, line: 106, type: !133)
!6906 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6899, file: !538, line: 107, type: !136)
!6907 = !DILocalVariable(name: "i", scope: !6899, file: !538, line: 109, type: !107)
!6908 = !DILocalVariable(name: "reg_index", scope: !6899, file: !538, line: 110, type: !107)
!6909 = !DILocation(line: 0, scope: !6899)
!6910 = !DILocation(line: 110, column: 18, scope: !6899)
!6911 = !DILocation(line: 112, column: 16, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !538, line: 112, column: 2)
!6913 = distinct !DILexicalBlock(scope: !6899, file: !538, line: 112, column: 2)
!6914 = !DILocation(line: 112, column: 2, scope: !6913)
!6915 = !DILocation(line: 113, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !538, line: 113, column: 7)
!6917 = distinct !DILexicalBlock(scope: !6912, file: !538, line: 112, column: 36)
!6918 = !DILocation(line: 113, column: 18, scope: !6916)
!6919 = !DILocation(line: 113, column: 23, scope: !6916)
!6920 = !DILocation(line: 113, column: 7, scope: !6917)
!6921 = !DILocation(line: 118, column: 23, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6917, file: !538, line: 118, column: 7)
!6923 = !DILocation(line: 119, column: 7, scope: !6922)
!6924 = !DILocation(line: 118, column: 7, scope: !6917)
!6925 = !DILocation(line: 124, column: 36, scope: !6917)
!6926 = !DILocation(line: 124, column: 15, scope: !6917)
!6927 = !DILocation(line: 126, column: 17, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6917, file: !538, line: 126, column: 7)
!6929 = !DILocation(line: 126, column: 7, scope: !6917)
!6930 = !DILocation(line: 131, column: 12, scope: !6917)
!6931 = !DILocation(line: 132, column: 2, scope: !6917)
!6932 = !DILocation(line: 112, column: 32, scope: !6912)
!6933 = distinct !{!6933, !6914, !6934}
!6934 = !DILocation(line: 132, column: 2, scope: !6913)
!6935 = !DILocation(line: 135, column: 1, scope: !6899)
!6936 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6884, file: !6884, line: 63, type: !6937, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6939)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!107, !6863}
!6939 = !{!6940, !6941}
!6940 = !DILocalVariable(name: "part", arg: 1, scope: !6936, file: !6884, line: 63, type: !6863)
!6941 = !DILocalVariable(name: "partition_is_valid", scope: !6936, file: !6884, line: 70, type: !107)
!6942 = !DILocation(line: 0, scope: !6936)
!6943 = !DILocation(line: 71, column: 11, scope: !6936)
!6944 = !DILocation(line: 71, column: 37, scope: !6936)
!6945 = !DILocation(line: 72, column: 3, scope: !6936)
!6946 = !DILocation(line: 71, column: 30, scope: !6936)
!6947 = !DILocation(line: 75, column: 11, scope: !6936)
!6948 = !DILocation(line: 75, column: 17, scope: !6936)
!6949 = !DILocation(line: 75, column: 38, scope: !6936)
!6950 = !DILocation(line: 77, column: 2, scope: !6936)
!6951 = distinct !DISubprogram(name: "mpu_configure_region", scope: !538, file: !538, line: 79, type: !6952, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6954)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!107, !177, !6863}
!6954 = !{!6955, !6956, !6957}
!6955 = !DILocalVariable(name: "index", arg: 1, scope: !6951, file: !538, line: 79, type: !177)
!6956 = !DILocalVariable(name: "new_region", arg: 2, scope: !6951, file: !538, line: 80, type: !6863)
!6957 = !DILocalVariable(name: "region_conf", scope: !6951, file: !538, line: 82, type: !527)
!6958 = !DILocation(line: 0, scope: !6951)
!6959 = !DILocation(line: 82, column: 2, scope: !6951)
!6960 = !DILocation(line: 82, column: 24, scope: !6951)
!6961 = !DILocation(line: 87, column: 33, scope: !6951)
!6962 = !DILocation(line: 87, column: 14, scope: !6951)
!6963 = !DILocation(line: 87, column: 19, scope: !6951)
!6964 = !DILocation(line: 91, column: 55, scope: !6951)
!6965 = !DILocation(line: 92, column: 16, scope: !6951)
!6966 = !DILocation(line: 92, column: 53, scope: !6951)
!6967 = !DILocation(line: 91, column: 2, scope: !6951)
!6968 = !DILocation(line: 95, column: 9, scope: !6951)
!6969 = !DILocation(line: 97, column: 1, scope: !6951)
!6970 = !DILocation(line: 95, column: 2, scope: !6951)
!6971 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6884, file: !6884, line: 113, type: !6972, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6977)
!6972 = !DISubroutineType(types: !6973)
!6973 = !{null, !6974, !6975, !162, !162}
!6974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6976, size: 32)
!6976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6870)
!6977 = !{!6978, !6979, !6980, !6981}
!6978 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6971, file: !6884, line: 114, type: !6974)
!6979 = !DILocalVariable(name: "attr", arg: 2, scope: !6971, file: !6884, line: 115, type: !6975)
!6980 = !DILocalVariable(name: "base", arg: 3, scope: !6971, file: !6884, line: 115, type: !162)
!6981 = !DILocalVariable(name: "size", arg: 4, scope: !6971, file: !6884, line: 115, type: !162)
!6982 = !DILocation(line: 0, scope: !6971)
!6983 = !DILocation(line: 127, column: 23, scope: !6971)
!6984 = !DILocation(line: 127, column: 35, scope: !6971)
!6985 = !DILocation(line: 127, column: 33, scope: !6971)
!6986 = !DILocation(line: 127, column: 10, scope: !6971)
!6987 = !DILocation(line: 127, column: 15, scope: !6971)
!6988 = !DILocation(line: 129, column: 1, scope: !6971)
!6989 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !538, file: !538, line: 57, type: !6990, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !6992)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!107, !177, !525}
!6992 = !{!6993, !6994}
!6993 = !DILocalVariable(name: "index", arg: 1, scope: !6989, file: !538, line: 57, type: !177)
!6994 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6989, file: !538, line: 58, type: !525)
!6995 = !DILocation(line: 0, scope: !6989)
!6996 = !DILocation(line: 61, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6989, file: !538, line: 61, column: 6)
!6998 = !DILocation(line: 61, column: 12, scope: !6997)
!6999 = !DILocation(line: 61, column: 6, scope: !6989)
!7000 = !DILocation(line: 71, column: 2, scope: !6989)
!7001 = !DILocation(line: 73, column: 2, scope: !6989)
!7002 = !DILocation(line: 74, column: 1, scope: !6989)
!7003 = distinct !DISubprogram(name: "region_init", scope: !6884, file: !6884, line: 29, type: !7004, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7006)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{null, !6301, !525}
!7006 = !{!7007, !7008}
!7007 = !DILocalVariable(name: "index", arg: 1, scope: !7003, file: !6884, line: 29, type: !6301)
!7008 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7003, file: !6884, line: 30, type: !525)
!7009 = !DILocation(line: 0, scope: !7003)
!7010 = !DILocation(line: 33, column: 2, scope: !7003)
!7011 = !DILocation(line: 47, column: 28, scope: !7003)
!7012 = !DILocation(line: 47, column: 33, scope: !7003)
!7013 = !DILocation(line: 48, column: 26, scope: !7003)
!7014 = !DILocation(line: 47, column: 12, scope: !7003)
!7015 = !DILocation(line: 49, column: 32, scope: !7003)
!7016 = !DILocation(line: 49, column: 37, scope: !7003)
!7017 = !DILocation(line: 49, column: 12, scope: !7003)
!7018 = !DILocation(line: 53, column: 1, scope: !7003)
!7019 = distinct !DISubprogram(name: "set_region_number", scope: !7020, file: !7020, line: 32, type: !5891, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7021)
!7020 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7021 = !{!7022}
!7022 = !DILocalVariable(name: "index", arg: 1, scope: !7019, file: !7020, line: 32, type: !162)
!7023 = !DILocation(line: 0, scope: !7019)
!7024 = !DILocation(line: 34, column: 11, scope: !7019)
!7025 = !DILocation(line: 35, column: 1, scope: !7019)
!7026 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6884, file: !6884, line: 88, type: !7027, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7029)
!7027 = !DISubroutineType(types: !7028)
!7028 = !{!162, !162}
!7029 = !{!7030}
!7030 = !DILocalVariable(name: "size", arg: 1, scope: !7026, file: !6884, line: 88, type: !162)
!7031 = !DILocation(line: 0, scope: !7026)
!7032 = !DILocation(line: 91, column: 11, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7026, file: !6884, line: 91, column: 6)
!7034 = !DILocation(line: 91, column: 6, scope: !7026)
!7035 = !DILocation(line: 100, column: 11, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7026, file: !6884, line: 100, column: 6)
!7037 = !DILocation(line: 100, column: 6, scope: !7026)
!7038 = !DILocation(line: 104, column: 35, scope: !7026)
!7039 = !DILocation(line: 104, column: 16, scope: !7026)
!7040 = !DILocation(line: 104, column: 50, scope: !7026)
!7041 = !DILocation(line: 104, column: 72, scope: !7026)
!7042 = !DILocation(line: 104, column: 2, scope: !7026)
!7043 = !DILocation(line: 106, column: 1, scope: !7026)
!7044 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !538, file: !538, line: 307, type: !7045, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{null, !6863, !133}
!7047 = !{!7048, !7049}
!7048 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7044, file: !538, line: 308, type: !6863)
!7049 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7044, file: !538, line: 308, type: !133)
!7050 = !DILocation(line: 0, scope: !7044)
!7051 = !DILocation(line: 310, column: 6, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7044, file: !538, line: 310, column: 6)
!7053 = !DILocation(line: 316, column: 1, scope: !7044)
!7054 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6884, file: !6884, line: 249, type: !7055, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7057)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!107, !6863, !133}
!7057 = !{!7058, !7059, !7060, !7061}
!7058 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7054, file: !6884, line: 250, type: !6863)
!7059 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7054, file: !6884, line: 250, type: !133)
!7060 = !DILocalVariable(name: "mpu_reg_index", scope: !7054, file: !6884, line: 252, type: !107)
!7061 = !DILocalVariable(name: "i", scope: !7062, file: !6884, line: 264, type: !107)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6884, line: 264, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6884, line: 261, column: 32)
!7064 = distinct !DILexicalBlock(scope: !7054, file: !6884, line: 261, column: 6)
!7065 = !DILocation(line: 0, scope: !7054)
!7066 = !DILocation(line: 252, column: 22, scope: !7054)
!7067 = !DILocation(line: 258, column: 18, scope: !7054)
!7068 = !DILocation(line: 261, column: 20, scope: !7064)
!7069 = !DILocation(line: 261, column: 6, scope: !7054)
!7070 = !DILocation(line: 0, scope: !7062)
!7071 = !DILocation(line: 265, column: 4, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6884, line: 264, column: 59)
!7073 = distinct !DILexicalBlock(scope: !7062, file: !6884, line: 264, column: 3)
!7074 = !DILocation(line: 264, column: 55, scope: !7073)
!7075 = !DILocation(line: 264, column: 33, scope: !7073)
!7076 = !DILocation(line: 264, column: 3, scope: !7062)
!7077 = distinct !{!7077, !7076, !7078}
!7078 = !DILocation(line: 266, column: 3, scope: !7062)
!7079 = !DILocation(line: 269, column: 2, scope: !7054)
!7080 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7081, file: !7081, line: 218, type: !5891, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7082)
!7081 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7082 = !{!7083}
!7083 = !DILocalVariable(name: "rnr", arg: 1, scope: !7080, file: !7081, line: 218, type: !162)
!7084 = !DILocation(line: 0, scope: !7080)
!7085 = !DILocation(line: 220, column: 12, scope: !7080)
!7086 = !DILocation(line: 221, column: 13, scope: !7080)
!7087 = !DILocation(line: 222, column: 1, scope: !7080)
!7088 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !538, file: !538, line: 326, type: !7089, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !505, retainedNodes: !7091)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!107}
!7091 = !{!7092}
!7092 = !DILocalVariable(name: "r_index", scope: !7088, file: !538, line: 328, type: !162)
!7093 = !DILocation(line: 330, column: 17, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7088, file: !538, line: 330, column: 6)
!7095 = !DILocation(line: 330, column: 29, scope: !7094)
!7096 = !DILocation(line: 330, column: 6, scope: !7088)
!7097 = !DILocation(line: 347, column: 2, scope: !7088)
!7098 = !DILocation(line: 0, scope: !7088)
!7099 = !DILocation(line: 364, column: 29, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !538, line: 364, column: 2)
!7101 = distinct !DILexicalBlock(scope: !7088, file: !538, line: 364, column: 2)
!7102 = !DILocation(line: 364, column: 2, scope: !7101)
!7103 = !DILocation(line: 365, column: 25, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7100, file: !538, line: 364, column: 66)
!7105 = !DILocation(line: 365, column: 3, scope: !7104)
!7106 = !DILocation(line: 364, column: 62, scope: !7100)
!7107 = distinct !{!7107, !7102, !7108}
!7108 = !DILocation(line: 366, column: 2, scope: !7101)
!7109 = !DILocation(line: 369, column: 23, scope: !7088)
!7110 = !DILocation(line: 369, column: 21, scope: !7088)
!7111 = !DILocation(line: 372, column: 2, scope: !7088)
!7112 = !DILocation(line: 443, column: 2, scope: !7088)
!7113 = !DILocation(line: 444, column: 1, scope: !7088)
!7114 = distinct !DISubprogram(name: "strcpy", scope: !7115, file: !7115, line: 20, type: !7116, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7120)
!7115 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7116 = !DISubroutineType(types: !7117)
!7117 = !{!256, !7118, !7119}
!7118 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7119 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7120 = !{!7121, !7122, !7123}
!7121 = !DILocalVariable(name: "d", arg: 1, scope: !7114, file: !7115, line: 20, type: !7118)
!7122 = !DILocalVariable(name: "s", arg: 2, scope: !7114, file: !7115, line: 20, type: !7119)
!7123 = !DILocalVariable(name: "dest", scope: !7114, file: !7115, line: 22, type: !256)
!7124 = !DILocation(line: 0, scope: !7114)
!7125 = !DILocation(line: 24, column: 9, scope: !7114)
!7126 = !DILocation(line: 24, column: 12, scope: !7114)
!7127 = !DILocation(line: 24, column: 2, scope: !7114)
!7128 = !DILocation(line: 25, column: 6, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7114, file: !7115, line: 24, column: 21)
!7130 = !DILocation(line: 26, column: 4, scope: !7129)
!7131 = !DILocation(line: 27, column: 4, scope: !7129)
!7132 = distinct !{!7132, !7127, !7133}
!7133 = !DILocation(line: 28, column: 2, scope: !7114)
!7134 = !DILocation(line: 30, column: 5, scope: !7114)
!7135 = !DILocation(line: 32, column: 2, scope: !7114)
!7136 = distinct !DISubprogram(name: "strncpy", scope: !7115, file: !7115, line: 42, type: !7137, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7139)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!256, !7118, !7119, !252}
!7139 = !{!7140, !7141, !7142, !7143}
!7140 = !DILocalVariable(name: "d", arg: 1, scope: !7136, file: !7115, line: 42, type: !7118)
!7141 = !DILocalVariable(name: "s", arg: 2, scope: !7136, file: !7115, line: 42, type: !7119)
!7142 = !DILocalVariable(name: "n", arg: 3, scope: !7136, file: !7115, line: 42, type: !252)
!7143 = !DILocalVariable(name: "dest", scope: !7136, file: !7115, line: 44, type: !256)
!7144 = !DILocation(line: 0, scope: !7136)
!7145 = !DILocation(line: 46, column: 12, scope: !7136)
!7146 = !DILocation(line: 46, column: 17, scope: !7136)
!7147 = !DILocation(line: 46, column: 20, scope: !7136)
!7148 = !DILocation(line: 46, column: 23, scope: !7136)
!7149 = !DILocation(line: 46, column: 2, scope: !7136)
!7150 = !DILocation(line: 47, column: 6, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7136, file: !7115, line: 46, column: 32)
!7152 = !DILocation(line: 48, column: 4, scope: !7151)
!7153 = !DILocation(line: 49, column: 4, scope: !7151)
!7154 = !DILocation(line: 50, column: 4, scope: !7151)
!7155 = distinct !{!7155, !7149, !7156}
!7156 = !DILocation(line: 51, column: 2, scope: !7136)
!7157 = !DILocation(line: 54, column: 6, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7136, file: !7115, line: 53, column: 16)
!7159 = !DILocation(line: 55, column: 4, scope: !7158)
!7160 = !DILocation(line: 56, column: 4, scope: !7158)
!7161 = !DILocation(line: 53, column: 11, scope: !7136)
!7162 = !DILocation(line: 53, column: 2, scope: !7136)
!7163 = distinct !{!7163, !7162, !7164}
!7164 = !DILocation(line: 57, column: 2, scope: !7136)
!7165 = !DILocation(line: 59, column: 2, scope: !7136)
!7166 = distinct !DISubprogram(name: "strchr", scope: !7115, file: !7115, line: 69, type: !7167, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7169)
!7167 = !DISubroutineType(types: !7168)
!7168 = !{!256, !123, !107}
!7169 = !{!7170, !7171, !7172}
!7170 = !DILocalVariable(name: "s", arg: 1, scope: !7166, file: !7115, line: 69, type: !123)
!7171 = !DILocalVariable(name: "c", arg: 2, scope: !7166, file: !7115, line: 69, type: !107)
!7172 = !DILocalVariable(name: "tmp", scope: !7166, file: !7115, line: 71, type: !125)
!7173 = !DILocation(line: 0, scope: !7166)
!7174 = !DILocation(line: 73, column: 2, scope: !7166)
!7175 = !DILocation(line: 73, column: 10, scope: !7166)
!7176 = !DILocation(line: 73, column: 13, scope: !7166)
!7177 = !DILocation(line: 73, column: 21, scope: !7166)
!7178 = !DILocation(line: 74, column: 4, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7166, file: !7115, line: 73, column: 38)
!7180 = distinct !{!7180, !7174, !7181}
!7181 = !DILocation(line: 75, column: 2, scope: !7166)
!7182 = !DILocation(line: 77, column: 9, scope: !7166)
!7183 = !DILocation(line: 77, column: 2, scope: !7166)
!7184 = distinct !DISubprogram(name: "strrchr", scope: !7115, file: !7115, line: 87, type: !7167, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7185)
!7185 = !{!7186, !7187, !7188}
!7186 = !DILocalVariable(name: "s", arg: 1, scope: !7184, file: !7115, line: 87, type: !123)
!7187 = !DILocalVariable(name: "c", arg: 2, scope: !7184, file: !7115, line: 87, type: !107)
!7188 = !DILocalVariable(name: "match", scope: !7184, file: !7115, line: 89, type: !256)
!7189 = !DILocation(line: 0, scope: !7184)
!7190 = !DILocation(line: 91, column: 2, scope: !7184)
!7191 = !DILocation(line: 92, column: 7, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !7115, line: 92, column: 7)
!7193 = distinct !DILexicalBlock(scope: !7184, file: !7115, line: 91, column: 5)
!7194 = !DILocation(line: 92, column: 10, scope: !7192)
!7195 = !DILocation(line: 92, column: 7, scope: !7193)
!7196 = !DILocation(line: 95, column: 13, scope: !7184)
!7197 = !DILocation(line: 95, column: 2, scope: !7193)
!7198 = distinct !{!7198, !7190, !7199}
!7199 = !DILocation(line: 95, column: 15, scope: !7184)
!7200 = !DILocation(line: 97, column: 2, scope: !7184)
!7201 = distinct !DISubprogram(name: "strlen", scope: !7115, file: !7115, line: 107, type: !7202, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7204)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{!252, !123}
!7204 = !{!7205, !7206}
!7205 = !DILocalVariable(name: "s", arg: 1, scope: !7201, file: !7115, line: 107, type: !123)
!7206 = !DILocalVariable(name: "n", scope: !7201, file: !7115, line: 109, type: !252)
!7207 = !DILocation(line: 0, scope: !7201)
!7208 = !DILocation(line: 111, column: 9, scope: !7201)
!7209 = !DILocation(line: 111, column: 12, scope: !7201)
!7210 = !DILocation(line: 111, column: 2, scope: !7201)
!7211 = !DILocation(line: 112, column: 4, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7201, file: !7115, line: 111, column: 21)
!7213 = !DILocation(line: 113, column: 4, scope: !7212)
!7214 = distinct !{!7214, !7210, !7215}
!7215 = !DILocation(line: 114, column: 2, scope: !7201)
!7216 = !DILocation(line: 116, column: 2, scope: !7201)
!7217 = distinct !DISubprogram(name: "strnlen", scope: !7115, file: !7115, line: 126, type: !7218, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7220)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{!252, !123, !252}
!7220 = !{!7221, !7222, !7223}
!7221 = !DILocalVariable(name: "s", arg: 1, scope: !7217, file: !7115, line: 126, type: !123)
!7222 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7217, file: !7115, line: 126, type: !252)
!7223 = !DILocalVariable(name: "n", scope: !7217, file: !7115, line: 128, type: !252)
!7224 = !DILocation(line: 0, scope: !7217)
!7225 = !DILocation(line: 130, column: 9, scope: !7217)
!7226 = !DILocation(line: 130, column: 12, scope: !7217)
!7227 = !DILocation(line: 130, column: 20, scope: !7217)
!7228 = !DILocation(line: 130, column: 2, scope: !7217)
!7229 = !DILocation(line: 131, column: 4, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7217, file: !7115, line: 130, column: 35)
!7231 = !DILocation(line: 132, column: 4, scope: !7230)
!7232 = distinct !{!7232, !7228, !7233}
!7233 = !DILocation(line: 133, column: 2, scope: !7217)
!7234 = !DILocation(line: 135, column: 2, scope: !7217)
!7235 = distinct !DISubprogram(name: "strcmp", scope: !7115, file: !7115, line: 145, type: !7236, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!107, !123, !123}
!7238 = !{!7239, !7240}
!7239 = !DILocalVariable(name: "s1", arg: 1, scope: !7235, file: !7115, line: 145, type: !123)
!7240 = !DILocalVariable(name: "s2", arg: 2, scope: !7235, file: !7115, line: 145, type: !123)
!7241 = !DILocation(line: 0, scope: !7235)
!7242 = !DILocation(line: 147, column: 10, scope: !7235)
!7243 = !DILocation(line: 147, column: 17, scope: !7235)
!7244 = !DILocation(line: 147, column: 14, scope: !7235)
!7245 = !DILocation(line: 147, column: 22, scope: !7235)
!7246 = !DILocation(line: 148, column: 5, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7235, file: !7115, line: 147, column: 40)
!7248 = !DILocation(line: 149, column: 5, scope: !7247)
!7249 = distinct !{!7249, !7250, !7251}
!7250 = !DILocation(line: 147, column: 2, scope: !7235)
!7251 = !DILocation(line: 150, column: 2, scope: !7235)
!7252 = !DILocation(line: 152, column: 9, scope: !7235)
!7253 = !DILocation(line: 152, column: 15, scope: !7235)
!7254 = !DILocation(line: 152, column: 13, scope: !7235)
!7255 = !DILocation(line: 152, column: 2, scope: !7235)
!7256 = distinct !DISubprogram(name: "strncmp", scope: !7115, file: !7115, line: 162, type: !7257, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7259)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!107, !123, !123, !252}
!7259 = !{!7260, !7261, !7262}
!7260 = !DILocalVariable(name: "s1", arg: 1, scope: !7256, file: !7115, line: 162, type: !123)
!7261 = !DILocalVariable(name: "s2", arg: 2, scope: !7256, file: !7115, line: 162, type: !123)
!7262 = !DILocalVariable(name: "n", arg: 3, scope: !7256, file: !7115, line: 162, type: !252)
!7263 = !DILocation(line: 0, scope: !7256)
!7264 = !DILocation(line: 164, column: 17, scope: !7256)
!7265 = !DILocation(line: 164, column: 21, scope: !7256)
!7266 = !DILocation(line: 164, column: 28, scope: !7256)
!7267 = !DILocation(line: 164, column: 25, scope: !7256)
!7268 = !DILocation(line: 164, column: 33, scope: !7256)
!7269 = !DILocation(line: 165, column: 5, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7256, file: !7115, line: 164, column: 51)
!7271 = !DILocation(line: 166, column: 5, scope: !7270)
!7272 = !DILocation(line: 167, column: 4, scope: !7270)
!7273 = distinct !{!7273, !7274, !7275}
!7274 = !DILocation(line: 164, column: 2, scope: !7256)
!7275 = !DILocation(line: 168, column: 2, scope: !7256)
!7276 = !DILocation(line: 170, column: 25, scope: !7256)
!7277 = !DILocation(line: 170, column: 31, scope: !7256)
!7278 = !DILocation(line: 170, column: 29, scope: !7256)
!7279 = !DILocation(line: 170, column: 9, scope: !7256)
!7280 = !DILocation(line: 170, column: 2, scope: !7256)
!7281 = distinct !DISubprogram(name: "strtok_r", scope: !7115, file: !7115, line: 180, type: !7282, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7285)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!256, !256, !123, !7284}
!7284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7285 = !{!7286, !7287, !7288, !7289, !7290}
!7286 = !DILocalVariable(name: "str", arg: 1, scope: !7281, file: !7115, line: 180, type: !256)
!7287 = !DILocalVariable(name: "sep", arg: 2, scope: !7281, file: !7115, line: 180, type: !123)
!7288 = !DILocalVariable(name: "state", arg: 3, scope: !7281, file: !7115, line: 180, type: !7284)
!7289 = !DILocalVariable(name: "start", scope: !7281, file: !7115, line: 182, type: !256)
!7290 = !DILocalVariable(name: "end", scope: !7281, file: !7115, line: 182, type: !256)
!7291 = !DILocation(line: 0, scope: !7281)
!7292 = !DILocation(line: 184, column: 10, scope: !7281)
!7293 = !DILocation(line: 184, column: 22, scope: !7281)
!7294 = !DILocation(line: 187, column: 9, scope: !7281)
!7295 = !DILocation(line: 187, column: 16, scope: !7281)
!7296 = !DILocation(line: 187, column: 19, scope: !7281)
!7297 = !DILocation(line: 187, column: 2, scope: !7281)
!7298 = !DILocation(line: 188, column: 8, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7281, file: !7115, line: 187, column: 40)
!7300 = distinct !{!7300, !7297, !7301}
!7301 = !DILocation(line: 189, column: 2, scope: !7281)
!7302 = !DILocation(line: 198, column: 9, scope: !7281)
!7303 = !DILocation(line: 198, column: 18, scope: !7281)
!7304 = !DILocation(line: 198, column: 17, scope: !7281)
!7305 = !DILocation(line: 198, column: 2, scope: !7281)
!7306 = !DILocation(line: 199, column: 6, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7281, file: !7115, line: 198, column: 37)
!7308 = !DILocation(line: 198, column: 14, scope: !7281)
!7309 = distinct !{!7309, !7305, !7310}
!7310 = !DILocation(line: 200, column: 2, scope: !7281)
!7311 = !DILocation(line: 203, column: 8, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !7115, line: 202, column: 20)
!7313 = distinct !DILexicalBlock(scope: !7281, file: !7115, line: 202, column: 6)
!7314 = !DILocation(line: 204, column: 16, scope: !7312)
!7315 = !DILocation(line: 205, column: 2, scope: !7312)
!7316 = !DILocation(line: 210, column: 1, scope: !7281)
!7317 = distinct !DISubprogram(name: "strcat", scope: !7115, file: !7115, line: 212, type: !7116, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7318)
!7318 = !{!7319, !7320}
!7319 = !DILocalVariable(name: "dest", arg: 1, scope: !7317, file: !7115, line: 212, type: !7118)
!7320 = !DILocalVariable(name: "src", arg: 2, scope: !7317, file: !7115, line: 212, type: !7119)
!7321 = !DILocation(line: 0, scope: !7317)
!7322 = !DILocation(line: 214, column: 16, scope: !7317)
!7323 = !DILocation(line: 214, column: 14, scope: !7317)
!7324 = !DILocation(line: 214, column: 2, scope: !7317)
!7325 = !DILocation(line: 215, column: 2, scope: !7317)
!7326 = distinct !DISubprogram(name: "strncat", scope: !7115, file: !7115, line: 218, type: !7137, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7327)
!7327 = !{!7328, !7329, !7330, !7331, !7332}
!7328 = !DILocalVariable(name: "dest", arg: 1, scope: !7326, file: !7115, line: 218, type: !7118)
!7329 = !DILocalVariable(name: "src", arg: 2, scope: !7326, file: !7115, line: 218, type: !7119)
!7330 = !DILocalVariable(name: "n", arg: 3, scope: !7326, file: !7115, line: 219, type: !252)
!7331 = !DILocalVariable(name: "orig_dest", scope: !7326, file: !7115, line: 221, type: !256)
!7332 = !DILocalVariable(name: "len", scope: !7326, file: !7115, line: 222, type: !252)
!7333 = !DILocation(line: 0, scope: !7326)
!7334 = !DILocation(line: 222, column: 15, scope: !7326)
!7335 = !DILocation(line: 224, column: 7, scope: !7326)
!7336 = !DILocation(line: 225, column: 14, scope: !7326)
!7337 = !DILocation(line: 225, column: 19, scope: !7326)
!7338 = !DILocation(line: 225, column: 11, scope: !7326)
!7339 = !DILocation(line: 225, column: 23, scope: !7326)
!7340 = !DILocation(line: 225, column: 28, scope: !7326)
!7341 = !DILocation(line: 225, column: 2, scope: !7326)
!7342 = !DILocation(line: 226, column: 17, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7326, file: !7115, line: 225, column: 38)
!7344 = !DILocation(line: 226, column: 8, scope: !7343)
!7345 = !DILocation(line: 226, column: 11, scope: !7343)
!7346 = distinct !{!7346, !7341, !7347}
!7347 = !DILocation(line: 227, column: 2, scope: !7326)
!7348 = !DILocation(line: 228, column: 8, scope: !7326)
!7349 = !DILocation(line: 230, column: 2, scope: !7326)
!7350 = distinct !DISubprogram(name: "memcmp", scope: !7115, file: !7115, line: 239, type: !7351, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7353)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!107, !13, !13, !252}
!7353 = !{!7354, !7355, !7356, !7357, !7358}
!7354 = !DILocalVariable(name: "m1", arg: 1, scope: !7350, file: !7115, line: 239, type: !13)
!7355 = !DILocalVariable(name: "m2", arg: 2, scope: !7350, file: !7115, line: 239, type: !13)
!7356 = !DILocalVariable(name: "n", arg: 3, scope: !7350, file: !7115, line: 239, type: !252)
!7357 = !DILocalVariable(name: "c1", scope: !7350, file: !7115, line: 241, type: !123)
!7358 = !DILocalVariable(name: "c2", scope: !7350, file: !7115, line: 242, type: !123)
!7359 = !DILocation(line: 0, scope: !7350)
!7360 = !DILocation(line: 244, column: 7, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7350, file: !7115, line: 244, column: 6)
!7362 = !DILocation(line: 244, column: 6, scope: !7350)
!7363 = !DILocation(line: 248, column: 10, scope: !7350)
!7364 = !DILocation(line: 248, column: 14, scope: !7350)
!7365 = !DILocation(line: 248, column: 19, scope: !7350)
!7366 = !DILocation(line: 248, column: 2, scope: !7350)
!7367 = !DILocation(line: 248, column: 23, scope: !7350)
!7368 = !DILocation(line: 248, column: 30, scope: !7350)
!7369 = !DILocation(line: 248, column: 27, scope: !7350)
!7370 = !DILocation(line: 249, column: 5, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7350, file: !7115, line: 248, column: 36)
!7372 = !DILocation(line: 250, column: 5, scope: !7371)
!7373 = distinct !{!7373, !7366, !7374}
!7374 = !DILocation(line: 251, column: 2, scope: !7350)
!7375 = !DILocation(line: 253, column: 9, scope: !7350)
!7376 = !DILocation(line: 253, column: 15, scope: !7350)
!7377 = !DILocation(line: 253, column: 13, scope: !7350)
!7378 = !DILocation(line: 253, column: 2, scope: !7350)
!7379 = !DILocation(line: 254, column: 1, scope: !7350)
!7380 = distinct !DISubprogram(name: "memmove", scope: !7115, file: !7115, line: 263, type: !7381, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!102, !102, !13, !252}
!7383 = !{!7384, !7385, !7386, !7387, !7388}
!7384 = !DILocalVariable(name: "d", arg: 1, scope: !7380, file: !7115, line: 263, type: !102)
!7385 = !DILocalVariable(name: "s", arg: 2, scope: !7380, file: !7115, line: 263, type: !13)
!7386 = !DILocalVariable(name: "n", arg: 3, scope: !7380, file: !7115, line: 263, type: !252)
!7387 = !DILocalVariable(name: "dest", scope: !7380, file: !7115, line: 265, type: !256)
!7388 = !DILocalVariable(name: "src", scope: !7380, file: !7115, line: 266, type: !123)
!7389 = !DILocation(line: 0, scope: !7380)
!7390 = !DILocation(line: 268, column: 21, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7380, file: !7115, line: 268, column: 6)
!7392 = !DILocation(line: 268, column: 28, scope: !7391)
!7393 = !DILocation(line: 268, column: 6, scope: !7380)
!7394 = !DILocation(line: 280, column: 12, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !7115, line: 278, column: 9)
!7396 = !DILocation(line: 280, column: 3, scope: !7395)
!7397 = !DILocation(line: 275, column: 5, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !7115, line: 274, column: 17)
!7399 = distinct !DILexicalBlock(scope: !7391, file: !7115, line: 268, column: 33)
!7400 = !DILocation(line: 276, column: 14, scope: !7398)
!7401 = !DILocation(line: 276, column: 4, scope: !7398)
!7402 = !DILocation(line: 276, column: 12, scope: !7398)
!7403 = !DILocation(line: 274, column: 12, scope: !7399)
!7404 = !DILocation(line: 274, column: 3, scope: !7399)
!7405 = distinct !{!7405, !7404, !7406}
!7406 = !DILocation(line: 277, column: 3, scope: !7399)
!7407 = !DILocation(line: 281, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7395, file: !7115, line: 280, column: 17)
!7409 = !DILocation(line: 281, column: 10, scope: !7408)
!7410 = !DILocation(line: 282, column: 8, scope: !7408)
!7411 = !DILocation(line: 283, column: 7, scope: !7408)
!7412 = !DILocation(line: 284, column: 5, scope: !7408)
!7413 = distinct !{!7413, !7396, !7414}
!7414 = !DILocation(line: 285, column: 3, scope: !7395)
!7415 = !DILocation(line: 288, column: 2, scope: !7380)
!7416 = distinct !DISubprogram(name: "memcpy", scope: !7115, file: !7115, line: 298, type: !7417, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7421)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{!102, !7419, !7420, !252}
!7419 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7421 = !{!7422, !7423, !7424, !7425, !7426}
!7422 = !DILocalVariable(name: "d", arg: 1, scope: !7416, file: !7115, line: 298, type: !7419)
!7423 = !DILocalVariable(name: "s", arg: 2, scope: !7416, file: !7115, line: 298, type: !7420)
!7424 = !DILocalVariable(name: "n", arg: 3, scope: !7416, file: !7115, line: 298, type: !252)
!7425 = !DILocalVariable(name: "d_byte", scope: !7416, file: !7115, line: 302, type: !144)
!7426 = !DILocalVariable(name: "s_byte", scope: !7416, file: !7115, line: 303, type: !2818)
!7427 = !DILocation(line: 0, scope: !7416)
!7428 = !DILocation(line: 337, column: 11, scope: !7416)
!7429 = !DILocation(line: 337, column: 2, scope: !7416)
!7430 = !DILocation(line: 338, column: 25, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7416, file: !7115, line: 337, column: 16)
!7432 = !DILocation(line: 338, column: 17, scope: !7431)
!7433 = !DILocation(line: 338, column: 11, scope: !7431)
!7434 = !DILocation(line: 338, column: 15, scope: !7431)
!7435 = !DILocation(line: 339, column: 4, scope: !7431)
!7436 = distinct !{!7436, !7429, !7437}
!7437 = !DILocation(line: 340, column: 2, scope: !7416)
!7438 = !DILocation(line: 342, column: 2, scope: !7416)
!7439 = distinct !DISubprogram(name: "memset", scope: !7115, file: !7115, line: 352, type: !7440, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7442)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!102, !102, !107, !252}
!7442 = !{!7443, !7444, !7445, !7446, !7447}
!7443 = !DILocalVariable(name: "buf", arg: 1, scope: !7439, file: !7115, line: 352, type: !102)
!7444 = !DILocalVariable(name: "c", arg: 2, scope: !7439, file: !7115, line: 352, type: !107)
!7445 = !DILocalVariable(name: "n", arg: 3, scope: !7439, file: !7115, line: 352, type: !252)
!7446 = !DILocalVariable(name: "d_byte", scope: !7439, file: !7115, line: 356, type: !144)
!7447 = !DILocalVariable(name: "c_byte", scope: !7439, file: !7115, line: 357, type: !134)
!7448 = !DILocation(line: 0, scope: !7439)
!7449 = !DILocation(line: 357, column: 25, scope: !7439)
!7450 = !DILocation(line: 389, column: 11, scope: !7439)
!7451 = !DILocation(line: 389, column: 2, scope: !7439)
!7452 = !DILocation(line: 390, column: 11, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7439, file: !7115, line: 389, column: 16)
!7454 = !DILocation(line: 390, column: 15, scope: !7453)
!7455 = !DILocation(line: 391, column: 4, scope: !7453)
!7456 = distinct !{!7456, !7451, !7457}
!7457 = !DILocation(line: 392, column: 2, scope: !7439)
!7458 = !DILocation(line: 394, column: 2, scope: !7439)
!7459 = distinct !DISubprogram(name: "memchr", scope: !7115, file: !7115, line: 404, type: !7460, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !7462)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{!102, !13, !107, !252}
!7462 = !{!7463, !7464, !7465, !7466}
!7463 = !DILocalVariable(name: "s", arg: 1, scope: !7459, file: !7115, line: 404, type: !13)
!7464 = !DILocalVariable(name: "c", arg: 2, scope: !7459, file: !7115, line: 404, type: !107)
!7465 = !DILocalVariable(name: "n", arg: 3, scope: !7459, file: !7115, line: 404, type: !252)
!7466 = !DILocalVariable(name: "p", scope: !7467, file: !7115, line: 407, type: !2818)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !7115, line: 406, column: 14)
!7468 = distinct !DILexicalBlock(scope: !7459, file: !7115, line: 406, column: 6)
!7469 = !DILocation(line: 0, scope: !7459)
!7470 = !DILocation(line: 406, column: 8, scope: !7468)
!7471 = !DILocation(line: 406, column: 6, scope: !7459)
!7472 = !DILocation(line: 409, column: 3, scope: !7467)
!7473 = !DILocation(line: 0, scope: !7467)
!7474 = !DILocation(line: 410, column: 8, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7115, line: 410, column: 8)
!7476 = distinct !DILexicalBlock(scope: !7467, file: !7115, line: 409, column: 6)
!7477 = !DILocation(line: 410, column: 13, scope: !7475)
!7478 = !DILocation(line: 410, column: 8, scope: !7476)
!7479 = distinct !{!7479, !7472, !7480}
!7480 = !DILocation(line: 414, column: 20, scope: !7467)
!7481 = !DILocation(line: 417, column: 2, scope: !7459)
!7482 = !DILocation(line: 418, column: 1, scope: !7459)
!7483 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !548, file: !548, line: 23, type: !3467, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7484)
!7484 = !{!7485}
!7485 = !DILocalVariable(name: "hook", arg: 1, scope: !7483, file: !548, line: 23, type: !269)
!7486 = !DILocation(line: 0, scope: !7483)
!7487 = !DILocation(line: 25, column: 15, scope: !7483)
!7488 = !DILocation(line: 26, column: 1, scope: !7483)
!7489 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !548, file: !548, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7490)
!7490 = !{!7491}
!7491 = !DILocalVariable(name: "c", arg: 1, scope: !7489, file: !548, line: 14, type: !107)
!7492 = !DILocation(line: 0, scope: !7489)
!7493 = !DILocation(line: 18, column: 2, scope: !7489)
!7494 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !548, file: !548, line: 28, type: !7495, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7497)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{!107, !107, !544}
!7497 = !{!7498, !7499}
!7498 = !DILocalVariable(name: "c", arg: 1, scope: !7494, file: !548, line: 28, type: !107)
!7499 = !DILocalVariable(name: "stream", arg: 2, scope: !7494, file: !548, line: 28, type: !544)
!7500 = !DILocation(line: 0, scope: !7494)
!7501 = !DILocation(line: 30, column: 27, scope: !7494)
!7502 = !DILocation(line: 30, column: 50, scope: !7494)
!7503 = !DILocation(line: 30, column: 9, scope: !7494)
!7504 = !DILocation(line: 30, column: 2, scope: !7494)
!7505 = distinct !DISubprogram(name: "fputc", scope: !548, file: !548, line: 41, type: !7495, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7506)
!7506 = !{!7507, !7508}
!7507 = !DILocalVariable(name: "c", arg: 1, scope: !7505, file: !548, line: 41, type: !107)
!7508 = !DILocalVariable(name: "stream", arg: 2, scope: !7505, file: !548, line: 41, type: !544)
!7509 = !DILocation(line: 0, scope: !7505)
!7510 = !DILocation(line: 43, column: 9, scope: !7505)
!7511 = !DILocation(line: 43, column: 2, scope: !7505)
!7512 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7513, file: !7513, line: 72, type: !7495, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7514)
!7513 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!7514 = !{!7515, !7516}
!7515 = !DILocalVariable(name: "c", arg: 1, scope: !7512, file: !7513, line: 72, type: !107)
!7516 = !DILocalVariable(name: "stream", arg: 2, scope: !7512, file: !7513, line: 72, type: !544)
!7517 = !DILocation(line: 0, scope: !7512)
!7518 = !DILocation(line: 81, column: 2, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7512, file: !7513, line: 81, column: 2)
!7520 = !{i64 2152277902}
!7521 = !DILocation(line: 82, column: 9, scope: !7512)
!7522 = !DILocation(line: 82, column: 2, scope: !7512)
!7523 = distinct !DISubprogram(name: "fputs", scope: !548, file: !548, line: 46, type: !7524, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7527)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!107, !7119, !7526}
!7526 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !544)
!7527 = !{!7528, !7529, !7530, !7531}
!7528 = !DILocalVariable(name: "s", arg: 1, scope: !7523, file: !548, line: 46, type: !7119)
!7529 = !DILocalVariable(name: "stream", arg: 2, scope: !7523, file: !548, line: 46, type: !7526)
!7530 = !DILocalVariable(name: "len", scope: !7523, file: !548, line: 48, type: !107)
!7531 = !DILocalVariable(name: "ret", scope: !7523, file: !548, line: 49, type: !107)
!7532 = !DILocation(line: 0, scope: !7523)
!7533 = !DILocation(line: 48, column: 12, scope: !7523)
!7534 = !DILocation(line: 51, column: 8, scope: !7523)
!7535 = !DILocation(line: 53, column: 13, scope: !7523)
!7536 = !DILocation(line: 53, column: 9, scope: !7523)
!7537 = !DILocation(line: 53, column: 2, scope: !7523)
!7538 = distinct !DISubprogram(name: "fwrite", scope: !548, file: !548, line: 99, type: !7539, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7541)
!7539 = !DISubroutineType(types: !7540)
!7540 = !{!252, !7420, !252, !252, !7526}
!7541 = !{!7542, !7543, !7544, !7545}
!7542 = !DILocalVariable(name: "ptr", arg: 1, scope: !7538, file: !548, line: 99, type: !7420)
!7543 = !DILocalVariable(name: "size", arg: 2, scope: !7538, file: !548, line: 99, type: !252)
!7544 = !DILocalVariable(name: "nitems", arg: 3, scope: !7538, file: !548, line: 99, type: !252)
!7545 = !DILocalVariable(name: "stream", arg: 4, scope: !7538, file: !548, line: 100, type: !7526)
!7546 = !DILocation(line: 0, scope: !7538)
!7547 = !DILocation(line: 102, column: 9, scope: !7538)
!7548 = !DILocation(line: 102, column: 2, scope: !7538)
!7549 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7513, file: !7513, line: 96, type: !7539, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7550)
!7550 = !{!7551, !7552, !7553, !7554}
!7551 = !DILocalVariable(name: "ptr", arg: 1, scope: !7549, file: !7513, line: 96, type: !7420)
!7552 = !DILocalVariable(name: "size", arg: 2, scope: !7549, file: !7513, line: 96, type: !252)
!7553 = !DILocalVariable(name: "nitems", arg: 3, scope: !7549, file: !7513, line: 96, type: !252)
!7554 = !DILocalVariable(name: "stream", arg: 4, scope: !7549, file: !7513, line: 96, type: !7526)
!7555 = !DILocation(line: 0, scope: !7549)
!7556 = !DILocation(line: 107, column: 2, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7549, file: !7513, line: 107, column: 2)
!7558 = !{i64 2152278006}
!7559 = !DILocation(line: 108, column: 9, scope: !7549)
!7560 = !DILocation(line: 108, column: 2, scope: !7549)
!7561 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !548, file: !548, line: 56, type: !7539, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7562)
!7562 = !{!7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570}
!7563 = !DILocalVariable(name: "ptr", arg: 1, scope: !7561, file: !548, line: 56, type: !7420)
!7564 = !DILocalVariable(name: "size", arg: 2, scope: !7561, file: !548, line: 56, type: !252)
!7565 = !DILocalVariable(name: "nitems", arg: 3, scope: !7561, file: !548, line: 57, type: !252)
!7566 = !DILocalVariable(name: "stream", arg: 4, scope: !7561, file: !548, line: 57, type: !7526)
!7567 = !DILocalVariable(name: "i", scope: !7561, file: !548, line: 59, type: !252)
!7568 = !DILocalVariable(name: "j", scope: !7561, file: !548, line: 60, type: !252)
!7569 = !DILocalVariable(name: "p", scope: !7561, file: !548, line: 61, type: !2818)
!7570 = !DILabel(scope: !7561, name: "done", file: !548, line: 82)
!7571 = !DILocation(line: 0, scope: !7561)
!7572 = !DILocation(line: 63, column: 14, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7561, file: !548, line: 63, column: 6)
!7574 = !DILocation(line: 63, column: 24, scope: !7573)
!7575 = !DILocation(line: 72, column: 3, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7561, file: !548, line: 70, column: 5)
!7577 = !DILocation(line: 0, scope: !7576)
!7578 = !DILocation(line: 73, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !548, line: 73, column: 8)
!7580 = distinct !DILexicalBlock(scope: !7576, file: !548, line: 72, column: 6)
!7581 = !DILocation(line: 73, column: 29, scope: !7579)
!7582 = !DILocation(line: 73, column: 27, scope: !7579)
!7583 = !DILocation(line: 73, column: 21, scope: !7579)
!7584 = !DILocation(line: 73, column: 33, scope: !7579)
!7585 = !DILocation(line: 73, column: 8, scope: !7580)
!7586 = !DILocation(line: 76, column: 5, scope: !7580)
!7587 = !DILocation(line: 77, column: 14, scope: !7576)
!7588 = !DILocation(line: 77, column: 3, scope: !7580)
!7589 = distinct !{!7589, !7575, !7590}
!7590 = !DILocation(line: 77, column: 17, scope: !7576)
!7591 = !DILocation(line: 79, column: 4, scope: !7576)
!7592 = !DILocation(line: 80, column: 13, scope: !7561)
!7593 = !DILocation(line: 80, column: 2, scope: !7576)
!7594 = distinct !{!7594, !7595, !7596}
!7595 = !DILocation(line: 70, column: 2, scope: !7561)
!7596 = !DILocation(line: 80, column: 16, scope: !7561)
!7597 = !DILocation(line: 82, column: 1, scope: !7561)
!7598 = !DILocation(line: 83, column: 17, scope: !7561)
!7599 = !DILocation(line: 83, column: 2, scope: !7561)
!7600 = !DILocation(line: 84, column: 1, scope: !7561)
!7601 = distinct !DISubprogram(name: "puts", scope: !548, file: !548, line: 106, type: !7602, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !7604)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!107, !123}
!7604 = !{!7605}
!7605 = !DILocalVariable(name: "s", arg: 1, scope: !7601, file: !548, line: 106, type: !123)
!7606 = !DILocation(line: 0, scope: !7601)
!7607 = !DILocation(line: 108, column: 6, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7601, file: !548, line: 108, column: 6)
!7609 = !DILocation(line: 108, column: 23, scope: !7608)
!7610 = !DILocation(line: 108, column: 6, scope: !7601)
!7611 = !DILocation(line: 112, column: 9, scope: !7601)
!7612 = !DILocation(line: 112, column: 29, scope: !7601)
!7613 = !DILocation(line: 112, column: 2, scope: !7601)
!7614 = !DILocation(line: 113, column: 1, scope: !7601)
!7615 = distinct !DISubprogram(name: "rf_init", scope: !673, file: !673, line: 10, type: !679, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7616)
!7616 = !{!7617, !7618, !7626, !7627}
!7617 = !DILocalVariable(name: "dev", arg: 1, scope: !7615, file: !673, line: 10, type: !599)
!7618 = !DILocalVariable(name: "rf1", scope: !7615, file: !673, line: 12, type: !7619)
!7619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7620)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !580, line: 271, size: 64, elements: !7621)
!7621 = !{!7622, !7623, !7624}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7620, file: !580, line: 273, baseType: !599, size: 32)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7620, file: !580, line: 275, baseType: !614, size: 8, offset: 32)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !7620, file: !580, line: 277, baseType: !7625, size: 16, offset: 48)
!7625 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !580, line: 249, baseType: !424)
!7626 = !DILocalVariable(name: "rf2", scope: !7615, file: !673, line: 14, type: !7619)
!7627 = !DILocalVariable(name: "rf3", scope: !7615, file: !673, line: 16, type: !7619)
!7628 = !DILocation(line: 0, scope: !7615)
!7629 = !DILocation(line: 12, column: 2, scope: !7615)
!7630 = !DILocation(line: 12, column: 28, scope: !7615)
!7631 = !DILocation(line: 14, column: 2, scope: !7615)
!7632 = !DILocation(line: 14, column: 28, scope: !7615)
!7633 = !DILocation(line: 16, column: 2, scope: !7615)
!7634 = !DILocation(line: 16, column: 28, scope: !7615)
!7635 = !DILocation(line: 22, column: 27, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7615, file: !673, line: 22, column: 6)
!7637 = !DILocation(line: 22, column: 7, scope: !7636)
!7638 = !DILocation(line: 22, column: 33, scope: !7636)
!7639 = !DILocation(line: 23, column: 7, scope: !7636)
!7640 = !DILocation(line: 23, column: 33, scope: !7636)
!7641 = !DILocation(line: 24, column: 7, scope: !7636)
!7642 = !DILocation(line: 22, column: 6, scope: !7615)
!7643 = !DILocation(line: 28, column: 8, scope: !7615)
!7644 = !DILocation(line: 29, column: 8, scope: !7615)
!7645 = !DILocation(line: 30, column: 8, scope: !7615)
!7646 = !DILocation(line: 32, column: 2, scope: !7615)
!7647 = !DILocation(line: 33, column: 1, scope: !7615)
!7648 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !7649, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7651)
!7649 = !DISubroutineType(types: !7650)
!7650 = !{!136, !599}
!7651 = !{!7652}
!7652 = !DILocalVariable(name: "dev", arg: 1, scope: !7648, file: !3390, line: 47, type: !599)
!7653 = !DILocation(line: 0, scope: !7648)
!7654 = !DILocation(line: 55, column: 2, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7648, file: !3390, line: 55, column: 2)
!7656 = !{i64 2148925679}
!7657 = !DILocation(line: 56, column: 9, scope: !7648)
!7658 = !DILocation(line: 56, column: 2, scope: !7648)
!7659 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !580, file: !580, line: 731, type: !7660, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7663)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{!107, !7662, !615}
!7662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7619, size: 32)
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "spec", arg: 1, scope: !7659, file: !580, line: 731, type: !7662)
!7665 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !7659, file: !580, line: 732, type: !615)
!7666 = !DILocation(line: 0, scope: !7659)
!7667 = !DILocation(line: 734, column: 34, scope: !7659)
!7668 = !DILocation(line: 735, column: 13, scope: !7659)
!7669 = !DILocation(line: 736, column: 13, scope: !7659)
!7670 = !DILocation(line: 736, column: 7, scope: !7659)
!7671 = !DILocation(line: 736, column: 22, scope: !7659)
!7672 = !DILocation(line: 734, column: 9, scope: !7659)
!7673 = !DILocation(line: 734, column: 2, scope: !7659)
!7674 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !7675, file: !7675, line: 49, type: !597, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7676)
!7675 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/echo_bot")
!7676 = !{!7677, !7678, !7679}
!7677 = !DILocalVariable(name: "port", arg: 1, scope: !7674, file: !7675, line: 49, type: !599)
!7678 = !DILocalVariable(name: "pin", arg: 2, scope: !7674, file: !7675, line: 49, type: !614)
!7679 = !DILocalVariable(name: "flags", arg: 3, scope: !7674, file: !7675, line: 49, type: !615)
!7680 = !DILocation(line: 0, scope: !7674)
!7681 = !DILocation(line: 59, column: 2, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7674, file: !7675, line: 59, column: 2)
!7683 = !{i64 2148940049}
!7684 = !DILocation(line: 60, column: 9, scope: !7674)
!7685 = !DILocation(line: 60, column: 2, scope: !7674)
!7686 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !580, file: !580, line: 667, type: !597, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7687)
!7687 = !{!7688, !7689, !7690, !7691, !7692, !7694}
!7688 = !DILocalVariable(name: "port", arg: 1, scope: !7686, file: !580, line: 667, type: !599)
!7689 = !DILocalVariable(name: "pin", arg: 2, scope: !7686, file: !580, line: 668, type: !614)
!7690 = !DILocalVariable(name: "flags", arg: 3, scope: !7686, file: !580, line: 669, type: !615)
!7691 = !DILocalVariable(name: "api", scope: !7686, file: !580, line: 671, type: !591)
!7692 = !DILocalVariable(name: "cfg", scope: !7686, file: !580, line: 673, type: !7693)
!7693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!7694 = !DILocalVariable(name: "data", scope: !7686, file: !580, line: 675, type: !671)
!7695 = !DILocation(line: 0, scope: !7686)
!7696 = !DILocation(line: 672, column: 41, scope: !7686)
!7697 = !DILocation(line: 676, column: 36, scope: !7686)
!7698 = !DILocation(line: 701, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7686, file: !580, line: 700, column: 6)
!7700 = !DILocation(line: 711, column: 13, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7686, file: !580, line: 711, column: 6)
!7702 = !DILocation(line: 711, column: 32, scope: !7701)
!7703 = !DILocation(line: 0, scope: !7701)
!7704 = !DILocation(line: 711, column: 6, scope: !7686)
!7705 = !DILocation(line: 712, column: 9, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !580, line: 711, column: 38)
!7707 = !DILocation(line: 712, column: 16, scope: !7706)
!7708 = !DILocation(line: 713, column: 2, scope: !7706)
!7709 = !DILocation(line: 714, column: 19, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7701, file: !580, line: 713, column: 9)
!7711 = !DILocation(line: 714, column: 9, scope: !7710)
!7712 = !DILocation(line: 714, column: 16, scope: !7710)
!7713 = !DILocation(line: 706, column: 8, scope: !7686)
!7714 = !DILocation(line: 717, column: 14, scope: !7686)
!7715 = !DILocation(line: 717, column: 9, scope: !7686)
!7716 = !DILocation(line: 717, column: 2, scope: !7686)
!7717 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !7649, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !576, retainedNodes: !7718)
!7718 = !{!7719}
!7719 = !DILocalVariable(name: "dev", arg: 1, scope: !7717, file: !120, line: 730, type: !599)
!7720 = !DILocation(line: 0, scope: !7717)
!7721 = !DILocation(line: 732, column: 9, scope: !7717)
!7722 = !DILocation(line: 732, column: 2, scope: !7717)
!7723 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !756, file: !756, line: 368, type: !809, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7724)
!7724 = !{!7725}
!7725 = !DILocalVariable(name: "dev", arg: 1, scope: !7723, file: !756, line: 368, type: !785)
!7726 = !DILocation(line: 0, scope: !7723)
!7727 = !DILocation(line: 370, column: 2, scope: !7723)
!7728 = !DILocation(line: 371, column: 1, scope: !7723)
!7729 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !756, file: !756, line: 243, type: !7730, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7732)
!7730 = !DISubroutineType(types: !7731)
!7731 = !{null, !107, !107, !785}
!7732 = !{!7733, !7734, !7735, !7736, !7738}
!7733 = !DILocalVariable(name: "min", arg: 1, scope: !7729, file: !756, line: 243, type: !107)
!7734 = !DILocalVariable(name: "max", arg: 2, scope: !7729, file: !756, line: 243, type: !107)
!7735 = !DILocalVariable(name: "dev", arg: 3, scope: !7729, file: !756, line: 243, type: !785)
!7736 = !DILocalVariable(name: "data", scope: !7729, file: !756, line: 245, type: !7737)
!7737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 32)
!7738 = !DILocalVariable(name: "line", scope: !7729, file: !756, line: 246, type: !107)
!7739 = !DILocation(line: 0, scope: !7729)
!7740 = !DILocation(line: 245, column: 38, scope: !7729)
!7741 = !DILocation(line: 249, column: 24, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !756, line: 249, column: 2)
!7743 = distinct !DILexicalBlock(scope: !7729, file: !756, line: 249, column: 2)
!7744 = !DILocation(line: 249, column: 2, scope: !7743)
!7745 = !DILocation(line: 251, column: 7, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !756, line: 251, column: 7)
!7747 = distinct !DILexicalBlock(scope: !7742, file: !756, line: 249, column: 39)
!7748 = !DILocation(line: 251, column: 7, scope: !7747)
!7749 = !DILocation(line: 253, column: 4, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7746, file: !756, line: 251, column: 36)
!7751 = !DILocation(line: 256, column: 24, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7750, file: !756, line: 256, column: 8)
!7753 = !DILocation(line: 256, column: 9, scope: !7752)
!7754 = !DILocation(line: 256, column: 8, scope: !7750)
!7755 = !DILocation(line: 260, column: 43, scope: !7750)
!7756 = !DILocation(line: 260, column: 4, scope: !7750)
!7757 = !DILocation(line: 261, column: 3, scope: !7750)
!7758 = !DILocation(line: 249, column: 35, scope: !7742)
!7759 = distinct !{!7759, !7744, !7760}
!7760 = !DILocation(line: 262, column: 2, scope: !7743)
!7761 = !DILocation(line: 263, column: 1, scope: !7729)
!7762 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !756, file: !756, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7763)
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "line", arg: 1, scope: !7762, file: !756, line: 158, type: !107)
!7765 = !DILocation(line: 0, scope: !7762)
!7766 = !DILocation(line: 170, column: 38, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !756, line: 160, column: 17)
!7768 = distinct !DILexicalBlock(scope: !7762, file: !756, line: 160, column: 6)
!7769 = !DILocation(line: 170, column: 10, scope: !7767)
!7770 = !DILocation(line: 176, column: 1, scope: !7762)
!7771 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !756, file: !756, line: 183, type: !7772, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7774)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{null, !107}
!7774 = !{!7775}
!7775 = !DILocalVariable(name: "line", arg: 1, scope: !7771, file: !756, line: 183, type: !107)
!7776 = !DILocation(line: 0, scope: !7771)
!7777 = !DILocation(line: 195, column: 28, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !756, line: 185, column: 17)
!7779 = distinct !DILexicalBlock(scope: !7771, file: !756, line: 185, column: 6)
!7780 = !DILocation(line: 195, column: 3, scope: !7778)
!7781 = !DILocation(line: 200, column: 1, scope: !7771)
!7782 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7783, file: !7783, line: 971, type: !5891, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7784)
!7783 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7784 = !{!7785}
!7785 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7782, file: !7783, line: 971, type: !162)
!7786 = !DILocation(line: 0, scope: !7782)
!7787 = !DILocation(line: 973, column: 3, scope: !7782)
!7788 = !DILocation(line: 974, column: 1, scope: !7782)
!7789 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7783, file: !7783, line: 891, type: !7027, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7790)
!7790 = !{!7791}
!7791 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7789, file: !7783, line: 891, type: !162)
!7792 = !DILocation(line: 0, scope: !7789)
!7793 = !DILocation(line: 893, column: 11, scope: !7789)
!7794 = !DILocation(line: 893, column: 40, scope: !7789)
!7795 = !DILocation(line: 893, column: 3, scope: !7789)
!7796 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !756, file: !756, line: 304, type: !809, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7797)
!7797 = !{!7798}
!7798 = !DILocalVariable(name: "dev", arg: 1, scope: !7796, file: !756, line: 304, type: !785)
!7799 = !DILocation(line: 0, scope: !7796)
!7800 = !DILocation(line: 306, column: 2, scope: !7796)
!7801 = !DILocation(line: 307, column: 1, scope: !7796)
!7802 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !756, file: !756, line: 299, type: !809, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7803)
!7803 = !{!7804}
!7804 = !DILocalVariable(name: "dev", arg: 1, scope: !7802, file: !756, line: 299, type: !785)
!7805 = !DILocation(line: 0, scope: !7802)
!7806 = !DILocation(line: 301, column: 2, scope: !7802)
!7807 = !DILocation(line: 302, column: 1, scope: !7802)
!7808 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !756, file: !756, line: 294, type: !809, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7809)
!7809 = !{!7810}
!7810 = !DILocalVariable(name: "dev", arg: 1, scope: !7808, file: !756, line: 294, type: !785)
!7811 = !DILocation(line: 0, scope: !7808)
!7812 = !DILocation(line: 296, column: 2, scope: !7808)
!7813 = !DILocation(line: 297, column: 1, scope: !7808)
!7814 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !756, file: !756, line: 289, type: !809, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7815)
!7815 = !{!7816}
!7816 = !DILocalVariable(name: "dev", arg: 1, scope: !7814, file: !756, line: 289, type: !785)
!7817 = !DILocation(line: 0, scope: !7814)
!7818 = !DILocation(line: 291, column: 2, scope: !7814)
!7819 = !DILocation(line: 292, column: 1, scope: !7814)
!7820 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !756, file: !756, line: 373, type: !809, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7821)
!7821 = !{!7822}
!7822 = !DILocalVariable(name: "dev", arg: 1, scope: !7820, file: !756, line: 373, type: !785)
!7823 = !DILocation(line: 0, scope: !7820)
!7824 = !DILocation(line: 375, column: 2, scope: !7820)
!7825 = !DILocation(line: 376, column: 1, scope: !7820)
!7826 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !756, file: !756, line: 284, type: !809, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7827)
!7827 = !{!7828}
!7828 = !DILocalVariable(name: "dev", arg: 1, scope: !7826, file: !756, line: 284, type: !785)
!7829 = !DILocation(line: 0, scope: !7826)
!7830 = !DILocation(line: 286, column: 2, scope: !7826)
!7831 = !DILocation(line: 287, column: 1, scope: !7826)
!7832 = distinct !DISubprogram(name: "stm32_exti_init", scope: !756, file: !756, line: 416, type: !783, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7833)
!7833 = !{!7834}
!7834 = !DILocalVariable(name: "dev", arg: 1, scope: !7832, file: !756, line: 416, type: !785)
!7835 = !DILocation(line: 0, scope: !7832)
!7836 = !DILocation(line: 418, column: 2, scope: !7832)
!7837 = !DILocation(line: 420, column: 2, scope: !7832)
!7838 = !DILocation(line: 0, scope: !808)
!7839 = !DILocation(line: 493, column: 2, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !808, file: !756, line: 493, column: 2)
!7841 = !DILocation(line: 497, column: 2, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !808, file: !756, line: 497, column: 2)
!7843 = !DILocation(line: 507, column: 2, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !808, file: !756, line: 507, column: 2)
!7845 = !DILocation(line: 512, column: 2, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !808, file: !756, line: 512, column: 2)
!7847 = !DILocation(line: 516, column: 2, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !808, file: !756, line: 516, column: 2)
!7849 = !DILocation(line: 523, column: 2, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !808, file: !756, line: 523, column: 2)
!7851 = !DILocation(line: 527, column: 2, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !808, file: !756, line: 527, column: 2)
!7853 = !DILocation(line: 607, column: 1, scope: !808)
!7854 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !756, file: !756, line: 112, type: !7772, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7855)
!7855 = !{!7856, !7857}
!7856 = !DILocalVariable(name: "line", arg: 1, scope: !7854, file: !756, line: 112, type: !107)
!7857 = !DILocalVariable(name: "irqnum", scope: !7854, file: !756, line: 114, type: !107)
!7858 = !DILocation(line: 0, scope: !7854)
!7859 = !DILocation(line: 121, column: 11, scope: !7854)
!7860 = !DILocation(line: 130, column: 26, scope: !7854)
!7861 = !DILocation(line: 130, column: 2, scope: !7854)
!7862 = !DILocation(line: 134, column: 2, scope: !7854)
!7863 = !DILocation(line: 135, column: 1, scope: !7854)
!7864 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7783, file: !7783, line: 274, type: !5891, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7865)
!7865 = !{!7866}
!7866 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7864, file: !7783, line: 274, type: !162)
!7867 = !DILocation(line: 0, scope: !7864)
!7868 = !DILocation(line: 276, column: 3, scope: !7864)
!7869 = !DILocation(line: 277, column: 1, scope: !7864)
!7870 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !756, file: !756, line: 137, type: !7772, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7871)
!7871 = !{!7872}
!7872 = !DILocalVariable(name: "line", arg: 1, scope: !7870, file: !756, line: 137, type: !107)
!7873 = !DILocation(line: 0, scope: !7870)
!7874 = !DILocation(line: 141, column: 11, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7870, file: !756, line: 141, column: 6)
!7876 = !DILocation(line: 141, column: 6, scope: !7870)
!7877 = !DILocation(line: 145, column: 28, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7875, file: !756, line: 141, column: 17)
!7879 = !DILocation(line: 145, column: 3, scope: !7878)
!7880 = !DILocation(line: 147, column: 2, scope: !7878)
!7881 = !DILocation(line: 151, column: 1, scope: !7870)
!7882 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7783, file: !7783, line: 322, type: !5891, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7883)
!7883 = !{!7884}
!7884 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7882, file: !7783, line: 322, type: !162)
!7885 = !DILocation(line: 0, scope: !7882)
!7886 = !DILocation(line: 324, column: 3, scope: !7882)
!7887 = !DILocation(line: 325, column: 1, scope: !7882)
!7888 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !756, file: !756, line: 202, type: !7889, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7891)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{null, !107, !107}
!7891 = !{!7892, !7893}
!7892 = !DILocalVariable(name: "line", arg: 1, scope: !7888, file: !756, line: 202, type: !107)
!7893 = !DILocalVariable(name: "trigger", arg: 2, scope: !7888, file: !756, line: 202, type: !107)
!7894 = !DILocation(line: 0, scope: !7888)
!7895 = !DILocation(line: 211, column: 2, scope: !7888)
!7896 = !DILocation(line: 213, column: 36, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7888, file: !756, line: 211, column: 19)
!7898 = !DILocation(line: 213, column: 3, scope: !7897)
!7899 = !DILocation(line: 214, column: 3, scope: !7897)
!7900 = !DILocation(line: 215, column: 3, scope: !7897)
!7901 = !DILocation(line: 217, column: 35, scope: !7897)
!7902 = !DILocation(line: 217, column: 3, scope: !7897)
!7903 = !DILocation(line: 218, column: 3, scope: !7897)
!7904 = !DILocation(line: 219, column: 3, scope: !7897)
!7905 = !DILocation(line: 221, column: 36, scope: !7897)
!7906 = !DILocation(line: 221, column: 3, scope: !7897)
!7907 = !DILocation(line: 222, column: 3, scope: !7897)
!7908 = !DILocation(line: 223, column: 3, scope: !7897)
!7909 = !DILocation(line: 225, column: 35, scope: !7897)
!7910 = !DILocation(line: 225, column: 3, scope: !7897)
!7911 = !DILocation(line: 226, column: 3, scope: !7897)
!7912 = !DILocation(line: 227, column: 3, scope: !7897)
!7913 = !DILocation(line: 232, column: 1, scope: !7888)
!7914 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7783, file: !7783, line: 618, type: !5891, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7915)
!7915 = !{!7916}
!7916 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7914, file: !7783, line: 618, type: !162)
!7917 = !DILocation(line: 0, scope: !7914)
!7918 = !DILocation(line: 620, column: 3, scope: !7914)
!7919 = !DILocation(line: 622, column: 1, scope: !7914)
!7920 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7783, file: !7783, line: 754, type: !5891, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7921)
!7921 = !{!7922}
!7922 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7920, file: !7783, line: 754, type: !162)
!7923 = !DILocation(line: 0, scope: !7920)
!7924 = !DILocation(line: 756, column: 3, scope: !7920)
!7925 = !DILocation(line: 757, column: 1, scope: !7920)
!7926 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7783, file: !7783, line: 572, type: !5891, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7927)
!7927 = !{!7928}
!7928 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7926, file: !7783, line: 572, type: !162)
!7929 = !DILocation(line: 0, scope: !7926)
!7930 = !DILocation(line: 574, column: 3, scope: !7926)
!7931 = !DILocation(line: 576, column: 1, scope: !7926)
!7932 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7783, file: !7783, line: 710, type: !5891, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7933)
!7933 = !{!7934}
!7934 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7932, file: !7783, line: 710, type: !162)
!7935 = !DILocation(line: 0, scope: !7932)
!7936 = !DILocation(line: 712, column: 3, scope: !7932)
!7937 = !DILocation(line: 713, column: 1, scope: !7932)
!7938 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !756, file: !756, line: 433, type: !7939, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!107, !107, !796, !102}
!7941 = !{!7942, !7943, !7944, !7945, !7947}
!7942 = !DILocalVariable(name: "line", arg: 1, scope: !7938, file: !756, line: 433, type: !107)
!7943 = !DILocalVariable(name: "cb", arg: 2, scope: !7938, file: !756, line: 433, type: !796)
!7944 = !DILocalVariable(name: "arg", arg: 3, scope: !7938, file: !756, line: 433, type: !102)
!7945 = !DILocalVariable(name: "dev", scope: !7938, file: !756, line: 435, type: !7946)
!7946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !785)
!7947 = !DILocalVariable(name: "data", scope: !7938, file: !756, line: 436, type: !7737)
!7948 = !DILocation(line: 0, scope: !7938)
!7949 = !DILocation(line: 438, column: 21, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7938, file: !756, line: 438, column: 6)
!7951 = !DILocation(line: 438, column: 6, scope: !7950)
!7952 = !DILocation(line: 438, column: 6, scope: !7938)
!7953 = !DILocation(line: 442, column: 20, scope: !7938)
!7954 = !DILocation(line: 443, column: 17, scope: !7938)
!7955 = !DILocation(line: 443, column: 22, scope: !7938)
!7956 = !DILocation(line: 445, column: 2, scope: !7938)
!7957 = !DILocation(line: 446, column: 1, scope: !7938)
!7958 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !756, file: !756, line: 448, type: !7772, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !684, retainedNodes: !7959)
!7959 = !{!7960, !7961, !7962}
!7960 = !DILocalVariable(name: "line", arg: 1, scope: !7958, file: !756, line: 448, type: !107)
!7961 = !DILocalVariable(name: "dev", scope: !7958, file: !756, line: 450, type: !7946)
!7962 = !DILocalVariable(name: "data", scope: !7958, file: !756, line: 451, type: !7737)
!7963 = !DILocation(line: 0, scope: !7958)
!7964 = !DILocation(line: 453, column: 17, scope: !7958)
!7965 = !DILocation(line: 453, column: 20, scope: !7958)
!7966 = !DILocation(line: 454, column: 17, scope: !7958)
!7967 = !DILocation(line: 454, column: 22, scope: !7958)
!7968 = !DILocation(line: 455, column: 1, scope: !7958)
!7969 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !911, file: !911, line: 183, type: !947, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7970)
!7970 = !{!7971, !7972, !7973, !7974, !7975}
!7971 = !DILocalVariable(name: "dev", arg: 1, scope: !7969, file: !911, line: 183, type: !938)
!7972 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7969, file: !911, line: 184, type: !949)
!7973 = !DILocalVariable(name: "pclken", scope: !7969, file: !911, line: 186, type: !901)
!7974 = !DILocalVariable(name: "reg", scope: !7969, file: !911, line: 187, type: !2880)
!7975 = !DILocalVariable(name: "reg_val", scope: !7969, file: !911, line: 188, type: !162)
!7976 = !DILocation(line: 0, scope: !7969)
!7977 = !DILocation(line: 192, column: 6, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7969, file: !911, line: 192, column: 6)
!7979 = !DILocation(line: 192, column: 6, scope: !7969)
!7980 = !DILocation(line: 197, column: 52, scope: !7969)
!7981 = !DILocation(line: 197, column: 8, scope: !7969)
!7982 = !DILocation(line: 198, column: 12, scope: !7969)
!7983 = !DILocation(line: 199, column: 21, scope: !7969)
!7984 = !DILocation(line: 199, column: 10, scope: !7969)
!7985 = !DILocation(line: 200, column: 7, scope: !7969)
!7986 = !DILocation(line: 202, column: 2, scope: !7969)
!7987 = !DILocation(line: 203, column: 1, scope: !7969)
!7988 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !911, file: !911, line: 205, type: !947, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7989)
!7989 = !{!7990, !7991, !7992, !7993, !7994}
!7990 = !DILocalVariable(name: "dev", arg: 1, scope: !7988, file: !911, line: 205, type: !938)
!7991 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7988, file: !911, line: 206, type: !949)
!7992 = !DILocalVariable(name: "pclken", scope: !7988, file: !911, line: 208, type: !901)
!7993 = !DILocalVariable(name: "reg", scope: !7988, file: !911, line: 209, type: !2880)
!7994 = !DILocalVariable(name: "reg_val", scope: !7988, file: !911, line: 210, type: !162)
!7995 = !DILocation(line: 0, scope: !7988)
!7996 = !DILocation(line: 214, column: 6, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7988, file: !911, line: 214, column: 6)
!7998 = !DILocation(line: 214, column: 6, scope: !7988)
!7999 = !DILocation(line: 219, column: 52, scope: !7988)
!8000 = !DILocation(line: 219, column: 8, scope: !7988)
!8001 = !DILocation(line: 220, column: 12, scope: !7988)
!8002 = !DILocation(line: 221, column: 22, scope: !7988)
!8003 = !DILocation(line: 221, column: 13, scope: !7988)
!8004 = !DILocation(line: 221, column: 10, scope: !7988)
!8005 = !DILocation(line: 222, column: 7, scope: !7988)
!8006 = !DILocation(line: 224, column: 2, scope: !7988)
!8007 = !DILocation(line: 225, column: 1, scope: !7988)
!8008 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !911, file: !911, line: 262, type: !963, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8009)
!8009 = !{!8010, !8011, !8012, !8013, !8014, !8015, !8016}
!8010 = !DILocalVariable(name: "clock", arg: 1, scope: !8008, file: !911, line: 262, type: !938)
!8011 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8008, file: !911, line: 263, type: !949)
!8012 = !DILocalVariable(name: "rate", arg: 3, scope: !8008, file: !911, line: 264, type: !907)
!8013 = !DILocalVariable(name: "pclken", scope: !8008, file: !911, line: 266, type: !901)
!8014 = !DILocalVariable(name: "ahb_clock", scope: !8008, file: !911, line: 273, type: !162)
!8015 = !DILocalVariable(name: "apb1_clock", scope: !8008, file: !911, line: 274, type: !162)
!8016 = !DILocalVariable(name: "apb2_clock", scope: !8008, file: !911, line: 276, type: !162)
!8017 = !DILocation(line: 0, scope: !8008)
!8018 = !DILocation(line: 273, column: 23, scope: !8008)
!8019 = !DILocation(line: 299, column: 18, scope: !8008)
!8020 = !DILocation(line: 299, column: 2, scope: !8008)
!8021 = !DILocation(line: 374, column: 3, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8008, file: !911, line: 299, column: 23)
!8023 = !DILocation(line: 379, column: 3, scope: !8022)
!8024 = !DILocation(line: 389, column: 3, scope: !8022)
!8025 = !DILocation(line: 0, scope: !8022)
!8026 = !DILocation(line: 396, column: 1, scope: !8008)
!8027 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !911, file: !911, line: 227, type: !979, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8028)
!8028 = !{!8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036}
!8029 = !DILocalVariable(name: "dev", arg: 1, scope: !8027, file: !911, line: 227, type: !938)
!8030 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8027, file: !911, line: 228, type: !949)
!8031 = !DILocalVariable(name: "data", arg: 3, scope: !8027, file: !911, line: 229, type: !102)
!8032 = !DILocalVariable(name: "pclken", scope: !8027, file: !911, line: 233, type: !901)
!8033 = !DILocalVariable(name: "reg", scope: !8027, file: !911, line: 234, type: !2880)
!8034 = !DILocalVariable(name: "reg_val", scope: !8027, file: !911, line: 235, type: !162)
!8035 = !DILocalVariable(name: "dt_val", scope: !8027, file: !911, line: 235, type: !162)
!8036 = !DILocalVariable(name: "err", scope: !8027, file: !911, line: 236, type: !107)
!8037 = !DILocation(line: 0, scope: !8027)
!8038 = !DILocation(line: 241, column: 30, scope: !8027)
!8039 = !DILocation(line: 241, column: 8, scope: !8027)
!8040 = !DILocation(line: 242, column: 10, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8027, file: !911, line: 242, column: 6)
!8042 = !DILocation(line: 242, column: 6, scope: !8027)
!8043 = !DILocation(line: 247, column: 11, scope: !8027)
!8044 = !DILocation(line: 248, column: 6, scope: !8027)
!8045 = !DILocation(line: 247, column: 44, scope: !8027)
!8046 = !DILocation(line: 250, column: 6, scope: !8027)
!8047 = !DILocation(line: 249, column: 52, scope: !8027)
!8048 = !DILocation(line: 249, column: 8, scope: !8027)
!8049 = !DILocation(line: 251, column: 12, scope: !8027)
!8050 = !DILocation(line: 252, column: 10, scope: !8027)
!8051 = !DILocation(line: 253, column: 7, scope: !8027)
!8052 = !DILocation(line: 255, column: 2, scope: !8027)
!8053 = !DILocation(line: 260, column: 1, scope: !8027)
!8054 = distinct !DISubprogram(name: "enabled_clock", scope: !911, file: !911, line: 100, type: !8055, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8057)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{!107, !162}
!8057 = !{!8058, !8059}
!8058 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8054, file: !911, line: 100, type: !162)
!8059 = !DILocalVariable(name: "r", scope: !8054, file: !911, line: 102, type: !107)
!8060 = !DILocation(line: 0, scope: !8054)
!8061 = !DILocation(line: 104, column: 2, scope: !8054)
!8062 = !DILocation(line: 180, column: 2, scope: !8054)
!8063 = !DILocation(line: 181, column: 1, scope: !8054)
!8064 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !911, file: !911, line: 641, type: !936, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8065)
!8065 = !{!8066, !8067, !8068}
!8066 = !DILocalVariable(name: "dev", arg: 1, scope: !8064, file: !911, line: 641, type: !938)
!8067 = !DILocalVariable(name: "old_flash_freq", scope: !8064, file: !911, line: 664, type: !162)
!8068 = !DILocalVariable(name: "new_flash_freq", scope: !8064, file: !911, line: 665, type: !162)
!8069 = !DILocation(line: 0, scope: !8064)
!8070 = !DILocation(line: 646, column: 2, scope: !8064)
!8071 = !DILocation(line: 667, column: 19, scope: !8064)
!8072 = !DILocation(line: 674, column: 21, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !911, line: 674, column: 6)
!8074 = !DILocation(line: 674, column: 6, scope: !8064)
!8075 = !DILocation(line: 675, column: 3, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8073, file: !911, line: 674, column: 59)
!8077 = !DILocation(line: 676, column: 2, scope: !8076)
!8078 = !DILocation(line: 680, column: 2, scope: !8064)
!8079 = !DILocation(line: 683, column: 2, scope: !8064)
!8080 = !DILocation(line: 690, column: 3, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !911, line: 689, column: 9)
!8082 = distinct !DILexicalBlock(scope: !8064, file: !911, line: 685, column: 6)
!8083 = !DILocation(line: 695, column: 2, scope: !8064)
!8084 = !DILocation(line: 696, column: 2, scope: !8064)
!8085 = !DILocation(line: 696, column: 9, scope: !8064)
!8086 = !DILocation(line: 696, column: 34, scope: !8064)
!8087 = distinct !{!8087, !8084, !8088}
!8088 = !DILocation(line: 697, column: 2, scope: !8064)
!8089 = !DILocation(line: 720, column: 21, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8064, file: !911, line: 720, column: 6)
!8091 = !DILocation(line: 720, column: 6, scope: !8064)
!8092 = !DILocation(line: 721, column: 3, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8090, file: !911, line: 720, column: 60)
!8094 = !DILocation(line: 722, column: 2, scope: !8093)
!8095 = !DILocation(line: 725, column: 18, scope: !8064)
!8096 = !DILocation(line: 728, column: 2, scope: !8064)
!8097 = !DILocation(line: 730, column: 2, scope: !8064)
!8098 = !DILocation(line: 745, column: 2, scope: !8064)
!8099 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8100, file: !8100, line: 995, type: !6808, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8100 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8101 = !DILocation(line: 997, column: 21, scope: !8099)
!8102 = !DILocation(line: 997, column: 3, scope: !8099)
!8103 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !911, file: !911, line: 507, type: !3107, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8104 = !DILocation(line: 534, column: 7, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !911, line: 534, column: 7)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !911, line: 532, column: 37)
!8107 = distinct !DILexicalBlock(scope: !8103, file: !911, line: 532, column: 6)
!8108 = !DILocation(line: 534, column: 28, scope: !8105)
!8109 = !DILocation(line: 534, column: 7, scope: !8106)
!8110 = !DILocation(line: 536, column: 4, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8105, file: !911, line: 534, column: 34)
!8112 = !DILocation(line: 537, column: 4, scope: !8111)
!8113 = !DILocation(line: 537, column: 11, scope: !8111)
!8114 = !DILocation(line: 537, column: 32, scope: !8111)
!8115 = distinct !{!8115, !8112, !8116}
!8116 = !DILocation(line: 539, column: 4, scope: !8111)
!8117 = !DILocation(line: 583, column: 3, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !911, line: 577, column: 37)
!8119 = distinct !DILexicalBlock(scope: !8103, file: !911, line: 577, column: 6)
!8120 = !DILocation(line: 584, column: 3, scope: !8118)
!8121 = !DILocation(line: 584, column: 10, scope: !8118)
!8122 = !DILocation(line: 584, column: 31, scope: !8118)
!8123 = distinct !{!8123, !8120, !8124}
!8124 = !DILocation(line: 585, column: 3, scope: !8118)
!8125 = !DILocation(line: 627, column: 1, scope: !8103)
!8126 = distinct !DISubprogram(name: "set_up_plls", scope: !911, file: !911, line: 448, type: !3107, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8127 = !DILocation(line: 460, column: 6, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8126, file: !911, line: 460, column: 6)
!8129 = !DILocation(line: 460, column: 31, scope: !8128)
!8130 = !DILocation(line: 460, column: 6, scope: !8126)
!8131 = !DILocation(line: 461, column: 3, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8128, file: !911, line: 460, column: 67)
!8133 = !DILocation(line: 462, column: 3, scope: !8132)
!8134 = !DILocation(line: 463, column: 2, scope: !8132)
!8135 = !DILocation(line: 464, column: 2, scope: !8126)
!8136 = !DILocation(line: 496, column: 2, scope: !8126)
!8137 = !DILocation(line: 499, column: 2, scope: !8126)
!8138 = !DILocation(line: 500, column: 2, scope: !8126)
!8139 = !DILocation(line: 500, column: 9, scope: !8126)
!8140 = !DILocation(line: 500, column: 30, scope: !8126)
!8141 = distinct !{!8141, !8138, !8142}
!8142 = !DILocation(line: 502, column: 2, scope: !8126)
!8143 = !DILocation(line: 505, column: 1, scope: !8126)
!8144 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8100, file: !8100, line: 944, type: !5891, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8145)
!8145 = !{!8146}
!8146 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8144, file: !8100, line: 944, type: !162)
!8147 = !DILocation(line: 0, scope: !8144)
!8148 = !DILocation(line: 946, column: 3, scope: !8144)
!8149 = !DILocation(line: 947, column: 1, scope: !8144)
!8150 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8100, file: !8100, line: 910, type: !5891, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8151)
!8151 = !{!8152}
!8152 = !DILocalVariable(name: "Source", arg: 1, scope: !8150, file: !8100, line: 910, type: !162)
!8153 = !DILocation(line: 0, scope: !8150)
!8154 = !DILocation(line: 912, column: 3, scope: !8150)
!8155 = !DILocation(line: 913, column: 1, scope: !8150)
!8156 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8100, file: !8100, line: 924, type: !6808, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8157 = !DILocation(line: 926, column: 21, scope: !8156)
!8158 = !DILocation(line: 926, column: 3, scope: !8156)
!8159 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8100, file: !8100, line: 960, type: !5891, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8160)
!8160 = !{!8161}
!8161 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8159, file: !8100, line: 960, type: !162)
!8162 = !DILocation(line: 0, scope: !8159)
!8163 = !DILocation(line: 962, column: 3, scope: !8159)
!8164 = !DILocation(line: 963, column: 1, scope: !8159)
!8165 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8100, file: !8100, line: 976, type: !5891, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8166)
!8166 = !{!8167}
!8167 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8165, file: !8100, line: 976, type: !162)
!8168 = !DILocation(line: 0, scope: !8165)
!8169 = !DILocation(line: 978, column: 3, scope: !8165)
!8170 = !DILocation(line: 979, column: 1, scope: !8165)
!8171 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !911, file: !911, line: 409, type: !3107, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8172 = !DILocation(line: 412, column: 6, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8171, file: !911, line: 412, column: 6)
!8174 = !DILocation(line: 412, column: 27, scope: !8173)
!8175 = !DILocation(line: 412, column: 6, scope: !8171)
!8176 = !DILocation(line: 414, column: 3, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !911, line: 412, column: 33)
!8178 = !DILocation(line: 415, column: 3, scope: !8177)
!8179 = !DILocation(line: 415, column: 10, scope: !8177)
!8180 = !DILocation(line: 415, column: 31, scope: !8177)
!8181 = distinct !{!8181, !8178, !8182}
!8182 = !DILocation(line: 417, column: 3, scope: !8177)
!8183 = !DILocation(line: 421, column: 2, scope: !8171)
!8184 = !DILocation(line: 422, column: 2, scope: !8171)
!8185 = !DILocation(line: 422, column: 9, scope: !8171)
!8186 = !DILocation(line: 422, column: 34, scope: !8171)
!8187 = distinct !{!8187, !8184, !8188}
!8188 = !DILocation(line: 423, column: 2, scope: !8171)
!8189 = !DILocation(line: 424, column: 1, scope: !8171)
!8190 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8100, file: !8100, line: 1180, type: !3107, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8191 = !DILocation(line: 1182, column: 3, scope: !8190)
!8192 = !DILocation(line: 1183, column: 1, scope: !8190)
!8193 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8100, file: !8100, line: 1169, type: !3107, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8194 = !DILocation(line: 1171, column: 3, scope: !8193)
!8195 = !DILocation(line: 1172, column: 1, scope: !8193)
!8196 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8100, file: !8100, line: 1190, type: !6808, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8197 = !DILocation(line: 1192, column: 12, scope: !8196)
!8198 = !DILocation(line: 1192, column: 11, scope: !8196)
!8199 = !DILocation(line: 1192, column: 3, scope: !8196)
!8200 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8100, file: !8100, line: 612, type: !6808, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8201 = !DILocation(line: 614, column: 12, scope: !8200)
!8202 = !DILocation(line: 614, column: 11, scope: !8200)
!8203 = !DILocation(line: 614, column: 3, scope: !8200)
!8204 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8100, file: !8100, line: 592, type: !3107, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8205 = !DILocation(line: 594, column: 3, scope: !8204)
!8206 = !DILocation(line: 595, column: 1, scope: !8204)
!8207 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8100, file: !8100, line: 760, type: !3107, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8208 = !DILocation(line: 762, column: 3, scope: !8207)
!8209 = !DILocation(line: 763, column: 1, scope: !8207)
!8210 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8100, file: !8100, line: 780, type: !6808, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !250)
!8211 = !DILocation(line: 782, column: 12, scope: !8210)
!8212 = !DILocation(line: 782, column: 11, scope: !8210)
!8213 = !DILocation(line: 782, column: 3, scope: !8210)
!8214 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8215, file: !8215, line: 48, type: !6808, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !250)
!8215 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8216 = !DILocation(line: 51, column: 3, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !8215, line: 50, column: 37)
!8218 = distinct !DILexicalBlock(scope: !8214, file: !8215, line: 50, column: 6)
!8219 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8215, file: !8215, line: 64, type: !3107, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !250)
!8220 = !DILocation(line: 66, column: 2, scope: !8219)
!8221 = !DILocation(line: 69, column: 1, scope: !8219)
!8222 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8100, file: !8100, line: 1219, type: !8223, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !8225)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{null, !162, !162, !162}
!8225 = !{!8226, !8227, !8228}
!8226 = !DILocalVariable(name: "Source", arg: 1, scope: !8222, file: !8100, line: 1219, type: !162)
!8227 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8222, file: !8100, line: 1219, type: !162)
!8228 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8222, file: !8100, line: 1219, type: !162)
!8229 = !DILocation(line: 0, scope: !8222)
!8230 = !DILocation(line: 1221, column: 3, scope: !8222)
!8231 = !DILocation(line: 1222, column: 1, scope: !8222)
!8232 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8215, file: !8215, line: 75, type: !6808, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !250)
!8233 = !DILocation(line: 77, column: 9, scope: !8232)
!8234 = !DILocation(line: 77, column: 2, scope: !8232)
!8235 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8215, file: !8215, line: 87, type: !3107, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !250)
!8236 = !DILocation(line: 93, column: 2, scope: !8235)
!8237 = !DILocation(line: 95, column: 1, scope: !8235)
!8238 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5890, file: !5890, line: 895, type: !5891, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !8239)
!8239 = !{!8240, !8241}
!8240 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8238, file: !5890, line: 895, type: !162)
!8241 = !DILocalVariable(name: "tmpreg", scope: !8238, file: !5890, line: 897, type: !283)
!8242 = !DILocation(line: 0, scope: !8238)
!8243 = !DILocation(line: 897, column: 3, scope: !8238)
!8244 = !DILocation(line: 897, column: 17, scope: !8238)
!8245 = !DILocation(line: 898, column: 3, scope: !8238)
!8246 = !DILocation(line: 900, column: 12, scope: !8238)
!8247 = !DILocation(line: 900, column: 10, scope: !8238)
!8248 = !DILocation(line: 901, column: 9, scope: !8238)
!8249 = !DILocation(line: 902, column: 1, scope: !8238)
!8250 = distinct !DISubprogram(name: "uart_console_init", scope: !1068, file: !1068, line: 588, type: !1015, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8251)
!8251 = !{!8252}
!8252 = !DILocalVariable(name: "arg", arg: 1, scope: !8250, file: !1068, line: 588, type: !994)
!8253 = !DILocation(line: 0, scope: !8250)
!8254 = !DILocation(line: 593, column: 7, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8250, file: !1068, line: 593, column: 6)
!8256 = !DILocation(line: 593, column: 6, scope: !8250)
!8257 = !DILocation(line: 597, column: 2, scope: !8250)
!8258 = !DILocation(line: 599, column: 2, scope: !8250)
!8259 = !DILocation(line: 600, column: 1, scope: !8250)
!8260 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !8261, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8263)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!136, !994}
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "dev", arg: 1, scope: !8260, file: !3390, line: 47, type: !994)
!8265 = !DILocation(line: 0, scope: !8260)
!8266 = !DILocation(line: 55, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8260, file: !3390, line: 55, column: 2)
!8268 = !{i64 2152408944}
!8269 = !DILocation(line: 56, column: 9, scope: !8260)
!8270 = !DILocation(line: 56, column: 2, scope: !8260)
!8271 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1068, file: !1068, line: 573, type: !3107, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !250)
!8272 = !DILocation(line: 576, column: 2, scope: !8271)
!8273 = !DILocation(line: 579, column: 2, scope: !8271)
!8274 = !DILocation(line: 581, column: 1, scope: !8271)
!8275 = distinct !DISubprogram(name: "console_out", scope: !1068, file: !1068, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8276)
!8276 = !{!8277}
!8277 = !DILocalVariable(name: "c", arg: 1, scope: !8275, file: !1068, line: 77, type: !107)
!8278 = !DILocation(line: 0, scope: !8275)
!8279 = !DILocation(line: 89, column: 11, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !1068, line: 89, column: 6)
!8281 = !DILocation(line: 89, column: 6, scope: !8275)
!8282 = !DILocation(line: 90, column: 3, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8280, file: !1068, line: 89, column: 17)
!8284 = !DILocation(line: 91, column: 2, scope: !8283)
!8285 = !DILocation(line: 92, column: 34, scope: !8275)
!8286 = !DILocation(line: 92, column: 2, scope: !8275)
!8287 = !DILocation(line: 94, column: 2, scope: !8275)
!8288 = distinct !DISubprogram(name: "uart_poll_out", scope: !3254, file: !3254, line: 95, type: !1011, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8289)
!8289 = !{!8290, !8291}
!8290 = !DILocalVariable(name: "dev", arg: 1, scope: !8288, file: !3254, line: 95, type: !994)
!8291 = !DILocalVariable(name: "out_char", arg: 2, scope: !8288, file: !3254, line: 95, type: !134)
!8292 = !DILocation(line: 0, scope: !8288)
!8293 = !DILocation(line: 105, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8288, file: !3254, line: 105, column: 2)
!8295 = !{i64 2152492189}
!8296 = !DILocation(line: 106, column: 2, scope: !8288)
!8297 = !DILocation(line: 107, column: 1, scope: !8288)
!8298 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !1011, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8299)
!8299 = !{!8300, !8301, !8302}
!8300 = !DILocalVariable(name: "dev", arg: 1, scope: !8298, file: !111, line: 574, type: !994)
!8301 = !DILocalVariable(name: "out_char", arg: 2, scope: !8298, file: !111, line: 575, type: !134)
!8302 = !DILocalVariable(name: "api", scope: !8298, file: !111, line: 577, type: !986)
!8303 = !DILocation(line: 0, scope: !8298)
!8304 = !DILocation(line: 578, column: 40, scope: !8298)
!8305 = !DILocation(line: 580, column: 7, scope: !8298)
!8306 = !DILocation(line: 580, column: 2, scope: !8298)
!8307 = !DILocation(line: 581, column: 1, scope: !8298)
!8308 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8261, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "dev", arg: 1, scope: !8308, file: !120, line: 730, type: !994)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 732, column: 9, scope: !8308)
!8313 = !DILocation(line: 732, column: 2, scope: !8308)
!8314 = distinct !DISubprogram(name: "uart_register_input", scope: !1068, file: !1068, line: 560, type: !8315, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8360)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{null, !8317, !8317, !8357}
!8317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8318, size: 32)
!8318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8319)
!8319 = !{!8320}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8318, file: !224, line: 2209, baseType: !8321, size: 128)
!8321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8322)
!8322 = !{!8323, !8336, !8338}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8321, file: !224, line: 1710, baseType: !8324, size: 64)
!8324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8325, line: 46, baseType: !8326)
!8325 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8325, line: 41, size: 64, elements: !8327)
!8327 = !{!8328, !8335}
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8326, file: !8325, line: 42, baseType: !8329, size: 32)
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 32)
!8330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8325, line: 39, baseType: !8331)
!8331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8325, line: 35, size: 32, elements: !8332)
!8332 = !{!8333}
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8331, file: !8325, line: 36, baseType: !8334, size: 32)
!8334 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8325, line: 32, baseType: !162)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8326, file: !8325, line: 43, baseType: !8329, size: 32, offset: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8321, file: !224, line: 1711, baseType: !8337, offset: 64)
!8337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8321, file: !224, line: 1712, baseType: !8339, size: 64, offset: 64)
!8339 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8340)
!8340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8341)
!8341 = !{!8342}
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8340, file: !228, line: 232, baseType: !8343, size: 64)
!8343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8344)
!8344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8345)
!8345 = !{!8346, !8352}
!8346 = !DIDerivedType(tag: DW_TAG_member, scope: !8344, file: !233, line: 38, baseType: !8347, size: 32)
!8347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8344, file: !233, line: 38, size: 32, elements: !8348)
!8348 = !{!8349, !8351}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8347, file: !233, line: 39, baseType: !8350, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8344, size: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8347, file: !233, line: 40, baseType: !8350, size: 32)
!8352 = !DIDerivedType(tag: DW_TAG_member, scope: !8344, file: !233, line: 42, baseType: !8353, size: 32, offset: 32)
!8353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8344, file: !233, line: 42, size: 32, elements: !8354)
!8354 = !{!8355, !8356}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8353, file: !233, line: 43, baseType: !8350, size: 32)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8353, file: !233, line: 44, baseType: !8350, size: 32)
!8357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8358, size: 32)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{!133, !256, !133}
!8360 = !{!8361, !8362, !8363}
!8361 = !DILocalVariable(name: "avail", arg: 1, scope: !8314, file: !1068, line: 560, type: !8317)
!8362 = !DILocalVariable(name: "lines", arg: 2, scope: !8314, file: !1068, line: 560, type: !8317)
!8363 = !DILocalVariable(name: "completion", arg: 3, scope: !8314, file: !1068, line: 561, type: !8357)
!8364 = !DILocation(line: 0, scope: !8314)
!8365 = !DILocation(line: 566, column: 1, scope: !8314)
!8366 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1227, file: !1227, line: 523, type: !1093, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8367)
!8367 = !{!8368, !8369, !8370, !8371, !8372}
!8368 = !DILocalVariable(name: "dev", arg: 1, scope: !8366, file: !1227, line: 523, type: !1095)
!8369 = !DILocalVariable(name: "pin", arg: 2, scope: !8366, file: !1227, line: 524, type: !614)
!8370 = !DILocalVariable(name: "flags", arg: 3, scope: !8366, file: !1227, line: 524, type: !615)
!8371 = !DILocalVariable(name: "err", scope: !8366, file: !1227, line: 526, type: !107)
!8372 = !DILocalVariable(name: "pincfg", scope: !8366, file: !1227, line: 527, type: !107)
!8373 = !DILocation(line: 0, scope: !8366)
!8374 = !DILocation(line: 527, column: 2, scope: !8366)
!8375 = !DILocation(line: 532, column: 8, scope: !8366)
!8376 = !DILocation(line: 533, column: 10, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8366, file: !1227, line: 533, column: 6)
!8378 = !DILocation(line: 533, column: 6, scope: !8366)
!8379 = !DILocation(line: 543, column: 13, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8366, file: !1227, line: 543, column: 6)
!8381 = !DILocation(line: 543, column: 28, scope: !8380)
!8382 = !DILocation(line: 543, column: 6, scope: !8366)
!8383 = !DILocation(line: 544, column: 14, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !1227, line: 544, column: 7)
!8385 = distinct !DILexicalBlock(scope: !8380, file: !1227, line: 543, column: 34)
!8386 = !DILocation(line: 544, column: 39, scope: !8384)
!8387 = !DILocation(line: 544, column: 7, scope: !8385)
!8388 = !DILocation(line: 545, column: 38, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8384, file: !1227, line: 544, column: 45)
!8390 = !DILocation(line: 545, column: 4, scope: !8389)
!8391 = !DILocation(line: 546, column: 3, scope: !8389)
!8392 = !DILocation(line: 546, column: 21, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8384, file: !1227, line: 546, column: 14)
!8394 = !DILocation(line: 546, column: 45, scope: !8393)
!8395 = !DILocation(line: 546, column: 14, scope: !8384)
!8396 = !DILocation(line: 547, column: 40, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8393, file: !1227, line: 546, column: 51)
!8398 = !DILocation(line: 547, column: 4, scope: !8397)
!8399 = !DILocation(line: 548, column: 3, scope: !8397)
!8400 = !DILocation(line: 551, column: 32, scope: !8366)
!8401 = !DILocation(line: 551, column: 37, scope: !8366)
!8402 = !DILocation(line: 551, column: 2, scope: !8366)
!8403 = !DILocation(line: 554, column: 6, scope: !8366)
!8404 = !DILocation(line: 562, column: 1, scope: !8366)
!8405 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1227, file: !1227, line: 410, type: !8406, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!107, !1095, !907}
!8408 = !{!8409, !8410, !8411, !8413}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !1227, line: 410, type: !1095)
!8410 = !DILocalVariable(name: "value", arg: 2, scope: !8405, file: !1227, line: 410, type: !907)
!8411 = !DILocalVariable(name: "cfg", scope: !8405, file: !1227, line: 412, type: !8412)
!8412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!8413 = !DILocalVariable(name: "gpio", scope: !8405, file: !1227, line: 413, type: !1162)
!8414 = !DILocation(line: 0, scope: !8405)
!8415 = !DILocation(line: 412, column: 45, scope: !8405)
!8416 = !DILocation(line: 413, column: 44, scope: !8405)
!8417 = !DILocation(line: 415, column: 11, scope: !8405)
!8418 = !DILocation(line: 415, column: 9, scope: !8405)
!8419 = !DILocation(line: 417, column: 2, scope: !8405)
!8420 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1227, file: !1227, line: 420, type: !1116, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8421)
!8421 = !{!8422, !8423, !8424, !8425, !8426, !8427}
!8422 = !DILocalVariable(name: "dev", arg: 1, scope: !8420, file: !1227, line: 420, type: !1095)
!8423 = !DILocalVariable(name: "mask", arg: 2, scope: !8420, file: !1227, line: 421, type: !626)
!8424 = !DILocalVariable(name: "value", arg: 3, scope: !8420, file: !1227, line: 422, type: !621)
!8425 = !DILocalVariable(name: "cfg", scope: !8420, file: !1227, line: 424, type: !8412)
!8426 = !DILocalVariable(name: "gpio", scope: !8420, file: !1227, line: 425, type: !1162)
!8427 = !DILocalVariable(name: "port_value", scope: !8420, file: !1227, line: 426, type: !162)
!8428 = !DILocation(line: 0, scope: !8420)
!8429 = !DILocation(line: 424, column: 45, scope: !8420)
!8430 = !DILocation(line: 425, column: 44, scope: !8420)
!8431 = !DILocation(line: 430, column: 15, scope: !8420)
!8432 = !DILocation(line: 431, column: 46, scope: !8420)
!8433 = !DILocation(line: 431, column: 44, scope: !8420)
!8434 = !DILocation(line: 431, column: 61, scope: !8420)
!8435 = !DILocation(line: 431, column: 53, scope: !8420)
!8436 = !DILocation(line: 431, column: 2, scope: !8420)
!8437 = !DILocation(line: 435, column: 2, scope: !8420)
!8438 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1227, file: !1227, line: 438, type: !1120, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8439)
!8439 = !{!8440, !8441, !8442, !8443}
!8440 = !DILocalVariable(name: "dev", arg: 1, scope: !8438, file: !1227, line: 438, type: !1095)
!8441 = !DILocalVariable(name: "pins", arg: 2, scope: !8438, file: !1227, line: 439, type: !626)
!8442 = !DILocalVariable(name: "cfg", scope: !8438, file: !1227, line: 441, type: !8412)
!8443 = !DILocalVariable(name: "gpio", scope: !8438, file: !1227, line: 442, type: !1162)
!8444 = !DILocation(line: 0, scope: !8438)
!8445 = !DILocation(line: 441, column: 45, scope: !8438)
!8446 = !DILocation(line: 442, column: 44, scope: !8438)
!8447 = !DILocation(line: 448, column: 2, scope: !8438)
!8448 = !DILocation(line: 450, column: 2, scope: !8438)
!8449 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1227, file: !1227, line: 453, type: !1120, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8450)
!8450 = !{!8451, !8452, !8453, !8454}
!8451 = !DILocalVariable(name: "dev", arg: 1, scope: !8449, file: !1227, line: 453, type: !1095)
!8452 = !DILocalVariable(name: "pins", arg: 2, scope: !8449, file: !1227, line: 454, type: !626)
!8453 = !DILocalVariable(name: "cfg", scope: !8449, file: !1227, line: 456, type: !8412)
!8454 = !DILocalVariable(name: "gpio", scope: !8449, file: !1227, line: 457, type: !1162)
!8455 = !DILocation(line: 0, scope: !8449)
!8456 = !DILocation(line: 456, column: 45, scope: !8449)
!8457 = !DILocation(line: 457, column: 44, scope: !8449)
!8458 = !DILocation(line: 467, column: 2, scope: !8449)
!8459 = !DILocation(line: 470, column: 2, scope: !8449)
!8460 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1227, file: !1227, line: 473, type: !1120, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8461)
!8461 = !{!8462, !8463, !8464, !8465}
!8462 = !DILocalVariable(name: "dev", arg: 1, scope: !8460, file: !1227, line: 473, type: !1095)
!8463 = !DILocalVariable(name: "pins", arg: 2, scope: !8460, file: !1227, line: 474, type: !626)
!8464 = !DILocalVariable(name: "cfg", scope: !8460, file: !1227, line: 476, type: !8412)
!8465 = !DILocalVariable(name: "gpio", scope: !8460, file: !1227, line: 477, type: !1162)
!8466 = !DILocation(line: 0, scope: !8460)
!8467 = !DILocation(line: 476, column: 45, scope: !8460)
!8468 = !DILocation(line: 477, column: 44, scope: !8460)
!8469 = !DILocation(line: 484, column: 2, scope: !8460)
!8470 = !DILocation(line: 487, column: 2, scope: !8460)
!8471 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1227, file: !1227, line: 594, type: !1126, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8472)
!8472 = !{!8473, !8474, !8475, !8476, !8477, !8478, !8480, !8481, !8482}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8471, file: !1227, line: 594, type: !1095)
!8474 = !DILocalVariable(name: "pin", arg: 2, scope: !8471, file: !1227, line: 595, type: !614)
!8475 = !DILocalVariable(name: "mode", arg: 3, scope: !8471, file: !1227, line: 596, type: !579)
!8476 = !DILocalVariable(name: "trig", arg: 4, scope: !8471, file: !1227, line: 597, type: !585)
!8477 = !DILocalVariable(name: "cfg", scope: !8471, file: !1227, line: 599, type: !8412)
!8478 = !DILocalVariable(name: "data", scope: !8471, file: !1227, line: 600, type: !8479)
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!8480 = !DILocalVariable(name: "edge", scope: !8471, file: !1227, line: 601, type: !107)
!8481 = !DILocalVariable(name: "err", scope: !8471, file: !1227, line: 602, type: !107)
!8482 = !DILabel(scope: !8471, name: "exit", file: !1227, line: 643)
!8483 = !DILocation(line: 0, scope: !8471)
!8484 = !DILocation(line: 599, column: 45, scope: !8471)
!8485 = !DILocation(line: 604, column: 6, scope: !8471)
!8486 = !DILocation(line: 605, column: 34, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !1227, line: 605, column: 7)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !1227, line: 604, column: 38)
!8489 = distinct !DILexicalBlock(scope: !8471, file: !1227, line: 604, column: 6)
!8490 = !DILocation(line: 605, column: 7, scope: !8487)
!8491 = !DILocation(line: 605, column: 47, scope: !8487)
!8492 = !DILocation(line: 605, column: 39, scope: !8487)
!8493 = !DILocation(line: 605, column: 7, scope: !8488)
!8494 = !DILocation(line: 606, column: 4, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8487, file: !1227, line: 605, column: 53)
!8496 = !DILocation(line: 607, column: 4, scope: !8495)
!8497 = !DILocation(line: 608, column: 4, scope: !8495)
!8498 = !DILocation(line: 609, column: 3, scope: !8495)
!8499 = !DILocation(line: 600, column: 38, scope: !8471)
!8500 = !DILocation(line: 620, column: 30, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8471, file: !1227, line: 620, column: 6)
!8502 = !DILocation(line: 620, column: 6, scope: !8501)
!8503 = !DILocation(line: 620, column: 57, scope: !8501)
!8504 = !DILocation(line: 620, column: 6, scope: !8471)
!8505 = !DILocation(line: 625, column: 29, scope: !8471)
!8506 = !DILocation(line: 625, column: 2, scope: !8471)
!8507 = !DILocation(line: 627, column: 2, scope: !8471)
!8508 = !DILocation(line: 630, column: 3, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8471, file: !1227, line: 627, column: 16)
!8510 = !DILocation(line: 633, column: 3, scope: !8509)
!8511 = !DILocation(line: 636, column: 3, scope: !8509)
!8512 = !DILocation(line: 639, column: 2, scope: !8471)
!8513 = !DILocation(line: 641, column: 2, scope: !8471)
!8514 = !DILocation(line: 643, column: 1, scope: !8471)
!8515 = !DILocation(line: 644, column: 2, scope: !8471)
!8516 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1227, file: !1227, line: 647, type: !1130, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8517)
!8517 = !{!8518, !8519, !8520, !8521}
!8518 = !DILocalVariable(name: "dev", arg: 1, scope: !8516, file: !1227, line: 647, type: !1095)
!8519 = !DILocalVariable(name: "callback", arg: 2, scope: !8516, file: !1227, line: 648, type: !1132)
!8520 = !DILocalVariable(name: "set", arg: 3, scope: !8516, file: !1227, line: 649, type: !136)
!8521 = !DILocalVariable(name: "data", scope: !8516, file: !1227, line: 651, type: !8479)
!8522 = !DILocation(line: 0, scope: !8516)
!8523 = !DILocation(line: 651, column: 38, scope: !8516)
!8524 = !DILocation(line: 653, column: 37, scope: !8516)
!8525 = !DILocation(line: 653, column: 9, scope: !8516)
!8526 = !DILocation(line: 653, column: 2, scope: !8516)
!8527 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8528, file: !8528, line: 38, type: !8529, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8532)
!8528 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!107, !8531, !1132, !136}
!8531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!8532 = !{!8533, !8534, !8535}
!8533 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8527, file: !8528, line: 38, type: !8531)
!8534 = !DILocalVariable(name: "callback", arg: 2, scope: !8527, file: !8528, line: 39, type: !1132)
!8535 = !DILocalVariable(name: "set", arg: 3, scope: !8527, file: !8528, line: 40, type: !136)
!8536 = !DILocation(line: 0, scope: !8527)
!8537 = !DILocation(line: 45, column: 7, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8527, file: !8528, line: 45, column: 6)
!8539 = !DILocation(line: 45, column: 6, scope: !8527)
!8540 = !DILocation(line: 46, column: 56, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8528, line: 46, column: 7)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !8528, line: 45, column: 38)
!8543 = !DILocation(line: 46, column: 8, scope: !8541)
!8544 = !DILocation(line: 46, column: 7, scope: !8542)
!8545 = !DILocation(line: 51, column: 13, scope: !8538)
!8546 = !DILocation(line: 56, column: 43, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !8528, line: 55, column: 11)
!8548 = distinct !DILexicalBlock(scope: !8527, file: !8528, line: 55, column: 6)
!8549 = !DILocation(line: 56, column: 3, scope: !8547)
!8550 = !DILocation(line: 57, column: 2, scope: !8547)
!8551 = !DILocation(line: 60, column: 1, scope: !8527)
!8552 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !646, file: !646, line: 261, type: !8553, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8555)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!136, !8531}
!8555 = !{!8556}
!8556 = !DILocalVariable(name: "list", arg: 1, scope: !8552, file: !646, line: 261, type: !8531)
!8557 = !DILocation(line: 0, scope: !8552)
!8558 = !DILocation(line: 261, column: 1, scope: !8552)
!8559 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !646, file: !646, line: 417, type: !8560, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8562)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{!136, !8531, !1297}
!8562 = !{!8563, !8564, !8565, !8566}
!8563 = !DILocalVariable(name: "list", arg: 1, scope: !8559, file: !646, line: 417, type: !8531)
!8564 = !DILocalVariable(name: "node", arg: 2, scope: !8559, file: !646, line: 417, type: !1297)
!8565 = !DILocalVariable(name: "prev", scope: !8559, file: !646, line: 417, type: !1297)
!8566 = !DILocalVariable(name: "test", scope: !8559, file: !646, line: 417, type: !1297)
!8567 = !DILocation(line: 0, scope: !8559)
!8568 = !DILocation(line: 417, column: 1, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8559, file: !646, line: 417, column: 1)
!8570 = !DILocation(line: 417, column: 1, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8569, file: !646, line: 417, column: 1)
!8572 = !DILocation(line: 417, column: 1, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !646, line: 417, column: 1)
!8574 = distinct !DILexicalBlock(scope: !8571, file: !646, line: 417, column: 1)
!8575 = !DILocation(line: 417, column: 1, scope: !8574)
!8576 = distinct !{!8576, !8568, !8568}
!8577 = !DILocation(line: 417, column: 1, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8573, file: !646, line: 417, column: 1)
!8579 = !DILocation(line: 417, column: 1, scope: !8559)
!8580 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !646, file: !646, line: 298, type: !8581, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8583)
!8581 = !DISubroutineType(types: !8582)
!8582 = !{null, !8531, !1297}
!8583 = !{!8584, !8585}
!8584 = !DILocalVariable(name: "list", arg: 1, scope: !8580, file: !646, line: 298, type: !8531)
!8585 = !DILocalVariable(name: "node", arg: 2, scope: !8580, file: !646, line: 298, type: !1297)
!8586 = !DILocation(line: 0, scope: !8580)
!8587 = !DILocation(line: 298, column: 1, scope: !8580)
!8588 = !DILocation(line: 298, column: 1, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8580, file: !646, line: 298, column: 1)
!8590 = !DILocation(line: 298, column: 1, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8589, file: !646, line: 298, column: 1)
!8592 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !646, file: !646, line: 231, type: !8593, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!1297, !8531}
!8595 = !{!8596}
!8596 = !DILocalVariable(name: "list", arg: 1, scope: !8592, file: !646, line: 231, type: !8531)
!8597 = !DILocation(line: 0, scope: !8592)
!8598 = !DILocation(line: 233, column: 15, scope: !8592)
!8599 = !DILocation(line: 233, column: 2, scope: !8592)
!8600 = distinct !DISubprogram(name: "z_snode_next_set", scope: !646, file: !646, line: 209, type: !8601, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8603)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{null, !1297, !1297}
!8603 = !{!8604, !8605}
!8604 = !DILocalVariable(name: "parent", arg: 1, scope: !8600, file: !646, line: 209, type: !1297)
!8605 = !DILocalVariable(name: "child", arg: 2, scope: !8600, file: !646, line: 209, type: !1297)
!8606 = !DILocation(line: 0, scope: !8600)
!8607 = !DILocation(line: 211, column: 10, scope: !8600)
!8608 = !DILocation(line: 211, column: 15, scope: !8600)
!8609 = !DILocation(line: 212, column: 1, scope: !8600)
!8610 = distinct !DISubprogram(name: "z_slist_head_set", scope: !646, file: !646, line: 214, type: !8581, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8611)
!8611 = !{!8612, !8613}
!8612 = !DILocalVariable(name: "list", arg: 1, scope: !8610, file: !646, line: 214, type: !8531)
!8613 = !DILocalVariable(name: "node", arg: 2, scope: !8610, file: !646, line: 214, type: !1297)
!8614 = !DILocation(line: 0, scope: !8610)
!8615 = !DILocation(line: 216, column: 8, scope: !8610)
!8616 = !DILocation(line: 216, column: 13, scope: !8610)
!8617 = !DILocation(line: 217, column: 1, scope: !8610)
!8618 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !646, file: !646, line: 243, type: !8593, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8619)
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "list", arg: 1, scope: !8618, file: !646, line: 243, type: !8531)
!8621 = !DILocation(line: 0, scope: !8618)
!8622 = !DILocation(line: 245, column: 15, scope: !8618)
!8623 = !DILocation(line: 245, column: 2, scope: !8618)
!8624 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !646, file: !646, line: 219, type: !8581, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8625)
!8625 = !{!8626, !8627}
!8626 = !DILocalVariable(name: "list", arg: 1, scope: !8624, file: !646, line: 219, type: !8531)
!8627 = !DILocalVariable(name: "node", arg: 2, scope: !8624, file: !646, line: 219, type: !1297)
!8628 = !DILocation(line: 0, scope: !8624)
!8629 = !DILocation(line: 221, column: 8, scope: !8624)
!8630 = !DILocation(line: 221, column: 13, scope: !8624)
!8631 = !DILocation(line: 222, column: 1, scope: !8624)
!8632 = distinct !DISubprogram(name: "sys_slist_remove", scope: !646, file: !646, line: 401, type: !8633, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8635)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{null, !8531, !1297, !1297}
!8635 = !{!8636, !8637, !8638}
!8636 = !DILocalVariable(name: "list", arg: 1, scope: !8632, file: !646, line: 401, type: !8531)
!8637 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8632, file: !646, line: 401, type: !1297)
!8638 = !DILocalVariable(name: "node", arg: 3, scope: !8632, file: !646, line: 401, type: !1297)
!8639 = !DILocation(line: 0, scope: !8632)
!8640 = !DILocation(line: 401, column: 1, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8632, file: !646, line: 401, column: 1)
!8642 = !DILocation(line: 0, scope: !8641)
!8643 = !DILocation(line: 401, column: 1, scope: !8632)
!8644 = !DILocation(line: 401, column: 1, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !646, line: 401, column: 1)
!8646 = !DILocation(line: 401, column: 1, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8645, file: !646, line: 401, column: 1)
!8648 = !DILocation(line: 401, column: 1, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8647, file: !646, line: 401, column: 1)
!8650 = !DILocation(line: 401, column: 1, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8641, file: !646, line: 401, column: 1)
!8652 = !DILocation(line: 401, column: 1, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8651, file: !646, line: 401, column: 1)
!8654 = !DILocation(line: 401, column: 1, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8653, file: !646, line: 401, column: 1)
!8656 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !646, file: !646, line: 285, type: !8657, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8659)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!1297, !1297}
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "node", arg: 1, scope: !8656, file: !646, line: 285, type: !1297)
!8661 = !DILocation(line: 0, scope: !8656)
!8662 = !DILocation(line: 285, column: 1, scope: !8656)
!8663 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !646, file: !646, line: 274, type: !8657, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8664)
!8664 = !{!8665}
!8665 = !DILocalVariable(name: "node", arg: 1, scope: !8663, file: !646, line: 274, type: !1297)
!8666 = !DILocation(line: 0, scope: !8663)
!8667 = !DILocation(line: 274, column: 1, scope: !8663)
!8668 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !646, file: !646, line: 204, type: !8657, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8669)
!8669 = !{!8670}
!8670 = !DILocalVariable(name: "node", arg: 1, scope: !8668, file: !646, line: 204, type: !1297)
!8671 = !DILocation(line: 0, scope: !8668)
!8672 = !DILocation(line: 206, column: 15, scope: !8668)
!8673 = !DILocation(line: 206, column: 2, scope: !8668)
!8674 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1227, file: !1227, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8675)
!8675 = !{!8676, !8677, !8678}
!8676 = !DILocalVariable(name: "pin", arg: 1, scope: !8674, file: !1227, line: 342, type: !107)
!8677 = !DILocalVariable(name: "line", scope: !8674, file: !1227, line: 344, type: !162)
!8678 = !DILocalVariable(name: "port", scope: !8674, file: !1227, line: 345, type: !107)
!8679 = !DILocation(line: 0, scope: !8674)
!8680 = !DILocation(line: 344, column: 18, scope: !8674)
!8681 = !{i32 983040, i32 0}
!8682 = !DILocation(line: 356, column: 9, scope: !8674)
!8683 = !DILocation(line: 370, column: 2, scope: !8674)
!8684 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1227, file: !1227, line: 37, type: !799, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8685)
!8685 = !{!8686, !8687, !8688}
!8686 = !DILocalVariable(name: "line", arg: 1, scope: !8684, file: !1227, line: 37, type: !107)
!8687 = !DILocalVariable(name: "arg", arg: 2, scope: !8684, file: !1227, line: 37, type: !102)
!8688 = !DILocalVariable(name: "data", scope: !8684, file: !1227, line: 39, type: !8479)
!8689 = !DILocation(line: 0, scope: !8684)
!8690 = !DILocation(line: 41, column: 29, scope: !8684)
!8691 = !DILocation(line: 41, column: 39, scope: !8684)
!8692 = !DILocation(line: 41, column: 44, scope: !8684)
!8693 = !DILocation(line: 41, column: 2, scope: !8684)
!8694 = !DILocation(line: 42, column: 1, scope: !8684)
!8695 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1227, file: !1227, line: 376, type: !8696, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8698)
!8696 = !DISubroutineType(types: !8697)
!8697 = !{!107, !107, !107}
!8698 = !{!8699, !8700, !8701, !8703, !8704}
!8699 = !DILocalVariable(name: "port", arg: 1, scope: !8695, file: !1227, line: 376, type: !107)
!8700 = !DILocalVariable(name: "pin", arg: 2, scope: !8695, file: !1227, line: 376, type: !107)
!8701 = !DILocalVariable(name: "clk", scope: !8695, file: !1227, line: 386, type: !8702)
!8702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!8703 = !DILocalVariable(name: "pclken", scope: !8695, file: !1227, line: 387, type: !1332)
!8704 = !DILocalVariable(name: "ret", scope: !8695, file: !1227, line: 396, type: !107)
!8705 = !DILocation(line: 0, scope: !8695)
!8706 = !DILocation(line: 387, column: 2, scope: !8695)
!8707 = !DILocation(line: 387, column: 22, scope: !8695)
!8708 = !DILocation(line: 399, column: 8, scope: !8695)
!8709 = !DILocation(line: 400, column: 10, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8695, file: !1227, line: 400, column: 6)
!8711 = !DILocation(line: 400, column: 6, scope: !8695)
!8712 = !DILocation(line: 405, column: 2, scope: !8695)
!8713 = !DILocation(line: 407, column: 2, scope: !8695)
!8714 = !DILocation(line: 408, column: 1, scope: !8695)
!8715 = distinct !DISubprogram(name: "clock_control_on", scope: !876, file: !876, line: 123, type: !1192, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719}
!8717 = !DILocalVariable(name: "dev", arg: 1, scope: !8715, file: !876, line: 123, type: !1095)
!8718 = !DILocalVariable(name: "sys", arg: 2, scope: !8715, file: !876, line: 124, type: !949)
!8719 = !DILocalVariable(name: "api", scope: !8715, file: !876, line: 126, type: !1185)
!8720 = !DILocation(line: 0, scope: !8715)
!8721 = !DILocation(line: 127, column: 49, scope: !8715)
!8722 = !DILocation(line: 129, column: 14, scope: !8715)
!8723 = !DILocation(line: 129, column: 9, scope: !8715)
!8724 = !DILocation(line: 129, column: 2, scope: !8715)
!8725 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1227, file: !1227, line: 311, type: !7889, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8726)
!8726 = !{!8727, !8728, !8729}
!8727 = !DILocalVariable(name: "port", arg: 1, scope: !8725, file: !1227, line: 311, type: !107)
!8728 = !DILocalVariable(name: "pin", arg: 2, scope: !8725, file: !1227, line: 311, type: !107)
!8729 = !DILocalVariable(name: "line", scope: !8725, file: !1227, line: 313, type: !162)
!8730 = !DILocation(line: 0, scope: !8725)
!8731 = !DILocation(line: 313, column: 18, scope: !8725)
!8732 = !DILocation(line: 337, column: 2, scope: !8725)
!8733 = !DILocation(line: 340, column: 1, scope: !8725)
!8734 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1227, file: !1227, line: 295, type: !8735, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8737)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!162, !107}
!8737 = !{!8738}
!8738 = !DILocalVariable(name: "pin", arg: 1, scope: !8734, file: !1227, line: 295, type: !107)
!8739 = !DILocation(line: 0, scope: !8734)
!8740 = !DILocation(line: 307, column: 46, scope: !8734)
!8741 = !DILocation(line: 307, column: 27, scope: !8734)
!8742 = !DILocation(line: 307, column: 32, scope: !8734)
!8743 = !DILocation(line: 307, column: 14, scope: !8734)
!8744 = !DILocation(line: 307, column: 39, scope: !8734)
!8745 = !DILocation(line: 307, column: 2, scope: !8734)
!8746 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !8747, file: !8747, line: 621, type: !8748, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8750)
!8747 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8748 = !DISubroutineType(types: !8749)
!8749 = !{null, !162, !162}
!8750 = !{!8751, !8752}
!8751 = !DILocalVariable(name: "Port", arg: 1, scope: !8746, file: !8747, line: 621, type: !162)
!8752 = !DILocalVariable(name: "Line", arg: 2, scope: !8746, file: !8747, line: 621, type: !162)
!8753 = !DILocation(line: 0, scope: !8746)
!8754 = !DILocation(line: 623, column: 3, scope: !8746)
!8755 = !DILocalVariable(name: "value", arg: 1, scope: !8756, file: !6058, line: 373, type: !162)
!8756 = distinct !DISubprogram(name: "__RBIT", scope: !6058, file: !6058, line: 373, type: !7027, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8757)
!8757 = !{!8755, !8758}
!8758 = !DILocalVariable(name: "result", scope: !8756, file: !6058, line: 375, type: !162)
!8759 = !DILocation(line: 0, scope: !8756, inlinedAt: !8760)
!8760 = distinct !DILocation(line: 623, column: 3, scope: !8746)
!8761 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !8760)
!8762 = !{i64 2448491}
!8763 = !DILocalVariable(name: "value", arg: 1, scope: !8764, file: !6058, line: 403, type: !162)
!8764 = distinct !DISubprogram(name: "__CLZ", scope: !6058, file: !6058, line: 403, type: !8765, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8767)
!8765 = !DISubroutineType(types: !8766)
!8766 = !{!133, !162}
!8767 = !{!8763}
!8768 = !DILocation(line: 0, scope: !8764, inlinedAt: !8769)
!8769 = distinct !DILocation(line: 623, column: 3, scope: !8746)
!8770 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !8769)
!8771 = !DILocation(line: 624, column: 1, scope: !8746)
!8772 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8528, file: !8528, line: 69, type: !8773, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{null, !8531, !1095, !162}
!8775 = !{!8776, !8777, !8778, !8779, !8780}
!8776 = !DILocalVariable(name: "list", arg: 1, scope: !8772, file: !8528, line: 69, type: !8531)
!8777 = !DILocalVariable(name: "port", arg: 2, scope: !8772, file: !8528, line: 70, type: !1095)
!8778 = !DILocalVariable(name: "pins", arg: 3, scope: !8772, file: !8528, line: 71, type: !162)
!8779 = !DILocalVariable(name: "cb", scope: !8772, file: !8528, line: 73, type: !1132)
!8780 = !DILocalVariable(name: "tmp", scope: !8772, file: !8528, line: 73, type: !1132)
!8781 = !DILocation(line: 0, scope: !8772)
!8782 = !DILocation(line: 75, column: 2, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8772, file: !8528, line: 75, column: 2)
!8784 = !DILocation(line: 0, scope: !8783)
!8785 = !DILocation(line: 76, column: 11, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !8528, line: 76, column: 7)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !8528, line: 75, column: 57)
!8788 = distinct !DILexicalBlock(scope: !8783, file: !8528, line: 75, column: 2)
!8789 = !DILocation(line: 76, column: 20, scope: !8786)
!8790 = !DILocation(line: 76, column: 7, scope: !8787)
!8791 = !DILocation(line: 78, column: 8, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8786, file: !8528, line: 76, column: 28)
!8793 = !DILocation(line: 78, column: 4, scope: !8792)
!8794 = !DILocation(line: 79, column: 3, scope: !8792)
!8795 = !DILocation(line: 75, column: 2, scope: !8788)
!8796 = !DILocation(line: 81, column: 1, scope: !8772)
!8797 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !8747, file: !8747, line: 721, type: !7027, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8798)
!8798 = !{!8799}
!8799 = !DILocalVariable(name: "Line", arg: 1, scope: !8797, file: !8747, line: 721, type: !162)
!8800 = !DILocation(line: 0, scope: !8797)
!8801 = !DILocation(line: 723, column: 21, scope: !8797)
!8802 = !DILocation(line: 0, scope: !8756, inlinedAt: !8803)
!8803 = distinct !DILocation(line: 723, column: 76, scope: !8797)
!8804 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !8803)
!8805 = !DILocation(line: 0, scope: !8764, inlinedAt: !8806)
!8806 = distinct !DILocation(line: 723, column: 76, scope: !8797)
!8807 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !8806)
!8808 = !DILocation(line: 723, column: 73, scope: !8797)
!8809 = !DILocation(line: 723, column: 3, scope: !8797)
!8810 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8811, file: !8811, line: 913, type: !8812, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8814)
!8811 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8812 = !DISubroutineType(types: !8813)
!8813 = !{null, !1162, !162}
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8810, file: !8811, line: 913, type: !1162)
!8816 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8810, file: !8811, line: 913, type: !162)
!8817 = !DILocation(line: 0, scope: !8810)
!8818 = !DILocation(line: 918, column: 3, scope: !8810)
!8819 = !DILocation(line: 920, column: 1, scope: !8810)
!8820 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8811, file: !8811, line: 825, type: !8821, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8823)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{!162, !1162}
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8820, file: !8811, line: 825, type: !1162)
!8825 = !DILocation(line: 0, scope: !8820)
!8826 = !DILocation(line: 827, column: 21, scope: !8820)
!8827 = !DILocation(line: 827, column: 3, scope: !8820)
!8828 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8811, file: !8811, line: 814, type: !8812, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8829)
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8828, file: !8811, line: 814, type: !1162)
!8831 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8828, file: !8811, line: 814, type: !162)
!8832 = !DILocation(line: 0, scope: !8828)
!8833 = !DILocation(line: 816, column: 3, scope: !8828)
!8834 = !DILocation(line: 817, column: 1, scope: !8828)
!8835 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8811, file: !8811, line: 773, type: !8821, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8836)
!8836 = !{!8837}
!8837 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8835, file: !8811, line: 773, type: !1162)
!8838 = !DILocation(line: 0, scope: !8835)
!8839 = !DILocation(line: 775, column: 21, scope: !8835)
!8840 = !DILocation(line: 775, column: 3, scope: !8835)
!8841 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1227, file: !1227, line: 47, type: !8842, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8844)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!107, !615, !2501}
!8844 = !{!8845, !8846}
!8845 = !DILocalVariable(name: "flags", arg: 1, scope: !8841, file: !1227, line: 47, type: !615)
!8846 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8841, file: !1227, line: 47, type: !2501)
!8847 = !DILocation(line: 0, scope: !8841)
!8848 = !DILocation(line: 50, column: 13, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8841, file: !1227, line: 50, column: 6)
!8850 = !DILocation(line: 50, column: 28, scope: !8849)
!8851 = !DILocation(line: 50, column: 6, scope: !8841)
!8852 = !DILocation(line: 53, column: 11, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !1227, line: 50, column: 34)
!8854 = !DILocation(line: 55, column: 14, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8853, file: !1227, line: 55, column: 7)
!8856 = !DILocation(line: 55, column: 35, scope: !8855)
!8857 = !DILocation(line: 55, column: 7, scope: !8853)
!8858 = !DILocation(line: 56, column: 14, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !1227, line: 56, column: 8)
!8860 = distinct !DILexicalBlock(scope: !8855, file: !1227, line: 55, column: 41)
!8861 = !DILocation(line: 56, column: 8, scope: !8860)
!8862 = !DILocation(line: 0, scope: !8855)
!8863 = !DILocation(line: 66, column: 14, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8853, file: !1227, line: 66, column: 7)
!8865 = !DILocation(line: 66, column: 30, scope: !8864)
!8866 = !DILocation(line: 66, column: 7, scope: !8853)
!8867 = !DILocation(line: 67, column: 12, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !1227, line: 66, column: 36)
!8869 = !DILocation(line: 68, column: 3, scope: !8868)
!8870 = !DILocation(line: 68, column: 21, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8864, file: !1227, line: 68, column: 14)
!8872 = !DILocation(line: 68, column: 39, scope: !8871)
!8873 = !DILocation(line: 68, column: 14, scope: !8864)
!8874 = !DILocation(line: 69, column: 12, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !1227, line: 68, column: 45)
!8876 = !DILocation(line: 70, column: 3, scope: !8875)
!8877 = !DILocation(line: 72, column: 21, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8849, file: !1227, line: 72, column: 14)
!8879 = !DILocation(line: 72, column: 35, scope: !8878)
!8880 = !DILocation(line: 72, column: 14, scope: !8849)
!8881 = !DILocation(line: 77, column: 14, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !1227, line: 77, column: 7)
!8883 = distinct !DILexicalBlock(scope: !8878, file: !1227, line: 72, column: 41)
!8884 = !DILocation(line: 77, column: 30, scope: !8882)
!8885 = !DILocation(line: 77, column: 7, scope: !8883)
!8886 = !DILocation(line: 0, scope: !8849)
!8887 = !DILocation(line: 90, column: 1, scope: !8841)
!8888 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1227, file: !1227, line: 157, type: !8889, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8891)
!8889 = !DISubroutineType(types: !8890)
!8890 = !{null, !1095, !107, !107, !107}
!8891 = !{!8892, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900, !8901, !8902}
!8892 = !DILocalVariable(name: "dev", arg: 1, scope: !8888, file: !1227, line: 157, type: !1095)
!8893 = !DILocalVariable(name: "pin", arg: 2, scope: !8888, file: !1227, line: 157, type: !107)
!8894 = !DILocalVariable(name: "conf", arg: 3, scope: !8888, file: !1227, line: 158, type: !107)
!8895 = !DILocalVariable(name: "func", arg: 4, scope: !8888, file: !1227, line: 158, type: !107)
!8896 = !DILocalVariable(name: "cfg", scope: !8888, file: !1227, line: 160, type: !8412)
!8897 = !DILocalVariable(name: "gpio", scope: !8888, file: !1227, line: 161, type: !1162)
!8898 = !DILocalVariable(name: "pin_ll", scope: !8888, file: !1227, line: 163, type: !107)
!8899 = !DILocalVariable(name: "mode", scope: !8888, file: !1227, line: 227, type: !32)
!8900 = !DILocalVariable(name: "otype", scope: !8888, file: !1227, line: 227, type: !32)
!8901 = !DILocalVariable(name: "ospeed", scope: !8888, file: !1227, line: 227, type: !32)
!8902 = !DILocalVariable(name: "pupd", scope: !8888, file: !1227, line: 227, type: !32)
!8903 = !DILocation(line: 0, scope: !8888)
!8904 = !DILocation(line: 160, column: 45, scope: !8888)
!8905 = !DILocation(line: 161, column: 44, scope: !8888)
!8906 = !DILocation(line: 163, column: 15, scope: !8888)
!8907 = !DILocation(line: 229, column: 14, scope: !8888)
!8908 = !DILocation(line: 246, column: 47, scope: !8888)
!8909 = !DILocation(line: 246, column: 2, scope: !8888)
!8910 = !DILocation(line: 248, column: 43, scope: !8888)
!8911 = !DILocation(line: 248, column: 2, scope: !8888)
!8912 = !DILocation(line: 250, column: 40, scope: !8888)
!8913 = !DILocation(line: 250, column: 2, scope: !8888)
!8914 = !DILocation(line: 252, column: 11, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8888, file: !1227, line: 252, column: 6)
!8916 = !DILocation(line: 252, column: 6, scope: !8888)
!8917 = !DILocation(line: 253, column: 11, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !1227, line: 253, column: 7)
!8919 = distinct !DILexicalBlock(scope: !8915, file: !1227, line: 252, column: 36)
!8920 = !DILocation(line: 253, column: 7, scope: !8919)
!8921 = !DILocation(line: 254, column: 4, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8918, file: !1227, line: 253, column: 16)
!8923 = !DILocation(line: 255, column: 3, scope: !8922)
!8924 = !DILocation(line: 256, column: 4, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !1227, line: 255, column: 10)
!8926 = !DILocation(line: 260, column: 40, scope: !8888)
!8927 = !DILocation(line: 260, column: 2, scope: !8888)
!8928 = !DILocation(line: 265, column: 1, scope: !8888)
!8929 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1227, file: !1227, line: 137, type: !8735, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8930)
!8930 = !{!8931, !8932}
!8931 = !DILocalVariable(name: "pin", arg: 1, scope: !8929, file: !1227, line: 137, type: !107)
!8932 = !DILocalVariable(name: "pinval", scope: !8929, file: !1227, line: 139, type: !162)
!8933 = !DILocation(line: 0, scope: !8929)
!8934 = !DILocation(line: 149, column: 13, scope: !8929)
!8935 = !DILocation(line: 151, column: 2, scope: !8929)
!8936 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8811, file: !8811, line: 343, type: !8937, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8939)
!8937 = !DISubroutineType(types: !8938)
!8938 = !{null, !1162, !162, !162}
!8939 = !{!8940, !8941, !8942}
!8940 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8936, file: !8811, line: 343, type: !1162)
!8941 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8936, file: !8811, line: 343, type: !162)
!8942 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8936, file: !8811, line: 343, type: !162)
!8943 = !DILocation(line: 0, scope: !8936)
!8944 = !DILocation(line: 345, column: 3, scope: !8936)
!8945 = !DILocation(line: 346, column: 1, scope: !8936)
!8946 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8811, file: !8811, line: 414, type: !8937, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8947)
!8947 = !{!8948, !8949, !8950}
!8948 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8946, file: !8811, line: 414, type: !1162)
!8949 = !DILocalVariable(name: "Pin", arg: 2, scope: !8946, file: !8811, line: 414, type: !162)
!8950 = !DILocalVariable(name: "Speed", arg: 3, scope: !8946, file: !8811, line: 414, type: !162)
!8951 = !DILocation(line: 0, scope: !8946)
!8952 = !DILocation(line: 416, column: 3, scope: !8946)
!8953 = !DILocation(line: 0, scope: !8756, inlinedAt: !8954)
!8954 = distinct !DILocation(line: 416, column: 3, scope: !8946)
!8955 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !8954)
!8956 = !DILocation(line: 0, scope: !8764, inlinedAt: !8957)
!8957 = distinct !DILocation(line: 416, column: 3, scope: !8946)
!8958 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !8957)
!8959 = !DILocation(line: 0, scope: !8756, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 416, column: 3, scope: !8946)
!8961 = !DILocation(line: 0, scope: !8764, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 416, column: 3, scope: !8946)
!8963 = !DILocation(line: 418, column: 1, scope: !8946)
!8964 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8811, file: !8811, line: 485, type: !8937, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8965)
!8965 = !{!8966, !8967, !8968}
!8966 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8964, file: !8811, line: 485, type: !1162)
!8967 = !DILocalVariable(name: "Pin", arg: 2, scope: !8964, file: !8811, line: 485, type: !162)
!8968 = !DILocalVariable(name: "Pull", arg: 3, scope: !8964, file: !8811, line: 485, type: !162)
!8969 = !DILocation(line: 0, scope: !8964)
!8970 = !DILocation(line: 487, column: 3, scope: !8964)
!8971 = !DILocation(line: 0, scope: !8756, inlinedAt: !8972)
!8972 = distinct !DILocation(line: 487, column: 3, scope: !8964)
!8973 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !8972)
!8974 = !DILocation(line: 0, scope: !8764, inlinedAt: !8975)
!8975 = distinct !DILocation(line: 487, column: 3, scope: !8964)
!8976 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !8975)
!8977 = !DILocation(line: 0, scope: !8756, inlinedAt: !8978)
!8978 = distinct !DILocation(line: 487, column: 3, scope: !8964)
!8979 = !DILocation(line: 0, scope: !8764, inlinedAt: !8980)
!8980 = distinct !DILocation(line: 487, column: 3, scope: !8964)
!8981 = !DILocation(line: 488, column: 1, scope: !8964)
!8982 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8811, file: !8811, line: 557, type: !8937, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8983)
!8983 = !{!8984, !8985, !8986}
!8984 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8982, file: !8811, line: 557, type: !1162)
!8985 = !DILocalVariable(name: "Pin", arg: 2, scope: !8982, file: !8811, line: 557, type: !162)
!8986 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8982, file: !8811, line: 557, type: !162)
!8987 = !DILocation(line: 0, scope: !8982)
!8988 = !DILocation(line: 559, column: 3, scope: !8982)
!8989 = !DILocation(line: 0, scope: !8756, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 559, column: 3, scope: !8982)
!8991 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !8990)
!8992 = !DILocation(line: 0, scope: !8764, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 559, column: 3, scope: !8982)
!8994 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !8993)
!8995 = !DILocation(line: 0, scope: !8756, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 559, column: 3, scope: !8982)
!8997 = !DILocation(line: 0, scope: !8764, inlinedAt: !8998)
!8998 = distinct !DILocation(line: 559, column: 3, scope: !8982)
!8999 = !DILocation(line: 561, column: 1, scope: !8982)
!9000 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8811, file: !8811, line: 634, type: !8937, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9001)
!9001 = !{!9002, !9003, !9004}
!9002 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9000, file: !8811, line: 634, type: !1162)
!9003 = !DILocalVariable(name: "Pin", arg: 2, scope: !9000, file: !8811, line: 634, type: !162)
!9004 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9000, file: !8811, line: 634, type: !162)
!9005 = !DILocation(line: 0, scope: !9000)
!9006 = !DILocation(line: 636, column: 3, scope: !9000)
!9007 = !DILocation(line: 0, scope: !8756, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 636, column: 3, scope: !9000)
!9009 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !9008)
!9010 = !DILocation(line: 0, scope: !8764, inlinedAt: !9011)
!9011 = distinct !DILocation(line: 636, column: 3, scope: !9000)
!9012 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !9011)
!9013 = !DILocation(line: 0, scope: !8756, inlinedAt: !9014)
!9014 = distinct !DILocation(line: 636, column: 3, scope: !9000)
!9015 = !DILocation(line: 0, scope: !8764, inlinedAt: !9016)
!9016 = distinct !DILocation(line: 636, column: 3, scope: !9000)
!9017 = !DILocation(line: 638, column: 1, scope: !9000)
!9018 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8811, file: !8811, line: 274, type: !8937, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9019)
!9019 = !{!9020, !9021, !9022}
!9020 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9018, file: !8811, line: 274, type: !1162)
!9021 = !DILocalVariable(name: "Pin", arg: 2, scope: !9018, file: !8811, line: 274, type: !162)
!9022 = !DILocalVariable(name: "Mode", arg: 3, scope: !9018, file: !8811, line: 274, type: !162)
!9023 = !DILocation(line: 0, scope: !9018)
!9024 = !DILocation(line: 276, column: 3, scope: !9018)
!9025 = !DILocation(line: 0, scope: !8756, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 276, column: 3, scope: !9018)
!9027 = !DILocation(line: 380, column: 4, scope: !8756, inlinedAt: !9026)
!9028 = !DILocation(line: 0, scope: !8764, inlinedAt: !9029)
!9029 = distinct !DILocation(line: 276, column: 3, scope: !9018)
!9030 = !DILocation(line: 414, column: 7, scope: !8764, inlinedAt: !9029)
!9031 = !DILocation(line: 0, scope: !8756, inlinedAt: !9032)
!9032 = distinct !DILocation(line: 276, column: 3, scope: !9018)
!9033 = !DILocation(line: 0, scope: !8764, inlinedAt: !9034)
!9034 = distinct !DILocation(line: 276, column: 3, scope: !9018)
!9035 = !DILocation(line: 277, column: 1, scope: !9018)
!9036 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1227, file: !1227, line: 698, type: !1240, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9037)
!9037 = !{!9038, !9039, !9040}
!9038 = !DILocalVariable(name: "dev", arg: 1, scope: !9036, file: !1227, line: 698, type: !1095)
!9039 = !DILocalVariable(name: "data", scope: !9036, file: !1227, line: 700, type: !8479)
!9040 = !DILocalVariable(name: "ret", scope: !9036, file: !1227, line: 701, type: !107)
!9041 = !DILocation(line: 0, scope: !9036)
!9042 = !DILocation(line: 700, column: 38, scope: !9036)
!9043 = !DILocation(line: 703, column: 8, scope: !9036)
!9044 = !DILocation(line: 703, column: 12, scope: !9036)
!9045 = !DILocation(line: 705, column: 7, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9036, file: !1227, line: 705, column: 6)
!9047 = !DILocation(line: 705, column: 6, scope: !9036)
!9048 = !DILocation(line: 722, column: 8, scope: !9036)
!9049 = !DILocation(line: 723, column: 10, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9036, file: !1227, line: 723, column: 6)
!9051 = !DILocation(line: 723, column: 6, scope: !9036)
!9052 = !DILocation(line: 731, column: 1, scope: !9036)
!9053 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !9054, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9056)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{!136, !1095}
!9056 = !{!9057}
!9057 = !DILocalVariable(name: "dev", arg: 1, scope: !9053, file: !3390, line: 47, type: !1095)
!9058 = !DILocation(line: 0, scope: !9053)
!9059 = !DILocation(line: 55, column: 2, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9053, file: !3390, line: 55, column: 2)
!9061 = !{i64 2152400151}
!9062 = !DILocation(line: 56, column: 9, scope: !9053)
!9063 = !DILocation(line: 56, column: 2, scope: !9053)
!9064 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1227, file: !1227, line: 270, type: !9065, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9067)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!107, !1095, !136}
!9067 = !{!9068, !9069, !9070, !9071, !9072}
!9068 = !DILocalVariable(name: "dev", arg: 1, scope: !9064, file: !1227, line: 270, type: !1095)
!9069 = !DILocalVariable(name: "on", arg: 2, scope: !9064, file: !1227, line: 270, type: !136)
!9070 = !DILocalVariable(name: "cfg", scope: !9064, file: !1227, line: 272, type: !8412)
!9071 = !DILocalVariable(name: "ret", scope: !9064, file: !1227, line: 273, type: !107)
!9072 = !DILocalVariable(name: "clk", scope: !9064, file: !1227, line: 278, type: !8702)
!9073 = !DILocation(line: 0, scope: !9064)
!9074 = !DILocation(line: 272, column: 45, scope: !9064)
!9075 = !DILocation(line: 282, column: 38, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1227, line: 280, column: 10)
!9077 = distinct !DILexicalBlock(scope: !9064, file: !1227, line: 280, column: 6)
!9078 = !DILocation(line: 282, column: 6, scope: !9076)
!9079 = !DILocation(line: 281, column: 9, scope: !9076)
!9080 = !DILocation(line: 293, column: 1, scope: !9064)
!9081 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9054, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9082)
!9082 = !{!9083}
!9083 = !DILocalVariable(name: "dev", arg: 1, scope: !9081, file: !120, line: 730, type: !1095)
!9084 = !DILocation(line: 0, scope: !9081)
!9085 = !DILocation(line: 732, column: 9, scope: !9081)
!9086 = !DILocation(line: 732, column: 2, scope: !9081)
!9087 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1227, file: !1227, line: 496, type: !9088, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9090)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!107, !1095, !107, !107, !107}
!9090 = !{!9091, !9092, !9093, !9094, !9095, !9096}
!9091 = !DILocalVariable(name: "dev", arg: 1, scope: !9087, file: !1227, line: 496, type: !1095)
!9092 = !DILocalVariable(name: "pin", arg: 2, scope: !9087, file: !1227, line: 496, type: !107)
!9093 = !DILocalVariable(name: "conf", arg: 3, scope: !9087, file: !1227, line: 496, type: !107)
!9094 = !DILocalVariable(name: "func", arg: 4, scope: !9087, file: !1227, line: 496, type: !107)
!9095 = !DILocalVariable(name: "ret", scope: !9087, file: !1227, line: 498, type: !107)
!9096 = !DILocalVariable(name: "gpio_out", scope: !9097, file: !1227, line: 508, type: !162)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !1227, line: 507, column: 27)
!9098 = distinct !DILexicalBlock(scope: !9087, file: !1227, line: 507, column: 6)
!9099 = !DILocation(line: 0, scope: !9087)
!9100 = !DILocation(line: 505, column: 2, scope: !9087)
!9101 = !DILocation(line: 507, column: 11, scope: !9098)
!9102 = !DILocation(line: 507, column: 6, scope: !9087)
!9103 = !DILocation(line: 508, column: 28, scope: !9097)
!9104 = !DILocation(line: 0, scope: !9097)
!9105 = !DILocation(line: 510, column: 16, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !1227, line: 510, column: 7)
!9107 = !DILocation(line: 0, scope: !9106)
!9108 = !DILocation(line: 510, column: 7, scope: !9097)
!9109 = !DILocation(line: 511, column: 4, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !1227, line: 510, column: 32)
!9111 = !DILocation(line: 512, column: 3, scope: !9110)
!9112 = !DILocation(line: 513, column: 4, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !1227, line: 512, column: 39)
!9114 = distinct !DILexicalBlock(scope: !9106, file: !1227, line: 512, column: 14)
!9115 = !DILocation(line: 514, column: 3, scope: !9113)
!9116 = !DILocation(line: 518, column: 1, scope: !9087)
!9117 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1514, file: !1514, line: 526, type: !1388, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9118)
!9118 = !{!9119, !9120, !9121}
!9119 = !DILocalVariable(name: "dev", arg: 1, scope: !9117, file: !1514, line: 526, type: !1390)
!9120 = !DILocalVariable(name: "c", arg: 2, scope: !9117, file: !1514, line: 526, type: !144)
!9121 = !DILocalVariable(name: "config", scope: !9117, file: !1514, line: 528, type: !9122)
!9122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!9123 = !DILocation(line: 0, scope: !9117)
!9124 = !DILocation(line: 528, column: 48, scope: !9117)
!9125 = !DILocation(line: 531, column: 40, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9117, file: !1514, line: 531, column: 6)
!9127 = !DILocation(line: 531, column: 6, scope: !9126)
!9128 = !DILocation(line: 531, column: 6, scope: !9117)
!9129 = !DILocation(line: 532, column: 34, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9126, file: !1514, line: 531, column: 48)
!9131 = !DILocation(line: 532, column: 3, scope: !9130)
!9132 = !DILocation(line: 533, column: 2, scope: !9130)
!9133 = !DILocation(line: 539, column: 42, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9117, file: !1514, line: 539, column: 6)
!9135 = !DILocation(line: 539, column: 7, scope: !9134)
!9136 = !DILocation(line: 539, column: 6, scope: !9117)
!9137 = !DILocation(line: 543, column: 52, scope: !9117)
!9138 = !DILocation(line: 543, column: 22, scope: !9117)
!9139 = !DILocation(line: 543, column: 5, scope: !9117)
!9140 = !DILocation(line: 545, column: 2, scope: !9117)
!9141 = !DILocation(line: 546, column: 1, scope: !9117)
!9142 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1514, file: !1514, line: 548, type: !1407, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146, !9147}
!9144 = !DILocalVariable(name: "dev", arg: 1, scope: !9142, file: !1514, line: 548, type: !1390)
!9145 = !DILocalVariable(name: "c", arg: 2, scope: !9142, file: !1514, line: 549, type: !134)
!9146 = !DILocalVariable(name: "config", scope: !9142, file: !1514, line: 551, type: !9122)
!9147 = !DILocalVariable(name: "key", scope: !9142, file: !1514, line: 555, type: !32)
!9148 = !DILocation(line: 0, scope: !9142)
!9149 = !DILocation(line: 551, column: 48, scope: !9142)
!9150 = !DILocation(line: 562, column: 2, scope: !9142)
!9151 = !DILocation(line: 563, column: 41, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !1514, line: 563, column: 7)
!9153 = distinct !DILexicalBlock(scope: !9142, file: !1514, line: 562, column: 12)
!9154 = !DILocation(line: 563, column: 7, scope: !9152)
!9155 = !DILocation(line: 563, column: 7, scope: !9153)
!9156 = !DILocation(line: 55, column: 2, scope: !9157, inlinedAt: !9161)
!9157 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9158)
!9158 = !{!9159, !9160}
!9159 = !DILocalVariable(name: "key", scope: !9157, file: !5867, line: 44, type: !32)
!9160 = !DILocalVariable(name: "tmp", scope: !9157, file: !5867, line: 53, type: !32)
!9161 = distinct !DILocation(line: 564, column: 10, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9152, file: !1514, line: 563, column: 49)
!9163 = !{i64 1697840}
!9164 = !DILocation(line: 0, scope: !9157, inlinedAt: !9161)
!9165 = !DILocation(line: 565, column: 42, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !1514, line: 565, column: 8)
!9167 = !DILocation(line: 565, column: 8, scope: !9166)
!9168 = !DILocation(line: 565, column: 8, scope: !9162)
!9169 = !DILocalVariable(name: "key", arg: 1, scope: !9170, file: !5867, line: 84, type: !32)
!9170 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9171)
!9171 = !{!9169}
!9172 = !DILocation(line: 0, scope: !9170, inlinedAt: !9173)
!9173 = distinct !DILocation(line: 568, column: 4, scope: !9162)
!9174 = !DILocation(line: 95, column: 2, scope: !9170, inlinedAt: !9173)
!9175 = !{i64 1698657}
!9176 = !DILocation(line: 569, column: 3, scope: !9162)
!9177 = distinct !{!9177, !9150, !9178}
!9178 = !DILocation(line: 570, column: 2, scope: !9142)
!9179 = !DILocation(line: 592, column: 33, scope: !9142)
!9180 = !DILocation(line: 592, column: 2, scope: !9142)
!9181 = !DILocation(line: 0, scope: !9170, inlinedAt: !9182)
!9182 = distinct !DILocation(line: 593, column: 2, scope: !9142)
!9183 = !DILocation(line: 95, column: 2, scope: !9170, inlinedAt: !9182)
!9184 = !DILocation(line: 594, column: 1, scope: !9142)
!9185 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1514, file: !1514, line: 596, type: !1411, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9186)
!9186 = !{!9187, !9188, !9189}
!9187 = !DILocalVariable(name: "dev", arg: 1, scope: !9185, file: !1514, line: 596, type: !1390)
!9188 = !DILocalVariable(name: "config", scope: !9185, file: !1514, line: 598, type: !9122)
!9189 = !DILocalVariable(name: "err", scope: !9185, file: !1514, line: 599, type: !162)
!9190 = !DILocation(line: 0, scope: !9185)
!9191 = !DILocation(line: 598, column: 48, scope: !9185)
!9192 = !DILocation(line: 606, column: 40, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 606, column: 6)
!9194 = !DILocation(line: 606, column: 6, scope: !9193)
!9195 = !DILocation(line: 606, column: 6, scope: !9185)
!9196 = !DILocation(line: 610, column: 39, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 610, column: 6)
!9198 = !DILocation(line: 610, column: 6, scope: !9197)
!9199 = !DILocation(line: 610, column: 6, scope: !9185)
!9200 = !DILocation(line: 614, column: 39, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 614, column: 6)
!9202 = !DILocation(line: 614, column: 6, scope: !9201)
!9203 = !DILocation(line: 614, column: 6, scope: !9185)
!9204 = !DILocation(line: 619, column: 40, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 619, column: 6)
!9206 = !DILocation(line: 619, column: 6, scope: !9205)
!9207 = !DILocation(line: 619, column: 6, scope: !9185)
!9208 = !DILocation(line: 623, column: 10, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 623, column: 6)
!9210 = !DILocation(line: 623, column: 6, scope: !9185)
!9211 = !DILocation(line: 624, column: 34, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9209, file: !1514, line: 623, column: 24)
!9213 = !DILocation(line: 624, column: 3, scope: !9212)
!9214 = !DILocation(line: 625, column: 2, scope: !9212)
!9215 = !DILocation(line: 632, column: 10, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 632, column: 6)
!9217 = !DILocation(line: 632, column: 6, scope: !9185)
!9218 = !DILocation(line: 633, column: 34, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9216, file: !1514, line: 632, column: 32)
!9220 = !DILocation(line: 633, column: 3, scope: !9219)
!9221 = !DILocation(line: 634, column: 2, scope: !9219)
!9222 = !DILocation(line: 636, column: 10, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 636, column: 6)
!9224 = !DILocation(line: 636, column: 6, scope: !9185)
!9225 = !DILocation(line: 637, column: 33, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9223, file: !1514, line: 636, column: 31)
!9227 = !DILocation(line: 637, column: 3, scope: !9226)
!9228 = !DILocation(line: 638, column: 2, scope: !9226)
!9229 = !DILocation(line: 640, column: 10, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9185, file: !1514, line: 640, column: 6)
!9231 = !DILocation(line: 640, column: 6, scope: !9185)
!9232 = !DILocation(line: 641, column: 33, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9230, file: !1514, line: 640, column: 32)
!9234 = !DILocation(line: 641, column: 3, scope: !9233)
!9235 = !DILocation(line: 642, column: 2, scope: !9233)
!9236 = !DILocation(line: 646, column: 32, scope: !9185)
!9237 = !DILocation(line: 646, column: 2, scope: !9185)
!9238 = !DILocation(line: 648, column: 2, scope: !9185)
!9239 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1514, file: !1514, line: 419, type: !1415, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9240)
!9240 = !{!9241, !9242, !9243, !9244, !9246, !9247, !9248, !9249}
!9241 = !DILocalVariable(name: "dev", arg: 1, scope: !9239, file: !1514, line: 419, type: !1390)
!9242 = !DILocalVariable(name: "cfg", arg: 2, scope: !9239, file: !1514, line: 420, type: !1417)
!9243 = !DILocalVariable(name: "config", scope: !9239, file: !1514, line: 422, type: !9122)
!9244 = !DILocalVariable(name: "data", scope: !9239, file: !1514, line: 423, type: !9245)
!9245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!9246 = !DILocalVariable(name: "parity", scope: !9239, file: !1514, line: 424, type: !6301)
!9247 = !DILocalVariable(name: "stopbits", scope: !9239, file: !1514, line: 425, type: !6301)
!9248 = !DILocalVariable(name: "databits", scope: !9239, file: !1514, line: 426, type: !6301)
!9249 = !DILocalVariable(name: "flowctrl", scope: !9239, file: !1514, line: 428, type: !6301)
!9250 = !DILocation(line: 0, scope: !9239)
!9251 = !DILocation(line: 422, column: 48, scope: !9239)
!9252 = !DILocation(line: 423, column: 38, scope: !9239)
!9253 = !DILocation(line: 424, column: 56, scope: !9239)
!9254 = !DILocation(line: 424, column: 51, scope: !9239)
!9255 = !DILocation(line: 424, column: 26, scope: !9239)
!9256 = !DILocation(line: 425, column: 60, scope: !9239)
!9257 = !DILocation(line: 425, column: 55, scope: !9239)
!9258 = !DILocation(line: 425, column: 28, scope: !9239)
!9259 = !DILocation(line: 426, column: 60, scope: !9239)
!9260 = !DILocation(line: 426, column: 55, scope: !9239)
!9261 = !DILocation(line: 426, column: 28, scope: !9239)
!9262 = !DILocation(line: 428, column: 58, scope: !9239)
!9263 = !DILocation(line: 428, column: 53, scope: !9239)
!9264 = !DILocation(line: 428, column: 28, scope: !9239)
!9265 = !DILocation(line: 431, column: 44, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 431, column: 6)
!9267 = !DILocation(line: 438, column: 22, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 437, column: 6)
!9269 = !DILocation(line: 437, column: 6, scope: !9239)
!9270 = !DILocation(line: 448, column: 6, scope: !9239)
!9271 = !DILocation(line: 465, column: 47, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 465, column: 6)
!9273 = !DILocation(line: 475, column: 21, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 475, column: 6)
!9275 = !DILocation(line: 475, column: 6, scope: !9239)
!9276 = !DILocation(line: 476, column: 8, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !1514, line: 476, column: 7)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !1514, line: 475, column: 49)
!9279 = !DILocation(line: 477, column: 34, scope: !9277)
!9280 = !DILocation(line: 476, column: 7, scope: !9278)
!9281 = !DILocation(line: 482, column: 27, scope: !9239)
!9282 = !DILocation(line: 482, column: 2, scope: !9239)
!9283 = !DILocation(line: 484, column: 16, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 484, column: 6)
!9285 = !DILocation(line: 484, column: 13, scope: !9284)
!9286 = !DILocation(line: 484, column: 6, scope: !9239)
!9287 = !DILocation(line: 485, column: 3, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9284, file: !1514, line: 484, column: 44)
!9289 = !DILocation(line: 486, column: 2, scope: !9288)
!9290 = !DILocation(line: 488, column: 18, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 488, column: 6)
!9292 = !DILocation(line: 488, column: 15, scope: !9291)
!9293 = !DILocation(line: 488, column: 6, scope: !9239)
!9294 = !DILocation(line: 489, column: 3, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !1514, line: 488, column: 48)
!9296 = !DILocation(line: 490, column: 2, scope: !9295)
!9297 = !DILocation(line: 492, column: 18, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 492, column: 6)
!9299 = !DILocation(line: 492, column: 15, scope: !9298)
!9300 = !DILocation(line: 492, column: 6, scope: !9239)
!9301 = !DILocation(line: 493, column: 3, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9298, file: !1514, line: 492, column: 48)
!9303 = !DILocation(line: 494, column: 2, scope: !9302)
!9304 = !DILocation(line: 496, column: 18, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 496, column: 6)
!9306 = !DILocation(line: 496, column: 15, scope: !9305)
!9307 = !DILocation(line: 496, column: 6, scope: !9239)
!9308 = !DILocation(line: 497, column: 3, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9305, file: !1514, line: 496, column: 46)
!9310 = !DILocation(line: 498, column: 2, scope: !9309)
!9311 = !DILocation(line: 500, column: 11, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9239, file: !1514, line: 500, column: 6)
!9313 = !DILocation(line: 500, column: 29, scope: !9312)
!9314 = !DILocation(line: 500, column: 20, scope: !9312)
!9315 = !DILocation(line: 500, column: 6, scope: !9239)
!9316 = !DILocation(line: 501, column: 3, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !1514, line: 500, column: 40)
!9318 = !DILocation(line: 502, column: 26, scope: !9317)
!9319 = !DILocation(line: 502, column: 19, scope: !9317)
!9320 = !DILocation(line: 503, column: 2, scope: !9317)
!9321 = !DILocation(line: 505, column: 26, scope: !9239)
!9322 = !DILocation(line: 505, column: 2, scope: !9239)
!9323 = !DILocation(line: 506, column: 2, scope: !9239)
!9324 = !DILocation(line: 507, column: 1, scope: !9239)
!9325 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1514, file: !1514, line: 509, type: !1428, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9326)
!9326 = !{!9327, !9328, !9329}
!9327 = !DILocalVariable(name: "dev", arg: 1, scope: !9325, file: !1514, line: 509, type: !1390)
!9328 = !DILocalVariable(name: "cfg", arg: 2, scope: !9325, file: !1514, line: 510, type: !1430)
!9329 = !DILocalVariable(name: "data", scope: !9325, file: !1514, line: 512, type: !9245)
!9330 = !DILocation(line: 0, scope: !9325)
!9331 = !DILocation(line: 512, column: 38, scope: !9325)
!9332 = !DILocation(line: 514, column: 24, scope: !9325)
!9333 = !DILocation(line: 514, column: 7, scope: !9325)
!9334 = !DILocation(line: 514, column: 16, scope: !9325)
!9335 = !DILocation(line: 515, column: 41, scope: !9325)
!9336 = !{i32 0, i32 1537}
!9337 = !DILocation(line: 515, column: 16, scope: !9325)
!9338 = !DILocation(line: 515, column: 7, scope: !9325)
!9339 = !DILocation(line: 515, column: 14, scope: !9325)
!9340 = !DILocation(line: 517, column: 3, scope: !9325)
!9341 = !{i32 0, i32 12289}
!9342 = !DILocation(line: 516, column: 19, scope: !9325)
!9343 = !DILocation(line: 516, column: 7, scope: !9325)
!9344 = !DILocation(line: 516, column: 17, scope: !9325)
!9345 = !DILocation(line: 519, column: 3, scope: !9325)
!9346 = !DILocation(line: 519, column: 33, scope: !9325)
!9347 = !DILocation(line: 518, column: 19, scope: !9325)
!9348 = !DILocation(line: 518, column: 7, scope: !9325)
!9349 = !DILocation(line: 518, column: 17, scope: !9325)
!9350 = !DILocation(line: 521, column: 3, scope: !9325)
!9351 = !{i32 0, i32 769}
!9352 = !DILocation(line: 520, column: 19, scope: !9325)
!9353 = !DILocation(line: 520, column: 7, scope: !9325)
!9354 = !DILocation(line: 520, column: 17, scope: !9325)
!9355 = !DILocation(line: 522, column: 2, scope: !9325)
!9356 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1514, file: !1514, line: 661, type: !1433, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9357)
!9357 = !{!9358, !9359, !9360, !9361, !9362, !9363}
!9358 = !DILocalVariable(name: "dev", arg: 1, scope: !9356, file: !1514, line: 661, type: !1390)
!9359 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9356, file: !1514, line: 662, type: !176)
!9360 = !DILocalVariable(name: "size", arg: 3, scope: !9356, file: !1514, line: 663, type: !107)
!9361 = !DILocalVariable(name: "config", scope: !9356, file: !1514, line: 665, type: !9122)
!9362 = !DILocalVariable(name: "num_tx", scope: !9356, file: !1514, line: 666, type: !133)
!9363 = !DILocalVariable(name: "key", scope: !9356, file: !1514, line: 667, type: !32)
!9364 = !DILocation(line: 0, scope: !9356)
!9365 = !DILocation(line: 665, column: 48, scope: !9356)
!9366 = !DILocation(line: 669, column: 41, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9356, file: !1514, line: 669, column: 6)
!9368 = !DILocation(line: 669, column: 7, scope: !9367)
!9369 = !DILocation(line: 669, column: 6, scope: !9356)
!9370 = !DILocation(line: 55, column: 2, scope: !9157, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 674, column: 8, scope: !9356)
!9372 = !DILocation(line: 0, scope: !9157, inlinedAt: !9371)
!9373 = !DILocation(line: 676, column: 24, scope: !9356)
!9374 = !DILocation(line: 676, column: 29, scope: !9356)
!9375 = !DILocation(line: 677, column: 43, scope: !9356)
!9376 = !DILocation(line: 677, column: 9, scope: !9356)
!9377 = !DILocation(line: 676, column: 2, scope: !9356)
!9378 = !DILocation(line: 681, column: 34, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9356, file: !1514, line: 677, column: 51)
!9380 = !DILocation(line: 681, column: 55, scope: !9379)
!9381 = !DILocation(line: 681, column: 41, scope: !9379)
!9382 = !DILocation(line: 681, column: 3, scope: !9379)
!9383 = !DILocation(line: 676, column: 17, scope: !9356)
!9384 = distinct !{!9384, !9377, !9385}
!9385 = !DILocation(line: 682, column: 2, scope: !9356)
!9386 = !DILocation(line: 0, scope: !9170, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 684, column: 2, scope: !9356)
!9388 = !DILocation(line: 95, column: 2, scope: !9170, inlinedAt: !9387)
!9389 = !DILocation(line: 686, column: 2, scope: !9356)
!9390 = !DILocation(line: 687, column: 1, scope: !9356)
!9391 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1514, file: !1514, line: 689, type: !1437, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9392)
!9392 = !{!9393, !9394, !9395, !9396, !9397}
!9393 = !DILocalVariable(name: "dev", arg: 1, scope: !9391, file: !1514, line: 689, type: !1390)
!9394 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9391, file: !1514, line: 689, type: !182)
!9395 = !DILocalVariable(name: "size", arg: 3, scope: !9391, file: !1514, line: 690, type: !183)
!9396 = !DILocalVariable(name: "config", scope: !9391, file: !1514, line: 692, type: !9122)
!9397 = !DILocalVariable(name: "num_rx", scope: !9391, file: !1514, line: 693, type: !133)
!9398 = !DILocation(line: 0, scope: !9391)
!9399 = !DILocation(line: 692, column: 48, scope: !9391)
!9400 = !DILocation(line: 696, column: 44, scope: !9391)
!9401 = !DILocation(line: 695, column: 24, scope: !9391)
!9402 = !DILocation(line: 695, column: 29, scope: !9391)
!9403 = !DILocation(line: 696, column: 9, scope: !9391)
!9404 = !DILocation(line: 695, column: 2, scope: !9391)
!9405 = !DILocation(line: 700, column: 53, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9391, file: !1514, line: 696, column: 52)
!9407 = !DILocation(line: 700, column: 23, scope: !9406)
!9408 = !DILocation(line: 700, column: 17, scope: !9406)
!9409 = !DILocation(line: 700, column: 3, scope: !9406)
!9410 = !DILocation(line: 700, column: 21, scope: !9406)
!9411 = !DILocation(line: 703, column: 41, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9406, file: !1514, line: 703, column: 7)
!9413 = !DILocation(line: 703, column: 7, scope: !9412)
!9414 = !DILocation(line: 703, column: 7, scope: !9406)
!9415 = !DILocation(line: 704, column: 35, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !1514, line: 703, column: 49)
!9417 = !DILocation(line: 704, column: 4, scope: !9416)
!9418 = !DILocation(line: 709, column: 3, scope: !9416)
!9419 = !DILocation(line: 695, column: 17, scope: !9391)
!9420 = distinct !{!9420, !9404, !9421}
!9421 = !DILocation(line: 710, column: 2, scope: !9391)
!9422 = !DILocation(line: 712, column: 2, scope: !9391)
!9423 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1514, file: !1514, line: 715, type: !1441, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9424)
!9424 = !{!9425, !9426}
!9425 = !DILocalVariable(name: "dev", arg: 1, scope: !9423, file: !1514, line: 715, type: !1390)
!9426 = !DILocalVariable(name: "config", scope: !9423, file: !1514, line: 717, type: !9122)
!9427 = !DILocation(line: 0, scope: !9423)
!9428 = !DILocation(line: 717, column: 48, scope: !9423)
!9429 = !DILocation(line: 729, column: 31, scope: !9423)
!9430 = !DILocation(line: 729, column: 2, scope: !9423)
!9431 = !DILocation(line: 734, column: 1, scope: !9423)
!9432 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1514, file: !1514, line: 736, type: !1441, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9433)
!9433 = !{!9434, !9435}
!9434 = !DILocalVariable(name: "dev", arg: 1, scope: !9432, file: !1514, line: 736, type: !1390)
!9435 = !DILocalVariable(name: "config", scope: !9432, file: !1514, line: 738, type: !9122)
!9436 = !DILocation(line: 0, scope: !9432)
!9437 = !DILocation(line: 738, column: 48, scope: !9432)
!9438 = !DILocation(line: 746, column: 32, scope: !9432)
!9439 = !DILocation(line: 746, column: 2, scope: !9432)
!9440 = !DILocation(line: 756, column: 1, scope: !9432)
!9441 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1514, file: !1514, line: 758, type: !1411, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9442)
!9442 = !{!9443, !9444}
!9443 = !DILocalVariable(name: "dev", arg: 1, scope: !9441, file: !1514, line: 758, type: !1390)
!9444 = !DILocalVariable(name: "config", scope: !9441, file: !1514, line: 760, type: !9122)
!9445 = !DILocation(line: 0, scope: !9441)
!9446 = !DILocation(line: 760, column: 48, scope: !9441)
!9447 = !DILocation(line: 762, column: 43, scope: !9441)
!9448 = !DILocation(line: 762, column: 9, scope: !9441)
!9449 = !DILocation(line: 762, column: 50, scope: !9441)
!9450 = !DILocation(line: 763, column: 35, scope: !9441)
!9451 = !DILocation(line: 763, column: 3, scope: !9441)
!9452 = !DILocation(line: 762, column: 2, scope: !9441)
!9453 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1514, file: !1514, line: 773, type: !1441, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9454)
!9454 = !{!9455, !9456}
!9455 = !DILocalVariable(name: "dev", arg: 1, scope: !9453, file: !1514, line: 773, type: !1390)
!9456 = !DILocalVariable(name: "config", scope: !9453, file: !1514, line: 775, type: !9122)
!9457 = !DILocation(line: 0, scope: !9453)
!9458 = !DILocation(line: 775, column: 48, scope: !9453)
!9459 = !DILocation(line: 777, column: 33, scope: !9453)
!9460 = !DILocation(line: 777, column: 2, scope: !9453)
!9461 = !DILocation(line: 778, column: 1, scope: !9453)
!9462 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1514, file: !1514, line: 780, type: !1441, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9463)
!9463 = !{!9464, !9465}
!9464 = !DILocalVariable(name: "dev", arg: 1, scope: !9462, file: !1514, line: 780, type: !1390)
!9465 = !DILocalVariable(name: "config", scope: !9462, file: !1514, line: 782, type: !9122)
!9466 = !DILocation(line: 0, scope: !9462)
!9467 = !DILocation(line: 782, column: 48, scope: !9462)
!9468 = !DILocation(line: 784, column: 34, scope: !9462)
!9469 = !DILocation(line: 784, column: 2, scope: !9462)
!9470 = !DILocation(line: 785, column: 1, scope: !9462)
!9471 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1514, file: !1514, line: 766, type: !1411, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9472)
!9472 = !{!9473, !9474}
!9473 = !DILocalVariable(name: "dev", arg: 1, scope: !9471, file: !1514, line: 766, type: !1390)
!9474 = !DILocalVariable(name: "config", scope: !9471, file: !1514, line: 768, type: !9122)
!9475 = !DILocation(line: 0, scope: !9471)
!9476 = !DILocation(line: 768, column: 48, scope: !9471)
!9477 = !DILocation(line: 770, column: 42, scope: !9471)
!9478 = !DILocation(line: 770, column: 9, scope: !9471)
!9479 = !DILocation(line: 770, column: 2, scope: !9471)
!9480 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1514, file: !1514, line: 787, type: !1411, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9481)
!9481 = !{!9482, !9483}
!9482 = !DILocalVariable(name: "dev", arg: 1, scope: !9480, file: !1514, line: 787, type: !1390)
!9483 = !DILocalVariable(name: "config", scope: !9480, file: !1514, line: 789, type: !9122)
!9484 = !DILocation(line: 0, scope: !9480)
!9485 = !DILocation(line: 789, column: 48, scope: !9480)
!9486 = !DILocation(line: 794, column: 44, scope: !9480)
!9487 = !DILocation(line: 794, column: 9, scope: !9480)
!9488 = !DILocation(line: 794, column: 2, scope: !9480)
!9489 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1514, file: !1514, line: 797, type: !1441, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9490)
!9490 = !{!9491, !9492}
!9491 = !DILocalVariable(name: "dev", arg: 1, scope: !9489, file: !1514, line: 797, type: !1390)
!9492 = !DILocalVariable(name: "config", scope: !9489, file: !1514, line: 799, type: !9122)
!9493 = !DILocation(line: 0, scope: !9489)
!9494 = !DILocation(line: 799, column: 48, scope: !9489)
!9495 = !DILocation(line: 802, column: 34, scope: !9489)
!9496 = !DILocation(line: 802, column: 2, scope: !9489)
!9497 = !DILocation(line: 805, column: 6, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9489, file: !1514, line: 805, column: 6)
!9499 = !DILocation(line: 806, column: 3, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9498, file: !1514, line: 805, column: 43)
!9501 = !DILocation(line: 810, column: 31, scope: !9489)
!9502 = !DILocation(line: 807, column: 2, scope: !9500)
!9503 = !DILocation(line: 810, column: 2, scope: !9489)
!9504 = !DILocation(line: 811, column: 1, scope: !9489)
!9505 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1514, file: !1514, line: 813, type: !1441, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9506)
!9506 = !{!9507, !9508}
!9507 = !DILocalVariable(name: "dev", arg: 1, scope: !9505, file: !1514, line: 813, type: !1390)
!9508 = !DILocalVariable(name: "config", scope: !9505, file: !1514, line: 815, type: !9122)
!9509 = !DILocation(line: 0, scope: !9505)
!9510 = !DILocation(line: 815, column: 48, scope: !9505)
!9511 = !DILocation(line: 818, column: 35, scope: !9505)
!9512 = !DILocation(line: 818, column: 2, scope: !9505)
!9513 = !DILocation(line: 821, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9505, file: !1514, line: 821, column: 6)
!9515 = !DILocation(line: 822, column: 3, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9514, file: !1514, line: 821, column: 43)
!9517 = !DILocation(line: 826, column: 32, scope: !9505)
!9518 = !DILocation(line: 823, column: 2, scope: !9516)
!9519 = !DILocation(line: 826, column: 2, scope: !9505)
!9520 = !DILocation(line: 827, column: 1, scope: !9505)
!9521 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1514, file: !1514, line: 829, type: !1411, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9522)
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "dev", arg: 1, scope: !9521, file: !1514, line: 829, type: !1390)
!9524 = !DILocalVariable(name: "config", scope: !9521, file: !1514, line: 831, type: !9122)
!9525 = !DILocation(line: 0, scope: !9521)
!9526 = !DILocation(line: 831, column: 48, scope: !9521)
!9527 = !DILocation(line: 833, column: 46, scope: !9521)
!9528 = !DILocation(line: 833, column: 11, scope: !9521)
!9529 = !DILocation(line: 833, column: 53, scope: !9521)
!9530 = !DILocation(line: 834, column: 38, scope: !9521)
!9531 = !DILocation(line: 834, column: 4, scope: !9521)
!9532 = !DILocation(line: 834, column: 46, scope: !9521)
!9533 = !DILocation(line: 835, column: 37, scope: !9521)
!9534 = !DILocation(line: 835, column: 4, scope: !9521)
!9535 = !DILocation(line: 835, column: 44, scope: !9521)
!9536 = !DILocation(line: 836, column: 36, scope: !9521)
!9537 = !DILocation(line: 836, column: 4, scope: !9521)
!9538 = !DILocation(line: 833, column: 2, scope: !9521)
!9539 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1514, file: !1514, line: 839, type: !1411, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9540)
!9540 = !{!9541}
!9541 = !DILocalVariable(name: "dev", arg: 1, scope: !9539, file: !1514, line: 839, type: !1390)
!9542 = !DILocation(line: 0, scope: !9539)
!9543 = !DILocation(line: 841, column: 2, scope: !9539)
!9544 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1514, file: !1514, line: 844, type: !1455, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9545)
!9545 = !{!9546, !9547, !9548, !9549}
!9546 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !1514, line: 844, type: !1390)
!9547 = !DILocalVariable(name: "cb", arg: 2, scope: !9544, file: !1514, line: 845, type: !1457)
!9548 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9544, file: !1514, line: 846, type: !102)
!9549 = !DILocalVariable(name: "data", scope: !9544, file: !1514, line: 848, type: !9245)
!9550 = !DILocation(line: 0, scope: !9544)
!9551 = !DILocation(line: 848, column: 38, scope: !9544)
!9552 = !DILocation(line: 850, column: 8, scope: !9544)
!9553 = !DILocation(line: 850, column: 16, scope: !9544)
!9554 = !DILocation(line: 851, column: 8, scope: !9544)
!9555 = !DILocation(line: 851, column: 18, scope: !9544)
!9556 = !DILocation(line: 852, column: 1, scope: !9544)
!9557 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9558, file: !9558, line: 1791, type: !9559, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9561)
!9558 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!162, !1461}
!9561 = !{!9562}
!9562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9557, file: !9558, line: 1791, type: !1461)
!9563 = !DILocation(line: 0, scope: !9557)
!9564 = !DILocation(line: 1793, column: 11, scope: !9557)
!9565 = !DILocation(line: 1793, column: 47, scope: !9557)
!9566 = !DILocation(line: 1793, column: 3, scope: !9557)
!9567 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9558, file: !9558, line: 2226, type: !9559, scopeLine: 2227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9568)
!9568 = !{!9569}
!9569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9567, file: !9558, line: 2226, type: !1461)
!9570 = !DILocation(line: 0, scope: !9567)
!9571 = !DILocation(line: 2228, column: 11, scope: !9567)
!9572 = !DILocation(line: 2228, column: 51, scope: !9567)
!9573 = !DILocation(line: 2228, column: 3, scope: !9567)
!9574 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9558, file: !9558, line: 1802, type: !9559, scopeLine: 1803, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9575)
!9575 = !{!9576}
!9576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9574, file: !9558, line: 1802, type: !1461)
!9577 = !DILocation(line: 0, scope: !9574)
!9578 = !DILocation(line: 1804, column: 11, scope: !9574)
!9579 = !DILocation(line: 1804, column: 45, scope: !9574)
!9580 = !DILocation(line: 1804, column: 3, scope: !9574)
!9581 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9558, file: !9558, line: 2237, type: !9559, scopeLine: 2238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9582)
!9582 = !{!9583}
!9583 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9581, file: !9558, line: 2237, type: !1461)
!9584 = !DILocation(line: 0, scope: !9581)
!9585 = !DILocation(line: 2239, column: 11, scope: !9581)
!9586 = !DILocation(line: 2239, column: 49, scope: !9581)
!9587 = !DILocation(line: 2239, column: 3, scope: !9581)
!9588 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9558, file: !9558, line: 2191, type: !9589, scopeLine: 2192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9591)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{null, !1461}
!9591 = !{!9592}
!9592 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9588, file: !9558, line: 2191, type: !1461)
!9593 = !DILocation(line: 0, scope: !9588)
!9594 = !DILocation(line: 2193, column: 3, scope: !9588)
!9595 = !DILocation(line: 2194, column: 1, scope: !9588)
!9596 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9558, file: !9558, line: 2176, type: !9589, scopeLine: 2177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9597)
!9597 = !{!9598}
!9598 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9596, file: !9558, line: 2176, type: !1461)
!9599 = !DILocation(line: 0, scope: !9596)
!9600 = !DILocation(line: 2178, column: 3, scope: !9596)
!9601 = !DILocation(line: 2179, column: 1, scope: !9596)
!9602 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9558, file: !9558, line: 2163, type: !9589, scopeLine: 2164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9603)
!9603 = !{!9604}
!9604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9602, file: !9558, line: 2163, type: !1461)
!9605 = !DILocation(line: 0, scope: !9602)
!9606 = !DILocation(line: 2165, column: 3, scope: !9602)
!9607 = !DILocation(line: 2166, column: 1, scope: !9602)
!9608 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9558, file: !9558, line: 2095, type: !9589, scopeLine: 2096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9609)
!9609 = !{!9610}
!9610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9608, file: !9558, line: 2095, type: !1461)
!9611 = !DILocation(line: 0, scope: !9608)
!9612 = !DILocation(line: 2097, column: 3, scope: !9608)
!9613 = !DILocation(line: 2098, column: 1, scope: !9608)
!9614 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9558, file: !9558, line: 2080, type: !9589, scopeLine: 2081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9614, file: !9558, line: 2080, type: !1461)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 2082, column: 3, scope: !9614)
!9619 = !DILocation(line: 2083, column: 1, scope: !9614)
!9620 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9558, file: !9558, line: 2067, type: !9589, scopeLine: 2068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9621)
!9621 = !{!9622}
!9622 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9620, file: !9558, line: 2067, type: !1461)
!9623 = !DILocation(line: 0, scope: !9620)
!9624 = !DILocation(line: 2069, column: 3, scope: !9620)
!9625 = !DILocation(line: 2070, column: 1, scope: !9620)
!9626 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9558, file: !9558, line: 2130, type: !9589, scopeLine: 2131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9627)
!9627 = !{!9628}
!9628 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9626, file: !9558, line: 2130, type: !1461)
!9629 = !DILocation(line: 0, scope: !9626)
!9630 = !DILocation(line: 2132, column: 3, scope: !9626)
!9631 = !DILocation(line: 2133, column: 1, scope: !9626)
!9632 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9558, file: !9558, line: 2034, type: !9589, scopeLine: 2035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9633)
!9633 = !{!9634}
!9634 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9632, file: !9558, line: 2034, type: !1461)
!9635 = !DILocation(line: 0, scope: !9632)
!9636 = !DILocation(line: 2036, column: 3, scope: !9632)
!9637 = !DILocation(line: 2037, column: 1, scope: !9632)
!9638 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9558, file: !9558, line: 1813, type: !9559, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9639)
!9639 = !{!9640}
!9640 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9638, file: !9558, line: 1813, type: !1461)
!9641 = !DILocation(line: 0, scope: !9638)
!9642 = !DILocation(line: 1815, column: 11, scope: !9638)
!9643 = !DILocation(line: 1815, column: 46, scope: !9638)
!9644 = !DILocation(line: 1815, column: 3, scope: !9638)
!9645 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9558, file: !9558, line: 2141, type: !9589, scopeLine: 2142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9646)
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9645, file: !9558, line: 2141, type: !1461)
!9648 = !DILocation(line: 0, scope: !9645)
!9649 = !DILocation(line: 2143, column: 3, scope: !9645)
!9650 = !DILocation(line: 2144, column: 1, scope: !9645)
!9651 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9558, file: !9558, line: 2045, type: !9589, scopeLine: 2046, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9652)
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9651, file: !9558, line: 2045, type: !1461)
!9654 = !DILocation(line: 0, scope: !9651)
!9655 = !DILocation(line: 2047, column: 3, scope: !9651)
!9656 = !DILocation(line: 2048, column: 1, scope: !9651)
!9657 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9558, file: !9558, line: 2402, type: !9658, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!133, !1461}
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9657, file: !9558, line: 2402, type: !1461)
!9662 = !DILocation(line: 0, scope: !9657)
!9663 = !DILocation(line: 2404, column: 20, scope: !9657)
!9664 = !DILocation(line: 2404, column: 10, scope: !9657)
!9665 = !DILocation(line: 2404, column: 3, scope: !9657)
!9666 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9558, file: !9558, line: 1769, type: !9559, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9667)
!9667 = !{!9668}
!9668 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9666, file: !9558, line: 1769, type: !1461)
!9669 = !DILocation(line: 0, scope: !9666)
!9670 = !DILocation(line: 1771, column: 11, scope: !9666)
!9671 = !DILocation(line: 1771, column: 46, scope: !9666)
!9672 = !DILocation(line: 1771, column: 3, scope: !9666)
!9673 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9558, file: !9558, line: 1933, type: !9589, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9674)
!9674 = !{!9675, !9676}
!9675 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9673, file: !9558, line: 1933, type: !1461)
!9676 = !DILocalVariable(name: "tmpreg", scope: !9673, file: !9558, line: 1935, type: !283)
!9677 = !DILocation(line: 0, scope: !9673)
!9678 = !DILocation(line: 1935, column: 3, scope: !9673)
!9679 = !DILocation(line: 1935, column: 17, scope: !9673)
!9680 = !DILocation(line: 1936, column: 20, scope: !9673)
!9681 = !DILocation(line: 1936, column: 10, scope: !9673)
!9682 = !DILocation(line: 1937, column: 10, scope: !9673)
!9683 = !DILocation(line: 1938, column: 20, scope: !9673)
!9684 = !DILocation(line: 1938, column: 10, scope: !9673)
!9685 = !DILocation(line: 1939, column: 10, scope: !9673)
!9686 = !DILocation(line: 1940, column: 1, scope: !9673)
!9687 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9558, file: !9558, line: 2425, type: !9688, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9690)
!9688 = !DISubroutineType(types: !9689)
!9689 = !{null, !1461, !133}
!9690 = !{!9691, !9692}
!9691 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9687, file: !9558, line: 2425, type: !1461)
!9692 = !DILocalVariable(name: "Value", arg: 2, scope: !9687, file: !9558, line: 2425, type: !133)
!9693 = !DILocation(line: 0, scope: !9687)
!9694 = !DILocation(line: 2427, column: 16, scope: !9687)
!9695 = !DILocation(line: 2427, column: 11, scope: !9687)
!9696 = !DILocation(line: 2427, column: 14, scope: !9687)
!9697 = !DILocation(line: 2428, column: 1, scope: !9687)
!9698 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1514, file: !1514, line: 205, type: !9699, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9701)
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!162, !1390}
!9701 = !{!9702, !9703}
!9702 = !DILocalVariable(name: "dev", arg: 1, scope: !9698, file: !1514, line: 205, type: !1390)
!9703 = !DILocalVariable(name: "config", scope: !9698, file: !1514, line: 207, type: !9122)
!9704 = !DILocation(line: 0, scope: !9698)
!9705 = !DILocation(line: 207, column: 48, scope: !9698)
!9706 = !DILocation(line: 209, column: 36, scope: !9698)
!9707 = !DILocation(line: 209, column: 9, scope: !9698)
!9708 = !DILocation(line: 209, column: 2, scope: !9698)
!9709 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1514, file: !1514, line: 270, type: !9710, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9712)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{!1356, !162}
!9712 = !{!9713}
!9713 = !DILocalVariable(name: "parity", arg: 1, scope: !9709, file: !1514, line: 270, type: !162)
!9714 = !DILocation(line: 0, scope: !9709)
!9715 = !DILocation(line: 272, column: 2, scope: !9709)
!9716 = !DILocation(line: 281, column: 1, scope: !9709)
!9717 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1514, file: !1514, line: 220, type: !9699, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9718)
!9718 = !{!9719, !9720}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !1514, line: 220, type: !1390)
!9720 = !DILocalVariable(name: "config", scope: !9717, file: !1514, line: 222, type: !9122)
!9721 = !DILocation(line: 0, scope: !9717)
!9722 = !DILocation(line: 222, column: 48, scope: !9717)
!9723 = !DILocation(line: 224, column: 44, scope: !9717)
!9724 = !DILocation(line: 224, column: 9, scope: !9717)
!9725 = !DILocation(line: 224, column: 2, scope: !9717)
!9726 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1514, file: !1514, line: 304, type: !9727, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9729)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!1370, !162}
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "sb", arg: 1, scope: !9726, file: !1514, line: 304, type: !162)
!9731 = !DILocation(line: 0, scope: !9726)
!9732 = !DILocation(line: 306, column: 2, scope: !9726)
!9733 = !DILocation(line: 0, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9726, file: !1514, line: 306, column: 14)
!9735 = !DILocation(line: 323, column: 1, scope: !9726)
!9736 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1514, file: !1514, line: 235, type: !9699, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9737)
!9737 = !{!9738, !9739}
!9738 = !DILocalVariable(name: "dev", arg: 1, scope: !9736, file: !1514, line: 235, type: !1390)
!9739 = !DILocalVariable(name: "config", scope: !9736, file: !1514, line: 237, type: !9122)
!9740 = !DILocation(line: 0, scope: !9736)
!9741 = !DILocation(line: 237, column: 48, scope: !9736)
!9742 = !DILocation(line: 239, column: 39, scope: !9736)
!9743 = !DILocation(line: 239, column: 9, scope: !9736)
!9744 = !DILocation(line: 239, column: 2, scope: !9736)
!9745 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1514, file: !1514, line: 355, type: !9746, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9748)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!1363, !162, !162}
!9748 = !{!9749, !9750}
!9749 = !DILocalVariable(name: "db", arg: 1, scope: !9745, file: !1514, line: 355, type: !162)
!9750 = !DILocalVariable(name: "p", arg: 2, scope: !9745, file: !1514, line: 356, type: !162)
!9751 = !DILocation(line: 0, scope: !9745)
!9752 = !DILocation(line: 358, column: 2, scope: !9745)
!9753 = !DILocation(line: 384, column: 1, scope: !9745)
!9754 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1514, file: !1514, line: 250, type: !9699, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9755)
!9755 = !{!9756, !9757}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9754, file: !1514, line: 250, type: !1390)
!9757 = !DILocalVariable(name: "config", scope: !9754, file: !1514, line: 252, type: !9122)
!9758 = !DILocation(line: 0, scope: !9754)
!9759 = !DILocation(line: 252, column: 48, scope: !9754)
!9760 = !DILocation(line: 254, column: 40, scope: !9754)
!9761 = !DILocation(line: 254, column: 9, scope: !9754)
!9762 = !DILocation(line: 254, column: 2, scope: !9754)
!9763 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1514, file: !1514, line: 409, type: !9764, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9766)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{!1376, !162}
!9766 = !{!9767}
!9767 = !DILocalVariable(name: "fc", arg: 1, scope: !9763, file: !1514, line: 409, type: !162)
!9768 = !DILocation(line: 0, scope: !9763)
!9769 = !DILocation(line: 411, column: 9, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9763, file: !1514, line: 411, column: 6)
!9771 = !DILocation(line: 416, column: 1, scope: !9763)
!9772 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9558, file: !9558, line: 966, type: !9559, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9773)
!9773 = !{!9774}
!9774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9772, file: !9558, line: 966, type: !1461)
!9775 = !DILocation(line: 0, scope: !9772)
!9776 = !DILocation(line: 968, column: 21, scope: !9772)
!9777 = !DILocation(line: 968, column: 3, scope: !9772)
!9778 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9558, file: !9558, line: 600, type: !9559, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9779)
!9779 = !{!9780}
!9780 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9778, file: !9558, line: 600, type: !1461)
!9781 = !DILocation(line: 0, scope: !9778)
!9782 = !DILocation(line: 602, column: 21, scope: !9778)
!9783 = !DILocation(line: 602, column: 3, scope: !9778)
!9784 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9558, file: !9558, line: 819, type: !9559, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9785)
!9785 = !{!9786}
!9786 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9784, file: !9558, line: 819, type: !1461)
!9787 = !DILocation(line: 0, scope: !9784)
!9788 = !DILocation(line: 821, column: 21, scope: !9784)
!9789 = !DILocation(line: 821, column: 3, scope: !9784)
!9790 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9558, file: !9558, line: 546, type: !9559, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9791)
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9790, file: !9558, line: 546, type: !1461)
!9793 = !DILocation(line: 0, scope: !9790)
!9794 = !DILocation(line: 548, column: 21, scope: !9790)
!9795 = !DILocation(line: 548, column: 3, scope: !9790)
!9796 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1514, file: !1514, line: 257, type: !9797, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9799)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{!162, !1356}
!9799 = !{!9800}
!9800 = !DILocalVariable(name: "parity", arg: 1, scope: !9796, file: !1514, line: 257, type: !1356)
!9801 = !DILocation(line: 0, scope: !9796)
!9802 = !DILocation(line: 259, column: 2, scope: !9796)
!9803 = !DILocation(line: 268, column: 1, scope: !9796)
!9804 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1514, file: !1514, line: 283, type: !9805, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!162, !1370}
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "sb", arg: 1, scope: !9804, file: !1514, line: 283, type: !1370)
!9809 = !DILocation(line: 0, scope: !9804)
!9810 = !DILocation(line: 285, column: 2, scope: !9804)
!9811 = !DILocation(line: 0, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9804, file: !1514, line: 285, column: 14)
!9813 = !DILocation(line: 302, column: 1, scope: !9804)
!9814 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1514, file: !1514, line: 325, type: !9815, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9817)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!162, !1363, !1356}
!9817 = !{!9818, !9819}
!9818 = !DILocalVariable(name: "db", arg: 1, scope: !9814, file: !1514, line: 325, type: !1363)
!9819 = !DILocalVariable(name: "p", arg: 2, scope: !9814, file: !1514, line: 326, type: !1356)
!9820 = !DILocation(line: 0, scope: !9814)
!9821 = !DILocation(line: 328, column: 2, scope: !9814)
!9822 = !DILocation(line: 353, column: 1, scope: !9814)
!9823 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1514, file: !1514, line: 393, type: !9824, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9826)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{!162, !1376}
!9826 = !{!9827}
!9827 = !DILocalVariable(name: "fc", arg: 1, scope: !9823, file: !1514, line: 393, type: !1376)
!9828 = !DILocation(line: 0, scope: !9823)
!9829 = !DILocation(line: 395, column: 9, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9823, file: !1514, line: 395, column: 6)
!9831 = !DILocation(line: 400, column: 1, scope: !9823)
!9832 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9558, file: !9558, line: 423, type: !9589, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9833)
!9833 = !{!9834}
!9834 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9832, file: !9558, line: 423, type: !1461)
!9835 = !DILocation(line: 0, scope: !9832)
!9836 = !DILocation(line: 425, column: 3, scope: !9832)
!9837 = !DILocation(line: 426, column: 1, scope: !9832)
!9838 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1514, file: !1514, line: 197, type: !9839, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9841)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{null, !1390, !162}
!9841 = !{!9842, !9843, !9844}
!9842 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !1514, line: 197, type: !1390)
!9843 = !DILocalVariable(name: "parity", arg: 2, scope: !9838, file: !1514, line: 198, type: !162)
!9844 = !DILocalVariable(name: "config", scope: !9838, file: !1514, line: 200, type: !9122)
!9845 = !DILocation(line: 0, scope: !9838)
!9846 = !DILocation(line: 200, column: 48, scope: !9838)
!9847 = !DILocation(line: 202, column: 29, scope: !9838)
!9848 = !DILocation(line: 202, column: 2, scope: !9838)
!9849 = !DILocation(line: 203, column: 1, scope: !9838)
!9850 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1514, file: !1514, line: 212, type: !9839, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9851)
!9851 = !{!9852, !9853, !9854}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !1514, line: 212, type: !1390)
!9853 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9850, file: !1514, line: 213, type: !162)
!9854 = !DILocalVariable(name: "config", scope: !9850, file: !1514, line: 215, type: !9122)
!9855 = !DILocation(line: 0, scope: !9850)
!9856 = !DILocation(line: 215, column: 48, scope: !9850)
!9857 = !DILocation(line: 217, column: 37, scope: !9850)
!9858 = !DILocation(line: 217, column: 2, scope: !9850)
!9859 = !DILocation(line: 218, column: 1, scope: !9850)
!9860 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1514, file: !1514, line: 227, type: !9839, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9861)
!9861 = !{!9862, !9863, !9864}
!9862 = !DILocalVariable(name: "dev", arg: 1, scope: !9860, file: !1514, line: 227, type: !1390)
!9863 = !DILocalVariable(name: "databits", arg: 2, scope: !9860, file: !1514, line: 228, type: !162)
!9864 = !DILocalVariable(name: "config", scope: !9860, file: !1514, line: 230, type: !9122)
!9865 = !DILocation(line: 0, scope: !9860)
!9866 = !DILocation(line: 230, column: 48, scope: !9860)
!9867 = !DILocation(line: 232, column: 32, scope: !9860)
!9868 = !DILocation(line: 232, column: 2, scope: !9860)
!9869 = !DILocation(line: 233, column: 1, scope: !9860)
!9870 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1514, file: !1514, line: 242, type: !9839, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9871)
!9871 = !{!9872, !9873, !9874}
!9872 = !DILocalVariable(name: "dev", arg: 1, scope: !9870, file: !1514, line: 242, type: !1390)
!9873 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9870, file: !1514, line: 243, type: !162)
!9874 = !DILocalVariable(name: "config", scope: !9870, file: !1514, line: 245, type: !9122)
!9875 = !DILocation(line: 0, scope: !9870)
!9876 = !DILocation(line: 245, column: 48, scope: !9870)
!9877 = !DILocation(line: 247, column: 33, scope: !9870)
!9878 = !DILocation(line: 247, column: 2, scope: !9870)
!9879 = !DILocation(line: 248, column: 1, scope: !9870)
!9880 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1514, file: !1514, line: 107, type: !9839, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9881)
!9881 = !{!9882, !9883, !9884, !9885, !9886}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1514, line: 107, type: !1390)
!9883 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9880, file: !1514, line: 107, type: !162)
!9884 = !DILocalVariable(name: "config", scope: !9880, file: !1514, line: 109, type: !9122)
!9885 = !DILocalVariable(name: "data", scope: !9880, file: !1514, line: 110, type: !9245)
!9886 = !DILocalVariable(name: "clock_rate", scope: !9880, file: !1514, line: 112, type: !162)
!9887 = !DILocation(line: 0, scope: !9880)
!9888 = !DILocation(line: 109, column: 48, scope: !9880)
!9889 = !DILocation(line: 110, column: 38, scope: !9880)
!9890 = !DILocation(line: 112, column: 2, scope: !9880)
!9891 = !DILocation(line: 123, column: 36, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !1514, line: 123, column: 7)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !1514, line: 122, column: 9)
!9894 = distinct !DILexicalBlock(scope: !9880, file: !1514, line: 115, column: 6)
!9895 = !DILocation(line: 124, column: 42, scope: !9892)
!9896 = !DILocation(line: 123, column: 7, scope: !9892)
!9897 = !DILocation(line: 125, column: 22, scope: !9892)
!9898 = !DILocation(line: 123, column: 7, scope: !9893)
!9899 = !DILocation(line: 176, column: 36, scope: !9880)
!9900 = !DILocation(line: 176, column: 3, scope: !9880)
!9901 = !DILocation(line: 179, column: 32, scope: !9880)
!9902 = !DILocation(line: 180, column: 10, scope: !9880)
!9903 = !DILocation(line: 179, column: 3, scope: !9880)
!9904 = !DILocation(line: 195, column: 1, scope: !9880)
!9905 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9558, file: !9558, line: 409, type: !9589, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9906)
!9906 = !{!9907}
!9907 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9905, file: !9558, line: 409, type: !1461)
!9908 = !DILocation(line: 0, scope: !9905)
!9909 = !DILocation(line: 411, column: 3, scope: !9905)
!9910 = !DILocation(line: 412, column: 1, scope: !9905)
!9911 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !876, file: !876, line: 216, type: !1494, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9912)
!9912 = !{!9913, !9914, !9915, !9916}
!9913 = !DILocalVariable(name: "dev", arg: 1, scope: !9911, file: !876, line: 216, type: !1390)
!9914 = !DILocalVariable(name: "sys", arg: 2, scope: !9911, file: !876, line: 217, type: !949)
!9915 = !DILocalVariable(name: "rate", arg: 3, scope: !9911, file: !876, line: 218, type: !907)
!9916 = !DILocalVariable(name: "api", scope: !9911, file: !876, line: 220, type: !1472)
!9917 = !DILocation(line: 0, scope: !9911)
!9918 = !DILocation(line: 221, column: 49, scope: !9911)
!9919 = !DILocation(line: 223, column: 11, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9911, file: !876, line: 223, column: 6)
!9921 = !DILocation(line: 223, column: 20, scope: !9920)
!9922 = !DILocation(line: 223, column: 6, scope: !9911)
!9923 = !DILocation(line: 227, column: 9, scope: !9911)
!9924 = !DILocation(line: 227, column: 2, scope: !9911)
!9925 = !DILocation(line: 228, column: 1, scope: !9911)
!9926 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9558, file: !9558, line: 614, type: !9927, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9929)
!9927 = !DISubroutineType(types: !9928)
!9928 = !{null, !1461, !162}
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9926, file: !9558, line: 614, type: !1461)
!9931 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9926, file: !9558, line: 614, type: !162)
!9932 = !DILocation(line: 0, scope: !9926)
!9933 = !DILocation(line: 616, column: 3, scope: !9926)
!9934 = !DILocation(line: 617, column: 1, scope: !9926)
!9935 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9558, file: !9558, line: 1019, type: !9936, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9938)
!9936 = !DISubroutineType(types: !9937)
!9937 = !{null, !1461, !162, !162, !162}
!9938 = !{!9939, !9940, !9941, !9942}
!9939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9935, file: !9558, line: 1019, type: !1461)
!9940 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9935, file: !9558, line: 1019, type: !162)
!9941 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9935, file: !9558, line: 1019, type: !162)
!9942 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9935, file: !9558, line: 1020, type: !162)
!9943 = !DILocation(line: 0, scope: !9935)
!9944 = !DILocation(line: 1028, column: 30, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !9558, line: 1027, column: 3)
!9946 = distinct !DILexicalBlock(scope: !9935, file: !9558, line: 1022, column: 7)
!9947 = !DILocation(line: 1028, column: 19, scope: !9945)
!9948 = !DILocation(line: 1028, column: 13, scope: !9945)
!9949 = !DILocation(line: 1028, column: 17, scope: !9945)
!9950 = !DILocation(line: 1030, column: 1, scope: !9935)
!9951 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9558, file: !9558, line: 948, type: !9927, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9952)
!9952 = !{!9953, !9954}
!9953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9951, file: !9558, line: 948, type: !1461)
!9954 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9951, file: !9558, line: 948, type: !162)
!9955 = !DILocation(line: 0, scope: !9951)
!9956 = !DILocation(line: 950, column: 3, scope: !9951)
!9957 = !DILocation(line: 951, column: 1, scope: !9951)
!9958 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9558, file: !9558, line: 587, type: !9927, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9959)
!9959 = !{!9960, !9961}
!9960 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9958, file: !9558, line: 587, type: !1461)
!9961 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9958, file: !9558, line: 587, type: !162)
!9962 = !DILocation(line: 0, scope: !9958)
!9963 = !DILocation(line: 589, column: 3, scope: !9958)
!9964 = !DILocation(line: 590, column: 1, scope: !9958)
!9965 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9558, file: !9558, line: 804, type: !9927, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9966)
!9966 = !{!9967, !9968}
!9967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9965, file: !9558, line: 804, type: !1461)
!9968 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9965, file: !9558, line: 804, type: !162)
!9969 = !DILocation(line: 0, scope: !9965)
!9970 = !DILocation(line: 806, column: 3, scope: !9965)
!9971 = !DILocation(line: 807, column: 1, scope: !9965)
!9972 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9558, file: !9558, line: 531, type: !9927, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9973)
!9973 = !{!9974, !9975}
!9974 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9972, file: !9558, line: 531, type: !1461)
!9975 = !DILocalVariable(name: "Parity", arg: 2, scope: !9972, file: !9558, line: 531, type: !162)
!9976 = !DILocation(line: 0, scope: !9972)
!9977 = !DILocation(line: 533, column: 3, scope: !9972)
!9978 = !DILocation(line: 534, column: 1, scope: !9972)
!9979 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9558, file: !9558, line: 1736, type: !9559, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9980)
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9979, file: !9558, line: 1736, type: !1461)
!9982 = !DILocation(line: 0, scope: !9979)
!9983 = !DILocation(line: 1738, column: 11, scope: !9979)
!9984 = !DILocation(line: 1738, column: 3, scope: !9979)
!9985 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9558, file: !9558, line: 1747, type: !9559, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9986)
!9986 = !{!9987}
!9987 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9985, file: !9558, line: 1747, type: !1461)
!9988 = !DILocation(line: 0, scope: !9985)
!9989 = !DILocation(line: 1749, column: 11, scope: !9985)
!9990 = !DILocation(line: 1749, column: 45, scope: !9985)
!9991 = !DILocation(line: 1749, column: 3, scope: !9985)
!9992 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9558, file: !9558, line: 1826, type: !9559, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9993)
!9993 = !{!9994}
!9994 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9992, file: !9558, line: 1826, type: !1461)
!9995 = !DILocation(line: 0, scope: !9992)
!9996 = !DILocation(line: 1828, column: 11, scope: !9992)
!9997 = !DILocation(line: 1828, column: 46, scope: !9992)
!9998 = !DILocation(line: 1828, column: 3, scope: !9992)
!9999 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9558, file: !9558, line: 1991, type: !9589, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10000)
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9999, file: !9558, line: 1991, type: !1461)
!10002 = !DILocation(line: 0, scope: !9999)
!10003 = !DILocation(line: 1993, column: 3, scope: !9999)
!10004 = !DILocation(line: 1994, column: 1, scope: !9999)
!10005 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9558, file: !9558, line: 1876, type: !9589, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10006)
!10006 = !{!10007, !10008}
!10007 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10005, file: !9558, line: 1876, type: !1461)
!10008 = !DILocalVariable(name: "tmpreg", scope: !10005, file: !9558, line: 1878, type: !283)
!10009 = !DILocation(line: 0, scope: !10005)
!10010 = !DILocation(line: 1878, column: 3, scope: !10005)
!10011 = !DILocation(line: 1878, column: 17, scope: !10005)
!10012 = !DILocation(line: 1879, column: 20, scope: !10005)
!10013 = !DILocation(line: 1879, column: 10, scope: !10005)
!10014 = !DILocation(line: 1880, column: 10, scope: !10005)
!10015 = !DILocation(line: 1881, column: 20, scope: !10005)
!10016 = !DILocation(line: 1881, column: 10, scope: !10005)
!10017 = !DILocation(line: 1882, column: 10, scope: !10005)
!10018 = !DILocation(line: 1883, column: 1, scope: !10005)
!10019 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9558, file: !9558, line: 1895, type: !9589, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10020)
!10020 = !{!10021, !10022}
!10021 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10019, file: !9558, line: 1895, type: !1461)
!10022 = !DILocalVariable(name: "tmpreg", scope: !10019, file: !9558, line: 1897, type: !283)
!10023 = !DILocation(line: 0, scope: !10019)
!10024 = !DILocation(line: 1897, column: 3, scope: !10019)
!10025 = !DILocation(line: 1897, column: 17, scope: !10019)
!10026 = !DILocation(line: 1898, column: 20, scope: !10019)
!10027 = !DILocation(line: 1898, column: 10, scope: !10019)
!10028 = !DILocation(line: 1899, column: 10, scope: !10019)
!10029 = !DILocation(line: 1900, column: 20, scope: !10019)
!10030 = !DILocation(line: 1900, column: 10, scope: !10019)
!10031 = !DILocation(line: 1901, column: 10, scope: !10019)
!10032 = !DILocation(line: 1902, column: 1, scope: !10019)
!10033 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9558, file: !9558, line: 1914, type: !9589, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10034)
!10034 = !{!10035, !10036}
!10035 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10033, file: !9558, line: 1914, type: !1461)
!10036 = !DILocalVariable(name: "tmpreg", scope: !10033, file: !9558, line: 1916, type: !283)
!10037 = !DILocation(line: 0, scope: !10033)
!10038 = !DILocation(line: 1916, column: 3, scope: !10033)
!10039 = !DILocation(line: 1916, column: 17, scope: !10033)
!10040 = !DILocation(line: 1917, column: 20, scope: !10033)
!10041 = !DILocation(line: 1917, column: 10, scope: !10033)
!10042 = !DILocation(line: 1918, column: 10, scope: !10033)
!10043 = !DILocation(line: 1919, column: 20, scope: !10033)
!10044 = !DILocation(line: 1919, column: 10, scope: !10033)
!10045 = !DILocation(line: 1920, column: 10, scope: !10033)
!10046 = !DILocation(line: 1921, column: 1, scope: !10033)
!10047 = !DILocation(line: 0, scope: !1573)
!10048 = !DILocation(line: 1914, column: 1, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !1573, file: !1514, line: 1914, column: 1)
!10050 = !DILocation(line: 1914, column: 1, scope: !1573)
!10051 = !DILocation(line: 0, scope: !1622)
!10052 = !DILocation(line: 1914, column: 1, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !1622, file: !1514, line: 1914, column: 1)
!10054 = !DILocation(line: 1914, column: 1, scope: !1622)
!10055 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1514, file: !1514, line: 987, type: !1441, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10056)
!10056 = !{!10057, !10058}
!10057 = !DILocalVariable(name: "dev", arg: 1, scope: !10055, file: !1514, line: 987, type: !1390)
!10058 = !DILocalVariable(name: "data", scope: !10055, file: !1514, line: 989, type: !9245)
!10059 = !DILocation(line: 0, scope: !10055)
!10060 = !DILocation(line: 989, column: 38, scope: !10055)
!10061 = !DILocation(line: 1014, column: 12, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10055, file: !1514, line: 1014, column: 6)
!10063 = !DILocation(line: 1014, column: 6, scope: !10062)
!10064 = !DILocation(line: 1014, column: 6, scope: !10055)
!10065 = !DILocation(line: 1015, column: 28, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10062, file: !1514, line: 1014, column: 21)
!10067 = !DILocation(line: 1015, column: 3, scope: !10066)
!10068 = !DILocation(line: 1016, column: 2, scope: !10066)
!10069 = !DILocation(line: 1059, column: 1, scope: !10055)
!10070 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1514, file: !1514, line: 1583, type: !1411, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10071)
!10071 = !{!10072, !10073, !10074, !10075, !10076, !10077}
!10072 = !DILocalVariable(name: "dev", arg: 1, scope: !10070, file: !1514, line: 1583, type: !1390)
!10073 = !DILocalVariable(name: "config", scope: !10070, file: !1514, line: 1585, type: !9122)
!10074 = !DILocalVariable(name: "data", scope: !10070, file: !1514, line: 1586, type: !9245)
!10075 = !DILocalVariable(name: "ll_parity", scope: !10070, file: !1514, line: 1587, type: !162)
!10076 = !DILocalVariable(name: "ll_datawidth", scope: !10070, file: !1514, line: 1588, type: !162)
!10077 = !DILocalVariable(name: "err", scope: !10070, file: !1514, line: 1589, type: !107)
!10078 = !DILocation(line: 0, scope: !10070)
!10079 = !DILocation(line: 1585, column: 48, scope: !10070)
!10080 = !DILocation(line: 1586, column: 38, scope: !10070)
!10081 = !DILocation(line: 1591, column: 2, scope: !10070)
!10082 = !DILocation(line: 1593, column: 29, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1593, column: 6)
!10084 = !DILocation(line: 1593, column: 7, scope: !10083)
!10085 = !DILocation(line: 1593, column: 6, scope: !10070)
!10086 = !DILocation(line: 1599, column: 31, scope: !10070)
!10087 = !DILocation(line: 1599, column: 71, scope: !10070)
!10088 = !DILocation(line: 1599, column: 8, scope: !10070)
!10089 = !DILocation(line: 1600, column: 10, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1600, column: 6)
!10091 = !DILocation(line: 1600, column: 6, scope: !10070)
!10092 = !DILocation(line: 1616, column: 36, scope: !10070)
!10093 = !DILocation(line: 1616, column: 8, scope: !10070)
!10094 = !DILocation(line: 1617, column: 10, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1617, column: 6)
!10096 = !DILocation(line: 1617, column: 6, scope: !10070)
!10097 = !DILocation(line: 1621, column: 27, scope: !10070)
!10098 = !DILocation(line: 1621, column: 2, scope: !10070)
!10099 = !DILocation(line: 1624, column: 40, scope: !10070)
!10100 = !DILocation(line: 1624, column: 2, scope: !10070)
!10101 = !DILocation(line: 1630, column: 14, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1630, column: 6)
!10103 = !DILocation(line: 1630, column: 6, scope: !10070)
!10104 = !DILocation(line: 1638, column: 2, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !1514, line: 1634, column: 34)
!10106 = distinct !DILexicalBlock(scope: !10102, file: !1514, line: 1634, column: 13)
!10107 = !DILocation(line: 0, scope: !10102)
!10108 = !DILocation(line: 1649, column: 35, scope: !10070)
!10109 = !DILocation(line: 1649, column: 2, scope: !10070)
!10110 = !DILocation(line: 1654, column: 14, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1654, column: 6)
!10112 = !DILocation(line: 1654, column: 6, scope: !10070)
!10113 = !DILocation(line: 1655, column: 3, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10111, file: !1514, line: 1654, column: 31)
!10115 = !DILocation(line: 1656, column: 2, scope: !10114)
!10116 = !DILocation(line: 1659, column: 37, scope: !10070)
!10117 = !DILocation(line: 1659, column: 2, scope: !10070)
!10118 = !DILocation(line: 1662, column: 14, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10070, file: !1514, line: 1662, column: 6)
!10120 = !DILocation(line: 1662, column: 6, scope: !10070)
!10121 = !DILocation(line: 1663, column: 37, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10119, file: !1514, line: 1662, column: 27)
!10123 = !DILocation(line: 1663, column: 3, scope: !10122)
!10124 = !DILocation(line: 1664, column: 2, scope: !10122)
!10125 = !DILocation(line: 1684, column: 26, scope: !10070)
!10126 = !DILocation(line: 1684, column: 2, scope: !10070)
!10127 = !DILocation(line: 1701, column: 10, scope: !10070)
!10128 = !DILocation(line: 1701, column: 2, scope: !10070)
!10129 = !DILocation(line: 1722, column: 2, scope: !10070)
!10130 = !DILocation(line: 1724, column: 1, scope: !10070)
!10131 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1514, file: !1514, line: 651, type: !1441, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10132)
!10132 = !{!10133, !10134, !10135}
!10133 = !DILocalVariable(name: "dev", arg: 1, scope: !10131, file: !1514, line: 651, type: !1390)
!10134 = !DILocalVariable(name: "data", scope: !10131, file: !1514, line: 653, type: !9245)
!10135 = !DILocalVariable(name: "clk", scope: !10131, file: !1514, line: 654, type: !10136)
!10136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!10137 = !DILocation(line: 0, scope: !10131)
!10138 = !DILocation(line: 653, column: 38, scope: !10131)
!10139 = !DILocation(line: 656, column: 8, scope: !10131)
!10140 = !DILocation(line: 656, column: 14, scope: !10131)
!10141 = !DILocation(line: 657, column: 1, scope: !10131)
!10142 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !10143, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10145)
!10143 = !DISubroutineType(types: !10144)
!10144 = !{!136, !1390}
!10145 = !{!10146}
!10146 = !DILocalVariable(name: "dev", arg: 1, scope: !10142, file: !3390, line: 47, type: !1390)
!10147 = !DILocation(line: 0, scope: !10142)
!10148 = !DILocation(line: 55, column: 2, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10142, file: !3390, line: 55, column: 2)
!10150 = !{i64 2152491314}
!10151 = !DILocation(line: 56, column: 9, scope: !10142)
!10152 = !DILocation(line: 56, column: 2, scope: !10142)
!10153 = distinct !DISubprogram(name: "clock_control_on", scope: !876, file: !876, line: 123, type: !1479, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10154)
!10154 = !{!10155, !10156, !10157}
!10155 = !DILocalVariable(name: "dev", arg: 1, scope: !10153, file: !876, line: 123, type: !1390)
!10156 = !DILocalVariable(name: "sys", arg: 2, scope: !10153, file: !876, line: 124, type: !949)
!10157 = !DILocalVariable(name: "api", scope: !10153, file: !876, line: 126, type: !1472)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 127, column: 49, scope: !10153)
!10160 = !DILocation(line: 129, column: 14, scope: !10153)
!10161 = !DILocation(line: 129, column: 9, scope: !10153)
!10162 = !DILocation(line: 129, column: 2, scope: !10153)
!10163 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1546, file: !1546, line: 342, type: !10164, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!107, !1609, !133}
!10166 = !{!10167, !10168, !10169, !10170}
!10167 = !DILocalVariable(name: "config", arg: 1, scope: !10163, file: !1546, line: 342, type: !1609)
!10168 = !DILocalVariable(name: "id", arg: 2, scope: !10163, file: !1546, line: 343, type: !133)
!10169 = !DILocalVariable(name: "ret", scope: !10163, file: !1546, line: 345, type: !107)
!10170 = !DILocalVariable(name: "state", scope: !10163, file: !1546, line: 346, type: !1549)
!10171 = !DILocation(line: 0, scope: !10163)
!10172 = !DILocation(line: 346, column: 2, scope: !10163)
!10173 = !DILocation(line: 348, column: 8, scope: !10163)
!10174 = !DILocation(line: 349, column: 10, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10163, file: !1546, line: 349, column: 6)
!10176 = !DILocation(line: 349, column: 6, scope: !10163)
!10177 = !DILocation(line: 353, column: 44, scope: !10163)
!10178 = !DILocation(line: 353, column: 9, scope: !10163)
!10179 = !DILocation(line: 353, column: 2, scope: !10163)
!10180 = !DILocation(line: 354, column: 1, scope: !10163)
!10181 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9558, file: !9558, line: 496, type: !9927, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10182)
!10182 = !{!10183, !10184}
!10183 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10181, file: !9558, line: 496, type: !1461)
!10184 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10181, file: !9558, line: 496, type: !162)
!10185 = !DILocation(line: 0, scope: !10181)
!10186 = !DILocation(line: 498, column: 3, scope: !10181)
!10187 = !DILocation(line: 499, column: 1, scope: !10181)
!10188 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9558, file: !9558, line: 849, type: !9936, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10189)
!10189 = !{!10190, !10191, !10192, !10193}
!10190 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10188, file: !9558, line: 849, type: !1461)
!10191 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10188, file: !9558, line: 849, type: !162)
!10192 = !DILocalVariable(name: "Parity", arg: 3, scope: !10188, file: !9558, line: 849, type: !162)
!10193 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10188, file: !9558, line: 850, type: !162)
!10194 = !DILocation(line: 0, scope: !10188)
!10195 = !DILocation(line: 852, column: 3, scope: !10188)
!10196 = !DILocation(line: 853, column: 3, scope: !10188)
!10197 = !DILocation(line: 854, column: 1, scope: !10188)
!10198 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9558, file: !9558, line: 1336, type: !9589, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10199)
!10199 = !{!10200}
!10200 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10198, file: !9558, line: 1336, type: !1461)
!10201 = !DILocation(line: 0, scope: !10198)
!10202 = !DILocation(line: 1338, column: 3, scope: !10198)
!10203 = !DILocation(line: 1339, column: 1, scope: !10198)
!10204 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1546, file: !1546, line: 316, type: !10205, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10207)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{!107, !1609, !1549}
!10207 = !{!10208, !10209, !10210}
!10208 = !DILocalVariable(name: "config", arg: 1, scope: !10204, file: !1546, line: 317, type: !1609)
!10209 = !DILocalVariable(name: "state", arg: 2, scope: !10204, file: !1546, line: 318, type: !1549)
!10210 = !DILocalVariable(name: "reg", scope: !10204, file: !1546, line: 320, type: !22)
!10211 = !DILocation(line: 0, scope: !10204)
!10212 = !DILocation(line: 329, column: 39, scope: !10204)
!10213 = !DILocation(line: 329, column: 52, scope: !10204)
!10214 = !DILocation(line: 329, column: 9, scope: !10204)
!10215 = !DILocation(line: 329, column: 2, scope: !10204)
!10216 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10143, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10217)
!10217 = !{!10218}
!10218 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !120, line: 730, type: !1390)
!10219 = !DILocation(line: 0, scope: !10216)
!10220 = !DILocation(line: 732, column: 9, scope: !10216)
!10221 = !DILocation(line: 732, column: 2, scope: !10216)
!10222 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1707, file: !1707, line: 270, type: !1713, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "dev", arg: 1, scope: !10222, file: !1707, line: 270, type: !1715)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 274, column: 2, scope: !10222)
!10227 = !DILocation(line: 275, column: 12, scope: !10222)
!10228 = !DILocation(line: 276, column: 15, scope: !10222)
!10229 = !DILocation(line: 277, column: 16, scope: !10222)
!10230 = !DILocation(line: 278, column: 15, scope: !10222)
!10231 = !DILocation(line: 279, column: 16, scope: !10222)
!10232 = !DILocation(line: 282, column: 2, scope: !10222)
!10233 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !510, file: !510, line: 1638, type: !6092, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10234)
!10234 = !{!10235, !10236}
!10235 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10233, file: !510, line: 1638, type: !834)
!10236 = !DILocalVariable(name: "priority", arg: 2, scope: !10233, file: !510, line: 1638, type: !162)
!10237 = !DILocation(line: 0, scope: !10233)
!10238 = !DILocation(line: 1646, column: 46, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !510, line: 1645, column: 3)
!10240 = distinct !DILexicalBlock(scope: !10233, file: !510, line: 1640, column: 7)
!10241 = !DILocation(line: 1648, column: 1, scope: !10233)
!10242 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1707, file: !1707, line: 118, type: !5995, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10243)
!10243 = !{!10244, !10245}
!10244 = !DILocalVariable(name: "arg", arg: 1, scope: !10242, file: !1707, line: 118, type: !102)
!10245 = !DILocalVariable(name: "dticks", scope: !10242, file: !1707, line: 121, type: !162)
!10246 = !DILocation(line: 0, scope: !10242)
!10247 = !DILocation(line: 124, column: 2, scope: !10242)
!10248 = !DILocation(line: 129, column: 17, scope: !10242)
!10249 = !DILocation(line: 129, column: 14, scope: !10242)
!10250 = !DILocation(line: 130, column: 15, scope: !10242)
!10251 = !DILocation(line: 145, column: 27, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !1707, line: 132, column: 16)
!10253 = distinct !DILexicalBlock(scope: !10242, file: !1707, line: 132, column: 6)
!10254 = !DILocation(line: 145, column: 25, scope: !10252)
!10255 = !DILocation(line: 145, column: 45, scope: !10252)
!10256 = !DILocation(line: 146, column: 30, scope: !10252)
!10257 = !DILocation(line: 146, column: 20, scope: !10252)
!10258 = !DILocation(line: 147, column: 3, scope: !10252)
!10259 = !DILocation(line: 151, column: 2, scope: !10242)
!10260 = !DILocation(line: 152, column: 1, scope: !10242)
!10261 = distinct !DISubprogram(name: "elapsed", scope: !1707, file: !1707, line: 85, type: !6808, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10262)
!10262 = !{!10263, !10264, !10265}
!10263 = !DILocalVariable(name: "val1", scope: !10261, file: !1707, line: 87, type: !162)
!10264 = !DILocalVariable(name: "ctrl", scope: !10261, file: !1707, line: 88, type: !162)
!10265 = !DILocalVariable(name: "val2", scope: !10261, file: !1707, line: 89, type: !162)
!10266 = !DILocation(line: 87, column: 27, scope: !10261)
!10267 = !DILocation(line: 0, scope: !10261)
!10268 = !DILocation(line: 88, column: 27, scope: !10261)
!10269 = !DILocation(line: 89, column: 27, scope: !10261)
!10270 = !DILocation(line: 105, column: 12, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10261, file: !1707, line: 105, column: 6)
!10272 = !DILocation(line: 106, column: 6, scope: !10271)
!10273 = !DILocation(line: 107, column: 16, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10271, file: !1707, line: 106, column: 24)
!10275 = !DILocation(line: 111, column: 18, scope: !10274)
!10276 = !DILocation(line: 112, column: 2, scope: !10274)
!10277 = !DILocation(line: 114, column: 20, scope: !10261)
!10278 = !DILocation(line: 114, column: 30, scope: !10261)
!10279 = !DILocation(line: 114, column: 28, scope: !10261)
!10280 = !DILocation(line: 114, column: 2, scope: !10261)
!10281 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1707, file: !1707, line: 154, type: !10282, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10284)
!10282 = !DISubroutineType(types: !10283)
!10283 = !{null, !816, !136}
!10284 = !{!10285, !10286, !10287, !10288, !10289, !10290, !10291, !10296, !10297}
!10285 = !DILocalVariable(name: "ticks", arg: 1, scope: !10281, file: !1707, line: 154, type: !816)
!10286 = !DILocalVariable(name: "idle", arg: 2, scope: !10281, file: !1707, line: 154, type: !136)
!10287 = !DILocalVariable(name: "delay", scope: !10281, file: !1707, line: 169, type: !162)
!10288 = !DILocalVariable(name: "val1", scope: !10281, file: !1707, line: 170, type: !162)
!10289 = !DILocalVariable(name: "val2", scope: !10281, file: !1707, line: 170, type: !162)
!10290 = !DILocalVariable(name: "last_load_", scope: !10281, file: !1707, line: 171, type: !162)
!10291 = !DILocalVariable(name: "key", scope: !10281, file: !1707, line: 176, type: !10292)
!10292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10293)
!10293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10294)
!10294 = !{!10295}
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10293, file: !249, line: 33, baseType: !107, size: 32)
!10296 = !DILocalVariable(name: "pending", scope: !10281, file: !1707, line: 178, type: !162)
!10297 = !DILocalVariable(name: "unannounced", scope: !10281, file: !1707, line: 185, type: !162)
!10298 = !DILocation(line: 0, scope: !10281)
!10299 = !DILocation(line: 162, column: 49, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10281, file: !1707, line: 162, column: 6)
!10301 = !DILocation(line: 163, column: 17, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10300, file: !1707, line: 162, column: 78)
!10303 = !DILocation(line: 164, column: 13, scope: !10302)
!10304 = !DILocation(line: 165, column: 3, scope: !10302)
!10305 = !DILocation(line: 171, column: 24, scope: !10281)
!10306 = !DILocation(line: 173, column: 10, scope: !10281)
!10307 = !DILocation(line: 174, column: 10, scope: !10281)
!10308 = !DILocalVariable(name: "l", arg: 1, scope: !10309, file: !249, line: 136, type: !10312)
!10309 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10310, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10313)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{!10292, !10312}
!10312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!10313 = !{!10308, !10314}
!10314 = !DILocalVariable(name: "k", scope: !10309, file: !249, line: 139, type: !10292)
!10315 = !DILocation(line: 0, scope: !10309, inlinedAt: !10316)
!10316 = distinct !DILocation(line: 176, column: 25, scope: !10281)
!10317 = !DILocation(line: 55, column: 2, scope: !10318, inlinedAt: !10322)
!10318 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10319)
!10319 = !{!10320, !10321}
!10320 = !DILocalVariable(name: "key", scope: !10318, file: !5867, line: 44, type: !32)
!10321 = !DILocalVariable(name: "tmp", scope: !10318, file: !5867, line: 53, type: !32)
!10322 = distinct !DILocation(line: 145, column: 10, scope: !10309, inlinedAt: !10316)
!10323 = !{i64 1617398}
!10324 = !DILocation(line: 0, scope: !10318, inlinedAt: !10322)
!10325 = !DILocation(line: 178, column: 21, scope: !10281)
!10326 = !DILocation(line: 180, column: 18, scope: !10281)
!10327 = !DILocation(line: 182, column: 14, scope: !10281)
!10328 = !DILocation(line: 183, column: 15, scope: !10281)
!10329 = !DILocation(line: 185, column: 39, scope: !10281)
!10330 = !DILocation(line: 185, column: 37, scope: !10281)
!10331 = !DILocation(line: 187, column: 27, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10281, file: !1707, line: 187, column: 6)
!10333 = !DILocation(line: 187, column: 6, scope: !10281)
!10334 = !DILocation(line: 202, column: 27, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10332, file: !1707, line: 195, column: 9)
!10336 = !DILocation(line: 202, column: 48, scope: !10335)
!10337 = !DILocation(line: 203, column: 9, scope: !10335)
!10338 = !DILocation(line: 204, column: 11, scope: !10335)
!10339 = !DILocation(line: 205, column: 13, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10335, file: !1707, line: 205, column: 7)
!10341 = !DILocation(line: 205, column: 7, scope: !10335)
!10342 = !DILocation(line: 0, scope: !10332)
!10343 = !DILocation(line: 212, column: 18, scope: !10281)
!10344 = !DILocation(line: 214, column: 28, scope: !10281)
!10345 = !DILocation(line: 214, column: 16, scope: !10281)
!10346 = !DILocation(line: 215, column: 15, scope: !10281)
!10347 = !DILocation(line: 227, column: 11, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10281, file: !1707, line: 227, column: 6)
!10349 = !DILocation(line: 227, column: 6, scope: !10281)
!10350 = !DILocation(line: 228, column: 15, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10348, file: !1707, line: 227, column: 19)
!10352 = !DILocation(line: 228, column: 38, scope: !10351)
!10353 = !DILocation(line: 228, column: 24, scope: !10351)
!10354 = !DILocation(line: 229, column: 2, scope: !10351)
!10355 = !DILocation(line: 230, column: 24, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10348, file: !1707, line: 229, column: 9)
!10357 = !DILocation(line: 230, column: 15, scope: !10356)
!10358 = !DILocation(line: 0, scope: !10348)
!10359 = !DILocalVariable(name: "key", arg: 2, scope: !10360, file: !249, line: 190, type: !10292)
!10360 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10361, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10363)
!10361 = !DISubroutineType(types: !10362)
!10362 = !{null, !10312, !10292}
!10363 = !{!10364, !10359}
!10364 = !DILocalVariable(name: "l", arg: 1, scope: !10360, file: !249, line: 189, type: !10312)
!10365 = !DILocation(line: 0, scope: !10360, inlinedAt: !10366)
!10366 = distinct !DILocation(line: 232, column: 2, scope: !10281)
!10367 = !DILocalVariable(name: "key", arg: 1, scope: !10368, file: !5867, line: 84, type: !32)
!10368 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10369)
!10369 = !{!10367}
!10370 = !DILocation(line: 0, scope: !10368, inlinedAt: !10371)
!10371 = distinct !DILocation(line: 215, column: 2, scope: !10360, inlinedAt: !10366)
!10372 = !DILocation(line: 95, column: 2, scope: !10368, inlinedAt: !10371)
!10373 = !{i64 1618215}
!10374 = !DILocation(line: 234, column: 1, scope: !10281)
!10375 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1707, file: !1707, line: 236, type: !6808, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10376)
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "key", scope: !10375, file: !1707, line: 242, type: !10292)
!10378 = !DILocalVariable(name: "cyc", scope: !10375, file: !1707, line: 243, type: !162)
!10379 = !DILocation(line: 0, scope: !10309, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 242, column: 25, scope: !10375)
!10381 = !DILocation(line: 55, column: 2, scope: !10318, inlinedAt: !10382)
!10382 = distinct !DILocation(line: 145, column: 10, scope: !10309, inlinedAt: !10380)
!10383 = !DILocation(line: 0, scope: !10318, inlinedAt: !10382)
!10384 = !DILocation(line: 0, scope: !10375)
!10385 = !DILocation(line: 243, column: 17, scope: !10375)
!10386 = !DILocation(line: 243, column: 29, scope: !10375)
!10387 = !DILocation(line: 243, column: 27, scope: !10375)
!10388 = !DILocation(line: 243, column: 43, scope: !10375)
!10389 = !DILocation(line: 243, column: 41, scope: !10375)
!10390 = !DILocation(line: 0, scope: !10360, inlinedAt: !10391)
!10391 = distinct !DILocation(line: 245, column: 2, scope: !10375)
!10392 = !DILocation(line: 0, scope: !10368, inlinedAt: !10393)
!10393 = distinct !DILocation(line: 215, column: 2, scope: !10360, inlinedAt: !10391)
!10394 = !DILocation(line: 95, column: 2, scope: !10368, inlinedAt: !10393)
!10395 = !DILocation(line: 246, column: 13, scope: !10375)
!10396 = !DILocation(line: 246, column: 2, scope: !10375)
!10397 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1707, file: !1707, line: 249, type: !6808, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !10398)
!10398 = !{!10399, !10400}
!10399 = !DILocalVariable(name: "key", scope: !10397, file: !1707, line: 251, type: !10292)
!10400 = !DILocalVariable(name: "ret", scope: !10397, file: !1707, line: 252, type: !162)
!10401 = !DILocation(line: 0, scope: !10309, inlinedAt: !10402)
!10402 = distinct !DILocation(line: 251, column: 25, scope: !10397)
!10403 = !DILocation(line: 55, column: 2, scope: !10318, inlinedAt: !10404)
!10404 = distinct !DILocation(line: 145, column: 10, scope: !10309, inlinedAt: !10402)
!10405 = !DILocation(line: 0, scope: !10318, inlinedAt: !10404)
!10406 = !DILocation(line: 0, scope: !10397)
!10407 = !DILocation(line: 252, column: 17, scope: !10397)
!10408 = !DILocation(line: 252, column: 29, scope: !10397)
!10409 = !DILocation(line: 252, column: 27, scope: !10397)
!10410 = !DILocation(line: 0, scope: !10360, inlinedAt: !10411)
!10411 = distinct !DILocation(line: 254, column: 2, scope: !10397)
!10412 = !DILocation(line: 0, scope: !10368, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 215, column: 2, scope: !10360, inlinedAt: !10411)
!10414 = !DILocation(line: 95, column: 2, scope: !10368, inlinedAt: !10413)
!10415 = !DILocation(line: 255, column: 2, scope: !10397)
!10416 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1707, file: !1707, line: 258, type: !3107, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !250)
!10417 = !DILocation(line: 260, column: 6, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !1707, line: 260, column: 6)
!10419 = !DILocation(line: 260, column: 16, scope: !10418)
!10420 = !DILocation(line: 260, column: 6, scope: !10416)
!10421 = !DILocation(line: 261, column: 17, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10418, file: !1707, line: 260, column: 34)
!10423 = !DILocation(line: 262, column: 2, scope: !10422)
!10424 = !DILocation(line: 263, column: 1, scope: !10416)
!10425 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1707, file: !1707, line: 265, type: !3107, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1629, retainedNodes: !250)
!10426 = !DILocation(line: 267, column: 16, scope: !10425)
!10427 = !DILocation(line: 268, column: 1, scope: !10425)
!10428 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10429, file: !10429, line: 9, type: !10430, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2841, retainedNodes: !10453)
!10429 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!107, !10432, !133, !10452}
!10432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10433, size: 32)
!10433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10434)
!10434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1546, line: 60, size: 64, elements: !10435)
!10435 = !{!10436, !10451}
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10434, file: !1546, line: 69, baseType: !10437, size: 32)
!10437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10438, size: 32)
!10438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10439)
!10439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1546, line: 50, size: 64, elements: !10440)
!10440 = !{!10441, !10449, !10450}
!10441 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10439, file: !1546, line: 52, baseType: !10442, size: 32)
!10442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10443, size: 32)
!10443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10444)
!10444 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1557, line: 37, baseType: !10445)
!10445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1557, line: 32, size: 64, elements: !10446)
!10446 = !{!10447, !10448}
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10445, file: !1557, line: 34, baseType: !162, size: 32)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10445, file: !1557, line: 36, baseType: !162, size: 32, offset: 32)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10439, file: !1546, line: 54, baseType: !133, size: 8, offset: 32)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10439, file: !1546, line: 56, baseType: !133, size: 8, offset: 40)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10434, file: !1546, line: 71, baseType: !133, size: 8, offset: 32)
!10452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10437, size: 32)
!10453 = !{!10454, !10455, !10456}
!10454 = !DILocalVariable(name: "config", arg: 1, scope: !10428, file: !10429, line: 9, type: !10432)
!10455 = !DILocalVariable(name: "id", arg: 2, scope: !10428, file: !10429, line: 9, type: !133)
!10456 = !DILocalVariable(name: "state", arg: 3, scope: !10428, file: !10429, line: 10, type: !10452)
!10457 = !DILocation(line: 0, scope: !10428)
!10458 = !DILocation(line: 12, column: 20, scope: !10428)
!10459 = !DILocation(line: 13, column: 27, scope: !10428)
!10460 = !DILocation(line: 13, column: 42, scope: !10428)
!10461 = !DILocation(line: 13, column: 19, scope: !10428)
!10462 = !DILocation(line: 13, column: 16, scope: !10428)
!10463 = !DILocation(line: 13, column: 2, scope: !10428)
!10464 = distinct !{!10464, !10463, !10465}
!10465 = !DILocation(line: 19, column: 2, scope: !10428)
!10466 = !DILocation(line: 14, column: 23, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !10429, line: 14, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10428, file: !10429, line: 13, column: 54)
!10469 = !DILocation(line: 14, column: 10, scope: !10467)
!10470 = !DILocation(line: 18, column: 11, scope: !10468)
!10471 = !DILocation(line: 14, column: 7, scope: !10468)
!10472 = !DILocation(line: 22, column: 1, scope: !10428)
!10473 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1823, file: !1823, line: 193, type: !10474, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1742, retainedNodes: !10483)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!107, !10476, !133, !22}
!10476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10477, size: 32)
!10477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10478)
!10478 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1557, line: 37, baseType: !10479)
!10479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1557, line: 32, size: 64, elements: !10480)
!10480 = !{!10481, !10482}
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10479, file: !1557, line: 34, baseType: !162, size: 32)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10479, file: !1557, line: 36, baseType: !162, size: 32, offset: 32)
!10483 = !{!10484, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10493}
!10484 = !DILocalVariable(name: "pins", arg: 1, scope: !10473, file: !1823, line: 193, type: !10476)
!10485 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10473, file: !1823, line: 193, type: !133)
!10486 = !DILocalVariable(name: "reg", arg: 3, scope: !10473, file: !1823, line: 194, type: !22)
!10487 = !DILocalVariable(name: "pin", scope: !10473, file: !1823, line: 196, type: !162)
!10488 = !DILocalVariable(name: "mux", scope: !10473, file: !1823, line: 196, type: !162)
!10489 = !DILocalVariable(name: "pin_cgf", scope: !10473, file: !1823, line: 197, type: !162)
!10490 = !DILocalVariable(name: "ret", scope: !10473, file: !1823, line: 198, type: !107)
!10491 = !DILocalVariable(name: "i", scope: !10492, file: !1823, line: 209, type: !133)
!10492 = distinct !DILexicalBlock(scope: !10473, file: !1823, line: 209, column: 2)
!10493 = !DILocalVariable(name: "gpio_out", scope: !10494, file: !1823, line: 239, type: !162)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1823, line: 238, column: 55)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1823, line: 238, column: 14)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1823, line: 236, column: 14)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1823, line: 234, column: 7)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !1823, line: 209, column: 41)
!10499 = distinct !DILexicalBlock(scope: !10492, file: !1823, line: 209, column: 2)
!10500 = !DILocation(line: 0, scope: !10473)
!10501 = !DILocation(line: 0, scope: !10492)
!10502 = !DILocation(line: 209, column: 25, scope: !10499)
!10503 = !DILocation(line: 209, column: 2, scope: !10492)
!10504 = distinct !{!10504, !10503, !10505}
!10505 = !DILocation(line: 259, column: 2, scope: !10492)
!10506 = !DILocation(line: 210, column: 17, scope: !10498)
!10507 = !DILocation(line: 234, column: 7, scope: !10497)
!10508 = !DILocation(line: 234, column: 33, scope: !10497)
!10509 = !DILocation(line: 234, column: 7, scope: !10498)
!10510 = !DILocation(line: 235, column: 22, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10497, file: !1823, line: 234, column: 49)
!10512 = !DILocation(line: 235, column: 29, scope: !10511)
!10513 = !DILocation(line: 236, column: 3, scope: !10511)
!10514 = !DILocation(line: 236, column: 14, scope: !10497)
!10515 = !DILocation(line: 239, column: 32, scope: !10494)
!10516 = !DILocation(line: 0, scope: !10494)
!10517 = !DILocation(line: 241, column: 8, scope: !10494)
!10518 = !DILocation(line: 246, column: 3, scope: !10494)
!10519 = !DILocation(line: 252, column: 9, scope: !10498)
!10520 = !DILocation(line: 255, column: 9, scope: !10498)
!10521 = !DILocation(line: 256, column: 11, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10498, file: !1823, line: 256, column: 7)
!10523 = !DILocation(line: 209, column: 37, scope: !10499)
!10524 = !DILocation(line: 256, column: 7, scope: !10498)
!10525 = !DILocation(line: 262, column: 1, scope: !10473)
!10526 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1823, file: !1823, line: 176, type: !10527, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1742, retainedNodes: !10529)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{!107, !162, !162, !162}
!10529 = !{!10530, !10531, !10532, !10533}
!10530 = !DILocalVariable(name: "pin", arg: 1, scope: !10526, file: !1823, line: 176, type: !162)
!10531 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10526, file: !1823, line: 176, type: !162)
!10532 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10526, file: !1823, line: 176, type: !162)
!10533 = !DILocalVariable(name: "port_device", scope: !10526, file: !1823, line: 178, type: !1753)
!10534 = !DILocation(line: 0, scope: !10526)
!10535 = !DILocation(line: 180, column: 22, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10526, file: !1823, line: 180, column: 6)
!10537 = !DILocation(line: 180, column: 6, scope: !10526)
!10538 = !DILocation(line: 180, column: 6, scope: !10536)
!10539 = !DILocation(line: 184, column: 16, scope: !10526)
!10540 = !DILocation(line: 186, column: 19, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10526, file: !1823, line: 186, column: 6)
!10542 = !DILocation(line: 186, column: 28, scope: !10541)
!10543 = !DILocation(line: 186, column: 33, scope: !10541)
!10544 = !DILocation(line: 186, column: 6, scope: !10526)
!10545 = !DILocation(line: 190, column: 43, scope: !10526)
!10546 = !DILocation(line: 190, column: 9, scope: !10526)
!10547 = !DILocation(line: 190, column: 2, scope: !10526)
!10548 = !DILocation(line: 191, column: 1, scope: !10526)
!10549 = distinct !DISubprogram(name: "device_is_ready", scope: !3390, file: !3390, line: 47, type: !10550, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1742, retainedNodes: !10552)
!10550 = !DISubroutineType(types: !10551)
!10551 = !{!136, !1753}
!10552 = !{!10553}
!10553 = !DILocalVariable(name: "dev", arg: 1, scope: !10549, file: !3390, line: 47, type: !1753)
!10554 = !DILocation(line: 0, scope: !10549)
!10555 = !DILocation(line: 55, column: 2, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10549, file: !3390, line: 55, column: 2)
!10557 = !{i64 2148851407}
!10558 = !DILocation(line: 56, column: 9, scope: !10549)
!10559 = !DILocation(line: 56, column: 2, scope: !10549)
!10560 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10550, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1742, retainedNodes: !10561)
!10561 = !{!10562}
!10562 = !DILocalVariable(name: "dev", arg: 1, scope: !10560, file: !120, line: 730, type: !1753)
!10563 = !DILocation(line: 0, scope: !10560)
!10564 = !DILocation(line: 732, column: 9, scope: !10560)
!10565 = !DILocation(line: 732, column: 2, scope: !10560)
!10566 = distinct !DISubprogram(name: "SystemInit", scope: !1853, file: !1853, line: 160, type: !3107, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !250)
!10567 = !DILocation(line: 170, column: 1, scope: !10566)
!10568 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1853, file: !1853, line: 210, type: !3107, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !10569)
!10569 = !{!10570, !10571, !10572, !10573, !10574}
!10570 = !DILocalVariable(name: "tmp", scope: !10568, file: !1853, line: 212, type: !162)
!10571 = !DILocalVariable(name: "pllmul", scope: !10568, file: !1853, line: 212, type: !162)
!10572 = !DILocalVariable(name: "plldiv", scope: !10568, file: !1853, line: 212, type: !162)
!10573 = !DILocalVariable(name: "pllsource", scope: !10568, file: !1853, line: 212, type: !162)
!10574 = !DILocalVariable(name: "msirange", scope: !10568, file: !1853, line: 212, type: !162)
!10575 = !DILocation(line: 0, scope: !10568)
!10576 = !DILocation(line: 215, column: 14, scope: !10568)
!10577 = !DILocation(line: 217, column: 3, scope: !10568)
!10578 = !DILocation(line: 220, column: 24, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10568, file: !1853, line: 218, column: 3)
!10580 = !DILocation(line: 220, column: 52, scope: !10579)
!10581 = !DILocation(line: 221, column: 32, scope: !10579)
!10582 = !DILocation(line: 222, column: 7, scope: !10579)
!10583 = !DILocation(line: 228, column: 7, scope: !10579)
!10584 = !DILocation(line: 231, column: 21, scope: !10579)
!10585 = !DILocation(line: 232, column: 21, scope: !10579)
!10586 = !DILocation(line: 233, column: 36, scope: !10579)
!10587 = !DILocation(line: 233, column: 16, scope: !10579)
!10588 = !DILocation(line: 234, column: 24, scope: !10579)
!10589 = !DILocation(line: 234, column: 31, scope: !10579)
!10590 = !DILocation(line: 236, column: 24, scope: !10579)
!10591 = !DILocation(line: 236, column: 29, scope: !10579)
!10592 = !DILocation(line: 238, column: 21, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10579, file: !1853, line: 238, column: 11)
!10594 = !DILocation(line: 238, column: 11, scope: !10579)
!10595 = !DILocation(line: 241, column: 41, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10593, file: !1853, line: 239, column: 7)
!10597 = !DILocation(line: 241, column: 51, scope: !10596)
!10598 = !DILocation(line: 242, column: 7, scope: !10596)
!10599 = !DILocation(line: 246, column: 41, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10593, file: !1853, line: 244, column: 7)
!10601 = !DILocation(line: 246, column: 51, scope: !10600)
!10602 = !DILocation(line: 0, scope: !10579)
!10603 = !DILocation(line: 256, column: 30, scope: !10568)
!10604 = !DILocation(line: 256, column: 52, scope: !10568)
!10605 = !DILocation(line: 256, column: 9, scope: !10568)
!10606 = !DILocation(line: 258, column: 19, scope: !10568)
!10607 = !DILocation(line: 259, column: 1, scope: !10568)
!10608 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10609, file: !10609, line: 228, type: !10610, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !10613)
!10609 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!10612}
!10612 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2847, line: 45, baseType: !2846)
!10613 = !{!10614, !10615}
!10614 = !DILocalVariable(name: "tickstart", scope: !10608, file: !10609, line: 230, type: !162)
!10615 = !DILocalVariable(name: "status", scope: !10608, file: !10609, line: 231, type: !10612)
!10616 = !DILocation(line: 234, column: 3, scope: !10608)
!10617 = !DILocation(line: 238, column: 3, scope: !10608)
!10618 = !DILocation(line: 241, column: 15, scope: !10608)
!10619 = !DILocation(line: 0, scope: !10608)
!10620 = !DILocation(line: 244, column: 3, scope: !10608)
!10621 = !DILocation(line: 244, column: 10, scope: !10608)
!10622 = !DILocation(line: 244, column: 43, scope: !10608)
!10623 = !DILocation(line: 246, column: 10, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !10609, line: 246, column: 9)
!10625 = distinct !DILexicalBlock(scope: !10608, file: !10609, line: 245, column: 3)
!10626 = !DILocation(line: 246, column: 24, scope: !10624)
!10627 = !DILocation(line: 246, column: 37, scope: !10624)
!10628 = !DILocation(line: 246, column: 9, scope: !10625)
!10629 = distinct !{!10629, !10620, !10630}
!10630 = !DILocation(line: 250, column: 3, scope: !10608)
!10631 = !DILocation(line: 253, column: 3, scope: !10608)
!10632 = !DILocation(line: 256, column: 3, scope: !10608)
!10633 = !DILocation(line: 256, column: 10, scope: !10608)
!10634 = !DILocation(line: 256, column: 44, scope: !10608)
!10635 = !DILocation(line: 258, column: 10, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10637, file: !10609, line: 258, column: 9)
!10637 = distinct !DILexicalBlock(scope: !10608, file: !10609, line: 257, column: 3)
!10638 = !DILocation(line: 258, column: 24, scope: !10636)
!10639 = !DILocation(line: 258, column: 37, scope: !10636)
!10640 = !DILocation(line: 258, column: 9, scope: !10637)
!10641 = distinct !{!10641, !10632, !10642}
!10642 = !DILocation(line: 262, column: 3, scope: !10608)
!10643 = !DILocation(line: 265, column: 19, scope: !10608)
!10644 = !DILocation(line: 268, column: 25, scope: !10608)
!10645 = !DILocation(line: 268, column: 12, scope: !10608)
!10646 = !DILocation(line: 269, column: 13, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10608, file: !10609, line: 269, column: 6)
!10648 = !DILocation(line: 269, column: 6, scope: !10608)
!10649 = !DILocation(line: 275, column: 3, scope: !10608)
!10650 = !DILocation(line: 277, column: 3, scope: !10608)
!10651 = !DILocation(line: 280, column: 15, scope: !10608)
!10652 = !DILocation(line: 283, column: 3, scope: !10608)
!10653 = !DILocation(line: 283, column: 10, scope: !10608)
!10654 = !DILocation(line: 283, column: 43, scope: !10608)
!10655 = !DILocation(line: 285, column: 10, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !10609, line: 285, column: 9)
!10657 = distinct !DILexicalBlock(scope: !10608, file: !10609, line: 284, column: 3)
!10658 = !DILocation(line: 285, column: 24, scope: !10656)
!10659 = !DILocation(line: 285, column: 37, scope: !10656)
!10660 = !DILocation(line: 285, column: 9, scope: !10657)
!10661 = distinct !{!10661, !10652, !10662}
!10662 = !DILocation(line: 289, column: 3, scope: !10608)
!10663 = !DILocation(line: 292, column: 3, scope: !10608)
!10664 = !DILocation(line: 295, column: 3, scope: !10608)
!10665 = !DILocation(line: 299, column: 3, scope: !10608)
!10666 = !DILocation(line: 305, column: 3, scope: !10608)
!10667 = !DILocation(line: 307, column: 3, scope: !10608)
!10668 = !DILocation(line: 308, column: 1, scope: !10608)
!10669 = !DISubprogram(name: "HAL_GetTick", scope: !10670, file: !10670, line: 945, type: !6808, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!10670 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10671 = !DISubprogram(name: "HAL_InitTick", scope: !10670, file: !10670, line: 932, type: !10672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{!10612, !162}
!10674 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10609, file: !10609, line: 324, type: !10675, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !10699)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{!10612, !10677}
!10677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10678, size: 32)
!10678 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10679, line: 283, baseType: !10680)
!10679 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10679, line: 252, size: 416, elements: !10681)
!10681 = !{!10682, !10683, !10684, !10685, !10686, !10687, !10688, !10689, !10690, !10691}
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10680, file: !10679, line: 254, baseType: !162, size: 32)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10680, file: !10679, line: 257, baseType: !162, size: 32, offset: 32)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10680, file: !10679, line: 260, baseType: !162, size: 32, offset: 64)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10680, file: !10679, line: 263, baseType: !162, size: 32, offset: 96)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10680, file: !10679, line: 266, baseType: !162, size: 32, offset: 128)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10680, file: !10679, line: 269, baseType: !162, size: 32, offset: 160)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !10680, file: !10679, line: 272, baseType: !162, size: 32, offset: 192)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !10680, file: !10679, line: 275, baseType: !162, size: 32, offset: 224)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !10680, file: !10679, line: 278, baseType: !162, size: 32, offset: 256)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10680, file: !10679, line: 281, baseType: !10692, size: 128, offset: 288)
!10692 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10679, line: 247, baseType: !10693)
!10693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10679, line: 234, size: 128, elements: !10694)
!10694 = !{!10695, !10696, !10697, !10698}
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10693, file: !10679, line: 236, baseType: !162, size: 32)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10693, file: !10679, line: 239, baseType: !162, size: 32, offset: 32)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !10693, file: !10679, line: 242, baseType: !162, size: 32, offset: 64)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !10693, file: !10679, line: 245, baseType: !162, size: 32, offset: 96)
!10699 = !{!10700, !10701, !10702, !10703, !10704, !10705, !10709}
!10700 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10674, file: !10609, line: 324, type: !10677)
!10701 = !DILocalVariable(name: "tickstart", scope: !10674, file: !10609, line: 326, type: !162)
!10702 = !DILocalVariable(name: "status", scope: !10674, file: !10609, line: 327, type: !10612)
!10703 = !DILocalVariable(name: "sysclk_source", scope: !10674, file: !10609, line: 328, type: !162)
!10704 = !DILocalVariable(name: "pll_config", scope: !10674, file: !10609, line: 328, type: !162)
!10705 = !DILocalVariable(name: "pwrclkchanged", scope: !10706, file: !10609, line: 613, type: !10708)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !10609, line: 612, column: 3)
!10707 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 611, column: 6)
!10708 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !871, line: 181, baseType: !2857)
!10709 = !DILocalVariable(name: "tmpreg", scope: !10710, file: !10609, line: 622, type: !283)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !10609, line: 622, column: 7)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !10609, line: 621, column: 5)
!10712 = distinct !DILexicalBlock(scope: !10706, file: !10609, line: 620, column: 8)
!10713 = !DILocation(line: 0, scope: !10674)
!10714 = !DILocation(line: 331, column: 24, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 331, column: 6)
!10716 = !DILocation(line: 331, column: 6, scope: !10674)
!10717 = !DILocation(line: 338, column: 19, scope: !10674)
!10718 = !DILocation(line: 339, column: 16, scope: !10674)
!10719 = !DILocation(line: 342, column: 27, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 342, column: 6)
!10721 = !DILocation(line: 342, column: 43, scope: !10720)
!10722 = !DILocation(line: 342, column: 69, scope: !10720)
!10723 = !DILocation(line: 342, column: 6, scope: !10674)
!10724 = !DILocation(line: 348, column: 23, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10726, file: !10609, line: 348, column: 8)
!10726 = distinct !DILexicalBlock(scope: !10720, file: !10609, line: 343, column: 3)
!10727 = !DILocation(line: 349, column: 8, scope: !10725)
!10728 = !DILocation(line: 349, column: 27, scope: !10725)
!10729 = !DILocation(line: 349, column: 62, scope: !10725)
!10730 = !DILocation(line: 351, column: 11, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !10609, line: 351, column: 10)
!10732 = distinct !DILexicalBlock(scope: !10725, file: !10609, line: 350, column: 5)
!10733 = !DILocation(line: 351, column: 47, scope: !10731)
!10734 = !DILocation(line: 351, column: 54, scope: !10731)
!10735 = !DILocation(line: 351, column: 77, scope: !10731)
!10736 = !DILocation(line: 351, column: 86, scope: !10731)
!10737 = !DILocation(line: 351, column: 10, scope: !10732)
!10738 = !DILocation(line: 359, column: 7, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !10609, line: 359, column: 7)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !10609, line: 359, column: 7)
!10741 = distinct !DILexicalBlock(scope: !10725, file: !10609, line: 357, column: 5)
!10742 = !DILocation(line: 359, column: 7, scope: !10740)
!10743 = !DILocation(line: 359, column: 7, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10739, file: !10609, line: 359, column: 7)
!10745 = !DILocation(line: 359, column: 7, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10747, file: !10609, line: 359, column: 7)
!10747 = distinct !DILexicalBlock(scope: !10739, file: !10609, line: 359, column: 7)
!10748 = !DILocation(line: 359, column: 7, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !10609, line: 359, column: 7)
!10750 = distinct !DILexicalBlock(scope: !10747, file: !10609, line: 359, column: 7)
!10751 = !DILocation(line: 359, column: 7, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10750, file: !10609, line: 359, column: 7)
!10753 = !DILocation(line: 0, scope: !10739)
!10754 = !DILocation(line: 362, column: 29, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10741, file: !10609, line: 362, column: 10)
!10756 = !DILocation(line: 362, column: 38, scope: !10755)
!10757 = !DILocation(line: 0, scope: !10755)
!10758 = !DILocation(line: 362, column: 10, scope: !10741)
!10759 = !DILocation(line: 368, column: 15, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !10609, line: 363, column: 7)
!10761 = !DILocation(line: 368, column: 51, scope: !10760)
!10762 = !DILocation(line: 368, column: 9, scope: !10760)
!10763 = !DILocation(line: 370, column: 15, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !10609, line: 370, column: 14)
!10765 = distinct !DILexicalBlock(scope: !10760, file: !10609, line: 369, column: 9)
!10766 = !DILocation(line: 370, column: 29, scope: !10764)
!10767 = !DILocation(line: 370, column: 43, scope: !10764)
!10768 = !DILocation(line: 370, column: 14, scope: !10765)
!10769 = distinct !{!10769, !10762, !10770}
!10770 = !DILocation(line: 374, column: 9, scope: !10760)
!10771 = !DILocation(line: 382, column: 15, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10755, file: !10609, line: 377, column: 7)
!10773 = !DILocation(line: 382, column: 51, scope: !10772)
!10774 = !DILocation(line: 382, column: 9, scope: !10772)
!10775 = !DILocation(line: 384, column: 16, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !10609, line: 384, column: 15)
!10777 = distinct !DILexicalBlock(scope: !10772, file: !10609, line: 383, column: 9)
!10778 = !DILocation(line: 384, column: 30, scope: !10776)
!10779 = !DILocation(line: 384, column: 44, scope: !10776)
!10780 = !DILocation(line: 384, column: 15, scope: !10777)
!10781 = distinct !{!10781, !10774, !10782}
!10782 = !DILocation(line: 388, column: 9, scope: !10772)
!10783 = !DILocation(line: 393, column: 27, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 393, column: 6)
!10785 = !DILocation(line: 393, column: 43, scope: !10784)
!10786 = !DILocation(line: 393, column: 69, scope: !10784)
!10787 = !DILocation(line: 393, column: 6, scope: !10674)
!10788 = !DILocation(line: 400, column: 23, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10609, line: 400, column: 8)
!10790 = distinct !DILexicalBlock(scope: !10784, file: !10609, line: 394, column: 3)
!10791 = !DILocation(line: 401, column: 8, scope: !10789)
!10792 = !DILocation(line: 401, column: 27, scope: !10789)
!10793 = !DILocation(line: 401, column: 62, scope: !10789)
!10794 = !DILocation(line: 404, column: 11, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !10609, line: 404, column: 10)
!10796 = distinct !DILexicalBlock(scope: !10789, file: !10609, line: 402, column: 5)
!10797 = !DILocation(line: 404, column: 47, scope: !10795)
!10798 = !DILocation(line: 404, column: 54, scope: !10795)
!10799 = !DILocation(line: 404, column: 77, scope: !10795)
!10800 = !DILocation(line: 404, column: 86, scope: !10795)
!10801 = !DILocation(line: 404, column: 10, scope: !10796)
!10802 = !DILocation(line: 418, column: 29, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !10609, line: 418, column: 10)
!10804 = distinct !DILexicalBlock(scope: !10789, file: !10609, line: 416, column: 5)
!10805 = !DILocation(line: 418, column: 38, scope: !10803)
!10806 = !DILocation(line: 418, column: 10, scope: !10804)
!10807 = !DILocation(line: 421, column: 9, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10803, file: !10609, line: 419, column: 7)
!10809 = !DILocation(line: 424, column: 21, scope: !10808)
!10810 = !DILocation(line: 427, column: 9, scope: !10808)
!10811 = !DILocation(line: 427, column: 15, scope: !10808)
!10812 = !DILocation(line: 427, column: 51, scope: !10808)
!10813 = !DILocation(line: 429, column: 15, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10609, line: 429, column: 14)
!10815 = distinct !DILexicalBlock(scope: !10808, file: !10609, line: 428, column: 9)
!10816 = !DILocation(line: 429, column: 29, scope: !10814)
!10817 = !DILocation(line: 429, column: 43, scope: !10814)
!10818 = !DILocation(line: 429, column: 14, scope: !10815)
!10819 = distinct !{!10819, !10810, !10820}
!10820 = !DILocation(line: 433, column: 9, scope: !10808)
!10821 = !DILocation(line: 441, column: 9, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10803, file: !10609, line: 439, column: 7)
!10823 = !DILocation(line: 444, column: 21, scope: !10822)
!10824 = !DILocation(line: 447, column: 9, scope: !10822)
!10825 = !DILocation(line: 447, column: 15, scope: !10822)
!10826 = !DILocation(line: 447, column: 51, scope: !10822)
!10827 = !DILocation(line: 449, column: 15, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !10609, line: 449, column: 14)
!10829 = distinct !DILexicalBlock(scope: !10822, file: !10609, line: 448, column: 9)
!10830 = !DILocation(line: 449, column: 29, scope: !10828)
!10831 = !DILocation(line: 449, column: 43, scope: !10828)
!10832 = !DILocation(line: 449, column: 14, scope: !10829)
!10833 = distinct !{!10833, !10824, !10834}
!10834 = !DILocation(line: 453, column: 9, scope: !10822)
!10835 = !DILocation(line: 0, scope: !10789)
!10836 = !DILocation(line: 458, column: 27, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 458, column: 6)
!10838 = !DILocation(line: 458, column: 43, scope: !10837)
!10839 = !DILocation(line: 458, column: 69, scope: !10837)
!10840 = !DILocation(line: 458, column: 6, scope: !10674)
!10841 = !DILocation(line: 461, column: 22, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !10609, line: 461, column: 8)
!10843 = distinct !DILexicalBlock(scope: !10837, file: !10609, line: 459, column: 3)
!10844 = !DILocation(line: 461, column: 8, scope: !10843)
!10845 = !DILocation(line: 463, column: 11, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !10609, line: 463, column: 10)
!10847 = distinct !DILexicalBlock(scope: !10842, file: !10609, line: 462, column: 5)
!10848 = !DILocation(line: 463, column: 47, scope: !10846)
!10849 = !DILocation(line: 463, column: 54, scope: !10846)
!10850 = !DILocation(line: 463, column: 77, scope: !10846)
!10851 = !DILocation(line: 463, column: 86, scope: !10846)
!10852 = !DILocation(line: 463, column: 10, scope: !10847)
!10853 = !DILocation(line: 477, column: 31, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !10609, line: 477, column: 12)
!10855 = distinct !DILexicalBlock(scope: !10846, file: !10609, line: 469, column: 7)
!10856 = !DILocation(line: 477, column: 47, scope: !10854)
!10857 = !DILocation(line: 477, column: 45, scope: !10854)
!10858 = !DILocation(line: 477, column: 12, scope: !10855)
!10859 = !DILocation(line: 480, column: 14, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10861, file: !10609, line: 480, column: 14)
!10861 = distinct !DILexicalBlock(scope: !10854, file: !10609, line: 478, column: 9)
!10862 = !DILocation(line: 480, column: 80, scope: !10860)
!10863 = !DILocation(line: 480, column: 14, scope: !10861)
!10864 = !DILocation(line: 486, column: 11, scope: !10861)
!10865 = !DILocation(line: 488, column: 11, scope: !10861)
!10866 = !DILocation(line: 489, column: 9, scope: !10861)
!10867 = !DILocation(line: 494, column: 11, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10854, file: !10609, line: 491, column: 9)
!10869 = !DILocation(line: 496, column: 11, scope: !10868)
!10870 = !DILocation(line: 499, column: 65, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10868, file: !10609, line: 499, column: 14)
!10872 = !DILocation(line: 499, column: 14, scope: !10871)
!10873 = !DILocation(line: 499, column: 80, scope: !10871)
!10874 = !DILocation(line: 499, column: 14, scope: !10868)
!10875 = !DILocation(line: 506, column: 67, scope: !10855)
!10876 = !DILocation(line: 506, column: 81, scope: !10855)
!10877 = !DILocation(line: 506, column: 36, scope: !10855)
!10878 = !DILocation(line: 507, column: 52, scope: !10855)
!10879 = !DILocation(line: 507, column: 74, scope: !10855)
!10880 = !DILocation(line: 507, column: 31, scope: !10855)
!10881 = !DILocation(line: 507, column: 28, scope: !10855)
!10882 = !DILocation(line: 506, column: 25, scope: !10855)
!10883 = !DILocation(line: 510, column: 31, scope: !10855)
!10884 = !DILocation(line: 510, column: 18, scope: !10855)
!10885 = !DILocation(line: 511, column: 19, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10855, file: !10609, line: 511, column: 12)
!10887 = !DILocation(line: 511, column: 12, scope: !10855)
!10888 = !DILocation(line: 523, column: 29, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !10609, line: 523, column: 10)
!10890 = distinct !DILexicalBlock(scope: !10842, file: !10609, line: 518, column: 5)
!10891 = !DILocation(line: 523, column: 38, scope: !10889)
!10892 = !DILocation(line: 523, column: 10, scope: !10890)
!10893 = !DILocation(line: 526, column: 9, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10889, file: !10609, line: 524, column: 7)
!10895 = !DILocation(line: 529, column: 21, scope: !10894)
!10896 = !DILocation(line: 532, column: 9, scope: !10894)
!10897 = !DILocation(line: 532, column: 15, scope: !10894)
!10898 = !DILocation(line: 532, column: 51, scope: !10894)
!10899 = !DILocation(line: 534, column: 15, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !10609, line: 534, column: 14)
!10901 = distinct !DILexicalBlock(scope: !10894, file: !10609, line: 533, column: 9)
!10902 = !DILocation(line: 534, column: 29, scope: !10900)
!10903 = !DILocation(line: 534, column: 42, scope: !10900)
!10904 = !DILocation(line: 534, column: 14, scope: !10901)
!10905 = distinct !{!10905, !10896, !10906}
!10906 = !DILocation(line: 538, column: 9, scope: !10894)
!10907 = !DILocation(line: 544, column: 9, scope: !10894)
!10908 = !DILocation(line: 546, column: 9, scope: !10894)
!10909 = !DILocation(line: 548, column: 7, scope: !10894)
!10910 = !DILocation(line: 552, column: 9, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10889, file: !10609, line: 550, column: 7)
!10912 = !DILocation(line: 555, column: 21, scope: !10911)
!10913 = !DILocation(line: 558, column: 9, scope: !10911)
!10914 = !DILocation(line: 558, column: 15, scope: !10911)
!10915 = !DILocation(line: 558, column: 51, scope: !10911)
!10916 = !DILocation(line: 560, column: 15, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10918, file: !10609, line: 560, column: 14)
!10918 = distinct !DILexicalBlock(scope: !10911, file: !10609, line: 559, column: 9)
!10919 = !DILocation(line: 560, column: 29, scope: !10917)
!10920 = !DILocation(line: 560, column: 42, scope: !10917)
!10921 = !DILocation(line: 560, column: 14, scope: !10918)
!10922 = distinct !{!10922, !10913, !10923}
!10923 = !DILocation(line: 564, column: 9, scope: !10911)
!10924 = !DILocation(line: 569, column: 27, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 569, column: 6)
!10926 = !DILocation(line: 569, column: 43, scope: !10925)
!10927 = !DILocation(line: 569, column: 69, scope: !10925)
!10928 = !DILocation(line: 569, column: 6, scope: !10674)
!10929 = !DILocation(line: 575, column: 27, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10931, file: !10609, line: 575, column: 8)
!10931 = distinct !DILexicalBlock(scope: !10925, file: !10609, line: 570, column: 3)
!10932 = !DILocation(line: 575, column: 36, scope: !10930)
!10933 = !DILocation(line: 575, column: 8, scope: !10931)
!10934 = !DILocation(line: 578, column: 7, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10930, file: !10609, line: 576, column: 5)
!10936 = !DILocation(line: 581, column: 19, scope: !10935)
!10937 = !DILocation(line: 584, column: 7, scope: !10935)
!10938 = !DILocation(line: 584, column: 13, scope: !10935)
!10939 = !DILocation(line: 584, column: 49, scope: !10935)
!10940 = !DILocation(line: 586, column: 13, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !10609, line: 586, column: 12)
!10942 = distinct !DILexicalBlock(scope: !10935, file: !10609, line: 585, column: 7)
!10943 = !DILocation(line: 586, column: 27, scope: !10941)
!10944 = !DILocation(line: 586, column: 41, scope: !10941)
!10945 = !DILocation(line: 586, column: 12, scope: !10942)
!10946 = distinct !{!10946, !10937, !10947}
!10947 = !DILocation(line: 590, column: 7, scope: !10935)
!10948 = !DILocation(line: 595, column: 7, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10930, file: !10609, line: 593, column: 5)
!10950 = !DILocation(line: 598, column: 19, scope: !10949)
!10951 = !DILocation(line: 601, column: 7, scope: !10949)
!10952 = !DILocation(line: 601, column: 13, scope: !10949)
!10953 = !DILocation(line: 601, column: 49, scope: !10949)
!10954 = !DILocation(line: 603, column: 13, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !10609, line: 603, column: 12)
!10956 = distinct !DILexicalBlock(scope: !10949, file: !10609, line: 602, column: 7)
!10957 = !DILocation(line: 603, column: 27, scope: !10955)
!10958 = !DILocation(line: 603, column: 41, scope: !10955)
!10959 = !DILocation(line: 603, column: 12, scope: !10956)
!10960 = distinct !{!10960, !10951, !10961}
!10961 = !DILocation(line: 607, column: 7, scope: !10949)
!10962 = !DILocation(line: 611, column: 27, scope: !10707)
!10963 = !DILocation(line: 611, column: 43, scope: !10707)
!10964 = !DILocation(line: 611, column: 69, scope: !10707)
!10965 = !DILocation(line: 611, column: 6, scope: !10674)
!10966 = !DILocation(line: 0, scope: !10706)
!10967 = !DILocation(line: 620, column: 8, scope: !10712)
!10968 = !DILocation(line: 620, column: 8, scope: !10706)
!10969 = !DILocation(line: 622, column: 7, scope: !10710)
!10970 = !DILocation(line: 622, column: 7, scope: !10711)
!10971 = !DILocation(line: 624, column: 5, scope: !10711)
!10972 = !DILocation(line: 626, column: 8, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10706, file: !10609, line: 626, column: 8)
!10974 = !DILocation(line: 626, column: 8, scope: !10706)
!10975 = !DILocation(line: 629, column: 7, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10973, file: !10609, line: 627, column: 5)
!10977 = !DILocation(line: 632, column: 19, scope: !10976)
!10978 = !DILocation(line: 634, column: 7, scope: !10976)
!10979 = !DILocation(line: 634, column: 13, scope: !10976)
!10980 = !DILocation(line: 636, column: 13, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !10609, line: 636, column: 12)
!10982 = distinct !DILexicalBlock(scope: !10976, file: !10609, line: 635, column: 7)
!10983 = !DILocation(line: 636, column: 27, scope: !10981)
!10984 = !DILocation(line: 636, column: 40, scope: !10981)
!10985 = !DILocation(line: 636, column: 12, scope: !10982)
!10986 = distinct !{!10986, !10978, !10987}
!10987 = !DILocation(line: 640, column: 7, scope: !10976)
!10988 = !DILocation(line: 644, column: 5, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !10609, line: 644, column: 5)
!10990 = distinct !DILexicalBlock(scope: !10706, file: !10609, line: 644, column: 5)
!10991 = !DILocation(line: 644, column: 5, scope: !10990)
!10992 = !DILocation(line: 644, column: 5, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !10609, line: 644, column: 5)
!10994 = !DILocation(line: 644, column: 5, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !10609, line: 644, column: 5)
!10996 = distinct !DILexicalBlock(scope: !10989, file: !10609, line: 644, column: 5)
!10997 = !DILocation(line: 644, column: 5, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !10609, line: 644, column: 5)
!10999 = distinct !DILexicalBlock(scope: !10996, file: !10609, line: 644, column: 5)
!11000 = !DILocation(line: 644, column: 5, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !10609, line: 644, column: 5)
!11002 = !DILocation(line: 0, scope: !10989)
!11003 = !DILocation(line: 646, column: 27, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10706, file: !10609, line: 646, column: 8)
!11005 = !DILocation(line: 646, column: 36, scope: !11004)
!11006 = !DILocation(line: 0, scope: !11004)
!11007 = !DILocation(line: 646, column: 8, scope: !10706)
!11008 = !DILocation(line: 652, column: 13, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11004, file: !10609, line: 647, column: 5)
!11010 = !DILocation(line: 652, column: 49, scope: !11009)
!11011 = !DILocation(line: 652, column: 7, scope: !11009)
!11012 = !DILocation(line: 654, column: 13, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !10609, line: 654, column: 12)
!11014 = distinct !DILexicalBlock(scope: !11009, file: !10609, line: 653, column: 7)
!11015 = !DILocation(line: 654, column: 27, scope: !11013)
!11016 = !DILocation(line: 654, column: 41, scope: !11013)
!11017 = !DILocation(line: 654, column: 12, scope: !11014)
!11018 = distinct !{!11018, !11011, !11019}
!11019 = !DILocation(line: 658, column: 7, scope: !11009)
!11020 = !DILocation(line: 666, column: 13, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11004, file: !10609, line: 661, column: 5)
!11022 = !DILocation(line: 666, column: 49, scope: !11021)
!11023 = !DILocation(line: 666, column: 7, scope: !11021)
!11024 = !DILocation(line: 668, column: 13, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !10609, line: 668, column: 12)
!11026 = distinct !DILexicalBlock(scope: !11021, file: !10609, line: 667, column: 7)
!11027 = !DILocation(line: 668, column: 27, scope: !11025)
!11028 = !DILocation(line: 668, column: 41, scope: !11025)
!11029 = !DILocation(line: 668, column: 12, scope: !11026)
!11030 = distinct !{!11030, !11023, !11031}
!11031 = !DILocation(line: 672, column: 7, scope: !11021)
!11032 = !DILocation(line: 676, column: 8, scope: !10706)
!11033 = !DILocation(line: 678, column: 7, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !10609, line: 677, column: 5)
!11035 = distinct !DILexicalBlock(scope: !10706, file: !10609, line: 676, column: 8)
!11036 = !DILocation(line: 679, column: 5, scope: !11034)
!11037 = !DILocation(line: 685, column: 31, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !10674, file: !10609, line: 685, column: 7)
!11039 = !DILocation(line: 685, column: 41, scope: !11038)
!11040 = !DILocation(line: 685, column: 7, scope: !10674)
!11041 = !DILocation(line: 688, column: 22, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11043, file: !10609, line: 688, column: 8)
!11043 = distinct !DILexicalBlock(scope: !11038, file: !10609, line: 686, column: 3)
!11044 = !DILocation(line: 688, column: 8, scope: !11043)
!11045 = !DILocation(line: 690, column: 44, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !10609, line: 690, column: 10)
!11047 = distinct !DILexicalBlock(scope: !11042, file: !10609, line: 689, column: 5)
!11048 = !DILocation(line: 0, scope: !11046)
!11049 = !DILocation(line: 690, column: 10, scope: !11047)
!11050 = !DILocation(line: 704, column: 15, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11046, file: !10609, line: 691, column: 7)
!11052 = !DILocation(line: 704, column: 51, scope: !11051)
!11053 = !DILocation(line: 704, column: 9, scope: !11051)
!11054 = !DILocation(line: 706, column: 15, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !10609, line: 706, column: 14)
!11056 = distinct !DILexicalBlock(scope: !11051, file: !10609, line: 705, column: 9)
!11057 = !DILocation(line: 706, column: 29, scope: !11055)
!11058 = !DILocation(line: 706, column: 43, scope: !11055)
!11059 = !DILocation(line: 706, column: 14, scope: !11056)
!11060 = distinct !{!11060, !11053, !11061}
!11061 = !DILocation(line: 710, column: 9, scope: !11051)
!11062 = !DILocation(line: 713, column: 9, scope: !11051)
!11063 = !DILocation(line: 717, column: 9, scope: !11051)
!11064 = !DILocation(line: 720, column: 21, scope: !11051)
!11065 = !DILocation(line: 723, column: 9, scope: !11051)
!11066 = !DILocation(line: 723, column: 15, scope: !11051)
!11067 = !DILocation(line: 723, column: 51, scope: !11051)
!11068 = !DILocation(line: 725, column: 15, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11070, file: !10609, line: 725, column: 14)
!11070 = distinct !DILexicalBlock(scope: !11051, file: !10609, line: 724, column: 9)
!11071 = !DILocation(line: 725, column: 29, scope: !11069)
!11072 = !DILocation(line: 725, column: 43, scope: !11069)
!11073 = !DILocation(line: 725, column: 14, scope: !11070)
!11074 = distinct !{!11074, !11065, !11075}
!11075 = !DILocation(line: 729, column: 9, scope: !11051)
!11076 = !DILocation(line: 740, column: 15, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11046, file: !10609, line: 732, column: 7)
!11078 = !DILocation(line: 740, column: 51, scope: !11077)
!11079 = !DILocation(line: 740, column: 9, scope: !11077)
!11080 = !DILocation(line: 742, column: 15, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !10609, line: 742, column: 14)
!11082 = distinct !DILexicalBlock(scope: !11077, file: !10609, line: 741, column: 9)
!11083 = !DILocation(line: 742, column: 29, scope: !11081)
!11084 = !DILocation(line: 742, column: 43, scope: !11081)
!11085 = !DILocation(line: 742, column: 14, scope: !11082)
!11086 = distinct !{!11086, !11079, !11087}
!11087 = !DILocation(line: 746, column: 9, scope: !11077)
!11088 = !DILocation(line: 752, column: 44, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !10609, line: 752, column: 10)
!11090 = distinct !DILexicalBlock(scope: !11042, file: !10609, line: 750, column: 5)
!11091 = !DILocation(line: 752, column: 10, scope: !11090)
!11092 = !DILocation(line: 759, column: 27, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11089, file: !10609, line: 757, column: 7)
!11094 = !DILocation(line: 760, column: 13, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11093, file: !10609, line: 760, column: 12)
!11096 = !DILocation(line: 760, column: 77, scope: !11095)
!11097 = !DILocation(line: 760, column: 51, scope: !11095)
!11098 = !DILocation(line: 760, column: 88, scope: !11095)
!11099 = !DILocation(line: 761, column: 13, scope: !11095)
!11100 = !DILocation(line: 761, column: 77, scope: !11095)
!11101 = !DILocation(line: 761, column: 51, scope: !11095)
!11102 = !DILocation(line: 761, column: 85, scope: !11095)
!11103 = !DILocation(line: 762, column: 13, scope: !11095)
!11104 = !DILocation(line: 762, column: 77, scope: !11095)
!11105 = !DILocation(line: 762, column: 51, scope: !11095)
!11106 = !DILocation(line: 760, column: 12, scope: !11093)
!11107 = !DILocation(line: 770, column: 3, scope: !10674)
!11108 = !DILocation(line: 771, column: 1, scope: !10674)
!11109 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !10609, file: !10609, line: 1343, type: !10672, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11110)
!11110 = !{!11111, !11112, !11113, !11114}
!11111 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !11109, file: !10609, line: 1343, type: !162)
!11112 = !DILocalVariable(name: "vos", scope: !11109, file: !10609, line: 1345, type: !162)
!11113 = !DILocalVariable(name: "latency", scope: !11109, file: !10609, line: 1346, type: !162)
!11114 = !DILocalVariable(name: "tmpreg", scope: !11115, file: !10609, line: 1357, type: !283)
!11115 = distinct !DILexicalBlock(scope: !11116, file: !10609, line: 1357, column: 7)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !10609, line: 1356, column: 5)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !10609, line: 1351, column: 8)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !10609, line: 1350, column: 3)
!11119 = distinct !DILexicalBlock(scope: !11109, file: !10609, line: 1349, column: 7)
!11120 = !DILocation(line: 0, scope: !11109)
!11121 = !DILocation(line: 1349, column: 7, scope: !11119)
!11122 = !DILocation(line: 1349, column: 42, scope: !11119)
!11123 = !DILocation(line: 1349, column: 7, scope: !11109)
!11124 = !DILocation(line: 1351, column: 8, scope: !11117)
!11125 = !DILocation(line: 1351, column: 8, scope: !11118)
!11126 = !DILocation(line: 1353, column: 13, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11117, file: !10609, line: 1352, column: 5)
!11128 = !DILocation(line: 1354, column: 5, scope: !11127)
!11129 = !DILocation(line: 1357, column: 7, scope: !11115)
!11130 = !DILocation(line: 1357, column: 7, scope: !11116)
!11131 = !DILocation(line: 1358, column: 13, scope: !11116)
!11132 = !DILocation(line: 1359, column: 7, scope: !11116)
!11133 = !DILocation(line: 0, scope: !11117)
!11134 = !DILocation(line: 1363, column: 13, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11118, file: !10609, line: 1363, column: 8)
!11136 = !DILocation(line: 1363, column: 46, scope: !11135)
!11137 = !DILocation(line: 1369, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11109, file: !10609, line: 1369, column: 3)
!11139 = !DILocation(line: 1369, column: 3, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !10609, line: 1369, column: 3)
!11141 = distinct !DILexicalBlock(scope: !11138, file: !10609, line: 1369, column: 3)
!11142 = !DILocation(line: 1373, column: 6, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11109, file: !10609, line: 1373, column: 6)
!11144 = !DILocation(line: 1379, column: 1, scope: !11109)
!11145 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10609, file: !10609, line: 799, type: !11146, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11157)
!11146 = !DISubroutineType(types: !11147)
!11147 = !{!10612, !11148, !162}
!11148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11149, size: 32)
!11149 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10679, line: 304, baseType: !11150)
!11150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10679, line: 288, size: 160, elements: !11151)
!11151 = !{!11152, !11153, !11154, !11155, !11156}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11150, file: !10679, line: 290, baseType: !162, size: 32)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11150, file: !10679, line: 293, baseType: !162, size: 32, offset: 32)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11150, file: !10679, line: 296, baseType: !162, size: 32, offset: 64)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11150, file: !10679, line: 299, baseType: !162, size: 32, offset: 96)
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11150, file: !10679, line: 302, baseType: !162, size: 32, offset: 128)
!11157 = !{!11158, !11159, !11160, !11161}
!11158 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11145, file: !10609, line: 799, type: !11148)
!11159 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11145, file: !10609, line: 799, type: !162)
!11160 = !DILocalVariable(name: "tickstart", scope: !11145, file: !10609, line: 801, type: !162)
!11161 = !DILocalVariable(name: "status", scope: !11145, file: !10609, line: 802, type: !10612)
!11162 = !DILocation(line: 0, scope: !11145)
!11163 = !DILocation(line: 805, column: 24, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 805, column: 6)
!11165 = !DILocation(line: 805, column: 6, scope: !11145)
!11166 = !DILocation(line: 817, column: 17, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 817, column: 6)
!11168 = !DILocation(line: 817, column: 15, scope: !11167)
!11169 = !DILocation(line: 817, column: 6, scope: !11145)
!11170 = !DILocation(line: 820, column: 5, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !10609, line: 820, column: 5)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !10609, line: 820, column: 5)
!11173 = distinct !DILexicalBlock(scope: !11167, file: !10609, line: 818, column: 3)
!11174 = !DILocation(line: 820, column: 5, scope: !11172)
!11175 = !DILocation(line: 820, column: 5, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11171, file: !10609, line: 820, column: 5)
!11177 = !DILocation(line: 824, column: 8, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11173, file: !10609, line: 824, column: 8)
!11179 = !DILocation(line: 824, column: 34, scope: !11178)
!11180 = !DILocation(line: 824, column: 8, scope: !11173)
!11181 = !DILocation(line: 831, column: 27, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 831, column: 6)
!11183 = !DILocation(line: 831, column: 38, scope: !11182)
!11184 = !DILocation(line: 831, column: 60, scope: !11182)
!11185 = !DILocation(line: 831, column: 6, scope: !11145)
!11186 = !DILocation(line: 834, column: 5, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !10609, line: 832, column: 3)
!11188 = !DILocation(line: 838, column: 27, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 838, column: 6)
!11190 = !DILocation(line: 835, column: 3, scope: !11187)
!11191 = !DILocation(line: 838, column: 38, scope: !11189)
!11192 = !DILocation(line: 838, column: 62, scope: !11189)
!11193 = !DILocation(line: 838, column: 6, scope: !11145)
!11194 = !DILocation(line: 843, column: 27, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11196, file: !10609, line: 843, column: 8)
!11196 = distinct !DILexicalBlock(scope: !11189, file: !10609, line: 839, column: 3)
!11197 = !DILocation(line: 843, column: 8, scope: !11196)
!11198 = !DILocation(line: 846, column: 10, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !10609, line: 846, column: 10)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !10609, line: 844, column: 5)
!11201 = !DILocation(line: 846, column: 46, scope: !11199)
!11202 = !DILocation(line: 846, column: 10, scope: !11200)
!11203 = !DILocation(line: 855, column: 10, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !10609, line: 855, column: 10)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !10609, line: 853, column: 5)
!11206 = distinct !DILexicalBlock(scope: !11195, file: !10609, line: 852, column: 13)
!11207 = !DILocation(line: 855, column: 46, scope: !11204)
!11208 = !DILocation(line: 855, column: 10, scope: !11205)
!11209 = !DILocation(line: 864, column: 10, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !10609, line: 864, column: 10)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !10609, line: 862, column: 5)
!11212 = distinct !DILexicalBlock(scope: !11206, file: !10609, line: 861, column: 13)
!11213 = !DILocation(line: 864, column: 46, scope: !11210)
!11214 = !DILocation(line: 864, column: 10, scope: !11211)
!11215 = !DILocation(line: 873, column: 10, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !10609, line: 873, column: 10)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !10609, line: 871, column: 5)
!11218 = !DILocation(line: 873, column: 46, scope: !11216)
!11219 = !DILocation(line: 873, column: 10, scope: !11217)
!11220 = !DILocation(line: 878, column: 5, scope: !11196)
!11221 = !DILocation(line: 881, column: 17, scope: !11196)
!11222 = !DILocation(line: 883, column: 27, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11196, file: !10609, line: 883, column: 8)
!11224 = !DILocation(line: 883, column: 8, scope: !11196)
!11225 = !DILocation(line: 885, column: 14, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11223, file: !10609, line: 884, column: 5)
!11227 = !DILocation(line: 885, column: 44, scope: !11226)
!11228 = !DILocation(line: 885, column: 7, scope: !11226)
!11229 = !DILocation(line: 887, column: 13, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !10609, line: 887, column: 12)
!11231 = distinct !DILexicalBlock(scope: !11226, file: !10609, line: 886, column: 7)
!11232 = !DILocation(line: 887, column: 27, scope: !11230)
!11233 = !DILocation(line: 887, column: 41, scope: !11230)
!11234 = !DILocation(line: 887, column: 12, scope: !11231)
!11235 = distinct !{!11235, !11228, !11236}
!11236 = !DILocation(line: 891, column: 7, scope: !11226)
!11237 = !DILocation(line: 895, column: 14, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !10609, line: 894, column: 5)
!11239 = distinct !DILexicalBlock(scope: !11223, file: !10609, line: 893, column: 13)
!11240 = !DILocation(line: 895, column: 44, scope: !11238)
!11241 = !DILocation(line: 895, column: 7, scope: !11238)
!11242 = !DILocation(line: 897, column: 13, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !10609, line: 897, column: 12)
!11244 = distinct !DILexicalBlock(scope: !11238, file: !10609, line: 896, column: 7)
!11245 = !DILocation(line: 897, column: 27, scope: !11243)
!11246 = !DILocation(line: 897, column: 41, scope: !11243)
!11247 = !DILocation(line: 897, column: 12, scope: !11244)
!11248 = distinct !{!11248, !11241, !11249}
!11249 = !DILocation(line: 901, column: 7, scope: !11238)
!11250 = !DILocation(line: 905, column: 14, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !10609, line: 904, column: 5)
!11252 = distinct !DILexicalBlock(scope: !11239, file: !10609, line: 903, column: 13)
!11253 = !DILocation(line: 905, column: 44, scope: !11251)
!11254 = !DILocation(line: 905, column: 7, scope: !11251)
!11255 = !DILocation(line: 907, column: 13, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !10609, line: 907, column: 12)
!11257 = distinct !DILexicalBlock(scope: !11251, file: !10609, line: 906, column: 7)
!11258 = !DILocation(line: 907, column: 27, scope: !11256)
!11259 = !DILocation(line: 907, column: 41, scope: !11256)
!11260 = !DILocation(line: 907, column: 12, scope: !11257)
!11261 = distinct !{!11261, !11254, !11262}
!11262 = !DILocation(line: 911, column: 7, scope: !11251)
!11263 = !DILocation(line: 915, column: 13, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11252, file: !10609, line: 914, column: 5)
!11265 = !DILocation(line: 915, column: 43, scope: !11264)
!11266 = !DILocation(line: 915, column: 7, scope: !11264)
!11267 = !DILocation(line: 917, column: 13, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !10609, line: 917, column: 12)
!11269 = distinct !DILexicalBlock(scope: !11264, file: !10609, line: 916, column: 7)
!11270 = !DILocation(line: 917, column: 27, scope: !11268)
!11271 = !DILocation(line: 917, column: 41, scope: !11268)
!11272 = !DILocation(line: 917, column: 12, scope: !11269)
!11273 = distinct !{!11273, !11266, !11274}
!11274 = !DILocation(line: 921, column: 7, scope: !11264)
!11275 = !DILocation(line: 925, column: 17, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 925, column: 6)
!11277 = !DILocation(line: 925, column: 15, scope: !11276)
!11278 = !DILocation(line: 925, column: 6, scope: !11145)
!11279 = !DILocation(line: 928, column: 5, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !10609, line: 928, column: 5)
!11281 = distinct !DILexicalBlock(scope: !11276, file: !10609, line: 926, column: 3)
!11282 = !DILocation(line: 932, column: 8, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11281, file: !10609, line: 932, column: 8)
!11284 = !DILocation(line: 932, column: 34, scope: !11283)
!11285 = !DILocation(line: 932, column: 8, scope: !11281)
!11286 = !DILocation(line: 939, column: 27, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 939, column: 6)
!11288 = !DILocation(line: 939, column: 38, scope: !11287)
!11289 = !DILocation(line: 939, column: 61, scope: !11287)
!11290 = !DILocation(line: 939, column: 6, scope: !11145)
!11291 = !DILocation(line: 942, column: 5, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11287, file: !10609, line: 940, column: 3)
!11293 = !DILocation(line: 946, column: 27, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11145, file: !10609, line: 946, column: 6)
!11295 = !DILocation(line: 943, column: 3, scope: !11292)
!11296 = !DILocation(line: 946, column: 38, scope: !11294)
!11297 = !DILocation(line: 946, column: 61, scope: !11294)
!11298 = !DILocation(line: 946, column: 6, scope: !11145)
!11299 = !DILocation(line: 949, column: 5, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11294, file: !10609, line: 947, column: 3)
!11301 = !DILocation(line: 950, column: 3, scope: !11300)
!11302 = !DILocation(line: 953, column: 21, scope: !11145)
!11303 = !DILocation(line: 953, column: 70, scope: !11145)
!11304 = !DILocation(line: 953, column: 91, scope: !11145)
!11305 = !DILocation(line: 953, column: 50, scope: !11145)
!11306 = !DILocation(line: 953, column: 47, scope: !11145)
!11307 = !DILocation(line: 953, column: 19, scope: !11145)
!11308 = !DILocation(line: 956, column: 25, scope: !11145)
!11309 = !DILocation(line: 956, column: 12, scope: !11145)
!11310 = !DILocation(line: 958, column: 3, scope: !11145)
!11311 = !DILocation(line: 959, column: 1, scope: !11145)
!11312 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10609, file: !10609, line: 1083, type: !6808, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11313)
!11313 = !{!11314, !11315, !11316, !11317, !11318, !11319}
!11314 = !DILocalVariable(name: "tmpreg", scope: !11312, file: !10609, line: 1085, type: !162)
!11315 = !DILocalVariable(name: "pllm", scope: !11312, file: !10609, line: 1085, type: !162)
!11316 = !DILocalVariable(name: "plld", scope: !11312, file: !10609, line: 1085, type: !162)
!11317 = !DILocalVariable(name: "pllvco", scope: !11312, file: !10609, line: 1085, type: !162)
!11318 = !DILocalVariable(name: "msiclkrange", scope: !11312, file: !10609, line: 1085, type: !162)
!11319 = !DILocalVariable(name: "sysclockfreq", scope: !11312, file: !10609, line: 1085, type: !162)
!11320 = !DILocation(line: 1087, column: 17, scope: !11312)
!11321 = !DILocation(line: 0, scope: !11312)
!11322 = !DILocation(line: 1090, column: 3, scope: !11312)
!11323 = !DILocation(line: 1100, column: 7, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !10609, line: 1098, column: 5)
!11325 = distinct !DILexicalBlock(scope: !11312, file: !10609, line: 1091, column: 3)
!11326 = !DILocation(line: 1104, column: 63, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11325, file: !10609, line: 1103, column: 5)
!11328 = !DILocation(line: 1104, column: 14, scope: !11327)
!11329 = !DILocation(line: 1105, column: 52, scope: !11327)
!11330 = !DILocation(line: 1105, column: 76, scope: !11327)
!11331 = !DILocation(line: 1106, column: 11, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !10609, line: 1106, column: 11)
!11333 = !DILocation(line: 1106, column: 41, scope: !11332)
!11334 = !DILocation(line: 1106, column: 11, scope: !11327)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 1117, column: 7, scope: !11327)
!11337 = !DILocation(line: 1122, column: 27, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11325, file: !10609, line: 1121, column: 5)
!11339 = !DILocation(line: 1122, column: 56, scope: !11338)
!11340 = !DILocation(line: 1123, column: 30, scope: !11338)
!11341 = !DILocation(line: 1124, column: 7, scope: !11338)
!11342 = !DILocation(line: 0, scope: !11325)
!11343 = !DILocation(line: 1127, column: 3, scope: !11312)
!11344 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10609, file: !10609, line: 1005, type: !8223, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11345)
!11345 = !{!11346, !11347, !11348, !11349, !11359}
!11346 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11344, file: !10609, line: 1005, type: !162)
!11347 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11344, file: !10609, line: 1005, type: !162)
!11348 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11344, file: !10609, line: 1005, type: !162)
!11349 = !DILocalVariable(name: "gpio", scope: !11344, file: !10609, line: 1007, type: !11350)
!11350 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11351, line: 64, baseType: !11352)
!11351 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11351, line: 48, size: 160, elements: !11353)
!11353 = !{!11354, !11355, !11356, !11357, !11358}
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11352, file: !11351, line: 50, baseType: !162, size: 32)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11352, file: !11351, line: 53, baseType: !162, size: 32, offset: 32)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11352, file: !11351, line: 56, baseType: !162, size: 32, offset: 64)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11352, file: !11351, line: 59, baseType: !162, size: 32, offset: 96)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11352, file: !11351, line: 62, baseType: !162, size: 32, offset: 128)
!11359 = !DILocalVariable(name: "tmpreg", scope: !11360, file: !10609, line: 1022, type: !283)
!11360 = distinct !DILexicalBlock(scope: !11344, file: !10609, line: 1022, column: 3)
!11361 = !DILocation(line: 0, scope: !11344)
!11362 = !DILocation(line: 1007, column: 3, scope: !11344)
!11363 = !DILocation(line: 1007, column: 20, scope: !11344)
!11364 = !DILocation(line: 1015, column: 8, scope: !11344)
!11365 = !DILocation(line: 1015, column: 18, scope: !11344)
!11366 = !DILocation(line: 1016, column: 8, scope: !11344)
!11367 = !DILocation(line: 1016, column: 18, scope: !11344)
!11368 = !DILocation(line: 1017, column: 8, scope: !11344)
!11369 = !DILocation(line: 1017, column: 18, scope: !11344)
!11370 = !DILocation(line: 1018, column: 8, scope: !11344)
!11371 = !DILocation(line: 1018, column: 18, scope: !11344)
!11372 = !DILocation(line: 1019, column: 8, scope: !11344)
!11373 = !DILocation(line: 1019, column: 18, scope: !11344)
!11374 = !DILocation(line: 1022, column: 3, scope: !11360)
!11375 = !DILocation(line: 1022, column: 3, scope: !11344)
!11376 = !DILocation(line: 1024, column: 3, scope: !11344)
!11377 = !DILocation(line: 1027, column: 3, scope: !11344)
!11378 = !DILocation(line: 1028, column: 1, scope: !11344)
!11379 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11351, file: !11351, line: 293, type: !11380, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11380 = !DISubroutineType(types: !11381)
!11381 = !{null, !2900, !11382}
!11382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11350, size: 32)
!11383 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10609, file: !10609, line: 1039, type: !3107, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11384 = !DILocation(line: 1041, column: 38, scope: !11383)
!11385 = !DILocation(line: 1042, column: 1, scope: !11383)
!11386 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10609, file: !10609, line: 1048, type: !3107, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11387 = !DILocation(line: 1050, column: 38, scope: !11386)
!11388 = !DILocation(line: 1051, column: 1, scope: !11386)
!11389 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10609, file: !10609, line: 1139, type: !6808, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11390 = !DILocation(line: 1141, column: 10, scope: !11389)
!11391 = !DILocation(line: 1141, column: 3, scope: !11389)
!11392 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10609, file: !10609, line: 1150, type: !6808, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11393 = !DILocation(line: 1153, column: 11, scope: !11392)
!11394 = !DILocation(line: 1153, column: 56, scope: !11392)
!11395 = !DILocation(line: 1153, column: 79, scope: !11392)
!11396 = !DILocation(line: 1153, column: 36, scope: !11392)
!11397 = !DILocation(line: 1153, column: 33, scope: !11392)
!11398 = !DILocation(line: 1153, column: 3, scope: !11392)
!11399 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10609, file: !10609, line: 1162, type: !6808, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11400 = !DILocation(line: 1165, column: 11, scope: !11399)
!11401 = !DILocation(line: 1165, column: 55, scope: !11399)
!11402 = !DILocation(line: 1165, column: 78, scope: !11399)
!11403 = !DILocation(line: 1165, column: 35, scope: !11399)
!11404 = !DILocation(line: 1165, column: 32, scope: !11399)
!11405 = !DILocation(line: 1165, column: 3, scope: !11399)
!11406 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10609, file: !10609, line: 1175, type: !11407, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{null, !10677}
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11406, file: !10609, line: 1175, type: !10677)
!11411 = !DILocation(line: 0, scope: !11406)
!11412 = !DILocation(line: 1181, column: 22, scope: !11406)
!11413 = !DILocation(line: 1181, column: 37, scope: !11406)
!11414 = !DILocation(line: 1186, column: 12, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1186, column: 6)
!11416 = !DILocation(line: 1186, column: 15, scope: !11415)
!11417 = !DILocation(line: 1186, column: 31, scope: !11415)
!11418 = !DILocation(line: 1186, column: 6, scope: !11406)
!11419 = !DILocation(line: 1188, column: 24, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11415, file: !10609, line: 1187, column: 3)
!11421 = !DILocation(line: 1188, column: 33, scope: !11420)
!11422 = !DILocation(line: 1189, column: 3, scope: !11420)
!11423 = !DILocation(line: 1190, column: 17, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11415, file: !10609, line: 1190, column: 11)
!11425 = !DILocation(line: 1190, column: 20, scope: !11424)
!11426 = !DILocation(line: 1190, column: 35, scope: !11424)
!11427 = !DILocation(line: 0, scope: !11424)
!11428 = !DILocation(line: 1190, column: 11, scope: !11415)
!11429 = !DILocation(line: 1192, column: 33, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11424, file: !10609, line: 1191, column: 3)
!11431 = !DILocation(line: 1193, column: 3, scope: !11430)
!11432 = !DILocation(line: 1196, column: 33, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11424, file: !10609, line: 1195, column: 3)
!11434 = !DILocation(line: 1200, column: 12, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1200, column: 6)
!11436 = !DILocation(line: 1200, column: 15, scope: !11435)
!11437 = !DILocation(line: 1206, column: 24, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11435, file: !10609, line: 1205, column: 3)
!11439 = !DILocation(line: 1206, column: 33, scope: !11438)
!11440 = !DILocation(line: 1209, column: 61, scope: !11406)
!11441 = !DILocation(line: 1209, column: 88, scope: !11406)
!11442 = !DILocation(line: 1209, column: 22, scope: !11406)
!11443 = !DILocation(line: 1209, column: 42, scope: !11406)
!11444 = !DILocation(line: 1212, column: 12, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1212, column: 6)
!11446 = !DILocation(line: 1212, column: 6, scope: !11406)
!11447 = !DILocation(line: 1218, column: 24, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11445, file: !10609, line: 1217, column: 3)
!11449 = !DILocation(line: 1218, column: 33, scope: !11448)
!11450 = !DILocation(line: 1221, column: 61, scope: !11406)
!11451 = !DILocation(line: 1221, column: 88, scope: !11406)
!11452 = !DILocation(line: 1221, column: 22, scope: !11406)
!11453 = !DILocation(line: 1221, column: 42, scope: !11406)
!11454 = !DILocation(line: 1222, column: 55, scope: !11406)
!11455 = !DILocation(line: 1222, column: 61, scope: !11406)
!11456 = !DILocation(line: 1222, column: 22, scope: !11406)
!11457 = !DILocation(line: 1222, column: 36, scope: !11406)
!11458 = !DILocation(line: 1225, column: 12, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1225, column: 6)
!11460 = !DILocation(line: 1225, column: 16, scope: !11459)
!11461 = !DILocation(line: 1225, column: 33, scope: !11459)
!11462 = !DILocation(line: 1225, column: 6, scope: !11406)
!11463 = !DILocation(line: 1227, column: 24, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11459, file: !10609, line: 1226, column: 3)
!11465 = !DILocation(line: 1227, column: 33, scope: !11464)
!11466 = !DILocation(line: 1228, column: 3, scope: !11464)
!11467 = !DILocation(line: 1229, column: 17, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11459, file: !10609, line: 1229, column: 11)
!11469 = !DILocation(line: 1229, column: 21, scope: !11468)
!11470 = !DILocation(line: 1229, column: 37, scope: !11468)
!11471 = !DILocation(line: 0, scope: !11468)
!11472 = !DILocation(line: 1229, column: 11, scope: !11459)
!11473 = !DILocation(line: 1231, column: 33, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11468, file: !10609, line: 1230, column: 3)
!11475 = !DILocation(line: 1232, column: 3, scope: !11474)
!11476 = !DILocation(line: 1235, column: 33, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11468, file: !10609, line: 1234, column: 3)
!11478 = !DILocation(line: 1239, column: 12, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1239, column: 6)
!11480 = !DILocation(line: 1239, column: 16, scope: !11479)
!11481 = !DILocation(line: 1245, column: 24, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11479, file: !10609, line: 1244, column: 3)
!11483 = !DILocation(line: 1245, column: 33, scope: !11482)
!11484 = !DILocation(line: 1250, column: 12, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11406, file: !10609, line: 1250, column: 6)
!11486 = !DILocation(line: 1250, column: 15, scope: !11485)
!11487 = !DILocation(line: 1250, column: 30, scope: !11485)
!11488 = !DILocation(line: 1250, column: 6, scope: !11406)
!11489 = !DILocation(line: 1256, column: 28, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11485, file: !10609, line: 1255, column: 3)
!11491 = !DILocation(line: 1256, column: 37, scope: !11490)
!11492 = !DILocation(line: 1258, column: 54, scope: !11406)
!11493 = !DILocation(line: 1258, column: 59, scope: !11406)
!11494 = !DILocation(line: 1258, column: 26, scope: !11406)
!11495 = !DILocation(line: 1258, column: 36, scope: !11406)
!11496 = !DILocation(line: 1259, column: 51, scope: !11406)
!11497 = !DILocation(line: 1259, column: 56, scope: !11406)
!11498 = !DILocation(line: 1259, column: 26, scope: !11406)
!11499 = !DILocation(line: 1259, column: 33, scope: !11406)
!11500 = !DILocation(line: 1260, column: 51, scope: !11406)
!11501 = !DILocation(line: 1260, column: 56, scope: !11406)
!11502 = !DILocation(line: 1260, column: 26, scope: !11406)
!11503 = !DILocation(line: 1260, column: 33, scope: !11406)
!11504 = !DILocation(line: 1261, column: 1, scope: !11406)
!11505 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10609, file: !10609, line: 1271, type: !11506, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !11508)
!11506 = !DISubroutineType(types: !11507)
!11507 = !{null, !11148, !907}
!11508 = !{!11509, !11510}
!11509 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11505, file: !10609, line: 1271, type: !11148)
!11510 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11505, file: !10609, line: 1271, type: !907)
!11511 = !DILocation(line: 0, scope: !11505)
!11512 = !DILocation(line: 1278, column: 22, scope: !11505)
!11513 = !DILocation(line: 1278, column: 32, scope: !11505)
!11514 = !DILocation(line: 1281, column: 53, scope: !11505)
!11515 = !DILocation(line: 1281, column: 58, scope: !11505)
!11516 = !DILocation(line: 1281, column: 22, scope: !11505)
!11517 = !DILocation(line: 1281, column: 35, scope: !11505)
!11518 = !DILocation(line: 1284, column: 54, scope: !11505)
!11519 = !DILocation(line: 1284, column: 59, scope: !11505)
!11520 = !DILocation(line: 1284, column: 22, scope: !11505)
!11521 = !DILocation(line: 1284, column: 36, scope: !11505)
!11522 = !DILocation(line: 1287, column: 55, scope: !11505)
!11523 = !DILocation(line: 1287, column: 60, scope: !11505)
!11524 = !DILocation(line: 1287, column: 22, scope: !11505)
!11525 = !DILocation(line: 1287, column: 37, scope: !11505)
!11526 = !DILocation(line: 1290, column: 56, scope: !11505)
!11527 = !DILocation(line: 1290, column: 79, scope: !11505)
!11528 = !DILocation(line: 1290, column: 22, scope: !11505)
!11529 = !DILocation(line: 1290, column: 37, scope: !11505)
!11530 = !DILocation(line: 1293, column: 16, scope: !11505)
!11531 = !DILocation(line: 1293, column: 14, scope: !11505)
!11532 = !DILocation(line: 1294, column: 1, scope: !11505)
!11533 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10609, file: !10609, line: 1301, type: !3107, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11534 = !DILocation(line: 1304, column: 6, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11533, file: !10609, line: 1304, column: 6)
!11536 = !DILocation(line: 1304, column: 6, scope: !11533)
!11537 = !DILocation(line: 1307, column: 5, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11535, file: !10609, line: 1305, column: 3)
!11539 = !DILocation(line: 1310, column: 5, scope: !11538)
!11540 = !DILocation(line: 1311, column: 3, scope: !11538)
!11541 = !DILocation(line: 1312, column: 1, scope: !11533)
!11542 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10609, file: !10609, line: 1318, type: !3107, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !250)
!11543 = !DILocation(line: 1323, column: 1, scope: !11542)
!11544 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11545, file: !11545, line: 147, type: !5891, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11546)
!11545 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11544, file: !11545, line: 147, type: !162)
!11548 = !DILocation(line: 0, scope: !11544)
!11549 = !DILocation(line: 150, column: 3, scope: !11544)
!11550 = !DILocation(line: 151, column: 1, scope: !11544)
!11551 = distinct !DISubprogram(name: "LL_InitTick", scope: !11552, file: !11552, line: 222, type: !8748, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11553)
!11552 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11553 = !{!11554, !11555}
!11554 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11551, file: !11552, line: 222, type: !162)
!11555 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11551, file: !11552, line: 222, type: !162)
!11556 = !DILocation(line: 0, scope: !11551)
!11557 = !DILocation(line: 225, column: 46, scope: !11551)
!11558 = !DILocation(line: 225, column: 55, scope: !11551)
!11559 = !DILocation(line: 225, column: 18, scope: !11551)
!11560 = !DILocation(line: 226, column: 18, scope: !11551)
!11561 = !DILocation(line: 227, column: 18, scope: !11551)
!11562 = !DILocation(line: 229, column: 1, scope: !11551)
!11563 = distinct !DISubprogram(name: "LL_mDelay", scope: !11545, file: !11545, line: 163, type: !5891, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11564)
!11564 = !{!11565, !11566, !11567}
!11565 = !DILocalVariable(name: "Delay", arg: 1, scope: !11563, file: !11545, line: 163, type: !162)
!11566 = !DILocalVariable(name: "tmp", scope: !11563, file: !11545, line: 165, type: !283)
!11567 = !DILocalVariable(name: "tmpDelay", scope: !11563, file: !11545, line: 166, type: !162)
!11568 = !DILocation(line: 0, scope: !11563)
!11569 = !DILocation(line: 165, column: 3, scope: !11563)
!11570 = !DILocation(line: 165, column: 18, scope: !11563)
!11571 = !DILocation(line: 165, column: 33, scope: !11563)
!11572 = !DILocation(line: 169, column: 10, scope: !11563)
!11573 = !DILocation(line: 172, column: 15, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11563, file: !11545, line: 172, column: 6)
!11575 = !DILocation(line: 177, column: 3, scope: !11563)
!11576 = !DILocation(line: 179, column: 18, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !11545, line: 179, column: 8)
!11578 = distinct !DILexicalBlock(scope: !11563, file: !11545, line: 178, column: 3)
!11579 = !DILocation(line: 177, column: 19, scope: !11563)
!11580 = !DILocation(line: 184, column: 1, scope: !11563)
!11581 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11545, file: !11545, line: 227, type: !5891, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11582)
!11582 = !{!11583}
!11583 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11581, file: !11545, line: 227, type: !162)
!11584 = !DILocation(line: 0, scope: !11581)
!11585 = !DILocation(line: 230, column: 19, scope: !11581)
!11586 = !DILocation(line: 231, column: 1, scope: !11581)
!11587 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11545, file: !11545, line: 242, type: !11588, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11591)
!11588 = !DISubroutineType(types: !11589)
!11589 = !{!11590, !162}
!11590 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !871, line: 194, baseType: !870)
!11591 = !{!11592, !11593, !11594}
!11592 = !DILocalVariable(name: "Frequency", arg: 1, scope: !11587, file: !11545, line: 242, type: !162)
!11593 = !DILocalVariable(name: "status", scope: !11587, file: !11545, line: 244, type: !11590)
!11594 = !DILocalVariable(name: "latency", scope: !11587, file: !11545, line: 246, type: !162)
!11595 = !DILocation(line: 0, scope: !11587)
!11596 = !DILocation(line: 249, column: 25, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11587, file: !11545, line: 249, column: 7)
!11598 = !DILocation(line: 255, column: 9, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11600, file: !11545, line: 255, column: 9)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !11545, line: 254, column: 3)
!11601 = !DILocation(line: 255, column: 41, scope: !11599)
!11602 = !DILocation(line: 255, column: 9, scope: !11600)
!11603 = !DILocation(line: 257, column: 21, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !11545, line: 257, column: 11)
!11605 = distinct !DILexicalBlock(scope: !11599, file: !11545, line: 256, column: 5)
!11606 = !DILocation(line: 284, column: 9, scope: !11600)
!11607 = !DILocation(line: 264, column: 14, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11599, file: !11545, line: 264, column: 14)
!11609 = !DILocation(line: 264, column: 46, scope: !11608)
!11610 = !DILocation(line: 264, column: 14, scope: !11599)
!11611 = !DILocation(line: 266, column: 21, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !11545, line: 266, column: 11)
!11613 = distinct !DILexicalBlock(scope: !11608, file: !11545, line: 265, column: 5)
!11614 = !DILocation(line: 275, column: 21, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11545, line: 275, column: 11)
!11616 = distinct !DILexicalBlock(scope: !11608, file: !11545, line: 274, column: 5)
!11617 = !DILocation(line: 286, column: 7, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !11545, line: 285, column: 5)
!11619 = distinct !DILexicalBlock(scope: !11600, file: !11545, line: 284, column: 9)
!11620 = !DILocation(line: 287, column: 5, scope: !11618)
!11621 = !DILocation(line: 289, column: 5, scope: !11600)
!11622 = !DILocation(line: 293, column: 9, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11600, file: !11545, line: 293, column: 9)
!11624 = !DILocation(line: 293, column: 31, scope: !11623)
!11625 = !DILocation(line: 293, column: 9, scope: !11600)
!11626 = !DILocation(line: 298, column: 3, scope: !11587)
!11627 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5905, file: !5905, line: 285, type: !6808, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11628 = !DILocation(line: 287, column: 21, scope: !11627)
!11629 = !DILocation(line: 287, column: 3, scope: !11627)
!11630 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !8747, file: !8747, line: 1897, type: !3107, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11631 = !DILocation(line: 1899, column: 3, scope: !11630)
!11632 = !DILocation(line: 1900, column: 1, scope: !11630)
!11633 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !8747, file: !8747, line: 1843, type: !5891, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11634)
!11634 = !{!11635}
!11635 = !DILocalVariable(name: "Latency", arg: 1, scope: !11633, file: !8747, line: 1843, type: !162)
!11636 = !DILocation(line: 0, scope: !11633)
!11637 = !DILocation(line: 1845, column: 3, scope: !11633)
!11638 = !DILocation(line: 1846, column: 1, scope: !11633)
!11639 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !8747, file: !8747, line: 1855, type: !6808, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11640 = !DILocation(line: 1857, column: 21, scope: !11639)
!11641 = !DILocation(line: 1857, column: 3, scope: !11639)
!11642 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11545, file: !11545, line: 323, type: !11643, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11658)
!11643 = !DISubroutineType(types: !11644)
!11644 = !{!11590, !11645, !11651}
!11645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11646, size: 32)
!11646 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11552, line: 103, baseType: !11647)
!11647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11552, line: 90, size: 64, elements: !11648)
!11648 = !{!11649, !11650}
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !11647, file: !11552, line: 92, baseType: !162, size: 32)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !11647, file: !11552, line: 98, baseType: !162, size: 32, offset: 32)
!11651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11652, size: 32)
!11652 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11552, line: 128, baseType: !11653)
!11653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11552, line: 108, size: 96, elements: !11654)
!11654 = !{!11655, !11656, !11657}
!11655 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11653, file: !11552, line: 110, baseType: !162, size: 32)
!11656 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11653, file: !11552, line: 116, baseType: !162, size: 32, offset: 32)
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11653, file: !11552, line: 122, baseType: !162, size: 32, offset: 64)
!11658 = !{!11659, !11660, !11661, !11662}
!11659 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11642, file: !11545, line: 323, type: !11645)
!11660 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11642, file: !11545, line: 324, type: !11651)
!11661 = !DILocalVariable(name: "status", scope: !11642, file: !11545, line: 326, type: !11590)
!11662 = !DILocalVariable(name: "pllfreq", scope: !11642, file: !11545, line: 327, type: !162)
!11663 = !DILocation(line: 0, scope: !11642)
!11664 = !DILocation(line: 330, column: 7, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11642, file: !11545, line: 330, column: 7)
!11666 = !DILocation(line: 330, column: 26, scope: !11665)
!11667 = !DILocation(line: 330, column: 7, scope: !11642)
!11668 = !DILocation(line: 333, column: 15, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11665, file: !11545, line: 331, column: 3)
!11670 = !DILocation(line: 336, column: 9, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11669, file: !11545, line: 336, column: 9)
!11672 = !DILocation(line: 336, column: 30, scope: !11671)
!11673 = !DILocation(line: 336, column: 9, scope: !11669)
!11674 = !DILocation(line: 338, column: 7, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11671, file: !11545, line: 337, column: 5)
!11676 = !DILocation(line: 339, column: 7, scope: !11675)
!11677 = !DILocation(line: 339, column: 14, scope: !11675)
!11678 = !DILocation(line: 339, column: 35, scope: !11675)
!11679 = distinct !{!11679, !11676, !11680}
!11680 = !DILocation(line: 342, column: 7, scope: !11675)
!11681 = !DILocation(line: 346, column: 76, scope: !11669)
!11682 = !DILocation(line: 346, column: 105, scope: !11669)
!11683 = !DILocation(line: 346, column: 5, scope: !11669)
!11684 = !DILocation(line: 349, column: 14, scope: !11669)
!11685 = !DILocation(line: 350, column: 3, scope: !11669)
!11686 = !DILocation(line: 0, scope: !11665)
!11687 = !DILocation(line: 357, column: 3, scope: !11642)
!11688 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11545, file: !11545, line: 487, type: !11689, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!11590}
!11691 = !{!11692}
!11692 = !DILocalVariable(name: "status", scope: !11688, file: !11545, line: 489, type: !11590)
!11693 = !DILocation(line: 0, scope: !11688)
!11694 = !DILocation(line: 492, column: 7, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11688, file: !11545, line: 492, column: 7)
!11696 = !DILocation(line: 492, column: 28, scope: !11695)
!11697 = !DILocation(line: 492, column: 7, scope: !11688)
!11698 = !DILocation(line: 498, column: 3, scope: !11688)
!11699 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11545, file: !11545, line: 457, type: !11700, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11702)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{!162, !162, !11645}
!11702 = !{!11703, !11704, !11705}
!11703 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11699, file: !11545, line: 457, type: !162)
!11704 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11699, file: !11545, line: 457, type: !11645)
!11705 = !DILocalVariable(name: "pllfreq", scope: !11699, file: !11545, line: 459, type: !162)
!11706 = !DILocation(line: 0, scope: !11699)
!11707 = !DILocation(line: 470, column: 68, scope: !11699)
!11708 = !DILocation(line: 470, column: 75, scope: !11699)
!11709 = !DILocation(line: 470, column: 35, scope: !11699)
!11710 = !DILocation(line: 470, column: 34, scope: !11699)
!11711 = !DILocation(line: 470, column: 32, scope: !11699)
!11712 = !DILocation(line: 475, column: 46, scope: !11699)
!11713 = !DILocation(line: 475, column: 53, scope: !11699)
!11714 = !DILocation(line: 475, column: 76, scope: !11699)
!11715 = !DILocation(line: 475, column: 21, scope: !11699)
!11716 = !DILocation(line: 478, column: 3, scope: !11699)
!11717 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8100, file: !8100, line: 612, type: !6808, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11718 = !DILocation(line: 614, column: 12, scope: !11717)
!11719 = !DILocation(line: 614, column: 11, scope: !11717)
!11720 = !DILocation(line: 614, column: 3, scope: !11717)
!11721 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8100, file: !8100, line: 592, type: !3107, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11722 = !DILocation(line: 594, column: 3, scope: !11721)
!11723 = !DILocation(line: 595, column: 1, scope: !11721)
!11724 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8100, file: !8100, line: 1219, type: !8223, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11725)
!11725 = !{!11726, !11727, !11728}
!11726 = !DILocalVariable(name: "Source", arg: 1, scope: !11724, file: !8100, line: 1219, type: !162)
!11727 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !11724, file: !8100, line: 1219, type: !162)
!11728 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !11724, file: !8100, line: 1219, type: !162)
!11729 = !DILocation(line: 0, scope: !11724)
!11730 = !DILocation(line: 1221, column: 3, scope: !11724)
!11731 = !DILocation(line: 1222, column: 1, scope: !11724)
!11732 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11545, file: !11545, line: 510, type: !11733, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11735)
!11733 = !DISubroutineType(types: !11734)
!11734 = !{!11590, !162, !11651}
!11735 = !{!11736, !11737, !11738, !11739}
!11736 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11732, file: !11545, line: 510, type: !162)
!11737 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11732, file: !11545, line: 510, type: !11651)
!11738 = !DILocalVariable(name: "status", scope: !11732, file: !11545, line: 512, type: !11590)
!11739 = !DILocalVariable(name: "hclk_frequency", scope: !11732, file: !11545, line: 513, type: !162)
!11740 = !DILocation(line: 0, scope: !11732)
!11741 = !DILocation(line: 520, column: 20, scope: !11732)
!11742 = !DILocation(line: 523, column: 7, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11732, file: !11545, line: 523, column: 7)
!11744 = !DILocation(line: 523, column: 23, scope: !11743)
!11745 = !DILocation(line: 523, column: 7, scope: !11732)
!11746 = !DILocation(line: 526, column: 14, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11743, file: !11545, line: 524, column: 3)
!11748 = !DILocation(line: 530, column: 14, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11732, file: !11545, line: 530, column: 7)
!11750 = !DILocation(line: 530, column: 7, scope: !11732)
!11751 = !DILocation(line: 533, column: 5, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11749, file: !11545, line: 531, column: 3)
!11753 = !DILocation(line: 534, column: 5, scope: !11752)
!11754 = !DILocation(line: 534, column: 12, scope: !11752)
!11755 = !DILocation(line: 534, column: 33, scope: !11752)
!11756 = distinct !{!11756, !11753, !11757}
!11757 = !DILocation(line: 537, column: 5, scope: !11752)
!11758 = !DILocation(line: 540, column: 49, scope: !11752)
!11759 = !DILocation(line: 540, column: 5, scope: !11752)
!11760 = !DILocation(line: 541, column: 5, scope: !11752)
!11761 = !DILocation(line: 542, column: 5, scope: !11752)
!11762 = !DILocation(line: 542, column: 12, scope: !11752)
!11763 = !DILocation(line: 542, column: 37, scope: !11752)
!11764 = distinct !{!11764, !11761, !11765}
!11765 = !DILocation(line: 545, column: 5, scope: !11752)
!11766 = !DILocation(line: 548, column: 50, scope: !11752)
!11767 = !DILocation(line: 548, column: 5, scope: !11752)
!11768 = !DILocation(line: 549, column: 50, scope: !11752)
!11769 = !DILocation(line: 549, column: 5, scope: !11752)
!11770 = !DILocation(line: 550, column: 3, scope: !11752)
!11771 = !DILocation(line: 553, column: 7, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11732, file: !11545, line: 553, column: 7)
!11773 = !DILocation(line: 553, column: 23, scope: !11772)
!11774 = !DILocation(line: 553, column: 7, scope: !11732)
!11775 = !DILocation(line: 556, column: 14, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11772, file: !11545, line: 554, column: 3)
!11777 = !DILocation(line: 557, column: 3, scope: !11776)
!11778 = !DILocation(line: 560, column: 14, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11732, file: !11545, line: 560, column: 7)
!11780 = !DILocation(line: 560, column: 7, scope: !11732)
!11781 = !DILocation(line: 562, column: 5, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11779, file: !11545, line: 561, column: 3)
!11783 = !DILocation(line: 563, column: 3, scope: !11782)
!11784 = !DILocation(line: 565, column: 3, scope: !11732)
!11785 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8100, file: !8100, line: 1169, type: !3107, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11786 = !DILocation(line: 1171, column: 3, scope: !11785)
!11787 = !DILocation(line: 1172, column: 1, scope: !11785)
!11788 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8100, file: !8100, line: 1190, type: !6808, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11789 = !DILocation(line: 1192, column: 12, scope: !11788)
!11790 = !DILocation(line: 1192, column: 11, scope: !11788)
!11791 = !DILocation(line: 1192, column: 3, scope: !11788)
!11792 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8100, file: !8100, line: 944, type: !5891, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11793)
!11793 = !{!11794}
!11794 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11792, file: !8100, line: 944, type: !162)
!11795 = !DILocation(line: 0, scope: !11792)
!11796 = !DILocation(line: 946, column: 3, scope: !11792)
!11797 = !DILocation(line: 947, column: 1, scope: !11792)
!11798 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8100, file: !8100, line: 910, type: !5891, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11799)
!11799 = !{!11800}
!11800 = !DILocalVariable(name: "Source", arg: 1, scope: !11798, file: !8100, line: 910, type: !162)
!11801 = !DILocation(line: 0, scope: !11798)
!11802 = !DILocation(line: 912, column: 3, scope: !11798)
!11803 = !DILocation(line: 913, column: 1, scope: !11798)
!11804 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8100, file: !8100, line: 924, type: !6808, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11805 = !DILocation(line: 926, column: 21, scope: !11804)
!11806 = !DILocation(line: 926, column: 3, scope: !11804)
!11807 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8100, file: !8100, line: 960, type: !5891, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11808)
!11808 = !{!11809}
!11809 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11807, file: !8100, line: 960, type: !162)
!11810 = !DILocation(line: 0, scope: !11807)
!11811 = !DILocation(line: 962, column: 3, scope: !11807)
!11812 = !DILocation(line: 963, column: 1, scope: !11807)
!11813 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8100, file: !8100, line: 976, type: !5891, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11814)
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11813, file: !8100, line: 976, type: !162)
!11816 = !DILocation(line: 0, scope: !11813)
!11817 = !DILocation(line: 978, column: 3, scope: !11813)
!11818 = !DILocation(line: 979, column: 1, scope: !11813)
!11819 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11545, file: !11545, line: 385, type: !11820, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !11822)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{!11590, !162, !162, !11645, !11651}
!11822 = !{!11823, !11824, !11825, !11826, !11827, !11828}
!11823 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11819, file: !11545, line: 385, type: !162)
!11824 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11819, file: !11545, line: 385, type: !162)
!11825 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11819, file: !11545, line: 386, type: !11645)
!11826 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11819, file: !11545, line: 386, type: !11651)
!11827 = !DILocalVariable(name: "status", scope: !11819, file: !11545, line: 388, type: !11590)
!11828 = !DILocalVariable(name: "pllfreq", scope: !11819, file: !11545, line: 389, type: !162)
!11829 = !DILocation(line: 0, scope: !11819)
!11830 = !DILocation(line: 396, column: 7, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11819, file: !11545, line: 396, column: 7)
!11832 = !DILocation(line: 396, column: 26, scope: !11831)
!11833 = !DILocation(line: 396, column: 7, scope: !11819)
!11834 = !DILocation(line: 400, column: 15, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11831, file: !11545, line: 397, column: 3)
!11836 = !DILocation(line: 403, column: 9, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11835, file: !11545, line: 403, column: 9)
!11838 = !DILocation(line: 403, column: 30, scope: !11837)
!11839 = !DILocation(line: 403, column: 9, scope: !11835)
!11840 = !DILocation(line: 406, column: 21, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !11545, line: 406, column: 11)
!11842 = distinct !DILexicalBlock(scope: !11837, file: !11545, line: 404, column: 5)
!11843 = !DILocation(line: 406, column: 11, scope: !11842)
!11844 = !DILocation(line: 408, column: 9, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11841, file: !11545, line: 407, column: 7)
!11846 = !DILocation(line: 409, column: 7, scope: !11845)
!11847 = !DILocation(line: 412, column: 9, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11841, file: !11545, line: 411, column: 7)
!11849 = !DILocation(line: 416, column: 7, scope: !11842)
!11850 = !DILocation(line: 417, column: 7, scope: !11842)
!11851 = !DILocation(line: 417, column: 14, scope: !11842)
!11852 = !DILocation(line: 417, column: 35, scope: !11842)
!11853 = distinct !{!11853, !11850, !11854}
!11854 = !DILocation(line: 420, column: 7, scope: !11842)
!11855 = !DILocation(line: 424, column: 78, scope: !11835)
!11856 = !DILocation(line: 424, column: 107, scope: !11835)
!11857 = !DILocation(line: 424, column: 7, scope: !11835)
!11858 = !DILocation(line: 427, column: 14, scope: !11835)
!11859 = !DILocation(line: 428, column: 3, scope: !11835)
!11860 = !DILocation(line: 0, scope: !11831)
!11861 = !DILocation(line: 435, column: 3, scope: !11819)
!11862 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8100, file: !8100, line: 545, type: !6808, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11863 = !DILocation(line: 547, column: 12, scope: !11862)
!11864 = !DILocation(line: 547, column: 11, scope: !11862)
!11865 = !DILocation(line: 547, column: 3, scope: !11862)
!11866 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8100, file: !8100, line: 505, type: !3107, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11867 = !DILocation(line: 507, column: 3, scope: !11866)
!11868 = !DILocation(line: 508, column: 1, scope: !11866)
!11869 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8100, file: !8100, line: 515, type: !3107, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11870 = !DILocation(line: 517, column: 3, scope: !11869)
!11871 = !DILocation(line: 518, column: 1, scope: !11869)
!11872 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8100, file: !8100, line: 525, type: !3107, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !250)
!11873 = !DILocation(line: 527, column: 3, scope: !11872)
!11874 = !DILocation(line: 528, column: 1, scope: !11872)
!11875 = distinct !DISubprogram(name: "z_device_state_init", scope: !11876, file: !11876, line: 23, type: !3107, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11877)
!11876 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "dev", scope: !11875, file: !11876, line: 25, type: !11879)
!11879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11880, size: 32)
!11880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11881)
!11881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !11882)
!11882 = !{!11883, !11884, !11885, !11886, !11892, !11893}
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11881, file: !120, line: 380, baseType: !123, size: 32)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11881, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11881, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11881, file: !120, line: 386, baseType: !11887, size: 32, offset: 96)
!11887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11888, size: 32)
!11888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !11889)
!11889 = !{!11890, !11891}
!11890 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11888, file: !120, line: 359, baseType: !133, size: 8)
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11888, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11881, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11881, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!11894 = !DILocation(line: 0, scope: !11875)
!11895 = !DILocation(line: 31, column: 1, scope: !11875)
!11896 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11876, file: !11876, line: 33, type: !11897, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11899)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!11879, !123}
!11899 = !{!11900, !11901}
!11900 = !DILocalVariable(name: "name", arg: 1, scope: !11896, file: !11876, line: 33, type: !123)
!11901 = !DILocalVariable(name: "dev", scope: !11896, file: !11876, line: 35, type: !11879)
!11902 = !DILocation(line: 0, scope: !11896)
!11903 = !DILocation(line: 40, column: 12, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 40, column: 6)
!11905 = !DILocation(line: 40, column: 21, scope: !11904)
!11906 = !DILocation(line: 40, column: 25, scope: !11904)
!11907 = !DILocation(line: 40, column: 33, scope: !11904)
!11908 = !DILocation(line: 40, column: 6, scope: !11896)
!11909 = !DILocation(line: 55, column: 2, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 55, column: 2)
!11911 = !DILocation(line: 50, column: 7, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !11876, line: 50, column: 7)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !11876, line: 49, column: 57)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !11876, line: 49, column: 2)
!11915 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 49, column: 2)
!11916 = !DILocation(line: 50, column: 30, scope: !11912)
!11917 = !DILocation(line: 50, column: 39, scope: !11912)
!11918 = !DILocation(line: 50, column: 44, scope: !11912)
!11919 = !DILocation(line: 50, column: 7, scope: !11913)
!11920 = !DILocation(line: 49, column: 53, scope: !11914)
!11921 = !DILocation(line: 49, column: 33, scope: !11914)
!11922 = !DILocation(line: 49, column: 2, scope: !11915)
!11923 = distinct !{!11923, !11922, !11924}
!11924 = !DILocation(line: 53, column: 2, scope: !11915)
!11925 = !DILocation(line: 56, column: 7, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11876, line: 56, column: 7)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !11876, line: 55, column: 57)
!11928 = distinct !DILexicalBlock(scope: !11910, file: !11876, line: 55, column: 2)
!11929 = !DILocation(line: 56, column: 30, scope: !11926)
!11930 = !DILocation(line: 56, column: 52, scope: !11926)
!11931 = !DILocation(line: 56, column: 34, scope: !11926)
!11932 = !DILocation(line: 56, column: 58, scope: !11926)
!11933 = !DILocation(line: 56, column: 7, scope: !11927)
!11934 = !DILocation(line: 55, column: 53, scope: !11928)
!11935 = !DILocation(line: 55, column: 33, scope: !11928)
!11936 = distinct !{!11936, !11909, !11937}
!11937 = !DILocation(line: 59, column: 2, scope: !11910)
!11938 = !DILocation(line: 62, column: 1, scope: !11896)
!11939 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11876, file: !11876, line: 93, type: !11940, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11942)
!11940 = !DISubroutineType(types: !11941)
!11941 = !{!136, !11879}
!11942 = !{!11943}
!11943 = !DILocalVariable(name: "dev", arg: 1, scope: !11939, file: !11876, line: 93, type: !11879)
!11944 = !DILocation(line: 0, scope: !11939)
!11945 = !DILocation(line: 99, column: 10, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11939, file: !11876, line: 99, column: 6)
!11947 = !DILocation(line: 99, column: 6, scope: !11939)
!11948 = !DILocation(line: 103, column: 14, scope: !11939)
!11949 = !DILocation(line: 103, column: 21, scope: !11939)
!11950 = !DILocation(line: 103, column: 33, scope: !11939)
!11951 = !DILocation(line: 103, column: 49, scope: !11939)
!11952 = !DILocation(line: 103, column: 58, scope: !11939)
!11953 = !DILocation(line: 104, column: 1, scope: !11939)
!11954 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11876, file: !11876, line: 87, type: !11955, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11958)
!11955 = !DISubroutineType(types: !11956)
!11956 = !{!252, !11957}
!11957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11879, size: 32)
!11958 = !{!11959}
!11959 = !DILocalVariable(name: "devices", arg: 1, scope: !11954, file: !11876, line: 87, type: !11957)
!11960 = !DILocation(line: 0, scope: !11954)
!11961 = !DILocation(line: 89, column: 11, scope: !11954)
!11962 = !DILocation(line: 90, column: 2, scope: !11954)
!11963 = distinct !DISubprogram(name: "device_required_foreach", scope: !11876, file: !11876, line: 125, type: !11964, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11970)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!107, !11879, !11966, !102}
!11966 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !11967)
!11967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 32)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!107, !11879, !102}
!11970 = !{!11971, !11972, !11973, !11974, !11975}
!11971 = !DILocalVariable(name: "dev", arg: 1, scope: !11963, file: !11876, line: 125, type: !11879)
!11972 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11963, file: !11876, line: 126, type: !11966)
!11973 = !DILocalVariable(name: "context", arg: 3, scope: !11963, file: !11876, line: 127, type: !102)
!11974 = !DILocalVariable(name: "handle_count", scope: !11963, file: !11876, line: 129, type: !252)
!11975 = !DILocalVariable(name: "handles", scope: !11963, file: !11876, line: 130, type: !139)
!11976 = !DILocation(line: 0, scope: !11963)
!11977 = !DILocation(line: 129, column: 2, scope: !11963)
!11978 = !DILocation(line: 129, column: 9, scope: !11963)
!11979 = !DILocation(line: 130, column: 35, scope: !11963)
!11980 = !DILocation(line: 132, column: 33, scope: !11963)
!11981 = !DILocation(line: 132, column: 9, scope: !11963)
!11982 = !DILocation(line: 133, column: 1, scope: !11963)
!11983 = !DILocation(line: 132, column: 2, scope: !11963)
!11984 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !11985, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!139, !11879, !2508}
!11987 = !{!11988, !11989, !11990, !11991}
!11988 = !DILocalVariable(name: "dev", arg: 1, scope: !11984, file: !120, line: 493, type: !11879)
!11989 = !DILocalVariable(name: "count", arg: 2, scope: !11984, file: !120, line: 493, type: !2508)
!11990 = !DILocalVariable(name: "rv", scope: !11984, file: !120, line: 495, type: !139)
!11991 = !DILocalVariable(name: "i", scope: !11992, file: !120, line: 498, type: !252)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !120, line: 497, column: 18)
!11993 = distinct !DILexicalBlock(scope: !11984, file: !120, line: 497, column: 6)
!11994 = !DILocation(line: 0, scope: !11984)
!11995 = !DILocation(line: 495, column: 35, scope: !11984)
!11996 = !DILocation(line: 497, column: 9, scope: !11993)
!11997 = !DILocation(line: 497, column: 6, scope: !11984)
!11998 = !DILocation(line: 0, scope: !11992)
!11999 = !DILocation(line: 500, column: 11, scope: !11992)
!12000 = !DILocation(line: 500, column: 40, scope: !11992)
!12001 = !DILocation(line: 502, column: 4, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11992, file: !120, line: 501, column: 40)
!12003 = distinct !{!12003, !12004, !12005}
!12004 = !DILocation(line: 500, column: 3, scope: !11992)
!12005 = !DILocation(line: 503, column: 3, scope: !11992)
!12006 = !DILocation(line: 504, column: 10, scope: !11992)
!12007 = !DILocation(line: 505, column: 2, scope: !11992)
!12008 = !DILocation(line: 507, column: 2, scope: !11984)
!12009 = distinct !DISubprogram(name: "device_visitor", scope: !11876, file: !11876, line: 106, type: !12010, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !12012)
!12010 = !DISubroutineType(types: !12011)
!12011 = !{!107, !139, !252, !11966, !102}
!12012 = !{!12013, !12014, !12015, !12016, !12017, !12019, !12022, !12023}
!12013 = !DILocalVariable(name: "handles", arg: 1, scope: !12009, file: !11876, line: 106, type: !139)
!12014 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12009, file: !11876, line: 107, type: !252)
!12015 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12009, file: !11876, line: 108, type: !11966)
!12016 = !DILocalVariable(name: "context", arg: 4, scope: !12009, file: !11876, line: 109, type: !102)
!12017 = !DILocalVariable(name: "i", scope: !12018, file: !11876, line: 112, type: !252)
!12018 = distinct !DILexicalBlock(scope: !12009, file: !11876, line: 112, column: 2)
!12019 = !DILocalVariable(name: "dh", scope: !12020, file: !11876, line: 113, type: !141)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !11876, line: 112, column: 44)
!12021 = distinct !DILexicalBlock(scope: !12018, file: !11876, line: 112, column: 2)
!12022 = !DILocalVariable(name: "rdev", scope: !12020, file: !11876, line: 114, type: !11879)
!12023 = !DILocalVariable(name: "rc", scope: !12020, file: !11876, line: 115, type: !107)
!12024 = !DILocation(line: 0, scope: !12009)
!12025 = !DILocation(line: 0, scope: !12018)
!12026 = !DILocation(line: 112, column: 23, scope: !12021)
!12027 = !DILocation(line: 112, column: 2, scope: !12018)
!12028 = distinct !{!12028, !12027, !12029}
!12029 = !DILocation(line: 120, column: 2, scope: !12018)
!12030 = !DILocation(line: 113, column: 24, scope: !12020)
!12031 = !DILocation(line: 0, scope: !12020)
!12032 = !DILocation(line: 114, column: 31, scope: !12020)
!12033 = !DILocation(line: 115, column: 12, scope: !12020)
!12034 = !DILocation(line: 117, column: 10, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12020, file: !11876, line: 117, column: 7)
!12036 = !DILocation(line: 112, column: 39, scope: !12021)
!12037 = !DILocation(line: 123, column: 1, scope: !12009)
!12038 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !12039, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !12041)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!11879, !141}
!12041 = !{!12042, !12043, !12044}
!12042 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12038, file: !120, line: 439, type: !141)
!12043 = !DILocalVariable(name: "dev", scope: !12038, file: !120, line: 443, type: !11879)
!12044 = !DILocalVariable(name: "numdev", scope: !12038, file: !120, line: 444, type: !252)
!12045 = !DILocation(line: 0, scope: !12038)
!12046 = !DILocation(line: 446, column: 7, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12038, file: !120, line: 446, column: 6)
!12048 = !DILocation(line: 446, column: 18, scope: !12047)
!12049 = !DILocation(line: 446, column: 23, scope: !12047)
!12050 = !DILocation(line: 450, column: 2, scope: !12038)
!12051 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11876, file: !11876, line: 135, type: !11964, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !12052)
!12052 = !{!12053, !12054, !12055, !12056, !12057}
!12053 = !DILocalVariable(name: "dev", arg: 1, scope: !12051, file: !11876, line: 135, type: !11879)
!12054 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12051, file: !11876, line: 136, type: !11966)
!12055 = !DILocalVariable(name: "context", arg: 3, scope: !12051, file: !11876, line: 137, type: !102)
!12056 = !DILocalVariable(name: "handle_count", scope: !12051, file: !11876, line: 139, type: !252)
!12057 = !DILocalVariable(name: "handles", scope: !12051, file: !11876, line: 140, type: !139)
!12058 = !DILocation(line: 0, scope: !12051)
!12059 = !DILocation(line: 139, column: 2, scope: !12051)
!12060 = !DILocation(line: 139, column: 9, scope: !12051)
!12061 = !DILocation(line: 140, column: 35, scope: !12051)
!12062 = !DILocation(line: 142, column: 33, scope: !12051)
!12063 = !DILocation(line: 142, column: 9, scope: !12051)
!12064 = !DILocation(line: 143, column: 1, scope: !12051)
!12065 = !DILocation(line: 142, column: 2, scope: !12051)
!12066 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !11985, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !12067)
!12067 = !{!12068, !12069, !12070, !12071, !12072}
!12068 = !DILocalVariable(name: "dev", arg: 1, scope: !12066, file: !120, line: 573, type: !11879)
!12069 = !DILocalVariable(name: "count", arg: 2, scope: !12066, file: !120, line: 573, type: !2508)
!12070 = !DILocalVariable(name: "rv", scope: !12066, file: !120, line: 575, type: !139)
!12071 = !DILocalVariable(name: "region", scope: !12066, file: !120, line: 576, type: !252)
!12072 = !DILocalVariable(name: "i", scope: !12066, file: !120, line: 577, type: !252)
!12073 = !DILocation(line: 0, scope: !12066)
!12074 = !DILocation(line: 575, column: 35, scope: !12066)
!12075 = !DILocation(line: 579, column: 9, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12066, file: !120, line: 579, column: 6)
!12077 = !DILocation(line: 579, column: 6, scope: !12066)
!12078 = !DILocation(line: 582, column: 8, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !120, line: 582, column: 8)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !120, line: 581, column: 23)
!12081 = distinct !DILexicalBlock(scope: !12076, file: !120, line: 579, column: 18)
!12082 = !DILocation(line: 582, column: 12, scope: !12079)
!12083 = !DILocation(line: 585, column: 6, scope: !12080)
!12084 = !DILocation(line: 0, scope: !12081)
!12085 = !DILocation(line: 581, column: 17, scope: !12081)
!12086 = !DILocation(line: 581, column: 3, scope: !12081)
!12087 = !DILocation(line: 588, column: 10, scope: !12081)
!12088 = !DILocation(line: 588, column: 16, scope: !12081)
!12089 = !DILocation(line: 589, column: 4, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12081, file: !120, line: 588, column: 39)
!12091 = !DILocation(line: 588, column: 3, scope: !12081)
!12092 = distinct !{!12092, !12091, !12093}
!12093 = !DILocation(line: 590, column: 3, scope: !12081)
!12094 = !DILocation(line: 591, column: 10, scope: !12081)
!12095 = !DILocation(line: 592, column: 2, scope: !12081)
!12096 = !DILocation(line: 575, column: 25, scope: !12066)
!12097 = !DILocation(line: 594, column: 2, scope: !12066)
!12098 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1866, file: !1866, line: 49, type: !12099, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !250)
!12099 = !DISubroutineType(types: !12100)
!12100 = !{!2501}
!12101 = !DILocation(line: 51, column: 10, scope: !12098)
!12102 = !DILocation(line: 51, column: 20, scope: !12098)
!12103 = !DILocation(line: 51, column: 2, scope: !12098)
!12104 = distinct !DISubprogram(name: "coredump", scope: !2970, file: !2970, line: 209, type: !12105, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12251)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{null, !32, !12107, !12151}
!12107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12108, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12109)
!12109 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2633, line: 141, baseType: !12110)
!12110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2633, line: 97, size: 256, elements: !12111)
!12111 = !{!12112}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12110, file: !2633, line: 107, baseType: !12113, size: 256)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2633, line: 98, size: 256, elements: !12114)
!12114 = !{!12115, !12120, !12125, !12130, !12135, !12140, !12145, !12150}
!12115 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 99, baseType: !12116, size: 32)
!12116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 99, size: 32, elements: !12117)
!12117 = !{!12118, !12119}
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12116, file: !2633, line: 99, baseType: !162, size: 32)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12116, file: !2633, line: 99, baseType: !162, size: 32)
!12120 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 100, baseType: !12121, size: 32, offset: 32)
!12121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 100, size: 32, elements: !12122)
!12122 = !{!12123, !12124}
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12121, file: !2633, line: 100, baseType: !162, size: 32)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12121, file: !2633, line: 100, baseType: !162, size: 32)
!12125 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 101, baseType: !12126, size: 32, offset: 64)
!12126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 101, size: 32, elements: !12127)
!12127 = !{!12128, !12129}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12126, file: !2633, line: 101, baseType: !162, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12126, file: !2633, line: 101, baseType: !162, size: 32)
!12130 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 102, baseType: !12131, size: 32, offset: 96)
!12131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 102, size: 32, elements: !12132)
!12132 = !{!12133, !12134}
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12131, file: !2633, line: 102, baseType: !162, size: 32)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12131, file: !2633, line: 102, baseType: !162, size: 32)
!12135 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 103, baseType: !12136, size: 32, offset: 128)
!12136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 103, size: 32, elements: !12137)
!12137 = !{!12138, !12139}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12136, file: !2633, line: 103, baseType: !162, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12136, file: !2633, line: 103, baseType: !162, size: 32)
!12140 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 104, baseType: !12141, size: 32, offset: 160)
!12141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 104, size: 32, elements: !12142)
!12142 = !{!12143, !12144}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12141, file: !2633, line: 104, baseType: !162, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12141, file: !2633, line: 104, baseType: !162, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2633, line: 105, baseType: !12146, size: 32, offset: 192)
!12146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2633, line: 105, size: 32, elements: !12147)
!12147 = !{!12148, !12149}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12146, file: !2633, line: 105, baseType: !162, size: 32)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12146, file: !2633, line: 105, baseType: !162, size: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12113, file: !2633, line: 106, baseType: !162, size: 32, offset: 224)
!12151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12152, size: 32)
!12152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !372, line: 245, size: 1024, elements: !12153)
!12153 = !{!12154, !12212, !12224, !12225, !12226, !12227, !12233, !12246}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12152, file: !372, line: 247, baseType: !12155, size: 384)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !372, line: 57, size: 384, elements: !12156)
!12156 = !{!12157, !12181, !12188, !12189, !12190, !12199, !12200, !12201}
!12157 = !DIDerivedType(tag: DW_TAG_member, scope: !12155, file: !372, line: 60, baseType: !12158, size: 64)
!12158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12155, file: !372, line: 60, size: 64, elements: !12159)
!12159 = !{!12160, !12175}
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12158, file: !372, line: 61, baseType: !12161, size: 64)
!12161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12162)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12163)
!12163 = !{!12164, !12170}
!12164 = !DIDerivedType(tag: DW_TAG_member, scope: !12162, file: !233, line: 38, baseType: !12165, size: 32)
!12165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12162, file: !233, line: 38, size: 32, elements: !12166)
!12166 = !{!12167, !12169}
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12165, file: !233, line: 39, baseType: !12168, size: 32)
!12168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12162, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12165, file: !233, line: 40, baseType: !12168, size: 32)
!12170 = !DIDerivedType(tag: DW_TAG_member, scope: !12162, file: !233, line: 42, baseType: !12171, size: 32, offset: 32)
!12171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12162, file: !233, line: 42, size: 32, elements: !12172)
!12172 = !{!12173, !12174}
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12171, file: !233, line: 43, baseType: !12168, size: 32)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12171, file: !233, line: 44, baseType: !12168, size: 32)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12158, file: !372, line: 62, baseType: !12176, size: 64)
!12176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !397, line: 49, size: 64, elements: !12177)
!12177 = !{!12178}
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12176, file: !397, line: 50, baseType: !12179, size: 64)
!12179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12180, size: 64, elements: !402)
!12180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12176, size: 32)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12155, file: !372, line: 68, baseType: !12182, size: 32, offset: 64)
!12182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12183, size: 32)
!12183 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12184)
!12184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12185)
!12185 = !{!12186}
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12184, file: !228, line: 232, baseType: !12187, size: 64)
!12187 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12162)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12155, file: !372, line: 71, baseType: !133, size: 8, offset: 96)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12155, file: !372, line: 74, baseType: !133, size: 8, offset: 104)
!12190 = !DIDerivedType(tag: DW_TAG_member, scope: !12155, file: !372, line: 90, baseType: !12191, size: 16, offset: 112)
!12191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12155, file: !372, line: 90, size: 16, elements: !12192)
!12192 = !{!12193, !12198}
!12193 = !DIDerivedType(tag: DW_TAG_member, scope: !12191, file: !372, line: 91, baseType: !12194, size: 16)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12191, file: !372, line: 91, size: 16, elements: !12195)
!12195 = !{!12196, !12197}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12194, file: !372, line: 96, baseType: !420, size: 8)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12194, file: !372, line: 97, baseType: !133, size: 8, offset: 8)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12191, file: !372, line: 100, baseType: !424, size: 16)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12155, file: !372, line: 107, baseType: !162, size: 32, offset: 128)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12155, file: !372, line: 127, baseType: !102, size: 32, offset: 160)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12155, file: !372, line: 131, baseType: !12202, size: 192, offset: 192)
!12202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12203)
!12203 = !{!12204, !12205, !12211}
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12202, file: !228, line: 245, baseType: !12161, size: 64)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12202, file: !228, line: 246, baseType: !12206, size: 32, offset: 64)
!12206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12207)
!12207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12208, size: 32)
!12208 = !DISubroutineType(types: !12209)
!12209 = !{null, !12210}
!12210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12202, size: 32)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12202, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12152, file: !372, line: 250, baseType: !12213, size: 288, offset: 384)
!12213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !441, line: 25, size: 288, elements: !12214)
!12214 = !{!12215, !12216, !12217, !12218, !12219, !12220, !12221, !12222, !12223}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12213, file: !441, line: 26, baseType: !162, size: 32)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12213, file: !441, line: 27, baseType: !162, size: 32, offset: 32)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12213, file: !441, line: 28, baseType: !162, size: 32, offset: 64)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12213, file: !441, line: 29, baseType: !162, size: 32, offset: 96)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12213, file: !441, line: 30, baseType: !162, size: 32, offset: 128)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12213, file: !441, line: 31, baseType: !162, size: 32, offset: 160)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12213, file: !441, line: 32, baseType: !162, size: 32, offset: 192)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12213, file: !441, line: 33, baseType: !162, size: 32, offset: 224)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12213, file: !441, line: 34, baseType: !162, size: 32, offset: 256)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12152, file: !372, line: 253, baseType: !102, size: 32, offset: 672)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12152, file: !372, line: 256, baseType: !12183, size: 64, offset: 704)
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12152, file: !372, line: 294, baseType: !107, size: 32, offset: 768)
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12152, file: !372, line: 300, baseType: !12228, size: 96, offset: 800)
!12228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !372, line: 149, size: 96, elements: !12229)
!12229 = !{!12230, !12231, !12232}
!12230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12228, file: !372, line: 153, baseType: !22, size: 32)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12228, file: !372, line: 162, baseType: !252, size: 32, offset: 32)
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12228, file: !372, line: 168, baseType: !252, size: 32, offset: 64)
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12152, file: !372, line: 325, baseType: !12234, size: 32, offset: 896)
!12234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12235, size: 32)
!12235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12236)
!12236 = !{!12237, !12243, !12244}
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12235, file: !224, line: 5074, baseType: !12238, size: 96)
!12238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !12239)
!12239 = !{!12240, !12241, !12242}
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12238, file: !467, line: 57, baseType: !470, size: 32)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12238, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12238, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12235, file: !224, line: 5075, baseType: !12183, size: 64, offset: 96)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12235, file: !224, line: 5076, baseType: !12245, offset: 160)
!12245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12152, file: !372, line: 343, baseType: !12247, size: 64, offset: 928)
!12247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !441, line: 60, size: 64, elements: !12248)
!12248 = !{!12249, !12250}
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12247, file: !441, line: 63, baseType: !162, size: 32)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12247, file: !441, line: 66, baseType: !162, size: 32, offset: 32)
!12251 = !{!12252, !12253, !12254}
!12252 = !DILocalVariable(name: "reason", arg: 1, scope: !12104, file: !2970, line: 209, type: !32)
!12253 = !DILocalVariable(name: "esf", arg: 2, scope: !12104, file: !2970, line: 209, type: !12107)
!12254 = !DILocalVariable(name: "thread", arg: 3, scope: !12104, file: !2970, line: 210, type: !12151)
!12255 = !DILocation(line: 0, scope: !12104)
!12256 = !DILocation(line: 212, column: 1, scope: !12104)
!12257 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2970, file: !2970, line: 214, type: !12258, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12260)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{null, !22, !22}
!12260 = !{!12261, !12262}
!12261 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12257, file: !2970, line: 214, type: !22)
!12262 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12257, file: !2970, line: 214, type: !22)
!12263 = !DILocation(line: 0, scope: !12257)
!12264 = !DILocation(line: 216, column: 1, scope: !12257)
!12265 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2970, file: !2970, line: 218, type: !12266, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12268)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{null, !182, !252}
!12268 = !{!12269, !12270}
!12269 = !DILocalVariable(name: "buf", arg: 1, scope: !12265, file: !2970, line: 218, type: !182)
!12270 = !DILocalVariable(name: "buflen", arg: 2, scope: !12265, file: !2970, line: 218, type: !252)
!12271 = !DILocation(line: 0, scope: !12265)
!12272 = !DILocation(line: 220, column: 1, scope: !12265)
!12273 = distinct !DISubprogram(name: "coredump_query", scope: !2970, file: !2970, line: 222, type: !12274, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12276)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!107, !2969, !102}
!12276 = !{!12277, !12278}
!12277 = !DILocalVariable(name: "query_id", arg: 1, scope: !12273, file: !2970, line: 222, type: !2969)
!12278 = !DILocalVariable(name: "arg", arg: 2, scope: !12273, file: !2970, line: 222, type: !102)
!12279 = !DILocation(line: 0, scope: !12273)
!12280 = !DILocation(line: 224, column: 2, scope: !12273)
!12281 = distinct !DISubprogram(name: "coredump_cmd", scope: !2970, file: !2970, line: 227, type: !12282, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12284)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{!107, !2976, !102}
!12284 = !{!12285, !12286}
!12285 = !DILocalVariable(name: "query_id", arg: 1, scope: !12281, file: !2970, line: 227, type: !2976)
!12286 = !DILocalVariable(name: "arg", arg: 2, scope: !12281, file: !2970, line: 227, type: !102)
!12287 = !DILocation(line: 0, scope: !12281)
!12288 = !DILocation(line: 229, column: 2, scope: !12281)
!12289 = distinct !DISubprogram(name: "arch_system_halt", scope: !12290, file: !12290, line: 23, type: !5878, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12291)
!12290 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12291 = !{!12292}
!12292 = !DILocalVariable(name: "reason", arg: 1, scope: !12289, file: !12290, line: 23, type: !32)
!12293 = !DILocation(line: 0, scope: !12289)
!12294 = !DILocation(line: 55, column: 2, scope: !12295, inlinedAt: !12299)
!12295 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12296)
!12296 = !{!12297, !12298}
!12297 = !DILocalVariable(name: "key", scope: !12295, file: !5867, line: 44, type: !32)
!12298 = !DILocalVariable(name: "tmp", scope: !12295, file: !5867, line: 53, type: !32)
!12299 = distinct !DILocation(line: 31, column: 8, scope: !12289)
!12300 = !{i64 1650400}
!12301 = !DILocation(line: 0, scope: !12295, inlinedAt: !12299)
!12302 = !DILocation(line: 32, column: 2, scope: !12289)
!12303 = !DILocation(line: 32, column: 2, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !12290, line: 32, column: 2)
!12305 = distinct !DILexicalBlock(scope: !12289, file: !12290, line: 32, column: 2)
!12306 = distinct !{!12306, !12307, !12308}
!12307 = !DILocation(line: 32, column: 2, scope: !12305)
!12308 = !DILocation(line: 34, column: 2, scope: !12305)
!12309 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12290, file: !12290, line: 39, type: !12310, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12312)
!12310 = !DISubroutineType(types: !12311)
!12311 = !{null, !32, !12107}
!12312 = !{!12313, !12314}
!12313 = !DILocalVariable(name: "reason", arg: 1, scope: !12309, file: !12290, line: 39, type: !32)
!12314 = !DILocalVariable(name: "esf", arg: 2, scope: !12309, file: !12290, line: 40, type: !12107)
!12315 = !DILocation(line: 0, scope: !12309)
!12316 = !DILocation(line: 46, column: 2, scope: !12309)
!12317 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12290, file: !12290, line: 81, type: !5878, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12318)
!12318 = !{!12319}
!12319 = !DILocalVariable(name: "reason", arg: 1, scope: !12317, file: !12290, line: 81, type: !32)
!12320 = !DILocation(line: 0, scope: !12317)
!12321 = !DILocation(line: 83, column: 2, scope: !12317)
!12322 = distinct !DISubprogram(name: "z_fatal_error", scope: !12290, file: !12290, line: 96, type: !12310, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12323)
!12323 = !{!12324, !12325, !12326, !12327}
!12324 = !DILocalVariable(name: "reason", arg: 1, scope: !12322, file: !12290, line: 96, type: !32)
!12325 = !DILocalVariable(name: "esf", arg: 2, scope: !12322, file: !12290, line: 96, type: !12107)
!12326 = !DILocalVariable(name: "key", scope: !12322, file: !12290, line: 102, type: !32)
!12327 = !DILocalVariable(name: "thread", scope: !12322, file: !12290, line: 103, type: !12151)
!12328 = !DILocation(line: 0, scope: !12322)
!12329 = !DILocation(line: 55, column: 2, scope: !12295, inlinedAt: !12330)
!12330 = distinct !DILocation(line: 102, column: 21, scope: !12322)
!12331 = !DILocation(line: 0, scope: !12295, inlinedAt: !12330)
!12332 = !DILocation(line: 119, column: 11, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 119, column: 6)
!12334 = !DILocation(line: 119, column: 20, scope: !12333)
!12335 = !DILocation(line: 131, column: 2, scope: !12322)
!12336 = !DILocation(line: 151, column: 7, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !12290, line: 146, column: 32)
!12338 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 146, column: 6)
!12339 = !DILocation(line: 151, column: 21, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12337, file: !12290, line: 151, column: 7)
!12341 = !DILocation(line: 104, column: 4, scope: !12322)
!12342 = !DILocalVariable(name: "key", arg: 1, scope: !12343, file: !5867, line: 84, type: !32)
!12343 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12344)
!12344 = !{!12342}
!12345 = !DILocation(line: 0, scope: !12343, inlinedAt: !12346)
!12346 = distinct !DILocation(line: 186, column: 2, scope: !12322)
!12347 = !DILocation(line: 95, column: 2, scope: !12343, inlinedAt: !12346)
!12348 = !{i64 1651217}
!12349 = !DILocation(line: 189, column: 3, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !12290, line: 188, column: 41)
!12351 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 188, column: 6)
!12352 = !DILocation(line: 191, column: 1, scope: !12322)
!12353 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !12354, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !250)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{!12356}
!12356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !372, line: 347, baseType: !12151)
!12357 = !DILocation(line: 535, column: 9, scope: !12353)
!12358 = !DILocation(line: 535, column: 2, scope: !12353)
!12359 = distinct !DISubprogram(name: "k_thread_abort", scope: !3292, file: !3292, line: 188, type: !12360, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12362)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{null, !12356}
!12362 = !{!12363}
!12363 = !DILocalVariable(name: "thread", arg: 1, scope: !12359, file: !3292, line: 188, type: !12356)
!12364 = !DILocation(line: 0, scope: !12359)
!12365 = !DILocation(line: 197, column: 2, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12359, file: !3292, line: 197, column: 2)
!12367 = !{i64 2152216058}
!12368 = !DILocation(line: 198, column: 2, scope: !12359)
!12369 = !DILocation(line: 199, column: 1, scope: !12359)
!12370 = distinct !DISubprogram(name: "z_current_get", scope: !3292, file: !3292, line: 173, type: !12354, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !250)
!12371 = !DILocation(line: 180, column: 2, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12370, file: !3292, line: 180, column: 2)
!12373 = !{i64 2152215990}
!12374 = !DILocation(line: 181, column: 9, scope: !12370)
!12375 = !DILocation(line: 181, column: 2, scope: !12370)
!12376 = distinct !DISubprogram(name: "z_early_memset", scope: !1873, file: !1873, line: 108, type: !12377, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12379)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{null, !102, !107, !252}
!12379 = !{!12380, !12381, !12382}
!12380 = !DILocalVariable(name: "dst", arg: 1, scope: !12376, file: !1873, line: 108, type: !102)
!12381 = !DILocalVariable(name: "c", arg: 2, scope: !12376, file: !1873, line: 108, type: !107)
!12382 = !DILocalVariable(name: "n", arg: 3, scope: !12376, file: !1873, line: 108, type: !252)
!12383 = !DILocation(line: 0, scope: !12376)
!12384 = !DILocation(line: 110, column: 9, scope: !12376)
!12385 = !DILocation(line: 111, column: 1, scope: !12376)
!12386 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1873, file: !1873, line: 121, type: !12387, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12389)
!12387 = !DISubroutineType(types: !12388)
!12388 = !{null, !102, !13, !252}
!12389 = !{!12390, !12391, !12392}
!12390 = !DILocalVariable(name: "dst", arg: 1, scope: !12386, file: !1873, line: 121, type: !102)
!12391 = !DILocalVariable(name: "src", arg: 2, scope: !12386, file: !1873, line: 121, type: !13)
!12392 = !DILocalVariable(name: "n", arg: 3, scope: !12386, file: !1873, line: 121, type: !252)
!12393 = !DILocation(line: 0, scope: !12386)
!12394 = !DILocation(line: 123, column: 9, scope: !12386)
!12395 = !DILocation(line: 124, column: 1, scope: !12386)
!12396 = distinct !DISubprogram(name: "z_bss_zero", scope: !1873, file: !1873, line: 132, type: !3107, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !250)
!12397 = !DILocation(line: 143, column: 2, scope: !12396)
!12398 = !DILocation(line: 168, column: 1, scope: !12396)
!12399 = distinct !DISubprogram(name: "z_init_cpu", scope: !1873, file: !1873, line: 372, type: !7772, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12400)
!12400 = !{!12401}
!12401 = !DILocalVariable(name: "id", arg: 1, scope: !12399, file: !1873, line: 372, type: !107)
!12402 = !DILocation(line: 0, scope: !12399)
!12403 = !DILocation(line: 374, column: 2, scope: !12399)
!12404 = !DILocation(line: 375, column: 34, scope: !12399)
!12405 = !DILocation(line: 375, column: 19, scope: !12399)
!12406 = !DILocation(line: 375, column: 31, scope: !12399)
!12407 = !DILocation(line: 376, column: 24, scope: !12399)
!12408 = !DILocation(line: 376, column: 19, scope: !12399)
!12409 = !DILocation(line: 376, column: 22, scope: !12399)
!12410 = !DILocation(line: 378, column: 26, scope: !12399)
!12411 = !DILocation(line: 378, column: 4, scope: !12399)
!12412 = !DILocation(line: 378, column: 50, scope: !12399)
!12413 = !DILocation(line: 377, column: 19, scope: !12399)
!12414 = !DILocation(line: 377, column: 29, scope: !12399)
!12415 = !DILocation(line: 384, column: 1, scope: !12399)
!12416 = distinct !DISubprogram(name: "init_idle_thread", scope: !1873, file: !1873, line: 343, type: !7772, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12417)
!12417 = !{!12418, !12419, !12420, !12423}
!12418 = !DILocalVariable(name: "i", arg: 1, scope: !12416, file: !1873, line: 343, type: !107)
!12419 = !DILocalVariable(name: "thread", scope: !12416, file: !1873, line: 345, type: !1965)
!12420 = !DILocalVariable(name: "stack", scope: !12416, file: !1873, line: 346, type: !12421)
!12421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12422, size: 32)
!12422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3648, line: 44, baseType: !2079)
!12423 = !DILocalVariable(name: "tname", scope: !12416, file: !1873, line: 358, type: !256)
!12424 = !DILocation(line: 0, scope: !12416)
!12425 = !DILocation(line: 345, column: 29, scope: !12416)
!12426 = !DILocation(line: 346, column: 28, scope: !12416)
!12427 = !DILocation(line: 362, column: 37, scope: !12416)
!12428 = !DILocation(line: 362, column: 36, scope: !12416)
!12429 = !DILocation(line: 361, column: 2, scope: !12416)
!12430 = !DILocation(line: 365, column: 2, scope: !12416)
!12431 = !DILocation(line: 370, column: 1, scope: !12416)
!12432 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2080, file: !2080, line: 331, type: !12433, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12435)
!12433 = !DISubroutineType(types: !12434)
!12434 = !{!256, !12421}
!12435 = !{!12436}
!12436 = !DILocalVariable(name: "sym", arg: 1, scope: !12432, file: !2080, line: 331, type: !12421)
!12437 = !DILocation(line: 0, scope: !12432)
!12438 = !DILocation(line: 333, column: 21, scope: !12432)
!12439 = !DILocation(line: 333, column: 2, scope: !12432)
!12440 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12441, file: !12441, line: 155, type: !12442, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12444)
!12441 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12442 = !DISubroutineType(types: !12443)
!12443 = !{null, !1965}
!12444 = !{!12445}
!12445 = !DILocalVariable(name: "thread", arg: 1, scope: !12440, file: !12441, line: 155, type: !1965)
!12446 = !DILocation(line: 0, scope: !12440)
!12447 = !DILocation(line: 157, column: 15, scope: !12440)
!12448 = !DILocation(line: 157, column: 28, scope: !12440)
!12449 = !DILocation(line: 158, column: 1, scope: !12440)
!12450 = distinct !DISubprogram(name: "z_cstart", scope: !1873, file: !1873, line: 501, type: !3107, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12451)
!12451 = !{!12452}
!12452 = !DILocalVariable(name: "dummy_thread", scope: !12450, file: !1873, line: 518, type: !1966)
!12453 = !DILocation(line: 507, column: 2, scope: !12450)
!12454 = !DILocation(line: 43, column: 14, scope: !12455, inlinedAt: !12459)
!12455 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12456, file: !12456, line: 40, type: !3107, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12457)
!12456 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12457 = !{!12458}
!12458 = !DILocalVariable(name: "msp", scope: !12455, file: !12456, line: 42, type: !162)
!12459 = distinct !DILocation(line: 44, column: 2, scope: !12460, inlinedAt: !12462)
!12460 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12461, file: !12461, line: 42, type: !3107, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !250)
!12461 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12462 = distinct !DILocation(line: 510, column: 2, scope: !12450)
!12463 = !DILocation(line: 43, column: 3, scope: !12455, inlinedAt: !12459)
!12464 = !DILocation(line: 43, column: 60, scope: !12455, inlinedAt: !12459)
!12465 = !DILocation(line: 0, scope: !12455, inlinedAt: !12459)
!12466 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12467, file: !6058, line: 1153, type: !162)
!12467 = distinct !DISubprogram(name: "__set_MSP", scope: !6058, file: !6058, line: 1153, type: !5891, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12468)
!12468 = !{!12466}
!12469 = !DILocation(line: 0, scope: !12467, inlinedAt: !12470)
!12470 = distinct !DILocation(line: 46, column: 2, scope: !12455, inlinedAt: !12459)
!12471 = !DILocation(line: 1155, column: 3, scope: !12467, inlinedAt: !12470)
!12472 = !{i64 2463840}
!12473 = !DILocation(line: 62, column: 11, scope: !12455, inlinedAt: !12459)
!12474 = !DILocation(line: 102, column: 2, scope: !12475, inlinedAt: !12476)
!12475 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6814, file: !6814, line: 97, type: !3107, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !250)
!12476 = distinct !DILocation(line: 45, column: 2, scope: !12460, inlinedAt: !12462)
!12477 = !DILocation(line: 108, column: 2, scope: !12475, inlinedAt: !12476)
!12478 = !DILocation(line: 112, column: 2, scope: !12475, inlinedAt: !12476)
!12479 = !DILocation(line: 113, column: 2, scope: !12475, inlinedAt: !12476)
!12480 = !DILocation(line: 114, column: 2, scope: !12475, inlinedAt: !12476)
!12481 = !DILocation(line: 116, column: 2, scope: !12475, inlinedAt: !12476)
!12482 = !DILocation(line: 123, column: 13, scope: !12475, inlinedAt: !12476)
!12483 = !DILocation(line: 46, column: 2, scope: !12460, inlinedAt: !12462)
!12484 = !DILocation(line: 47, column: 2, scope: !12460, inlinedAt: !12462)
!12485 = !DILocation(line: 174, column: 12, scope: !12486, inlinedAt: !12487)
!12486 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6814, file: !6814, line: 169, type: !3107, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !250)
!12487 = distinct !DILocation(line: 48, column: 2, scope: !12460, inlinedAt: !12462)
!12488 = !DILocation(line: 179, column: 12, scope: !12486, inlinedAt: !12487)
!12489 = !DILocation(line: 50, column: 2, scope: !12460, inlinedAt: !12462)
!12490 = !DILocation(line: 57, column: 2, scope: !12460, inlinedAt: !12462)
!12491 = !DILocation(line: 518, column: 2, scope: !12450)
!12492 = !DILocation(line: 518, column: 18, scope: !12450)
!12493 = !DILocation(line: 520, column: 2, scope: !12450)
!12494 = !DILocation(line: 523, column: 2, scope: !12450)
!12495 = !DILocation(line: 526, column: 2, scope: !12450)
!12496 = !DILocation(line: 527, column: 2, scope: !12450)
!12497 = !DILocation(line: 543, column: 24, scope: !12450)
!12498 = !DILocation(line: 543, column: 2, scope: !12450)
!12499 = !DILocation(line: 0, scope: !2098)
!12500 = !DILocation(line: 246, column: 15, scope: !2116)
!12501 = !DILocation(line: 246, column: 36, scope: !2115)
!12502 = !DILocation(line: 246, column: 2, scope: !2116)
!12503 = !DILocation(line: 247, column: 37, scope: !2114)
!12504 = !DILocation(line: 0, scope: !2114)
!12505 = !DILocation(line: 248, column: 19, scope: !2114)
!12506 = !DILocation(line: 248, column: 12, scope: !2114)
!12507 = !DILocation(line: 250, column: 11, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !2114, file: !1873, line: 250, column: 7)
!12509 = !DILocation(line: 250, column: 7, scope: !2114)
!12510 = !DILocation(line: 254, column: 11, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !1873, line: 254, column: 8)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !1873, line: 250, column: 20)
!12513 = !DILocation(line: 254, column: 8, scope: !12512)
!12514 = !DILocation(line: 255, column: 9, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12511, file: !1873, line: 254, column: 17)
!12516 = !DILocation(line: 258, column: 9, scope: !12515)
!12517 = !DILocation(line: 261, column: 28, scope: !12515)
!12518 = !DILocation(line: 261, column: 10, scope: !12515)
!12519 = !DILocation(line: 261, column: 17, scope: !12515)
!12520 = !DILocation(line: 261, column: 26, scope: !12515)
!12521 = !DILocation(line: 262, column: 4, scope: !12515)
!12522 = !DILocation(line: 263, column: 9, scope: !12512)
!12523 = !DILocation(line: 263, column: 16, scope: !12512)
!12524 = !DILocation(line: 263, column: 28, scope: !12512)
!12525 = !DILocation(line: 264, column: 3, scope: !12512)
!12526 = !DILocation(line: 246, column: 60, scope: !2115)
!12527 = distinct !{!12527, !12502, !12528}
!12528 = !DILocation(line: 265, column: 2, scope: !2116)
!12529 = !DILocation(line: 266, column: 1, scope: !2098)
!12530 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !510, file: !510, line: 1638, type: !6092, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12531)
!12531 = !{!12532, !12533}
!12532 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12530, file: !510, line: 1638, type: !834)
!12533 = !DILocalVariable(name: "priority", arg: 2, scope: !12530, file: !510, line: 1638, type: !162)
!12534 = !DILocation(line: 0, scope: !12530)
!12535 = !DILocation(line: 1646, column: 48, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !510, line: 1645, column: 3)
!12537 = distinct !DILexicalBlock(scope: !12530, file: !510, line: 1640, column: 7)
!12538 = !DILocation(line: 1646, column: 32, scope: !12536)
!12539 = !DILocation(line: 1646, column: 40, scope: !12536)
!12540 = !DILocation(line: 1646, column: 5, scope: !12536)
!12541 = !DILocation(line: 1646, column: 46, scope: !12536)
!12542 = !DILocation(line: 1648, column: 1, scope: !12530)
!12543 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12461, file: !12461, line: 32, type: !3107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!12544 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12545, file: !12545, line: 215, type: !12442, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12546)
!12545 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12546 = !{!12547}
!12547 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12544, file: !12545, line: 215, type: !1965)
!12548 = !DILocation(line: 0, scope: !12544)
!12549 = !DILocation(line: 217, column: 21, scope: !12544)
!12550 = !DILocation(line: 217, column: 34, scope: !12544)
!12551 = !DILocation(line: 221, column: 21, scope: !12544)
!12552 = !DILocation(line: 221, column: 34, scope: !12544)
!12553 = !DILocation(line: 223, column: 27, scope: !12544)
!12554 = !DILocation(line: 223, column: 33, scope: !12544)
!12555 = !DILocation(line: 224, column: 27, scope: !12544)
!12556 = !DILocation(line: 224, column: 32, scope: !12544)
!12557 = !DILocation(line: 232, column: 16, scope: !12544)
!12558 = !DILocation(line: 232, column: 30, scope: !12544)
!12559 = !DILocation(line: 239, column: 24, scope: !12544)
!12560 = !DILocation(line: 240, column: 1, scope: !12544)
!12561 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1873, file: !1873, line: 399, type: !12562, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12564)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{!256}
!12564 = !{!12565}
!12565 = !DILocalVariable(name: "stack_ptr", scope: !12561, file: !1873, line: 401, type: !256)
!12566 = !DILocation(line: 404, column: 2, scope: !12561)
!12567 = !DILocation(line: 416, column: 24, scope: !12561)
!12568 = !DILocation(line: 418, column: 14, scope: !12561)
!12569 = !DILocation(line: 0, scope: !12561)
!12570 = !DILocation(line: 423, column: 2, scope: !12561)
!12571 = !DILocation(line: 424, column: 2, scope: !12561)
!12572 = !DILocation(line: 426, column: 2, scope: !12561)
!12573 = !DILocation(line: 428, column: 2, scope: !12561)
!12574 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1873, file: !1873, line: 432, type: !3324, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12575)
!12575 = !{!12576}
!12576 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12574, file: !1873, line: 432, type: !256)
!12577 = !DILocation(line: 0, scope: !12574)
!12578 = !DILocation(line: 435, column: 2, scope: !12574)
!12579 = !DILocation(line: 445, column: 2, scope: !12574)
!12580 = distinct !DISubprogram(name: "bg_thread_main", scope: !1873, file: !1873, line: 277, type: !3650, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !12581)
!12581 = !{!12582, !12583, !12584}
!12582 = !DILocalVariable(name: "unused1", arg: 1, scope: !12580, file: !1873, line: 277, type: !102)
!12583 = !DILocalVariable(name: "unused2", arg: 2, scope: !12580, file: !1873, line: 277, type: !102)
!12584 = !DILocalVariable(name: "unused3", arg: 3, scope: !12580, file: !1873, line: 277, type: !102)
!12585 = !DILocation(line: 0, scope: !12580)
!12586 = !DILocation(line: 291, column: 20, scope: !12580)
!12587 = !DILocation(line: 293, column: 2, scope: !12580)
!12588 = !DILocation(line: 297, column: 2, scope: !12580)
!12589 = !DILocation(line: 305, column: 2, scope: !12580)
!12590 = !DILocation(line: 307, column: 2, scope: !12580)
!12591 = !DILocation(line: 330, column: 8, scope: !12580)
!12592 = !DILocation(line: 333, column: 34, scope: !12580)
!12593 = !DILocation(line: 339, column: 1, scope: !12580)
!12594 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2125, file: !2125, line: 45, type: !12595, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12603)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{null, !12597, !102}
!12597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !12598)
!12598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12599, size: 32)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{null, !12601, !102}
!12601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12602, size: 32)
!12602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2130)
!12603 = !{!12604, !12605}
!12604 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12594, file: !2125, line: 45, type: !12597)
!12605 = !DILocalVariable(name: "user_data", arg: 2, scope: !12594, file: !2125, line: 45, type: !102)
!12606 = !DILocation(line: 0, scope: !12594)
!12607 = !DILocation(line: 71, column: 1, scope: !12594)
!12608 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2125, file: !2125, line: 73, type: !12595, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12609)
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12608, file: !2125, line: 73, type: !12597)
!12611 = !DILocalVariable(name: "user_data", arg: 2, scope: !12608, file: !2125, line: 73, type: !102)
!12612 = !DILocation(line: 0, scope: !12608)
!12613 = !DILocation(line: 95, column: 1, scope: !12608)
!12614 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2125, file: !2125, line: 97, type: !6815, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !250)
!12615 = !DILocation(line: 1031, column: 3, scope: !12616, inlinedAt: !12619)
!12616 = distinct !DISubprogram(name: "__get_IPSR", scope: !6058, file: !6058, line: 1027, type: !6808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12617)
!12617 = !{!12618}
!12618 = !DILocalVariable(name: "result", scope: !12616, file: !6058, line: 1029, type: !162)
!12619 = distinct !DILocation(line: 48, column: 10, scope: !12620, inlinedAt: !12621)
!12620 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6814, file: !6814, line: 46, type: !6815, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !250)
!12621 = distinct !DILocation(line: 99, column: 9, scope: !12614)
!12622 = !{i64 2469491}
!12623 = !DILocation(line: 0, scope: !12616, inlinedAt: !12619)
!12624 = !DILocation(line: 48, column: 9, scope: !12620, inlinedAt: !12621)
!12625 = !DILocation(line: 99, column: 2, scope: !12614)
!12626 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2125, file: !2125, line: 106, type: !3107, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !250)
!12627 = !DILocation(line: 108, column: 2, scope: !12626)
!12628 = !DILocation(line: 108, column: 17, scope: !12626)
!12629 = !DILocation(line: 108, column: 30, scope: !12626)
!12630 = !DILocation(line: 109, column: 1, scope: !12626)
!12631 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2125, file: !2125, line: 116, type: !3107, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !250)
!12632 = !DILocation(line: 118, column: 2, scope: !12631)
!12633 = !DILocation(line: 118, column: 17, scope: !12631)
!12634 = !DILocation(line: 118, column: 30, scope: !12631)
!12635 = !DILocation(line: 119, column: 1, scope: !12631)
!12636 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2125, file: !2125, line: 126, type: !6815, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !250)
!12637 = !DILocation(line: 128, column: 10, scope: !12636)
!12638 = !DILocation(line: 128, column: 25, scope: !12636)
!12639 = !DILocation(line: 128, column: 38, scope: !12636)
!12640 = !DILocation(line: 128, column: 53, scope: !12636)
!12641 = !DILocation(line: 128, column: 2, scope: !12636)
!12642 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2125, file: !2125, line: 187, type: !12643, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{!107, !2129, !123}
!12645 = !{!12646, !12647}
!12646 = !DILocalVariable(name: "thread", arg: 1, scope: !12642, file: !2125, line: 187, type: !2129)
!12647 = !DILocalVariable(name: "value", arg: 2, scope: !12642, file: !2125, line: 187, type: !123)
!12648 = !DILocation(line: 0, scope: !12642)
!12649 = !DILocation(line: 206, column: 2, scope: !12642)
!12650 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2125, file: !2125, line: 238, type: !12651, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!123, !2129}
!12653 = !{!12654}
!12654 = !DILocalVariable(name: "thread", arg: 1, scope: !12650, file: !2125, line: 238, type: !2129)
!12655 = !DILocation(line: 0, scope: !12650)
!12656 = !DILocation(line: 244, column: 2, scope: !12650)
!12657 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2125, file: !2125, line: 248, type: !12658, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12660)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{!107, !2128, !256, !252}
!12660 = !{!12661, !12662, !12663}
!12661 = !DILocalVariable(name: "thread", arg: 1, scope: !12657, file: !2125, line: 248, type: !2128)
!12662 = !DILocalVariable(name: "buf", arg: 2, scope: !12657, file: !2125, line: 248, type: !256)
!12663 = !DILocalVariable(name: "size", arg: 3, scope: !12657, file: !2125, line: 248, type: !252)
!12664 = !DILocation(line: 0, scope: !12657)
!12665 = !DILocation(line: 257, column: 2, scope: !12657)
!12666 = !DILocation(line: 0, scope: !2124)
!12667 = !DILocation(line: 281, column: 11, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !2124, file: !2125, line: 281, column: 6)
!12669 = !DILocation(line: 281, column: 20, scope: !12668)
!12670 = !DILocation(line: 275, column: 45, scope: !2124)
!12671 = !DILocation(line: 285, column: 10, scope: !2124)
!12672 = !DILocation(line: 0, scope: !2247)
!12673 = !DILocation(line: 293, column: 39, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !2247, file: !2125, line: 293, column: 2)
!12675 = !DILocation(line: 293, column: 2, scope: !2247)
!12676 = !DILocation(line: 273, column: 14, scope: !2124)
!12677 = !DILocation(line: 309, column: 2, scope: !2124)
!12678 = !DILocation(line: 309, column: 11, scope: !2124)
!12679 = !DILocation(line: 311, column: 2, scope: !2124)
!12680 = !DILocation(line: 293, column: 26, scope: !12674)
!12681 = !DILocation(line: 294, column: 9, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12674, file: !2125, line: 293, column: 54)
!12683 = !DILocation(line: 295, column: 21, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12682, file: !2125, line: 295, column: 7)
!12685 = !DILocation(line: 295, column: 28, scope: !12684)
!12686 = !DILocation(line: 295, column: 7, scope: !12682)
!12687 = !DILocation(line: 299, column: 25, scope: !12682)
!12688 = !DILocation(line: 299, column: 41, scope: !12682)
!12689 = !DILocation(line: 300, column: 7, scope: !12682)
!12690 = !DILocation(line: 300, column: 26, scope: !12682)
!12691 = !DILocation(line: 299, column: 10, scope: !12682)
!12692 = !DILocation(line: 299, column: 7, scope: !12682)
!12693 = !DILocation(line: 302, column: 16, scope: !12682)
!12694 = !DILocation(line: 304, column: 20, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12682, file: !2125, line: 304, column: 7)
!12696 = !DILocation(line: 304, column: 7, scope: !12682)
!12697 = !DILocation(line: 305, column: 26, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !2125, line: 304, column: 26)
!12699 = !DILocation(line: 305, column: 42, scope: !12698)
!12700 = !DILocation(line: 305, column: 11, scope: !12698)
!12701 = !DILocation(line: 305, column: 8, scope: !12698)
!12702 = !DILocation(line: 306, column: 3, scope: !12698)
!12703 = !DILocation(line: 293, column: 50, scope: !12674)
!12704 = !DILocation(line: 312, column: 1, scope: !2124)
!12705 = distinct !DISubprogram(name: "copy_bytes", scope: !2125, file: !2125, line: 261, type: !12706, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!252, !256, !252, !123, !252}
!12708 = !{!12709, !12710, !12711, !12712, !12713}
!12709 = !DILocalVariable(name: "dest", arg: 1, scope: !12705, file: !2125, line: 261, type: !256)
!12710 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12705, file: !2125, line: 261, type: !252)
!12711 = !DILocalVariable(name: "src", arg: 3, scope: !12705, file: !2125, line: 261, type: !123)
!12712 = !DILocalVariable(name: "src_size", arg: 4, scope: !12705, file: !2125, line: 261, type: !252)
!12713 = !DILocalVariable(name: "bytes_to_copy", scope: !12705, file: !2125, line: 263, type: !252)
!12714 = !DILocation(line: 0, scope: !12705)
!12715 = !DILocation(line: 265, column: 18, scope: !12705)
!12716 = !DILocation(line: 266, column: 2, scope: !12705)
!12717 = !DILocation(line: 268, column: 2, scope: !12705)
!12718 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2125, file: !2125, line: 383, type: !12719, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12721)
!12719 = !DISubroutineType(types: !12720)
!12720 = !{null, !2129}
!12721 = !{!12722}
!12722 = !DILocalVariable(name: "thread", arg: 1, scope: !12718, file: !2125, line: 383, type: !2129)
!12723 = !DILocation(line: 0, scope: !12718)
!12724 = !DILocation(line: 387, column: 2, scope: !12718)
!12725 = !DILocation(line: 388, column: 1, scope: !12718)
!12726 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2125, file: !2125, line: 528, type: !12727, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12734)
!12727 = !DISubroutineType(types: !12728)
!12728 = !{!256, !2129, !12729, !252, !3647, !102, !102, !102, !107, !162, !123}
!12729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12730, size: 32)
!12730 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3648, line: 44, baseType: !12731)
!12731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2080, line: 47, size: 8, elements: !12732)
!12732 = !{!12733}
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12731, file: !2080, line: 48, baseType: !125, size: 8)
!12734 = !{!12735, !12736, !12737, !12738, !12739, !12740, !12741, !12742, !12743, !12744, !12745}
!12735 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12726, file: !2125, line: 528, type: !2129)
!12736 = !DILocalVariable(name: "stack", arg: 2, scope: !12726, file: !2125, line: 529, type: !12729)
!12737 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12726, file: !2125, line: 529, type: !252)
!12738 = !DILocalVariable(name: "entry", arg: 4, scope: !12726, file: !2125, line: 530, type: !3647)
!12739 = !DILocalVariable(name: "p1", arg: 5, scope: !12726, file: !2125, line: 531, type: !102)
!12740 = !DILocalVariable(name: "p2", arg: 6, scope: !12726, file: !2125, line: 531, type: !102)
!12741 = !DILocalVariable(name: "p3", arg: 7, scope: !12726, file: !2125, line: 531, type: !102)
!12742 = !DILocalVariable(name: "prio", arg: 8, scope: !12726, file: !2125, line: 532, type: !107)
!12743 = !DILocalVariable(name: "options", arg: 9, scope: !12726, file: !2125, line: 532, type: !162)
!12744 = !DILocalVariable(name: "name", arg: 10, scope: !12726, file: !2125, line: 532, type: !123)
!12745 = !DILocalVariable(name: "stack_ptr", scope: !12726, file: !2125, line: 534, type: !256)
!12746 = !DILocation(line: 0, scope: !12726)
!12747 = !DILocation(line: 550, column: 28, scope: !12726)
!12748 = !DILocation(line: 550, column: 2, scope: !12726)
!12749 = !DILocation(line: 553, column: 34, scope: !12726)
!12750 = !DILocation(line: 553, column: 2, scope: !12726)
!12751 = !DILocation(line: 554, column: 14, scope: !12726)
!12752 = !DILocation(line: 564, column: 2, scope: !12726)
!12753 = !DILocation(line: 567, column: 14, scope: !12726)
!12754 = !DILocation(line: 567, column: 24, scope: !12726)
!12755 = !DILocation(line: 612, column: 7, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12726, file: !2125, line: 612, column: 6)
!12757 = !DILocation(line: 612, column: 6, scope: !12726)
!12758 = !DILocation(line: 627, column: 40, scope: !12726)
!12759 = !DILocation(line: 637, column: 2, scope: !12726)
!12760 = !DILocation(line: 613, column: 15, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12756, file: !2125, line: 612, column: 17)
!12762 = !DILocation(line: 613, column: 29, scope: !12761)
!12763 = !DILocation(line: 638, column: 1, scope: !12726)
!12764 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !12766, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12768)
!12765 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12766 = !DISubroutineType(types: !12767)
!12767 = !{null, !2160}
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "w", arg: 1, scope: !12764, file: !12765, line: 47, type: !2160)
!12770 = !DILocation(line: 0, scope: !12764)
!12771 = !DILocation(line: 49, column: 21, scope: !12764)
!12772 = !DILocation(line: 49, column: 2, scope: !12764)
!12773 = !DILocation(line: 50, column: 1, scope: !12764)
!12774 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2125, file: !2125, line: 791, type: !12775, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12778)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{null, !12777, !107, !162, !32}
!12777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!12778 = !{!12779, !12780, !12781, !12782}
!12779 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12774, file: !2125, line: 791, type: !12777)
!12780 = !DILocalVariable(name: "priority", arg: 2, scope: !12774, file: !2125, line: 791, type: !107)
!12781 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12774, file: !2125, line: 792, type: !162)
!12782 = !DILocalVariable(name: "options", arg: 4, scope: !12774, file: !2125, line: 792, type: !32)
!12783 = !DILocation(line: 0, scope: !12774)
!12784 = !DILocation(line: 795, column: 15, scope: !12774)
!12785 = !DILocation(line: 795, column: 25, scope: !12774)
!12786 = !DILocation(line: 796, column: 30, scope: !12774)
!12787 = !DILocation(line: 796, column: 15, scope: !12774)
!12788 = !DILocation(line: 796, column: 28, scope: !12774)
!12789 = !DILocation(line: 797, column: 30, scope: !12774)
!12790 = !DILocation(line: 797, column: 15, scope: !12774)
!12791 = !DILocation(line: 797, column: 28, scope: !12774)
!12792 = !DILocation(line: 799, column: 22, scope: !12774)
!12793 = !DILocation(line: 799, column: 15, scope: !12774)
!12794 = !DILocation(line: 799, column: 20, scope: !12774)
!12795 = !DILocation(line: 801, column: 15, scope: !12774)
!12796 = !DILocation(line: 801, column: 28, scope: !12774)
!12797 = !DILocation(line: 814, column: 2, scope: !12774)
!12798 = !DILocation(line: 815, column: 1, scope: !12774)
!12799 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2125, file: !2125, line: 449, type: !12800, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!256, !2129, !12729, !252}
!12802 = !{!12803, !12804, !12805, !12806, !12807, !12808, !12809, !12810}
!12803 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12799, file: !2125, line: 449, type: !2129)
!12804 = !DILocalVariable(name: "stack", arg: 2, scope: !12799, file: !2125, line: 450, type: !12729)
!12805 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12799, file: !2125, line: 450, type: !252)
!12806 = !DILocalVariable(name: "stack_obj_size", scope: !12799, file: !2125, line: 452, type: !252)
!12807 = !DILocalVariable(name: "stack_buf_size", scope: !12799, file: !2125, line: 452, type: !252)
!12808 = !DILocalVariable(name: "stack_ptr", scope: !12799, file: !2125, line: 453, type: !256)
!12809 = !DILocalVariable(name: "stack_buf_start", scope: !12799, file: !2125, line: 453, type: !256)
!12810 = !DILocalVariable(name: "delta", scope: !12799, file: !2125, line: 454, type: !252)
!12811 = !DILocation(line: 0, scope: !12799)
!12812 = !DILocation(line: 465, column: 20, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12799, file: !2125, line: 463, column: 2)
!12814 = !DILocation(line: 466, column: 21, scope: !12813)
!12815 = !DILocation(line: 473, column: 28, scope: !12799)
!12816 = !DILocation(line: 514, column: 33, scope: !12799)
!12817 = !DILocation(line: 514, column: 25, scope: !12799)
!12818 = !DILocation(line: 514, column: 31, scope: !12799)
!12819 = !DILocation(line: 515, column: 25, scope: !12799)
!12820 = !DILocation(line: 515, column: 30, scope: !12799)
!12821 = !DILocation(line: 516, column: 25, scope: !12799)
!12822 = !DILocation(line: 516, column: 31, scope: !12799)
!12823 = !DILocation(line: 520, column: 2, scope: !12799)
!12824 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2080, file: !2080, line: 331, type: !12825, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12827)
!12825 = !DISubroutineType(types: !12826)
!12826 = !{!256, !12729}
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "sym", arg: 1, scope: !12824, file: !2080, line: 331, type: !12729)
!12829 = !DILocation(line: 0, scope: !12824)
!12830 = !DILocation(line: 333, column: 21, scope: !12824)
!12831 = !DILocation(line: 333, column: 2, scope: !12824)
!12832 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12833, file: !12833, line: 40, type: !12834, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12836)
!12833 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12834 = !DISubroutineType(types: !12835)
!12835 = !{null, !12777}
!12836 = !{!12837}
!12837 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12832, file: !12833, line: 40, type: !12777)
!12838 = !DILocation(line: 0, scope: !12832)
!12839 = !DILocation(line: 42, column: 31, scope: !12832)
!12840 = !DILocation(line: 42, column: 2, scope: !12832)
!12841 = !DILocation(line: 43, column: 1, scope: !12832)
!12842 = distinct !DISubprogram(name: "z_init_timeout", scope: !12833, file: !12833, line: 25, type: !2186, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12843)
!12843 = !{!12844}
!12844 = !DILocalVariable(name: "to", arg: 1, scope: !12842, file: !12833, line: 25, type: !2188)
!12845 = !DILocation(line: 0, scope: !12842)
!12846 = !DILocation(line: 27, column: 22, scope: !12842)
!12847 = !DILocation(line: 27, column: 2, scope: !12842)
!12848 = !DILocation(line: 28, column: 1, scope: !12842)
!12849 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !12850, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12852)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{null, !2232}
!12852 = !{!12853}
!12853 = !DILocalVariable(name: "node", arg: 1, scope: !12849, file: !233, line: 211, type: !2232)
!12854 = !DILocation(line: 0, scope: !12849)
!12855 = !DILocation(line: 213, column: 8, scope: !12849)
!12856 = !DILocation(line: 213, column: 13, scope: !12849)
!12857 = !DILocation(line: 214, column: 8, scope: !12849)
!12858 = !DILocation(line: 214, column: 13, scope: !12849)
!12859 = !DILocation(line: 215, column: 1, scope: !12849)
!12860 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !12861, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12864)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !12863}
!12863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!12864 = !{!12865}
!12865 = !DILocalVariable(name: "list", arg: 1, scope: !12860, file: !233, line: 197, type: !12863)
!12866 = !DILocation(line: 0, scope: !12860)
!12867 = !DILocation(line: 199, column: 8, scope: !12860)
!12868 = !DILocation(line: 199, column: 13, scope: !12860)
!12869 = !DILocation(line: 200, column: 8, scope: !12860)
!12870 = !DILocation(line: 200, column: 13, scope: !12860)
!12871 = !DILocation(line: 201, column: 1, scope: !12860)
!12872 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2125, file: !2125, line: 641, type: !12873, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12879)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!2128, !2129, !12729, !252, !3647, !102, !102, !102, !107, !162, !12875}
!12875 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !12876)
!12876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !12877)
!12877 = !{!12878}
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12876, file: !104, line: 66, baseType: !103, size: 64)
!12879 = !{!12880, !12881, !12882, !12883, !12884, !12885, !12886, !12887, !12888, !12889}
!12880 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12872, file: !2125, line: 641, type: !2129)
!12881 = !DILocalVariable(name: "stack", arg: 2, scope: !12872, file: !2125, line: 642, type: !12729)
!12882 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12872, file: !2125, line: 643, type: !252)
!12883 = !DILocalVariable(name: "entry", arg: 4, scope: !12872, file: !2125, line: 643, type: !3647)
!12884 = !DILocalVariable(name: "p1", arg: 5, scope: !12872, file: !2125, line: 644, type: !102)
!12885 = !DILocalVariable(name: "p2", arg: 6, scope: !12872, file: !2125, line: 644, type: !102)
!12886 = !DILocalVariable(name: "p3", arg: 7, scope: !12872, file: !2125, line: 644, type: !102)
!12887 = !DILocalVariable(name: "prio", arg: 8, scope: !12872, file: !2125, line: 645, type: !107)
!12888 = !DILocalVariable(name: "options", arg: 9, scope: !12872, file: !2125, line: 645, type: !162)
!12889 = !DILocalVariable(name: "delay", arg: 10, scope: !12872, file: !2125, line: 645, type: !12875)
!12890 = !DILocation(line: 0, scope: !12872)
!12891 = !DILocation(line: 649, column: 2, scope: !12872)
!12892 = !DILocation(line: 652, column: 7, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12872, file: !2125, line: 652, column: 6)
!12894 = !DILocation(line: 652, column: 6, scope: !12872)
!12895 = !DILocation(line: 653, column: 3, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12893, file: !2125, line: 652, column: 39)
!12897 = !DILocation(line: 654, column: 2, scope: !12896)
!12898 = !DILocation(line: 656, column: 2, scope: !12872)
!12899 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2125, file: !2125, line: 401, type: !12900, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12902)
!12900 = !DISubroutineType(types: !12901)
!12901 = !{null, !2129, !12875}
!12902 = !{!12903, !12904}
!12903 = !DILocalVariable(name: "thread", arg: 1, scope: !12899, file: !2125, line: 401, type: !2129)
!12904 = !DILocalVariable(name: "delay", arg: 2, scope: !12899, file: !2125, line: 401, type: !12875)
!12905 = !DILocation(line: 0, scope: !12899)
!12906 = !DILocation(line: 404, column: 6, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12899, file: !2125, line: 404, column: 6)
!12908 = !DILocation(line: 404, column: 6, scope: !12899)
!12909 = !DILocation(line: 405, column: 3, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12907, file: !2125, line: 404, column: 38)
!12911 = !DILocation(line: 406, column: 2, scope: !12910)
!12912 = !DILocation(line: 407, column: 3, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12907, file: !2125, line: 406, column: 9)
!12914 = !DILocation(line: 413, column: 1, scope: !12899)
!12915 = distinct !DISubprogram(name: "k_thread_start", scope: !3292, file: !3292, line: 205, type: !12916, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12918)
!12916 = !DISubroutineType(types: !12917)
!12917 = !{null, !2128}
!12918 = !{!12919}
!12919 = !DILocalVariable(name: "thread", arg: 1, scope: !12915, file: !3292, line: 205, type: !2128)
!12920 = !DILocation(line: 0, scope: !12915)
!12921 = !DILocation(line: 214, column: 2, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12915, file: !3292, line: 214, column: 2)
!12923 = !{i64 2152241282}
!12924 = !DILocation(line: 215, column: 2, scope: !12915)
!12925 = !DILocation(line: 216, column: 1, scope: !12915)
!12926 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12833, file: !12833, line: 47, type: !12900, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12927)
!12927 = !{!12928, !12929}
!12928 = !DILocalVariable(name: "thread", arg: 1, scope: !12926, file: !12833, line: 47, type: !2129)
!12929 = !DILocalVariable(name: "ticks", arg: 2, scope: !12926, file: !12833, line: 47, type: !12875)
!12930 = !DILocation(line: 0, scope: !12926)
!12931 = !DILocation(line: 49, column: 30, scope: !12926)
!12932 = !DILocation(line: 49, column: 2, scope: !12926)
!12933 = !DILocation(line: 50, column: 1, scope: !12926)
!12934 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2125, file: !2125, line: 748, type: !3107, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !12935)
!12935 = !{!12936, !12954}
!12936 = !DILocalVariable(name: "thread_data", scope: !12937, file: !2125, line: 750, type: !12938)
!12937 = distinct !DILexicalBlock(scope: !12934, file: !2125, line: 750, column: 2)
!12938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12939, size: 32)
!12939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !12940)
!12940 = !{!12941, !12942, !12943, !12944, !12945, !12946, !12947, !12948, !12949, !12950, !12951, !12953}
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12939, file: !224, line: 621, baseType: !2129, size: 32)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12939, file: !224, line: 622, baseType: !12729, size: 32, offset: 32)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12939, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12939, file: !224, line: 624, baseType: !3647, size: 32, offset: 96)
!12945 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12939, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12939, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12939, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!12948 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12939, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12939, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12939, file: !224, line: 630, baseType: !816, size: 32, offset: 288)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12939, file: !224, line: 631, baseType: !12952, size: 32, offset: 320)
!12952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12939, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!12954 = !DILocalVariable(name: "thread_data", scope: !12955, file: !2125, line: 781, type: !12938)
!12955 = distinct !DILexicalBlock(scope: !12934, file: !2125, line: 781, column: 2)
!12956 = !DILocation(line: 0, scope: !12937)
!12957 = !DILocation(line: 750, column: 2, scope: !12937)
!12958 = !DILocation(line: 780, column: 2, scope: !12934)
!12959 = !DILocation(line: 0, scope: !12955)
!12960 = !DILocation(line: 781, column: 2, scope: !12955)
!12961 = !DILocation(line: 752, column: 17, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !2125, line: 750, column: 38)
!12963 = distinct !DILexicalBlock(scope: !12937, file: !2125, line: 750, column: 2)
!12964 = !DILocation(line: 753, column: 17, scope: !12962)
!12965 = !DILocation(line: 754, column: 17, scope: !12962)
!12966 = !DILocation(line: 755, column: 17, scope: !12962)
!12967 = !DILocation(line: 756, column: 17, scope: !12962)
!12968 = !DILocation(line: 757, column: 17, scope: !12962)
!12969 = !DILocation(line: 758, column: 17, scope: !12962)
!12970 = !DILocation(line: 759, column: 17, scope: !12962)
!12971 = !DILocation(line: 760, column: 17, scope: !12962)
!12972 = !DILocation(line: 751, column: 3, scope: !12962)
!12973 = !DILocation(line: 763, column: 16, scope: !12962)
!12974 = !DILocation(line: 763, column: 29, scope: !12962)
!12975 = !DILocation(line: 763, column: 39, scope: !12962)
!12976 = !DILocation(line: 750, column: 2, scope: !12963)
!12977 = !DILocation(line: 750, column: 2, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12963, file: !2125, line: 750, column: 2)
!12979 = distinct !{!12979, !12957, !12980}
!12980 = !DILocation(line: 764, column: 2, scope: !12937)
!12981 = !DILocation(line: 787, column: 2, scope: !12934)
!12982 = !DILocation(line: 788, column: 1, scope: !12934)
!12983 = !DILocation(line: 782, column: 20, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !2125, line: 782, column: 7)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !2125, line: 781, column: 38)
!12986 = distinct !DILexicalBlock(scope: !12955, file: !2125, line: 781, column: 2)
!12987 = !DILocation(line: 782, column: 31, scope: !12984)
!12988 = !DILocation(line: 782, column: 7, scope: !12985)
!12989 = !DILocation(line: 783, column: 37, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12984, file: !2125, line: 782, column: 51)
!12991 = !DILocation(line: 784, column: 10, scope: !12990)
!12992 = !DILocation(line: 783, column: 4, scope: !12990)
!12993 = !DILocation(line: 785, column: 3, scope: !12990)
!12994 = !DILocation(line: 781, column: 2, scope: !12986)
!12995 = !DILocation(line: 781, column: 2, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12986, file: !2125, line: 781, column: 2)
!12997 = distinct !{!12997, !12960, !12998}
!12998 = !DILocation(line: 786, column: 2, scope: !12955)
!12999 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13000, file: !13000, line: 403, type: !13001, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13003)
!13000 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13001 = !DISubroutineType(types: !13002)
!13002 = !{!2233, !2233}
!13003 = !{!13004}
!13004 = !DILocalVariable(name: "t", arg: 1, scope: !12999, file: !13000, line: 403, type: !2233)
!13005 = !DILocation(line: 0, scope: !12999)
!13006 = !DILocalVariable(name: "t", arg: 1, scope: !13007, file: !13000, line: 102, type: !2233)
!13007 = distinct !DISubprogram(name: "z_tmcvt", scope: !13000, file: !13000, line: 102, type: !13008, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13010)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{!2233, !2233, !162, !162, !136, !136, !136, !136}
!13010 = !{!13006, !13011, !13012, !13013, !13014, !13015, !13016, !13017, !13018, !13019, !13020}
!13011 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13007, file: !13000, line: 102, type: !162)
!13012 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13007, file: !13000, line: 103, type: !162)
!13013 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13007, file: !13000, line: 103, type: !136)
!13014 = !DILocalVariable(name: "result32", arg: 5, scope: !13007, file: !13000, line: 104, type: !136)
!13015 = !DILocalVariable(name: "round_up", arg: 6, scope: !13007, file: !13000, line: 104, type: !136)
!13016 = !DILocalVariable(name: "round_off", arg: 7, scope: !13007, file: !13000, line: 105, type: !136)
!13017 = !DILocalVariable(name: "mul_ratio", scope: !13007, file: !13000, line: 107, type: !136)
!13018 = !DILocalVariable(name: "div_ratio", scope: !13007, file: !13000, line: 109, type: !136)
!13019 = !DILocalVariable(name: "off", scope: !13007, file: !13000, line: 116, type: !2233)
!13020 = !DILocalVariable(name: "rdivisor", scope: !13021, file: !13000, line: 119, type: !162)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !13000, line: 118, column: 18)
!13022 = distinct !DILexicalBlock(scope: !13007, file: !13000, line: 118, column: 6)
!13023 = !DILocation(line: 0, scope: !13007, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 406, column: 9, scope: !12999)
!13025 = !DILocation(line: 145, column: 13, scope: !13026, inlinedAt: !13024)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !13000, line: 144, column: 10)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !13000, line: 142, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !13000, line: 141, column: 24)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !13000, line: 141, column: 13)
!13030 = distinct !DILexicalBlock(scope: !13007, file: !13000, line: 134, column: 6)
!13031 = !DILocation(line: 406, column: 2, scope: !12999)
!13032 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2125, file: !2125, line: 817, type: !3645, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13033)
!13033 = !{!13034, !13035, !13036, !13037}
!13034 = !DILocalVariable(name: "entry", arg: 1, scope: !13032, file: !2125, line: 817, type: !3647)
!13035 = !DILocalVariable(name: "p1", arg: 2, scope: !13032, file: !2125, line: 818, type: !102)
!13036 = !DILocalVariable(name: "p2", arg: 3, scope: !13032, file: !2125, line: 818, type: !102)
!13037 = !DILocalVariable(name: "p3", arg: 4, scope: !13032, file: !2125, line: 818, type: !102)
!13038 = !DILocation(line: 0, scope: !13032)
!13039 = !DILocation(line: 822, column: 2, scope: !13032)
!13040 = !DILocation(line: 822, column: 17, scope: !13032)
!13041 = !DILocation(line: 822, column: 30, scope: !13032)
!13042 = !DILocation(line: 823, column: 2, scope: !13032)
!13043 = !DILocation(line: 845, column: 2, scope: !13032)
!13044 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2125, file: !2125, line: 888, type: !13045, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13047)
!13045 = !DISubroutineType(types: !13046)
!13046 = !{!107, !2129}
!13047 = !{!13048}
!13048 = !DILocalVariable(name: "thread", arg: 1, scope: !13044, file: !2125, line: 888, type: !2129)
!13049 = !DILocation(line: 0, scope: !13044)
!13050 = !DILocation(line: 893, column: 2, scope: !13044)
!13051 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2125, file: !2125, line: 897, type: !13052, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!107, !2129, !32}
!13054 = !{!13055, !13056}
!13055 = !DILocalVariable(name: "thread", arg: 1, scope: !13051, file: !2125, line: 897, type: !2129)
!13056 = !DILocalVariable(name: "options", arg: 2, scope: !13051, file: !2125, line: 897, type: !32)
!13057 = !DILocation(line: 0, scope: !13051)
!13058 = !DILocation(line: 902, column: 2, scope: !13051)
!13059 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2125, file: !2125, line: 1072, type: !13060, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13065)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!107, !2128, !13062}
!13062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13063, size: 32)
!13063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !372, line: 234, baseType: !13064)
!13064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !372, line: 192, elements: !250)
!13065 = !{!13066, !13067}
!13066 = !DILocalVariable(name: "thread", arg: 1, scope: !13059, file: !2125, line: 1072, type: !2128)
!13067 = !DILocalVariable(name: "stats", arg: 2, scope: !13059, file: !2125, line: 1073, type: !13062)
!13068 = !DILocation(line: 0, scope: !13059)
!13069 = !DILocation(line: 1075, column: 14, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13059, file: !2125, line: 1075, column: 6)
!13071 = !DILocation(line: 1075, column: 23, scope: !13070)
!13072 = !DILocation(line: 1086, column: 1, scope: !13059)
!13073 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2125, file: !2125, line: 1088, type: !13074, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2229, retainedNodes: !13076)
!13074 = !DISubroutineType(types: !13075)
!13075 = !{!107, !13062}
!13076 = !{!13077}
!13077 = !DILocalVariable(name: "stats", arg: 1, scope: !13073, file: !2125, line: 1088, type: !13062)
!13078 = !DILocation(line: 0, scope: !13073)
!13079 = !DILocation(line: 1094, column: 12, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13073, file: !2125, line: 1094, column: 6)
!13081 = !DILocation(line: 1120, column: 1, scope: !13073)
!13082 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13083, file: !13083, line: 20, type: !3107, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !250)
!13083 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13084 = !DILocation(line: 30, column: 2, scope: !13082)
!13085 = !DILocation(line: 31, column: 1, scope: !13082)
!13086 = distinct !DISubprogram(name: "idle", scope: !13083, file: !13083, line: 33, type: !3650, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !13087)
!13087 = !{!13088, !13089, !13090}
!13088 = !DILocalVariable(name: "unused1", arg: 1, scope: !13086, file: !13083, line: 33, type: !102)
!13089 = !DILocalVariable(name: "unused2", arg: 2, scope: !13086, file: !13083, line: 33, type: !102)
!13090 = !DILocalVariable(name: "unused3", arg: 3, scope: !13086, file: !13083, line: 33, type: !102)
!13091 = !DILocation(line: 0, scope: !13086)
!13092 = !DILocation(line: 41, column: 2, scope: !13086)
!13093 = !DILocation(line: 55, column: 2, scope: !13094, inlinedAt: !13098)
!13094 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !13095)
!13095 = !{!13096, !13097}
!13096 = !DILocalVariable(name: "key", scope: !13094, file: !5867, line: 44, type: !32)
!13097 = !DILocalVariable(name: "tmp", scope: !13094, file: !5867, line: 53, type: !32)
!13098 = distinct !DILocation(line: 62, column: 10, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13086, file: !13083, line: 41, column: 15)
!13100 = !{i64 1648742}
!13101 = !DILocation(line: 0, scope: !13094, inlinedAt: !13098)
!13102 = !DILocation(line: 86, column: 3, scope: !13099)
!13103 = distinct !{!13103, !13092, !13104}
!13104 = !DILocation(line: 105, column: 2, scope: !13086)
!13105 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3107, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !250)
!13106 = !DILocation(line: 5629, column: 2, scope: !13105)
!13107 = !DILocation(line: 5630, column: 1, scope: !13105)
!13108 = !DISubprogram(name: "arch_cpu_idle", scope: !3648, file: !3648, line: 167, type: !3107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13109 = distinct !DISubprogram(name: "k_msgq_init", scope: !13110, file: !13110, line: 35, type: !13111, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13126)
!13110 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13111 = !DISubroutineType(types: !13112)
!13112 = !{null, !13113, !256, !252, !162}
!13113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13114, size: 32)
!13114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13115)
!13115 = !{!13116, !13117, !13118, !13119, !13120, !13121, !13122, !13123, !13124, !13125}
!13116 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13114, file: !224, line: 4206, baseType: !3022, size: 64)
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13114, file: !224, line: 4208, baseType: !3084, offset: 64)
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13114, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13114, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13114, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13114, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13114, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13114, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13124 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13114, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13114, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13126 = !{!13127, !13128, !13129, !13130}
!13127 = !DILocalVariable(name: "msgq", arg: 1, scope: !13109, file: !13110, line: 35, type: !13113)
!13128 = !DILocalVariable(name: "buffer", arg: 2, scope: !13109, file: !13110, line: 35, type: !256)
!13129 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13109, file: !13110, line: 35, type: !252)
!13130 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13109, file: !13110, line: 36, type: !162)
!13131 = !DILocation(line: 0, scope: !13109)
!13132 = !DILocation(line: 38, column: 8, scope: !13109)
!13133 = !DILocation(line: 38, column: 17, scope: !13109)
!13134 = !DILocation(line: 39, column: 8, scope: !13109)
!13135 = !DILocation(line: 39, column: 17, scope: !13109)
!13136 = !DILocation(line: 40, column: 8, scope: !13109)
!13137 = !DILocation(line: 40, column: 21, scope: !13109)
!13138 = !DILocation(line: 41, column: 40, scope: !13109)
!13139 = !DILocation(line: 41, column: 28, scope: !13109)
!13140 = !DILocation(line: 41, column: 8, scope: !13109)
!13141 = !DILocation(line: 41, column: 19, scope: !13109)
!13142 = !DILocation(line: 42, column: 8, scope: !13109)
!13143 = !DILocation(line: 42, column: 17, scope: !13109)
!13144 = !DILocation(line: 43, column: 8, scope: !13109)
!13145 = !DILocation(line: 43, column: 18, scope: !13109)
!13146 = !DILocation(line: 44, column: 8, scope: !13109)
!13147 = !DILocation(line: 44, column: 18, scope: !13109)
!13148 = !DILocation(line: 45, column: 8, scope: !13109)
!13149 = !DILocation(line: 45, column: 14, scope: !13109)
!13150 = !DILocation(line: 46, column: 22, scope: !13109)
!13151 = !DILocation(line: 46, column: 2, scope: !13109)
!13152 = !DILocation(line: 55, column: 1, scope: !13109)
!13153 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !13154, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !3021}
!13156 = !{!13157}
!13157 = !DILocalVariable(name: "w", arg: 1, scope: !13153, file: !12765, line: 47, type: !3021)
!13158 = !DILocation(line: 0, scope: !13153)
!13159 = !DILocation(line: 49, column: 21, scope: !13153)
!13160 = !DILocation(line: 49, column: 2, scope: !13153)
!13161 = !DILocation(line: 50, column: 1, scope: !13153)
!13162 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13163, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13166)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{null, !13165}
!13165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!13166 = !{!13167}
!13167 = !DILocalVariable(name: "list", arg: 1, scope: !13162, file: !233, line: 197, type: !13165)
!13168 = !DILocation(line: 0, scope: !13162)
!13169 = !DILocation(line: 199, column: 8, scope: !13162)
!13170 = !DILocation(line: 199, column: 13, scope: !13162)
!13171 = !DILocation(line: 200, column: 8, scope: !13162)
!13172 = !DILocation(line: 200, column: 13, scope: !13162)
!13173 = !DILocation(line: 201, column: 1, scope: !13162)
!13174 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13110, file: !13110, line: 57, type: !13175, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13177)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!107, !13113, !252, !162}
!13177 = !{!13178, !13179, !13180, !13181, !13182, !13183}
!13178 = !DILocalVariable(name: "msgq", arg: 1, scope: !13174, file: !13110, line: 57, type: !13113)
!13179 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13174, file: !13110, line: 57, type: !252)
!13180 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13174, file: !13110, line: 58, type: !162)
!13181 = !DILocalVariable(name: "buffer", scope: !13174, file: !13110, line: 60, type: !102)
!13182 = !DILocalVariable(name: "ret", scope: !13174, file: !13110, line: 61, type: !107)
!13183 = !DILocalVariable(name: "total_size", scope: !13174, file: !13110, line: 62, type: !252)
!13184 = !DILocation(line: 0, scope: !13174)
!13185 = !DILocation(line: 62, column: 2, scope: !13174)
!13186 = !DILocation(line: 66, column: 6, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13174, file: !13110, line: 66, column: 6)
!13188 = !DILocation(line: 66, column: 6, scope: !13174)
!13189 = !DILocation(line: 69, column: 28, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !13110, line: 68, column: 9)
!13191 = !DILocation(line: 69, column: 12, scope: !13190)
!13192 = !DILocation(line: 70, column: 14, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13190, file: !13110, line: 70, column: 7)
!13194 = !DILocation(line: 70, column: 7, scope: !13190)
!13195 = !DILocation(line: 71, column: 4, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !13110, line: 70, column: 23)
!13197 = !DILocation(line: 72, column: 10, scope: !13196)
!13198 = !DILocation(line: 72, column: 16, scope: !13196)
!13199 = !DILocation(line: 74, column: 3, scope: !13196)
!13200 = !DILocation(line: 0, scope: !13187)
!13201 = !DILocation(line: 82, column: 1, scope: !13174)
!13202 = !DILocation(line: 81, column: 2, scope: !13174)
!13203 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13204, file: !13204, line: 105, type: !13205, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13207)
!13204 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13205 = !DISubroutineType(types: !13206)
!13206 = !{!136, !252, !252, !2508}
!13207 = !{!13208, !13209, !13210}
!13208 = !DILocalVariable(name: "a", arg: 1, scope: !13203, file: !13204, line: 105, type: !252)
!13209 = !DILocalVariable(name: "b", arg: 2, scope: !13203, file: !13204, line: 105, type: !252)
!13210 = !DILocalVariable(name: "result", arg: 3, scope: !13203, file: !13204, line: 105, type: !2508)
!13211 = !DILocation(line: 0, scope: !13203)
!13212 = !DILocation(line: 107, column: 9, scope: !13203)
!13213 = !DILocation(line: 107, column: 2, scope: !13203)
!13214 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13215, file: !13215, line: 102, type: !13216, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13217)
!13215 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13216 = !DISubroutineType(types: !2965)
!13217 = !{!13218}
!13218 = !DILocalVariable(name: "size", arg: 1, scope: !13214, file: !13215, line: 102, type: !252)
!13219 = !DILocation(line: 0, scope: !13214)
!13220 = !DILocation(line: 104, column: 9, scope: !13214)
!13221 = !DILocation(line: 104, column: 2, scope: !13214)
!13222 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13215, file: !13215, line: 87, type: !13223, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!102, !252, !252}
!13225 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13110, file: !13110, line: 95, type: !13226, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{!107, !13113}
!13228 = !{!13229}
!13229 = !DILocalVariable(name: "msgq", arg: 1, scope: !13225, file: !13110, line: 95, type: !13113)
!13230 = !DILocation(line: 0, scope: !13225)
!13231 = !DILocation(line: 99, column: 2, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13225, file: !13110, line: 99, column: 2)
!13233 = !DILocation(line: 99, column: 2, scope: !13225)
!13234 = !DILocation(line: 105, column: 13, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13225, file: !13110, line: 105, column: 6)
!13236 = !DILocation(line: 105, column: 19, scope: !13235)
!13237 = !DILocation(line: 105, column: 40, scope: !13235)
!13238 = !DILocation(line: 105, column: 6, scope: !13225)
!13239 = !DILocation(line: 106, column: 16, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13235, file: !13110, line: 105, column: 47)
!13241 = !DILocation(line: 106, column: 3, scope: !13240)
!13242 = !DILocation(line: 107, column: 15, scope: !13240)
!13243 = !DILocation(line: 108, column: 2, scope: !13240)
!13244 = !DILocation(line: 113, column: 1, scope: !13225)
!13245 = distinct !DISubprogram(name: "z_waitq_head", scope: !12765, file: !12765, line: 52, type: !13246, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!3004, !3021}
!13248 = !{!13249}
!13249 = !DILocalVariable(name: "w", arg: 1, scope: !13245, file: !12765, line: 52, type: !3021)
!13250 = !DILocation(line: 0, scope: !13245)
!13251 = !DILocation(line: 54, column: 52, scope: !13245)
!13252 = !DILocation(line: 54, column: 28, scope: !13245)
!13253 = !DILocation(line: 54, column: 9, scope: !13245)
!13254 = !DILocation(line: 54, column: 2, scope: !13245)
!13255 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !5995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13256 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13257, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!2989, !13165}
!13259 = !{!13260}
!13260 = !DILocalVariable(name: "list", arg: 1, scope: !13256, file: !233, line: 294, type: !13165)
!13261 = !DILocation(line: 0, scope: !13256)
!13262 = !DILocation(line: 296, column: 9, scope: !13256)
!13263 = !DILocation(line: 296, column: 49, scope: !13256)
!13264 = !DILocation(line: 296, column: 2, scope: !13256)
!13265 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13266, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13268)
!13266 = !DISubroutineType(types: !13267)
!13267 = !{!136, !13165}
!13268 = !{!13269}
!13269 = !DILocalVariable(name: "list", arg: 1, scope: !13265, file: !233, line: 266, type: !13165)
!13270 = !DILocation(line: 0, scope: !13265)
!13271 = !DILocation(line: 268, column: 15, scope: !13265)
!13272 = !DILocation(line: 268, column: 20, scope: !13265)
!13273 = !DILocation(line: 268, column: 2, scope: !13265)
!13274 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13110, file: !13110, line: 116, type: !13275, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13281)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{!107, !13113, !13, !13277}
!13277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13278)
!13278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13279)
!13279 = !{!13280}
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13278, file: !104, line: 66, baseType: !103, size: 64)
!13281 = !{!13282, !13283, !13284, !13285, !13286, !13291}
!13282 = !DILocalVariable(name: "msgq", arg: 1, scope: !13274, file: !13110, line: 116, type: !13113)
!13283 = !DILocalVariable(name: "data", arg: 2, scope: !13274, file: !13110, line: 116, type: !13)
!13284 = !DILocalVariable(name: "timeout", arg: 3, scope: !13274, file: !13110, line: 116, type: !13277)
!13285 = !DILocalVariable(name: "pending_thread", scope: !13274, file: !13110, line: 120, type: !3004)
!13286 = !DILocalVariable(name: "key", scope: !13274, file: !13110, line: 121, type: !13287)
!13287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13288)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13289)
!13289 = !{!13290}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13288, file: !249, line: 33, baseType: !107, size: 32)
!13291 = !DILocalVariable(name: "result", scope: !13274, file: !13110, line: 122, type: !107)
!13292 = !DILocation(line: 0, scope: !13274)
!13293 = !DILocation(line: 124, column: 27, scope: !13274)
!13294 = !DILocalVariable(name: "l", arg: 1, scope: !13295, file: !249, line: 136, type: !13298)
!13295 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13296, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13299)
!13296 = !DISubroutineType(types: !13297)
!13297 = !{!13287, !13298}
!13298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!13299 = !{!13294, !13300}
!13300 = !DILocalVariable(name: "k", scope: !13295, file: !249, line: 139, type: !13287)
!13301 = !DILocation(line: 0, scope: !13295, inlinedAt: !13302)
!13302 = distinct !DILocation(line: 124, column: 8, scope: !13274)
!13303 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13308)
!13304 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13305)
!13305 = !{!13306, !13307}
!13306 = !DILocalVariable(name: "key", scope: !13304, file: !5867, line: 44, type: !32)
!13307 = !DILocalVariable(name: "tmp", scope: !13304, file: !5867, line: 53, type: !32)
!13308 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13302)
!13309 = !{i64 1654879}
!13310 = !DILocation(line: 0, scope: !13304, inlinedAt: !13308)
!13311 = !DILocation(line: 128, column: 12, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13274, file: !13110, line: 128, column: 6)
!13313 = !DILocation(line: 128, column: 30, scope: !13312)
!13314 = !DILocation(line: 128, column: 22, scope: !13312)
!13315 = !DILocation(line: 128, column: 6, scope: !13274)
!13316 = !DILocation(line: 130, column: 49, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13312, file: !13110, line: 128, column: 40)
!13318 = !DILocation(line: 130, column: 20, scope: !13317)
!13319 = !DILocation(line: 131, column: 22, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13317, file: !13110, line: 131, column: 7)
!13321 = !DILocation(line: 131, column: 7, scope: !13317)
!13322 = !DILocation(line: 135, column: 38, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !13110, line: 131, column: 31)
!13324 = !DILocation(line: 136, column: 17, scope: !13323)
!13325 = !DILocation(line: 135, column: 10, scope: !13323)
!13326 = !DILocalVariable(name: "thread", arg: 1, scope: !13327, file: !12461, line: 65, type: !3004)
!13327 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12461, file: !12461, line: 65, type: !13328, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13330)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{null, !3004, !32}
!13330 = !{!13326, !13331}
!13331 = !DILocalVariable(name: "value", arg: 2, scope: !13327, file: !12461, line: 65, type: !32)
!13332 = !DILocation(line: 0, scope: !13327, inlinedAt: !13333)
!13333 = distinct !DILocation(line: 138, column: 4, scope: !13323)
!13334 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13333)
!13335 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13333)
!13336 = !DILocation(line: 139, column: 4, scope: !13323)
!13337 = !DILocation(line: 140, column: 4, scope: !13323)
!13338 = !DILocation(line: 141, column: 4, scope: !13323)
!13339 = !DILocation(line: 144, column: 23, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13320, file: !13110, line: 142, column: 10)
!13341 = !DILocation(line: 144, column: 46, scope: !13340)
!13342 = !DILocation(line: 144, column: 10, scope: !13340)
!13343 = !DILocation(line: 145, column: 29, scope: !13340)
!13344 = !DILocation(line: 145, column: 20, scope: !13340)
!13345 = !DILocation(line: 146, column: 33, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13340, file: !13110, line: 146, column: 8)
!13347 = !DILocation(line: 146, column: 24, scope: !13346)
!13348 = !DILocation(line: 146, column: 8, scope: !13340)
!13349 = !DILocation(line: 147, column: 29, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13346, file: !13110, line: 146, column: 45)
!13351 = !DILocation(line: 147, column: 21, scope: !13350)
!13352 = !DILocation(line: 148, column: 4, scope: !13350)
!13353 = !DILocation(line: 149, column: 19, scope: !13340)
!13354 = !DILocation(line: 155, column: 2, scope: !13317)
!13355 = !DILocation(line: 155, column: 13, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13312, file: !13110, line: 155, column: 13)
!13357 = !DILocation(line: 155, column: 13, scope: !13312)
!13358 = !DILocation(line: 162, column: 3, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13356, file: !13110, line: 158, column: 9)
!13360 = !DILocation(line: 162, column: 18, scope: !13359)
!13361 = !DILocation(line: 162, column: 28, scope: !13359)
!13362 = !DILocation(line: 164, column: 49, scope: !13359)
!13363 = !DILocation(line: 164, column: 12, scope: !13359)
!13364 = !DILocation(line: 166, column: 3, scope: !13359)
!13365 = !DILocation(line: 0, scope: !13312)
!13366 = !DILocalVariable(name: "key", arg: 2, scope: !13367, file: !249, line: 190, type: !13287)
!13367 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13368, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13370)
!13368 = !DISubroutineType(types: !13369)
!13369 = !{null, !13298, !13287}
!13370 = !{!13371, !13366}
!13371 = !DILocalVariable(name: "l", arg: 1, scope: !13367, file: !249, line: 189, type: !13298)
!13372 = !DILocation(line: 0, scope: !13367, inlinedAt: !13373)
!13373 = distinct !DILocation(line: 171, column: 2, scope: !13274)
!13374 = !DILocalVariable(name: "key", arg: 1, scope: !13375, file: !5867, line: 84, type: !32)
!13375 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13376)
!13376 = !{!13374}
!13377 = !DILocation(line: 0, scope: !13375, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13373)
!13379 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13378)
!13380 = !{i64 1655696}
!13381 = !DILocation(line: 173, column: 2, scope: !13274)
!13382 = !DILocation(line: 174, column: 1, scope: !13274)
!13383 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13110, file: !13110, line: 188, type: !13384, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13392)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{null, !13113, !13386}
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13387, size: 32)
!13387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !13388)
!13388 = !{!13389, !13390, !13391}
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13387, file: !224, line: 4261, baseType: !252, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13387, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!13391 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13387, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!13392 = !{!13393, !13394}
!13393 = !DILocalVariable(name: "msgq", arg: 1, scope: !13383, file: !13110, line: 188, type: !13113)
!13394 = !DILocalVariable(name: "attrs", arg: 2, scope: !13383, file: !13110, line: 188, type: !13386)
!13395 = !DILocation(line: 0, scope: !13383)
!13396 = !DILocation(line: 190, column: 26, scope: !13383)
!13397 = !DILocation(line: 190, column: 9, scope: !13383)
!13398 = !DILocation(line: 190, column: 18, scope: !13383)
!13399 = !DILocation(line: 191, column: 26, scope: !13383)
!13400 = !DILocation(line: 191, column: 9, scope: !13383)
!13401 = !DILocation(line: 191, column: 18, scope: !13383)
!13402 = !DILocation(line: 192, column: 27, scope: !13383)
!13403 = !DILocation(line: 192, column: 9, scope: !13383)
!13404 = !DILocation(line: 192, column: 19, scope: !13383)
!13405 = !DILocation(line: 193, column: 1, scope: !13383)
!13406 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13110, file: !13110, line: 206, type: !13407, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13409)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{!107, !13113, !102, !13277}
!13409 = !{!13410, !13411, !13412, !13413, !13414, !13415}
!13410 = !DILocalVariable(name: "msgq", arg: 1, scope: !13406, file: !13110, line: 206, type: !13113)
!13411 = !DILocalVariable(name: "data", arg: 2, scope: !13406, file: !13110, line: 206, type: !102)
!13412 = !DILocalVariable(name: "timeout", arg: 3, scope: !13406, file: !13110, line: 206, type: !13277)
!13413 = !DILocalVariable(name: "key", scope: !13406, file: !13110, line: 210, type: !13287)
!13414 = !DILocalVariable(name: "pending_thread", scope: !13406, file: !13110, line: 211, type: !3004)
!13415 = !DILocalVariable(name: "result", scope: !13406, file: !13110, line: 212, type: !107)
!13416 = !DILocation(line: 0, scope: !13406)
!13417 = !DILocation(line: 214, column: 27, scope: !13406)
!13418 = !DILocation(line: 0, scope: !13295, inlinedAt: !13419)
!13419 = distinct !DILocation(line: 214, column: 8, scope: !13406)
!13420 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13419)
!13422 = !DILocation(line: 0, scope: !13304, inlinedAt: !13421)
!13423 = !DILocation(line: 218, column: 12, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13406, file: !13110, line: 218, column: 6)
!13425 = !DILocation(line: 218, column: 22, scope: !13424)
!13426 = !DILocation(line: 218, column: 6, scope: !13406)
!13427 = !DILocation(line: 220, column: 28, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13424, file: !13110, line: 218, column: 28)
!13429 = !DILocation(line: 220, column: 44, scope: !13428)
!13430 = !DILocation(line: 220, column: 9, scope: !13428)
!13431 = !DILocation(line: 221, column: 27, scope: !13428)
!13432 = !DILocation(line: 221, column: 18, scope: !13428)
!13433 = !DILocation(line: 222, column: 31, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13428, file: !13110, line: 222, column: 7)
!13435 = !DILocation(line: 222, column: 22, scope: !13434)
!13436 = !DILocation(line: 222, column: 7, scope: !13428)
!13437 = !DILocation(line: 223, column: 27, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !13110, line: 222, column: 43)
!13439 = !DILocation(line: 223, column: 19, scope: !13438)
!13440 = !DILocation(line: 224, column: 3, scope: !13438)
!13441 = !DILocation(line: 225, column: 18, scope: !13428)
!13442 = !DILocation(line: 228, column: 49, scope: !13428)
!13443 = !DILocation(line: 228, column: 20, scope: !13428)
!13444 = !DILocation(line: 229, column: 22, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13428, file: !13110, line: 229, column: 7)
!13446 = !DILocation(line: 229, column: 7, scope: !13428)
!13447 = !DILocation(line: 233, column: 23, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !13110, line: 229, column: 31)
!13449 = !DILocation(line: 233, column: 55, scope: !13448)
!13450 = !DILocation(line: 234, column: 17, scope: !13448)
!13451 = !DILocation(line: 233, column: 10, scope: !13448)
!13452 = !DILocation(line: 235, column: 29, scope: !13448)
!13453 = !DILocation(line: 235, column: 20, scope: !13448)
!13454 = !DILocation(line: 236, column: 33, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13448, file: !13110, line: 236, column: 8)
!13456 = !DILocation(line: 236, column: 24, scope: !13455)
!13457 = !DILocation(line: 236, column: 8, scope: !13448)
!13458 = !DILocation(line: 237, column: 29, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13455, file: !13110, line: 236, column: 45)
!13460 = !DILocation(line: 237, column: 21, scope: !13459)
!13461 = !DILocation(line: 238, column: 4, scope: !13459)
!13462 = !DILocation(line: 239, column: 19, scope: !13448)
!13463 = !DILocation(line: 0, scope: !13327, inlinedAt: !13464)
!13464 = distinct !DILocation(line: 242, column: 4, scope: !13448)
!13465 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13464)
!13466 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13464)
!13467 = !DILocation(line: 243, column: 4, scope: !13448)
!13468 = !DILocation(line: 244, column: 4, scope: !13448)
!13469 = !DILocation(line: 248, column: 4, scope: !13448)
!13470 = !DILocation(line: 251, column: 13, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13424, file: !13110, line: 251, column: 13)
!13472 = !DILocation(line: 251, column: 13, scope: !13424)
!13473 = !DILocation(line: 258, column: 3, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13471, file: !13110, line: 254, column: 9)
!13475 = !DILocation(line: 258, column: 18, scope: !13474)
!13476 = !DILocation(line: 258, column: 28, scope: !13474)
!13477 = !DILocation(line: 260, column: 49, scope: !13474)
!13478 = !DILocation(line: 260, column: 12, scope: !13474)
!13479 = !DILocation(line: 262, column: 3, scope: !13474)
!13480 = !DILocation(line: 0, scope: !13424)
!13481 = !DILocation(line: 0, scope: !13367, inlinedAt: !13482)
!13482 = distinct !DILocation(line: 267, column: 2, scope: !13406)
!13483 = !DILocation(line: 0, scope: !13375, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13482)
!13485 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13484)
!13486 = !DILocation(line: 269, column: 2, scope: !13406)
!13487 = !DILocation(line: 270, column: 1, scope: !13406)
!13488 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13110, file: !13110, line: 284, type: !13489, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!107, !13113, !102}
!13491 = !{!13492, !13493, !13494, !13495}
!13492 = !DILocalVariable(name: "msgq", arg: 1, scope: !13488, file: !13110, line: 284, type: !13113)
!13493 = !DILocalVariable(name: "data", arg: 2, scope: !13488, file: !13110, line: 284, type: !102)
!13494 = !DILocalVariable(name: "key", scope: !13488, file: !13110, line: 286, type: !13287)
!13495 = !DILocalVariable(name: "result", scope: !13488, file: !13110, line: 287, type: !107)
!13496 = !DILocation(line: 0, scope: !13488)
!13497 = !DILocation(line: 0, scope: !13295, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 289, column: 8, scope: !13488)
!13499 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13498)
!13501 = !DILocation(line: 0, scope: !13304, inlinedAt: !13500)
!13502 = !DILocation(line: 291, column: 12, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13488, file: !13110, line: 291, column: 6)
!13504 = !DILocation(line: 291, column: 22, scope: !13503)
!13505 = !DILocation(line: 291, column: 6, scope: !13488)
!13506 = !DILocation(line: 293, column: 28, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13503, file: !13110, line: 291, column: 28)
!13508 = !DILocation(line: 293, column: 44, scope: !13507)
!13509 = !DILocation(line: 293, column: 9, scope: !13507)
!13510 = !DILocation(line: 295, column: 2, scope: !13507)
!13511 = !DILocation(line: 0, scope: !13503)
!13512 = !DILocation(line: 0, scope: !13367, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 302, column: 2, scope: !13488)
!13514 = !DILocation(line: 0, scope: !13375, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13513)
!13516 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13515)
!13517 = !DILocation(line: 304, column: 2, scope: !13488)
!13518 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13110, file: !13110, line: 318, type: !13519, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13521)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{null, !13113}
!13521 = !{!13522, !13523, !13524}
!13522 = !DILocalVariable(name: "msgq", arg: 1, scope: !13518, file: !13110, line: 318, type: !13113)
!13523 = !DILocalVariable(name: "key", scope: !13518, file: !13110, line: 320, type: !13287)
!13524 = !DILocalVariable(name: "pending_thread", scope: !13518, file: !13110, line: 321, type: !3004)
!13525 = !DILocation(line: 0, scope: !13518)
!13526 = !DILocation(line: 0, scope: !13295, inlinedAt: !13527)
!13527 = distinct !DILocation(line: 323, column: 8, scope: !13518)
!13528 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13529)
!13529 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13527)
!13530 = !DILocation(line: 0, scope: !13304, inlinedAt: !13529)
!13531 = !DILocation(line: 328, column: 27, scope: !13518)
!13532 = !DILocation(line: 328, column: 65, scope: !13518)
!13533 = !DILocation(line: 328, column: 2, scope: !13518)
!13534 = !DILocation(line: 0, scope: !13327, inlinedAt: !13535)
!13535 = distinct !DILocation(line: 329, column: 3, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13518, file: !13110, line: 328, column: 74)
!13537 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13535)
!13538 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13535)
!13539 = !DILocation(line: 330, column: 3, scope: !13536)
!13540 = distinct !{!13540, !13533, !13541}
!13541 = !DILocation(line: 331, column: 2, scope: !13518)
!13542 = !DILocation(line: 323, column: 27, scope: !13518)
!13543 = !DILocation(line: 333, column: 8, scope: !13518)
!13544 = !DILocation(line: 333, column: 18, scope: !13518)
!13545 = !DILocation(line: 334, column: 25, scope: !13518)
!13546 = !DILocation(line: 334, column: 8, scope: !13518)
!13547 = !DILocation(line: 334, column: 17, scope: !13518)
!13548 = !DILocation(line: 336, column: 2, scope: !13518)
!13549 = !DILocation(line: 337, column: 1, scope: !13518)
!13550 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2359, file: !2359, line: 93, type: !13551, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{!816, !2254, !2254}
!13553 = !{!13554, !13555, !13556, !13557}
!13554 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13550, file: !2359, line: 93, type: !2254)
!13555 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13550, file: !2359, line: 94, type: !2254)
!13556 = !DILocalVariable(name: "b1", scope: !13550, file: !2359, line: 97, type: !816)
!13557 = !DILocalVariable(name: "b2", scope: !13550, file: !2359, line: 98, type: !816)
!13558 = !DILocation(line: 0, scope: !13550)
!13559 = !DILocation(line: 97, column: 30, scope: !13550)
!13560 = !DILocation(line: 98, column: 30, scope: !13550)
!13561 = !DILocation(line: 100, column: 9, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13550, file: !2359, line: 100, column: 6)
!13563 = !DILocation(line: 100, column: 6, scope: !13550)
!13564 = !DILocation(line: 125, column: 1, scope: !13550)
!13565 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2359, file: !2359, line: 428, type: !13566, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13568)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{null, !2254}
!13568 = !{!13569}
!13569 = !DILocalVariable(name: "curr", arg: 1, scope: !13565, file: !2359, line: 428, type: !2254)
!13570 = !DILocation(line: 0, scope: !13565)
!13571 = !DILocation(line: 434, column: 6, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13565, file: !2359, line: 434, column: 6)
!13573 = !DILocation(line: 434, column: 23, scope: !13572)
!13574 = !DILocation(line: 434, column: 6, scope: !13565)
!13575 = !DILocation(line: 435, column: 50, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !2359, line: 434, column: 29)
!13577 = !DILocation(line: 435, column: 48, scope: !13576)
!13578 = !DILocation(line: 435, column: 29, scope: !13576)
!13579 = !DILocation(line: 436, column: 24, scope: !13576)
!13580 = !DILocation(line: 436, column: 3, scope: !13576)
!13581 = !DILocation(line: 437, column: 2, scope: !13576)
!13582 = !DILocation(line: 438, column: 1, scope: !13565)
!13583 = distinct !DISubprogram(name: "slice_time", scope: !2359, file: !2359, line: 407, type: !13584, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13586)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{!107, !2254}
!13586 = !{!13587, !13588}
!13587 = !DILocalVariable(name: "curr", arg: 1, scope: !13583, file: !2359, line: 407, type: !2254)
!13588 = !DILocalVariable(name: "ret", scope: !13583, file: !2359, line: 409, type: !107)
!13589 = !DILocation(line: 0, scope: !13583)
!13590 = !DILocation(line: 409, column: 12, scope: !13583)
!13591 = !DILocation(line: 416, column: 2, scope: !13583)
!13592 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2359, file: !2359, line: 440, type: !13593, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !816, !107}
!13595 = !{!13596, !13597, !13598, !13604}
!13596 = !DILocalVariable(name: "slice", arg: 1, scope: !13592, file: !2359, line: 440, type: !816)
!13597 = !DILocalVariable(name: "prio", arg: 2, scope: !13592, file: !2359, line: 440, type: !107)
!13598 = !DILocalVariable(name: "__i", scope: !13599, file: !2359, line: 442, type: !13600)
!13599 = distinct !DILexicalBlock(scope: !13592, file: !2359, line: 442, column: 2)
!13600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13601)
!13601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13602)
!13602 = !{!13603}
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13601, file: !249, line: 33, baseType: !107, size: 32)
!13604 = !DILocalVariable(name: "__key", scope: !13599, file: !2359, line: 442, type: !13600)
!13605 = !DILocation(line: 0, scope: !13592)
!13606 = !DILocation(line: 0, scope: !13599)
!13607 = !DILocalVariable(name: "l", arg: 1, scope: !13608, file: !249, line: 136, type: !13611)
!13608 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13609, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13612)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!13600, !13611}
!13611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!13612 = !{!13607, !13613}
!13613 = !DILocalVariable(name: "k", scope: !13608, file: !249, line: 139, type: !13600)
!13614 = !DILocation(line: 0, scope: !13608, inlinedAt: !13615)
!13615 = distinct !DILocation(line: 442, column: 2, scope: !13599)
!13616 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13621)
!13617 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13618)
!13618 = !{!13619, !13620}
!13619 = !DILocalVariable(name: "key", scope: !13617, file: !5867, line: 44, type: !32)
!13620 = !DILocalVariable(name: "tmp", scope: !13617, file: !5867, line: 53, type: !32)
!13621 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !13615)
!13622 = !{i64 1692713}
!13623 = !DILocation(line: 0, scope: !13617, inlinedAt: !13621)
!13624 = !DILocation(line: 443, column: 29, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !2359, line: 442, column: 26)
!13626 = distinct !DILexicalBlock(scope: !13599, file: !2359, line: 442, column: 2)
!13627 = !DILocation(line: 444, column: 17, scope: !13625)
!13628 = !DILocation(line: 445, column: 51, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13625, file: !2359, line: 445, column: 7)
!13630 = !DILocation(line: 445, column: 7, scope: !13625)
!13631 = !DILocation(line: 0, scope: !13625)
!13632 = !DILocation(line: 451, column: 18, scope: !13625)
!13633 = !DILocation(line: 452, column: 3, scope: !13625)
!13634 = !DILocalVariable(name: "key", arg: 2, scope: !13635, file: !249, line: 190, type: !13600)
!13635 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13636, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13638)
!13636 = !DISubroutineType(types: !13637)
!13637 = !{null, !13611, !13600}
!13638 = !{!13639, !13634}
!13639 = !DILocalVariable(name: "l", arg: 1, scope: !13635, file: !249, line: 189, type: !13611)
!13640 = !DILocation(line: 0, scope: !13635, inlinedAt: !13641)
!13641 = distinct !DILocation(line: 442, column: 2, scope: !13626)
!13642 = !DILocalVariable(name: "key", arg: 1, scope: !13643, file: !5867, line: 84, type: !32)
!13643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13644)
!13644 = !{!13642}
!13645 = !DILocation(line: 0, scope: !13643, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13641)
!13647 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13646)
!13648 = !{i64 1693530}
!13649 = !DILocation(line: 454, column: 1, scope: !13592)
!13650 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13000, file: !13000, line: 389, type: !7027, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13651)
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "t", arg: 1, scope: !13650, file: !13000, line: 389, type: !162)
!13653 = !DILocation(line: 0, scope: !13650)
!13654 = !DILocalVariable(name: "t", arg: 1, scope: !13655, file: !13000, line: 102, type: !2233)
!13655 = distinct !DISubprogram(name: "z_tmcvt", scope: !13000, file: !13000, line: 102, type: !13008, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13656)
!13656 = !{!13654, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664, !13665, !13666}
!13657 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13655, file: !13000, line: 102, type: !162)
!13658 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13655, file: !13000, line: 103, type: !162)
!13659 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13655, file: !13000, line: 103, type: !136)
!13660 = !DILocalVariable(name: "result32", arg: 5, scope: !13655, file: !13000, line: 104, type: !136)
!13661 = !DILocalVariable(name: "round_up", arg: 6, scope: !13655, file: !13000, line: 104, type: !136)
!13662 = !DILocalVariable(name: "round_off", arg: 7, scope: !13655, file: !13000, line: 105, type: !136)
!13663 = !DILocalVariable(name: "mul_ratio", scope: !13655, file: !13000, line: 107, type: !136)
!13664 = !DILocalVariable(name: "div_ratio", scope: !13655, file: !13000, line: 109, type: !136)
!13665 = !DILocalVariable(name: "off", scope: !13655, file: !13000, line: 116, type: !2233)
!13666 = !DILocalVariable(name: "rdivisor", scope: !13667, file: !13000, line: 119, type: !162)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !13000, line: 118, column: 18)
!13668 = distinct !DILexicalBlock(scope: !13655, file: !13000, line: 118, column: 6)
!13669 = !DILocation(line: 0, scope: !13655, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 392, column: 9, scope: !13650)
!13671 = !DILocation(line: 143, column: 25, scope: !13672, inlinedAt: !13670)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !13000, line: 142, column: 17)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !13000, line: 142, column: 7)
!13674 = distinct !DILexicalBlock(scope: !13675, file: !13000, line: 141, column: 24)
!13675 = distinct !DILexicalBlock(scope: !13676, file: !13000, line: 141, column: 13)
!13676 = distinct !DILexicalBlock(scope: !13655, file: !13000, line: 134, column: 6)
!13677 = !DILocation(line: 392, column: 2, scope: !13650)
!13678 = distinct !DISubprogram(name: "z_time_slice", scope: !2359, file: !2359, line: 502, type: !7772, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13679)
!13679 = !{!13680, !13681}
!13680 = !DILocalVariable(name: "ticks", arg: 1, scope: !13678, file: !2359, line: 502, type: !107)
!13681 = !DILocalVariable(name: "key", scope: !13678, file: !2359, line: 511, type: !13600)
!13682 = !DILocation(line: 0, scope: !13678)
!13683 = !DILocation(line: 0, scope: !13608, inlinedAt: !13684)
!13684 = distinct !DILocation(line: 511, column: 25, scope: !13678)
!13685 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !13684)
!13687 = !DILocation(line: 0, scope: !13617, inlinedAt: !13686)
!13688 = !DILocation(line: 514, column: 6, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13678, file: !2359, line: 514, column: 6)
!13690 = !DILocation(line: 514, column: 25, scope: !13689)
!13691 = !DILocation(line: 514, column: 22, scope: !13689)
!13692 = !DILocation(line: 514, column: 6, scope: !13678)
!13693 = !DILocation(line: 515, column: 3, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13689, file: !2359, line: 514, column: 35)
!13695 = !DILocation(line: 0, scope: !13635, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 516, column: 3, scope: !13694)
!13697 = !DILocation(line: 0, scope: !13643, inlinedAt: !13698)
!13698 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13696)
!13699 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13698)
!13700 = !DILocation(line: 517, column: 3, scope: !13694)
!13701 = !DILocation(line: 519, column: 18, scope: !13678)
!13702 = !DILocation(line: 522, column: 6, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13678, file: !2359, line: 522, column: 6)
!13704 = !DILocation(line: 522, column: 27, scope: !13703)
!13705 = !DILocation(line: 522, column: 30, scope: !13703)
!13706 = !DILocation(line: 522, column: 6, scope: !13678)
!13707 = !DILocation(line: 523, column: 30, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !2359, line: 523, column: 7)
!13709 = distinct !DILexicalBlock(scope: !13703, file: !2359, line: 522, column: 51)
!13710 = !DILocation(line: 523, column: 13, scope: !13708)
!13711 = !DILocation(line: 523, column: 7, scope: !13709)
!13712 = !DILocation(line: 530, column: 10, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13708, file: !2359, line: 523, column: 43)
!13714 = !DILocation(line: 531, column: 3, scope: !13713)
!13715 = !DILocation(line: 532, column: 30, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13708, file: !2359, line: 531, column: 10)
!13717 = !DILocation(line: 535, column: 29, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13703, file: !2359, line: 534, column: 9)
!13719 = !DILocation(line: 0, scope: !13635, inlinedAt: !13720)
!13720 = distinct !DILocation(line: 537, column: 2, scope: !13678)
!13721 = !DILocation(line: 0, scope: !13643, inlinedAt: !13722)
!13722 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13720)
!13723 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13722)
!13724 = !DILocation(line: 538, column: 1, scope: !13678)
!13725 = distinct !DISubprogram(name: "sliceable", scope: !2359, file: !2359, line: 468, type: !13726, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13728)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!136, !2254}
!13728 = !{!13729, !13730}
!13729 = !DILocalVariable(name: "thread", arg: 1, scope: !13725, file: !2359, line: 468, type: !2254)
!13730 = !DILocalVariable(name: "ret", scope: !13725, file: !2359, line: 470, type: !136)
!13731 = !DILocation(line: 0, scope: !13725)
!13732 = !DILocation(line: 470, column: 13, scope: !13725)
!13733 = !DILocation(line: 471, column: 3, scope: !13725)
!13734 = !DILocation(line: 471, column: 7, scope: !13725)
!13735 = !DILocation(line: 472, column: 3, scope: !13725)
!13736 = !DILocation(line: 472, column: 37, scope: !13725)
!13737 = !DILocation(line: 472, column: 24, scope: !13725)
!13738 = !DILocation(line: 472, column: 43, scope: !13725)
!13739 = !DILocation(line: 472, column: 7, scope: !13725)
!13740 = !DILocation(line: 473, column: 3, scope: !13725)
!13741 = !DILocation(line: 473, column: 7, scope: !13725)
!13742 = !DILocation(line: 473, column: 6, scope: !13725)
!13743 = !DILocation(line: 479, column: 2, scope: !13725)
!13744 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2359, file: !2359, line: 482, type: !13745, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13747)
!13745 = !DISubroutineType(types: !13746)
!13746 = !{!13600, !13600}
!13747 = !{!13748, !13749}
!13748 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13744, file: !2359, line: 482, type: !13600)
!13749 = !DILocalVariable(name: "curr", scope: !13744, file: !2359, line: 484, type: !2254)
!13750 = !DILocation(line: 0, scope: !13744)
!13751 = !DILocation(line: 484, column: 26, scope: !13744)
!13752 = !DILocation(line: 493, column: 7, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13744, file: !2359, line: 493, column: 6)
!13754 = !DILocation(line: 493, column: 6, scope: !13744)
!13755 = !DILocation(line: 494, column: 3, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13753, file: !2359, line: 493, column: 49)
!13757 = !DILocation(line: 495, column: 2, scope: !13756)
!13758 = !DILocation(line: 496, column: 2, scope: !13744)
!13759 = !DILocation(line: 499, column: 1, scope: !13744)
!13760 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12441, file: !12441, line: 106, type: !13726, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13761)
!13761 = !{!13762, !13763}
!13762 = !DILocalVariable(name: "thread", arg: 1, scope: !13760, file: !12441, line: 106, type: !2254)
!13763 = !DILocalVariable(name: "state", scope: !13760, file: !12441, line: 108, type: !133)
!13764 = !DILocation(line: 0, scope: !13760)
!13765 = !DILocation(line: 108, column: 31, scope: !13760)
!13766 = !DILocation(line: 110, column: 16, scope: !13760)
!13767 = !DILocation(line: 111, column: 41, scope: !13760)
!13768 = !DILocation(line: 110, column: 2, scope: !13760)
!13769 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2359, file: !2359, line: 393, type: !13566, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13770)
!13770 = !{!13771}
!13771 = !DILocalVariable(name: "thread", arg: 1, scope: !13769, file: !2359, line: 393, type: !2254)
!13772 = !DILocation(line: 0, scope: !13769)
!13773 = !DILocation(line: 395, column: 6, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13769, file: !2359, line: 395, column: 6)
!13775 = !DILocation(line: 395, column: 6, scope: !13769)
!13776 = !DILocalVariable(name: "thread", arg: 1, scope: !13777, file: !2359, line: 264, type: !2254)
!13777 = distinct !DISubprogram(name: "dequeue_thread", scope: !2359, file: !2359, line: 264, type: !13566, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13778)
!13778 = !{!13776}
!13779 = !DILocation(line: 0, scope: !13777, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 396, column: 3, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13774, file: !2359, line: 395, column: 34)
!13782 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !13780)
!13783 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !13780)
!13784 = !DILocalVariable(name: "thread", arg: 1, scope: !13785, file: !2359, line: 232, type: !2254)
!13785 = distinct !DISubprogram(name: "runq_remove", scope: !2359, file: !2359, line: 232, type: !13566, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13786)
!13786 = !{!13784}
!13787 = !DILocation(line: 0, scope: !13785, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !13780)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !2359, line: 267, column: 35)
!13790 = distinct !DILexicalBlock(scope: !13777, file: !2359, line: 267, column: 6)
!13791 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !13788)
!13792 = !DILocation(line: 397, column: 2, scope: !13781)
!13793 = !DILocalVariable(name: "thread", arg: 1, scope: !13794, file: !2359, line: 250, type: !2254)
!13794 = distinct !DISubprogram(name: "queue_thread", scope: !2359, file: !2359, line: 250, type: !13566, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13795)
!13795 = !{!13793}
!13796 = !DILocation(line: 0, scope: !13794, inlinedAt: !13797)
!13797 = distinct !DILocation(line: 398, column: 2, scope: !13769)
!13798 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !13797)
!13799 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !13797)
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13801, file: !2359, line: 227, type: !2254)
!13801 = distinct !DISubprogram(name: "runq_add", scope: !2359, file: !2359, line: 227, type: !13566, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13802)
!13802 = !{!13800}
!13803 = !DILocation(line: 0, scope: !13801, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !13797)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !2359, line: 253, column: 35)
!13806 = distinct !DILexicalBlock(scope: !13794, file: !2359, line: 253, column: 6)
!13807 = !DILocalVariable(name: "pq", arg: 1, scope: !13808, file: !2359, line: 181, type: !13811)
!13808 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2359, file: !2359, line: 181, type: !13809, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13812)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{null, !13811, !2254}
!13811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!13812 = !{!13807, !13813, !13814}
!13813 = !DILocalVariable(name: "thread", arg: 2, scope: !13808, file: !2359, line: 182, type: !2254)
!13814 = !DILocalVariable(name: "t", scope: !13808, file: !2359, line: 184, type: !2254)
!13815 = !DILocation(line: 0, scope: !13808, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !13804)
!13817 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !13816)
!13818 = distinct !DILexicalBlock(scope: !13808, file: !2359, line: 188, column: 2)
!13819 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !13816)
!13820 = distinct !DILexicalBlock(scope: !13818, file: !2359, line: 188, column: 2)
!13821 = !DILocation(line: 0, scope: !13818, inlinedAt: !13816)
!13822 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !13816)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !2359, line: 189, column: 7)
!13824 = distinct !DILexicalBlock(scope: !13820, file: !2359, line: 188, column: 56)
!13825 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !13816)
!13826 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !13816)
!13827 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !13816)
!13828 = distinct !DILexicalBlock(scope: !13823, file: !2359, line: 189, column: 40)
!13829 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !13816)
!13830 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !13816)
!13831 = distinct !{!13831, !13817, !13832}
!13832 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !13816)
!13833 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !13816)
!13834 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !13816)
!13835 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !13816)
!13836 = !DILocation(line: 399, column: 25, scope: !13769)
!13837 = !DILocation(line: 399, column: 22, scope: !13769)
!13838 = !DILocation(line: 399, column: 2, scope: !13769)
!13839 = !DILocation(line: 400, column: 1, scope: !13769)
!13840 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12441, file: !12441, line: 136, type: !13726, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13841)
!13841 = !{!13842}
!13842 = !DILocalVariable(name: "thread", arg: 1, scope: !13840, file: !12441, line: 136, type: !2254)
!13843 = !DILocation(line: 0, scope: !13840)
!13844 = !DILocation(line: 138, column: 9, scope: !13840)
!13845 = !DILocation(line: 138, column: 2, scope: !13840)
!13846 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2359, file: !2359, line: 1137, type: !13809, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13847)
!13847 = !{!13848, !13849}
!13848 = !DILocalVariable(name: "pq", arg: 1, scope: !13846, file: !2359, line: 1137, type: !13811)
!13849 = !DILocalVariable(name: "thread", arg: 2, scope: !13846, file: !2359, line: 1137, type: !2254)
!13850 = !DILocation(line: 0, scope: !13846)
!13851 = !DILocation(line: 1141, column: 33, scope: !13846)
!13852 = !DILocation(line: 1141, column: 2, scope: !13846)
!13853 = !DILocation(line: 1142, column: 1, scope: !13846)
!13854 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13855, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13857)
!13855 = !DISubroutineType(types: !13856)
!13856 = !{!2355, !13811}
!13857 = !{!13858}
!13858 = !DILocalVariable(name: "list", arg: 1, scope: !13854, file: !233, line: 294, type: !13811)
!13859 = !DILocation(line: 0, scope: !13854)
!13860 = !DILocation(line: 296, column: 9, scope: !13854)
!13861 = !DILocation(line: 296, column: 49, scope: !13854)
!13862 = !DILocation(line: 296, column: 2, scope: !13854)
!13863 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !13864, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13866)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{null, !2355, !2355}
!13866 = !{!13867, !13868, !13869}
!13867 = !DILocalVariable(name: "successor", arg: 1, scope: !13863, file: !233, line: 443, type: !2355)
!13868 = !DILocalVariable(name: "node", arg: 2, scope: !13863, file: !233, line: 443, type: !2355)
!13869 = !DILocalVariable(name: "prev", scope: !13863, file: !233, line: 445, type: !13870)
!13870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2355)
!13871 = !DILocation(line: 0, scope: !13863)
!13872 = !DILocation(line: 445, column: 39, scope: !13863)
!13873 = !DILocation(line: 447, column: 8, scope: !13863)
!13874 = !DILocation(line: 447, column: 13, scope: !13863)
!13875 = !DILocation(line: 448, column: 8, scope: !13863)
!13876 = !DILocation(line: 448, column: 13, scope: !13863)
!13877 = !DILocation(line: 449, column: 8, scope: !13863)
!13878 = !DILocation(line: 449, column: 13, scope: !13863)
!13879 = !DILocation(line: 450, column: 18, scope: !13863)
!13880 = !DILocation(line: 451, column: 1, scope: !13863)
!13881 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !13882, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{!2355, !13811, !2355}
!13884 = !{!13885, !13886}
!13885 = !DILocalVariable(name: "list", arg: 1, scope: !13881, file: !233, line: 341, type: !13811)
!13886 = !DILocalVariable(name: "node", arg: 2, scope: !13881, file: !233, line: 342, type: !2355)
!13887 = !DILocation(line: 0, scope: !13881)
!13888 = !DILocation(line: 344, column: 15, scope: !13881)
!13889 = !DILocation(line: 344, column: 9, scope: !13881)
!13890 = !DILocation(line: 344, column: 26, scope: !13881)
!13891 = !DILocation(line: 344, column: 2, scope: !13881)
!13892 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !13893, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13895)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !13811, !2355}
!13895 = !{!13896, !13897, !13898}
!13896 = !DILocalVariable(name: "list", arg: 1, scope: !13892, file: !233, line: 404, type: !13811)
!13897 = !DILocalVariable(name: "node", arg: 2, scope: !13892, file: !233, line: 404, type: !2355)
!13898 = !DILocalVariable(name: "tail", scope: !13892, file: !233, line: 406, type: !13870)
!13899 = !DILocation(line: 0, scope: !13892)
!13900 = !DILocation(line: 406, column: 34, scope: !13892)
!13901 = !DILocation(line: 408, column: 8, scope: !13892)
!13902 = !DILocation(line: 408, column: 13, scope: !13892)
!13903 = !DILocation(line: 409, column: 8, scope: !13892)
!13904 = !DILocation(line: 409, column: 13, scope: !13892)
!13905 = !DILocation(line: 411, column: 8, scope: !13892)
!13906 = !DILocation(line: 411, column: 13, scope: !13892)
!13907 = !DILocation(line: 412, column: 13, scope: !13892)
!13908 = !DILocation(line: 413, column: 1, scope: !13892)
!13909 = distinct !DISubprogram(name: "update_cache", scope: !2359, file: !2359, line: 559, type: !7772, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13910)
!13910 = !{!13911, !13912}
!13911 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13909, file: !2359, line: 559, type: !107)
!13912 = !DILocalVariable(name: "thread", scope: !13909, file: !2359, line: 562, type: !2254)
!13913 = !DILocation(line: 0, scope: !13909)
!13914 = !DILocation(line: 239, column: 9, scope: !13915, inlinedAt: !13918)
!13915 = distinct !DISubprogram(name: "runq_best", scope: !2359, file: !2359, line: 237, type: !13916, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!13916 = !DISubroutineType(types: !13917)
!13917 = !{!2254}
!13918 = distinct !DILocation(line: 314, column: 28, scope: !13919, inlinedAt: !13922)
!13919 = distinct !DISubprogram(name: "next_up", scope: !2359, file: !2359, line: 312, type: !13916, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13920)
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "thread", scope: !13919, file: !2359, line: 314, type: !2254)
!13922 = distinct !DILocation(line: 562, column: 28, scope: !13909)
!13923 = !DILocation(line: 0, scope: !13919, inlinedAt: !13922)
!13924 = !DILocation(line: 340, column: 17, scope: !13919, inlinedAt: !13922)
!13925 = !DILocation(line: 340, column: 9, scope: !13919, inlinedAt: !13922)
!13926 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !2359, line: 127, type: !2254)
!13927 = distinct !DISubprogram(name: "should_preempt", scope: !2359, file: !2359, line: 127, type: !13928, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13930)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!136, !2254, !107}
!13930 = !{!13926, !13931}
!13931 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13927, file: !2359, line: 128, type: !107)
!13932 = !DILocation(line: 0, scope: !13927, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 564, column: 6, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13909, file: !2359, line: 564, column: 6)
!13935 = !DILocation(line: 133, column: 17, scope: !13936, inlinedAt: !13933)
!13936 = distinct !DILexicalBlock(scope: !13927, file: !2359, line: 133, column: 6)
!13937 = !DILocation(line: 0, scope: !13934)
!13938 = !DILocation(line: 133, column: 6, scope: !13927, inlinedAt: !13933)
!13939 = !DILocation(line: 140, column: 6, scope: !13940, inlinedAt: !13933)
!13940 = distinct !DILexicalBlock(scope: !13927, file: !2359, line: 140, column: 6)
!13941 = !DILocation(line: 140, column: 6, scope: !13927, inlinedAt: !13933)
!13942 = !DILocation(line: 150, column: 9, scope: !13943, inlinedAt: !13933)
!13943 = distinct !DILexicalBlock(scope: !13927, file: !2359, line: 149, column: 6)
!13944 = !DILocation(line: 149, column: 6, scope: !13927, inlinedAt: !13933)
!13945 = !DILocation(line: 157, column: 6, scope: !13946, inlinedAt: !13933)
!13946 = distinct !DILexicalBlock(scope: !13927, file: !2359, line: 157, column: 6)
!13947 = !DILocation(line: 564, column: 6, scope: !13909)
!13948 = !DILocation(line: 566, column: 14, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13950, file: !2359, line: 566, column: 7)
!13950 = distinct !DILexicalBlock(scope: !13934, file: !2359, line: 564, column: 42)
!13951 = !DILocation(line: 566, column: 7, scope: !13950)
!13952 = !DILocation(line: 567, column: 4, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13949, file: !2359, line: 566, column: 27)
!13954 = !DILocation(line: 568, column: 3, scope: !13953)
!13955 = !DILocation(line: 585, column: 1, scope: !13909)
!13956 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2359, file: !2359, line: 1144, type: !13957, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{!2254, !13811}
!13959 = !{!13960, !13961, !13962}
!13960 = !DILocalVariable(name: "pq", arg: 1, scope: !13956, file: !2359, line: 1144, type: !13811)
!13961 = !DILocalVariable(name: "thread", scope: !13956, file: !2359, line: 1146, type: !2254)
!13962 = !DILocalVariable(name: "n", scope: !13956, file: !2359, line: 1147, type: !2355)
!13963 = !DILocation(line: 0, scope: !13956)
!13964 = !DILocation(line: 1147, column: 19, scope: !13956)
!13965 = !DILocation(line: 1152, column: 2, scope: !13956)
!13966 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12441, file: !12441, line: 115, type: !13726, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13967)
!13967 = !{!13968}
!13968 = !DILocalVariable(name: "thread", arg: 1, scope: !13966, file: !12441, line: 115, type: !2254)
!13969 = !DILocation(line: 0, scope: !13966)
!13970 = !DILocation(line: 117, column: 46, scope: !13966)
!13971 = !DILocation(line: 117, column: 10, scope: !13966)
!13972 = !DILocation(line: 117, column: 9, scope: !13966)
!13973 = !DILocation(line: 117, column: 2, scope: !13966)
!13974 = distinct !DISubprogram(name: "is_preempt", scope: !2359, file: !2359, line: 62, type: !13584, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13975)
!13975 = !{!13976}
!13976 = !DILocalVariable(name: "thread", arg: 1, scope: !13974, file: !2359, line: 62, type: !2254)
!13977 = !DILocation(line: 0, scope: !13974)
!13978 = !DILocation(line: 65, column: 22, scope: !13974)
!13979 = !DILocation(line: 65, column: 30, scope: !13974)
!13980 = !DILocation(line: 65, column: 2, scope: !13974)
!13981 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12833, file: !12833, line: 35, type: !13982, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13986)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{!136, !13984}
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13985, size: 32)
!13985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2305)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "to", arg: 1, scope: !13981, file: !12833, line: 35, type: !13984)
!13988 = !DILocation(line: 0, scope: !13981)
!13989 = !DILocation(line: 37, column: 35, scope: !13981)
!13990 = !DILocation(line: 37, column: 10, scope: !13981)
!13991 = !DILocation(line: 37, column: 9, scope: !13981)
!13992 = !DILocation(line: 37, column: 2, scope: !13981)
!13993 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !13994, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !13998)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!136, !13996}
!13996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13997, size: 32)
!13997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2264)
!13998 = !{!13999}
!13999 = !DILocalVariable(name: "node", arg: 1, scope: !13993, file: !233, line: 225, type: !13996)
!14000 = !DILocation(line: 0, scope: !13993)
!14001 = !DILocation(line: 227, column: 15, scope: !13993)
!14002 = !DILocation(line: 227, column: 20, scope: !13993)
!14003 = !DILocation(line: 227, column: 2, scope: !13993)
!14004 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !13882, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14005)
!14005 = !{!14006, !14007}
!14006 = !DILocalVariable(name: "list", arg: 1, scope: !14004, file: !233, line: 325, type: !13811)
!14007 = !DILocalVariable(name: "node", arg: 2, scope: !14004, file: !233, line: 326, type: !2355)
!14008 = !DILocation(line: 0, scope: !14004)
!14009 = !DILocation(line: 328, column: 24, scope: !14004)
!14010 = !DILocation(line: 328, column: 15, scope: !14004)
!14011 = !DILocation(line: 328, column: 9, scope: !14004)
!14012 = !DILocation(line: 328, column: 45, scope: !14004)
!14013 = !DILocation(line: 328, column: 2, scope: !14004)
!14014 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !14015, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14017)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!136, !13811}
!14017 = !{!14018}
!14018 = !DILocalVariable(name: "list", arg: 1, scope: !14014, file: !233, line: 266, type: !13811)
!14019 = !DILocation(line: 0, scope: !14014)
!14020 = !DILocation(line: 268, column: 15, scope: !14014)
!14021 = !DILocation(line: 268, column: 20, scope: !14014)
!14022 = !DILocation(line: 268, column: 2, scope: !14014)
!14023 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !14024, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14026)
!14024 = !DISubroutineType(types: !14025)
!14025 = !{null, !2355}
!14026 = !{!14027, !14028, !14029}
!14027 = !DILocalVariable(name: "node", arg: 1, scope: !14023, file: !233, line: 496, type: !2355)
!14028 = !DILocalVariable(name: "prev", scope: !14023, file: !233, line: 498, type: !13870)
!14029 = !DILocalVariable(name: "next", scope: !14023, file: !233, line: 499, type: !13870)
!14030 = !DILocation(line: 0, scope: !14023)
!14031 = !DILocation(line: 498, column: 34, scope: !14023)
!14032 = !DILocation(line: 499, column: 34, scope: !14023)
!14033 = !DILocation(line: 501, column: 8, scope: !14023)
!14034 = !DILocation(line: 501, column: 13, scope: !14023)
!14035 = !DILocation(line: 502, column: 8, scope: !14023)
!14036 = !DILocation(line: 502, column: 13, scope: !14023)
!14037 = !DILocation(line: 503, column: 2, scope: !14023)
!14038 = !DILocation(line: 504, column: 1, scope: !14023)
!14039 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !14024, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14040)
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "node", arg: 1, scope: !14039, file: !233, line: 211, type: !2355)
!14042 = !DILocation(line: 0, scope: !14039)
!14043 = !DILocation(line: 213, column: 8, scope: !14039)
!14044 = !DILocation(line: 213, column: 13, scope: !14039)
!14045 = !DILocation(line: 214, column: 8, scope: !14039)
!14046 = !DILocation(line: 214, column: 13, scope: !14039)
!14047 = !DILocation(line: 215, column: 1, scope: !14039)
!14048 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12441, file: !12441, line: 131, type: !14049, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!136, !2254, !162}
!14051 = !{!14052, !14053}
!14052 = !DILocalVariable(name: "thread", arg: 1, scope: !14048, file: !12441, line: 131, type: !2254)
!14053 = !DILocalVariable(name: "state", arg: 2, scope: !14048, file: !12441, line: 131, type: !162)
!14054 = !DILocation(line: 0, scope: !14048)
!14055 = !DILocation(line: 133, column: 23, scope: !14048)
!14056 = !DILocation(line: 133, column: 45, scope: !14048)
!14057 = !DILocation(line: 133, column: 2, scope: !14048)
!14058 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12441, file: !12441, line: 211, type: !14059, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{!136, !107, !107}
!14061 = !{!14062, !14063}
!14062 = !DILocalVariable(name: "prio", arg: 1, scope: !14058, file: !12441, line: 211, type: !107)
!14063 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14058, file: !12441, line: 211, type: !107)
!14064 = !DILocation(line: 0, scope: !14058)
!14065 = !DILocation(line: 213, column: 9, scope: !14058)
!14066 = !DILocation(line: 213, column: 2, scope: !14058)
!14067 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12441, file: !12441, line: 83, type: !13726, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14068)
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !12441, line: 83, type: !2254)
!14070 = !DILocation(line: 0, scope: !14067)
!14071 = !DILocation(line: 89, column: 16, scope: !14067)
!14072 = !DILocation(line: 89, column: 2, scope: !14067)
!14073 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12441, file: !12441, line: 206, type: !14059, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14074)
!14074 = !{!14075, !14076}
!14075 = !DILocalVariable(name: "prio1", arg: 1, scope: !14073, file: !12441, line: 206, type: !107)
!14076 = !DILocalVariable(name: "prio2", arg: 2, scope: !14073, file: !12441, line: 206, type: !107)
!14077 = !DILocation(line: 0, scope: !14073)
!14078 = !DILocation(line: 208, column: 15, scope: !14073)
!14079 = !DILocation(line: 208, column: 2, scope: !14073)
!14080 = distinct !DISubprogram(name: "z_ready_thread", scope: !2359, file: !2359, line: 635, type: !13566, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14081)
!14081 = !{!14082, !14083, !14085}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14080, file: !2359, line: 635, type: !2254)
!14083 = !DILocalVariable(name: "__i", scope: !14084, file: !2359, line: 637, type: !13600)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !2359, line: 637, column: 2)
!14085 = !DILocalVariable(name: "__key", scope: !14084, file: !2359, line: 637, type: !13600)
!14086 = !DILocation(line: 0, scope: !14080)
!14087 = !DILocation(line: 0, scope: !14084)
!14088 = !DILocation(line: 0, scope: !13608, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 637, column: 2, scope: !14084)
!14090 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14089)
!14092 = !DILocation(line: 0, scope: !13617, inlinedAt: !14091)
!14093 = !DILocation(line: 639, column: 4, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !2359, line: 638, column: 41)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !2359, line: 638, column: 7)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !2359, line: 637, column: 26)
!14097 = distinct !DILexicalBlock(scope: !14084, file: !2359, line: 637, column: 2)
!14098 = !DILocation(line: 0, scope: !13635, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 637, column: 2, scope: !14097)
!14100 = !DILocation(line: 0, scope: !13643, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14099)
!14102 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14101)
!14103 = !DILocation(line: 642, column: 1, scope: !14080)
!14104 = distinct !DISubprogram(name: "ready_thread", scope: !2359, file: !2359, line: 617, type: !13566, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14105)
!14105 = !{!14106}
!14106 = !DILocalVariable(name: "thread", arg: 1, scope: !14104, file: !2359, line: 617, type: !2254)
!14107 = !DILocation(line: 0, scope: !14104)
!14108 = !DILocation(line: 626, column: 7, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14104, file: !2359, line: 626, column: 6)
!14110 = !DILocation(line: 626, column: 34, scope: !14109)
!14111 = !DILocation(line: 626, column: 37, scope: !14109)
!14112 = !DILocation(line: 626, column: 6, scope: !14104)
!14113 = !DILocation(line: 0, scope: !13794, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 629, column: 3, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14109, file: !2359, line: 626, column: 64)
!14116 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !14114)
!14117 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !14114)
!14118 = !DILocation(line: 0, scope: !13801, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !14114)
!14120 = !DILocation(line: 0, scope: !13808, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !14119)
!14122 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14121)
!14123 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14121)
!14124 = !DILocation(line: 0, scope: !13818, inlinedAt: !14121)
!14125 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14121)
!14126 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14121)
!14127 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14121)
!14128 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !14121)
!14129 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14121)
!14130 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14121)
!14131 = distinct !{!14131, !14122, !14132}
!14132 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14121)
!14133 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !14121)
!14134 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14121)
!14135 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14121)
!14136 = !DILocation(line: 630, column: 3, scope: !14115)
!14137 = !DILocation(line: 632, column: 2, scope: !14115)
!14138 = !DILocation(line: 633, column: 1, scope: !14104)
!14139 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12441, file: !12441, line: 120, type: !13726, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14140)
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "thread", arg: 1, scope: !14139, file: !12441, line: 120, type: !2254)
!14142 = !DILocation(line: 0, scope: !14139)
!14143 = !DILocation(line: 122, column: 12, scope: !14139)
!14144 = !DILocation(line: 122, column: 62, scope: !14139)
!14145 = !DILocation(line: 123, column: 4, scope: !14139)
!14146 = !DILocation(line: 122, column: 2, scope: !14139)
!14147 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2359, file: !2359, line: 644, type: !13566, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14148)
!14148 = !{!14149, !14150, !14152}
!14149 = !DILocalVariable(name: "thread", arg: 1, scope: !14147, file: !2359, line: 644, type: !2254)
!14150 = !DILocalVariable(name: "__i", scope: !14151, file: !2359, line: 646, type: !13600)
!14151 = distinct !DILexicalBlock(scope: !14147, file: !2359, line: 646, column: 2)
!14152 = !DILocalVariable(name: "__key", scope: !14151, file: !2359, line: 646, type: !13600)
!14153 = !DILocation(line: 0, scope: !14147)
!14154 = !DILocation(line: 0, scope: !14151)
!14155 = !DILocation(line: 0, scope: !13608, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 646, column: 2, scope: !14151)
!14157 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14158)
!14158 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14156)
!14159 = !DILocation(line: 0, scope: !13617, inlinedAt: !14158)
!14160 = !DILocation(line: 647, column: 3, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !2359, line: 646, column: 26)
!14162 = distinct !DILexicalBlock(scope: !14151, file: !2359, line: 646, column: 2)
!14163 = !DILocation(line: 0, scope: !13635, inlinedAt: !14164)
!14164 = distinct !DILocation(line: 646, column: 2, scope: !14162)
!14165 = !DILocation(line: 0, scope: !13643, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14164)
!14167 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14166)
!14168 = !DILocation(line: 649, column: 1, scope: !14147)
!14169 = distinct !DISubprogram(name: "z_sched_start", scope: !2359, file: !2359, line: 651, type: !13566, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14170)
!14170 = !{!14171, !14172}
!14171 = !DILocalVariable(name: "thread", arg: 1, scope: !14169, file: !2359, line: 651, type: !2254)
!14172 = !DILocalVariable(name: "key", scope: !14169, file: !2359, line: 653, type: !13600)
!14173 = !DILocation(line: 0, scope: !14169)
!14174 = !DILocation(line: 0, scope: !13608, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 653, column: 25, scope: !14169)
!14176 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14177)
!14177 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14175)
!14178 = !DILocation(line: 0, scope: !13617, inlinedAt: !14177)
!14179 = !DILocation(line: 655, column: 6, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14169, file: !2359, line: 655, column: 6)
!14181 = !DILocation(line: 655, column: 6, scope: !14169)
!14182 = !DILocation(line: 0, scope: !13635, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 656, column: 3, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14180, file: !2359, line: 655, column: 36)
!14185 = !DILocation(line: 0, scope: !13643, inlinedAt: !14186)
!14186 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14183)
!14187 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14186)
!14188 = !DILocation(line: 657, column: 3, scope: !14184)
!14189 = !DILocation(line: 660, column: 2, scope: !14169)
!14190 = !DILocation(line: 661, column: 2, scope: !14169)
!14191 = !DILocation(line: 662, column: 2, scope: !14169)
!14192 = !DILocation(line: 663, column: 1, scope: !14169)
!14193 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12441, file: !12441, line: 126, type: !13726, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14194)
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "thread", arg: 1, scope: !14193, file: !12441, line: 126, type: !2254)
!14196 = !DILocation(line: 0, scope: !14193)
!14197 = !DILocation(line: 128, column: 23, scope: !14193)
!14198 = !DILocation(line: 128, column: 36, scope: !14193)
!14199 = !DILocation(line: 128, column: 56, scope: !14193)
!14200 = !DILocation(line: 128, column: 2, scope: !14193)
!14201 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12441, file: !12441, line: 155, type: !13566, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14202)
!14202 = !{!14203}
!14203 = !DILocalVariable(name: "thread", arg: 1, scope: !14201, file: !12441, line: 155, type: !2254)
!14204 = !DILocation(line: 0, scope: !14201)
!14205 = !DILocation(line: 157, column: 15, scope: !14201)
!14206 = !DILocation(line: 157, column: 28, scope: !14201)
!14207 = !DILocation(line: 158, column: 1, scope: !14201)
!14208 = distinct !DISubprogram(name: "z_reschedule", scope: !2359, file: !2359, line: 967, type: !13636, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14209)
!14209 = !{!14210, !14211}
!14210 = !DILocalVariable(name: "lock", arg: 1, scope: !14208, file: !2359, line: 967, type: !13611)
!14211 = !DILocalVariable(name: "key", arg: 2, scope: !14208, file: !2359, line: 967, type: !13600)
!14212 = !DILocation(line: 0, scope: !14208)
!14213 = !DILocation(line: 969, column: 6, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14208, file: !2359, line: 969, column: 6)
!14215 = !DILocation(line: 969, column: 23, scope: !14214)
!14216 = !DILocation(line: 969, column: 26, scope: !14214)
!14217 = !DILocation(line: 969, column: 6, scope: !14208)
!14218 = !DILocalVariable(name: "key", arg: 2, scope: !14219, file: !12545, line: 193, type: !13600)
!14219 = distinct !DISubprogram(name: "z_swap", scope: !12545, file: !12545, line: 193, type: !14220, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!107, !13611, !13600}
!14222 = !{!14223, !14218}
!14223 = !DILocalVariable(name: "lock", arg: 1, scope: !14219, file: !12545, line: 193, type: !13611)
!14224 = !DILocation(line: 0, scope: !14219, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 970, column: 3, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14214, file: !2359, line: 969, column: 39)
!14227 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !14225)
!14228 = !DILocation(line: 971, column: 2, scope: !14226)
!14229 = !DILocation(line: 0, scope: !13635, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 972, column: 3, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14214, file: !2359, line: 971, column: 9)
!14232 = !DILocation(line: 0, scope: !13643, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14230)
!14234 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14233)
!14235 = !DILocation(line: 975, column: 1, scope: !14208)
!14236 = distinct !DISubprogram(name: "resched", scope: !2359, file: !2359, line: 940, type: !14237, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14239)
!14237 = !DISubroutineType(types: !14238)
!14238 = !{!136, !162}
!14239 = !{!14240}
!14240 = !DILocalVariable(name: "key", arg: 1, scope: !14236, file: !2359, line: 940, type: !162)
!14241 = !DILocation(line: 0, scope: !14236)
!14242 = !DILocalVariable(name: "key", arg: 1, scope: !14243, file: !5867, line: 112, type: !32)
!14243 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5867, file: !5867, line: 112, type: !14244, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14246)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!136, !32}
!14246 = !{!14242}
!14247 = !DILocation(line: 0, scope: !14243, inlinedAt: !14248)
!14248 = distinct !DILocation(line: 946, column: 9, scope: !14236)
!14249 = !DILocation(line: 115, column: 13, scope: !14243, inlinedAt: !14248)
!14250 = !DILocation(line: 946, column: 32, scope: !14236)
!14251 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !14255)
!14252 = distinct !DISubprogram(name: "__get_IPSR", scope: !6058, file: !6058, line: 1027, type: !6808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14253)
!14253 = !{!14254}
!14254 = !DILocalVariable(name: "result", scope: !14252, file: !6058, line: 1029, type: !162)
!14255 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !14257)
!14256 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6814, file: !6814, line: 46, type: !6815, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!14257 = distinct !DILocation(line: 946, column: 36, scope: !14236)
!14258 = !{i64 2486648}
!14259 = !DILocation(line: 0, scope: !14252, inlinedAt: !14255)
!14260 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !14257)
!14261 = !DILocation(line: 946, column: 2, scope: !14236)
!14262 = distinct !DISubprogram(name: "need_swap", scope: !2359, file: !2359, line: 953, type: !6815, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14263)
!14263 = !{!14264}
!14264 = !DILocalVariable(name: "new_thread", scope: !14262, file: !2359, line: 959, type: !2254)
!14265 = !DILocation(line: 962, column: 31, scope: !14262)
!14266 = !DILocation(line: 0, scope: !14262)
!14267 = !DILocation(line: 963, column: 23, scope: !14262)
!14268 = !DILocation(line: 963, column: 20, scope: !14262)
!14269 = !DILocation(line: 963, column: 2, scope: !14262)
!14270 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12545, file: !12545, line: 181, type: !6068, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14271)
!14271 = !{!14272, !14273}
!14272 = !DILocalVariable(name: "key", arg: 1, scope: !14270, file: !12545, line: 181, type: !32)
!14273 = !DILocalVariable(name: "ret", scope: !14270, file: !12545, line: 183, type: !107)
!14274 = !DILocation(line: 0, scope: !14270)
!14275 = !DILocation(line: 185, column: 8, scope: !14270)
!14276 = !DILocation(line: 186, column: 2, scope: !14270)
!14277 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2359, file: !2359, line: 665, type: !13566, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14278)
!14278 = !{!14279, !14280, !14282}
!14279 = !DILocalVariable(name: "thread", arg: 1, scope: !14277, file: !2359, line: 665, type: !2254)
!14280 = !DILocalVariable(name: "__i", scope: !14281, file: !2359, line: 671, type: !13600)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !2359, line: 671, column: 2)
!14282 = !DILocalVariable(name: "__key", scope: !14281, file: !2359, line: 671, type: !13600)
!14283 = !DILocation(line: 0, scope: !14277)
!14284 = !DILocation(line: 669, column: 8, scope: !14277)
!14285 = !DILocation(line: 0, scope: !14281)
!14286 = !DILocation(line: 0, scope: !13608, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 671, column: 2, scope: !14281)
!14288 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14287)
!14290 = !DILocation(line: 0, scope: !13617, inlinedAt: !14289)
!14291 = !DILocation(line: 672, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2359, line: 672, column: 7)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2359, line: 671, column: 26)
!14294 = distinct !DILexicalBlock(scope: !14281, file: !2359, line: 671, column: 2)
!14295 = !DILocation(line: 672, column: 7, scope: !14293)
!14296 = !DILocation(line: 0, scope: !13777, inlinedAt: !14297)
!14297 = distinct !DILocation(line: 673, column: 4, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14292, file: !2359, line: 672, column: 35)
!14299 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !14297)
!14300 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14297)
!14301 = !DILocation(line: 0, scope: !13785, inlinedAt: !14302)
!14302 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14297)
!14303 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14302)
!14304 = !DILocation(line: 674, column: 3, scope: !14298)
!14305 = !DILocation(line: 675, column: 3, scope: !14293)
!14306 = !DILocation(line: 676, column: 26, scope: !14293)
!14307 = !DILocation(line: 676, column: 23, scope: !14293)
!14308 = !DILocation(line: 676, column: 3, scope: !14293)
!14309 = !DILocation(line: 0, scope: !13635, inlinedAt: !14310)
!14310 = distinct !DILocation(line: 671, column: 2, scope: !14294)
!14311 = !DILocation(line: 0, scope: !13643, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14310)
!14313 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14312)
!14314 = !DILocation(line: 679, column: 16, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14277, file: !2359, line: 679, column: 6)
!14316 = !DILocation(line: 679, column: 13, scope: !14315)
!14317 = !DILocation(line: 679, column: 6, scope: !14277)
!14318 = !DILocation(line: 680, column: 3, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14315, file: !2359, line: 679, column: 26)
!14320 = !DILocation(line: 681, column: 2, scope: !14319)
!14321 = !DILocation(line: 684, column: 1, scope: !14277)
!14322 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12833, file: !12833, line: 52, type: !13584, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14323)
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "thread", arg: 1, scope: !14322, file: !12833, line: 52, type: !2254)
!14325 = !DILocation(line: 0, scope: !14322)
!14326 = !DILocation(line: 54, column: 39, scope: !14322)
!14327 = !DILocation(line: 54, column: 9, scope: !14322)
!14328 = !DILocation(line: 54, column: 2, scope: !14322)
!14329 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12441, file: !12441, line: 141, type: !13566, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14330)
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "thread", arg: 1, scope: !14329, file: !12441, line: 141, type: !2254)
!14332 = !DILocation(line: 0, scope: !14329)
!14333 = !DILocation(line: 143, column: 15, scope: !14329)
!14334 = !DILocation(line: 143, column: 28, scope: !14329)
!14335 = !DILocation(line: 146, column: 1, scope: !14329)
!14336 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12441, file: !12441, line: 73, type: !3107, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!14337 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14338)
!14338 = distinct !DILocation(line: 75, column: 30, scope: !14336)
!14339 = !DILocation(line: 0, scope: !13617, inlinedAt: !14338)
!14340 = !DILocation(line: 75, column: 9, scope: !14336)
!14341 = !DILocation(line: 76, column: 1, scope: !14336)
!14342 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2359, file: !2359, line: 977, type: !5891, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14343)
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "key", arg: 1, scope: !14342, file: !2359, line: 977, type: !162)
!14345 = !DILocation(line: 0, scope: !14342)
!14346 = !DILocation(line: 979, column: 6, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14342, file: !2359, line: 979, column: 6)
!14348 = !DILocation(line: 979, column: 6, scope: !14342)
!14349 = !DILocation(line: 980, column: 3, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14347, file: !2359, line: 979, column: 20)
!14351 = !DILocation(line: 981, column: 2, scope: !14350)
!14352 = !DILocation(line: 0, scope: !13643, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 982, column: 3, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14347, file: !2359, line: 981, column: 9)
!14355 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14353)
!14356 = !DILocation(line: 985, column: 1, scope: !14342)
!14357 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2359, file: !2359, line: 695, type: !13566, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14358)
!14358 = !{!14359, !14360}
!14359 = !DILocalVariable(name: "thread", arg: 1, scope: !14357, file: !2359, line: 695, type: !2254)
!14360 = !DILocalVariable(name: "key", scope: !14357, file: !2359, line: 699, type: !13600)
!14361 = !DILocation(line: 0, scope: !14357)
!14362 = !DILocation(line: 0, scope: !13608, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 699, column: 25, scope: !14357)
!14364 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14363)
!14366 = !DILocation(line: 0, scope: !13617, inlinedAt: !14365)
!14367 = !DILocation(line: 702, column: 7, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14357, file: !2359, line: 702, column: 6)
!14369 = !DILocation(line: 702, column: 6, scope: !14357)
!14370 = !DILocation(line: 0, scope: !13635, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 703, column: 3, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14368, file: !2359, line: 702, column: 38)
!14373 = !DILocation(line: 0, scope: !13643, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14371)
!14375 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14374)
!14376 = !DILocation(line: 704, column: 3, scope: !14372)
!14377 = !DILocation(line: 707, column: 2, scope: !14357)
!14378 = !DILocation(line: 708, column: 2, scope: !14357)
!14379 = !DILocation(line: 710, column: 2, scope: !14357)
!14380 = !DILocation(line: 713, column: 1, scope: !14357)
!14381 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12441, file: !12441, line: 96, type: !13726, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14382)
!14382 = !{!14383}
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14381, file: !12441, line: 96, type: !2254)
!14384 = !DILocation(line: 0, scope: !14381)
!14385 = !DILocation(line: 98, column: 23, scope: !14381)
!14386 = !DILocation(line: 98, column: 36, scope: !14381)
!14387 = !DILocation(line: 98, column: 57, scope: !14381)
!14388 = !DILocation(line: 98, column: 2, scope: !14381)
!14389 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12441, file: !12441, line: 148, type: !13566, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14390)
!14390 = !{!14391}
!14391 = !DILocalVariable(name: "thread", arg: 1, scope: !14389, file: !12441, line: 148, type: !2254)
!14392 = !DILocation(line: 0, scope: !14389)
!14393 = !DILocation(line: 150, column: 15, scope: !14389)
!14394 = !DILocation(line: 150, column: 28, scope: !14389)
!14395 = !DILocation(line: 153, column: 1, scope: !14389)
!14396 = distinct !DISubprogram(name: "z_pend_thread", scope: !2359, file: !2359, line: 770, type: !14397, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14403)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{null, !2254, !2285, !14399}
!14399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14400)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14401)
!14401 = !{!14402}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14400, file: !104, line: 66, baseType: !103, size: 64)
!14403 = !{!14404, !14405, !14406, !14407, !14409}
!14404 = !DILocalVariable(name: "thread", arg: 1, scope: !14396, file: !2359, line: 770, type: !2254)
!14405 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14396, file: !2359, line: 770, type: !2285)
!14406 = !DILocalVariable(name: "timeout", arg: 3, scope: !14396, file: !2359, line: 771, type: !14399)
!14407 = !DILocalVariable(name: "__i", scope: !14408, file: !2359, line: 774, type: !13600)
!14408 = distinct !DILexicalBlock(scope: !14396, file: !2359, line: 774, column: 2)
!14409 = !DILocalVariable(name: "__key", scope: !14408, file: !2359, line: 774, type: !13600)
!14410 = !DILocation(line: 0, scope: !14396)
!14411 = !DILocation(line: 0, scope: !14408)
!14412 = !DILocation(line: 0, scope: !13608, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 774, column: 2, scope: !14408)
!14414 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14413)
!14416 = !DILocation(line: 0, scope: !13617, inlinedAt: !14415)
!14417 = !DILocation(line: 775, column: 3, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !2359, line: 774, column: 26)
!14419 = distinct !DILexicalBlock(scope: !14408, file: !2359, line: 774, column: 2)
!14420 = !DILocation(line: 0, scope: !13635, inlinedAt: !14421)
!14421 = distinct !DILocation(line: 774, column: 2, scope: !14419)
!14422 = !DILocation(line: 0, scope: !13643, inlinedAt: !14423)
!14423 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14421)
!14424 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14423)
!14425 = !DILocation(line: 777, column: 1, scope: !14396)
!14426 = distinct !DISubprogram(name: "pend_locked", scope: !2359, file: !2359, line: 760, type: !14397, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14427)
!14427 = !{!14428, !14429, !14430}
!14428 = !DILocalVariable(name: "thread", arg: 1, scope: !14426, file: !2359, line: 760, type: !2254)
!14429 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14426, file: !2359, line: 760, type: !2285)
!14430 = !DILocalVariable(name: "timeout", arg: 3, scope: !14426, file: !2359, line: 761, type: !14399)
!14431 = !DILocation(line: 0, scope: !14426)
!14432 = !DILocation(line: 766, column: 2, scope: !14426)
!14433 = !DILocation(line: 767, column: 2, scope: !14426)
!14434 = !DILocation(line: 768, column: 1, scope: !14426)
!14435 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2359, file: !2359, line: 740, type: !14436, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{null, !2254, !2285}
!14438 = !{!14439, !14440}
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14435, file: !2359, line: 740, type: !2254)
!14440 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14435, file: !2359, line: 740, type: !2285)
!14441 = !DILocation(line: 0, scope: !14435)
!14442 = !DILocation(line: 742, column: 2, scope: !14435)
!14443 = !DILocation(line: 743, column: 2, scope: !14435)
!14444 = !DILocation(line: 747, column: 13, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14435, file: !2359, line: 747, column: 6)
!14446 = !DILocation(line: 747, column: 6, scope: !14435)
!14447 = !DILocation(line: 748, column: 16, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14445, file: !2359, line: 747, column: 22)
!14449 = !DILocation(line: 748, column: 26, scope: !14448)
!14450 = !DILocation(line: 749, column: 28, scope: !14448)
!14451 = !DILocation(line: 0, scope: !13808, inlinedAt: !14452)
!14452 = distinct !DILocation(line: 749, column: 3, scope: !14448)
!14453 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14452)
!14454 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14452)
!14455 = !DILocation(line: 0, scope: !13818, inlinedAt: !14452)
!14456 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14452)
!14457 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14452)
!14458 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14452)
!14459 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !14452)
!14460 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14452)
!14461 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14452)
!14462 = distinct !{!14462, !14453, !14463}
!14463 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14452)
!14464 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !14452)
!14465 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14452)
!14466 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14452)
!14467 = !DILocation(line: 751, column: 1, scope: !14435)
!14468 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2359, file: !2359, line: 753, type: !14469, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14471)
!14469 = !DISubroutineType(types: !14470)
!14470 = !{null, !2254, !14399}
!14471 = !{!14472, !14473}
!14472 = !DILocalVariable(name: "thread", arg: 1, scope: !14468, file: !2359, line: 753, type: !2254)
!14473 = !DILocalVariable(name: "timeout", arg: 2, scope: !14468, file: !2359, line: 753, type: !14399)
!14474 = !DILocation(line: 0, scope: !14468)
!14475 = !DILocation(line: 755, column: 7, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14468, file: !2359, line: 755, column: 6)
!14477 = !DILocation(line: 755, column: 6, scope: !14468)
!14478 = !DILocation(line: 756, column: 3, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14476, file: !2359, line: 755, column: 41)
!14480 = !DILocation(line: 757, column: 2, scope: !14479)
!14481 = !DILocation(line: 758, column: 1, scope: !14468)
!14482 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12833, file: !12833, line: 47, type: !14469, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14483)
!14483 = !{!14484, !14485}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !12833, line: 47, type: !2254)
!14485 = !DILocalVariable(name: "ticks", arg: 2, scope: !14482, file: !12833, line: 47, type: !14399)
!14486 = !DILocation(line: 0, scope: !14482)
!14487 = !DILocation(line: 49, column: 30, scope: !14482)
!14488 = !DILocation(line: 49, column: 2, scope: !14482)
!14489 = !DILocation(line: 50, column: 1, scope: !14482)
!14490 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2359, file: !2359, line: 795, type: !2311, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14491)
!14491 = !{!14492, !14493, !14494, !14496, !14497}
!14492 = !DILocalVariable(name: "timeout", arg: 1, scope: !14490, file: !2359, line: 795, type: !2313)
!14493 = !DILocalVariable(name: "thread", scope: !14490, file: !2359, line: 797, type: !2254)
!14494 = !DILocalVariable(name: "__i", scope: !14495, file: !2359, line: 800, type: !13600)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !2359, line: 800, column: 2)
!14496 = !DILocalVariable(name: "__key", scope: !14495, file: !2359, line: 800, type: !13600)
!14497 = !DILocalVariable(name: "killed", scope: !14498, file: !2359, line: 801, type: !136)
!14498 = distinct !DILexicalBlock(scope: !14499, file: !2359, line: 800, column: 26)
!14499 = distinct !DILexicalBlock(scope: !14495, file: !2359, line: 800, column: 2)
!14500 = !DILocation(line: 0, scope: !14490)
!14501 = !DILocation(line: 797, column: 28, scope: !14490)
!14502 = !DILocation(line: 0, scope: !14495)
!14503 = !DILocation(line: 0, scope: !13608, inlinedAt: !14504)
!14504 = distinct !DILocation(line: 800, column: 2, scope: !14495)
!14505 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14504)
!14507 = !DILocation(line: 0, scope: !13617, inlinedAt: !14506)
!14508 = !DILocation(line: 801, column: 27, scope: !14498)
!14509 = !DILocation(line: 801, column: 32, scope: !14498)
!14510 = !DILocation(line: 801, column: 61, scope: !14498)
!14511 = !DILocation(line: 0, scope: !14498)
!14512 = !DILocation(line: 804, column: 7, scope: !14498)
!14513 = !DILocation(line: 805, column: 21, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14515, file: !2359, line: 805, column: 8)
!14515 = distinct !DILexicalBlock(scope: !14516, file: !2359, line: 804, column: 16)
!14516 = distinct !DILexicalBlock(scope: !14498, file: !2359, line: 804, column: 7)
!14517 = !DILocation(line: 805, column: 31, scope: !14514)
!14518 = !DILocation(line: 805, column: 8, scope: !14515)
!14519 = !DILocation(line: 806, column: 5, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14514, file: !2359, line: 805, column: 40)
!14521 = !DILocation(line: 807, column: 4, scope: !14520)
!14522 = !DILocation(line: 808, column: 4, scope: !14515)
!14523 = !DILocation(line: 809, column: 4, scope: !14515)
!14524 = !DILocation(line: 810, column: 4, scope: !14515)
!14525 = !DILocation(line: 811, column: 3, scope: !14515)
!14526 = !DILocation(line: 0, scope: !13635, inlinedAt: !14527)
!14527 = distinct !DILocation(line: 800, column: 2, scope: !14499)
!14528 = !DILocation(line: 0, scope: !13643, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14527)
!14530 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14529)
!14531 = !DILocation(line: 813, column: 1, scope: !14490)
!14532 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2359, file: !2359, line: 779, type: !13566, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14533)
!14533 = !{!14534}
!14534 = !DILocalVariable(name: "thread", arg: 1, scope: !14532, file: !2359, line: 779, type: !2254)
!14535 = !DILocation(line: 0, scope: !14532)
!14536 = !DILocation(line: 781, column: 2, scope: !14532)
!14537 = !DILocation(line: 782, column: 2, scope: !14532)
!14538 = !DILocation(line: 783, column: 15, scope: !14532)
!14539 = !DILocation(line: 783, column: 25, scope: !14532)
!14540 = !DILocation(line: 784, column: 1, scope: !14532)
!14541 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12441, file: !12441, line: 165, type: !13566, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14542)
!14542 = !{!14543}
!14543 = !DILocalVariable(name: "thread", arg: 1, scope: !14541, file: !12441, line: 165, type: !2254)
!14544 = !DILocation(line: 0, scope: !14541)
!14545 = !DILocation(line: 167, column: 15, scope: !14541)
!14546 = !DILocation(line: 167, column: 28, scope: !14541)
!14547 = !DILocation(line: 168, column: 1, scope: !14541)
!14548 = distinct !DISubprogram(name: "unready_thread", scope: !2359, file: !2359, line: 731, type: !13566, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !2359, line: 731, type: !2254)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 733, column: 6, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14548, file: !2359, line: 733, column: 6)
!14554 = !DILocation(line: 733, column: 6, scope: !14548)
!14555 = !DILocation(line: 0, scope: !13777, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 734, column: 3, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14553, file: !2359, line: 733, column: 34)
!14558 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !14556)
!14559 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14556)
!14560 = !DILocation(line: 0, scope: !13785, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14556)
!14562 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14561)
!14563 = !DILocation(line: 735, column: 2, scope: !14557)
!14564 = !DILocation(line: 736, column: 25, scope: !14548)
!14565 = !DILocation(line: 736, column: 22, scope: !14548)
!14566 = !DILocation(line: 736, column: 2, scope: !14548)
!14567 = !DILocation(line: 737, column: 1, scope: !14548)
!14568 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12441, file: !12441, line: 160, type: !13566, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14569)
!14569 = !{!14570}
!14570 = !DILocalVariable(name: "thread", arg: 1, scope: !14568, file: !12441, line: 160, type: !2254)
!14571 = !DILocation(line: 0, scope: !14568)
!14572 = !DILocation(line: 162, column: 15, scope: !14568)
!14573 = !DILocation(line: 162, column: 28, scope: !14568)
!14574 = !DILocation(line: 163, column: 1, scope: !14568)
!14575 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2359, file: !2359, line: 786, type: !13566, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14576)
!14576 = !{!14577, !14578, !14580}
!14577 = !DILocalVariable(name: "thread", arg: 1, scope: !14575, file: !2359, line: 786, type: !2254)
!14578 = !DILocalVariable(name: "__i", scope: !14579, file: !2359, line: 788, type: !13600)
!14579 = distinct !DILexicalBlock(scope: !14575, file: !2359, line: 788, column: 2)
!14580 = !DILocalVariable(name: "__key", scope: !14579, file: !2359, line: 788, type: !13600)
!14581 = !DILocation(line: 0, scope: !14575)
!14582 = !DILocation(line: 0, scope: !14579)
!14583 = !DILocation(line: 0, scope: !13608, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 788, column: 2, scope: !14579)
!14585 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14584)
!14587 = !DILocation(line: 0, scope: !13617, inlinedAt: !14586)
!14588 = !DILocation(line: 789, column: 3, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !2359, line: 788, column: 26)
!14590 = distinct !DILexicalBlock(scope: !14579, file: !2359, line: 788, column: 2)
!14591 = !DILocation(line: 0, scope: !13635, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 788, column: 2, scope: !14590)
!14593 = !DILocation(line: 0, scope: !13643, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14592)
!14595 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14594)
!14596 = !DILocation(line: 791, column: 1, scope: !14575)
!14597 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2359, file: !2359, line: 816, type: !14598, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14600)
!14598 = !DISubroutineType(types: !14599)
!14599 = !{!107, !162, !2285, !14399}
!14600 = !{!14601, !14602, !14603, !14604, !14605, !14607}
!14601 = !DILocalVariable(name: "key", arg: 1, scope: !14597, file: !2359, line: 816, type: !162)
!14602 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14597, file: !2359, line: 816, type: !2285)
!14603 = !DILocalVariable(name: "timeout", arg: 3, scope: !14597, file: !2359, line: 816, type: !14399)
!14604 = !DILocalVariable(name: "ret", scope: !14597, file: !2359, line: 828, type: !107)
!14605 = !DILocalVariable(name: "__i", scope: !14606, file: !2359, line: 829, type: !13600)
!14606 = distinct !DILexicalBlock(scope: !14597, file: !2359, line: 829, column: 2)
!14607 = !DILocalVariable(name: "__key", scope: !14606, file: !2359, line: 829, type: !13600)
!14608 = !DILocation(line: 0, scope: !14597)
!14609 = !DILocation(line: 823, column: 14, scope: !14597)
!14610 = !DILocation(line: 823, column: 2, scope: !14597)
!14611 = !DILocation(line: 826, column: 20, scope: !14597)
!14612 = !DILocation(line: 826, column: 18, scope: !14597)
!14613 = !DILocation(line: 828, column: 12, scope: !14597)
!14614 = !DILocation(line: 0, scope: !14606)
!14615 = !DILocation(line: 0, scope: !13608, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 829, column: 2, scope: !14606)
!14617 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14618)
!14618 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14616)
!14619 = !DILocation(line: 0, scope: !13617, inlinedAt: !14618)
!14620 = !DILocation(line: 830, column: 7, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !2359, line: 830, column: 7)
!14622 = distinct !DILexicalBlock(scope: !14623, file: !2359, line: 829, column: 26)
!14623 = distinct !DILexicalBlock(scope: !14606, file: !2359, line: 829, column: 2)
!14624 = !DILocation(line: 830, column: 26, scope: !14621)
!14625 = !DILocation(line: 830, column: 23, scope: !14621)
!14626 = !DILocation(line: 830, column: 7, scope: !14622)
!14627 = !DILocation(line: 831, column: 20, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14621, file: !2359, line: 830, column: 36)
!14629 = !DILocation(line: 832, column: 3, scope: !14628)
!14630 = !DILocation(line: 0, scope: !13635, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 829, column: 2, scope: !14623)
!14632 = !DILocation(line: 0, scope: !13643, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14631)
!14634 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14633)
!14635 = !DILocation(line: 834, column: 2, scope: !14597)
!14636 = distinct !DISubprogram(name: "z_pend_curr", scope: !2359, file: !2359, line: 840, type: !14637, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14639)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{!107, !13611, !13600, !2285, !14399}
!14639 = !{!14640, !14641, !14642, !14643}
!14640 = !DILocalVariable(name: "lock", arg: 1, scope: !14636, file: !2359, line: 840, type: !13611)
!14641 = !DILocalVariable(name: "key", arg: 2, scope: !14636, file: !2359, line: 840, type: !13600)
!14642 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14636, file: !2359, line: 841, type: !2285)
!14643 = !DILocalVariable(name: "timeout", arg: 4, scope: !14636, file: !2359, line: 841, type: !14399)
!14644 = !DILocation(line: 0, scope: !14636)
!14645 = !DILocation(line: 844, column: 20, scope: !14636)
!14646 = !DILocation(line: 844, column: 18, scope: !14636)
!14647 = !DILocation(line: 0, scope: !13608, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 856, column: 9, scope: !14636)
!14649 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14650)
!14650 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14648)
!14651 = !DILocation(line: 0, scope: !13617, inlinedAt: !14650)
!14652 = !DILocation(line: 857, column: 14, scope: !14636)
!14653 = !DILocation(line: 857, column: 2, scope: !14636)
!14654 = !DILocation(line: 0, scope: !14219, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 859, column: 9, scope: !14636)
!14656 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !14655)
!14657 = !DILocation(line: 859, column: 2, scope: !14636)
!14658 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2359, file: !2359, line: 862, type: !14659, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!2254, !2285}
!14661 = !{!14662, !14663, !14664, !14666}
!14662 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14658, file: !2359, line: 862, type: !2285)
!14663 = !DILocalVariable(name: "thread", scope: !14658, file: !2359, line: 864, type: !2254)
!14664 = !DILocalVariable(name: "__i", scope: !14665, file: !2359, line: 866, type: !13600)
!14665 = distinct !DILexicalBlock(scope: !14658, file: !2359, line: 866, column: 2)
!14666 = !DILocalVariable(name: "__key", scope: !14665, file: !2359, line: 866, type: !13600)
!14667 = !DILocation(line: 0, scope: !14658)
!14668 = !DILocation(line: 0, scope: !14665)
!14669 = !DILocation(line: 0, scope: !13608, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 866, column: 2, scope: !14665)
!14671 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14672)
!14672 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14670)
!14673 = !DILocation(line: 0, scope: !13617, inlinedAt: !14672)
!14674 = !DILocation(line: 867, column: 12, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14676, file: !2359, line: 866, column: 26)
!14676 = distinct !DILexicalBlock(scope: !14665, file: !2359, line: 866, column: 2)
!14677 = !DILocation(line: 869, column: 14, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2359, line: 869, column: 7)
!14679 = !DILocation(line: 869, column: 7, scope: !14675)
!14680 = !DILocation(line: 870, column: 4, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14678, file: !2359, line: 869, column: 23)
!14682 = !DILocation(line: 871, column: 3, scope: !14681)
!14683 = !DILocation(line: 0, scope: !13635, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 866, column: 2, scope: !14676)
!14685 = !DILocation(line: 0, scope: !13643, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14684)
!14687 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14686)
!14688 = !DILocation(line: 874, column: 2, scope: !14658)
!14689 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2359, file: !2359, line: 877, type: !14659, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14690)
!14690 = !{!14691, !14692, !14693, !14695}
!14691 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14689, file: !2359, line: 877, type: !2285)
!14692 = !DILocalVariable(name: "thread", scope: !14689, file: !2359, line: 879, type: !2254)
!14693 = !DILocalVariable(name: "__i", scope: !14694, file: !2359, line: 881, type: !13600)
!14694 = distinct !DILexicalBlock(scope: !14689, file: !2359, line: 881, column: 2)
!14695 = !DILocalVariable(name: "__key", scope: !14694, file: !2359, line: 881, type: !13600)
!14696 = !DILocation(line: 0, scope: !14689)
!14697 = !DILocation(line: 0, scope: !14694)
!14698 = !DILocation(line: 0, scope: !13608, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 881, column: 2, scope: !14694)
!14700 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14699)
!14702 = !DILocation(line: 0, scope: !13617, inlinedAt: !14701)
!14703 = !DILocation(line: 882, column: 12, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !2359, line: 881, column: 26)
!14705 = distinct !DILexicalBlock(scope: !14694, file: !2359, line: 881, column: 2)
!14706 = !DILocation(line: 884, column: 14, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14704, file: !2359, line: 884, column: 7)
!14708 = !DILocation(line: 884, column: 7, scope: !14704)
!14709 = !DILocation(line: 885, column: 4, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14707, file: !2359, line: 884, column: 23)
!14711 = !DILocation(line: 886, column: 10, scope: !14710)
!14712 = !DILocation(line: 887, column: 3, scope: !14710)
!14713 = !DILocation(line: 0, scope: !13635, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 881, column: 2, scope: !14705)
!14715 = !DILocation(line: 0, scope: !13643, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14714)
!14717 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14716)
!14718 = !DILocation(line: 890, column: 2, scope: !14689)
!14719 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2359, file: !2359, line: 893, type: !13566, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14720)
!14720 = !{!14721}
!14721 = !DILocalVariable(name: "thread", arg: 1, scope: !14719, file: !2359, line: 893, type: !2254)
!14722 = !DILocation(line: 0, scope: !14719)
!14723 = !DILocation(line: 0, scope: !14575, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 895, column: 2, scope: !14719)
!14725 = !DILocation(line: 0, scope: !14579, inlinedAt: !14724)
!14726 = !DILocation(line: 0, scope: !13608, inlinedAt: !14727)
!14727 = distinct !DILocation(line: 788, column: 2, scope: !14579, inlinedAt: !14724)
!14728 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14727)
!14730 = !DILocation(line: 0, scope: !13617, inlinedAt: !14729)
!14731 = !DILocation(line: 789, column: 3, scope: !14589, inlinedAt: !14724)
!14732 = !DILocation(line: 0, scope: !13635, inlinedAt: !14733)
!14733 = distinct !DILocation(line: 788, column: 2, scope: !14590, inlinedAt: !14724)
!14734 = !DILocation(line: 0, scope: !13643, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14733)
!14736 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14735)
!14737 = !DILocation(line: 896, column: 8, scope: !14719)
!14738 = !DILocation(line: 897, column: 1, scope: !14719)
!14739 = distinct !DISubprogram(name: "z_set_prio", scope: !2359, file: !2359, line: 902, type: !13928, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14740)
!14740 = !{!14741, !14742, !14743, !14744, !14746}
!14741 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !2359, line: 902, type: !2254)
!14742 = !DILocalVariable(name: "prio", arg: 2, scope: !14739, file: !2359, line: 902, type: !107)
!14743 = !DILocalVariable(name: "need_sched", scope: !14739, file: !2359, line: 904, type: !136)
!14744 = !DILocalVariable(name: "__i", scope: !14745, file: !2359, line: 906, type: !13600)
!14745 = distinct !DILexicalBlock(scope: !14739, file: !2359, line: 906, column: 2)
!14746 = !DILocalVariable(name: "__key", scope: !14745, file: !2359, line: 906, type: !13600)
!14747 = !DILocation(line: 0, scope: !14739)
!14748 = !DILocation(line: 0, scope: !14745)
!14749 = !DILocation(line: 0, scope: !13608, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 906, column: 2, scope: !14745)
!14751 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14750)
!14753 = !DILocation(line: 0, scope: !13617, inlinedAt: !14752)
!14754 = !DILocation(line: 907, column: 16, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14756, file: !2359, line: 906, column: 26)
!14756 = distinct !DILexicalBlock(scope: !14745, file: !2359, line: 906, column: 2)
!14757 = !DILocation(line: 909, column: 7, scope: !14755)
!14758 = !DILocation(line: 0, scope: !13777, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 912, column: 5, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !2359, line: 911, column: 63)
!14761 = distinct !DILexicalBlock(scope: !14762, file: !2359, line: 911, column: 8)
!14762 = distinct !DILexicalBlock(scope: !14763, file: !2359, line: 909, column: 19)
!14763 = distinct !DILexicalBlock(scope: !14755, file: !2359, line: 909, column: 7)
!14764 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14759)
!14765 = !DILocation(line: 0, scope: !13785, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14759)
!14767 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14766)
!14768 = !DILocation(line: 913, column: 23, scope: !14760)
!14769 = !DILocation(line: 0, scope: !13794, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 914, column: 5, scope: !14760)
!14771 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !14770)
!14772 = !DILocation(line: 0, scope: !13801, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !14770)
!14774 = !DILocation(line: 0, scope: !13808, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !14773)
!14776 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14775)
!14777 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14775)
!14778 = !DILocation(line: 0, scope: !13818, inlinedAt: !14775)
!14779 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14775)
!14780 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14775)
!14781 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14775)
!14782 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14775)
!14783 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14775)
!14784 = distinct !{!14784, !14776, !14785}
!14785 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14775)
!14786 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14775)
!14787 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14775)
!14788 = !DILocation(line: 918, column: 4, scope: !14762)
!14789 = !DILocation(line: 919, column: 3, scope: !14762)
!14790 = !DILocation(line: 920, column: 22, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14763, file: !2359, line: 919, column: 10)
!14792 = !DILocation(line: 0, scope: !13635, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 906, column: 2, scope: !14756)
!14794 = !DILocation(line: 0, scope: !13643, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14793)
!14796 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14795)
!14797 = !DILocation(line: 926, column: 2, scope: !14739)
!14798 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2359, file: !2359, line: 929, type: !14799, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14801)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{null, !2254, !107}
!14801 = !{!14802, !14803, !14804}
!14802 = !DILocalVariable(name: "thread", arg: 1, scope: !14798, file: !2359, line: 929, type: !2254)
!14803 = !DILocalVariable(name: "prio", arg: 2, scope: !14798, file: !2359, line: 929, type: !107)
!14804 = !DILocalVariable(name: "need_sched", scope: !14798, file: !2359, line: 931, type: !136)
!14805 = !DILocation(line: 0, scope: !14798)
!14806 = !DILocation(line: 931, column: 20, scope: !14798)
!14807 = !DILocation(line: 935, column: 17, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14798, file: !2359, line: 935, column: 6)
!14809 = !DILocation(line: 935, column: 20, scope: !14808)
!14810 = !DILocation(line: 935, column: 35, scope: !14808)
!14811 = !DILocation(line: 935, column: 48, scope: !14808)
!14812 = !DILocation(line: 935, column: 6, scope: !14798)
!14813 = !DILocation(line: 936, column: 3, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14808, file: !2359, line: 935, column: 55)
!14815 = !DILocation(line: 937, column: 2, scope: !14814)
!14816 = !DILocation(line: 938, column: 1, scope: !14798)
!14817 = distinct !DISubprogram(name: "k_sched_lock", scope: !2359, file: !2359, line: 987, type: !3107, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14818)
!14818 = !{!14819, !14821}
!14819 = !DILocalVariable(name: "__i", scope: !14820, file: !2359, line: 989, type: !13600)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !2359, line: 989, column: 2)
!14821 = !DILocalVariable(name: "__key", scope: !14820, file: !2359, line: 989, type: !13600)
!14822 = !DILocation(line: 0, scope: !14820)
!14823 = !DILocation(line: 0, scope: !13608, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 989, column: 2, scope: !14820)
!14825 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14824)
!14827 = !DILocation(line: 0, scope: !13617, inlinedAt: !14826)
!14828 = !DILocation(line: 992, column: 3, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14830, file: !2359, line: 989, column: 26)
!14830 = distinct !DILexicalBlock(scope: !14820, file: !2359, line: 989, column: 2)
!14831 = !DILocation(line: 0, scope: !13635, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 989, column: 2, scope: !14830)
!14833 = !DILocation(line: 0, scope: !13643, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14832)
!14835 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14834)
!14836 = !DILocation(line: 994, column: 1, scope: !14817)
!14837 = distinct !DISubprogram(name: "z_sched_lock", scope: !12441, file: !12441, line: 251, type: !3107, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!14838 = !DILocation(line: 256, column: 4, scope: !14837)
!14839 = !DILocation(line: 256, column: 19, scope: !14837)
!14840 = !DILocation(line: 256, column: 2, scope: !14837)
!14841 = !DILocation(line: 258, column: 2, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !12441, line: 258, column: 2)
!14843 = !{i64 2152340458}
!14844 = !DILocation(line: 259, column: 1, scope: !14837)
!14845 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2359, file: !2359, line: 996, type: !3107, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14846)
!14846 = !{!14847, !14849}
!14847 = !DILocalVariable(name: "__i", scope: !14848, file: !2359, line: 998, type: !13600)
!14848 = distinct !DILexicalBlock(scope: !14845, file: !2359, line: 998, column: 2)
!14849 = !DILocalVariable(name: "__key", scope: !14848, file: !2359, line: 998, type: !13600)
!14850 = !DILocation(line: 0, scope: !14848)
!14851 = !DILocation(line: 0, scope: !13608, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 998, column: 2, scope: !14848)
!14853 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14852)
!14855 = !DILocation(line: 0, scope: !13617, inlinedAt: !14854)
!14856 = !DILocation(line: 1002, column: 5, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2359, line: 998, column: 26)
!14858 = distinct !DILexicalBlock(scope: !14848, file: !2359, line: 998, column: 2)
!14859 = !DILocation(line: 1002, column: 20, scope: !14857)
!14860 = !DILocation(line: 1002, column: 3, scope: !14857)
!14861 = !DILocation(line: 1003, column: 3, scope: !14857)
!14862 = !DILocation(line: 0, scope: !13635, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 998, column: 2, scope: !14858)
!14864 = !DILocation(line: 0, scope: !13643, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14863)
!14866 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14865)
!14867 = !DILocation(line: 1011, column: 2, scope: !14845)
!14868 = !DILocation(line: 1012, column: 1, scope: !14845)
!14869 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2359, file: !2359, line: 1014, type: !13916, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!14870 = !DILocation(line: 1028, column: 25, scope: !14869)
!14871 = !DILocation(line: 1028, column: 2, scope: !14869)
!14872 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2359, file: !2359, line: 1155, type: !14873, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14875)
!14873 = !DISubroutineType(types: !14874)
!14874 = !{!136, !2283, !2283}
!14875 = !{!14876, !14877, !14878, !14879, !14880}
!14876 = !DILocalVariable(name: "a", arg: 1, scope: !14872, file: !2359, line: 1155, type: !2283)
!14877 = !DILocalVariable(name: "b", arg: 2, scope: !14872, file: !2359, line: 1155, type: !2283)
!14878 = !DILocalVariable(name: "thread_a", scope: !14872, file: !2359, line: 1157, type: !2254)
!14879 = !DILocalVariable(name: "thread_b", scope: !14872, file: !2359, line: 1157, type: !2254)
!14880 = !DILocalVariable(name: "cmp", scope: !14872, file: !2359, line: 1158, type: !816)
!14881 = !DILocation(line: 0, scope: !14872)
!14882 = !DILocation(line: 1160, column: 13, scope: !14872)
!14883 = !DILocation(line: 1161, column: 13, scope: !14872)
!14884 = !DILocation(line: 1163, column: 8, scope: !14872)
!14885 = !DILocation(line: 1165, column: 10, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14872, file: !2359, line: 1165, column: 6)
!14887 = !DILocation(line: 1165, column: 6, scope: !14872)
!14888 = !DILocation(line: 1167, column: 17, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14886, file: !2359, line: 1167, column: 13)
!14890 = !DILocation(line: 1167, column: 13, scope: !14886)
!14891 = !DILocation(line: 1170, column: 25, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14889, file: !2359, line: 1169, column: 9)
!14893 = !DILocation(line: 1170, column: 52, scope: !14892)
!14894 = !DILocation(line: 1170, column: 35, scope: !14892)
!14895 = !DILocation(line: 1170, column: 3, scope: !14892)
!14896 = !DILocation(line: 0, scope: !14886)
!14897 = !DILocation(line: 1173, column: 1, scope: !14872)
!14898 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2359, file: !2359, line: 1175, type: !14899, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14914)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{null, !14901, !2254}
!14901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14902, size: 32)
!14902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14903, line: 37, size: 128, elements: !14904)
!14903 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14904 = !{!14905, !14913}
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14902, file: !14903, line: 38, baseType: !14906, size: 96)
!14906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !397, line: 83, size: 96, elements: !14907)
!14907 = !{!14908, !14909, !14912}
!14908 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14906, file: !397, line: 84, baseType: !2283, size: 32)
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14906, file: !397, line: 85, baseType: !14910, size: 32, offset: 32)
!14910 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !397, line: 81, baseType: !14911)
!14911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14873, size: 32)
!14912 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14906, file: !397, line: 86, baseType: !107, size: 32, offset: 64)
!14913 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14902, file: !14903, line: 39, baseType: !107, size: 32, offset: 96)
!14914 = !{!14915, !14916, !14917, !14918, !14927}
!14915 = !DILocalVariable(name: "pq", arg: 1, scope: !14898, file: !2359, line: 1175, type: !14901)
!14916 = !DILocalVariable(name: "thread", arg: 2, scope: !14898, file: !2359, line: 1175, type: !2254)
!14917 = !DILocalVariable(name: "t", scope: !14898, file: !2359, line: 1177, type: !2254)
!14918 = !DILocalVariable(name: "__f", scope: !14919, file: !2359, line: 1190, type: !14922)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2359, line: 1190, column: 3)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !2359, line: 1189, column: 27)
!14921 = distinct !DILexicalBlock(scope: !14898, file: !2359, line: 1189, column: 6)
!14922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !397, line: 155, size: 96, elements: !14923)
!14923 = !{!14924, !14925, !14926}
!14924 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14922, file: !397, line: 156, baseType: !2354, size: 32)
!14925 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14922, file: !397, line: 157, baseType: !182, size: 32, offset: 32)
!14926 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14922, file: !397, line: 158, baseType: !816, size: 32, offset: 64)
!14927 = !DILocalVariable(name: "n", scope: !14928, file: !2359, line: 1190, type: !2283)
!14928 = distinct !DILexicalBlock(scope: !14929, file: !2359, line: 1190, column: 3)
!14929 = distinct !DILexicalBlock(scope: !14919, file: !2359, line: 1190, column: 3)
!14930 = !DILocation(line: 0, scope: !14898)
!14931 = !DILocation(line: 1181, column: 31, scope: !14898)
!14932 = !DILocation(line: 1181, column: 45, scope: !14898)
!14933 = !DILocation(line: 1181, column: 15, scope: !14898)
!14934 = !DILocation(line: 1181, column: 25, scope: !14898)
!14935 = !DILocation(line: 1189, column: 11, scope: !14921)
!14936 = !DILocation(line: 1189, column: 7, scope: !14921)
!14937 = !DILocation(line: 1189, column: 6, scope: !14898)
!14938 = !DILocation(line: 1190, column: 3, scope: !14919)
!14939 = !DILocation(line: 1190, column: 3, scope: !14928)
!14940 = !DILocation(line: 0, scope: !14928)
!14941 = !DILocation(line: 1190, column: 3, scope: !14929)
!14942 = !DILocation(line: 1193, column: 2, scope: !14920)
!14943 = !DILocation(line: 1191, column: 42, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14929, file: !2359, line: 1190, column: 54)
!14945 = !DILocation(line: 1191, column: 12, scope: !14944)
!14946 = !DILocation(line: 1191, column: 22, scope: !14944)
!14947 = distinct !{!14947, !14938, !14948}
!14948 = !DILocation(line: 1192, column: 3, scope: !14919)
!14949 = !DILocation(line: 1195, column: 17, scope: !14898)
!14950 = !DILocation(line: 1195, column: 37, scope: !14898)
!14951 = !DILocation(line: 1195, column: 2, scope: !14898)
!14952 = !DILocation(line: 1196, column: 1, scope: !14898)
!14953 = !DISubprogram(name: "z_rb_foreach_next", scope: !397, file: !397, line: 176, type: !14954, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14954 = !DISubroutineType(types: !14955)
!14955 = !{!2283, !14956, !14957}
!14956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14906, size: 32)
!14957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14922, size: 32)
!14958 = !DISubprogram(name: "rb_insert", scope: !397, file: !397, line: 105, type: !14959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{null, !14956, !2283}
!14961 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2359, file: !2359, line: 1198, type: !14899, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14962)
!14962 = !{!14963, !14964}
!14963 = !DILocalVariable(name: "pq", arg: 1, scope: !14961, file: !2359, line: 1198, type: !14901)
!14964 = !DILocalVariable(name: "thread", arg: 2, scope: !14961, file: !2359, line: 1198, type: !2254)
!14965 = !DILocation(line: 0, scope: !14961)
!14966 = !DILocation(line: 1202, column: 17, scope: !14961)
!14967 = !DILocation(line: 1202, column: 37, scope: !14961)
!14968 = !DILocation(line: 1202, column: 2, scope: !14961)
!14969 = !DILocation(line: 1204, column: 16, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14961, file: !2359, line: 1204, column: 6)
!14971 = !DILocation(line: 1204, column: 7, scope: !14970)
!14972 = !DILocation(line: 1204, column: 6, scope: !14961)
!14973 = !DILocation(line: 1205, column: 7, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14970, file: !2359, line: 1204, column: 22)
!14975 = !DILocation(line: 1205, column: 22, scope: !14974)
!14976 = !DILocation(line: 1206, column: 2, scope: !14974)
!14977 = !DILocation(line: 1207, column: 1, scope: !14961)
!14978 = !DISubprogram(name: "rb_remove", scope: !397, file: !397, line: 110, type: !14959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14979 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2359, file: !2359, line: 1209, type: !14980, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14982)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!2254, !14901}
!14982 = !{!14983, !14984, !14985}
!14983 = !DILocalVariable(name: "pq", arg: 1, scope: !14979, file: !2359, line: 1209, type: !14901)
!14984 = !DILocalVariable(name: "thread", scope: !14979, file: !2359, line: 1211, type: !2254)
!14985 = !DILocalVariable(name: "n", scope: !14979, file: !2359, line: 1212, type: !2283)
!14986 = !DILocation(line: 0, scope: !14979)
!14987 = !DILocation(line: 1212, column: 37, scope: !14979)
!14988 = !DILocation(line: 1212, column: 21, scope: !14979)
!14989 = !DILocation(line: 1217, column: 2, scope: !14979)
!14990 = distinct !DISubprogram(name: "rb_get_min", scope: !397, file: !397, line: 115, type: !14991, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{!2283, !14956}
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "tree", arg: 1, scope: !14990, file: !397, line: 115, type: !14956)
!14995 = !DILocation(line: 0, scope: !14990)
!14996 = !DILocation(line: 117, column: 9, scope: !14990)
!14997 = !DILocation(line: 117, column: 2, scope: !14990)
!14998 = !DISubprogram(name: "z_rb_get_minmax", scope: !397, file: !397, line: 100, type: !14999, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{!2283, !14956, !133}
!15001 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2359, file: !2359, line: 1246, type: !15002, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15010)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{!2254, !15004}
!15004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15005, size: 32)
!15005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14903, line: 53, size: 2080, elements: !15006)
!15006 = !{!15007, !15009}
!15007 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15005, file: !14903, line: 54, baseType: !15008, size: 2048)
!15008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2290, size: 2048, elements: !219)
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15005, file: !14903, line: 55, baseType: !32, size: 32, offset: 2048)
!15010 = !{!15011, !15012, !15013, !15014}
!15011 = !DILocalVariable(name: "pq", arg: 1, scope: !15001, file: !2359, line: 1246, type: !15004)
!15012 = !DILocalVariable(name: "thread", scope: !15001, file: !2359, line: 1252, type: !2254)
!15013 = !DILocalVariable(name: "l", scope: !15001, file: !2359, line: 1253, type: !13811)
!15014 = !DILocalVariable(name: "n", scope: !15001, file: !2359, line: 1254, type: !2355)
!15015 = !DILocation(line: 0, scope: !15001)
!15016 = !DILocation(line: 1248, column: 11, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15001, file: !2359, line: 1248, column: 6)
!15018 = !DILocation(line: 1248, column: 7, scope: !15017)
!15019 = !DILocation(line: 1248, column: 6, scope: !15001)
!15020 = !DILocation(line: 1253, column: 31, scope: !15001)
!15021 = !DILocation(line: 1253, column: 20, scope: !15001)
!15022 = !DILocation(line: 1254, column: 19, scope: !15001)
!15023 = !DILocation(line: 1260, column: 1, scope: !15001)
!15024 = distinct !DISubprogram(name: "z_unpend_all", scope: !2359, file: !2359, line: 1262, type: !15025, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15027)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{!107, !2285}
!15027 = !{!15028, !15029, !15030}
!15028 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15024, file: !2359, line: 1262, type: !2285)
!15029 = !DILocalVariable(name: "need_sched", scope: !15024, file: !2359, line: 1264, type: !107)
!15030 = !DILocalVariable(name: "thread", scope: !15024, file: !2359, line: 1265, type: !2254)
!15031 = !DILocation(line: 0, scope: !15024)
!15032 = !DILocation(line: 1267, column: 19, scope: !15024)
!15033 = !DILocation(line: 1267, column: 41, scope: !15024)
!15034 = !DILocation(line: 1267, column: 2, scope: !15024)
!15035 = !DILocation(line: 1268, column: 3, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15024, file: !2359, line: 1267, column: 50)
!15037 = !DILocation(line: 1269, column: 3, scope: !15036)
!15038 = distinct !{!15038, !15034, !15039}
!15039 = !DILocation(line: 1271, column: 2, scope: !15024)
!15040 = !DILocation(line: 1273, column: 2, scope: !15024)
!15041 = distinct !DISubprogram(name: "z_waitq_head", scope: !12765, file: !12765, line: 52, type: !14659, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15042)
!15042 = !{!15043}
!15043 = !DILocalVariable(name: "w", arg: 1, scope: !15041, file: !12765, line: 52, type: !2285)
!15044 = !DILocation(line: 0, scope: !15041)
!15045 = !DILocation(line: 54, column: 52, scope: !15041)
!15046 = !DILocation(line: 54, column: 28, scope: !15041)
!15047 = !DILocation(line: 54, column: 9, scope: !15041)
!15048 = !DILocation(line: 54, column: 2, scope: !15041)
!15049 = distinct !DISubprogram(name: "init_ready_q", scope: !2359, file: !2359, line: 1276, type: !15050, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15057)
!15050 = !DISubroutineType(types: !15051)
!15051 = !{null, !15052}
!15052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15053, size: 32)
!15053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !15054)
!15054 = !{!15055, !15056}
!15055 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15053, file: !228, line: 86, baseType: !2254, size: 32)
!15056 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15053, file: !228, line: 90, baseType: !2290, size: 64, offset: 32)
!15057 = !{!15058}
!15058 = !DILocalVariable(name: "rq", arg: 1, scope: !15049, file: !2359, line: 1276, type: !15052)
!15059 = !DILocation(line: 0, scope: !15049)
!15060 = !DILocation(line: 1289, column: 22, scope: !15049)
!15061 = !DILocation(line: 1289, column: 2, scope: !15049)
!15062 = !DILocation(line: 1291, column: 1, scope: !15049)
!15063 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15064, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15066)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{null, !13811}
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "list", arg: 1, scope: !15063, file: !233, line: 197, type: !13811)
!15068 = !DILocation(line: 0, scope: !15063)
!15069 = !DILocation(line: 199, column: 8, scope: !15063)
!15070 = !DILocation(line: 199, column: 13, scope: !15063)
!15071 = !DILocation(line: 200, column: 8, scope: !15063)
!15072 = !DILocation(line: 200, column: 13, scope: !15063)
!15073 = !DILocation(line: 201, column: 1, scope: !15063)
!15074 = distinct !DISubprogram(name: "z_sched_init", scope: !2359, file: !2359, line: 1293, type: !3107, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!15075 = !DILocation(line: 1302, column: 2, scope: !15074)
!15076 = !DILocation(line: 1306, column: 2, scope: !15074)
!15077 = !DILocation(line: 1309, column: 1, scope: !15074)
!15078 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2359, file: !2359, line: 1311, type: !15079, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15082)
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!107, !15081}
!15081 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !372, line: 347, baseType: !2254)
!15082 = !{!15083}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15078, file: !2359, line: 1311, type: !15081)
!15084 = !DILocation(line: 0, scope: !15078)
!15085 = !DILocation(line: 1313, column: 22, scope: !15078)
!15086 = !DILocation(line: 1313, column: 9, scope: !15078)
!15087 = !DILocation(line: 1313, column: 2, scope: !15078)
!15088 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2359, file: !2359, line: 1325, type: !15089, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15091)
!15089 = !DISubroutineType(types: !15090)
!15090 = !{null, !15081, !107}
!15091 = !{!15092, !15093, !15094}
!15092 = !DILocalVariable(name: "thread", arg: 1, scope: !15088, file: !2359, line: 1325, type: !15081)
!15093 = !DILocalVariable(name: "prio", arg: 2, scope: !15088, file: !2359, line: 1325, type: !107)
!15094 = !DILocalVariable(name: "th", scope: !15088, file: !2359, line: 1334, type: !2254)
!15095 = !DILocation(line: 0, scope: !15088)
!15096 = !DILocation(line: 1336, column: 2, scope: !15088)
!15097 = !DILocation(line: 1337, column: 1, scope: !15088)
!15098 = distinct !DISubprogram(name: "k_can_yield", scope: !2359, file: !2359, line: 1384, type: !6815, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!15099 = !DILocation(line: 1386, column: 11, scope: !15098)
!15100 = !DILocation(line: 1386, column: 29, scope: !15098)
!15101 = !DILocation(line: 1386, column: 32, scope: !15098)
!15102 = !DILocation(line: 1386, column: 46, scope: !15098)
!15103 = !DILocation(line: 1387, column: 28, scope: !15098)
!15104 = !DILocation(line: 1387, column: 4, scope: !15098)
!15105 = !DILocation(line: 1386, column: 2, scope: !15098)
!15106 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6815, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!15107 = !DILocation(line: 993, column: 10, scope: !15106)
!15108 = !DILocation(line: 993, column: 2, scope: !15106)
!15109 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2359, file: !2359, line: 1390, type: !3107, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15110)
!15110 = !{!15111}
!15111 = !DILocalVariable(name: "key", scope: !15109, file: !2359, line: 1396, type: !13600)
!15112 = !DILocation(line: 0, scope: !13608, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 1396, column: 25, scope: !15109)
!15114 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15113)
!15116 = !DILocation(line: 0, scope: !13617, inlinedAt: !15115)
!15117 = !DILocation(line: 0, scope: !15109)
!15118 = !DILocation(line: 1400, column: 18, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15120, file: !2359, line: 1399, column: 36)
!15120 = distinct !DILexicalBlock(scope: !15109, file: !2359, line: 1398, column: 6)
!15121 = !DILocation(line: 0, scope: !13777, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 1400, column: 3, scope: !15119)
!15123 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !15122)
!15124 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !15122)
!15125 = !DILocation(line: 0, scope: !13785, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !15122)
!15127 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !15126)
!15128 = !DILocation(line: 1402, column: 15, scope: !15109)
!15129 = !DILocation(line: 0, scope: !13794, inlinedAt: !15130)
!15130 = distinct !DILocation(line: 1402, column: 2, scope: !15109)
!15131 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !15130)
!15132 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !15130)
!15133 = !DILocation(line: 0, scope: !13801, inlinedAt: !15134)
!15134 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !15130)
!15135 = !DILocation(line: 0, scope: !13808, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !15134)
!15137 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !15136)
!15138 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !15136)
!15139 = !DILocation(line: 0, scope: !13818, inlinedAt: !15136)
!15140 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !15136)
!15141 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !15136)
!15142 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !15136)
!15143 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !15136)
!15144 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !15136)
!15145 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !15136)
!15146 = distinct !{!15146, !15137, !15147}
!15147 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !15136)
!15148 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !15136)
!15149 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !15136)
!15150 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !15136)
!15151 = !DILocation(line: 1403, column: 2, scope: !15109)
!15152 = !DILocation(line: 0, scope: !14219, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 1404, column: 2, scope: !15109)
!15154 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15153)
!15155 = !DILocation(line: 1405, column: 1, scope: !15109)
!15156 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2359, file: !2359, line: 1459, type: !15157, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!816, !14399}
!15159 = !{!15160, !15161, !15162}
!15160 = !DILocalVariable(name: "timeout", arg: 1, scope: !15156, file: !2359, line: 1459, type: !14399)
!15161 = !DILocalVariable(name: "ticks", scope: !15156, file: !2359, line: 1461, type: !103)
!15162 = !DILocalVariable(name: "ret", scope: !15156, file: !2359, line: 1480, type: !816)
!15163 = !DILocation(line: 0, scope: !15156)
!15164 = !DILocation(line: 1468, column: 6, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15156, file: !2359, line: 1468, column: 6)
!15166 = !DILocation(line: 1468, column: 6, scope: !15156)
!15167 = !DILocation(line: 1469, column: 20, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15165, file: !2359, line: 1468, column: 40)
!15169 = !DILocation(line: 1469, column: 3, scope: !15168)
!15170 = !DILocation(line: 1473, column: 3, scope: !15168)
!15171 = !DILocation(line: 1478, column: 10, scope: !15156)
!15172 = !DILocation(line: 1480, column: 16, scope: !15156)
!15173 = !DILocation(line: 1485, column: 1, scope: !15156)
!15174 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3292, file: !3292, line: 310, type: !15175, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15177)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{null, !15081}
!15177 = !{!15178}
!15178 = !DILocalVariable(name: "thread", arg: 1, scope: !15174, file: !3292, line: 310, type: !15081)
!15179 = !DILocation(line: 0, scope: !15174)
!15180 = !DILocation(line: 319, column: 2, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15174, file: !3292, line: 319, column: 2)
!15182 = !{i64 2152258847}
!15183 = !DILocation(line: 320, column: 2, scope: !15174)
!15184 = !DILocation(line: 321, column: 1, scope: !15174)
!15185 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2359, file: !2359, line: 1415, type: !15186, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15188)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{!816, !103}
!15188 = !{!15189, !15190, !15191, !15192}
!15189 = !DILocalVariable(name: "ticks", arg: 1, scope: !15185, file: !2359, line: 1415, type: !103)
!15190 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15185, file: !2359, line: 1418, type: !162)
!15191 = !DILocalVariable(name: "timeout", scope: !15185, file: !2359, line: 1430, type: !14399)
!15192 = !DILocalVariable(name: "key", scope: !15185, file: !2359, line: 1437, type: !13600)
!15193 = !DILocation(line: 0, scope: !15185)
!15194 = !DILocation(line: 1425, column: 12, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15185, file: !2359, line: 1425, column: 6)
!15196 = !DILocation(line: 1425, column: 6, scope: !15185)
!15197 = !DILocation(line: 1426, column: 3, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15195, file: !2359, line: 1425, column: 18)
!15199 = !DILocation(line: 1427, column: 3, scope: !15198)
!15200 = !DILocation(line: 1431, column: 24, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15185, file: !2359, line: 1431, column: 6)
!15202 = !DILocation(line: 1431, column: 6, scope: !15185)
!15203 = !DILocation(line: 1432, column: 35, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15201, file: !2359, line: 1431, column: 30)
!15205 = !DILocation(line: 1432, column: 27, scope: !15204)
!15206 = !DILocation(line: 1433, column: 2, scope: !15204)
!15207 = !DILocation(line: 1434, column: 27, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15201, file: !2359, line: 1433, column: 9)
!15209 = !DILocation(line: 0, scope: !15201)
!15210 = !DILocation(line: 0, scope: !13608, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 1437, column: 25, scope: !15185)
!15212 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15211)
!15214 = !DILocation(line: 0, scope: !13617, inlinedAt: !15213)
!15215 = !DILocation(line: 1440, column: 20, scope: !15185)
!15216 = !DILocation(line: 1440, column: 18, scope: !15185)
!15217 = !DILocation(line: 1442, column: 2, scope: !15185)
!15218 = !DILocation(line: 1443, column: 23, scope: !15185)
!15219 = !DILocation(line: 1443, column: 2, scope: !15185)
!15220 = !DILocation(line: 1444, column: 29, scope: !15185)
!15221 = !DILocation(line: 1444, column: 2, scope: !15185)
!15222 = !DILocation(line: 0, scope: !14219, inlinedAt: !15223)
!15223 = distinct !DILocation(line: 1446, column: 8, scope: !15185)
!15224 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15223)
!15225 = !DILocation(line: 1450, column: 10, scope: !15185)
!15226 = !DILocation(line: 1450, column: 45, scope: !15185)
!15227 = !DILocation(line: 1450, column: 43, scope: !15185)
!15228 = !DILocation(line: 1451, column: 6, scope: !15185)
!15229 = !DILocation(line: 1457, column: 1, scope: !15185)
!15230 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13000, file: !13000, line: 1103, type: !13001, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15231)
!15231 = !{!15232}
!15232 = !DILocalVariable(name: "t", arg: 1, scope: !15230, file: !13000, line: 1103, type: !2233)
!15233 = !DILocation(line: 0, scope: !15230)
!15234 = !DILocation(line: 0, scope: !13655, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 1106, column: 9, scope: !15230)
!15236 = !DILocation(line: 139, column: 13, scope: !15237, inlinedAt: !15235)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !13000, line: 138, column: 10)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !13000, line: 136, column: 7)
!15239 = distinct !DILexicalBlock(scope: !13676, file: !13000, line: 134, column: 17)
!15240 = !DILocation(line: 1106, column: 2, scope: !15230)
!15241 = distinct !DISubprogram(name: "k_yield", scope: !3292, file: !3292, line: 140, type: !3107, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!15242 = !DILocation(line: 148, column: 2, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15241, file: !3292, line: 148, column: 2)
!15244 = !{i64 2152258167}
!15245 = !DILocation(line: 149, column: 2, scope: !15241)
!15246 = !DILocation(line: 150, column: 1, scope: !15241)
!15247 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2359, file: !2359, line: 1495, type: !15248, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15250)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{!816, !107}
!15250 = !{!15251, !15252}
!15251 = !DILocalVariable(name: "us", arg: 1, scope: !15247, file: !2359, line: 1495, type: !107)
!15252 = !DILocalVariable(name: "ticks", scope: !15247, file: !2359, line: 1497, type: !816)
!15253 = !DILocation(line: 0, scope: !15247)
!15254 = !DILocation(line: 1501, column: 31, scope: !15247)
!15255 = !DILocation(line: 1501, column: 10, scope: !15247)
!15256 = !DILocation(line: 1502, column: 23, scope: !15247)
!15257 = !DILocation(line: 1502, column: 10, scope: !15247)
!15258 = !DILocation(line: 1506, column: 31, scope: !15247)
!15259 = !DILocation(line: 1506, column: 9, scope: !15247)
!15260 = !DILocation(line: 1506, column: 2, scope: !15247)
!15261 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13000, file: !13000, line: 571, type: !13001, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "t", arg: 1, scope: !15261, file: !13000, line: 571, type: !2233)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 0, scope: !13655, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 574, column: 9, scope: !15261)
!15267 = !DILocation(line: 135, column: 5, scope: !15239, inlinedAt: !15266)
!15268 = !DILocation(line: 139, column: 13, scope: !15237, inlinedAt: !15266)
!15269 = !DILocation(line: 574, column: 2, scope: !15261)
!15270 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13000, file: !13000, line: 1187, type: !13001, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15271)
!15271 = !{!15272}
!15272 = !DILocalVariable(name: "t", arg: 1, scope: !15270, file: !13000, line: 1187, type: !2233)
!15273 = !DILocation(line: 0, scope: !15270)
!15274 = !DILocation(line: 0, scope: !13655, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 1190, column: 9, scope: !15270)
!15276 = !DILocation(line: 145, column: 13, scope: !15277, inlinedAt: !15275)
!15277 = distinct !DILexicalBlock(scope: !13673, file: !13000, line: 144, column: 10)
!15278 = !DILocation(line: 1190, column: 2, scope: !15270)
!15279 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2359, file: !2359, line: 1517, type: !15175, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15280)
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2359, line: 1517, type: !15081)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 1521, column: 6, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15279, file: !2359, line: 1521, column: 6)
!15285 = !DILocation(line: 1521, column: 6, scope: !15279)
!15286 = !DILocation(line: 1525, column: 6, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15279, file: !2359, line: 1525, column: 6)
!15288 = !DILocation(line: 1525, column: 37, scope: !15287)
!15289 = !DILocation(line: 1525, column: 6, scope: !15279)
!15290 = !DILocation(line: 1527, column: 20, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15292, file: !2359, line: 1527, column: 7)
!15292 = distinct !DILexicalBlock(scope: !15287, file: !2359, line: 1525, column: 42)
!15293 = !DILocation(line: 1527, column: 33, scope: !15291)
!15294 = !DILocation(line: 1527, column: 7, scope: !15292)
!15295 = !DILocation(line: 1532, column: 2, scope: !15279)
!15296 = !DILocation(line: 1533, column: 2, scope: !15279)
!15297 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 1537, column: 7, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15279, file: !2359, line: 1537, column: 6)
!15301 = !DILocation(line: 0, scope: !14252, inlinedAt: !15298)
!15302 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15299)
!15303 = !DILocation(line: 1537, column: 6, scope: !15279)
!15304 = !DILocation(line: 1538, column: 3, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15300, file: !2359, line: 1537, column: 25)
!15306 = !DILocation(line: 1539, column: 2, scope: !15305)
!15307 = !DILocation(line: 1540, column: 1, scope: !15279)
!15308 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12441, file: !12441, line: 101, type: !13726, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15309)
!15309 = !{!15310}
!15310 = !DILocalVariable(name: "thread", arg: 1, scope: !15308, file: !12441, line: 101, type: !2254)
!15311 = !DILocation(line: 0, scope: !15308)
!15312 = !DILocation(line: 103, column: 23, scope: !15308)
!15313 = !DILocation(line: 103, column: 36, scope: !15308)
!15314 = !DILocation(line: 103, column: 55, scope: !15308)
!15315 = !DILocation(line: 103, column: 2, scope: !15308)
!15316 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2359, file: !2359, line: 1567, type: !15317, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15319)
!15317 = !DISubroutineType(types: !15318)
!15318 = !{!15081}
!15319 = !{!15320}
!15320 = !DILocalVariable(name: "ret", scope: !15316, file: !2359, line: 1577, type: !15081)
!15321 = !DILocation(line: 1577, column: 30, scope: !15316)
!15322 = !DILocation(line: 0, scope: !15316)
!15323 = !DILocation(line: 1582, column: 2, scope: !15316)
!15324 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2359, file: !2359, line: 1593, type: !7089, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !250)
!15325 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 1595, column: 10, scope: !15324)
!15328 = !DILocation(line: 0, scope: !14252, inlinedAt: !15326)
!15329 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15327)
!15330 = !DILocation(line: 1595, column: 27, scope: !15324)
!15331 = !DILocation(line: 1595, column: 41, scope: !15324)
!15332 = !DILocation(line: 1595, column: 30, scope: !15324)
!15333 = !DILocation(line: 1595, column: 2, scope: !15324)
!15334 = distinct !DISubprogram(name: "z_thread_abort", scope: !2359, file: !2359, line: 1725, type: !13566, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15335)
!15335 = !{!15336, !15337}
!15336 = !DILocalVariable(name: "thread", arg: 1, scope: !15334, file: !2359, line: 1725, type: !2254)
!15337 = !DILocalVariable(name: "key", scope: !15334, file: !2359, line: 1727, type: !13600)
!15338 = !DILocation(line: 0, scope: !15334)
!15339 = !DILocation(line: 0, scope: !13608, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 1727, column: 25, scope: !15334)
!15341 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15340)
!15343 = !DILocation(line: 0, scope: !13617, inlinedAt: !15342)
!15344 = !DILocation(line: 1729, column: 20, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15334, file: !2359, line: 1729, column: 6)
!15346 = !DILocation(line: 1729, column: 33, scope: !15345)
!15347 = !DILocation(line: 1729, column: 48, scope: !15345)
!15348 = !DILocation(line: 1729, column: 6, scope: !15334)
!15349 = !DILocation(line: 0, scope: !13635, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 1730, column: 3, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15345, file: !2359, line: 1729, column: 54)
!15352 = !DILocation(line: 0, scope: !13643, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15350)
!15354 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15353)
!15355 = !DILocation(line: 1732, column: 3, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15351, file: !2359, line: 1732, column: 3)
!15357 = !{i64 2152995577, i64 2152995593, i64 2152995619, i64 2152995647, i64 2152995667}
!15358 = !DILocation(line: 1733, column: 3, scope: !15351)
!15359 = !DILocation(line: 1736, column: 20, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15334, file: !2359, line: 1736, column: 6)
!15361 = !DILocation(line: 1736, column: 33, scope: !15360)
!15362 = !DILocation(line: 1736, column: 49, scope: !15360)
!15363 = !DILocation(line: 1736, column: 6, scope: !15334)
!15364 = !DILocation(line: 0, scope: !13635, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 1737, column: 3, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15360, file: !2359, line: 1736, column: 56)
!15367 = !DILocation(line: 0, scope: !13643, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15365)
!15369 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15368)
!15370 = !DILocation(line: 1738, column: 3, scope: !15366)
!15371 = !DILocation(line: 1775, column: 2, scope: !15334)
!15372 = !DILocation(line: 1776, column: 16, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15334, file: !2359, line: 1776, column: 6)
!15374 = !DILocation(line: 1776, column: 13, scope: !15373)
!15375 = !DILocation(line: 1776, column: 25, scope: !15373)
!15376 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 1776, column: 29, scope: !15373)
!15379 = !DILocation(line: 0, scope: !14252, inlinedAt: !15377)
!15380 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15378)
!15381 = !DILocation(line: 1776, column: 6, scope: !15334)
!15382 = !DILocation(line: 0, scope: !14219, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 1777, column: 3, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15373, file: !2359, line: 1776, column: 47)
!15385 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15383)
!15386 = !DILocation(line: 1779, column: 2, scope: !15384)
!15387 = !DILocation(line: 0, scope: !13635, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 1780, column: 2, scope: !15334)
!15389 = !DILocation(line: 0, scope: !13643, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15388)
!15391 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15390)
!15392 = !DILocation(line: 1781, column: 1, scope: !15334)
!15393 = distinct !DISubprogram(name: "end_thread", scope: !2359, file: !2359, line: 1690, type: !13566, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15394)
!15394 = !{!15395}
!15395 = !DILocalVariable(name: "thread", arg: 1, scope: !15393, file: !2359, line: 1690, type: !2254)
!15396 = !DILocation(line: 0, scope: !15393)
!15397 = !DILocation(line: 1695, column: 20, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !2359, line: 1695, column: 6)
!15399 = !DILocation(line: 1695, column: 33, scope: !15398)
!15400 = !DILocation(line: 1695, column: 49, scope: !15398)
!15401 = !DILocation(line: 1695, column: 6, scope: !15393)
!15402 = !DILocation(line: 1697, column: 29, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15398, file: !2359, line: 1695, column: 56)
!15404 = !DILocation(line: 1698, column: 7, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15403, file: !2359, line: 1698, column: 7)
!15406 = !DILocation(line: 1698, column: 7, scope: !15403)
!15407 = !DILocation(line: 0, scope: !13777, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 1699, column: 4, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15405, file: !2359, line: 1698, column: 35)
!15410 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !15408)
!15411 = !DILocation(line: 0, scope: !13785, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !15408)
!15413 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !15412)
!15414 = !DILocation(line: 1700, column: 3, scope: !15409)
!15415 = !DILocation(line: 1701, column: 20, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15403, file: !2359, line: 1701, column: 7)
!15417 = !DILocation(line: 1701, column: 30, scope: !15416)
!15418 = !DILocation(line: 1701, column: 7, scope: !15403)
!15419 = !DILocation(line: 1702, column: 4, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15416, file: !2359, line: 1701, column: 39)
!15421 = !DILocation(line: 1703, column: 3, scope: !15420)
!15422 = !DILocation(line: 1704, column: 9, scope: !15403)
!15423 = !DILocation(line: 1705, column: 23, scope: !15403)
!15424 = !DILocation(line: 1705, column: 3, scope: !15403)
!15425 = !DILocation(line: 1706, column: 3, scope: !15403)
!15426 = !DILocation(line: 1722, column: 2, scope: !15403)
!15427 = !DILocation(line: 1723, column: 1, scope: !15393)
!15428 = distinct !DISubprogram(name: "unpend_all", scope: !2359, file: !2359, line: 1674, type: !15429, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15431)
!15429 = !DISubroutineType(types: !15430)
!15430 = !{null, !2285}
!15431 = !{!15432, !15433}
!15432 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15428, file: !2359, line: 1674, type: !2285)
!15433 = !DILocalVariable(name: "thread", scope: !15428, file: !2359, line: 1676, type: !2254)
!15434 = !DILocation(line: 0, scope: !15428)
!15435 = !DILocation(line: 1678, column: 19, scope: !15428)
!15436 = !DILocation(line: 1678, column: 41, scope: !15428)
!15437 = !DILocation(line: 1678, column: 2, scope: !15428)
!15438 = !DILocation(line: 1679, column: 3, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15428, file: !2359, line: 1678, column: 50)
!15440 = !DILocation(line: 1680, column: 9, scope: !15439)
!15441 = !DILocalVariable(name: "thread", arg: 1, scope: !15442, file: !12461, line: 65, type: !2254)
!15442 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12461, file: !12461, line: 65, type: !15443, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15445)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{null, !2254, !32}
!15445 = !{!15441, !15446}
!15446 = !DILocalVariable(name: "value", arg: 2, scope: !15442, file: !12461, line: 65, type: !32)
!15447 = !DILocation(line: 0, scope: !15442, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 1681, column: 3, scope: !15439)
!15449 = !DILocation(line: 67, column: 15, scope: !15442, inlinedAt: !15448)
!15450 = !DILocation(line: 67, column: 33, scope: !15442, inlinedAt: !15448)
!15451 = !DILocation(line: 1682, column: 3, scope: !15439)
!15452 = distinct !{!15452, !15437, !15453}
!15453 = !DILocation(line: 1683, column: 2, scope: !15428)
!15454 = !DILocation(line: 1684, column: 1, scope: !15428)
!15455 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2359, file: !2359, line: 1794, type: !15456, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15458)
!15456 = !DISubroutineType(types: !15457)
!15457 = !{!107, !2254, !14399}
!15458 = !{!15459, !15460, !15461, !15462}
!15459 = !DILocalVariable(name: "thread", arg: 1, scope: !15455, file: !2359, line: 1794, type: !2254)
!15460 = !DILocalVariable(name: "timeout", arg: 2, scope: !15455, file: !2359, line: 1794, type: !14399)
!15461 = !DILocalVariable(name: "key", scope: !15455, file: !2359, line: 1796, type: !13600)
!15462 = !DILocalVariable(name: "ret", scope: !15455, file: !2359, line: 1797, type: !107)
!15463 = !DILocation(line: 0, scope: !15455)
!15464 = !DILocation(line: 0, scope: !13608, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 1796, column: 25, scope: !15455)
!15466 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15465)
!15468 = !DILocation(line: 0, scope: !13617, inlinedAt: !15467)
!15469 = !DILocation(line: 1801, column: 20, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15455, file: !2359, line: 1801, column: 6)
!15471 = !DILocation(line: 1801, column: 33, scope: !15470)
!15472 = !DILocation(line: 1801, column: 49, scope: !15470)
!15473 = !DILocation(line: 1801, column: 6, scope: !15455)
!15474 = !DILocation(line: 1803, column: 13, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15470, file: !2359, line: 1803, column: 13)
!15476 = !DILocation(line: 1803, column: 13, scope: !15470)
!15477 = !DILocation(line: 1805, column: 24, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !2359, line: 1805, column: 13)
!15479 = !DILocation(line: 1805, column: 21, scope: !15478)
!15480 = !DILocation(line: 1805, column: 34, scope: !15478)
!15481 = !DILocation(line: 1806, column: 20, scope: !15478)
!15482 = !DILocation(line: 1806, column: 44, scope: !15478)
!15483 = !DILocation(line: 1806, column: 30, scope: !15478)
!15484 = !DILocation(line: 1805, column: 13, scope: !15475)
!15485 = !DILocation(line: 1810, column: 42, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15478, file: !2359, line: 1808, column: 9)
!15487 = !DILocation(line: 1810, column: 3, scope: !15486)
!15488 = !DILocation(line: 1811, column: 22, scope: !15486)
!15489 = !DILocation(line: 1811, column: 3, scope: !15486)
!15490 = !DILocation(line: 0, scope: !14219, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 1814, column: 9, scope: !15486)
!15492 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15491)
!15493 = !DILocation(line: 1817, column: 3, scope: !15486)
!15494 = !DILocation(line: 0, scope: !15470)
!15495 = !DILocation(line: 0, scope: !13635, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 1822, column: 2, scope: !15455)
!15497 = !DILocation(line: 0, scope: !13643, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15496)
!15499 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15498)
!15500 = !DILocation(line: 1823, column: 2, scope: !15455)
!15501 = !DILocation(line: 1824, column: 1, scope: !15455)
!15502 = distinct !DISubprogram(name: "z_sched_wake", scope: !2359, file: !2359, line: 1882, type: !15503, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!136, !2285, !107, !102}
!15505 = !{!15506, !15507, !15508, !15509, !15510, !15511, !15513}
!15506 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15502, file: !2359, line: 1882, type: !2285)
!15507 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15502, file: !2359, line: 1882, type: !107)
!15508 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15502, file: !2359, line: 1882, type: !102)
!15509 = !DILocalVariable(name: "thread", scope: !15502, file: !2359, line: 1884, type: !2254)
!15510 = !DILocalVariable(name: "ret", scope: !15502, file: !2359, line: 1885, type: !136)
!15511 = !DILocalVariable(name: "__i", scope: !15512, file: !2359, line: 1887, type: !13600)
!15512 = distinct !DILexicalBlock(scope: !15502, file: !2359, line: 1887, column: 2)
!15513 = !DILocalVariable(name: "__key", scope: !15512, file: !2359, line: 1887, type: !13600)
!15514 = !DILocation(line: 0, scope: !15502)
!15515 = !DILocation(line: 0, scope: !15512)
!15516 = !DILocation(line: 0, scope: !13608, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 1887, column: 2, scope: !15512)
!15518 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15517)
!15520 = !DILocation(line: 0, scope: !13617, inlinedAt: !15519)
!15521 = !DILocation(line: 1888, column: 12, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !2359, line: 1887, column: 26)
!15523 = distinct !DILexicalBlock(scope: !15512, file: !2359, line: 1887, column: 2)
!15524 = !DILocation(line: 1890, column: 14, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15522, file: !2359, line: 1890, column: 7)
!15526 = !DILocation(line: 1890, column: 7, scope: !15522)
!15527 = !DILocalVariable(name: "thread", arg: 1, scope: !15528, file: !13215, line: 134, type: !2254)
!15528 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13215, file: !13215, line: 134, type: !15529, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15531)
!15529 = !DISubroutineType(types: !15530)
!15530 = !{null, !2254, !32, !102}
!15531 = !{!15527, !15532, !15533}
!15532 = !DILocalVariable(name: "value", arg: 2, scope: !15528, file: !13215, line: 135, type: !32)
!15533 = !DILocalVariable(name: "data", arg: 3, scope: !15528, file: !13215, line: 136, type: !102)
!15534 = !DILocation(line: 0, scope: !15528, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 1891, column: 4, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15525, file: !2359, line: 1890, column: 23)
!15537 = !DILocation(line: 0, scope: !15442, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 138, column: 2, scope: !15528, inlinedAt: !15535)
!15539 = !DILocation(line: 67, column: 15, scope: !15442, inlinedAt: !15538)
!15540 = !DILocation(line: 67, column: 33, scope: !15442, inlinedAt: !15538)
!15541 = !DILocation(line: 139, column: 15, scope: !15528, inlinedAt: !15535)
!15542 = !DILocation(line: 139, column: 25, scope: !15528, inlinedAt: !15535)
!15543 = !DILocation(line: 1894, column: 4, scope: !15536)
!15544 = !DILocation(line: 1895, column: 10, scope: !15536)
!15545 = !DILocation(line: 1896, column: 4, scope: !15536)
!15546 = !DILocation(line: 1898, column: 3, scope: !15536)
!15547 = !DILocation(line: 0, scope: !13635, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 1887, column: 2, scope: !15523)
!15549 = !DILocation(line: 0, scope: !13643, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15548)
!15551 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15550)
!15552 = !DILocation(line: 1901, column: 2, scope: !15502)
!15553 = distinct !DISubprogram(name: "z_sched_wait", scope: !2359, file: !2359, line: 1904, type: !15554, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2251, retainedNodes: !15557)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{!107, !13611, !13600, !2285, !14399, !15556}
!15556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15557 = !{!15558, !15559, !15560, !15561, !15562, !15563}
!15558 = !DILocalVariable(name: "lock", arg: 1, scope: !15553, file: !2359, line: 1904, type: !13611)
!15559 = !DILocalVariable(name: "key", arg: 2, scope: !15553, file: !2359, line: 1904, type: !13600)
!15560 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15553, file: !2359, line: 1905, type: !2285)
!15561 = !DILocalVariable(name: "timeout", arg: 4, scope: !15553, file: !2359, line: 1905, type: !14399)
!15562 = !DILocalVariable(name: "data", arg: 5, scope: !15553, file: !2359, line: 1905, type: !15556)
!15563 = !DILocalVariable(name: "ret", scope: !15553, file: !2359, line: 1907, type: !107)
!15564 = !DILocation(line: 0, scope: !15553)
!15565 = !DILocation(line: 1907, column: 12, scope: !15553)
!15566 = !DILocation(line: 1909, column: 11, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15553, file: !2359, line: 1909, column: 6)
!15568 = !DILocation(line: 1909, column: 6, scope: !15553)
!15569 = !DILocation(line: 1910, column: 11, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2359, line: 1909, column: 20)
!15571 = !DILocation(line: 1910, column: 26, scope: !15570)
!15572 = !DILocation(line: 1910, column: 9, scope: !15570)
!15573 = !DILocation(line: 1911, column: 2, scope: !15570)
!15574 = !DILocation(line: 1912, column: 2, scope: !15553)
!15575 = distinct !DISubprogram(name: "z_data_copy", scope: !15576, file: !15576, line: 22, type: !3107, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !250)
!15576 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15577 = !DILocation(line: 24, column: 2, scope: !15575)
!15578 = !DILocation(line: 27, column: 2, scope: !15575)
!15579 = !DILocation(line: 71, column: 1, scope: !15575)
!15580 = distinct !DISubprogram(name: "z_add_timeout", scope: !2396, file: !2396, line: 88, type: !15581, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15587)
!15581 = !DISubroutineType(types: !15582)
!15582 = !{null, !2369, !2388, !15583}
!15583 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15584)
!15584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15585)
!15585 = !{!15586}
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15584, file: !104, line: 66, baseType: !103, size: 64)
!15587 = !{!15588, !15589, !15590, !15591, !15597, !15598, !15601, !15604}
!15588 = !DILocalVariable(name: "to", arg: 1, scope: !15580, file: !2396, line: 88, type: !2369)
!15589 = !DILocalVariable(name: "fn", arg: 2, scope: !15580, file: !2396, line: 88, type: !2388)
!15590 = !DILocalVariable(name: "timeout", arg: 3, scope: !15580, file: !2396, line: 89, type: !15583)
!15591 = !DILocalVariable(name: "__i", scope: !15592, file: !2396, line: 102, type: !15593)
!15592 = distinct !DILexicalBlock(scope: !15580, file: !2396, line: 102, column: 2)
!15593 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !15594)
!15594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !15595)
!15595 = !{!15596}
!15596 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15594, file: !249, line: 33, baseType: !107, size: 32)
!15597 = !DILocalVariable(name: "__key", scope: !15592, file: !2396, line: 102, type: !15593)
!15598 = !DILocalVariable(name: "t", scope: !15599, file: !2396, line: 103, type: !2369)
!15599 = distinct !DILexicalBlock(scope: !15600, file: !2396, line: 102, column: 24)
!15600 = distinct !DILexicalBlock(scope: !15592, file: !2396, line: 102, column: 2)
!15601 = !DILocalVariable(name: "ticks", scope: !15602, file: !2396, line: 107, type: !103)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2396, line: 106, column: 39)
!15603 = distinct !DILexicalBlock(scope: !15599, file: !2396, line: 105, column: 7)
!15604 = !DILocalVariable(name: "next_time", scope: !15605, file: !2396, line: 137, type: !816)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2396, line: 127, column: 22)
!15606 = distinct !DILexicalBlock(scope: !15599, file: !2396, line: 127, column: 7)
!15607 = !DILocation(line: 0, scope: !15580)
!15608 = !DILocation(line: 91, column: 6, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15580, file: !2396, line: 91, column: 6)
!15610 = !DILocation(line: 91, column: 6, scope: !15580)
!15611 = !DILocation(line: 100, column: 6, scope: !15580)
!15612 = !DILocation(line: 100, column: 9, scope: !15580)
!15613 = !DILocation(line: 0, scope: !15592)
!15614 = !DILocalVariable(name: "l", arg: 1, scope: !15615, file: !249, line: 136, type: !15618)
!15615 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !15616, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15619)
!15616 = !DISubroutineType(types: !15617)
!15617 = !{!15593, !15618}
!15618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!15619 = !{!15614, !15620}
!15620 = !DILocalVariable(name: "k", scope: !15615, file: !249, line: 139, type: !15593)
!15621 = !DILocation(line: 0, scope: !15615, inlinedAt: !15622)
!15622 = distinct !DILocation(line: 102, column: 2, scope: !15592)
!15623 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15628)
!15624 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15625)
!15625 = !{!15626, !15627}
!15626 = !DILocalVariable(name: "key", scope: !15624, file: !5867, line: 44, type: !32)
!15627 = !DILocalVariable(name: "tmp", scope: !15624, file: !5867, line: 53, type: !32)
!15628 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15622)
!15629 = !{i64 1654255}
!15630 = !DILocation(line: 0, scope: !15624, inlinedAt: !15628)
!15631 = !DILocation(line: 106, column: 33, scope: !15603)
!15632 = !DILocation(line: 105, column: 7, scope: !15599)
!15633 = !DILocation(line: 107, column: 50, scope: !15602)
!15634 = !DILocation(line: 107, column: 48, scope: !15602)
!15635 = !DILocation(line: 0, scope: !15602)
!15636 = !DILocation(line: 109, column: 17, scope: !15602)
!15637 = !DILocation(line: 110, column: 3, scope: !15602)
!15638 = !DILocation(line: 111, column: 31, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15603, file: !2396, line: 110, column: 10)
!15640 = !DILocation(line: 111, column: 37, scope: !15639)
!15641 = !DILocation(line: 111, column: 35, scope: !15639)
!15642 = !DILocation(line: 0, scope: !15603)
!15643 = !DILocation(line: 109, column: 8, scope: !15602)
!15644 = !DILocation(line: 109, column: 15, scope: !15602)
!15645 = !DILocation(line: 114, column: 12, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15599, file: !2396, line: 114, column: 3)
!15647 = !DILocation(line: 0, scope: !15599)
!15648 = !DILocation(line: 114, column: 3, scope: !15646)
!15649 = !DILocation(line: 115, column: 24, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !2396, line: 115, column: 8)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2396, line: 114, column: 45)
!15652 = distinct !DILexicalBlock(scope: !15646, file: !2396, line: 114, column: 3)
!15653 = !DILocation(line: 115, column: 11, scope: !15650)
!15654 = !DILocation(line: 115, column: 18, scope: !15650)
!15655 = !DILocation(line: 115, column: 8, scope: !15651)
!15656 = !DILocation(line: 116, column: 15, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15650, file: !2396, line: 115, column: 32)
!15658 = !DILocation(line: 117, column: 26, scope: !15657)
!15659 = !DILocation(line: 117, column: 37, scope: !15657)
!15660 = !DILocation(line: 117, column: 5, scope: !15657)
!15661 = !DILocation(line: 123, column: 7, scope: !15599)
!15662 = !DILocation(line: 120, column: 15, scope: !15651)
!15663 = !DILocation(line: 114, column: 36, scope: !15652)
!15664 = distinct !{!15664, !15648, !15665}
!15665 = !DILocation(line: 121, column: 3, scope: !15646)
!15666 = !DILocation(line: 124, column: 41, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2396, line: 123, column: 18)
!15668 = distinct !DILexicalBlock(scope: !15599, file: !2396, line: 123, column: 7)
!15669 = !DILocation(line: 124, column: 4, scope: !15667)
!15670 = !DILocation(line: 125, column: 3, scope: !15667)
!15671 = !DILocation(line: 127, column: 13, scope: !15606)
!15672 = !DILocation(line: 127, column: 10, scope: !15606)
!15673 = !DILocation(line: 127, column: 7, scope: !15599)
!15674 = !DILocation(line: 137, column: 24, scope: !15605)
!15675 = !DILocation(line: 0, scope: !15605)
!15676 = !DILocation(line: 139, column: 18, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15605, file: !2396, line: 139, column: 8)
!15678 = !DILocation(line: 139, column: 23, scope: !15677)
!15679 = !DILocation(line: 141, column: 5, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15677, file: !2396, line: 140, column: 48)
!15681 = !DILocation(line: 142, column: 4, scope: !15680)
!15682 = !DILocalVariable(name: "key", arg: 2, scope: !15683, file: !249, line: 190, type: !15593)
!15683 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !15684, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{null, !15618, !15593}
!15686 = !{!15687, !15682}
!15687 = !DILocalVariable(name: "l", arg: 1, scope: !15683, file: !249, line: 189, type: !15618)
!15688 = !DILocation(line: 0, scope: !15683, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 102, column: 2, scope: !15600)
!15690 = !DILocalVariable(name: "key", arg: 1, scope: !15691, file: !5867, line: 84, type: !32)
!15691 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15692)
!15692 = !{!15690}
!15693 = !DILocation(line: 0, scope: !15691, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15689)
!15695 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15694)
!15696 = !{i64 1655072}
!15697 = !DILocation(line: 148, column: 1, scope: !15580)
!15698 = distinct !DISubprogram(name: "elapsed", scope: !2396, file: !2396, line: 62, type: !15699, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !250)
!15699 = !DISubroutineType(types: !15700)
!15700 = !{!816}
!15701 = !DILocation(line: 64, column: 9, scope: !15698)
!15702 = !DILocation(line: 64, column: 28, scope: !15698)
!15703 = !DILocation(line: 64, column: 35, scope: !15698)
!15704 = !DILocation(line: 64, column: 2, scope: !15698)
!15705 = distinct !DISubprogram(name: "first", scope: !2396, file: !2396, line: 39, type: !15706, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15708)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{!2369}
!15708 = !{!15709}
!15709 = !DILocalVariable(name: "t", scope: !15705, file: !2396, line: 41, type: !15710)
!15710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!15711 = !DILocation(line: 41, column: 19, scope: !15705)
!15712 = !DILocation(line: 0, scope: !15705)
!15713 = !DILocation(line: 43, column: 9, scope: !15705)
!15714 = !DILocation(line: 43, column: 2, scope: !15705)
!15715 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !15716, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15718)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{null, !15710, !15710}
!15718 = !{!15719, !15720, !15721}
!15719 = !DILocalVariable(name: "successor", arg: 1, scope: !15715, file: !233, line: 443, type: !15710)
!15720 = !DILocalVariable(name: "node", arg: 2, scope: !15715, file: !233, line: 443, type: !15710)
!15721 = !DILocalVariable(name: "prev", scope: !15715, file: !233, line: 445, type: !15722)
!15722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15710)
!15723 = !DILocation(line: 0, scope: !15715)
!15724 = !DILocation(line: 445, column: 39, scope: !15715)
!15725 = !DILocation(line: 447, column: 8, scope: !15715)
!15726 = !DILocation(line: 447, column: 13, scope: !15715)
!15727 = !DILocation(line: 448, column: 8, scope: !15715)
!15728 = !DILocation(line: 448, column: 13, scope: !15715)
!15729 = !DILocation(line: 449, column: 8, scope: !15715)
!15730 = !DILocation(line: 449, column: 13, scope: !15715)
!15731 = !DILocation(line: 450, column: 18, scope: !15715)
!15732 = !DILocation(line: 451, column: 1, scope: !15715)
!15733 = distinct !DISubprogram(name: "next", scope: !2396, file: !2396, line: 46, type: !15734, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{!2369, !2369}
!15736 = !{!15737, !15738}
!15737 = !DILocalVariable(name: "t", arg: 1, scope: !15733, file: !2396, line: 46, type: !2369)
!15738 = !DILocalVariable(name: "n", scope: !15733, file: !2396, line: 48, type: !15710)
!15739 = !DILocation(line: 0, scope: !15733)
!15740 = !DILocation(line: 48, column: 58, scope: !15733)
!15741 = !DILocation(line: 48, column: 19, scope: !15733)
!15742 = !DILocation(line: 50, column: 9, scope: !15733)
!15743 = !DILocation(line: 50, column: 2, scope: !15733)
!15744 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !15745, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15748)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{null, !15747, !15710}
!15747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!15748 = !{!15749, !15750, !15751}
!15749 = !DILocalVariable(name: "list", arg: 1, scope: !15744, file: !233, line: 404, type: !15747)
!15750 = !DILocalVariable(name: "node", arg: 2, scope: !15744, file: !233, line: 404, type: !15710)
!15751 = !DILocalVariable(name: "tail", scope: !15744, file: !233, line: 406, type: !15722)
!15752 = !DILocation(line: 0, scope: !15744)
!15753 = !DILocation(line: 406, column: 34, scope: !15744)
!15754 = !DILocation(line: 408, column: 8, scope: !15744)
!15755 = !DILocation(line: 408, column: 13, scope: !15744)
!15756 = !DILocation(line: 409, column: 8, scope: !15744)
!15757 = !DILocation(line: 409, column: 13, scope: !15744)
!15758 = !DILocation(line: 411, column: 8, scope: !15744)
!15759 = !DILocation(line: 411, column: 13, scope: !15744)
!15760 = !DILocation(line: 412, column: 13, scope: !15744)
!15761 = !DILocation(line: 413, column: 1, scope: !15744)
!15762 = distinct !DISubprogram(name: "next_timeout", scope: !2396, file: !2396, line: 67, type: !15699, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15763)
!15763 = !{!15764, !15765, !15766}
!15764 = !DILocalVariable(name: "to", scope: !15762, file: !2396, line: 69, type: !2369)
!15765 = !DILocalVariable(name: "ticks_elapsed", scope: !15762, file: !2396, line: 70, type: !816)
!15766 = !DILocalVariable(name: "ret", scope: !15762, file: !2396, line: 71, type: !816)
!15767 = !DILocation(line: 69, column: 24, scope: !15762)
!15768 = !DILocation(line: 0, scope: !15762)
!15769 = !DILocation(line: 70, column: 26, scope: !15762)
!15770 = !DILocation(line: 73, column: 10, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15762, file: !2396, line: 73, column: 6)
!15772 = !DILocation(line: 73, column: 19, scope: !15771)
!15773 = !DILocation(line: 74, column: 21, scope: !15771)
!15774 = !DILocation(line: 74, column: 30, scope: !15771)
!15775 = !DILocation(line: 74, column: 28, scope: !15771)
!15776 = !DILocation(line: 74, column: 45, scope: !15771)
!15777 = !DILocation(line: 73, column: 6, scope: !15762)
!15778 = !DILocation(line: 77, column: 9, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15771, file: !2396, line: 76, column: 9)
!15780 = !DILocation(line: 0, scope: !15771)
!15781 = !DILocation(line: 81, column: 20, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15762, file: !2396, line: 81, column: 6)
!15783 = !DILocation(line: 81, column: 6, scope: !15782)
!15784 = !DILocation(line: 81, column: 32, scope: !15782)
!15785 = !DILocation(line: 85, column: 2, scope: !15762)
!15786 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !15787, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15789)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!15710, !15747, !15710}
!15789 = !{!15790, !15791}
!15790 = !DILocalVariable(name: "list", arg: 1, scope: !15786, file: !233, line: 341, type: !15747)
!15791 = !DILocalVariable(name: "node", arg: 2, scope: !15786, file: !233, line: 342, type: !15710)
!15792 = !DILocation(line: 0, scope: !15786)
!15793 = !DILocation(line: 344, column: 15, scope: !15786)
!15794 = !DILocation(line: 344, column: 9, scope: !15786)
!15795 = !DILocation(line: 344, column: 26, scope: !15786)
!15796 = !DILocation(line: 344, column: 2, scope: !15786)
!15797 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !15787, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15798)
!15798 = !{!15799, !15800}
!15799 = !DILocalVariable(name: "list", arg: 1, scope: !15797, file: !233, line: 325, type: !15747)
!15800 = !DILocalVariable(name: "node", arg: 2, scope: !15797, file: !233, line: 326, type: !15710)
!15801 = !DILocation(line: 0, scope: !15797)
!15802 = !DILocation(line: 328, column: 24, scope: !15797)
!15803 = !DILocation(line: 328, column: 15, scope: !15797)
!15804 = !DILocation(line: 328, column: 9, scope: !15797)
!15805 = !DILocation(line: 328, column: 45, scope: !15797)
!15806 = !DILocation(line: 328, column: 2, scope: !15797)
!15807 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !15808, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15810)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!15710, !15747}
!15810 = !{!15811}
!15811 = !DILocalVariable(name: "list", arg: 1, scope: !15807, file: !233, line: 294, type: !15747)
!15812 = !DILocation(line: 0, scope: !15807)
!15813 = !DILocation(line: 296, column: 9, scope: !15807)
!15814 = !DILocation(line: 296, column: 2, scope: !15807)
!15815 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !15816, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15818)
!15816 = !DISubroutineType(types: !15817)
!15817 = !{!136, !15747}
!15818 = !{!15819}
!15819 = !DILocalVariable(name: "list", arg: 1, scope: !15815, file: !233, line: 266, type: !15747)
!15820 = !DILocation(line: 0, scope: !15815)
!15821 = !DILocation(line: 268, column: 15, scope: !15815)
!15822 = !DILocation(line: 268, column: 20, scope: !15815)
!15823 = !DILocation(line: 268, column: 2, scope: !15815)
!15824 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2396, file: !2396, line: 150, type: !15825, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15827)
!15825 = !DISubroutineType(types: !15826)
!15826 = !{!107, !2369}
!15827 = !{!15828, !15829, !15830, !15832}
!15828 = !DILocalVariable(name: "to", arg: 1, scope: !15824, file: !2396, line: 150, type: !2369)
!15829 = !DILocalVariable(name: "ret", scope: !15824, file: !2396, line: 152, type: !107)
!15830 = !DILocalVariable(name: "__i", scope: !15831, file: !2396, line: 154, type: !15593)
!15831 = distinct !DILexicalBlock(scope: !15824, file: !2396, line: 154, column: 2)
!15832 = !DILocalVariable(name: "__key", scope: !15831, file: !2396, line: 154, type: !15593)
!15833 = !DILocation(line: 0, scope: !15824)
!15834 = !DILocation(line: 0, scope: !15831)
!15835 = !DILocation(line: 0, scope: !15615, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 154, column: 2, scope: !15831)
!15837 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15836)
!15839 = !DILocation(line: 0, scope: !15624, inlinedAt: !15838)
!15840 = !DILocation(line: 155, column: 7, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !2396, line: 155, column: 7)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !2396, line: 154, column: 24)
!15843 = distinct !DILexicalBlock(scope: !15831, file: !2396, line: 154, column: 2)
!15844 = !DILocation(line: 155, column: 7, scope: !15842)
!15845 = !DILocation(line: 156, column: 4, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15841, file: !2396, line: 155, column: 39)
!15847 = !DILocation(line: 158, column: 3, scope: !15846)
!15848 = !DILocation(line: 0, scope: !15683, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 154, column: 2, scope: !15843)
!15850 = !DILocation(line: 0, scope: !15691, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15849)
!15852 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15851)
!15853 = !DILocation(line: 161, column: 2, scope: !15824)
!15854 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !15855, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15859)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{!136, !15857}
!15857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15858, size: 32)
!15858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2373)
!15859 = !{!15860}
!15860 = !DILocalVariable(name: "node", arg: 1, scope: !15854, file: !233, line: 225, type: !15857)
!15861 = !DILocation(line: 0, scope: !15854)
!15862 = !DILocation(line: 227, column: 15, scope: !15854)
!15863 = !DILocation(line: 227, column: 20, scope: !15854)
!15864 = !DILocation(line: 227, column: 2, scope: !15854)
!15865 = distinct !DISubprogram(name: "remove_timeout", scope: !2396, file: !2396, line: 53, type: !2390, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15866)
!15866 = !{!15867}
!15867 = !DILocalVariable(name: "t", arg: 1, scope: !15865, file: !2396, line: 53, type: !2369)
!15868 = !DILocation(line: 0, scope: !15865)
!15869 = !DILocation(line: 55, column: 6, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15865, file: !2396, line: 55, column: 6)
!15871 = !DILocation(line: 55, column: 14, scope: !15870)
!15872 = !DILocation(line: 55, column: 6, scope: !15865)
!15873 = !DILocation(line: 56, column: 25, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15870, file: !2396, line: 55, column: 23)
!15875 = !DILocation(line: 56, column: 12, scope: !15874)
!15876 = !DILocation(line: 56, column: 19, scope: !15874)
!15877 = !DILocation(line: 57, column: 2, scope: !15874)
!15878 = !DILocation(line: 59, column: 23, scope: !15865)
!15879 = !DILocation(line: 59, column: 2, scope: !15865)
!15880 = !DILocation(line: 60, column: 1, scope: !15865)
!15881 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !15882, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15884)
!15882 = !DISubroutineType(types: !15883)
!15883 = !{null, !15710}
!15884 = !{!15885, !15886, !15887}
!15885 = !DILocalVariable(name: "node", arg: 1, scope: !15881, file: !233, line: 496, type: !15710)
!15886 = !DILocalVariable(name: "prev", scope: !15881, file: !233, line: 498, type: !15722)
!15887 = !DILocalVariable(name: "next", scope: !15881, file: !233, line: 499, type: !15722)
!15888 = !DILocation(line: 0, scope: !15881)
!15889 = !DILocation(line: 498, column: 34, scope: !15881)
!15890 = !DILocation(line: 499, column: 34, scope: !15881)
!15891 = !DILocation(line: 501, column: 8, scope: !15881)
!15892 = !DILocation(line: 501, column: 13, scope: !15881)
!15893 = !DILocation(line: 502, column: 8, scope: !15881)
!15894 = !DILocation(line: 502, column: 13, scope: !15881)
!15895 = !DILocation(line: 503, column: 2, scope: !15881)
!15896 = !DILocation(line: 504, column: 1, scope: !15881)
!15897 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !15882, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15898)
!15898 = !{!15899}
!15899 = !DILocalVariable(name: "node", arg: 1, scope: !15897, file: !233, line: 211, type: !15710)
!15900 = !DILocation(line: 0, scope: !15897)
!15901 = !DILocation(line: 213, column: 8, scope: !15897)
!15902 = !DILocation(line: 213, column: 13, scope: !15897)
!15903 = !DILocation(line: 214, column: 8, scope: !15897)
!15904 = !DILocation(line: 214, column: 13, scope: !15897)
!15905 = !DILocation(line: 215, column: 1, scope: !15897)
!15906 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2396, file: !2396, line: 183, type: !15907, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15911)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{!103, !15909}
!15909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15910, size: 32)
!15910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2370)
!15911 = !{!15912, !15913, !15914, !15916}
!15912 = !DILocalVariable(name: "timeout", arg: 1, scope: !15906, file: !2396, line: 183, type: !15909)
!15913 = !DILocalVariable(name: "ticks", scope: !15906, file: !2396, line: 185, type: !103)
!15914 = !DILocalVariable(name: "__i", scope: !15915, file: !2396, line: 187, type: !15593)
!15915 = distinct !DILexicalBlock(scope: !15906, file: !2396, line: 187, column: 2)
!15916 = !DILocalVariable(name: "__key", scope: !15915, file: !2396, line: 187, type: !15593)
!15917 = !DILocation(line: 0, scope: !15906)
!15918 = !DILocation(line: 0, scope: !15915)
!15919 = !DILocation(line: 0, scope: !15615, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 187, column: 2, scope: !15915)
!15921 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15920)
!15923 = !DILocation(line: 0, scope: !15624, inlinedAt: !15922)
!15924 = !DILocation(line: 188, column: 11, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2396, line: 187, column: 24)
!15926 = distinct !DILexicalBlock(scope: !15915, file: !2396, line: 187, column: 2)
!15927 = !DILocation(line: 0, scope: !15683, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 187, column: 2, scope: !15926)
!15929 = !DILocation(line: 0, scope: !15691, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15928)
!15931 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15930)
!15932 = !DILocation(line: 191, column: 2, scope: !15906)
!15933 = distinct !DISubprogram(name: "timeout_rem", scope: !2396, file: !2396, line: 165, type: !15907, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15934)
!15934 = !{!15935, !15936, !15937}
!15935 = !DILocalVariable(name: "timeout", arg: 1, scope: !15933, file: !2396, line: 165, type: !15909)
!15936 = !DILocalVariable(name: "ticks", scope: !15933, file: !2396, line: 167, type: !103)
!15937 = !DILocalVariable(name: "t", scope: !15938, file: !2396, line: 173, type: !2369)
!15938 = distinct !DILexicalBlock(scope: !15933, file: !2396, line: 173, column: 2)
!15939 = !DILocation(line: 0, scope: !15933)
!15940 = !DILocation(line: 169, column: 6, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15933, file: !2396, line: 169, column: 6)
!15942 = !DILocation(line: 169, column: 6, scope: !15933)
!15943 = !DILocation(line: 173, column: 28, scope: !15938)
!15944 = !DILocation(line: 0, scope: !15938)
!15945 = !DILocation(line: 173, column: 39, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15938, file: !2396, line: 173, column: 2)
!15947 = !DILocation(line: 173, column: 2, scope: !15938)
!15948 = !DILocation(line: 174, column: 15, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !2396, line: 173, column: 61)
!15950 = !DILocation(line: 174, column: 9, scope: !15949)
!15951 = !DILocation(line: 175, column: 15, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !2396, line: 175, column: 7)
!15953 = !DILocation(line: 175, column: 7, scope: !15949)
!15954 = !DILocation(line: 173, column: 52, scope: !15946)
!15955 = distinct !{!15955, !15947, !15956}
!15956 = !DILocation(line: 178, column: 2, scope: !15938)
!15957 = !DILocation(line: 180, column: 17, scope: !15933)
!15958 = !DILocation(line: 180, column: 15, scope: !15933)
!15959 = !DILocation(line: 180, column: 2, scope: !15933)
!15960 = !DILocation(line: 181, column: 1, scope: !15933)
!15961 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12833, file: !12833, line: 35, type: !15962, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15964)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{!136, !15909}
!15964 = !{!15965}
!15965 = !DILocalVariable(name: "to", arg: 1, scope: !15961, file: !12833, line: 35, type: !15909)
!15966 = !DILocation(line: 0, scope: !15961)
!15967 = !DILocation(line: 37, column: 35, scope: !15961)
!15968 = !DILocation(line: 37, column: 10, scope: !15961)
!15969 = !DILocation(line: 37, column: 9, scope: !15961)
!15970 = !DILocation(line: 37, column: 2, scope: !15961)
!15971 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2396, file: !2396, line: 194, type: !15907, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15972)
!15972 = !{!15973, !15974, !15975, !15977}
!15973 = !DILocalVariable(name: "timeout", arg: 1, scope: !15971, file: !2396, line: 194, type: !15909)
!15974 = !DILocalVariable(name: "ticks", scope: !15971, file: !2396, line: 196, type: !103)
!15975 = !DILocalVariable(name: "__i", scope: !15976, file: !2396, line: 198, type: !15593)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !2396, line: 198, column: 2)
!15977 = !DILocalVariable(name: "__key", scope: !15976, file: !2396, line: 198, type: !15593)
!15978 = !DILocation(line: 0, scope: !15971)
!15979 = !DILocation(line: 0, scope: !15976)
!15980 = !DILocation(line: 0, scope: !15615, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 198, column: 2, scope: !15976)
!15982 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15981)
!15984 = !DILocation(line: 0, scope: !15624, inlinedAt: !15983)
!15985 = !DILocation(line: 199, column: 11, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15987, file: !2396, line: 198, column: 24)
!15987 = distinct !DILexicalBlock(scope: !15976, file: !2396, line: 198, column: 2)
!15988 = !DILocation(line: 199, column: 23, scope: !15986)
!15989 = !DILocation(line: 0, scope: !15683, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 198, column: 2, scope: !15987)
!15991 = !DILocation(line: 0, scope: !15691, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15990)
!15993 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15992)
!15994 = !DILocation(line: 199, column: 21, scope: !15986)
!15995 = !DILocation(line: 202, column: 2, scope: !15971)
!15996 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2396, file: !2396, line: 205, type: !15699, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15997)
!15997 = !{!15998, !15999, !16001}
!15998 = !DILocalVariable(name: "ret", scope: !15996, file: !2396, line: 207, type: !816)
!15999 = !DILocalVariable(name: "__i", scope: !16000, file: !2396, line: 209, type: !15593)
!16000 = distinct !DILexicalBlock(scope: !15996, file: !2396, line: 209, column: 2)
!16001 = !DILocalVariable(name: "__key", scope: !16000, file: !2396, line: 209, type: !15593)
!16002 = !DILocation(line: 0, scope: !15996)
!16003 = !DILocation(line: 0, scope: !16000)
!16004 = !DILocation(line: 0, scope: !15615, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 209, column: 2, scope: !16000)
!16006 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !15624, inlinedAt: !16007)
!16009 = !DILocation(line: 210, column: 9, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16011, file: !2396, line: 209, column: 24)
!16011 = distinct !DILexicalBlock(scope: !16000, file: !2396, line: 209, column: 2)
!16012 = !DILocation(line: 0, scope: !15683, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 209, column: 2, scope: !16011)
!16014 = !DILocation(line: 0, scope: !15691, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16013)
!16016 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16015)
!16017 = !DILocation(line: 212, column: 2, scope: !15996)
!16018 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2396, file: !2396, line: 215, type: !10282, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16019)
!16019 = !{!16020, !16021, !16022, !16024, !16025, !16028, !16029}
!16020 = !DILocalVariable(name: "ticks", arg: 1, scope: !16018, file: !2396, line: 215, type: !816)
!16021 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16018, file: !2396, line: 215, type: !136)
!16022 = !DILocalVariable(name: "__i", scope: !16023, file: !2396, line: 217, type: !15593)
!16023 = distinct !DILexicalBlock(scope: !16018, file: !2396, line: 217, column: 2)
!16024 = !DILocalVariable(name: "__key", scope: !16023, file: !2396, line: 217, type: !15593)
!16025 = !DILocalVariable(name: "next_to", scope: !16026, file: !2396, line: 218, type: !107)
!16026 = distinct !DILexicalBlock(scope: !16027, file: !2396, line: 217, column: 24)
!16027 = distinct !DILexicalBlock(scope: !16023, file: !2396, line: 217, column: 2)
!16028 = !DILocalVariable(name: "sooner", scope: !16026, file: !2396, line: 219, type: !136)
!16029 = !DILocalVariable(name: "imminent", scope: !16026, file: !2396, line: 221, type: !136)
!16030 = !DILocation(line: 0, scope: !16018)
!16031 = !DILocation(line: 0, scope: !16023)
!16032 = !DILocation(line: 0, scope: !15615, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 217, column: 2, scope: !16023)
!16034 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16033)
!16036 = !DILocation(line: 0, scope: !15624, inlinedAt: !16035)
!16037 = !DILocation(line: 218, column: 17, scope: !16026)
!16038 = !DILocation(line: 0, scope: !16026)
!16039 = !DILocation(line: 221, column: 27, scope: !16026)
!16040 = !DILocation(line: 233, column: 17, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16026, file: !2396, line: 233, column: 7)
!16042 = !DILocation(line: 234, column: 26, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16041, file: !2396, line: 233, column: 56)
!16044 = !DILocation(line: 234, column: 4, scope: !16043)
!16045 = !DILocation(line: 235, column: 3, scope: !16043)
!16046 = !DILocation(line: 0, scope: !15683, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 217, column: 2, scope: !16027)
!16048 = !DILocation(line: 0, scope: !15691, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16047)
!16050 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16049)
!16051 = !DILocation(line: 237, column: 1, scope: !16018)
!16052 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2396, file: !2396, line: 239, type: !16053, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16055)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{null, !816}
!16055 = !{!16056, !16057, !16058, !16060}
!16056 = !DILocalVariable(name: "ticks", arg: 1, scope: !16052, file: !2396, line: 239, type: !816)
!16057 = !DILocalVariable(name: "key", scope: !16052, file: !2396, line: 245, type: !15593)
!16058 = !DILocalVariable(name: "t", scope: !16059, file: !2396, line: 262, type: !2369)
!16059 = distinct !DILexicalBlock(scope: !16052, file: !2396, line: 261, column: 67)
!16060 = !DILocalVariable(name: "dt", scope: !16059, file: !2396, line: 263, type: !107)
!16061 = !DILocation(line: 0, scope: !16052)
!16062 = !DILocation(line: 242, column: 2, scope: !16052)
!16063 = !DILocation(line: 0, scope: !15615, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 245, column: 25, scope: !16052)
!16065 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16064)
!16067 = !DILocation(line: 0, scope: !15624, inlinedAt: !16066)
!16068 = !DILocation(line: 261, column: 9, scope: !16052)
!16069 = !DILocation(line: 261, column: 17, scope: !16052)
!16070 = !DILocation(line: 261, column: 25, scope: !16052)
!16071 = !DILocation(line: 261, column: 37, scope: !16052)
!16072 = !DILocation(line: 261, column: 47, scope: !16052)
!16073 = !DILocation(line: 261, column: 44, scope: !16052)
!16074 = !DILocation(line: 261, column: 2, scope: !16052)
!16075 = !DILocation(line: 0, scope: !16059)
!16076 = !DILocation(line: 263, column: 12, scope: !16059)
!16077 = !DILocation(line: 265, column: 16, scope: !16059)
!16078 = !DILocation(line: 265, column: 13, scope: !16059)
!16079 = !DILocation(line: 266, column: 13, scope: !16059)
!16080 = !DILocation(line: 267, column: 3, scope: !16059)
!16081 = !DILocation(line: 0, scope: !15683, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 269, column: 3, scope: !16059)
!16083 = !DILocation(line: 0, scope: !15691, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16082)
!16085 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16084)
!16086 = !DILocation(line: 270, column: 6, scope: !16059)
!16087 = !DILocation(line: 270, column: 3, scope: !16059)
!16088 = !DILocation(line: 0, scope: !15615, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 271, column: 9, scope: !16059)
!16090 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16091)
!16091 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16089)
!16092 = !DILocation(line: 0, scope: !15624, inlinedAt: !16091)
!16093 = !DILocation(line: 272, column: 22, scope: !16059)
!16094 = distinct !{!16094, !16074, !16095}
!16095 = !DILocation(line: 273, column: 2, scope: !16052)
!16096 = !DILocation(line: 276, column: 19, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16098, file: !2396, line: 275, column: 23)
!16098 = distinct !DILexicalBlock(scope: !16052, file: !2396, line: 275, column: 6)
!16099 = !DILocation(line: 277, column: 2, scope: !16097)
!16100 = !DILocation(line: 279, column: 15, scope: !16052)
!16101 = !DILocation(line: 279, column: 12, scope: !16052)
!16102 = !DILocation(line: 280, column: 21, scope: !16052)
!16103 = !DILocation(line: 282, column: 24, scope: !16052)
!16104 = !DILocation(line: 282, column: 2, scope: !16052)
!16105 = !DILocation(line: 0, scope: !15683, inlinedAt: !16106)
!16106 = distinct !DILocation(line: 284, column: 2, scope: !16052)
!16107 = !DILocation(line: 0, scope: !15691, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16106)
!16109 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16108)
!16110 = !DILocation(line: 285, column: 1, scope: !16052)
!16111 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2396, file: !2396, line: 287, type: !16112, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16114)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!105}
!16114 = !{!16115, !16116, !16118}
!16115 = !DILocalVariable(name: "t", scope: !16111, file: !2396, line: 289, type: !2233)
!16116 = !DILocalVariable(name: "__i", scope: !16117, file: !2396, line: 291, type: !15593)
!16117 = distinct !DILexicalBlock(scope: !16111, file: !2396, line: 291, column: 2)
!16118 = !DILocalVariable(name: "__key", scope: !16117, file: !2396, line: 291, type: !15593)
!16119 = !DILocation(line: 0, scope: !16111)
!16120 = !DILocation(line: 0, scope: !16117)
!16121 = !DILocation(line: 0, scope: !15615, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 291, column: 2, scope: !16117)
!16123 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16122)
!16125 = !DILocation(line: 0, scope: !15624, inlinedAt: !16124)
!16126 = !DILocation(line: 292, column: 7, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !2396, line: 291, column: 24)
!16128 = distinct !DILexicalBlock(scope: !16117, file: !2396, line: 291, column: 2)
!16129 = !DILocation(line: 292, column: 19, scope: !16127)
!16130 = !DILocation(line: 0, scope: !15683, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 291, column: 2, scope: !16128)
!16132 = !DILocation(line: 0, scope: !15691, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16131)
!16134 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16133)
!16135 = !DILocation(line: 292, column: 17, scope: !16127)
!16136 = !DILocation(line: 294, column: 2, scope: !16111)
!16137 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2396, file: !2396, line: 297, type: !6808, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !250)
!16138 = !DILocation(line: 300, column: 19, scope: !16137)
!16139 = !DILocation(line: 300, column: 9, scope: !16137)
!16140 = !DILocation(line: 300, column: 2, scope: !16137)
!16141 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2396, file: !2396, line: 306, type: !16112, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !250)
!16142 = !DILocation(line: 308, column: 9, scope: !16141)
!16143 = !DILocation(line: 308, column: 2, scope: !16141)
!16144 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2396, file: !2396, line: 319, type: !5891, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16145)
!16145 = !{!16146, !16147, !16148, !16149}
!16146 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16144, file: !2396, line: 319, type: !162)
!16147 = !DILocalVariable(name: "start_cycles", scope: !16144, file: !2396, line: 328, type: !162)
!16148 = !DILocalVariable(name: "cycles_to_wait", scope: !16144, file: !2396, line: 331, type: !162)
!16149 = !DILocalVariable(name: "current_cycles", scope: !16150, file: !2396, line: 338, type: !162)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !2396, line: 337, column: 11)
!16151 = distinct !DILexicalBlock(scope: !16152, file: !2396, line: 337, column: 2)
!16152 = distinct !DILexicalBlock(scope: !16144, file: !2396, line: 337, column: 2)
!16153 = !DILocation(line: 0, scope: !16144)
!16154 = !DILocation(line: 322, column: 19, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16144, file: !2396, line: 322, column: 6)
!16156 = !DILocation(line: 322, column: 6, scope: !16144)
!16157 = !DILocation(line: 328, column: 26, scope: !16144)
!16158 = !DILocation(line: 333, column: 43, scope: !16144)
!16159 = !DILocation(line: 337, column: 2, scope: !16144)
!16160 = !DILocation(line: 338, column: 29, scope: !16150)
!16161 = !DILocation(line: 0, scope: !16150)
!16162 = !DILocation(line: 341, column: 23, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16150, file: !2396, line: 341, column: 7)
!16164 = !DILocation(line: 341, column: 39, scope: !16163)
!16165 = !DILocation(line: 349, column: 1, scope: !16144)
!16166 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6808, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !250)
!16167 = !DILocation(line: 1677, column: 9, scope: !16166)
!16168 = !DILocation(line: 1677, column: 2, scope: !16166)
!16169 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16170, file: !16170, line: 24, type: !6808, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !250)
!16170 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16171 = !DILocation(line: 26, column: 9, scope: !16169)
!16172 = !DILocation(line: 26, column: 2, scope: !16169)
!16173 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2396, file: !2396, line: 364, type: !16174, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16176)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!2233, !15583}
!16176 = !{!16177, !16178}
!16177 = !DILocalVariable(name: "timeout", arg: 1, scope: !16173, file: !2396, line: 364, type: !15583)
!16178 = !DILocalVariable(name: "dt", scope: !16173, file: !2396, line: 366, type: !103)
!16179 = !DILocation(line: 0, scope: !16173)
!16180 = !DILocation(line: 368, column: 6, scope: !16173)
!16181 = !DILocation(line: 371, column: 10, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16183, file: !2396, line: 370, column: 47)
!16183 = distinct !DILexicalBlock(scope: !16184, file: !2396, line: 370, column: 13)
!16184 = distinct !DILexicalBlock(scope: !16173, file: !2396, line: 368, column: 6)
!16185 = !DILocation(line: 371, column: 3, scope: !16182)
!16186 = !DILocation(line: 376, column: 58, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2396, line: 376, column: 7)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !2396, line: 372, column: 9)
!16189 = !DILocation(line: 376, column: 7, scope: !16188)
!16190 = !DILocation(line: 376, column: 43, scope: !16187)
!16191 = !DILocation(line: 377, column: 4, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16187, file: !2396, line: 376, column: 64)
!16193 = !DILocation(line: 379, column: 10, scope: !16188)
!16194 = !DILocation(line: 379, column: 33, scope: !16188)
!16195 = !DILocation(line: 379, column: 31, scope: !16188)
!16196 = !DILocation(line: 379, column: 3, scope: !16188)
!16197 = !DILocation(line: 0, scope: !16184)
!16198 = !DILocation(line: 381, column: 1, scope: !16173)
!16199 = distinct !DISubprogram(name: "boot_banner", scope: !16200, file: !16200, line: 26, type: !3107, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3093, retainedNodes: !250)
!16200 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16201 = !DILocation(line: 34, column: 2, scope: !16199)
!16202 = !DILocation(line: 36, column: 1, scope: !16199)
!16203 = distinct !DISubprogram(name: "statics_init", scope: !2424, file: !2424, line: 21, type: !2430, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16204)
!16204 = !{!16205, !16206}
!16205 = !DILocalVariable(name: "unused", arg: 1, scope: !16203, file: !2424, line: 21, type: !2432)
!16206 = !DILocalVariable(name: "h", scope: !16207, file: !2424, line: 24, type: !16208)
!16207 = distinct !DILexicalBlock(scope: !16203, file: !2424, line: 24, column: 2)
!16208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16209, size: 32)
!16209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16210)
!16210 = !{!16211, !16217, !16223}
!16211 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16209, file: !224, line: 5074, baseType: !16212, size: 96)
!16212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !16213)
!16213 = !{!16214, !16215, !16216}
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16212, file: !467, line: 57, baseType: !470, size: 32)
!16215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16212, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!16216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16212, file: !467, line: 59, baseType: !252, size: 32, offset: 64)
!16217 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16209, file: !224, line: 5075, baseType: !16218, size: 64, offset: 96)
!16218 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16219)
!16219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16220)
!16220 = !{!16221}
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16219, file: !228, line: 232, baseType: !16222, size: 64)
!16222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2410)
!16223 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16209, file: !224, line: 5076, baseType: !16224, offset: 160)
!16224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16225 = !DILocation(line: 0, scope: !16203)
!16226 = !DILocation(line: 0, scope: !16207)
!16227 = !DILocation(line: 24, column: 2, scope: !16207)
!16228 = !DILocation(line: 52, column: 2, scope: !16203)
!16229 = !DILocation(line: 49, column: 27, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2424, line: 48, column: 3)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2424, line: 24, column: 36)
!16232 = distinct !DILexicalBlock(scope: !16207, file: !2424, line: 24, column: 2)
!16233 = !DILocation(line: 49, column: 45, scope: !16230)
!16234 = !DILocation(line: 49, column: 4, scope: !16230)
!16235 = !DILocation(line: 24, column: 2, scope: !16232)
!16236 = !DILocation(line: 24, column: 2, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16232, file: !2424, line: 24, column: 2)
!16238 = distinct !{!16238, !16227, !16239}
!16239 = !DILocation(line: 51, column: 2, scope: !16207)
!16240 = distinct !DISubprogram(name: "k_heap_init", scope: !2424, file: !2424, line: 13, type: !16241, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16243)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{null, !16208, !102, !252}
!16243 = !{!16244, !16245, !16246}
!16244 = !DILocalVariable(name: "h", arg: 1, scope: !16240, file: !2424, line: 13, type: !16208)
!16245 = !DILocalVariable(name: "mem", arg: 2, scope: !16240, file: !2424, line: 13, type: !102)
!16246 = !DILocalVariable(name: "bytes", arg: 3, scope: !16240, file: !2424, line: 13, type: !252)
!16247 = !DILocation(line: 0, scope: !16240)
!16248 = !DILocation(line: 15, column: 19, scope: !16240)
!16249 = !DILocation(line: 15, column: 2, scope: !16240)
!16250 = !DILocation(line: 16, column: 20, scope: !16240)
!16251 = !DILocation(line: 16, column: 2, scope: !16240)
!16252 = !DILocation(line: 19, column: 1, scope: !16240)
!16253 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !16254, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16257)
!16254 = !DISubroutineType(types: !16255)
!16255 = !{null, !16256}
!16256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16218, size: 32)
!16257 = !{!16258}
!16258 = !DILocalVariable(name: "w", arg: 1, scope: !16253, file: !12765, line: 47, type: !16256)
!16259 = !DILocation(line: 0, scope: !16253)
!16260 = !DILocation(line: 49, column: 21, scope: !16253)
!16261 = !DILocation(line: 49, column: 2, scope: !16253)
!16262 = !DILocation(line: 50, column: 1, scope: !16253)
!16263 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16264, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16267)
!16264 = !DISubroutineType(types: !16265)
!16265 = !{null, !16266}
!16266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16222, size: 32)
!16267 = !{!16268}
!16268 = !DILocalVariable(name: "list", arg: 1, scope: !16263, file: !233, line: 197, type: !16266)
!16269 = !DILocation(line: 0, scope: !16263)
!16270 = !DILocation(line: 199, column: 8, scope: !16263)
!16271 = !DILocation(line: 199, column: 13, scope: !16263)
!16272 = !DILocation(line: 200, column: 8, scope: !16263)
!16273 = !DILocation(line: 200, column: 13, scope: !16263)
!16274 = !DILocation(line: 201, column: 1, scope: !16263)
!16275 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2424, file: !2424, line: 64, type: !16276, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16282)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{!102, !16208, !252, !252, !16278}
!16278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16279)
!16279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16280)
!16280 = !{!16281}
!16281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16279, file: !104, line: 66, baseType: !103, size: 64)
!16282 = !{!16283, !16284, !16285, !16286, !16287, !16288, !16289, !16290, !16295}
!16283 = !DILocalVariable(name: "h", arg: 1, scope: !16275, file: !2424, line: 64, type: !16208)
!16284 = !DILocalVariable(name: "align", arg: 2, scope: !16275, file: !2424, line: 64, type: !252)
!16285 = !DILocalVariable(name: "bytes", arg: 3, scope: !16275, file: !2424, line: 64, type: !252)
!16286 = !DILocalVariable(name: "timeout", arg: 4, scope: !16275, file: !2424, line: 65, type: !16278)
!16287 = !DILocalVariable(name: "now", scope: !16275, file: !2424, line: 67, type: !105)
!16288 = !DILocalVariable(name: "end", scope: !16275, file: !2424, line: 67, type: !105)
!16289 = !DILocalVariable(name: "ret", scope: !16275, file: !2424, line: 68, type: !102)
!16290 = !DILocalVariable(name: "key", scope: !16275, file: !2424, line: 72, type: !16291)
!16291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16292)
!16292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16293)
!16293 = !{!16294}
!16294 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16292, file: !249, line: 33, baseType: !107, size: 32)
!16295 = !DILocalVariable(name: "blocked_alloc", scope: !16275, file: !2424, line: 78, type: !136)
!16296 = !DILocation(line: 0, scope: !16275)
!16297 = !DILocation(line: 67, column: 21, scope: !16275)
!16298 = !DILocation(line: 70, column: 8, scope: !16275)
!16299 = !DILocation(line: 72, column: 41, scope: !16275)
!16300 = !DILocalVariable(name: "l", arg: 1, scope: !16301, file: !249, line: 136, type: !16304)
!16301 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16302, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16305)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!16291, !16304}
!16304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16224, size: 32)
!16305 = !{!16300, !16306}
!16306 = !DILocalVariable(name: "k", scope: !16301, file: !249, line: 139, type: !16291)
!16307 = !DILocation(line: 0, scope: !16301, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 72, column: 25, scope: !16275)
!16309 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16314)
!16310 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5867, file: !5867, line: 42, type: !5868, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16311)
!16311 = !{!16312, !16313}
!16312 = !DILocalVariable(name: "key", scope: !16310, file: !5867, line: 44, type: !32)
!16313 = !DILocalVariable(name: "tmp", scope: !16310, file: !5867, line: 53, type: !32)
!16314 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16308)
!16315 = !{i64 1649309}
!16316 = !DILocation(line: 0, scope: !16310, inlinedAt: !16314)
!16317 = !DILocation(line: 81, column: 9, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16275, file: !2424, line: 80, column: 22)
!16319 = !DILocation(line: 83, column: 9, scope: !16318)
!16320 = !DILocation(line: 85, column: 12, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16318, file: !2424, line: 84, column: 7)
!16322 = !DILocation(line: 85, column: 21, scope: !16321)
!16323 = !DILocation(line: 85, column: 30, scope: !16321)
!16324 = !DILocation(line: 85, column: 37, scope: !16321)
!16325 = !DILocation(line: 84, column: 7, scope: !16318)
!16326 = !DILocation(line: 99, column: 10, scope: !16318)
!16327 = !DILocation(line: 0, scope: !16301, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 101, column: 9, scope: !16318)
!16329 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16328)
!16331 = !DILocation(line: 0, scope: !16310, inlinedAt: !16330)
!16332 = distinct !{!16332, !16333, !16334}
!16333 = !DILocation(line: 80, column: 2, scope: !16275)
!16334 = !DILocation(line: 102, column: 2, scope: !16275)
!16335 = !DILocalVariable(name: "key", arg: 2, scope: !16336, file: !249, line: 190, type: !16291)
!16336 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16337, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16339)
!16337 = !DISubroutineType(types: !16338)
!16338 = !{null, !16304, !16291}
!16339 = !{!16340, !16335}
!16340 = !DILocalVariable(name: "l", arg: 1, scope: !16336, file: !249, line: 189, type: !16304)
!16341 = !DILocation(line: 0, scope: !16336, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 106, column: 2, scope: !16275)
!16343 = !DILocalVariable(name: "key", arg: 1, scope: !16344, file: !5867, line: 84, type: !32)
!16344 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5867, file: !5867, line: 84, type: !5878, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16345)
!16345 = !{!16343}
!16346 = !DILocation(line: 0, scope: !16344, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 215, column: 2, scope: !16336, inlinedAt: !16342)
!16348 = !DILocation(line: 95, column: 2, scope: !16344, inlinedAt: !16347)
!16349 = !{i64 1650126}
!16350 = !DILocation(line: 107, column: 2, scope: !16275)
!16351 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2424, file: !2424, line: 110, type: !16352, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16354)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{!102, !16208, !252, !16278}
!16354 = !{!16355, !16356, !16357, !16358}
!16355 = !DILocalVariable(name: "h", arg: 1, scope: !16351, file: !2424, line: 110, type: !16208)
!16356 = !DILocalVariable(name: "bytes", arg: 2, scope: !16351, file: !2424, line: 110, type: !252)
!16357 = !DILocalVariable(name: "timeout", arg: 3, scope: !16351, file: !2424, line: 110, type: !16278)
!16358 = !DILocalVariable(name: "ret", scope: !16351, file: !2424, line: 114, type: !102)
!16359 = !DILocation(line: 0, scope: !16351)
!16360 = !DILocation(line: 114, column: 14, scope: !16351)
!16361 = !DILocation(line: 118, column: 2, scope: !16351)
!16362 = distinct !DISubprogram(name: "k_heap_free", scope: !2424, file: !2424, line: 121, type: !16363, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16365)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{null, !16208, !102}
!16365 = !{!16366, !16367, !16368}
!16366 = !DILocalVariable(name: "h", arg: 1, scope: !16362, file: !2424, line: 121, type: !16208)
!16367 = !DILocalVariable(name: "mem", arg: 2, scope: !16362, file: !2424, line: 121, type: !102)
!16368 = !DILocalVariable(name: "key", scope: !16362, file: !2424, line: 123, type: !16291)
!16369 = !DILocation(line: 0, scope: !16362)
!16370 = !DILocation(line: 0, scope: !16301, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 123, column: 25, scope: !16362)
!16372 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16371)
!16374 = !DILocation(line: 0, scope: !16310, inlinedAt: !16373)
!16375 = !DILocation(line: 125, column: 20, scope: !16362)
!16376 = !DILocation(line: 125, column: 2, scope: !16362)
!16377 = !DILocation(line: 128, column: 60, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16362, file: !2424, line: 128, column: 6)
!16379 = !DILocation(line: 128, column: 43, scope: !16378)
!16380 = !DILocation(line: 128, column: 68, scope: !16378)
!16381 = !DILocation(line: 128, column: 6, scope: !16362)
!16382 = !DILocation(line: 123, column: 41, scope: !16362)
!16383 = !DILocation(line: 129, column: 3, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16378, file: !2424, line: 128, column: 74)
!16385 = !DILocation(line: 130, column: 2, scope: !16384)
!16386 = !DILocation(line: 0, scope: !16336, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 131, column: 3, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16378, file: !2424, line: 130, column: 9)
!16389 = !DILocation(line: 0, scope: !16344, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 215, column: 2, scope: !16336, inlinedAt: !16387)
!16391 = !DILocation(line: 95, column: 2, scope: !16344, inlinedAt: !16390)
!16392 = !DILocation(line: 133, column: 1, scope: !16362)
