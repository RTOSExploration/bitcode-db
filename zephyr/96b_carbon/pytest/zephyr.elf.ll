; ModuleID = 'build/96b_carbon/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234933 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234913 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234903 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134235003 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234993 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234983 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234973 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234963 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234953 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234943 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236272 to i8*), void (i8*)* inttoptr (i32 134234923 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !901
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !862
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !845
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !818
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !834
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !880
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !882
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !884
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !888
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !890
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !896
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !906
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !937
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1034
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1023
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1075
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1141
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1420
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1318
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1422
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1394
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1392
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1435
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1437
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1439
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !916
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1441
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1443
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1445
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1374
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1447
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1619
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1674
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1613
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1676
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1592
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1594
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.2.167 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1682
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1692
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.167, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1603
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1605
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.3.168 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1694
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1617
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1704
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.168, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1663
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1666
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1668
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1671
@.str.4.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.6.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.7.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.8.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.9.171 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.10.173 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.11.174 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1007
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1684
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1686
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1688
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1690
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1696
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1698
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1700
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1702
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.12 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1711
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1822
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1824
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1820
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1815
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1789
@.str.178 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.179 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.180 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.181 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.182 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.183 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1826
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1316
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1372
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1916
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1958
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1961
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1968
@.str.217 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.221 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.222 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.223 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.227 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.228 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.229 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.230 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.231 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.226 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.225 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.227, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.228, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.229, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.230, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.231, i32 0, i32 0)], align 4
@.str.233 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1975
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2199
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2188
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2194
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2206
@.str.5.239 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2211
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.243 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.255, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.256, i32 0, i32 0)], align 4, !dbg !2239
@.str.250 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.251 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.252 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.253 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.254 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.255 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.249 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.256 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2354
@.str.8.248 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.261 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.262 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.263 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.264 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.268 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.269 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.273 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.274 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.283 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.284 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.285 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2367
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2478
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2481
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2483
@.str.286 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.302 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.293 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.307 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.315 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.295 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.310 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.292 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.319 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.320 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.326 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.327 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.328 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.331 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.287 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.288 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.289 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.290 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.291 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.294 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.306 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.311 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.312 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2196
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2204
@.str.23.321 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.337 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.338 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.339 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.340 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2485
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2515
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2520
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2062
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2518
@.str.4.341 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.342 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.343 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.347 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.348 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.368 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3109 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3167, !srcloc !3170
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3217, !srcloc !3218
  ret void, !dbg !3219
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3224, metadata !DIExpression()), !dbg !3225
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3226
  ret void, !dbg !3226
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3227 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3228
  ret void, !dbg !3229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3230 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %0, metadata !3241, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %1, metadata !3242, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %2, metadata !3243, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %3, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %0, metadata !3246, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %0, metadata !3247, metadata !DIExpression()), !dbg !3308
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3309
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3309
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3250, metadata !DIExpression()), !dbg !3310
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3311
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3252, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 0, metadata !3253, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 0, metadata !3254, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 0, metadata !3255, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 -1, metadata !3256, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3308
  %12 = and i32 %2, 4, !dbg !3313
  %13 = icmp eq i32 %12, 0, !dbg !3314
  call void @llvm.dbg.value(metadata i1 %13, metadata !3260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3308
  %14 = lshr i32 %2, 3, !dbg !3315
  %15 = and i32 %14, 7, !dbg !3315
  %16 = add nuw nsw i32 %15, 1, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %16, metadata !3261, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 0, metadata !3262, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %0, metadata !3263, metadata !DIExpression()), !dbg !3308
  %17 = ptrtoint i8* %0 to i32, !dbg !3317
  %18 = and i32 %17, 3, !dbg !3319
  %19 = icmp eq i32 %18, 0, !dbg !3319
  br i1 %19, label %20, label %320, !dbg !3320

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3321
  call void @llvm.dbg.value(metadata i8* %21, metadata !3247, metadata !DIExpression()), !dbg !3308
  %22 = icmp eq i8* %0, null, !dbg !3322
  %23 = and i32 %1, 7, !dbg !3324
  %24 = sub nuw nsw i32 8, %23, !dbg !3324
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3324
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3324
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %27, metadata !3242, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %26, metadata !3247, metadata !DIExpression()), !dbg !3308
  br i1 %22, label %33, label %28, !dbg !3325

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3327
  %30 = sub i32 4, %17, !dbg !3327
  %31 = add i32 %30, %29, !dbg !3328
  %32 = icmp ugt i32 %31, %27, !dbg !3329
  br i1 %32, label %320, label %33, !dbg !3330

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %34, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %3, metadata !3258, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 4, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 4, metadata !3248, metadata !DIExpression()), !dbg !3308
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3332

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %42, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %43, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %44, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %45, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %72, metadata !3256, metadata !DIExpression()), !dbg !3308
  br i1 %46, label %73, label %47, !dbg !3333

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3334
  %49 = zext i1 %48 to i32, !dbg !3338
  %50 = add nsw i32 %72, %49, !dbg !3338
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3338
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %52, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %51, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %50, metadata !3256, metadata !DIExpression()), !dbg !3308
  br label %53, !dbg !3339

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %40, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %58, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %57, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %56, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %54, metadata !3256, metadata !DIExpression()), !dbg !3308
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %60, metadata !3244, metadata !DIExpression()), !dbg !3308
  %61 = load i8, i8* %60, align 1, !dbg !3342
  %62 = icmp eq i8 %61, 0, !dbg !3343
  br i1 %62, label %226, label %63, !dbg !3344, !llvm.loop !3345

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3333

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3348

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3308
  %75 = add nsw i32 %72, -1, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %75, metadata !3256, metadata !DIExpression()), !dbg !3308
  br label %53, !dbg !3350

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3351

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 4, metadata !3248, metadata !DIExpression()), !dbg !3308
  br label %53, !dbg !3352

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 4, metadata !3248, metadata !DIExpression()), !dbg !3308
  br label %53, !dbg !3353

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3354
  %81 = icmp eq i8 %80, 108, !dbg !3356
  br i1 %81, label %82, label %109, !dbg !3357

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3358
  %84 = load i8, i8* %83, align 1, !dbg !3358
  %85 = icmp eq i8 %84, 108, !dbg !3361
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3362
  %89 = add i32 %88, 7, !dbg !3362
  %90 = and i32 %89, -8, !dbg !3362
  %91 = inttoptr i32 %90 to i8*, !dbg !3362
  %92 = inttoptr i32 %90 to double*, !dbg !3362
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3362
  %94 = load double, double* %92, align 8, !dbg !3362
  call void @llvm.dbg.value(metadata i8* %93, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 8, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 8, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata double %94, metadata !3276, metadata !DIExpression()), !dbg !3364
  %95 = ptrtoint i8* %43 to i32, !dbg !3365
  %96 = add i32 %95, 7, !dbg !3365
  %97 = and i32 %96, -8, !dbg !3365
  %98 = inttoptr i32 %97 to i8*, !dbg !3366
  call void @llvm.dbg.value(metadata i8* %98, metadata !3247, metadata !DIExpression()), !dbg !3308
  br i1 %22, label %104, label %99, !dbg !3367

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3368
  %101 = icmp ugt i32 %100, %196, !dbg !3372
  br i1 %101, label %320, label %102, !dbg !3373

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3374
  store double %94, double* %103, align 8, !dbg !3374
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %105, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3308
  br label %53, !dbg !3378

107:                                              ; preds = %73, %73
  br label %109, !dbg !3379

108:                                              ; preds = %73
  br label %109, !dbg !3379

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3308
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3308
  call void @llvm.dbg.value(metadata i32 %113, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %112, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3262, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  %114 = ptrtoint i8* %43 to i32, !dbg !3379
  %115 = add i32 %114, -1, !dbg !3379
  %116 = add i32 %115, %112, !dbg !3379
  %117 = sub i32 0, %112, !dbg !3379
  %118 = and i32 %116, %117, !dbg !3379
  %119 = inttoptr i32 %118 to i8*, !dbg !3380
  call void @llvm.dbg.value(metadata i8* %119, metadata !3247, metadata !DIExpression()), !dbg !3308
  br i1 %22, label %124, label %120, !dbg !3381

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3383
  %122 = add i32 %121, %118, !dbg !3384
  %123 = icmp ugt i32 %122, %196, !dbg !3385
  br i1 %123, label %320, label %124, !dbg !3386

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3387

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3380
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3388
  call void @llvm.dbg.value(metadata i8* %127, metadata !3245, metadata !DIExpression()), !dbg !3308
  %128 = bitcast i8* %41 to i8**, !dbg !3388
  %129 = load i8*, i8** %128, align 4, !dbg !3388
  call void @llvm.dbg.value(metadata i8* %129, metadata !3258, metadata !DIExpression()), !dbg !3308
  br label %130, !dbg !3389

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3308
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3390
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3308
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3391
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3308
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3308
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3308
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3308
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3308
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3308
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3392
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %142, metadata !3242, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %141, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %140, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %139, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %138, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %137, metadata !3253, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %136, metadata !3261, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %135, metadata !3254, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %133, metadata !3258, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %132, metadata !3256, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %131, metadata !3255, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.label(metadata !3307), !dbg !3394
  br i1 %22, label %146, label %144, !dbg !3395

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3396
  store i8* %133, i8** %145, align 4, !dbg !3399
  br label %146, !dbg !3400

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3401
  call void @llvm.dbg.value(metadata i32 %147, metadata !3261, metadata !DIExpression()), !dbg !3308
  %148 = icmp sgt i32 %136, 0, !dbg !3402
  br i1 %148, label %152, label %149, !dbg !3403

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3404
  %151 = zext i1 %150 to i32, !dbg !3404
  br label %152, !dbg !3403

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3403
  %154 = icmp eq i32 %153, 0, !dbg !3403
  call void @llvm.dbg.value(metadata i1 %154, metadata !3285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3405
  call void @llvm.dbg.value(metadata i1 %36, metadata !3288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3405
  %155 = or i1 %36, %154, !dbg !3406
  br i1 %155, label %156, label %192, !dbg !3406

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3407
  %158 = sub i32 %157, %17, !dbg !3407
  %159 = lshr i32 %158, 2, !dbg !3408
  call void @llvm.dbg.value(metadata i32 %159, metadata !3289, metadata !DIExpression()), !dbg !3409
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3410
  br i1 %161, label %162, label %163, !dbg !3410

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3412
  unreachable, !dbg !3412

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3417
  br i1 %164, label %165, label %166, !dbg !3419

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3420
  unreachable, !dbg !3420

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3425

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3426
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3429
  store i8 %168, i8* %169, align 1, !dbg !3430
  %170 = trunc i32 %132 to i8, !dbg !3431
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3432
  store i8 %170, i8* %171, align 1, !dbg !3433
  br i1 %154, label %175, label %172, !dbg !3434

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3435
  store i8 %173, i8* %169, align 1, !dbg !3435
  %174 = add i32 %131, 1, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %174, metadata !3255, metadata !DIExpression()), !dbg !3308
  br label %187, !dbg !3439

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %176, metadata !3254, metadata !DIExpression()), !dbg !3308
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3442

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %179, metadata !3242, metadata !DIExpression()), !dbg !3308
  br label %187, !dbg !3446

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3447

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %182, metadata !3242, metadata !DIExpression()), !dbg !3308
  br label %187, !dbg !3451

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3452
  %185 = add i32 %142, 2, !dbg !3454
  %186 = add i32 %185, %184, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %186, metadata !3242, metadata !DIExpression()), !dbg !3308
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3308
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3308
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3308
  call void @llvm.dbg.value(metadata i32 %190, metadata !3242, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %189, metadata !3254, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %188, metadata !3255, metadata !DIExpression()), !dbg !3308
  %191 = add nuw nsw i32 %137, 1, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %191, metadata !3253, metadata !DIExpression()), !dbg !3308
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3308
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3391
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3308
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3392
  call void @llvm.dbg.value(metadata i32 %196, metadata !3242, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %195, metadata !3253, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %194, metadata !3254, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %193, metadata !3255, metadata !DIExpression()), !dbg !3308
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3457
  call void @llvm.dbg.value(metadata i8* %197, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %143, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %141, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %139, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %138, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3262, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %132, metadata !3256, metadata !DIExpression()), !dbg !3308
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %198, metadata !3244, metadata !DIExpression()), !dbg !3308
  %199 = load i8, i8* %198, align 1, !dbg !3342
  %200 = icmp eq i8 %199, 0, !dbg !3343
  br i1 %200, label %226, label %63, !dbg !3344

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3458

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %203, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 undef, metadata !3292, metadata !DIExpression()), !dbg !3460
  br i1 %22, label %219, label %204, !dbg !3461

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3459
  %206 = load i32, i32* %205, align 4, !dbg !3459
  call void @llvm.dbg.value(metadata i32 %206, metadata !3292, metadata !DIExpression()), !dbg !3460
  %207 = inttoptr i32 %118 to i32*, !dbg !3462
  store i32 %206, i32* %207, align 4, !dbg !3465
  br label %219, !dbg !3466

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3467
  %210 = add i32 %209, 7, !dbg !3467
  %211 = and i32 %210, -8, !dbg !3467
  %212 = inttoptr i32 %211 to i8*, !dbg !3467
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3467
  call void @llvm.dbg.value(metadata i8* %213, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i64 undef, metadata !3298, metadata !DIExpression()), !dbg !3468
  br i1 %22, label %219, label %214, !dbg !3469

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3467
  %216 = load i64, i64* %215, align 8, !dbg !3467
  call void @llvm.dbg.value(metadata i64 %216, metadata !3298, metadata !DIExpression()), !dbg !3468
  %217 = inttoptr i32 %118 to i64*, !dbg !3470
  store i64 %216, i64* %217, align 8, !dbg !3475
  br label %219, !dbg !3476

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3477
  unreachable, !dbg !3477

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3482
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %221, metadata !3245, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %40, metadata !3244, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %222, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %113, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %112, metadata !3249, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3262, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %72, metadata !3256, metadata !DIExpression()), !dbg !3308
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %223, metadata !3244, metadata !DIExpression()), !dbg !3308
  %224 = load i8, i8* %223, align 1, !dbg !3342
  %225 = icmp eq i8 %224, 0, !dbg !3343
  br i1 %225, label %226, label %38, !dbg !3344

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3483
  %228 = ptrtoint i8* %227 to i32, !dbg !3484
  %229 = sub i32 %228, %17, !dbg !3484
  %230 = lshr i32 %229, 2, !dbg !3486
  %231 = icmp ugt i32 %229, 1023, !dbg !3487
  br i1 %231, label %232, label %233, !dbg !3488

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3489
  unreachable, !dbg !3489

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3494

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3495
  %236 = add i32 %235, %229, !dbg !3498
  br label %320, !dbg !3499

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3500
  store i8 %238, i8* %0, align 1, !dbg !3501
  %239 = trunc i32 %194 to i8, !dbg !3502
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3504
  store i8 %240, i8* %242, align 1, !dbg !3506
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3507
  store i8 %241, i8* %243, align 1, !dbg !3508
  %244 = trunc i32 %193 to i8, !dbg !3509
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3510
  store i8 %244, i8* %245, align 1, !dbg !3511
  %246 = icmp eq i32 %193, 0, !dbg !3512
  %247 = xor i1 %246, true, !dbg !3513
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3513
  call void @llvm.dbg.value(metadata i8* %227, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 0, metadata !3257, metadata !DIExpression()), !dbg !3308
  br i1 %249, label %250, label %269, !dbg !3513

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3514

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %254, metadata !3257, metadata !DIExpression()), !dbg !3308
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3515
  %256 = load i8, i8* %255, align 1, !dbg !3515
  %257 = icmp sgt i8 %256, -1, !dbg !3517
  br i1 %257, label %265, label %258, !dbg !3518

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3301, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3519
  %259 = ptrtoint i8* %253 to i32, !dbg !3520
  %260 = add i32 %251, %259, !dbg !3522
  %261 = icmp ugt i32 %260, %196, !dbg !3523
  br i1 %261, label %320, label %262, !dbg !3524

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3525
  call void @llvm.dbg.value(metadata i8 %263, metadata !3301, metadata !DIExpression()), !dbg !3519
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3526
  call void @llvm.dbg.value(metadata i8* %264, metadata !3247, metadata !DIExpression()), !dbg !3308
  store i8 %263, i8* %253, align 1, !dbg !3527
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3457
  call void @llvm.dbg.value(metadata i8* %266, metadata !3247, metadata !DIExpression()), !dbg !3308
  %267 = add nuw i32 %254, 1, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %267, metadata !3257, metadata !DIExpression()), !dbg !3308
  %268 = icmp eq i32 %267, %195, !dbg !3529
  br i1 %268, label %269, label %252, !dbg !3514, !llvm.loop !3530

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3457
  call void @llvm.dbg.value(metadata i8* %270, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 0, metadata !3257, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %133, metadata !3258, metadata !DIExpression()), !dbg !3308
  %271 = icmp eq i32 %195, 0, !dbg !3532
  br i1 %271, label %316, label %272, !dbg !3535

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3535

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %276, metadata !3258, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %277, metadata !3257, metadata !DIExpression()), !dbg !3308
  br i1 %246, label %282, label %278, !dbg !3536

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3539
  %280 = load i8, i8* %279, align 1, !dbg !3539
  %281 = icmp sgt i8 %280, -1, !dbg !3540
  br i1 %281, label %282, label %311, !dbg !3541

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3542

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3248, metadata !DIExpression()), !dbg !3308
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3543
  %285 = load i8, i8* %284, align 1, !dbg !3543
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %286, metadata !3247, metadata !DIExpression()), !dbg !3308
  store i8 %285, i8* %275, align 1, !dbg !3547
  br label %297, !dbg !3548

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3549
  %289 = load i8, i8* %288, align 1, !dbg !3549
  %290 = zext i8 %289 to i32, !dbg !3549
  %291 = shl nuw nsw i32 %290, 2, !dbg !3551
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3552
  %293 = bitcast i8* %292 to i8**, !dbg !3553
  %294 = load i8*, i8** %293, align 4, !dbg !3553
  call void @llvm.dbg.value(metadata i8* %294, metadata !3258, metadata !DIExpression()), !dbg !3308
  store i8* null, i8** %293, align 4, !dbg !3554
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3555
  %296 = add i32 %295, 1, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %296, metadata !3248, metadata !DIExpression()), !dbg !3308
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3308
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3557
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3308
  call void @llvm.dbg.value(metadata i8* %300, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %299, metadata !3248, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %298, metadata !3258, metadata !DIExpression()), !dbg !3308
  %301 = ptrtoint i8* %300 to i32, !dbg !3558
  %302 = add i32 %273, %299, !dbg !3560
  %303 = add i32 %302, %301, !dbg !3561
  %304 = icmp ugt i32 %303, %196, !dbg !3562
  br i1 %304, label %320, label %305, !dbg !3563

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3564
  %307 = load i8, i8* %306, align 1, !dbg !3564
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %308, metadata !3247, metadata !DIExpression()), !dbg !3308
  store i8 %307, i8* %300, align 1, !dbg !3566
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3567
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3568
  call void @llvm.dbg.value(metadata i8* %310, metadata !3247, metadata !DIExpression()), !dbg !3308
  br label %311, !dbg !3569

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3570
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3308
  call void @llvm.dbg.value(metadata i8* %313, metadata !3247, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %312, metadata !3258, metadata !DIExpression()), !dbg !3308
  %314 = add nuw i32 %277, 1, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %314, metadata !3257, metadata !DIExpression()), !dbg !3308
  %315 = icmp eq i32 %314, %195, !dbg !3532
  br i1 %315, label %316, label %274, !dbg !3535, !llvm.loop !3572

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3457
  %318 = ptrtoint i8* %317 to i32, !dbg !3574
  %319 = sub i32 %318, %17, !dbg !3574
  br label %320, !dbg !3575

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3576
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3576
  ret i32 %321, !dbg !3576
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3577 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3581, metadata !DIExpression()), !dbg !3582
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3583
  ret i1 %2, !dbg !3584
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3588, metadata !DIExpression()), !dbg !3589
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3590
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3591
  %4 = and i1 %2, %3, !dbg !3591
  ret i1 %4, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3593 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3597, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i32 %1, metadata !3598, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i32 %2, metadata !3599, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8* %3, metadata !3600, metadata !DIExpression()), !dbg !3603
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3604
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3601, metadata !DIExpression()), !dbg !3605
  call void @llvm.va_start(i8* nonnull %6), !dbg !3606
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3607
  %8 = load i32, i32* %7, align 4, !dbg !3607
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3607
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %10, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.va_end(i8* nonnull %6), !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3609
  ret i32 %10, !dbg !3610
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3611 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3623, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3624, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %2, metadata !3625, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %3, metadata !3626, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %3, metadata !3627, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %3, metadata !3628, metadata !DIExpression()), !dbg !3642
  %5 = icmp eq i8* %3, null, !dbg !3643
  br i1 %5, label %45, label %6, !dbg !3645

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3637, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3642
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3646
  %8 = load i8, i8* %7, align 1, !dbg !3646
  %9 = zext i8 %8 to i32, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %9, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8 undef, metadata !3639, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i8 undef, metadata !3640, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i32 0, metadata !3636, metadata !DIExpression()), !dbg !3642
  %10 = icmp eq i8 %8, 0, !dbg !3648
  br i1 %10, label %39, label %11, !dbg !3651

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3652
  call void @llvm.dbg.value(metadata i8 %12, metadata !3637, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %13 = zext i8 %12 to i32, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %13, metadata !3637, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %14 = shl nuw nsw i32 %13, 2, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %14, metadata !3637, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3655
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3656
  %17 = load i8, i8* %16, align 1, !dbg !3656
  call void @llvm.dbg.value(metadata i8 %17, metadata !3639, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %18 = zext i8 %17 to i32, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %18, metadata !3639, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3658
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3659
  %21 = load i8, i8* %20, align 1, !dbg !3659
  call void @llvm.dbg.value(metadata i8 %21, metadata !3640, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %22 = zext i8 %21 to i32, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %22, metadata !3640, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %23 = shl nuw nsw i32 %22, 1, !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3662
  call void @llvm.dbg.value(metadata i8* %24, metadata !3634, metadata !DIExpression()), !dbg !3642
  br label %25, !dbg !3651

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3634, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 %27, metadata !3636, metadata !DIExpression()), !dbg !3642
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3663
  call void @llvm.dbg.value(metadata i8* %28, metadata !3634, metadata !DIExpression()), !dbg !3642
  %29 = load i8, i8* %26, align 1, !dbg !3665
  %30 = zext i8 %29 to i32, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %30, metadata !3641, metadata !DIExpression()), !dbg !3642
  %31 = shl nuw nsw i32 %30, 2, !dbg !3666
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3667
  %33 = bitcast i8* %32 to i8**, !dbg !3668
  call void @llvm.dbg.value(metadata i8** %33, metadata !3635, metadata !DIExpression()), !dbg !3642
  store i8* %28, i8** %33, align 4, !dbg !3669
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3670
  %35 = add i32 %34, 1, !dbg !3671
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3672
  call void @llvm.dbg.value(metadata i8* %36, metadata !3634, metadata !DIExpression()), !dbg !3642
  %37 = add nuw nsw i32 %27, 1, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %37, metadata !3636, metadata !DIExpression()), !dbg !3642
  %38 = icmp eq i32 %37, %9, !dbg !3648
  br i1 %38, label %39, label %25, !dbg !3651, !llvm.loop !3674

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3676
  call void @llvm.dbg.value(metadata i8* %40, metadata !3627, metadata !DIExpression()), !dbg !3642
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3677
  %42 = bitcast i8* %41 to i8**, !dbg !3677
  %43 = load i8*, i8** %42, align 1, !dbg !3677
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3678
  br label %45, !dbg !3679

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3642
  ret i32 %46, !dbg !3680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3681 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3685, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3686, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i8* %2, metadata !3687, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i8* %3, metadata !3688, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i8* %4, metadata !3689, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i8* %4, metadata !3690, metadata !DIExpression()), !dbg !3695
  %6 = ptrtoint i8* %4 to i32, !dbg !3696
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3696
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3696
  ret i32 %8, !dbg !3697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3702, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1, metadata !3703, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 0, metadata !3705, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i32 0, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3705, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %0, metadata !3702, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3707
  %3 = load i8, i8* %0, align 1, !dbg !3708
  call void @llvm.dbg.value(metadata i8 %3, metadata !3704, metadata !DIExpression()), !dbg !3707
  %4 = icmp eq i8 %3, 0, !dbg !3709
  br i1 %4, label %29, label %5, !dbg !3710

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %8, metadata !3706, metadata !DIExpression()), !dbg !3707
  br i1 %9, label %11, label %22, !dbg !3712

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3714
  br i1 %12, label %13, label %17, !dbg !3718

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3719
  br i1 %14, label %29, label %15, !dbg !3722

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3723
  br i1 %16, label %29, label %22, !dbg !3725

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3726
  %19 = xor i1 %18, true, !dbg !3728
  %20 = zext i1 %18 to i32, !dbg !3728
  %21 = add nsw i32 %8, %20, !dbg !3728
  br label %22, !dbg !3728

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3707
  call void @llvm.dbg.value(metadata i32 %24, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8 poison, metadata !3705, metadata !DIExpression()), !dbg !3707
  %25 = icmp eq i8 %6, 37, !dbg !3729
  %26 = xor i1 %25, %23, !dbg !3731
  call void @llvm.dbg.value(metadata i8* %10, metadata !3702, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.value(metadata i8* %10, metadata !3702, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3707
  %27 = load i8, i8* %10, align 1, !dbg !3708
  call void @llvm.dbg.value(metadata i8 %27, metadata !3704, metadata !DIExpression()), !dbg !3707
  %28 = icmp eq i8 %27, 0, !dbg !3709
  br i1 %28, label %29, label %5, !dbg !3710, !llvm.loop !3732

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3707
  ret i1 %30, !dbg !3734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3735 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3739, metadata !DIExpression()), !dbg !3740
  %2 = add i8 %0, -64, !dbg !3741
  %3 = icmp ult i8 %2, 59, !dbg !3741
  ret i1 %3, !dbg !3742
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3743 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3751, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %1, metadata !3752, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3753, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %3, metadata !3754, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %4, metadata !3755, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i16* %5, metadata !3756, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %6, metadata !3757, metadata !DIExpression()), !dbg !3820
  %11 = icmp eq i8* %0, null, !dbg !3821
  br i1 %11, label %12, label %13, !dbg !3824

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3825
  unreachable, !dbg !3825

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3758, metadata !DIExpression()), !dbg !3820
  %14 = bitcast i8* %0 to i32*, !dbg !3827
  call void @llvm.dbg.value(metadata i32* %14, metadata !3759, metadata !DIExpression()), !dbg !3820
  %15 = and i32 %4, 8, !dbg !3828
  %16 = icmp eq i32 %15, 0, !dbg !3829
  call void @llvm.dbg.value(metadata i1 %16, metadata !3763, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %0, metadata !3766, metadata !DIExpression()), !dbg !3820
  %17 = icmp eq i32 %1, 0, !dbg !3830
  br i1 %17, label %18, label %20, !dbg !3831

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3832
  br label %20, !dbg !3831

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3831
  call void @llvm.dbg.value(metadata i32 %21, metadata !3752, metadata !DIExpression()), !dbg !3820
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3833
  %23 = load i8, i8* %22, align 1, !dbg !3833
  %24 = zext i8 %23 to i32, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %24, metadata !3761, metadata !DIExpression()), !dbg !3820
  %25 = icmp ne i8 %23, 0, !dbg !3835
  %26 = and i32 %4, 1, !dbg !3836
  %27 = icmp ne i32 %26, 0, !dbg !3836
  %28 = and i1 %27, %25, !dbg !3836
  call void @llvm.dbg.value(metadata i1 %28, metadata !3765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3820
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3837
  %30 = load i8, i8* %29, align 1, !dbg !3837
  %31 = zext i8 %30 to i32, !dbg !3838
  call void @llvm.dbg.value(metadata i32 %31, metadata !3762, metadata !DIExpression()), !dbg !3820
  %32 = icmp ne i8 %30, 0, !dbg !3839
  %33 = and i32 %4, 2, !dbg !3840
  %34 = icmp ne i32 %33, 0, !dbg !3840
  %35 = and i1 %34, %32, !dbg !3840
  call void @llvm.dbg.value(metadata i1 %35, metadata !3764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3820
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3841
  br i1 %36, label %41, label %37, !dbg !3841

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3843
  br i1 %38, label %287, label %39, !dbg !3846

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3847
  br label %287, !dbg !3849

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3850
  %43 = zext i8 %42 to i32, !dbg !3851
  %44 = shl nuw nsw i32 %43, 2, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %44, metadata !3760, metadata !DIExpression()), !dbg !3820
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3853
  %46 = bitcast i8* %45 to i8**, !dbg !3854
  %47 = load i8*, i8** %46, align 4, !dbg !3854
  call void @llvm.dbg.value(metadata i8* %47, metadata !3769, metadata !DIExpression()), !dbg !3820
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3855
  call void @llvm.dbg.value(metadata i8* %48, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3771, metadata !DIExpression()), !dbg !3820
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3856
  br i1 %49, label %50, label %135, !dbg !3857

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3768, metadata !DIExpression()), !dbg !3820
  br i1 %28, label %51, label %76, !dbg !3858

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %48, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3771, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3772, metadata !DIExpression()), !dbg !3859
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3860

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %55, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %56, metadata !3771, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %57, metadata !3772, metadata !DIExpression()), !dbg !3859
  %58 = load i8, i8* %55, align 1, !dbg !3861
  %59 = zext i8 %58 to i32, !dbg !3862
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3862
  %61 = bitcast i32* %60 to i8**, !dbg !3863
  %62 = load i8*, i8** %61, align 4, !dbg !3863
  call void @llvm.dbg.value(metadata i8* %62, metadata !3778, metadata !DIExpression()), !dbg !3864
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3865
  call void @llvm.dbg.value(metadata i32 %63, metadata !3781, metadata !DIExpression()), !dbg !3864
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3866
  br i1 %65, label %66, label %70, !dbg !3866

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3868
  %68 = add nuw i32 %56, 1, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %68, metadata !3771, metadata !DIExpression()), !dbg !3820
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3871
  store i16 %67, i16* %69, align 2, !dbg !3872
  br label %70, !dbg !3873

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3820
  call void @llvm.dbg.value(metadata i32 %71, metadata !3771, metadata !DIExpression()), !dbg !3820
  %72 = add nsw i32 %63, %54, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %72, metadata !3768, metadata !DIExpression()), !dbg !3820
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %73, metadata !3770, metadata !DIExpression()), !dbg !3820
  %74 = add nuw nsw i32 %57, 1, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %74, metadata !3772, metadata !DIExpression()), !dbg !3859
  %75 = icmp eq i32 %74, %24, !dbg !3877
  br i1 %75, label %82, label %53, !dbg !3860, !llvm.loop !3878

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3880
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3880
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3880
  br label %82, !dbg !3880

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3883
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3820
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3884
  call void @llvm.dbg.value(metadata i1 undef, metadata !3782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3885
  call void @llvm.dbg.value(metadata i32 0, metadata !3783, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %85, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %84, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %83, metadata !3771, metadata !DIExpression()), !dbg !3820
  %86 = icmp eq i8 %30, 0, !dbg !3887
  br i1 %86, label %287, label %87, !dbg !3888

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3889
  %89 = icmp eq i32 %88, 0, !dbg !3890
  call void @llvm.dbg.value(metadata i1 %89, metadata !3782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3885
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3888

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8* %96, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %97, metadata !3771, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %98, metadata !3783, metadata !DIExpression()), !dbg !3886
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %99, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 undef, metadata !3785, metadata !DIExpression()), !dbg !3892
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %100, metadata !3770, metadata !DIExpression()), !dbg !3820
  %101 = load i8, i8* %99, align 1, !dbg !3894
  call void @llvm.dbg.value(metadata i8 %101, metadata !3788, metadata !DIExpression()), !dbg !3892
  %102 = zext i8 %101 to i32, !dbg !3895
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3895
  %104 = bitcast i32* %103 to i8**, !dbg !3896
  %105 = load i8*, i8** %104, align 4, !dbg !3896
  call void @llvm.dbg.value(metadata i8* %105, metadata !3789, metadata !DIExpression()), !dbg !3892
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3897
  call void @llvm.dbg.value(metadata i1 %106, metadata !3790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3892
  br i1 %16, label %113, label %107, !dbg !3898

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3900
  call void @llvm.dbg.value(metadata i8 %108, metadata !3785, metadata !DIExpression()), !dbg !3892
  %109 = zext i8 %108 to i32, !dbg !3901
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3902
  br i1 %110, label %111, label %113, !dbg !3903

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3904
  %112 = add nsw i32 %95, -2, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %112, metadata !3768, metadata !DIExpression()), !dbg !3820
  br label %130, !dbg !3911

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3912

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3913

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %116, metadata !3768, metadata !DIExpression()), !dbg !3820
  br label %130, !dbg !3918

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3919

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3816), !dbg !3920
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %119, metadata !3791, metadata !DIExpression()), !dbg !3892
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3922
  br i1 %121, label %122, label %126, !dbg !3922

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3924
  %124 = add nuw i32 %97, 1, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %124, metadata !3771, metadata !DIExpression()), !dbg !3820
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3927
  store i16 %123, i16* %125, align 2, !dbg !3928
  br label %126, !dbg !3929

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3820
  call void @llvm.dbg.value(metadata i32 %127, metadata !3771, metadata !DIExpression()), !dbg !3820
  %128 = add i32 %95, -1, !dbg !3930
  %129 = add i32 %128, %119, !dbg !3931
  call void @llvm.dbg.value(metadata i32 %129, metadata !3768, metadata !DIExpression()), !dbg !3820
  br label %130, !dbg !3932

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3820
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3892
  call void @llvm.dbg.value(metadata i32 %132, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %131, metadata !3771, metadata !DIExpression()), !dbg !3820
  %133 = add nuw nsw i32 %98, 1, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %100, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %133, metadata !3783, metadata !DIExpression()), !dbg !3886
  %134 = icmp eq i32 %133, %31, !dbg !3887
  br i1 %134, label %287, label %94, !dbg !3888, !llvm.loop !3934

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3793, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3794, metadata !DIExpression()), !dbg !3937
  br i1 %28, label %136, label %138, !dbg !3938

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3795, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 0, metadata !3796, metadata !DIExpression()), !dbg !3820
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3939
  call void @llvm.dbg.value(metadata i8* %137, metadata !3797, metadata !DIExpression()), !dbg !3820
  br label %143, !dbg !3942

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3943
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3943

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3797, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 undef, metadata !3796, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 0, metadata !3795, metadata !DIExpression()), !dbg !3820
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3945
  br label %148, !dbg !3948

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3949
  call void @llvm.dbg.value(metadata i8* %151, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3799, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 %149, metadata !3796, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 %150, metadata !3795, metadata !DIExpression()), !dbg !3820
  %152 = icmp eq i8 %30, 0, !dbg !3951
  br i1 %152, label %153, label %155, !dbg !3952

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3953
  br label %160, !dbg !3952

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3952

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3953
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3954
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3955
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3820
  call void @llvm.dbg.value(metadata i8 undef, metadata !3792, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3820
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3956
  %166 = load i8, i8* %165, align 1, !dbg !3956
  %167 = zext i8 %162 to i32, !dbg !3957
  %168 = add i8 %166, %162, !dbg !3958
  call void @llvm.dbg.value(metadata i8 %168, metadata !3792, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3820
  %169 = icmp eq i32 %33, 0, !dbg !3959
  %170 = lshr i8 %163, 1, !dbg !3960
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3960
  call void @llvm.dbg.value(metadata i8 %171, metadata !3792, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3820
  %172 = icmp eq i32 %26, 0, !dbg !3961
  %173 = icmp eq i32 %161, 0, !dbg !3953
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3953
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3953
  call void @llvm.dbg.value(metadata i8 %175, metadata !3792, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3820
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3807, metadata !DIExpression()), !dbg !3962
  %176 = load i32, i32* %14, align 1, !dbg !3963
  store i8 %168, i8* %165, align 1, !dbg !3964
  store i8 %175, i8* %22, align 1, !dbg !3964
  store i8 %171, i8* %29, align 1, !dbg !3964
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3965
  call void @llvm.dbg.value(metadata i32 %177, metadata !3798, metadata !DIExpression()), !dbg !3820
  %178 = icmp slt i32 %177, 0, !dbg !3966
  br i1 %178, label %287, label %240, !dbg !3968

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %181, metadata !3799, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 %182, metadata !3796, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 %183, metadata !3795, metadata !DIExpression()), !dbg !3820
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %184, metadata !3770, metadata !DIExpression()), !dbg !3820
  %185 = load i8, i8* %180, align 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8 %185, metadata !3801, metadata !DIExpression()), !dbg !3971
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3972
  call void @llvm.dbg.value(metadata i8* %186, metadata !3770, metadata !DIExpression()), !dbg !3820
  %187 = load i8, i8* %184, align 1, !dbg !3973
  call void @llvm.dbg.value(metadata i8 %187, metadata !3804, metadata !DIExpression()), !dbg !3971
  %188 = zext i8 %187 to i32, !dbg !3974
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3974
  %190 = bitcast i32* %189 to i8**, !dbg !3975
  %191 = load i8*, i8** %190, align 4, !dbg !3975
  call void @llvm.dbg.value(metadata i8* %191, metadata !3805, metadata !DIExpression()), !dbg !3971
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3976
  call void @llvm.dbg.value(metadata i1 %192, metadata !3806, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3971
  br i1 %16, label %196, label %193, !dbg !3977

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3979
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3980
  br i1 %195, label %235, label %196, !dbg !3981

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3982

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3983

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3986
  br i1 %199, label %201, label %200, !dbg !3991

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3992
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3992
  unreachable, !dbg !3992

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3986
  %203 = add nuw nsw i8 %183, 1, !dbg !3994
  call void @llvm.dbg.value(metadata i8 %203, metadata !3795, metadata !DIExpression()), !dbg !3820
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3995
  br label %231, !dbg !3996

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3997

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3998
  br i1 %207, label %209, label %208, !dbg !4003

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4004
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4004
  unreachable, !dbg !4004

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3998
  %211 = add nuw nsw i8 %182, 1, !dbg !4006
  call void @llvm.dbg.value(metadata i8 %211, metadata !3796, metadata !DIExpression()), !dbg !3820
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4007
  br label %231, !dbg !4008

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4009

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4011
  br i1 %215, label %217, label %216, !dbg !4016

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4017
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4017
  unreachable, !dbg !4017

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4011
  %219 = add nuw nsw i8 %183, 1, !dbg !4019
  call void @llvm.dbg.value(metadata i8 %219, metadata !3795, metadata !DIExpression()), !dbg !3820
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4020
  br label %231, !dbg !4021

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4022
  br i1 %222, label %224, label %223, !dbg !4026

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4027
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4027
  unreachable, !dbg !4027

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4022
  %226 = add nuw nsw i8 %182, 1, !dbg !4029
  call void @llvm.dbg.value(metadata i8 %226, metadata !3796, metadata !DIExpression()), !dbg !3820
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4030
  store i8 %185, i8* %227, align 1, !dbg !4031
  %228 = add nuw nsw i8 %182, 2, !dbg !4032
  call void @llvm.dbg.value(metadata i8 %228, metadata !3796, metadata !DIExpression()), !dbg !3820
  %229 = zext i8 %226 to i32, !dbg !4033
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4033
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4034
  br label %235, !dbg !4035

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3820
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3955
  call void @llvm.dbg.value(metadata i8 %237, metadata !3796, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i8 %236, metadata !3795, metadata !DIExpression()), !dbg !3820
  %238 = add nuw nsw i32 %181, 1, !dbg !4035
  call void @llvm.dbg.value(metadata i8* %186, metadata !3770, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %238, metadata !3799, metadata !DIExpression()), !dbg !3950
  %239 = icmp eq i32 %238, %31, !dbg !3951
  br i1 %239, label %160, label %179, !dbg !3952, !llvm.loop !4036

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %177, metadata !3768, metadata !DIExpression()), !dbg !3820
  store i32 %176, i32* %14, align 1, !dbg !4038
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4039
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %243, metadata !3798, metadata !DIExpression()), !dbg !3820
  %244 = icmp slt i32 %243, 0, !dbg !4041
  br i1 %244, label %287, label %245, !dbg !4043

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3820
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4044
  %248 = add nuw nsw i32 %44, %24, !dbg !4044
  %249 = sub i32 %247, %248, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %249, metadata !3808, metadata !DIExpression()), !dbg !3820
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %250, metadata !3798, metadata !DIExpression()), !dbg !3820
  %251 = icmp slt i32 %250, 0, !dbg !4046
  br i1 %251, label %287, label %252, !dbg !4048

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %253, metadata !3768, metadata !DIExpression()), !dbg !3820
  %254 = add nuw nsw i32 %253, %250, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %254, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3809, metadata !DIExpression()), !dbg !4051
  %255 = icmp eq i8 %162, 0, !dbg !4052
  br i1 %255, label %284, label %256, !dbg !4053

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4053

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3809, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.value(metadata i32 %260, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4054
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4055
  %262 = load i8, i8* %261, align 1, !dbg !4055
  call void @llvm.dbg.value(metadata i8 %262, metadata !3811, metadata !DIExpression()), !dbg !4056
  store i8 %262, i8* %10, align 1, !dbg !4057
  %263 = zext i8 %262 to i32, !dbg !4058
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4058
  %265 = bitcast i32* %264 to i8**, !dbg !4059
  %266 = load i8*, i8** %265, align 4, !dbg !4059
  call void @llvm.dbg.value(metadata i8* %266, metadata !3814, metadata !DIExpression()), !dbg !4056
  br i1 %257, label %270, label %267, !dbg !4060

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4061
  %269 = load i16, i16* %268, align 2, !dbg !4061
  br label %270, !dbg !4060

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4060
  call void @llvm.dbg.value(metadata i32 undef, metadata !3815, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4056
  call void @llvm.dbg.value(metadata i8* %10, metadata !3811, metadata !DIExpression(DW_OP_deref)), !dbg !4056
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4062
  call void @llvm.dbg.value(metadata i32 %272, metadata !3798, metadata !DIExpression()), !dbg !3820
  %273 = icmp slt i32 %272, 0, !dbg !4063
  br i1 %273, label %277, label %274, !dbg !4065

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3815, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3820
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %275, metadata !3798, metadata !DIExpression()), !dbg !3820
  %276 = icmp slt i32 %275, 0, !dbg !4067
  br i1 %276, label %277, label %279, !dbg !4069

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4070
  call void @llvm.dbg.value(metadata i32 undef, metadata !3768, metadata !DIExpression()), !dbg !3820
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %280, metadata !3768, metadata !DIExpression()), !dbg !3820
  %281 = add nsw i32 %280, %275, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %281, metadata !3768, metadata !DIExpression()), !dbg !3820
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4070
  %282 = add nuw nsw i32 %259, 1, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %282, metadata !3809, metadata !DIExpression()), !dbg !4051
  %283 = icmp eq i32 %282, %167, !dbg !4052
  br i1 %283, label %284, label %258, !dbg !4053, !llvm.loop !4074

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4050
  call void @llvm.dbg.value(metadata i32 %285, metadata !3768, metadata !DIExpression()), !dbg !3820
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4076
  br label %287, !dbg !4077

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3820
  ret i32 %288, !dbg !4078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4083, metadata !DIExpression()), !dbg !4091
  %2 = icmp eq i8* %0, null, !dbg !4092
  br i1 %2, label %3, label %4, !dbg !4095

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4096
  unreachable, !dbg !4096

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4084, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.value(metadata i8* %0, metadata !4085, metadata !DIExpression()), !dbg !4091
  %5 = load i8, i8* %0, align 1, !dbg !4098
  %6 = zext i8 %5 to i32, !dbg !4098
  %7 = shl nuw nsw i32 %6, 2, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %7, metadata !4086, metadata !DIExpression()), !dbg !4091
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4100
  %9 = load i8, i8* %8, align 1, !dbg !4100
  %10 = zext i8 %9 to i32, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %10, metadata !4087, metadata !DIExpression()), !dbg !4091
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4101
  %12 = load i8, i8* %11, align 1, !dbg !4101
  %13 = zext i8 %12 to i32, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %13, metadata !4088, metadata !DIExpression()), !dbg !4091
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %14, metadata !4084, metadata !DIExpression()), !dbg !4091
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4103
  call void @llvm.dbg.value(metadata i8* %15, metadata !4084, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.value(metadata i32 0, metadata !4089, metadata !DIExpression()), !dbg !4104
  %16 = icmp eq i8 %9, 0, !dbg !4105
  br i1 %16, label %17, label %22, !dbg !4107

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4091
  %19 = ptrtoint i8* %18 to i32, !dbg !4108
  %20 = ptrtoint i8* %0 to i32, !dbg !4108
  %21 = sub i32 %19, %20, !dbg !4108
  ret i32 %21, !dbg !4109

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4089, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %24, metadata !4084, metadata !DIExpression()), !dbg !4091
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4110
  call void @llvm.dbg.value(metadata i8* %25, metadata !4084, metadata !DIExpression()), !dbg !4091
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4112
  %27 = add i32 %26, 1, !dbg !4113
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %28, metadata !4084, metadata !DIExpression()), !dbg !4091
  %29 = add nuw nsw i32 %23, 1, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %29, metadata !4089, metadata !DIExpression()), !dbg !4104
  %30 = icmp eq i32 %29, %10, !dbg !4105
  br i1 %30, label %17, label %22, !dbg !4107, !llvm.loop !4116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4118 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4122, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i8* %1, metadata !4123, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i8* %2, metadata !4124, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i16 %3, metadata !4125, metadata !DIExpression()), !dbg !4126
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4127
  br i1 %5, label %6, label %9, !dbg !4129

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4130
  %8 = add i32 %7, 1, !dbg !4132
  br label %20, !dbg !4133

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4134
  br i1 %10, label %13, label %11, !dbg !4135

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4135
  br label %16, !dbg !4135

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4136
  %15 = add i32 %14, 1, !dbg !4137
  br label %16, !dbg !4135

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4135
  %18 = and i32 %17, 65535, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %17, metadata !4125, metadata !DIExpression()), !dbg !4126
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4139
  br label %20, !dbg !4140

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4126
  ret i32 %21, !dbg !4141
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4144, metadata !DIExpression()), !dbg !4145
  ret i32 0, !dbg !4146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4147 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4151, metadata !DIExpression()), !dbg !4152
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4155 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4156
  ret i8* %1, !dbg !4157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4158 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4169, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i8* %0, metadata !4168, metadata !DIExpression()), !dbg !4180
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4181
  ret void, !dbg !4183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4188, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %1, metadata !4189, metadata !DIExpression()), !dbg !4190
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4191
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4191
  ret i32 %4, !dbg !4192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4193 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4200, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4197, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i8* %1, metadata !4198, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i8* %2, metadata !4199, metadata !DIExpression()), !dbg !4201
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4202
  ret void, !dbg !4203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4208, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i32 %1, metadata !4209, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i32 0, metadata !4210, metadata !DIExpression()), !dbg !4211
  %3 = icmp eq i32 %1, 0, !dbg !4212
  br i1 %3, label %13, label %4, !dbg !4215

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4210, metadata !DIExpression()), !dbg !4211
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4216
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4218
  %8 = load i8, i8* %7, align 1, !dbg !4218
  %9 = zext i8 %8 to i32, !dbg !4218
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4216
  %11 = add nuw i32 %5, 1, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %11, metadata !4210, metadata !DIExpression()), !dbg !4211
  %12 = icmp eq i32 %11, %1, !dbg !4212
  br i1 %12, label %13, label %4, !dbg !4215, !llvm.loop !4220

13:                                               ; preds = %4, %2
  ret void, !dbg !4222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4223 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4227, metadata !DIExpression()), !dbg !4229
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4230
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4228, metadata !DIExpression()), !dbg !4231
  call void @llvm.va_start(i8* nonnull %3), !dbg !4232
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4233
  %5 = load i32, i32* %4, align 4, !dbg !4233
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4233
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4233
  call void @llvm.va_end(i8* nonnull %3), !dbg !4234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4235
  ret void, !dbg !4235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4236 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4240, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4241, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i8* %2, metadata !4242, metadata !DIExpression()), !dbg !4245
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4246
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4243, metadata !DIExpression()), !dbg !4247
  call void @llvm.va_start(i8* nonnull %5), !dbg !4248
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4249
  %7 = load i32, i32* %6, align 4, !dbg !4249
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4249
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %9, metadata !4244, metadata !DIExpression()), !dbg !4245
  call void @llvm.va_end(i8* nonnull %5), !dbg !4250
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4251
  ret i32 %9, !dbg !4252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4253 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4260, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %0, metadata !4257, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %1, metadata !4258, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %2, metadata !4259, metadata !DIExpression()), !dbg !4267
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4268
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4268
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4261, metadata !DIExpression()), !dbg !4269
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4270
  store i8* %0, i8** %7, align 4, !dbg !4270
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4270
  store i32 %1, i32* %8, align 4, !dbg !4270
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4270
  store i32 0, i32* %9, align 4, !dbg !4270
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4271
  %10 = load i32, i32* %9, align 4, !dbg !4272
  %11 = load i32, i32* %8, align 4, !dbg !4274
  %12 = icmp slt i32 %10, %11, !dbg !4275
  br i1 %12, label %13, label %15, !dbg !4276

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4277
  store i8 0, i8* %14, align 1, !dbg !4279
  br label %15, !dbg !4280

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4281
  ret i32 %10, !dbg !4282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4288, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4289, metadata !DIExpression()), !dbg !4290
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4291
  %4 = load i8*, i8** %3, align 4, !dbg !4291
  %5 = icmp eq i8* %4, null, !dbg !4293
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4294
  br i1 %5, label %12, label %8, !dbg !4295

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4296
  %10 = load i32, i32* %9, align 4, !dbg !4296
  %11 = icmp slt i32 %7, %10, !dbg !4297
  br i1 %11, label %15, label %12, !dbg !4298

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4299
  %14 = add nsw i32 %7, 1, !dbg !4301
  store i32 %14, i32* %13, align 4, !dbg !4301
  br label %25, !dbg !4302

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4303
  %17 = icmp eq i32 %7, %16, !dbg !4305
  br i1 %17, label %18, label %21, !dbg !4306

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4307
  store i32 %19, i32* %6, align 4, !dbg !4307
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4309
  store i8 0, i8* %20, align 1, !dbg !4310
  br label %25, !dbg !4311

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4312
  %23 = add nsw i32 %7, 1, !dbg !4314
  store i32 %23, i32* %6, align 4, !dbg !4314
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4315
  store i8 %22, i8* %24, align 1, !dbg !4316
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4317
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4318 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4323, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i8* %1, metadata !4324, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i8* %2, metadata !4325, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i8* %3, metadata !4326, metadata !DIExpression()), !dbg !4327
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4328
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4329
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4330
  unreachable, !dbg !4331
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4332 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4439
  ret %struct.k_thread* %1, !dbg !4440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4446, metadata !DIExpression()), !dbg !4447
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4448, !srcloc !4450
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4451
  ret void, !dbg !4452
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4453 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4454, !srcloc !4456
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4457
  ret %struct.k_thread* %1, !dbg !4458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4459 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4469, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %1, metadata !4470, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %2, metadata !4471, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %4, metadata !4473, metadata !DIExpression()), !dbg !4598
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4599
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4599
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4474, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i1 undef, metadata !4480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4598
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4601

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4601

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4602
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %30, metadata !4471, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %29, metadata !4478, metadata !DIExpression()), !dbg !4598
  %31 = load i8, i8* %30, align 1, !dbg !4603
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4601

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4603
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4604
  call void @llvm.dbg.value(metadata i8* %34, metadata !4471, metadata !DIExpression()), !dbg !4598
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %35, metadata !4482, metadata !DIExpression()), !dbg !4605
  %36 = icmp slt i32 %35, 0, !dbg !4606
  %37 = add i32 %29, 1, !dbg !4604
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %36, label %365, label %28, !llvm.loop !4608

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4610
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4487, metadata !DIExpression()), !dbg !4611
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4611
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4530, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4533, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %30, metadata !4536, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 -1, metadata !4537, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 -1, metadata !4538, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* null, metadata !4539, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %14, metadata !4540, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8 0, metadata !4541, metadata !DIExpression()), !dbg !4612
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4613
  call void @llvm.dbg.value(metadata i8* %39, metadata !4471, metadata !DIExpression()), !dbg !4598
  %40 = load i24, i24* %15, align 8, !dbg !4614
  %41 = and i24 %40, 256, !dbg !4614
  %42 = icmp eq i24 %41, 0, !dbg !4614
  br i1 %42, label %51, label %43, !dbg !4616

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %44, metadata !4472, metadata !DIExpression()), !dbg !4598
  %45 = bitcast i8* %27 to i32*, !dbg !4617
  %46 = load i32, i32* %45, align 4, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %46, metadata !4537, metadata !DIExpression()), !dbg !4612
  %47 = icmp slt i32 %46, 0, !dbg !4619
  br i1 %47, label %48, label %56, !dbg !4621

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4622
  store i24 %49, i24* %15, align 8, !dbg !4622
  %50 = sub nsw i32 0, %46, !dbg !4624
  call void @llvm.dbg.value(metadata i32 %50, metadata !4537, metadata !DIExpression()), !dbg !4612
  br label %56, !dbg !4625

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4626
  %53 = icmp eq i24 %52, 0, !dbg !4626
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4628
  br label %56, !dbg !4628

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4629
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4612
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %58, metadata !4537, metadata !DIExpression()), !dbg !4612
  %60 = and i24 %57, 1024, !dbg !4629
  %61 = icmp eq i24 %60, 0, !dbg !4629
  br i1 %61, label %69, label %62, !dbg !4630

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4631
  call void @llvm.dbg.value(metadata i8* %63, metadata !4472, metadata !DIExpression()), !dbg !4598
  %64 = bitcast i8* %59 to i32*, !dbg !4631
  %65 = load i32, i32* %64, align 4, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %65, metadata !4542, metadata !DIExpression()), !dbg !4632
  %66 = icmp slt i32 %65, 0, !dbg !4633
  br i1 %66, label %67, label %74, !dbg !4635

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4636
  store i24 %68, i24* %15, align 8, !dbg !4636
  br label %74, !dbg !4638

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4639
  %71 = icmp eq i24 %70, 0, !dbg !4639
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4641
  br label %74, !dbg !4641

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4642
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4612
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4612
  call void @llvm.dbg.value(metadata i8* %77, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %76, metadata !4538, metadata !DIExpression()), !dbg !4612
  store i32 0, i32* %16, align 4, !dbg !4643
  store i32 0, i32* %17, align 8, !dbg !4644
  %78 = lshr i24 %75, 16, !dbg !4642
  call void @llvm.dbg.value(metadata i24 %78, metadata !4545, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4612
  %79 = lshr i24 %75, 11, !dbg !4645
  %80 = and i24 %79, 15, !dbg !4645
  %81 = zext i24 %80 to i32, !dbg !4645
  call void @llvm.dbg.value(metadata i32 %81, metadata !4546, metadata !DIExpression()), !dbg !4612
  %82 = trunc i24 %78 to i3, !dbg !4646
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4646

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4647

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %85, metadata !4472, metadata !DIExpression()), !dbg !4598
  %86 = bitcast i8* %77 to i32*, !dbg !4650
  %87 = load i32, i32* %86, align 4, !dbg !4650
  %88 = sext i32 %87 to i64, !dbg !4650
  store i64 %88, i64* %20, align 8, !dbg !4652
  br label %115, !dbg !4653

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4654
  call void @llvm.dbg.value(metadata i8* %90, metadata !4472, metadata !DIExpression()), !dbg !4598
  %91 = bitcast i8* %77 to i32*, !dbg !4654
  %92 = load i32, i32* %91, align 4, !dbg !4654
  %93 = sext i32 %92 to i64, !dbg !4654
  store i64 %93, i64* %20, align 8, !dbg !4657
  br label %115, !dbg !4658

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4659
  %96 = add i32 %95, 7, !dbg !4659
  %97 = and i32 %96, -8, !dbg !4659
  %98 = inttoptr i32 %97 to i8*, !dbg !4659
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %99, metadata !4472, metadata !DIExpression()), !dbg !4598
  %100 = inttoptr i32 %97 to i64*, !dbg !4659
  %101 = load i64, i64* %100, align 8, !dbg !4659
  store i64 %101, i64* %20, align 8, !dbg !4660
  br label %115, !dbg !4661

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4662
  %104 = add i32 %103, 7, !dbg !4662
  %105 = and i32 %104, -8, !dbg !4662
  %106 = inttoptr i32 %105 to i8*, !dbg !4662
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %107, metadata !4472, metadata !DIExpression()), !dbg !4598
  %108 = inttoptr i32 %105 to i64*, !dbg !4662
  %109 = load i64, i64* %108, align 8, !dbg !4662
  store i64 %109, i64* %20, align 8, !dbg !4663
  br label %115, !dbg !4664

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %111, metadata !4472, metadata !DIExpression()), !dbg !4598
  %112 = bitcast i8* %77 to i32*, !dbg !4665
  %113 = load i32, i32* %112, align 4, !dbg !4665
  %114 = sext i32 %113 to i64, !dbg !4666
  store i64 %114, i64* %20, align 8, !dbg !4667
  br label %115, !dbg !4668

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4669
  call void @llvm.dbg.value(metadata i8* %117, metadata !4472, metadata !DIExpression()), !dbg !4598
  %118 = trunc i24 %79 to i4, !dbg !4670
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4670

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4671
  %121 = ashr exact i64 %120, 56, !dbg !4671
  store i64 %121, i64* %20, align 8, !dbg !4674
  br label %177, !dbg !4675

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4676
  %124 = ashr exact i64 %123, 48, !dbg !4676
  store i64 %124, i64* %20, align 8, !dbg !4679
  br label %177, !dbg !4680

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4681

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %127, metadata !4472, metadata !DIExpression()), !dbg !4598
  %128 = bitcast i8* %77 to i32*, !dbg !4684
  %129 = load i32, i32* %128, align 4, !dbg !4684
  %130 = zext i32 %129 to i64, !dbg !4684
  store i64 %130, i64* %20, align 8, !dbg !4686
  br label %157, !dbg !4687

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %132, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %132, metadata !4472, metadata !DIExpression()), !dbg !4598
  %133 = bitcast i8* %77 to i32*, !dbg !4688
  %134 = load i32, i32* %133, align 4, !dbg !4688
  %135 = zext i32 %134 to i64, !dbg !4688
  store i64 %135, i64* %20, align 8, !dbg !4688
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4690
  %138 = add i32 %137, 7, !dbg !4690
  %139 = and i32 %138, -8, !dbg !4690
  %140 = inttoptr i32 %139 to i8*, !dbg !4690
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %141, metadata !4472, metadata !DIExpression()), !dbg !4598
  %142 = inttoptr i32 %139 to i64*, !dbg !4690
  %143 = load i64, i64* %142, align 8, !dbg !4690
  store i64 %143, i64* %20, align 8, !dbg !4691
  br label %157, !dbg !4692

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4693
  %146 = add i32 %145, 7, !dbg !4693
  %147 = and i32 %146, -8, !dbg !4693
  %148 = inttoptr i32 %147 to i8*, !dbg !4693
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %149, metadata !4472, metadata !DIExpression()), !dbg !4598
  %150 = inttoptr i32 %147 to i64*, !dbg !4693
  %151 = load i64, i64* %150, align 8, !dbg !4693
  store i64 %151, i64* %20, align 8, !dbg !4694
  br label %157, !dbg !4695

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4696
  call void @llvm.dbg.value(metadata i8* %153, metadata !4472, metadata !DIExpression()), !dbg !4598
  %154 = bitcast i8* %77 to i32*, !dbg !4696
  %155 = load i32, i32* %154, align 4, !dbg !4696
  %156 = zext i32 %155 to i64, !dbg !4697
  store i64 %156, i64* %20, align 8, !dbg !4698
  br label %157, !dbg !4699

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4700
  call void @llvm.dbg.value(metadata i8* %159, metadata !4472, metadata !DIExpression()), !dbg !4598
  %160 = trunc i24 %79 to i4, !dbg !4701
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4701

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4702
  store i64 %162, i64* %20, align 8, !dbg !4705
  br label %177, !dbg !4706

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4707
  store i64 %164, i64* %20, align 8, !dbg !4710
  br label %177, !dbg !4711

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4712
  %167 = add i32 %166, 7, !dbg !4712
  %168 = and i32 %167, -8, !dbg !4712
  %169 = inttoptr i32 %168 to i8*, !dbg !4712
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %170, metadata !4472, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %170, metadata !4472, metadata !DIExpression()), !dbg !4598
  %171 = inttoptr i32 %168 to double*, !dbg !4712
  %172 = load double, double* %171, align 8, !dbg !4712
  store double %172, double* %19, align 8, !dbg !4712
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4716
  call void @llvm.dbg.value(metadata i8* %174, metadata !4472, metadata !DIExpression()), !dbg !4598
  %175 = bitcast i8* %77 to i8**, !dbg !4716
  %176 = load i8*, i8** %175, align 4, !dbg !4716
  store i8* %176, i8** %18, align 8, !dbg !4719
  br label %177, !dbg !4720

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4612
  call void @llvm.dbg.value(metadata i8* %178, metadata !4472, metadata !DIExpression()), !dbg !4598
  %179 = and i24 %75, 3, !dbg !4721
  %180 = icmp eq i24 %179, 0, !dbg !4721
  br i1 %180, label %185, label %181, !dbg !4721

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %182, metadata !4547, metadata !DIExpression()), !dbg !4723
  %183 = icmp slt i32 %182, 0, !dbg !4724
  %184 = add i32 %182, %29, !dbg !4722
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4726
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4727

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %188, metadata !4551, metadata !DIExpression()), !dbg !4729
  %189 = icmp slt i32 %188, 0, !dbg !4730
  %190 = add i32 %29, 1, !dbg !4728
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %192, metadata !4539, metadata !DIExpression()), !dbg !4612
  %193 = icmp sgt i32 %76, -1, !dbg !4733
  br i1 %193, label %194, label %196, !dbg !4735

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4736
  call void @llvm.dbg.value(metadata i32 %195, metadata !4554, metadata !DIExpression()), !dbg !4738
  br label %241, !dbg !4739

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %197, metadata !4554, metadata !DIExpression()), !dbg !4738
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4539, metadata !DIExpression()), !dbg !4612
  %199 = load i64, i64* %20, align 8, !dbg !4742
  %200 = trunc i64 %199 to i8, !dbg !4743
  store i8 %200, i8* %10, align 1, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %23, metadata !4540, metadata !DIExpression()), !dbg !4612
  br label %245, !dbg !4745

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4746
  %203 = icmp eq i24 %202, 0, !dbg !4746
  %204 = trunc i24 %75 to i8, !dbg !4748
  %205 = shl i8 %204, 1, !dbg !4748
  %206 = and i8 %205, 32, !dbg !4748
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4748
  call void @llvm.dbg.value(metadata i8 %207, metadata !4541, metadata !DIExpression()), !dbg !4612
  %208 = load i64, i64* %20, align 8, !dbg !4749
  call void @llvm.dbg.value(metadata i64 %208, metadata !4479, metadata !DIExpression()), !dbg !4598
  %209 = icmp slt i64 %208, 0, !dbg !4750
  br i1 %209, label %210, label %212, !dbg !4752

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4541, metadata !DIExpression()), !dbg !4612
  %211 = sub nsw i64 0, %208, !dbg !4753
  store i64 %211, i64* %20, align 8, !dbg !4755
  br label %212, !dbg !4756

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4612
  call void @llvm.dbg.value(metadata i8 %213, metadata !4541, metadata !DIExpression()), !dbg !4612
  %214 = load i64, i64* %20, align 8, !dbg !4757
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %215, metadata !4539, metadata !DIExpression()), !dbg !4612
  br label %216, !dbg !4759

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4760
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4761
  call void @llvm.dbg.value(metadata i8* %218, metadata !4539, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8 %217, metadata !4541, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.label(metadata !4597), !dbg !4762
  %219 = icmp sgt i32 %76, -1, !dbg !4763
  br i1 %219, label %222, label %220, !dbg !4764

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4765
  br label %245, !dbg !4764

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4767
  %224 = sub i32 %22, %223, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %224, metadata !4556, metadata !DIExpression()), !dbg !4768
  %225 = load i24, i24* %15, align 8, !dbg !4769
  %226 = and i24 %225, -65, !dbg !4769
  store i24 %226, i24* %15, align 8, !dbg !4769
  %227 = icmp ugt i32 %76, %224, !dbg !4770
  br i1 %227, label %228, label %245, !dbg !4772

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4773
  store i32 %229, i32* %16, align 4, !dbg !4775
  br label %245, !dbg !4776

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4777
  %232 = icmp eq i8* %231, null, !dbg !4779
  br i1 %232, label %245, label %233, !dbg !4780

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4781
  %235 = zext i32 %234 to i64, !dbg !4781
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %236, metadata !4539, metadata !DIExpression()), !dbg !4612
  %237 = load i24, i24* %15, align 8, !dbg !4784
  %238 = or i24 %237, 1048576, !dbg !4784
  store i24 %238, i24* %15, align 8, !dbg !4784
  store i8 120, i8* %21, align 1, !dbg !4785
  br label %216, !dbg !4786

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4787
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4790
  br label %363, !dbg !4791

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4792
  call void @llvm.dbg.value(metadata i32 %242, metadata !4554, metadata !DIExpression()), !dbg !4738
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4793
  call void @llvm.dbg.value(metadata i32 -1, metadata !4538, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 %29, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %192, metadata !4539, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %243, metadata !4540, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8 0, metadata !4541, metadata !DIExpression()), !dbg !4612
  %244 = icmp eq i8* %192, null, !dbg !4794
  br i1 %244, label %363, label %245, !dbg !4796, !llvm.loop !4608

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4765
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata i32 0, metadata !4560, metadata !DIExpression()), !dbg !4612
  %250 = zext i8 %249 to i32, !dbg !4797
  %251 = icmp eq i8 %249, 0, !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata i32 undef, metadata !4559, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata i32 undef, metadata !4559, metadata !DIExpression()), !dbg !4612
  %252 = icmp sgt i32 %58, 0, !dbg !4800
  br i1 %252, label %253, label %302, !dbg !4801

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4765
  %255 = icmp eq i24 %254, 0, !dbg !4765
  %256 = ptrtoint i8* %248 to i32, !dbg !4802
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  %257 = ptrtoint i8* %247 to i32, !dbg !4802
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  %258 = xor i1 %251, true, !dbg !4803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  %259 = sext i1 %258 to i32, !dbg !4803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  %260 = lshr i24 %246, 19, !dbg !4804
  %261 = and i24 %260, 1, !dbg !4804
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4804
  %263 = zext i24 %262 to i32, !dbg !4804
  %264 = add i32 %257, %259, !dbg !4804
  %265 = add i32 %256, %263, !dbg !4804
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  %266 = and i24 %246, 4194304, !dbg !4805
  %267 = icmp eq i24 %266, 0, !dbg !4805
  %268 = load i32, i32* %16, align 4, !dbg !4807
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4559, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4612
  call void @llvm.dbg.value(metadata i32 undef, metadata !4559, metadata !DIExpression()), !dbg !4612
  %269 = load i32, i32* %17, align 8, !dbg !4808
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4808
  call void @llvm.dbg.value(metadata i32 undef, metadata !4559, metadata !DIExpression()), !dbg !4612
  %271 = add i32 %264, %58, !dbg !4808
  %272 = add i32 %265, %268, !dbg !4808
  %273 = add i32 %272, %270, !dbg !4809
  %274 = sub i32 %271, %273, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %274, metadata !4537, metadata !DIExpression()), !dbg !4612
  %275 = and i24 %246, 4, !dbg !4810
  %276 = icmp eq i24 %275, 0, !dbg !4810
  br i1 %276, label %277, label %302, !dbg !4811

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4561, metadata !DIExpression()), !dbg !4812
  %278 = and i24 %246, 64, !dbg !4813
  %279 = icmp eq i24 %278, 0, !dbg !4813
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4814
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4814
  %282 = select i1 %279, i32 32, i32 48, !dbg !4814
  br i1 %280, label %287, label %283, !dbg !4814

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %284, metadata !4566, metadata !DIExpression()), !dbg !4816
  %285 = icmp slt i32 %284, 0, !dbg !4817
  %286 = add i32 %29, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4612
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %290, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8 undef, metadata !4561, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %288, metadata !4541, metadata !DIExpression()), !dbg !4612
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4819
  %292 = add i32 %291, -1, !dbg !4819
  br label %293, !dbg !4819

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4820
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %295, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %294, metadata !4537, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 %294, metadata !4537, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4612
  %296 = icmp sgt i32 %294, 0, !dbg !4821
  br i1 %296, label %297, label %302, !dbg !4819

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %298, metadata !4537, metadata !DIExpression()), !dbg !4612
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4823
  call void @llvm.dbg.value(metadata i32 %299, metadata !4572, metadata !DIExpression()), !dbg !4824
  %300 = icmp slt i32 %299, 0, !dbg !4825
  %301 = add i32 %295, 1, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %300, label %361, label %293, !llvm.loop !4827

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4612
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4612
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %305, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %304, metadata !4537, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8 %303, metadata !4541, metadata !DIExpression()), !dbg !4612
  %306 = icmp eq i8 %303, 0, !dbg !4829
  br i1 %306, label %312, label %307, !dbg !4830

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4831
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %309, metadata !4575, metadata !DIExpression()), !dbg !4833
  %310 = icmp slt i32 %309, 0, !dbg !4834
  %311 = add i32 %305, 1, !dbg !4832
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %313, metadata !4478, metadata !DIExpression()), !dbg !4598
  %314 = lshr i24 %246, 20, !dbg !4836
  %315 = lshr i24 %246, 19, !dbg !4837
  %316 = or i24 %314, %315, !dbg !4838
  %317 = and i24 %316, 1, !dbg !4838
  %318 = icmp eq i24 %317, 0, !dbg !4838
  br i1 %318, label %323, label %319, !dbg !4839

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %320, metadata !4579, metadata !DIExpression()), !dbg !4841
  %321 = icmp slt i32 %320, 0, !dbg !4842
  %322 = add i32 %313, 1, !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %324, metadata !4478, metadata !DIExpression()), !dbg !4598
  %325 = and i24 %246, 1048576, !dbg !4844
  %326 = icmp eq i24 %325, 0, !dbg !4844
  br i1 %326, label %333, label %327, !dbg !4845

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4846
  %329 = zext i8 %328 to i32, !dbg !4846
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %330, metadata !4585, metadata !DIExpression()), !dbg !4847
  %331 = icmp slt i32 %330, 0, !dbg !4848
  %332 = add i32 %324, 1, !dbg !4846
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %334, metadata !4478, metadata !DIExpression()), !dbg !4598
  %335 = load i32, i32* %16, align 4, !dbg !4850
  call void @llvm.dbg.value(metadata i32 %335, metadata !4560, metadata !DIExpression()), !dbg !4612
  br label %336, !dbg !4851

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4852
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %338, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %337, metadata !4560, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4612
  %339 = icmp sgt i32 %337, 0, !dbg !4853
  br i1 %339, label %340, label %345, !dbg !4851

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %341, metadata !4560, metadata !DIExpression()), !dbg !4612
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %342, metadata !4589, metadata !DIExpression()), !dbg !4856
  %343 = icmp slt i32 %342, 0, !dbg !4857
  %344 = add i32 %338, 1, !dbg !4855
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %343, label %361, label %336, !llvm.loop !4859

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %346, metadata !4592, metadata !DIExpression()), !dbg !4862
  %347 = icmp slt i32 %346, 0, !dbg !4863
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %349, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %304, metadata !4537, metadata !DIExpression()), !dbg !4612
  %350 = icmp sgt i32 %304, 0, !dbg !4865
  br i1 %350, label %351, label %363, !dbg !4866

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4866
  %353 = add i32 %352, %338, !dbg !4866
  br label %354, !dbg !4866

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %355, metadata !4537, metadata !DIExpression()), !dbg !4612
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %356, metadata !4594, metadata !DIExpression()), !dbg !4868
  %357 = icmp slt i32 %356, 0, !dbg !4869
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4871
  call void @llvm.dbg.value(metadata i32 undef, metadata !4478, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %359, metadata !4537, metadata !DIExpression()), !dbg !4612
  %360 = icmp sgt i32 %355, 1, !dbg !4865
  br i1 %360, label %354, label %363, !dbg !4866, !llvm.loop !4872

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4609
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %364, metadata !4478, metadata !DIExpression()), !dbg !4598
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4609
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4598
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4874
  ret i32 %366, !dbg !4874
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4875 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4879, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %1, metadata !4880, metadata !DIExpression()), !dbg !4881
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4882
  store i24 0, i24* %3, align 4, !dbg !4882
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4882
  store i8 0, i8* %4, align 1, !dbg !4882
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4882
  store i32 0, i32* %5, align 4, !dbg !4882
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4882
  store i32 0, i32* %6, align 4, !dbg !4882
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %7, metadata !4880, metadata !DIExpression()), !dbg !4881
  %8 = load i8, i8* %7, align 1, !dbg !4884
  %9 = icmp eq i8 %8, 37, !dbg !4886
  br i1 %9, label %10, label %12, !dbg !4887

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %11, metadata !4880, metadata !DIExpression()), !dbg !4881
  store i8 37, i8* %4, align 1, !dbg !4890
  br label %18, !dbg !4891

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4892
  call void @llvm.dbg.value(metadata i8* %13, metadata !4880, metadata !DIExpression()), !dbg !4881
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %14, metadata !4880, metadata !DIExpression()), !dbg !4881
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4894
  call void @llvm.dbg.value(metadata i8* %15, metadata !4880, metadata !DIExpression()), !dbg !4881
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4895
  call void @llvm.dbg.value(metadata i8* %16, metadata !4880, metadata !DIExpression()), !dbg !4881
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %17, metadata !4880, metadata !DIExpression()), !dbg !4881
  br label %18, !dbg !4897

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4881
  ret i8* %19, !dbg !4898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4899 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4903, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %1, metadata !4904, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %2, metadata !4905, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %3, metadata !4906, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i32 0, metadata !4907, metadata !DIExpression()), !dbg !4910
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4911

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4912
  call void @llvm.dbg.value(metadata i32 %9, metadata !4907, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %8, metadata !4905, metadata !DIExpression()), !dbg !4910
  %10 = icmp ult i8* %8, %3, !dbg !4913
  br i1 %10, label %11, label %13, !dbg !4914

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4915
  br label %17, !dbg !4914

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4916

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4917
  %16 = icmp eq i8 %15, 0, !dbg !4916
  br i1 %16, label %24, label %17, !dbg !4911

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4915
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %19, metadata !4905, metadata !DIExpression()), !dbg !4910
  %20 = zext i8 %18 to i32, !dbg !4919
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %21, metadata !4908, metadata !DIExpression()), !dbg !4921
  %22 = icmp slt i32 %21, 0, !dbg !4922
  %23 = add i32 %9, 1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 undef, metadata !4907, metadata !DIExpression()), !dbg !4910
  br i1 %22, label %24, label %7, !llvm.loop !4925

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4910
  ret i32 %25, !dbg !4927
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4928 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4932, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4933, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %2, metadata !4934, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %3, metadata !4935, metadata !DIExpression()), !dbg !4942
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4943
  %6 = load i8, i8* %5, align 1, !dbg !4943
  %7 = zext i8 %6 to i32, !dbg !4944
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4945
  %9 = icmp eq i32 %8, 0, !dbg !4945
  call void @llvm.dbg.value(metadata i1 %9, metadata !4936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4942
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %10, metadata !4937, metadata !DIExpression()), !dbg !4942
  %11 = ptrtoint i8* %3 to i32, !dbg !4947
  %12 = ptrtoint i8* %2 to i32, !dbg !4947
  %13 = sub i32 %11, %12, !dbg !4947
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %14, metadata !4939, metadata !DIExpression()), !dbg !4942
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4949

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4942
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4932, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %18, metadata !4939, metadata !DIExpression()), !dbg !4942
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4950
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %25, metadata !4940, metadata !DIExpression()), !dbg !4952
  %26 = icmp ult i32 %25, 10, !dbg !4953
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4954
  %28 = add i32 %27, %25, !dbg !4952
  %29 = trunc i32 %28 to i8, !dbg !4954
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %30, metadata !4939, metadata !DIExpression()), !dbg !4942
  store i8 %29, i8* %30, align 1, !dbg !4956
  call void @llvm.dbg.value(metadata i64 %22, metadata !4932, metadata !DIExpression()), !dbg !4942
  %31 = icmp uge i64 %19, %15, !dbg !4957
  %32 = icmp ugt i8* %30, %2, !dbg !4958
  %33 = and i1 %31, %32, !dbg !4958
  br i1 %33, label %17, label %34, !dbg !4959, !llvm.loop !4960

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4962
  %36 = load i24, i24* %35, align 4, !dbg !4962
  %37 = and i24 %36, 32, !dbg !4962
  %38 = icmp eq i24 %37, 0, !dbg !4962
  br i1 %38, label %44, label %39, !dbg !4964

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4965

40:                                               ; preds = %39
  br label %41, !dbg !4967

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4971
  store i24 %43, i24* %35, align 4, !dbg !4971
  br label %44, !dbg !4972

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4973 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4979, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %1, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %2, metadata !4981, metadata !DIExpression()), !dbg !4982
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4983
  %5 = load i24, i24* %4, align 4, !dbg !4983
  %6 = lshr i24 %5, 11, !dbg !4983
  %7 = and i24 %6, 15, !dbg !4983
  %8 = zext i24 %7 to i32, !dbg !4983
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4984

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4985
  store i32 %2, i32* %10, align 4, !dbg !4987
  br label %28, !dbg !4988

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4989
  store i8 %12, i8* %1, align 1, !dbg !4990
  br label %28, !dbg !4991

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4992
  %15 = bitcast i8* %1 to i16*, !dbg !4993
  store i16 %14, i16* %15, align 2, !dbg !4994
  br label %28, !dbg !4995

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4996
  store i32 %2, i32* %17, align 4, !dbg !4997
  br label %28, !dbg !4998

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4999
  %20 = bitcast i8* %1 to i64*, !dbg !5000
  store i64 %19, i64* %20, align 8, !dbg !5001
  br label %28, !dbg !5002

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5003
  %23 = bitcast i8* %1 to i64*, !dbg !5004
  store i64 %22, i64* %23, align 8, !dbg !5005
  br label %28, !dbg !5006

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5007
  store i32 %2, i32* %25, align 4, !dbg !5008
  br label %28, !dbg !5009

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5010
  store i32 %2, i32* %27, align 4, !dbg !5011
  br label %28, !dbg !5012

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5013
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5017, metadata !DIExpression()), !dbg !5018
  %2 = add i32 %0, -65, !dbg !5019
  %3 = icmp ult i32 %2, 26, !dbg !5020
  %4 = zext i1 %3 to i32, !dbg !5020
  ret i32 %4, !dbg !5021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5022 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5026, metadata !DIExpression()), !dbg !5027
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5028

2:                                                ; preds = %1
  br label %4, !dbg !5029

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5031

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5032
  ret i32 %5, !dbg !5033
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5034 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5036, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8* %1, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8 1, metadata !5038, metadata !DIExpression()), !dbg !5039
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5040

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8* %5, metadata !5037, metadata !DIExpression()), !dbg !5039
  %6 = load i8, i8* %5, align 1, !dbg !5041
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5043

7:                                                ; preds = %4
  br label %11, !dbg !5044

8:                                                ; preds = %4
  br label %11, !dbg !5046

9:                                                ; preds = %4
  br label %11, !dbg !5047

10:                                               ; preds = %4
  br label %11, !dbg !5048

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5049
  %14 = or i24 %13, %12, !dbg !5049
  store i24 %14, i24* %3, align 4, !dbg !5049
  call void @llvm.dbg.value(metadata i8 poison, metadata !5038, metadata !DIExpression()), !dbg !5039
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5037, metadata !DIExpression()), !dbg !5039
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8* %15, metadata !5037, metadata !DIExpression()), !dbg !5039
  %17 = load i24, i24* %3, align 4, !dbg !5050
  %18 = and i24 %17, 68, !dbg !5052
  %19 = icmp eq i24 %18, 68, !dbg !5052
  br i1 %19, label %20, label %22, !dbg !5052

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5053
  store i24 %21, i24* %3, align 4, !dbg !5053
  br label %22, !dbg !5055

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5056
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5057 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5059, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5064
  %5 = load i24, i24* %4, align 4, !dbg !5065
  %6 = or i24 %5, 128, !dbg !5065
  store i24 %6, i24* %4, align 4, !dbg !5065
  call void @llvm.dbg.value(metadata i8* %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  %7 = load i8, i8* %1, align 1, !dbg !5066
  %8 = icmp eq i8 %7, 42, !dbg !5068
  br i1 %8, label %9, label %12, !dbg !5069

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5070
  store i24 %10, i24* %4, align 4, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %11, metadata !5060, metadata !DIExpression()), !dbg !5063
  store i8* %11, i8** %3, align 4, !dbg !5072
  br label %29, !dbg !5073

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8** %3, metadata !5060, metadata !DIExpression(DW_OP_deref)), !dbg !5063
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %13, metadata !5062, metadata !DIExpression()), !dbg !5063
  %14 = load i8*, i8** %3, align 4, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %14, metadata !5060, metadata !DIExpression()), !dbg !5063
  %15 = icmp eq i8* %14, %1, !dbg !5077
  br i1 %15, label %29, label %16, !dbg !5078

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5079
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5081
  store i32 %13, i32* %18, align 4, !dbg !5082
  %19 = lshr i32 %13, 31, !dbg !5083
  %20 = lshr i24 %17, 1, !dbg !5084
  %21 = and i24 %20, 1, !dbg !5084
  %22 = zext i24 %21 to i32, !dbg !5084
  %23 = or i32 %19, %22, !dbg !5084
  %24 = trunc i32 %23 to i24, !dbg !5084
  %25 = shl nuw nsw i24 %24, 1, !dbg !5084
  %26 = and i24 %17, -131, !dbg !5084
  %27 = or i24 %26, 128, !dbg !5084
  %28 = or i24 %25, %27, !dbg !5084
  store i24 %28, i24* %4, align 4, !dbg !5084
  br label %29, !dbg !5085

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5063
  ret i8* %30, !dbg !5086
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5087 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5089, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5090, metadata !DIExpression()), !dbg !5092
  %4 = load i8, i8* %1, align 1, !dbg !5093
  %5 = icmp eq i8 %4, 46, !dbg !5094
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5095
  %7 = load i24, i24* %6, align 4, !dbg !5096
  %8 = select i1 %5, i24 512, i24 0, !dbg !5096
  %9 = and i24 %7, -513, !dbg !5096
  %10 = or i24 %9, %8, !dbg !5096
  store i24 %10, i24* %6, align 4, !dbg !5096
  br i1 %5, label %11, label %32, !dbg !5097

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5090, metadata !DIExpression()), !dbg !5092
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %12, metadata !5090, metadata !DIExpression()), !dbg !5092
  store i8* %12, i8** %3, align 4, !dbg !5098
  %13 = load i8, i8* %12, align 1, !dbg !5099
  %14 = icmp eq i8 %13, 42, !dbg !5101
  br i1 %14, label %15, label %18, !dbg !5102

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5103
  store i24 %16, i24* %6, align 4, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %12, metadata !5090, metadata !DIExpression()), !dbg !5092
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %17, metadata !5090, metadata !DIExpression()), !dbg !5092
  store i8* %17, i8** %3, align 4, !dbg !5105
  br label %32, !dbg !5106

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5090, metadata !DIExpression(DW_OP_deref)), !dbg !5092
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %19, metadata !5091, metadata !DIExpression()), !dbg !5092
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5108
  store i32 %19, i32* %20, align 4, !dbg !5109
  %21 = lshr i32 %19, 31, !dbg !5110
  %22 = load i24, i24* %6, align 4, !dbg !5111
  %23 = lshr i24 %22, 1, !dbg !5111
  %24 = and i24 %23, 1, !dbg !5111
  %25 = zext i24 %24 to i32, !dbg !5111
  %26 = or i32 %21, %25, !dbg !5111
  %27 = trunc i32 %26 to i24, !dbg !5111
  %28 = shl nuw nsw i24 %27, 1, !dbg !5111
  %29 = and i24 %22, -3, !dbg !5111
  %30 = or i24 %28, %29, !dbg !5111
  store i24 %30, i24* %6, align 4, !dbg !5111
  %31 = load i8*, i8** %3, align 4, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %31, metadata !5090, metadata !DIExpression()), !dbg !5092
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5092
  ret i8* %33, !dbg !5113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5114 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5116, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5117, metadata !DIExpression()), !dbg !5118
  %3 = load i8, i8* %1, align 1, !dbg !5119
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5120

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %5, metadata !5117, metadata !DIExpression()), !dbg !5118
  %6 = load i8, i8* %5, align 1, !dbg !5124
  %7 = icmp eq i8 %6, 104, !dbg !5125
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5126
  %9 = load i24, i24* %8, align 4, !dbg !5126
  %10 = and i24 %9, -30721, !dbg !5126
  br i1 %7, label %11, label %14, !dbg !5127

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5128
  store i24 %12, i24* %8, align 4, !dbg !5128
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %13, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %56, !dbg !5131

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5132
  store i24 %15, i24* %8, align 4, !dbg !5132
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5134
  call void @llvm.dbg.value(metadata i8* %17, metadata !5117, metadata !DIExpression()), !dbg !5118
  %18 = load i8, i8* %17, align 1, !dbg !5136
  %19 = icmp eq i8 %18, 108, !dbg !5137
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5138
  %21 = load i24, i24* %20, align 4, !dbg !5138
  %22 = and i24 %21, -30721, !dbg !5138
  br i1 %19, label %23, label %26, !dbg !5139

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5140
  store i24 %24, i24* %20, align 4, !dbg !5140
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %25, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %56, !dbg !5143

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5144
  store i24 %27, i24* %20, align 4, !dbg !5144
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5146
  %30 = load i24, i24* %29, align 4, !dbg !5147
  %31 = and i24 %30, -30721, !dbg !5147
  %32 = or i24 %31, 10240, !dbg !5147
  store i24 %32, i24* %29, align 4, !dbg !5147
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5148
  call void @llvm.dbg.value(metadata i8* %33, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %56, !dbg !5149

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5150
  %36 = load i24, i24* %35, align 4, !dbg !5151
  %37 = and i24 %36, -30721, !dbg !5151
  %38 = or i24 %37, 12288, !dbg !5151
  store i24 %38, i24* %35, align 4, !dbg !5151
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5152
  call void @llvm.dbg.value(metadata i8* %39, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %56, !dbg !5153

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5154
  %42 = load i24, i24* %41, align 4, !dbg !5155
  %43 = and i24 %42, -30721, !dbg !5155
  %44 = or i24 %43, 14336, !dbg !5155
  store i24 %44, i24* %41, align 4, !dbg !5155
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5156
  call void @llvm.dbg.value(metadata i8* %45, metadata !5117, metadata !DIExpression()), !dbg !5118
  br label %56, !dbg !5157

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5158
  %48 = load i24, i24* %47, align 4, !dbg !5159
  %49 = and i24 %48, -30723, !dbg !5159
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5160
  call void @llvm.dbg.value(metadata i8* %50, metadata !5117, metadata !DIExpression()), !dbg !5118
  %51 = or i24 %49, 16386, !dbg !5161
  store i24 %51, i24* %47, align 4, !dbg !5161
  br label %56, !dbg !5162

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5163
  %54 = load i24, i24* %53, align 4, !dbg !5164
  %55 = and i24 %54, -30721, !dbg !5164
  store i24 %55, i24* %53, align 4, !dbg !5164
  br label %56, !dbg !5165

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5117, metadata !DIExpression()), !dbg !5118
  ret i8* %57, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5167 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5169, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %1, metadata !5170, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8 0, metadata !5171, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %1, metadata !5170, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5174
  %3 = load i8, i8* %1, align 1, !dbg !5175
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5176
  store i8 %3, i8* %4, align 1, !dbg !5177
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5178

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5179

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5180
  %9 = load i24, i24* %8, align 4, !dbg !5180
  %10 = and i24 %9, -458753, !dbg !5180
  %11 = or i24 %10, %7, !dbg !5180
  call void @llvm.dbg.label(metadata !5172), !dbg !5181
  %12 = and i24 %9, 30720, !dbg !5182
  %13 = icmp eq i24 %12, 16384, !dbg !5182
  %14 = zext i1 %13 to i24, !dbg !5184
  %15 = or i24 %11, %14, !dbg !5184
  %16 = icmp eq i8 %3, 99, !dbg !5185
  br i1 %16, label %17, label %43, !dbg !5187

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5188
  %19 = icmp ne i24 %18, 0, !dbg !5188
  call void @llvm.dbg.value(metadata i1 %19, metadata !5171, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5174
  br label %43, !dbg !5190

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5191
  %22 = load i24, i24* %21, align 4, !dbg !5192
  %23 = and i24 %22, -458753, !dbg !5192
  %24 = or i24 %23, 262144, !dbg !5192
  call void @llvm.dbg.value(metadata i8 1, metadata !5171, metadata !DIExpression()), !dbg !5174
  br label %43, !dbg !5193

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5196
  %27 = load i24, i24* %26, align 4, !dbg !5197
  %28 = and i24 %27, -458753, !dbg !5197
  %29 = or i24 %28, 196608, !dbg !5197
  %30 = and i24 %27, 30720, !dbg !5198
  %31 = icmp eq i24 %30, 16384, !dbg !5198
  br label %43, !dbg !5200

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5201
  %34 = load i24, i24* %33, align 4, !dbg !5202
  %35 = and i24 %34, -458753, !dbg !5202
  %36 = or i24 %35, 196608, !dbg !5202
  %37 = and i24 %34, 30720, !dbg !5203
  %38 = icmp ne i24 %37, 0, !dbg !5203
  br label %43, !dbg !5205

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5206
  %41 = load i24, i24* %40, align 4, !dbg !5207
  %42 = or i24 %41, 1, !dbg !5207
  br label %43, !dbg !5208

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5209
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5210
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %48, metadata !5170, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8 poison, metadata !5171, metadata !DIExpression()), !dbg !5174
  %49 = lshr i24 %44, 1, !dbg !5209
  %50 = and i24 %49, 1, !dbg !5209
  %51 = zext i24 %50 to i32, !dbg !5209
  %52 = or i32 %51, %47, !dbg !5209
  %53 = trunc i32 %52 to i24, !dbg !5209
  %54 = shl nuw nsw i24 %53, 1, !dbg !5209
  %55 = and i24 %44, -3, !dbg !5209
  %56 = or i24 %54, %55, !dbg !5209
  store i24 %56, i24* %46, align 4, !dbg !5209
  ret i8* %48, !dbg !5212
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5213 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5217, metadata !DIExpression()), !dbg !5220
  %2 = load i8*, i8** %0, align 4, !dbg !5221
  call void @llvm.dbg.value(metadata i8* %2, metadata !5218, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i32 0, metadata !5219, metadata !DIExpression()), !dbg !5220
  %3 = load i8, i8* %2, align 1, !dbg !5222
  %4 = zext i8 %3 to i32, !dbg !5223
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5224
  %6 = icmp eq i32 %5, 0, !dbg !5225
  br i1 %6, label %19, label %7, !dbg !5225

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5219, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %10, metadata !5218, metadata !DIExpression()), !dbg !5220
  %11 = mul i32 %9, 10, !dbg !5226
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5228
  call void @llvm.dbg.value(metadata i8* %12, metadata !5218, metadata !DIExpression()), !dbg !5220
  %13 = add i32 %11, -48, !dbg !5229
  %14 = add i32 %13, %8, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %14, metadata !5219, metadata !DIExpression()), !dbg !5220
  %15 = load i8, i8* %12, align 1, !dbg !5222
  %16 = zext i8 %15 to i32, !dbg !5223
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5224
  %18 = icmp eq i32 %17, 0, !dbg !5225
  br i1 %18, label %19, label %7, !dbg !5225, !llvm.loop !5231

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5220
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5220
  store i8* %20, i8** %0, align 4, !dbg !5233
  ret i32 %21, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5237, metadata !DIExpression()), !dbg !5238
  %2 = add i32 %0, -48, !dbg !5239
  %3 = icmp ult i32 %2, 10, !dbg !5240
  %4 = zext i1 %3 to i32, !dbg !5240
  ret i32 %4, !dbg !5241
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5247, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.value(metadata i32 %1, metadata !5248, metadata !DIExpression()), !dbg !5249
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5250, !srcloc !5252
  ret void, !dbg !5253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5254 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5256, metadata !DIExpression()), !dbg !5264
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5265
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5257, metadata !DIExpression()), !dbg !5266
  call void @llvm.va_start(i8* nonnull %3), !dbg !5267
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5268
  %5 = load i32, i32* %4, align 4, !dbg !5268
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5268
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5268
  call void @llvm.va_end(i8* nonnull %3), !dbg !5269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5270
  ret void, !dbg !5270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5271 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5945, !srcloc !5946
  ret void, !dbg !5947
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5948 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5950, metadata !DIExpression()), !dbg !5952
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5953
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5954
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5955, !srcloc !5964
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %3, metadata !5961, metadata !DIExpression()) #23, !dbg !5965
  call void @llvm.dbg.value(metadata i32 undef, metadata !5962, metadata !DIExpression()) #23, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %3, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i32 %3, metadata !5966, metadata !DIExpression()) #23, !dbg !5971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5973, !srcloc !5974
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5975
  ret i32 0, !dbg !5976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5979
  %2 = or i32 %1, 512, !dbg !5979
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5982
  %2 = or i32 %1, 1024, !dbg !5982
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5982
  ret void, !dbg !5983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5986, metadata !DIExpression()), !dbg !5987
  ret i32 0, !dbg !5988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5989 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5992, metadata !DIExpression()), !dbg !6000
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6001
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5993, metadata !DIExpression()), !dbg !6002
  call void @llvm.va_start(i8* nonnull %3), !dbg !6003
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6004
  %5 = load i32, i32* %4, align 4, !dbg !6004
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6004
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6004
  call void @llvm.va_end(i8* nonnull %3), !dbg !6005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6006
  ret void, !dbg !6006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6007 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %0, metadata !6011, metadata !DIExpression()), !dbg !6013
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6014
  ret void, !dbg !6015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i8* %1, metadata !6021, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i32 %2, metadata !6022, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i8* %1, metadata !6023, metadata !DIExpression()), !dbg !6024
  %4 = icmp eq i32 %2, 0, !dbg !6025
  br i1 %4, label %14, label %5, !dbg !6026

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6024
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6026

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6023, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i32 %10, metadata !6022, metadata !DIExpression()), !dbg !6024
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6027
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6029
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6030
  call void @llvm.dbg.value(metadata i32 %11, metadata !6022, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i8* %12, metadata !6023, metadata !DIExpression()), !dbg !6024
  br i1 %13, label %14, label %8, !dbg !6030, !llvm.loop !6031

14:                                               ; preds = %8, %3
  ret void, !dbg !6033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6039, metadata !DIExpression()), !dbg !6040
  %2 = add i32 %0, -1, !dbg !6041
  %3 = icmp ult i32 %2, 4, !dbg !6041
  %4 = shl i32 %2, 3, !dbg !6041
  %5 = lshr i32 1145657157, %4, !dbg !6041
  %6 = trunc i32 %5 to i8, !dbg !6041
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6041
  ret i8 %7, !dbg !6042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6047, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i32 %1, metadata !6048, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i32 0, metadata !6049, metadata !DIExpression()), !dbg !6059
  br label %4, !dbg !6060

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6061
  call void @llvm.dbg.value(metadata i32 0, metadata !6051, metadata !DIExpression()), !dbg !6062
  br label %16, !dbg !6063

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6049, metadata !DIExpression()), !dbg !6059
  %6 = icmp ult i32 %5, %1, !dbg !6064
  br i1 %6, label %7, label %11, !dbg !6068

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6069
  %9 = load i8, i8* %8, align 1, !dbg !6069
  %10 = zext i8 %9 to i32, !dbg !6071
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6072
  br label %12, !dbg !6073

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6074
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6076
  call void @llvm.dbg.value(metadata i32 %13, metadata !6049, metadata !DIExpression()), !dbg !6059
  %14 = icmp eq i32 %13, 8, !dbg !6077
  br i1 %14, label %3, label %4, !dbg !6060, !llvm.loop !6078

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6080
  ret void, !dbg !6081

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6051, metadata !DIExpression()), !dbg !6062
  %18 = icmp ult i32 %17, %1, !dbg !6082
  br i1 %18, label %19, label %26, !dbg !6083

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6084
  %21 = load i8, i8* %20, align 1, !dbg !6084
  call void @llvm.dbg.value(metadata i8 %21, metadata !6053, metadata !DIExpression()), !dbg !6085
  %22 = zext i8 %21 to i32, !dbg !6086
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6087
  %24 = icmp eq i32 %23, 0, !dbg !6088
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6087
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6089
  br label %27, !dbg !6090

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6091
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6093
  call void @llvm.dbg.value(metadata i32 %28, metadata !6051, metadata !DIExpression()), !dbg !6062
  %29 = icmp eq i32 %28, 8, !dbg !6094
  br i1 %29, label %15, label %16, !dbg !6063, !llvm.loop !6095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6099, metadata !DIExpression()), !dbg !6100
  %2 = add i32 %0, -32, !dbg !6101
  %3 = icmp ult i32 %2, 95, !dbg !6101
  %4 = zext i1 %3 to i32, !dbg !6101
  ret i32 %4, !dbg !6102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6152, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6153, metadata !DIExpression()), !dbg !6154
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6155
  br i1 %3, label %5, label %4, !dbg !6157

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6158
  br label %5, !dbg !6160

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6161
  ret void, !dbg !6162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6163 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6167, metadata !DIExpression()), !dbg !6168
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6169
  %3 = load i32, i32* %2, align 4, !dbg !6169
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6169
  %5 = load i32, i32* %4, align 4, !dbg !6169
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6169
  %7 = load i32, i32* %6, align 4, !dbg !6169
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6169
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6174
  %9 = load i32, i32* %8, align 4, !dbg !6174
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6174
  %11 = load i32, i32* %10, align 4, !dbg !6174
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6174
  %13 = load i32, i32* %12, align 4, !dbg !6174
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6174
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6179
  %15 = load i32, i32* %14, align 4, !dbg !6179
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6179
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6184
  %17 = load i32, i32* %16, align 4, !dbg !6184
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6184
  ret void, !dbg !6189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6190 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6207, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6208, metadata !DIExpression()), !dbg !6210
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6211
  %4 = load i32, i32* %3, align 4, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %4, metadata !6209, metadata !DIExpression()), !dbg !6210
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6212
  ret void, !dbg !6213
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6214 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6216, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %0, metadata !6217, metadata !DIExpression()), !dbg !6219
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6220
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6220
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6218, metadata !DIExpression()), !dbg !6221
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6221
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6222
  %5 = bitcast i8* %4 to i32*, !dbg !6222
  %6 = load i32, i32* %5, align 4, !dbg !6222
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6223
  store i32 %6, i32* %7, align 4, !dbg !6224
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6225
  unreachable, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6231
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6232
  ret void, !dbg !6233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6238, metadata !DIExpression()), !dbg !6239
  %2 = icmp sgt i32 %0, -1, !dbg !6240
  br i1 %2, label %3, label %8, !dbg !6242

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6243, !srcloc !6245
  %4 = and i32 %0, 31, !dbg !6246
  %5 = shl nuw i32 1, %4, !dbg !6247
  %6 = lshr i32 %0, 5, !dbg !6248
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6249
  store volatile i32 %5, i32* %7, align 4, !dbg !6250
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6251, !srcloc !6252
  br label %8, !dbg !6253

8:                                                ; preds = %3, %1
  ret void, !dbg !6254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6257, metadata !DIExpression()), !dbg !6258
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6259
  ret void, !dbg !6260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6263, metadata !DIExpression()), !dbg !6264
  %2 = icmp sgt i32 %0, -1, !dbg !6265
  br i1 %2, label %3, label %8, !dbg !6267

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6268
  %5 = shl nuw i32 1, %4, !dbg !6270
  %6 = lshr i32 %0, 5, !dbg !6271
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6272
  store volatile i32 %5, i32* %7, align 4, !dbg !6273
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6274, !srcloc !6278
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6279, !srcloc !6282
  br label %8, !dbg !6283

8:                                                ; preds = %3, %1
  ret void, !dbg !6284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6290
  %2 = lshr i32 %0, 5, !dbg !6291
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6292
  %4 = load volatile i32, i32* %3, align 4, !dbg !6292
  %5 = and i32 %0, 31, !dbg !6293
  %6 = shl nuw i32 1, %5, !dbg !6293
  %7 = and i32 %4, %6, !dbg !6294
  ret i32 %7, !dbg !6295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6300, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 %1, metadata !6301, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 %2, metadata !6302, metadata !DIExpression()), !dbg !6303
  %4 = add i32 %1, 1, !dbg !6304
  call void @llvm.dbg.value(metadata i32 %4, metadata !6301, metadata !DIExpression()), !dbg !6303
  %5 = icmp ult i32 %4, 16, !dbg !6307
  br i1 %5, label %7, label %6, !dbg !6310

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6311
  unreachable, !dbg !6311

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6313
  ret void, !dbg !6314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6319, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata i32 %1, metadata !6320, metadata !DIExpression()), !dbg !6321
  %3 = trunc i32 %1 to i8, !dbg !6322
  %4 = shl i8 %3, 4, !dbg !6322
  %5 = and i32 %0, 15, !dbg !6324
  %6 = add nsw i32 %5, -4, !dbg !6324
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6324
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6324
  %9 = icmp slt i32 %0, 0, !dbg !6324
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6324
  store volatile i8 %4, i8* %10, align 1, !dbg !6322
  ret void, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6328, metadata !DIExpression()), !dbg !6329
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6330
  ret void, !dbg !6331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6332 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6334
  tail call void @z_arm_int_exit() #25, !dbg !6335
  ret void, !dbg !6336
}

; Function Attrs: optsize
declare !dbg !6337 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6338 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6340 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6342
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6343
  tail call void @z_bss_zero() #25, !dbg !6344
  tail call void @z_data_copy() #25, !dbg !6345
  tail call void @z_arm_interrupt_init() #25, !dbg !6346
  tail call void @z_cstart() #27, !dbg !6347
  unreachable, !dbg !6347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6348 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6349
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6350, !srcloc !6353
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6354, !srcloc !6357
  ret void, !dbg !6358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6359 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6360
  %2 = and i32 %1, -15728641, !dbg !6360
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6360
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6361, !srcloc !6368
  call void @llvm.dbg.value(metadata i32 %3, metadata !6366, metadata !DIExpression()) #23, !dbg !6369
  %4 = and i32 %3, -5, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %4, metadata !6371, metadata !DIExpression()) #23, !dbg !6376
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6380, !srcloc !6357
  ret void, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6386, metadata !DIExpression()), !dbg !6387
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6388
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6389
  store i32 %0, i32* %3, align 4, !dbg !6390
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6391
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6392
  store i32 %4, i32* %5, align 4, !dbg !6393
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6394
  %7 = or i32 %6, 268435456, !dbg !6394
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6394
  call void @llvm.dbg.value(metadata i32 0, metadata !6395, metadata !DIExpression()) #23, !dbg !6398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6400, !srcloc !6401
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6402
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6403
  %10 = load i32, i32* %9, align 4, !dbg !6403
  ret i32 %10, !dbg !6404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6518, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6519, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i8* %2, metadata !6520, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6521, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i8* %4, metadata !6522, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i8* %5, metadata !6523, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i8* %6, metadata !6524, metadata !DIExpression()), !dbg !6526
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6527
  call void @llvm.dbg.value(metadata i8* %8, metadata !6525, metadata !DIExpression()), !dbg !6526
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6528
  %10 = bitcast i8* %9 to i32*, !dbg !6528
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6529
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6530
  %12 = bitcast i8* %8 to i32*, !dbg !6531
  store i32 %11, i32* %12, align 4, !dbg !6532
  %13 = ptrtoint i8* %4 to i32, !dbg !6533
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6534
  %15 = bitcast i8* %14 to i32*, !dbg !6534
  store i32 %13, i32* %15, align 4, !dbg !6535
  %16 = ptrtoint i8* %5 to i32, !dbg !6536
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6537
  %18 = bitcast i8* %17 to i32*, !dbg !6537
  store i32 %16, i32* %18, align 4, !dbg !6538
  %19 = ptrtoint i8* %6 to i32, !dbg !6539
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6540
  %21 = bitcast i8* %20 to i32*, !dbg !6540
  store i32 %19, i32* %21, align 4, !dbg !6541
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6542
  %23 = bitcast i8* %22 to i32*, !dbg !6542
  store i32 16777216, i32* %23, align 4, !dbg !6543
  %24 = ptrtoint i8* %8 to i32, !dbg !6544
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6545
  store i32 %24, i32* %25, align 8, !dbg !6546
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6547
  store i32 0, i32* %26, align 4, !dbg !6548
  ret void, !dbg !6549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6555, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 %1, metadata !6556, metadata !DIExpression()), !dbg !6561
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6562
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6557, metadata !DIExpression()), !dbg !6561
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6563
  br i1 %4, label %19, label %5, !dbg !6565

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6560, metadata !DIExpression()), !dbg !6561
  %6 = icmp eq i32 %0, -22, !dbg !6566
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6566
  %8 = load i32, i32* %7, align 4, !dbg !6566
  br i1 %6, label %16, label %9, !dbg !6568

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6566
  %11 = icmp ule i32 %10, %0, !dbg !6566
  %12 = icmp ugt i32 %8, %0, !dbg !6566
  %13 = and i1 %12, %11, !dbg !6566
  %14 = icmp ugt i32 %8, %1, !dbg !6566
  %15 = and i1 %14, %13, !dbg !6566
  br i1 %15, label %18, label %19, !dbg !6566

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6566
  br i1 %17, label %18, label %19, !dbg !6568

18:                                               ; preds = %9, %16
  br label %19, !dbg !6569

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6561
  ret i32 %20, !dbg !6571
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6576, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* %1, metadata !6577, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6578, metadata !DIExpression()), !dbg !6579
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6580
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6581
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6582, !srcloc !6583
  unreachable, !dbg !6584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6585 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6603, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 %1, metadata !6604, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 %2, metadata !6605, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6606, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 0, metadata !6607, metadata !DIExpression()), !dbg !6613
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6614
  call void @llvm.dbg.value(metadata i32 %8, metadata !6608, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6613
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6615
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6615
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6616
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6616
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6612, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 0, metadata !6618, metadata !DIExpression()) #23, !dbg !6621
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6623, !srcloc !6624
  call void @llvm.dbg.value(metadata i8* %6, metadata !6610, metadata !DIExpression(DW_OP_deref)), !dbg !6613
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6625
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6611, metadata !DIExpression()), !dbg !6613
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6626
  br i1 %11, label %12, label %13, !dbg !6629

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6630
  unreachable, !dbg !6630

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6632
  call void @llvm.dbg.value(metadata i32 %14, metadata !6608, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %5, metadata !6609, metadata !DIExpression(DW_OP_deref)), !dbg !6613
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6633
  call void @llvm.dbg.value(metadata i32 %15, metadata !6607, metadata !DIExpression()), !dbg !6613
  %16 = load i8, i8* %5, align 1, !dbg !6634, !range !6636
  call void @llvm.dbg.value(metadata i8 %16, metadata !6609, metadata !DIExpression()), !dbg !6613
  %17 = icmp eq i8 %16, 0, !dbg !6634
  br i1 %17, label %18, label %35, !dbg !6637

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6638
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6639
  %21 = load i8, i8* %6, align 1, !dbg !6640, !range !6636
  call void @llvm.dbg.value(metadata i8 %21, metadata !6610, metadata !DIExpression()), !dbg !6613
  %22 = icmp eq i8 %21, 0, !dbg !6640
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6642
  %24 = load i32, i32* %23, align 4, !dbg !6642
  br i1 %22, label %30, label %25, !dbg !6643

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6644
  %27 = icmp eq i32 %26, 0, !dbg !6647
  br i1 %27, label %28, label %34, !dbg !6648

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6649
  br label %32, !dbg !6651

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6652
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6642
  br label %34, !dbg !6654

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6654
  br label %35, !dbg !6655

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6655
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6655
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6655
  ret void, !dbg !6655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6661, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 %1, metadata !6662, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 %2, metadata !6663, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %3, metadata !6664, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8 0, metadata !6665, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6666, metadata !DIExpression()), !dbg !6667
  store i8 0, i8* %3, align 1, !dbg !6668
  %5 = icmp ugt i32 %2, -16777217, !dbg !6669
  br i1 %5, label %6, label %17, !dbg !6671

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6672
  %8 = icmp eq i32 %7, 8, !dbg !6672
  br i1 %8, label %9, label %10, !dbg !6672

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6674
  br label %17, !dbg !6680

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6681
  %12 = icmp eq i32 %11, 0, !dbg !6681
  br i1 %12, label %13, label %14, !dbg !6682

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6666, metadata !DIExpression()), !dbg !6667
  store i8 1, i8* %3, align 1, !dbg !6685
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6667
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6666, metadata !DIExpression()), !dbg !6667
  br label %17, !dbg !6688

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6667
  ret %struct.__esf* %18, !dbg !6689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6690 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6694, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i32 %1, metadata !6695, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i8* %2, metadata !6696, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i32 0, metadata !6697, metadata !DIExpression()), !dbg !6698
  store i8 0, i8* %2, align 1, !dbg !6699
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6700

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %5, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %12, !dbg !6703

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6704
  call void @llvm.dbg.value(metadata i32 %7, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %12, !dbg !6705

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6706
  call void @llvm.dbg.value(metadata i32 0, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %12, !dbg !6707

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6708
  call void @llvm.dbg.value(metadata i32 0, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %12, !dbg !6709

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6710
  br label %12, !dbg !6711

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6712
  br label %12, !dbg !6713

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6698
  call void @llvm.dbg.value(metadata i32 %13, metadata !6697, metadata !DIExpression()), !dbg !6698
  ret i32 %13, !dbg !6714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6715 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6719, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata i8* %1, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6723
  store i8 0, i8* %1, align 1, !dbg !6728
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6729
  %4 = and i32 %3, 2, !dbg !6731
  %5 = icmp eq i32 %4, 0, !dbg !6732
  br i1 %5, label %7, label %6, !dbg !6733

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6734
  br label %38, !dbg !6740

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6741
  %9 = icmp sgt i32 %8, -1, !dbg !6743
  br i1 %9, label %11, label %10, !dbg !6744

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6745
  br label %38, !dbg !6751

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6752
  %13 = and i32 %12, 1073741824, !dbg !6754
  %14 = icmp eq i32 %13, 0, !dbg !6755
  br i1 %14, label %37, label %15, !dbg !6756

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6757
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6763
  br i1 %16, label %17, label %21, !dbg !6765

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6766
  %19 = load i32, i32* %18, align 4, !dbg !6766
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6766
  %20 = load i32, i32* %18, align 4, !dbg !6772
  call void @llvm.dbg.value(metadata i32 %20, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %38, !dbg !6773

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %23 = and i32 %22, 255, !dbg !6776
  %24 = icmp eq i32 %23, 0, !dbg !6777
  br i1 %24, label %27, label %25, !dbg !6778

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %26, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %38, !dbg !6781

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6782
  %29 = and i32 %28, 65280, !dbg !6784
  %30 = icmp eq i32 %29, 0, !dbg !6785
  br i1 %30, label %32, label %31, !dbg !6786

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6787
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %38, !dbg !6789

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6790
  %34 = icmp ult i32 %33, 65536, !dbg !6792
  br i1 %34, label %36, label %35, !dbg !6793

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6794
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6796
  unreachable, !dbg !6796

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6801
  unreachable, !dbg !6801

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6722
  call void @llvm.dbg.value(metadata i32 %39, metadata !6721, metadata !DIExpression()), !dbg !6722
  ret i32 %39, !dbg !6806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6807 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6809, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 %1, metadata !6810, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8* %2, metadata !6811, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 0, metadata !6812, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 -22, metadata !6813, metadata !DIExpression()), !dbg !6822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6823
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6828
  %5 = and i32 %4, 16, !dbg !6830
  %6 = icmp eq i32 %5, 0, !dbg !6831
  br i1 %6, label %8, label %7, !dbg !6832

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6833
  br label %8, !dbg !6839

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  %10 = and i32 %9, 8, !dbg !6842
  %11 = icmp eq i32 %10, 0, !dbg !6843
  br i1 %11, label %13, label %12, !dbg !6844

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6845
  br label %13, !dbg !6851

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6852
  %15 = and i32 %14, 2, !dbg !6853
  %16 = icmp eq i32 %15, 0, !dbg !6854
  br i1 %16, label %27, label %17, !dbg !6855

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6856
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %18, metadata !6814, metadata !DIExpression()), !dbg !6862
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6863
  %20 = and i32 %19, 128, !dbg !6865
  %21 = icmp eq i32 %20, 0, !dbg !6866
  br i1 %21, label %27, label %22, !dbg !6867

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6813, metadata !DIExpression()), !dbg !6822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6868
  %23 = icmp eq i32 %1, 0, !dbg !6874
  br i1 %23, label %27, label %24, !dbg !6876

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %26 = and i32 %25, -129, !dbg !6877
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  br label %27, !dbg !6879

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6822
  call void @llvm.dbg.value(metadata i32 %28, metadata !6813, metadata !DIExpression()), !dbg !6822
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6880
  %30 = and i32 %29, 1, !dbg !6882
  %31 = icmp eq i32 %30, 0, !dbg !6883
  br i1 %31, label %33, label %32, !dbg !6884

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6885
  br label %33, !dbg !6891

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6892
  %35 = and i32 %34, 32, !dbg !6894
  %36 = icmp eq i32 %35, 0, !dbg !6895
  br i1 %36, label %38, label %37, !dbg !6896

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6897
  br label %38, !dbg !6903

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6904
  %40 = and i32 %39, 16, !dbg !6905
  %41 = icmp eq i32 %40, 0, !dbg !6905
  br i1 %41, label %42, label %46, !dbg !6906

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6907
  %44 = and i32 %43, 2, !dbg !6908
  %45 = icmp eq i32 %44, 0, !dbg !6908
  br i1 %45, label %60, label %46, !dbg !6909

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6910
  %48 = and i32 %47, 2048, !dbg !6911
  %49 = icmp eq i32 %48, 0, !dbg !6911
  br i1 %49, label %60, label %50, !dbg !6912

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6913
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %52, metadata !6817, metadata !DIExpression()), !dbg !6915
  %53 = icmp eq i32 %52, 0, !dbg !6916
  br i1 %53, label %55, label %54, !dbg !6918

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6919, metadata !DIExpression()) #23, !dbg !6922
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6925, !srcloc !6926
  call void @llvm.dbg.value(metadata i32 2, metadata !6812, metadata !DIExpression()), !dbg !6822
  br label %60, !dbg !6927

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6928
  %57 = and i32 %56, 16, !dbg !6928
  %58 = icmp eq i32 %57, 0, !dbg !6928
  br i1 %58, label %60, label %59, !dbg !6932

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6933
  unreachable, !dbg !6933

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6822
  call void @llvm.dbg.value(metadata i32 %61, metadata !6812, metadata !DIExpression()), !dbg !6822
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %63 = and i32 %62, 32, !dbg !6937
  %64 = icmp eq i32 %63, 0, !dbg !6938
  br i1 %64, label %68, label %65, !dbg !6939

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6940
  %67 = and i32 %66, -8193, !dbg !6940
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6940
  br label %68, !dbg !6942

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %70 = or i32 %69, 255, !dbg !6943
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  store i8 0, i8* %2, align 1, !dbg !6944
  ret i32 %61, !dbg !6945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6946 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6950, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %0, metadata !6951, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i8* %1, metadata !6952, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6957
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6958
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %4 = and i32 %3, 4096, !dbg !6965
  %5 = icmp eq i32 %4, 0, !dbg !6965
  br i1 %5, label %7, label %6, !dbg !6966

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6967
  br label %7, !dbg !6973

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %9 = and i32 %8, 2048, !dbg !6976
  %10 = icmp eq i32 %9, 0, !dbg !6976
  br i1 %10, label %12, label %11, !dbg !6977

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6978
  br label %12, !dbg !6984

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  %14 = and i32 %13, 512, !dbg !6986
  %15 = icmp eq i32 %14, 0, !dbg !6986
  br i1 %15, label %26, label %16, !dbg !6987

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6988
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6993
  call void @llvm.dbg.value(metadata i32 %17, metadata !6954, metadata !DIExpression()), !dbg !6994
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6995
  %19 = and i32 %18, 32768, !dbg !6997
  %20 = icmp eq i32 %19, 0, !dbg !6998
  br i1 %20, label %26, label %21, !dbg !6999

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7000
  %22 = icmp eq i32 %0, 0, !dbg !7006
  br i1 %22, label %26, label %23, !dbg !7008

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %25 = and i32 %24, -32769, !dbg !7009
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  br label %26, !dbg !7011

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7012
  %28 = and i32 %27, 1024, !dbg !7014
  %29 = icmp eq i32 %28, 0, !dbg !7014
  br i1 %29, label %31, label %30, !dbg !7015

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7016
  br label %31, !dbg !7022

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  %33 = and i32 %32, 256, !dbg !7025
  %34 = icmp eq i32 %33, 0, !dbg !7026
  br i1 %34, label %35, label %39, !dbg !7027

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7028
  %37 = and i32 %36, 8192, !dbg !7030
  %38 = icmp eq i32 %37, 0, !dbg !7030
  br i1 %38, label %41, label %39, !dbg !7031

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7032
  br label %41, !dbg !7033

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7033
  %43 = or i32 %42, 65280, !dbg !7033
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7033
  store i8 0, i8* %1, align 1, !dbg !7034
  ret void, !dbg !7035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7036 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7042, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 0, metadata !7043, metadata !DIExpression()), !dbg !7044
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7045
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7050
  %2 = and i32 %1, 33554432, !dbg !7052
  %3 = icmp eq i32 %2, 0, !dbg !7053
  br i1 %3, label %5, label %4, !dbg !7054

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7055
  br label %5, !dbg !7061

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7062
  %7 = and i32 %6, 16777216, !dbg !7064
  %8 = icmp eq i32 %7, 0, !dbg !7065
  br i1 %8, label %10, label %9, !dbg !7066

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7067
  br label %10, !dbg !7073

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7074
  %12 = and i32 %11, 524288, !dbg !7076
  %13 = icmp eq i32 %12, 0, !dbg !7077
  br i1 %13, label %15, label %14, !dbg !7078

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7079
  br label %15, !dbg !7085

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7086
  %17 = and i32 %16, 262144, !dbg !7088
  %18 = icmp eq i32 %17, 0, !dbg !7089
  br i1 %18, label %20, label %19, !dbg !7090

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7091
  br label %20, !dbg !7097

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7098
  %22 = and i32 %21, 131072, !dbg !7100
  %23 = icmp eq i32 %22, 0, !dbg !7101
  br i1 %23, label %25, label %24, !dbg !7102

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7103
  br label %25, !dbg !7109

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7110
  %27 = and i32 %26, 65536, !dbg !7112
  %28 = icmp eq i32 %27, 0, !dbg !7113
  br i1 %28, label %30, label %29, !dbg !7114

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7115
  br label %30, !dbg !7121

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7122
  %32 = or i32 %31, -65536, !dbg !7122
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7122
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7124 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i8* %0, metadata !7129, metadata !DIExpression()), !dbg !7130
  store i8 0, i8* %0, align 1, !dbg !7131
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7132
  ret void, !dbg !7137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7138 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7142, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i32 %0, metadata !7143, metadata !DIExpression()), !dbg !7144
  %2 = icmp slt i32 %0, 16, !dbg !7145
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7145
  %4 = add nsw i32 %0, -16, !dbg !7145
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7145
  ret void, !dbg !7150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7151 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7155, metadata !DIExpression()), !dbg !7158
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7159
  %3 = load i32, i32* %2, align 4, !dbg !7159
  %4 = inttoptr i32 %3 to i16*, !dbg !7160
  call void @llvm.dbg.value(metadata i16* %4, metadata !7156, metadata !DIExpression()), !dbg !7158
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7161
  %6 = or i32 %5, 256, !dbg !7161
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7161
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7162, !srcloc !7165
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7166, !srcloc !7169
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7170
  %8 = load i16, i16* %7, align 2, !dbg !7171
  call void @llvm.dbg.value(metadata i16 %8, metadata !7157, metadata !DIExpression()), !dbg !7158
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7172
  %10 = and i32 %9, -257, !dbg !7172
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7172
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7173, !srcloc !7165
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7175, !srcloc !7169
  %11 = icmp eq i16 %8, -8446, !dbg !7177
  ret i1 %11, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7180 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7181
  %2 = or i32 %1, 16, !dbg !7181
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7181
  ret void, !dbg !7182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7183 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7186, metadata !DIExpression()), !dbg !7187
  br label %1, !dbg !7188

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7186, metadata !DIExpression()), !dbg !7187
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7190
  %3 = add nuw nsw i32 %2, 1, !dbg !7193
  call void @llvm.dbg.value(metadata i32 %3, metadata !7186, metadata !DIExpression()), !dbg !7187
  %4 = icmp eq i32 %3, 85, !dbg !7194
  br i1 %4, label %5, label %1, !dbg !7188, !llvm.loop !7195

5:                                                ; preds = %1
  ret void, !dbg !7197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 1, metadata !7201, metadata !DIExpression()), !dbg !7202
  %2 = and i32 %0, 15, !dbg !7203
  %3 = add nsw i32 %2, -4, !dbg !7203
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7203
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7203
  %6 = icmp slt i32 %0, 0, !dbg !7203
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7203
  store volatile i8 16, i8* %7, align 1, !dbg !7204
  ret void, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7316, metadata !DIExpression()), !dbg !7317
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7318
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7320
  br i1 %3, label %4, label %12, !dbg !7321

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7322, !srcloc !7334
  call void @llvm.dbg.value(metadata i32 %5, metadata !7325, metadata !DIExpression()) #23, !dbg !7335
  %6 = icmp eq i32 %5, 0, !dbg !7336
  br i1 %6, label %12, label %7, !dbg !7337

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7338
  %9 = or i32 %8, 268435456, !dbg !7338
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7338
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7340
  %11 = and i32 %10, -32769, !dbg !7340
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7340
  br label %12, !dbg !7341

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7342
  ret void, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7344 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7345
  ret void, !dbg !7346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7347
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7348
  %3 = load i32, i32* %2, align 4, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7347
  %4 = add i32 %3, -64, !dbg !7350
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7347
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7351
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7352
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7353
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7347
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7354
  ret void, !dbg !7355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7356 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7357
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7358, !srcloc !7361
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7362, !srcloc !7365
  ret void, !dbg !7366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7367 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7368, !srcloc !7371
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7372
  ret void, !dbg !7373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7374 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7389, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8 %1, metadata !7390, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 %2, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 %3, metadata !7392, metadata !DIExpression()), !dbg !7393
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7394
  %6 = icmp eq i32 %5, -22, !dbg !7396
  br i1 %6, label %7, label %9, !dbg !7397

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7398
  %8 = zext i8 %1 to i32, !dbg !7398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7398
  unreachable, !dbg !7398

9:                                                ; preds = %4
  ret void, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7404 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7409, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i8 %1, metadata !7410, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 undef, metadata !7411, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 undef, metadata !7412, metadata !DIExpression()), !dbg !7414
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7415
  call void @llvm.dbg.value(metadata i8 %3, metadata !7413, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7414
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7416
  call void @llvm.dbg.value(metadata i32 %4, metadata !7413, metadata !DIExpression()), !dbg !7414
  %5 = trunc i32 %4 to i8, !dbg !7417
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7418
  ret i32 %4, !dbg !7419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7420 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7424, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8 %1, metadata !7425, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8 %2, metadata !7426, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i1 %3, metadata !7427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7430
  %5 = zext i8 %2 to i32, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %5, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 0, metadata !7428, metadata !DIExpression()), !dbg !7430
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 0, metadata !7428, metadata !DIExpression()), !dbg !7430
  %7 = icmp eq i8 %1, 0, !dbg !7432
  br i1 %7, label %30, label %8, !dbg !7435

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %10, metadata !7428, metadata !DIExpression()), !dbg !7430
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7436
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7439
  %13 = load i32, i32* %12, align 4, !dbg !7439
  %14 = icmp eq i32 %13, 0, !dbg !7440
  br i1 %14, label %26, label %15, !dbg !7441

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7442

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7444
  %18 = icmp eq i32 %17, 0, !dbg !7444
  br i1 %18, label %19, label %20, !dbg !7445

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7446
  br label %30, !dbg !7452

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7453
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %22, metadata !7429, metadata !DIExpression()), !dbg !7430
  %23 = icmp eq i32 %22, -22, !dbg !7455
  br i1 %23, label %30, label %24, !dbg !7457

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7458
  call void @llvm.dbg.value(metadata i32 %25, metadata !7429, metadata !DIExpression()), !dbg !7430
  br label %26, !dbg !7459

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7430
  call void @llvm.dbg.value(metadata i32 %27, metadata !7429, metadata !DIExpression()), !dbg !7430
  %28 = add nuw nsw i32 %10, 1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %28, metadata !7428, metadata !DIExpression()), !dbg !7430
  %29 = icmp eq i32 %28, %6, !dbg !7432
  br i1 %29, label %30, label %8, !dbg !7435, !llvm.loop !7461

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7430
  ret i32 %31, !dbg !7463
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7464 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7468, metadata !DIExpression()), !dbg !7470
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7471
  %3 = load i32, i32* %2, align 4, !dbg !7471
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7472, !range !7473
  %5 = icmp ult i32 %4, 2, !dbg !7472
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7474
  br i1 %7, label %8, label %15, !dbg !7474

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7475
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7476
  %11 = load i32, i32* %10, align 4, !dbg !7476
  %12 = and i32 %11, %9, !dbg !7477
  %13 = icmp eq i32 %12, 0, !dbg !7478
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7469, metadata !DIExpression()), !dbg !7470
  ret i32 %16, !dbg !7479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7480 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7484, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7485, metadata !DIExpression()), !dbg !7487
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7488
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7488
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7486, metadata !DIExpression()), !dbg !7489
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7490
  %6 = load i32, i32* %5, align 4, !dbg !7490
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7491
  store i32 %6, i32* %7, align 4, !dbg !7492
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7493
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7494
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7495
  %11 = load i32, i32* %10, align 4, !dbg !7495
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7496
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7497
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7498
  ret i32 %12, !dbg !7499
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7500 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7507, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7508, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 undef, metadata !7509, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 %2, metadata !7510, metadata !DIExpression()), !dbg !7511
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7512
  %5 = load i32, i32* %4, align 4, !dbg !7512
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7513
  %7 = or i32 %6, %5, !dbg !7514
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7515
  store i32 %7, i32* %8, align 4, !dbg !7516
  ret void, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7518 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7522, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7523, metadata !DIExpression()), !dbg !7524
  %3 = zext i8 %0 to i32, !dbg !7525
  %4 = icmp ugt i8 %0, 7, !dbg !7527
  br i1 %4, label %5, label %6, !dbg !7528

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7529
  br label %7, !dbg !7535

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7536
  br label %7, !dbg !7537

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7524
  ret i32 %8, !dbg !7538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7544, metadata !DIExpression()), !dbg !7545
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7546
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7547
  %4 = load i32, i32* %3, align 4, !dbg !7547
  %5 = and i32 %4, -32, !dbg !7548
  %6 = or i32 %5, %0, !dbg !7549
  %7 = or i32 %6, 16, !dbg !7549
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7550
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7551
  %9 = load i32, i32* %8, align 4, !dbg !7551
  %10 = or i32 %9, 1, !dbg !7552
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7553
  ret void, !dbg !7554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7558, metadata !DIExpression()), !dbg !7559
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7560
  ret void, !dbg !7561
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7567
  %2 = icmp ult i32 %0, 33, !dbg !7568
  br i1 %2, label %11, label %3, !dbg !7570

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7571
  br i1 %4, label %11, label %5, !dbg !7573

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7574
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7575, !range !7473
  %8 = mul nsw i32 %7, -2, !dbg !7576
  %9 = add nsw i32 %8, 62, !dbg !7576
  %10 = and i32 %9, 62, !dbg !7577
  br label %11, !dbg !7578

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7567
  ret i32 %12, !dbg !7579
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7580 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8 %1, metadata !7585, metadata !DIExpression()), !dbg !7586
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7587
  %4 = icmp eq i32 %3, -22, !dbg !7589
  br i1 %4, label %5, label %7, !dbg !7590

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7591
  %6 = zext i8 %1 to i32, !dbg !7591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7591
  unreachable, !dbg !7591

7:                                                ; preds = %2
  ret void, !dbg !7596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7597 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7601, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8 %1, metadata !7602, metadata !DIExpression()), !dbg !7608
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7609
  call void @llvm.dbg.value(metadata i8 %3, metadata !7603, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7608
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %4, metadata !7603, metadata !DIExpression()), !dbg !7608
  %5 = icmp ne i32 %4, -22, !dbg !7611
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7612
  call void @llvm.dbg.value(metadata i32 %4, metadata !7604, metadata !DIExpression()), !dbg !7613
  br i1 %7, label %8, label %12, !dbg !7612

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7604, metadata !DIExpression()), !dbg !7613
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7614
  %10 = add i32 %9, 1, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %10, metadata !7604, metadata !DIExpression()), !dbg !7613
  %11 = icmp eq i32 %10, 8, !dbg !7618
  br i1 %11, label %12, label %8, !dbg !7619, !llvm.loop !7620

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7626, metadata !DIExpression()), !dbg !7627
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7628
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7629
  ret void, !dbg !7630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7631 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7636
  %2 = icmp ugt i32 %1, 8, !dbg !7638
  br i1 %2, label %3, label %4, !dbg !7639

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7640
  unreachable, !dbg !7640

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7635, metadata !DIExpression()), !dbg !7646
  %5 = icmp eq i32 %1, 0, !dbg !7647
  br i1 %5, label %13, label %6, !dbg !7650

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7650

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7635, metadata !DIExpression()), !dbg !7646
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7651
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7653
  %11 = add nuw i32 %9, 1, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %11, metadata !7635, metadata !DIExpression()), !dbg !7646
  %12 = icmp eq i32 %11, %1, !dbg !7647
  br i1 %12, label %13, label %8, !dbg !7650, !llvm.loop !7655

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7657
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7658
  tail call void @arm_core_mpu_enable() #24, !dbg !7659
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7660
  %16 = and i32 %15, 65280, !dbg !7660
  %17 = icmp eq i32 %16, 2048, !dbg !7660
  br i1 %17, label %19, label %18, !dbg !7663

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7664
  unreachable, !dbg !7664

19:                                               ; preds = %13
  ret i32 0, !dbg !7666
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7674, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %1, metadata !7675, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %0, metadata !7676, metadata !DIExpression()), !dbg !7677
  %3 = load i8, i8* %1, align 1, !dbg !7678
  %4 = icmp eq i8 %3, 0, !dbg !7679
  br i1 %4, label %13, label %5, !dbg !7680

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7674, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %8, metadata !7675, metadata !DIExpression()), !dbg !7677
  store i8 %6, i8* %7, align 1, !dbg !7681
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7683
  call void @llvm.dbg.value(metadata i8* %9, metadata !7674, metadata !DIExpression()), !dbg !7677
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7684
  call void @llvm.dbg.value(metadata i8* %10, metadata !7675, metadata !DIExpression()), !dbg !7677
  %11 = load i8, i8* %10, align 1, !dbg !7678
  %12 = icmp eq i8 %11, 0, !dbg !7679
  br i1 %12, label %13, label %5, !dbg !7680, !llvm.loop !7685

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7687
  ret i8* %0, !dbg !7688
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7693, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %1, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %2, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %0, metadata !7696, metadata !DIExpression()), !dbg !7697
  %4 = icmp eq i32 %2, 0, !dbg !7698
  br i1 %4, label %22, label %5, !dbg !7699

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7693, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %7, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %8, metadata !7694, metadata !DIExpression()), !dbg !7697
  %9 = load i8, i8* %8, align 1, !dbg !7700
  %10 = icmp eq i8 %9, 0, !dbg !7701
  br i1 %10, label %16, label %11, !dbg !7702

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7703
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7705
  call void @llvm.dbg.value(metadata i8* %12, metadata !7694, metadata !DIExpression()), !dbg !7697
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7706
  call void @llvm.dbg.value(metadata i8* %13, metadata !7693, metadata !DIExpression()), !dbg !7697
  %14 = add i32 %7, -1, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %14, metadata !7695, metadata !DIExpression()), !dbg !7697
  %15 = icmp eq i32 %14, 0, !dbg !7698
  br i1 %15, label %22, label %5, !dbg !7699, !llvm.loop !7708

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7693, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %18, metadata !7695, metadata !DIExpression()), !dbg !7697
  store i8 0, i8* %17, align 1, !dbg !7710
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7712
  call void @llvm.dbg.value(metadata i8* %19, metadata !7693, metadata !DIExpression()), !dbg !7697
  %20 = add i32 %18, -1, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %20, metadata !7695, metadata !DIExpression()), !dbg !7697
  %21 = icmp eq i32 %20, 0, !dbg !7714
  br i1 %21, label %22, label %16, !dbg !7715, !llvm.loop !7716

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7718
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7719 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7723, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()), !dbg !7726
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7727

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7723, metadata !DIExpression()), !dbg !7726
  %6 = load i8, i8* %5, align 1, !dbg !7728
  %7 = icmp eq i8 %6, %3, !dbg !7729
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7730
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7731
  call void @llvm.dbg.value(metadata i8* %10, metadata !7723, metadata !DIExpression()), !dbg !7726
  br i1 %9, label %11, label %4, !dbg !7730, !llvm.loop !7733

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7735
  ret i8* %12, !dbg !7736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 %1, metadata !7740, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* null, metadata !7741, metadata !DIExpression()), !dbg !7742
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7743

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7742
  call void @llvm.dbg.value(metadata i8* %6, metadata !7741, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* %5, metadata !7739, metadata !DIExpression()), !dbg !7742
  %7 = load i8, i8* %5, align 1, !dbg !7744
  %8 = icmp eq i8 %7, %3, !dbg !7747
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7748
  call void @llvm.dbg.value(metadata i8* %9, metadata !7741, metadata !DIExpression()), !dbg !7742
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7749
  call void @llvm.dbg.value(metadata i8* %10, metadata !7739, metadata !DIExpression()), !dbg !7742
  %11 = icmp eq i8 %7, 0, !dbg !7750
  br i1 %11, label %12, label %4, !dbg !7750, !llvm.loop !7751

12:                                               ; preds = %4
  ret i8* %9, !dbg !7753
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7754 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 0, metadata !7759, metadata !DIExpression()), !dbg !7760
  %2 = load i8, i8* %0, align 1, !dbg !7761
  %3 = icmp eq i8 %2, 0, !dbg !7762
  br i1 %3, label %11, label %4, !dbg !7763

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %6, metadata !7758, metadata !DIExpression()), !dbg !7760
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7764
  call void @llvm.dbg.value(metadata i8* %7, metadata !7758, metadata !DIExpression()), !dbg !7760
  %8 = add i32 %5, 1, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %8, metadata !7759, metadata !DIExpression()), !dbg !7760
  %9 = load i8, i8* %7, align 1, !dbg !7761
  %10 = icmp eq i8 %9, 0, !dbg !7762
  br i1 %10, label %11, label %4, !dbg !7763, !llvm.loop !7767

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7760
  ret i32 %12, !dbg !7769
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7770 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 %1, metadata !7775, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i32 0, metadata !7776, metadata !DIExpression()), !dbg !7777
  %3 = load i8, i8* %0, align 1, !dbg !7778
  %4 = icmp ne i8 %3, 0, !dbg !7779
  %5 = icmp ne i32 %1, 0, !dbg !7780
  %6 = and i1 %4, %5, !dbg !7780
  br i1 %6, label %7, label %16, !dbg !7781

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %9, metadata !7774, metadata !DIExpression()), !dbg !7777
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7782
  call void @llvm.dbg.value(metadata i8* %10, metadata !7774, metadata !DIExpression()), !dbg !7777
  %11 = add nuw i32 %8, 1, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %11, metadata !7776, metadata !DIExpression()), !dbg !7777
  %12 = load i8, i8* %10, align 1, !dbg !7778
  %13 = icmp ne i8 %12, 0, !dbg !7779
  %14 = icmp ult i32 %11, %1, !dbg !7780
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7780
  br i1 %15, label %7, label %16, !dbg !7781, !llvm.loop !7785

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7777
  ret i32 %17, !dbg !7787
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7788 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7792, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8* %1, metadata !7793, metadata !DIExpression()), !dbg !7794
  %3 = load i8, i8* %0, align 1, !dbg !7795
  %4 = load i8, i8* %1, align 1, !dbg !7796
  %5 = icmp ne i8 %3, %4, !dbg !7797
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7798
  br i1 %7, label %18, label %8, !dbg !7798

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8* %10, metadata !7792, metadata !DIExpression()), !dbg !7794
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7799
  call void @llvm.dbg.value(metadata i8* %11, metadata !7792, metadata !DIExpression()), !dbg !7794
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %12, metadata !7793, metadata !DIExpression()), !dbg !7794
  %13 = load i8, i8* %11, align 1, !dbg !7795
  %14 = load i8, i8* %12, align 1, !dbg !7796
  %15 = icmp ne i8 %13, %14, !dbg !7797
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7798
  br i1 %17, label %18, label %8, !dbg !7798, !llvm.loop !7802

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7795
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7796
  %21 = zext i8 %19 to i32, !dbg !7805
  %22 = zext i8 %20 to i32, !dbg !7806
  %23 = sub nsw i32 %21, %22, !dbg !7807
  ret i32 %23, !dbg !7808
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7813, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %1, metadata !7814, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %2, metadata !7815, metadata !DIExpression()), !dbg !7816
  %4 = icmp eq i32 %2, 0, !dbg !7817
  br i1 %4, label %23, label %5, !dbg !7817

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7815, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %7, metadata !7814, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %8, metadata !7813, metadata !DIExpression()), !dbg !7816
  %9 = load i8, i8* %8, align 1, !dbg !7818
  %10 = load i8, i8* %7, align 1, !dbg !7819
  %11 = icmp ne i8 %9, %10, !dbg !7820
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7821
  br i1 %13, label %19, label %14, !dbg !7821

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7822
  call void @llvm.dbg.value(metadata i8* %15, metadata !7813, metadata !DIExpression()), !dbg !7816
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7824
  call void @llvm.dbg.value(metadata i8* %16, metadata !7814, metadata !DIExpression()), !dbg !7816
  %17 = add i32 %6, -1, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %17, metadata !7815, metadata !DIExpression()), !dbg !7816
  %18 = icmp eq i32 %17, 0, !dbg !7817
  br i1 %18, label %23, label %5, !dbg !7817, !llvm.loop !7826

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7829
  %21 = zext i8 %10 to i32, !dbg !7830
  %22 = sub nsw i32 %20, %21, !dbg !7831
  br label %23, !dbg !7832

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7832
  ret i32 %24, !dbg !7833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7838, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* %1, metadata !7839, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8** %2, metadata !7840, metadata !DIExpression()), !dbg !7843
  %4 = icmp eq i8* %0, null, !dbg !7844
  br i1 %4, label %5, label %7, !dbg !7844

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7845
  br label %7, !dbg !7844

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7844
  call void @llvm.dbg.value(metadata i8* %8, metadata !7841, metadata !DIExpression()), !dbg !7843
  %9 = load i8, i8* %8, align 1, !dbg !7846
  %10 = icmp eq i8 %9, 0, !dbg !7846
  br i1 %10, label %33, label %11, !dbg !7847

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7841, metadata !DIExpression()), !dbg !7843
  %14 = zext i8 %12 to i32, !dbg !7846
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7848
  %16 = icmp eq i8* %15, null, !dbg !7847
  br i1 %16, label %21, label %17, !dbg !7849

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7850
  call void @llvm.dbg.value(metadata i8* %18, metadata !7841, metadata !DIExpression()), !dbg !7843
  %19 = load i8, i8* %18, align 1, !dbg !7846
  %20 = icmp eq i8 %19, 0, !dbg !7846
  br i1 %20, label %33, label %11, !dbg !7847, !llvm.loop !7852

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7842, metadata !DIExpression()), !dbg !7843
  %24 = zext i8 %22 to i32, !dbg !7854
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7855
  %26 = icmp eq i8* %25, null, !dbg !7856
  br i1 %26, label %27, label %31, !dbg !7857

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7858
  call void @llvm.dbg.value(metadata i8* %28, metadata !7842, metadata !DIExpression()), !dbg !7843
  %29 = load i8, i8* %28, align 1, !dbg !7854
  %30 = icmp eq i8 %29, 0, !dbg !7854
  br i1 %30, label %33, label %21, !dbg !7860, !llvm.loop !7861

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7863
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7866
  br label %33, !dbg !7867

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7843
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7843
  store i8* %34, i8** %2, align 4, !dbg !7843
  ret i8* %35, !dbg !7868
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7869 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %1, metadata !7872, metadata !DIExpression()), !dbg !7873
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7874
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7875
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7876
  ret i8* %0, !dbg !7877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %0, metadata !7883, metadata !DIExpression()), !dbg !7885
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7886
  call void @llvm.dbg.value(metadata i32 %4, metadata !7884, metadata !DIExpression()), !dbg !7885
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7887
  call void @llvm.dbg.value(metadata i8* %5, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7885
  %6 = icmp eq i32 %2, 0, !dbg !7888
  br i1 %6, label %18, label %7, !dbg !7889

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %9, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %10, metadata !7881, metadata !DIExpression()), !dbg !7885
  %12 = load i8, i8* %10, align 1, !dbg !7891
  %13 = icmp eq i8 %12, 0, !dbg !7892
  br i1 %13, label %18, label %14, !dbg !7893

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7894
  call void @llvm.dbg.value(metadata i8* %15, metadata !7881, metadata !DIExpression()), !dbg !7885
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7896
  call void @llvm.dbg.value(metadata i8* %16, metadata !7880, metadata !DIExpression()), !dbg !7885
  store i8 %12, i8* %9, align 1, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %11, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %11, metadata !7882, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7885
  %17 = icmp eq i32 %11, 0, !dbg !7888
  br i1 %17, label %18, label %7, !dbg !7889, !llvm.loop !7898

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7885
  store i8 0, i8* %19, align 1, !dbg !7900
  ret i8* %0, !dbg !7901
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7906, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %1, metadata !7907, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %2, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %0, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %1, metadata !7910, metadata !DIExpression()), !dbg !7911
  %4 = icmp eq i32 %2, 0, !dbg !7912
  br i1 %4, label %31, label %5, !dbg !7914

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %0, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %2, metadata !7908, metadata !DIExpression()), !dbg !7911
  %6 = add i32 %2, -1, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %6, metadata !7908, metadata !DIExpression()), !dbg !7911
  %7 = icmp eq i32 %6, 0, !dbg !7916
  br i1 %7, label %23, label %8, !dbg !7917

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7918
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7918
  br label %11, !dbg !7918

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %14, metadata !7909, metadata !DIExpression()), !dbg !7911
  %15 = load i8, i8* %14, align 1, !dbg !7919
  %16 = load i8, i8* %13, align 1, !dbg !7920
  %17 = icmp eq i8 %15, %16, !dbg !7921
  br i1 %17, label %18, label %23, !dbg !7918

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7922
  call void @llvm.dbg.value(metadata i8* %19, metadata !7909, metadata !DIExpression()), !dbg !7911
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %20, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %12, metadata !7908, metadata !DIExpression()), !dbg !7911
  %21 = add i32 %12, -1, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %21, metadata !7908, metadata !DIExpression()), !dbg !7911
  %22 = icmp eq i32 %21, 0, !dbg !7916
  br i1 %22, label %23, label %11, !dbg !7917, !llvm.loop !7925

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7911
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7911
  %26 = load i8, i8* %24, align 1, !dbg !7927
  %27 = zext i8 %26 to i32, !dbg !7927
  %28 = load i8, i8* %25, align 1, !dbg !7928
  %29 = zext i8 %28 to i32, !dbg !7928
  %30 = sub nsw i32 %27, %29, !dbg !7929
  br label %31, !dbg !7930

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7911
  ret i32 %32, !dbg !7931
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %0, metadata !7939, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %1, metadata !7940, metadata !DIExpression()), !dbg !7941
  %4 = ptrtoint i8* %0 to i32, !dbg !7942
  %5 = ptrtoint i8* %1 to i32, !dbg !7942
  %6 = sub i32 %4, %5, !dbg !7942
  %7 = icmp ult i32 %6, %2, !dbg !7944
  br i1 %7, label %10, label %8, !dbg !7945

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %0, metadata !7939, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7941
  %9 = icmp eq i32 %2, 0, !dbg !7946
  br i1 %9, label %26, label %17, !dbg !7948

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7938, metadata !DIExpression()), !dbg !7941
  %12 = add i32 %11, -1, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %12, metadata !7938, metadata !DIExpression()), !dbg !7941
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7952
  %14 = load i8, i8* %13, align 1, !dbg !7952
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7953
  store i8 %14, i8* %15, align 1, !dbg !7954
  %16 = icmp eq i32 %12, 0, !dbg !7955
  br i1 %16, label %26, label %10, !dbg !7956, !llvm.loop !7957

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %19, metadata !7939, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %20, metadata !7938, metadata !DIExpression()), !dbg !7941
  %21 = load i8, i8* %18, align 1, !dbg !7959
  store i8 %21, i8* %19, align 1, !dbg !7961
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7962
  call void @llvm.dbg.value(metadata i8* %22, metadata !7939, metadata !DIExpression()), !dbg !7941
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %23, metadata !7940, metadata !DIExpression()), !dbg !7941
  %24 = add i32 %20, -1, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %24, metadata !7938, metadata !DIExpression()), !dbg !7941
  %25 = icmp eq i32 %24, 0, !dbg !7946
  br i1 %25, label %26, label %17, !dbg !7948, !llvm.loop !7965

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7974, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %1, metadata !7975, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i32 %2, metadata !7976, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %0, metadata !7977, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %1, metadata !7978, metadata !DIExpression()), !dbg !7979
  %4 = icmp eq i32 %2, 0, !dbg !7980
  br i1 %4, label %14, label %5, !dbg !7981

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7978, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %7, metadata !7977, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i32 %8, metadata !7976, metadata !DIExpression()), !dbg !7979
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7982
  call void @llvm.dbg.value(metadata i8* %9, metadata !7978, metadata !DIExpression()), !dbg !7979
  %10 = load i8, i8* %6, align 1, !dbg !7984
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7985
  call void @llvm.dbg.value(metadata i8* %11, metadata !7977, metadata !DIExpression()), !dbg !7979
  store i8 %10, i8* %7, align 1, !dbg !7986
  %12 = add i32 %8, -1, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %12, metadata !7976, metadata !DIExpression()), !dbg !7979
  %13 = icmp eq i32 %12, 0, !dbg !7980
  br i1 %13, label %14, label %5, !dbg !7981, !llvm.loop !7988

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7990
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7991 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i32 %1, metadata !7996, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i32 %2, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8000
  %4 = trunc i32 %1 to i8, !dbg !8001
  call void @llvm.dbg.value(metadata i8 %4, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i32 %2, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8000
  %5 = icmp eq i32 %2, 0, !dbg !8002
  br i1 %5, label %12, label %6, !dbg !8003

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %8, metadata !7998, metadata !DIExpression()), !dbg !8000
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8004
  call void @llvm.dbg.value(metadata i8* %9, metadata !7998, metadata !DIExpression()), !dbg !8000
  store i8 %4, i8* %8, align 1, !dbg !8006
  %10 = add i32 %7, -1, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %10, metadata !7997, metadata !DIExpression()), !dbg !8000
  %11 = icmp eq i32 %10, 0, !dbg !8002
  br i1 %11, label %12, label %6, !dbg !8003, !llvm.loop !8008

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8010
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8015, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 %1, metadata !8016, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 %2, metadata !8017, metadata !DIExpression()), !dbg !8021
  %4 = icmp eq i32 %2, 0, !dbg !8022
  br i1 %4, label %17, label %5, !dbg !8023

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8024

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8025
  call void @llvm.dbg.value(metadata i8* %9, metadata !8018, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 %8, metadata !8017, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i8* %9, metadata !8018, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8025
  %10 = load i8, i8* %9, align 1, !dbg !8026
  %11 = icmp eq i8 %10, %6, !dbg !8029
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8030
  call void @llvm.dbg.value(metadata i8* %12, metadata !8018, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 %13, metadata !8017, metadata !DIExpression()), !dbg !8021
  br i1 %15, label %16, label %7, !dbg !8030, !llvm.loop !8031

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8033

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8021
  ret i8* %19, !dbg !8034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8037, metadata !DIExpression()), !dbg !8038
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8039
  ret void, !dbg !8040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8043, metadata !DIExpression()), !dbg !8044
  ret i32 -1, !dbg !8045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  %3 = ptrtoint i32* %1 to i32, !dbg !8053
  %4 = and i32 %3, -2, !dbg !8053
  %5 = icmp eq i32 %4, 2, !dbg !8053
  br i1 %5, label %6, label %9, !dbg !8053

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8054
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8054
  br label %9, !dbg !8055

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8055
  ret i32 %10, !dbg !8056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32* %1, metadata !8060, metadata !DIExpression()), !dbg !8061
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8062
  ret i32 %3, !dbg !8063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32* %1, metadata !8068, metadata !DIExpression()), !dbg !8069
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8070, !srcloc !8072
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8073
  ret i32 %3, !dbg !8074
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32* %1, metadata !8081, metadata !DIExpression()), !dbg !8084
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %3, metadata !8082, metadata !DIExpression()), !dbg !8084
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8086
  call void @llvm.dbg.value(metadata i32 %4, metadata !8083, metadata !DIExpression()), !dbg !8084
  %5 = icmp ne i32 %3, %4, !dbg !8087
  %6 = sext i1 %5 to i32, !dbg !8088
  ret i32 %6, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8094, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32 %1, metadata !8095, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32 %2, metadata !8096, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32* %3, metadata !8097, metadata !DIExpression()), !dbg !8098
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8099
  ret i32 %5, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8103, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32 %1, metadata !8104, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32 %2, metadata !8105, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32* %3, metadata !8106, metadata !DIExpression()), !dbg !8107
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8108, !srcloc !8110
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8111
  ret i32 %5, !dbg !8112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8115, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %1, metadata !8116, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32* %3, metadata !8118, metadata !DIExpression()), !dbg !8123
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8124
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8126
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8126
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8126
  br i1 %11, label %33, label %12, !dbg !8126

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8123
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8123
  call void @llvm.dbg.value(metadata i8* %14, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %13, metadata !8119, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %1, metadata !8120, metadata !DIExpression()), !dbg !8123
  br label %15, !dbg !8127

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8129
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8123
  call void @llvm.dbg.value(metadata i8* %17, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 %16, metadata !8120, metadata !DIExpression()), !dbg !8123
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8130
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8133
  call void @llvm.dbg.value(metadata i8* %19, metadata !8121, metadata !DIExpression()), !dbg !8123
  %20 = load i8, i8* %17, align 1, !dbg !8134
  %21 = zext i8 %20 to i32, !dbg !8135
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8130
  %23 = icmp eq i32 %22, -1, !dbg !8136
  br i1 %23, label %30, label %24, !dbg !8137

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %25, metadata !8120, metadata !DIExpression()), !dbg !8123
  %26 = icmp eq i32 %25, 0, !dbg !8139
  br i1 %26, label %27, label %15, !dbg !8140, !llvm.loop !8141

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8143
  call void @llvm.dbg.value(metadata i32 %28, metadata !8119, metadata !DIExpression()), !dbg !8123
  %29 = icmp eq i32 %28, 0, !dbg !8144
  br i1 %29, label %30, label %12, !dbg !8145, !llvm.loop !8146

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8123
  call void @llvm.dbg.value(metadata i32 %31, metadata !8119, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.label(metadata !8122), !dbg !8149
  %32 = sub i32 %2, %31, !dbg !8150
  br label %33, !dbg !8151

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8123
  ret i32 %34, !dbg !8152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8157, metadata !DIExpression()), !dbg !8158
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8159
  %3 = icmp eq i32 %2, -1, !dbg !8161
  br i1 %3, label %8, label %4, !dbg !8162

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8163
  %6 = icmp eq i32 %5, -1, !dbg !8164
  %7 = sext i1 %6 to i32, !dbg !8163
  br label %8, !dbg !8165

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8158
  ret i32 %9, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8167 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8168
  %2 = icmp eq i32 %1, 0, !dbg !8168
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8170
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8170
  ret void, !dbg !8171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8172 {
  ret void, !dbg !8173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8174 {
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8176 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8177
  tail call void @ztest_test_skip() #24, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8182 {
  %1 = load i32, i32* @phase, align 4, !dbg !8183
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8184

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8185
  br label %6, !dbg !8187

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8188
  tail call fastcc void @test_finalize() #24, !dbg !8189
  br label %6, !dbg !8190

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8191
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8192
  store i32 2, i32* @test_status, align 4, !dbg !8193
  br label %6, !dbg !8194

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8196 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8197
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8200
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = icmp ult i32 %0, 6, !dbg !8209
  br i1 %2, label %3, label %6, !dbg !8209

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8209
  %5 = load i8*, i8** %4, align 4, !dbg !8209
  br label %6, !dbg !8209

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8210
  ret i8* %7, !dbg !8212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8219, metadata !DIExpression()), !dbg !8220
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8221, !srcloc !8223
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8224
  ret void, !dbg !8225
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8226 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8229
  ret %struct.k_thread* %1, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8231 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8232, !srcloc !8234
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8235
  ret %struct.k_thread* %1, !dbg !8236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8237 {
  %1 = load i32, i32* @phase, align 4, !dbg !8238
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8239

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8240
  br label %6, !dbg !8242

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8243
  tail call fastcc void @test_finalize() #24, !dbg !8244
  br label %6, !dbg !8245

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8246
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8247
  store i32 2, i32* @test_status, align 4, !dbg !8248
  br label %6, !dbg !8249

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8251 {
  %1 = load i32, i32* @phase, align 4, !dbg !8252
  %2 = icmp eq i32 %1, 2, !dbg !8253
  br i1 %2, label %3, label %4, !dbg !8253

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8254
  br label %8, !dbg !8256

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8257
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8258
  store i32 2, i32* @test_status, align 4, !dbg !8259
  %6 = load i32, i32* @phase, align 4, !dbg !8260
  %7 = icmp eq i32 %6, 1, !dbg !8262
  br i1 %7, label %8, label %9, !dbg !8263

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8264
  br label %9, !dbg !8265

9:                                                ; preds = %8, %4
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8268, metadata !DIExpression()), !dbg !8269
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8270
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8272 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8274, !srcloc !8276
  ret void, !dbg !8277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8280, metadata !DIExpression()), !dbg !8281
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8284 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8285, !srcloc !8287
  ret void, !dbg !8288
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8310, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8311, metadata !DIExpression()), !dbg !8313
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8314
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8315
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8315
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8312, metadata !DIExpression()), !dbg !8313
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8316
  br i1 %6, label %7, label %16, !dbg !8319

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8312, metadata !DIExpression()), !dbg !8313
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8320
  %10 = load i8*, i8** %9, align 4, !dbg !8320
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8323
  %12 = icmp eq i32 %11, 0, !dbg !8324
  br i1 %12, label %16, label %13, !dbg !8325

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8326
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8312, metadata !DIExpression()), !dbg !8313
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8316
  br i1 %15, label %7, label %16, !dbg !8319, !llvm.loop !8327

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8313
  ret %struct.ztest_unit_test* %17, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8330 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8332, metadata !DIExpression()), !dbg !8333
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8334
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8335
  ret i32 %3, !dbg !8336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8337 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8358, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8359, metadata !DIExpression()), !dbg !8360
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8361

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8359, metadata !DIExpression()), !dbg !8360
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8363
  %5 = load i8*, i8** %4, align 4, !dbg !8363
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8367
  %7 = icmp eq i32 %6, 0, !dbg !8368
  br i1 %7, label %11, label %8, !dbg !8369

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8370
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8359, metadata !DIExpression()), !dbg !8360
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8371
  br i1 %10, label %2, label %11, !dbg !8361, !llvm.loop !8372

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8360
  ret %struct.ztest_suite_node* %12, !dbg !8374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8375 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8379, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8380, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i8* null, metadata !8381, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8383, metadata !DIExpression()), !dbg !8386
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8387
  br i1 %2, label %3, label %4, !dbg !8389

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8390
  br label %68, !dbg !8392

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8393
  %6 = load i8*, i8** %5, align 4, !dbg !8393
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8393
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8393
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8395
  store i32 0, i32* @test_result, align 4, !dbg !8396
  store i32 0, i32* @phase, align 4, !dbg !8397
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8398
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8398
  %9 = icmp eq i8* ()* %8, null, !dbg !8400
  br i1 %9, label %12, label %10, !dbg !8401

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8402
  call void @llvm.dbg.value(metadata i8* %11, metadata !8381, metadata !DIExpression()), !dbg !8386
  br label %12, !dbg !8404

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8386
  call void @llvm.dbg.value(metadata i8* %13, metadata !8381, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8384, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 undef, metadata !8384, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8380, metadata !DIExpression()), !dbg !8386
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8380, metadata !DIExpression()), !dbg !8386
  br label %15, !dbg !8406

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8386
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8409
  call void @llvm.dbg.value(metadata i32 %17, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8380, metadata !DIExpression()), !dbg !8386
  %18 = load i8*, i8** %5, align 4, !dbg !8410
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8411
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8380, metadata !DIExpression()), !dbg !8386
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8412
  br i1 %20, label %53, label %21, !dbg !8406

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8413
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8416
  %24 = load i8*, i8** %23, align 4, !dbg !8416
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8417
  br i1 %25, label %26, label %49, !dbg !8418

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8419
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8419
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8421
  %30 = load i32, i32* %29, align 4, !dbg !8422
  %31 = add i32 %30, 1, !dbg !8422
  store i32 %31, i32* %29, align 4, !dbg !8422
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %32, metadata !8383, metadata !DIExpression()), !dbg !8386
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8424

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8425
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8428
  br label %42, !dbg !8429

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8430
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8433
  br label %42, !dbg !8434

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8435
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8438
  br label %42, !dbg !8439

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8440
  %45 = add i32 %44, 1, !dbg !8440
  store i32 %45, i32* %43, align 4, !dbg !8440
  %46 = icmp eq i32 %32, 1, !dbg !8441
  %47 = zext i1 %46 to i32, !dbg !8443
  %48 = add nsw i32 %17, %47, !dbg !8443
  br label %49, !dbg !8443

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8409
  call void @llvm.dbg.value(metadata i32 %50, metadata !8382, metadata !DIExpression()), !dbg !8386
  %51 = load i32, i32* @test_status, align 4, !dbg !8444
  %52 = icmp eq i32 %51, 2, !dbg !8446
  br i1 %52, label %59, label %15, !dbg !8447, !llvm.loop !8448

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8450
  %55 = icmp eq i32 %54, 0, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %17, metadata !8382, metadata !DIExpression()), !dbg !8386
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8452
  br i1 %57, label %58, label %59, !dbg !8452

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8453
  br label %59, !dbg !8455

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8384, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata i32 %17, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8380, metadata !DIExpression()), !dbg !8386
  %61 = icmp sgt i32 %60, 0, !dbg !8456
  %62 = load i8*, i8** %5, align 4, !dbg !8459
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8459
  store i32 4, i32* @phase, align 4, !dbg !8460
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8461
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8461
  %66 = icmp eq void (i8*)* %65, null, !dbg !8463
  br i1 %66, label %68, label %67, !dbg !8464

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8465
  br label %68, !dbg !8467

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8386
  ret i32 %69, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8473, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8474, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i8* %2, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8478
  %5 = load i8*, i8** %4, align 4, !dbg !8478
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8478
  store i32 1, i32* @phase, align 4, !dbg !8480
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8481
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8484
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8485
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8486
  %9 = load i32, i32* %8, align 4, !dbg !8486
  %10 = or i32 %9, 8, !dbg !8487
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8488
  tail call fastcc void @k_object_access_grant() #24, !dbg !8489
  tail call fastcc void @k_object_access_grant() #24, !dbg !8489
  tail call fastcc void @k_object_access_grant() #24, !dbg !8489
  %11 = load i8*, i8** %4, align 4, !dbg !8490
  %12 = icmp eq i8* %11, null, !dbg !8492
  br i1 %12, label %14, label %13, !dbg !8493

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8494
  br label %14, !dbg !8496

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8497
  %16 = and i32 %15, -2, !dbg !8499
  %17 = icmp eq i32 %16, 4, !dbg !8499
  br i1 %17, label %19, label %18, !dbg !8499

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8500
  tail call fastcc void @k_thread_join() #24, !dbg !8502
  br label %19, !dbg !8503

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8504
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8505
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8505
  %22 = icmp eq void (i8*)* %21, null, !dbg !8507
  br i1 %22, label %24, label %23, !dbg !8508

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8509
  br label %24, !dbg !8511

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8512
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8513
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8514
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8516
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8516
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8517
  %29 = load i32, i32* %28, align 4, !dbg !8517
  %30 = icmp ugt i32 %25, %29, !dbg !8518
  br i1 %30, label %31, label %32, !dbg !8519

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8520
  br label %32, !dbg !8522

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8523
  %33 = load i32, i32* @test_result, align 4, !dbg !8524
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8526

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8527
  %36 = icmp ult i32 %35, 2, !dbg !8527
  %37 = select i1 %36, i32 2, i32 0, !dbg !8527
  br label %38, !dbg !8527

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8477
  call void @llvm.dbg.value(metadata i32 %39, metadata !8476, metadata !DIExpression()), !dbg !8477
  tail call fastcc void @cleanup_test() #24, !dbg !8529
  call void @llvm.dbg.value(metadata i32 %39, metadata !8476, metadata !DIExpression()), !dbg !8477
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8532
  call void @llvm.dbg.value(metadata i32 %40, metadata !8476, metadata !DIExpression()), !dbg !8477
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8533
  %42 = load i8*, i8** %4, align 4, !dbg !8533
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8533
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8533
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8533
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8533
  %48 = icmp eq i32 %40, 2, !dbg !8535
  br i1 %48, label %49, label %52, !dbg !8537

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8538
  br i1 %50, label %51, label %52, !dbg !8539

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8540
  br label %52, !dbg !8542

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8544 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8545
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8546
  ret void, !dbg !8547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8548 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8558, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8559, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 1024, metadata !8560, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8561, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %0, metadata !8562, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %1, metadata !8563, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* %2, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 -1, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %3, metadata !8566, metadata !DIExpression()), !dbg !8568
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8569, !srcloc !8571
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8574 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8580, metadata !DIExpression()), !dbg !8581
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8582, !srcloc !8584
  ret void, !dbg !8585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i8* %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8593, !srcloc !8595
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8600, metadata !DIExpression()), !dbg !8601
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8602, !srcloc !8604
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8605
  ret void, !dbg !8606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8607 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8611, metadata !DIExpression()), !dbg !8613
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8614, !srcloc !8616
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8619 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8639
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8624, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %2, metadata !8625, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8626, metadata !DIExpression()), !dbg !8640
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8641

4:                                                ; preds = %17, %3
  ret void, !dbg !8642

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8626, metadata !DIExpression()), !dbg !8640
  br i1 %0, label %7, label %11, !dbg !8643

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8647
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8647
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8648
  br i1 %10, label %17, label %15, !dbg !8649

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8650
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8650
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8652
  br i1 %14, label %17, label %15, !dbg !8653

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8654
  br label %17, !dbg !8655

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8655
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8626, metadata !DIExpression()), !dbg !8640
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8656
  br i1 %19, label %5, label %4, !dbg !8641, !llvm.loop !8657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8659 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8662
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8663
  %3 = sub i32 %1, %2, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %3, metadata !8661, metadata !DIExpression()), !dbg !8665
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8666
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8667
  ret void, !dbg !8668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8669 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8673, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 0, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 0, metadata !8675, metadata !DIExpression()), !dbg !8676
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8677
  call void @llvm.dbg.value(metadata i32 0, metadata !8674, metadata !DIExpression()), !dbg !8676
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8681 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8685, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %1, metadata !8686, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 -1, metadata !8687, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8688, metadata !DIExpression()), !dbg !8697
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8698

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8698

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8688, metadata !DIExpression()), !dbg !8697
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8699
  %9 = load i8*, i8** %8, align 4, !dbg !8699
  %10 = load i8*, i8** %4, align 4, !dbg !8703
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8704
  %12 = icmp eq i32 %11, 0, !dbg !8705
  br i1 %12, label %13, label %19, !dbg !8706

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8707
  %15 = load i8*, i8** %14, align 4, !dbg !8707
  %16 = load i8*, i8** %5, align 4, !dbg !8708
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8709
  %18 = icmp eq i32 %17, 0, !dbg !8710
  br i1 %18, label %22, label %19, !dbg !8711

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8712
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8688, metadata !DIExpression()), !dbg !8697
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8713
  br i1 %21, label %6, label %31, !dbg !8698, !llvm.loop !8714

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8716
  %24 = load i32, i32* %23, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %24, metadata !8687, metadata !DIExpression()), !dbg !8696
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8718

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8719
  %27 = zext i1 %26 to i32, !dbg !8722
  br label %31, !dbg !8723

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8724
  %30 = zext i1 %29 to i32, !dbg !8727
  br label %31, !dbg !8728

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8696
  ret i32 %32, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8734, metadata !DIExpression()), !dbg !8735
  %2 = icmp ult i32 %0, 3, !dbg !8736
  br i1 %2, label %3, label %6, !dbg !8736

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8736
  %5 = load i8*, i8** %4, align 4, !dbg !8736
  br label %6, !dbg !8736

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8737
  ret i8* %7, !dbg !8739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8740 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8741
  ret i32 %1, !dbg !8742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8746, metadata !DIExpression()), !dbg !8747
  %2 = zext i32 %0 to i64, !dbg !8748
  call void @llvm.dbg.value(metadata i64 %2, metadata !8749, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8754, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 1000, metadata !8755, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 1, metadata !8756, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 1, metadata !8757, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 1, metadata !8758, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 0, metadata !8759, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 0, metadata !8760, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8 1, metadata !8761, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i64 0, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i64 83999, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i64 83999, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i64 83999, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i64 83999, metadata !8762, metadata !DIExpression()), !dbg !8766
  %3 = add nuw nsw i64 %2, 83999, !dbg !8768
  call void @llvm.dbg.value(metadata i64 %3, metadata !8749, metadata !DIExpression()), !dbg !8766
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8771
  %6 = udiv i32 %5, 84000, !dbg !8771
  %7 = zext i32 %6 to i64, !dbg !8771
  %8 = udiv i64 %3, 84000, !dbg !8771
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8771
  %10 = trunc i64 %9 to i32, !dbg !8773
  ret i32 %10, !dbg !8774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8775 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8777
  ret i32 %1, !dbg !8778
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8* %1, metadata !8782, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8* %2, metadata !8783, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8* %0, metadata !8784, metadata !DIExpression()), !dbg !8786
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8785, metadata !DIExpression()), !dbg !8786
  store i32 0, i32* @test_result, align 4, !dbg !8788
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8789
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8790
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8790
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8790
  %8 = icmp eq void (i8*)* %7, null, !dbg !8792
  br i1 %8, label %10, label %9, !dbg !8793

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8794
  br label %10, !dbg !8796

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8797
  store i32 1, i32* @test_result, align 4, !dbg !8798
  ret void, !dbg !8799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8800 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8804, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %1, metadata !8806, metadata !DIExpression()), !dbg !8807
  store i32 2, i32* @phase, align 4, !dbg !8808
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8809
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8809
  tail call void %4(i8* noundef %1) #25, !dbg !8810
  ret void, !dbg !8811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 0, metadata !8817, metadata !DIExpression()), !dbg !8820
  %2 = load i32, i32* @test_status, align 4, !dbg !8821
  %3 = icmp eq i32 %2, 2, !dbg !8823
  br i1 %3, label %17, label %4, !dbg !8824

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8818, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 0, metadata !8817, metadata !DIExpression()), !dbg !8820
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8826

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8818, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %7, metadata !8817, metadata !DIExpression()), !dbg !8820
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8827
  %9 = add nsw i32 %8, %7, !dbg !8830
  call void @llvm.dbg.value(metadata i32 %9, metadata !8817, metadata !DIExpression()), !dbg !8820
  %10 = load i32, i32* @test_status, align 4, !dbg !8831
  %11 = icmp ne i32 %10, 2, !dbg !8833
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8818, metadata !DIExpression()), !dbg !8825
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8835
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8818, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %9, metadata !8817, metadata !DIExpression()), !dbg !8820
  br i1 %14, label %5, label %15, !dbg !8835, !llvm.loop !8836

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8820
  call void @llvm.dbg.value(metadata i32 %16, metadata !8817, metadata !DIExpression()), !dbg !8820
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8838
  br label %17, !dbg !8839

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8820
  ret i32 %18, !dbg !8840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8845, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %1, metadata !8846, metadata !DIExpression()), !dbg !8856
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8857
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8857
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8847, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 0, metadata !8848, metadata !DIExpression()), !dbg !8856
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8858
  call void @llvm.dbg.value(metadata i32 0, metadata !8849, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata i32 0, metadata !8848, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 undef, metadata !8849, metadata !DIExpression()), !dbg !8859
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8848, metadata !DIExpression()), !dbg !8856
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8860
  br i1 %8, label %9, label %16, !dbg !8861

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %11, metadata !8851, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 1, metadata !8848, metadata !DIExpression()), !dbg !8856
  %12 = load i32, i32* %7, align 4, !dbg !8864
  %13 = add i32 %12, 1, !dbg !8864
  store i32 %13, i32* %7, align 4, !dbg !8864
  %14 = icmp ne i32 %11, 0, !dbg !8865
  %15 = zext i1 %14 to i32, !dbg !8866
  br label %16, !dbg !8867

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8856
  %20 = load i32, i32* %17, align 4, !dbg !8868
  %21 = add i32 %20, %18, !dbg !8868
  store i32 %21, i32* %17, align 4, !dbg !8868
  call void @llvm.dbg.value(metadata i32 %19, metadata !8848, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 undef, metadata !8849, metadata !DIExpression()), !dbg !8859
  ret i32 %19, !dbg !8869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8870 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8872, metadata !DIExpression()), !dbg !8875
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8876

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8877
  ret void, !dbg !8878

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8872, metadata !DIExpression()), !dbg !8875
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8879
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8882
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8872, metadata !DIExpression()), !dbg !8875
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8883
  br i1 %5, label %2, label %1, !dbg !8876, !llvm.loop !8884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8886 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8890, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8891, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i32 0, metadata !8892, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8894
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8895
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8893, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8891, metadata !DIExpression()), !dbg !8894
  %3 = load i8*, i8** %2, align 4, !dbg !8896
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8897
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8891, metadata !DIExpression()), !dbg !8894
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8898
  br i1 %5, label %36, label %6, !dbg !8899

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8900
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8900
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8903
  %11 = load i32, i32* %10, align 4, !dbg !8903
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8904
  %13 = load i32, i32* %12, align 4, !dbg !8904
  %14 = icmp eq i32 %11, %13, !dbg !8905
  br i1 %14, label %20, label %15, !dbg !8906

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8907
  %17 = load i32, i32* %16, align 4, !dbg !8907
  %18 = icmp ne i32 %17, %13, !dbg !8909
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8910
  call void @llvm.dbg.value(metadata i32 %21, metadata !8892, metadata !DIExpression()), !dbg !8894
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8911
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8911
  %24 = load i8*, i8** %23, align 4, !dbg !8911
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8911
  %26 = load i8*, i8** %25, align 4, !dbg !8911
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8911
  %28 = load i32, i32* %27, align 4, !dbg !8911
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8911
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8911
  call void @llvm.dbg.value(metadata i32 poison, metadata !8893, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8891, metadata !DIExpression()), !dbg !8894
  %33 = load i8*, i8** %2, align 4, !dbg !8896
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8897
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8891, metadata !DIExpression()), !dbg !8894
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8898
  br i1 %35, label %36, label %6, !dbg !8899, !llvm.loop !8912

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8914
  ret void, !dbg !8915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8916 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8918, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8920, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8921, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8922, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8924, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8925, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8926, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8927, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8929, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8930, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8931, metadata !DIExpression()), !dbg !8932
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8930, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8922, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8921, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8920, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8932
  %3 = load i8*, i8** %2, align 4, !dbg !8933
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8930, metadata !DIExpression()), !dbg !8932
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8935
  br i1 %5, label %58, label %6, !dbg !8936

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %9, metadata !8922, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %10, metadata !8921, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %11, metadata !8920, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %12, metadata !8919, metadata !DIExpression()), !dbg !8932
  %13 = add nuw nsw i32 %9, 1, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %13, metadata !8922, metadata !DIExpression()), !dbg !8932
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8939
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8939
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8940
  %17 = load i32, i32* %16, align 4, !dbg !8940
  %18 = add i32 %17, %8, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %18, metadata !8931, metadata !DIExpression()), !dbg !8932
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8942
  %20 = load i32, i32* %19, align 4, !dbg !8942
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8944
  %22 = load i32, i32* %21, align 4, !dbg !8944
  %23 = icmp eq i32 %20, %22, !dbg !8945
  br i1 %23, label %24, label %26, !dbg !8946

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %25, metadata !8921, metadata !DIExpression()), !dbg !8932
  br label %34, !dbg !8949

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8950
  %28 = load i32, i32* %27, align 4, !dbg !8950
  %29 = icmp eq i32 %28, %22, !dbg !8952
  br i1 %29, label %30, label %32, !dbg !8953

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %31, metadata !8919, metadata !DIExpression()), !dbg !8932
  br label %34, !dbg !8956

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %33, metadata !8920, metadata !DIExpression()), !dbg !8932
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8932
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8932
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %18, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8930, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %13, metadata !8922, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %37, metadata !8921, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %36, metadata !8920, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %35, metadata !8919, metadata !DIExpression()), !dbg !8932
  %38 = load i8*, i8** %2, align 4, !dbg !8933
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8930, metadata !DIExpression()), !dbg !8932
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8935
  br i1 %40, label %41, label %6, !dbg !8936, !llvm.loop !8959

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8961
  br i1 %42, label %58, label %43, !dbg !8963

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8964
  %45 = zext i1 %44 to i32, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %45, metadata !8929, metadata !DIExpression()), !dbg !8932
  %46 = sub nsw i32 %13, %37, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %46, metadata !8923, metadata !DIExpression()), !dbg !8932
  %47 = mul nsw i32 %35, 100000, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %47, metadata !8924, metadata !DIExpression()), !dbg !8932
  %48 = sdiv i32 %47, %46, !dbg !8969
  call void @llvm.dbg.value(metadata i32 %48, metadata !8925, metadata !DIExpression()), !dbg !8932
  %49 = sdiv i32 %48, 1000, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %49, metadata !8926, metadata !DIExpression()), !dbg !8932
  %50 = mul nsw i32 %49, -1000, !dbg !8971
  %51 = add i32 %50, %48, !dbg !8972
  %52 = sdiv i32 %51, 10, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %52, metadata !8927, metadata !DIExpression()), !dbg !8932
  %53 = mul nsw i32 %52, -10, !dbg !8974
  %54 = add i32 %53, %51, !dbg !8975
  call void @llvm.dbg.value(metadata i32 %54, metadata !8928, metadata !DIExpression()), !dbg !8932
  %55 = icmp sgt i32 %54, 4, !dbg !8976
  %56 = zext i1 %55 to i32, !dbg !8978
  %57 = add nsw i32 %52, %56, !dbg !8978
  br label %58, !dbg !8978

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8979
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8979
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8979
  call void @llvm.dbg.value(metadata i32 %66, metadata !8929, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %65, metadata !8927, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %64, metadata !8926, metadata !DIExpression()), !dbg !8932
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8980
  %68 = load i8*, i8** %2, align 4, !dbg !8980
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8980
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8980
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8985, metadata !DIExpression()), !dbg !8986
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8985, metadata !DIExpression()), !dbg !8986
  %3 = load i8*, i8** %2, align 4, !dbg !8987
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8985, metadata !DIExpression()), !dbg !8986
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8989
  br i1 %5, label %22, label %6, !dbg !8990

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8991
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8991
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8993
  store i32 0, i32* %10, align 4, !dbg !8994
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8995
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8996
  store i32 0, i32* %12, align 4, !dbg !8997
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8998
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8999
  store i32 0, i32* %14, align 4, !dbg !9000
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9001
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9002
  store i32 0, i32* %16, align 4, !dbg !9003
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9004
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9005
  store i32 0, i32* %18, align 4, !dbg !9006
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8985, metadata !DIExpression()), !dbg !8986
  %19 = load i8*, i8** %2, align 4, !dbg !8987
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8985, metadata !DIExpression()), !dbg !8986
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8989
  br i1 %21, label %22, label %6, !dbg !8990, !llvm.loop !9007

22:                                               ; preds = %6, %1
  ret void, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9010 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9012, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8 poison, metadata !9012, metadata !DIExpression()), !dbg !9015
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9016

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8 poison, metadata !9012, metadata !DIExpression()), !dbg !9015
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9020

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9013, metadata !DIExpression()), !dbg !9015
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9022
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9022
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9026
  %9 = load i32, i32* %8, align 4, !dbg !9026
  %10 = icmp eq i32 %9, 0, !dbg !9027
  br i1 %10, label %11, label %14, !dbg !9028

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9029
  %13 = load i8*, i8** %12, align 4, !dbg !9029
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9031
  call void @llvm.dbg.value(metadata i8 0, metadata !9012, metadata !DIExpression()), !dbg !9015
  br label %14, !dbg !9032

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9012, metadata !DIExpression()), !dbg !9015
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9033
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9013, metadata !DIExpression()), !dbg !9015
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9034
  br i1 %17, label %3, label %1, !dbg !9016, !llvm.loop !9035

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9014, metadata !DIExpression()), !dbg !9015
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9037
  %22 = load i8*, i8** %21, align 4, !dbg !9037
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9040
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9013, metadata !DIExpression()), !dbg !9015
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9041
  br i1 %24, label %25, label %29, !dbg !9043

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9044
  %27 = load i8*, i8** %26, align 4, !dbg !9044
  %28 = load i8*, i8** %21, align 4, !dbg !9046
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9047
  call void @llvm.dbg.value(metadata i8 0, metadata !9012, metadata !DIExpression()), !dbg !9015
  br label %29, !dbg !9048

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9012, metadata !DIExpression()), !dbg !9015
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9049
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9014, metadata !DIExpression()), !dbg !9015
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9050
  br i1 %32, label %18, label %33, !dbg !9020, !llvm.loop !9051

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9053

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9054
  br label %36, !dbg !9057

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9014, metadata !DIExpression()), !dbg !9015
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9058

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9014, metadata !DIExpression()), !dbg !9015
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9060
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9060
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9064
  %42 = load i32, i32* %41, align 4, !dbg !9064
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9065
  %44 = load i32, i32* %43, align 4, !dbg !9065
  %45 = add i32 %44, %42, !dbg !9066
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9067
  %47 = load i32, i32* %46, align 4, !dbg !9067
  %48 = add i32 %45, %47, !dbg !9068
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9069
  %50 = load i32, i32* %49, align 4, !dbg !9069
  %51 = icmp eq i32 %48, %50, !dbg !9070
  br i1 %51, label %57, label %52, !dbg !9071

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9072
  %54 = load i8*, i8** %53, align 4, !dbg !9072
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9074
  %56 = load i8*, i8** %55, align 4, !dbg !9074
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9075
  store i32 1, i32* @test_status, align 4, !dbg !9076
  br label %57, !dbg !9077

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9078
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9014, metadata !DIExpression()), !dbg !9015
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9079
  br i1 %59, label %37, label %60, !dbg !9058, !llvm.loop !9080

60:                                               ; preds = %57, %36
  ret void, !dbg !9082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9085, metadata !DIExpression()), !dbg !9086
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9087
  tail call void %2(i8* noundef %0) #25, !dbg !9088
  ret void, !dbg !9089
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9090 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9091
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9092
  ret void, !dbg !9093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9094 {
  tail call void @test_main() #24, !dbg !9095
  tail call void @end_report() #24, !dbg !9096
  ret void, !dbg !9097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9100, metadata !DIExpression()), !dbg !9101
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9102
  ret void, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9106, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i8 1, metadata !9108, metadata !DIExpression()), !dbg !9109
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9110
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9110
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9112
  br i1 %5, label %8, label %6, !dbg !9113

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9114
  call void @llvm.dbg.value(metadata i1 %7, metadata !9108, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9109
  br label %8, !dbg !9116

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9108, metadata !DIExpression()), !dbg !9109
  ret i1 %9, !dbg !9117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9118 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9120, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i8* undef, metadata !9121, metadata !DIExpression()), !dbg !9122
  ret i1 true, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9129, !srcloc !9131
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9138, metadata !DIExpression()), !dbg !9139
  ret i8* %0, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9143, metadata !DIExpression()), !dbg !9144
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9145
  ret void, !dbg !9146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9151, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9152, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9153, metadata !DIExpression()), !dbg !9157
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9158
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9158
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9154, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %0, metadata !9156, metadata !DIExpression()), !dbg !9157
  %7 = icmp slt i32 %0, %1, !dbg !9159
  br i1 %7, label %8, label %22, !dbg !9162

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9156, metadata !DIExpression()), !dbg !9157
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9163
  %11 = icmp eq i32 %10, 0, !dbg !9163
  br i1 %11, label %19, label %12, !dbg !9166

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9167
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9169
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9169
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9171
  br i1 %15, label %19, label %16, !dbg !9172

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9173
  %18 = load i8*, i8** %17, align 4, !dbg !9173
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9174
  br label %19, !dbg !9175

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9176
  call void @llvm.dbg.value(metadata i32 %20, metadata !9156, metadata !DIExpression()), !dbg !9157
  %21 = icmp eq i32 %20, %1, !dbg !9159
  br i1 %21, label %22, label %8, !dbg !9162, !llvm.loop !9177

22:                                               ; preds = %19, %3
  ret void, !dbg !9179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9182, metadata !DIExpression()), !dbg !9183
  %2 = shl nuw i32 1, %0, !dbg !9184
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9187
  ret i32 %3, !dbg !9188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9193, metadata !DIExpression()), !dbg !9194
  %2 = shl nuw i32 1, %0, !dbg !9195
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9198
  ret void, !dbg !9199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9203, metadata !DIExpression()), !dbg !9204
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9205
  ret void, !dbg !9206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9209, metadata !DIExpression()), !dbg !9210
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9211
  %3 = and i32 %2, %0, !dbg !9211
  %4 = icmp eq i32 %3, %0, !dbg !9212
  %5 = zext i1 %4 to i32, !dbg !9212
  ret i32 %5, !dbg !9213
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9216, metadata !DIExpression()), !dbg !9217
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9218
  ret void, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9222, metadata !DIExpression()), !dbg !9223
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9224
  ret void, !dbg !9225
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9228, metadata !DIExpression()), !dbg !9229
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9230
  ret void, !dbg !9231
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9232 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9234, metadata !DIExpression()), !dbg !9235
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9236
  ret void, !dbg !9237
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9238 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9240, metadata !DIExpression()), !dbg !9241
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9242
  ret void, !dbg !9243
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9246, metadata !DIExpression()), !dbg !9247
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9248
  ret void, !dbg !9249
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9252, metadata !DIExpression()), !dbg !9253
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9254
  ret void, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9258, metadata !DIExpression()), !dbg !9259
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9264, metadata !DIExpression()), !dbg !9265
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9266
  ret void, !dbg !9267
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9272
  ret void, !dbg !9273
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9276, metadata !DIExpression()), !dbg !9277
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9278
  ret i32 0, !dbg !9279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !866 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !870, metadata !DIExpression()), !dbg !9280
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9281
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9283
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9285
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9287
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9289
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9291
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9293
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9295
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9297
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9299
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9301
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9306, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i32 0, metadata !9307, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i32 undef, metadata !9307, metadata !DIExpression()), !dbg !9308
  %2 = lshr i32 6684671, %0, !dbg !9309
  %3 = and i32 %2, 1, !dbg !9309
  %4 = or i32 %3, %0, !dbg !9311
  %5 = icmp eq i32 %4, 0, !dbg !9311
  br i1 %5, label %6, label %7, !dbg !9311

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9312
  unreachable, !dbg !9312

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9317
  %9 = load i32, i32* %8, align 4, !dbg !9317
  call void @llvm.dbg.value(metadata i32 %9, metadata !9307, metadata !DIExpression()), !dbg !9308
  %10 = shl nuw i32 1, %0, !dbg !9318
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9319
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9324, metadata !DIExpression()), !dbg !9325
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9326
  %3 = or i32 %2, %0, !dbg !9326
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9326
  ret void, !dbg !9327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9330, metadata !DIExpression()), !dbg !9331
  %2 = icmp slt i32 %0, 32, !dbg !9332
  br i1 %2, label %3, label %5, !dbg !9334

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9335
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9337
  br label %5, !dbg !9338

5:                                                ; preds = %1, %3
  ret void, !dbg !9339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9342, metadata !DIExpression()), !dbg !9343
  %2 = xor i32 %0, -1, !dbg !9344
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9344
  %4 = and i32 %3, %2, !dbg !9344
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9344
  ret void, !dbg !9345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9350, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 %1, metadata !9351, metadata !DIExpression()), !dbg !9352
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9353

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9354
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9356
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9357
  br label %11, !dbg !9358

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9359
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9360
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9361
  br label %11, !dbg !9362

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9363
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9364
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9365
  br label %11, !dbg !9366

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9367
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9368
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9369
  br label %11, !dbg !9370

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9374, metadata !DIExpression()), !dbg !9375
  %2 = xor i32 %0, -1, !dbg !9376
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9376
  %4 = and i32 %3, %2, !dbg !9376
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9376
  ret void, !dbg !9377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9380, metadata !DIExpression()), !dbg !9381
  %2 = xor i32 %0, -1, !dbg !9382
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9382
  %4 = and i32 %3, %2, !dbg !9382
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9382
  ret void, !dbg !9383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9386, metadata !DIExpression()), !dbg !9387
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9388
  %3 = or i32 %2, %0, !dbg !9388
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9388
  ret void, !dbg !9389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9392, metadata !DIExpression()), !dbg !9393
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9394
  %3 = or i32 %2, %0, !dbg !9394
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9394
  ret void, !dbg !9395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9400, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9401, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %2, metadata !9402, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9403, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9405, metadata !DIExpression()), !dbg !9406
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9407
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9407
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9409
  br i1 %6, label %7, label %9, !dbg !9410

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9411
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9412
  store i8* %2, i8** %8, align 4, !dbg !9413
  br label %9, !dbg !9414

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9406
  ret i32 %10, !dbg !9415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9418, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9419, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9420, metadata !DIExpression()), !dbg !9421
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9422
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9423
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9424
  store i8* null, i8** %3, align 4, !dbg !9425
  ret void, !dbg !9426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9429, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9430, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9431, metadata !DIExpression()), !dbg !9434
  %3 = bitcast i8* %1 to i32*, !dbg !9435
  %4 = load i32, i32* %3, align 4, !dbg !9435
  %5 = add i32 %4, -169, !dbg !9435
  %6 = icmp ult i32 %5, -121, !dbg !9435
  br i1 %6, label %15, label %7, !dbg !9437

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9438
  %9 = inttoptr i32 %8 to i32*, !dbg !9439
  call void @llvm.dbg.value(metadata i32* %9, metadata !9432, metadata !DIExpression()), !dbg !9434
  %10 = load volatile i32, i32* %9, align 4, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %10, metadata !9433, metadata !DIExpression()), !dbg !9434
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9441
  %12 = bitcast i8* %11 to i32*, !dbg !9441
  %13 = load i32, i32* %12, align 4, !dbg !9441
  %14 = or i32 %13, %10, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %14, metadata !9433, metadata !DIExpression()), !dbg !9434
  store volatile i32 %14, i32* %9, align 4, !dbg !9443
  br label %15, !dbg !9444

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9434
  ret i32 %16, !dbg !9445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9448, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9449, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9450, metadata !DIExpression()), !dbg !9453
  %3 = bitcast i8* %1 to i32*, !dbg !9454
  %4 = load i32, i32* %3, align 4, !dbg !9454
  %5 = add i32 %4, -169, !dbg !9454
  %6 = icmp ult i32 %5, -121, !dbg !9454
  br i1 %6, label %16, label %7, !dbg !9456

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9457
  %9 = inttoptr i32 %8 to i32*, !dbg !9458
  call void @llvm.dbg.value(metadata i32* %9, metadata !9451, metadata !DIExpression()), !dbg !9453
  %10 = load volatile i32, i32* %9, align 4, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %10, metadata !9452, metadata !DIExpression()), !dbg !9453
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9460
  %12 = bitcast i8* %11 to i32*, !dbg !9460
  %13 = load i32, i32* %12, align 4, !dbg !9460
  %14 = xor i32 %13, -1, !dbg !9461
  %15 = and i32 %10, %14, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %15, metadata !9452, metadata !DIExpression()), !dbg !9453
  store volatile i32 %15, i32* %9, align 4, !dbg !9463
  br label %16, !dbg !9464

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9453
  ret i32 %17, !dbg !9465
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9468, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9469, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32* %2, metadata !9470, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9471, metadata !DIExpression()), !dbg !9476
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9477
  call void @llvm.dbg.value(metadata i32 %4, metadata !9472, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32 undef, metadata !9473, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32 undef, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32 %4, metadata !9475, metadata !DIExpression()), !dbg !9476
  %5 = bitcast i8* %1 to i32*, !dbg !9478
  %6 = load i32, i32* %5, align 4, !dbg !9478
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9479

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9480
  call void @llvm.dbg.value(metadata i32 %8, metadata !9473, metadata !DIExpression()), !dbg !9476
  br label %19, !dbg !9481

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %10, metadata !9474, metadata !DIExpression()), !dbg !9476
  br label %19, !dbg !9484

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9485
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #24, !dbg !9486
  br label %19, !dbg !9487

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9488
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9489
  br label %19, !dbg !9490

17:                                               ; preds = %3
  br label %19, !dbg !9491

18:                                               ; preds = %3
  br label %19, !dbg !9492

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9493
  br label %21, !dbg !9494

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9476
  ret i32 %22, !dbg !9494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9497, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i8* %1, metadata !9498, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i8* %2, metadata !9499, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i8* %1, metadata !9500, metadata !DIExpression()), !dbg !9505
  %4 = bitcast i8* %1 to i32*, !dbg !9506
  %5 = load i32, i32* %4, align 4, !dbg !9506
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()), !dbg !9505
  %7 = icmp slt i32 %6, 0, !dbg !9508
  br i1 %7, label %22, label %8, !dbg !9510

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9500, metadata !DIExpression()), !dbg !9505
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9511
  %10 = bitcast i8* %9 to i32*, !dbg !9511
  %11 = load i32, i32* %10, align 4, !dbg !9511
  %12 = lshr i32 %11, 16, !dbg !9511
  %13 = and i32 %12, 7, !dbg !9511
  %14 = lshr i32 %11, 8, !dbg !9512
  %15 = and i32 %14, 31, !dbg !9512
  %16 = shl i32 %13, %15, !dbg !9513
  call void @llvm.dbg.value(metadata i32 %16, metadata !9503, metadata !DIExpression()), !dbg !9505
  %17 = and i32 %11, 255, !dbg !9514
  %18 = or i32 %17, 1073887232, !dbg !9515
  %19 = inttoptr i32 %18 to i32*, !dbg !9516
  call void @llvm.dbg.value(metadata i32* %19, metadata !9501, metadata !DIExpression()), !dbg !9505
  %20 = load volatile i32, i32* %19, align 4, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %20, metadata !9502, metadata !DIExpression()), !dbg !9505
  %21 = or i32 %16, %20, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %21, metadata !9502, metadata !DIExpression()), !dbg !9505
  store volatile i32 %21, i32* %19, align 4, !dbg !9519
  br label %22, !dbg !9520

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9505
  ret i32 %23, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9526, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32 0, metadata !9527, metadata !DIExpression()), !dbg !9528
  %2 = add i32 %0, -1, !dbg !9529
  %3 = icmp ult i32 %2, 6, !dbg !9529
  br i1 %3, label %4, label %7, !dbg !9529

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9529
  %6 = load i32, i32* %5, align 4, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %6, metadata !9527, metadata !DIExpression()), !dbg !9528
  br label %7, !dbg !9530

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9528
  ret i32 %8, !dbg !9531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %1, metadata !9537, metadata !DIExpression()), !dbg !9538
  %3 = udiv i32 %0, %1, !dbg !9539
  ret i32 %3, !dbg !9540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9545, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.value(metadata i32 16, metadata !9546, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.value(metadata i32 336, metadata !9547, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.value(metadata i32 %1, metadata !9548, metadata !DIExpression()), !dbg !9549
  %3 = mul i32 %0, 336, !dbg !9550
  %4 = shl nsw i32 %1, 4, !dbg !9551
  %5 = udiv i32 %3, %4, !dbg !9552
  ret i32 %5, !dbg !9553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9554 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9556, metadata !DIExpression()), !dbg !9559
  tail call void @config_enable_default_clocks() #25, !dbg !9560
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9561
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9561
  %4 = lshr i32 %3, 4, !dbg !9561
  %5 = and i32 %4, 15, !dbg !9561
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9561
  %7 = load i8, i8* %6, align 1, !dbg !9561
  %8 = zext i8 %7 to i32, !dbg !9561
  %9 = lshr i32 %2, %8, !dbg !9561
  call void @llvm.dbg.value(metadata i32 %9, metadata !9557, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9559
  %10 = icmp ult i32 %9, 84000000, !dbg !9562
  br i1 %10, label %11, label %13, !dbg !9564

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9565
  br label %13, !dbg !9567

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9568
  tail call fastcc void @set_up_plls() #24, !dbg !9569
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9570
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9573
  br label %14, !dbg !9574

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9575
  %16 = icmp eq i32 %15, 8, !dbg !9576
  br i1 %16, label %17, label %14, !dbg !9574, !llvm.loop !9577

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9579
  br i1 %18, label %19, label %21, !dbg !9581

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9582
  br label %21, !dbg !9584

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9585
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9586
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9587
  ret i32 0, !dbg !9588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9589 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9591
  %2 = and i32 %1, 240, !dbg !9591
  ret i32 %2, !dbg !9592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9593 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9594
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9599
  br label %1, !dbg !9600

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9601
  %3 = icmp eq i32 %2, 1, !dbg !9602
  br i1 %3, label %4, label %1, !dbg !9600, !llvm.loop !9603

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9605
  br label %5, !dbg !9608

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9609
  %7 = icmp eq i32 %6, 1, !dbg !9610
  br i1 %7, label %8, label %5, !dbg !9608, !llvm.loop !9611

8:                                                ; preds = %5
  ret void, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9614 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9615
  %2 = icmp eq i32 %1, 8, !dbg !9617
  br i1 %2, label %3, label %4, !dbg !9618

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9619
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9621
  br label %4, !dbg !9622

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9623
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9624
  %6 = and i32 %5, -196609, !dbg !9624
  %7 = or i32 %6, 65536, !dbg !9624
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9624
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9625
  %9 = and i32 %8, -251658241, !dbg !9625
  %10 = or i32 %9, 117440512, !dbg !9625
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9625
  tail call void @config_pll_sysclock() #25, !dbg !9626
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9627
  br label %11, !dbg !9628

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9629
  %13 = icmp eq i32 %12, 1, !dbg !9630
  br i1 %13, label %14, label %11, !dbg !9628, !llvm.loop !9631

14:                                               ; preds = %11
  ret void, !dbg !9633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9634 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9636, metadata !DIExpression()), !dbg !9637
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9638
  %2 = and i32 %1, -241, !dbg !9638
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9642, metadata !DIExpression()), !dbg !9643
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  %3 = and i32 %2, -4, !dbg !9644
  %4 = or i32 %3, %0, !dbg !9644
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9646 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9647
  %2 = and i32 %1, 12, !dbg !9647
  ret i32 %2, !dbg !9648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9649 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9651, metadata !DIExpression()), !dbg !9652
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9653
  %2 = and i32 %1, -7169, !dbg !9653
  %3 = or i32 %2, 4096, !dbg !9653
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9653
  ret void, !dbg !9654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9655 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9657, metadata !DIExpression()), !dbg !9658
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9659
  %2 = and i32 %1, -57345, !dbg !9659
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9659
  ret void, !dbg !9660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9661 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9662
  %2 = icmp eq i32 %1, 1, !dbg !9664
  br i1 %2, label %7, label %3, !dbg !9665

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9666
  br label %4, !dbg !9668

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9669
  %6 = icmp eq i32 %5, 1, !dbg !9670
  br i1 %6, label %7, label %4, !dbg !9668, !llvm.loop !9671

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9673
  br label %8, !dbg !9674

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9675
  %10 = icmp eq i32 %9, 0, !dbg !9676
  br i1 %10, label %11, label %8, !dbg !9674, !llvm.loop !9677

11:                                               ; preds = %8
  ret void, !dbg !9679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = and i32 %1, -16777217, !dbg !9681
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9684
  %2 = or i32 %1, 16777216, !dbg !9684
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9684
  ret void, !dbg !9685
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9686 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9687
  %2 = lshr i32 %1, 25, !dbg !9688
  %3 = and i32 %2, 1, !dbg !9688
  ret i32 %3, !dbg !9689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9690 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9691
  %2 = lshr i32 %1, 1, !dbg !9692
  %3 = and i32 %2, 1, !dbg !9692
  ret i32 %3, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9694 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9695
  %2 = or i32 %1, 1, !dbg !9695
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9698
  %2 = and i32 %1, -262145, !dbg !9698
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9701
  %2 = or i32 %1, 65536, !dbg !9701
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9703 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9704
  %2 = lshr i32 %1, 17, !dbg !9705
  %3 = and i32 %2, 1, !dbg !9705
  ret i32 %3, !dbg !9706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9708
  %2 = or i32 %1, 1, !dbg !9708
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9708
  ret void, !dbg !9709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9710 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9711
  %2 = lshr i32 %1, 1, !dbg !9712
  %3 = and i32 %2, 1, !dbg !9712
  ret i32 %3, !dbg !9713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9714 {
  ret i32 16000000, !dbg !9716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9720 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9721
  ret void, !dbg !9722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9727, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 16, metadata !9728, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 336, metadata !9729, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 65536, metadata !9730, metadata !DIExpression()), !dbg !9731
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9732
  %2 = and i32 %1, -4227072, !dbg !9732
  %3 = or i32 %2, 4215824, !dbg !9732
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9732
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9733
  %5 = and i32 %4, -196609, !dbg !9733
  %6 = or i32 %5, 65536, !dbg !9733
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9735 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9738 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9741, metadata !DIExpression()), !dbg !9743
  %2 = bitcast i32* %1 to i8*, !dbg !9744
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9744
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9742, metadata !DIExpression()), !dbg !9745
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9746
  %4 = or i32 %3, 268435456, !dbg !9746
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9746
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9747
  %6 = and i32 %5, 268435456, !dbg !9747
  store volatile i32 %6, i32* %1, align 4, !dbg !9748
  %7 = load volatile i32, i32* %1, align 4, !dbg !9749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9750
  ret void, !dbg !9750
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9754
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9755
  br i1 %2, label %3, label %4, !dbg !9757

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9758
  br label %4, !dbg !9759

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9754
  ret i32 %5, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9766, metadata !DIExpression()), !dbg !9767
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9768, !srcloc !9770
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9771
  ret i1 %1, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9773 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9774
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9775
  ret void, !dbg !9776
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9779, metadata !DIExpression()), !dbg !9780
  %2 = icmp eq i32 %0, 10, !dbg !9781
  br i1 %2, label %3, label %4, !dbg !9783

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9784
  br label %4, !dbg !9786

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9787
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9788
  ret i32 %0, !dbg !9789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9793, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i8 %0, metadata !9794, metadata !DIExpression()), !dbg !9795
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9796, !srcloc !9798
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9803, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i8 %0, metadata !9804, metadata !DIExpression()), !dbg !9806
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9807
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9805, metadata !DIExpression()), !dbg !9806
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9808
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9808
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #25, !dbg !9809
  ret void, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9813, metadata !DIExpression()), !dbg !9814
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #25, !dbg !9815
  ret i1 %1, !dbg !9816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9817 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9866, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9867, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9868, metadata !DIExpression()), !dbg !9869
  ret void, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9871 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i8 %1, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 %2, metadata !9875, metadata !DIExpression()), !dbg !9878
  %5 = bitcast i32* %4 to i8*, !dbg !9879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9879
  call void @llvm.dbg.value(metadata i32* %4, metadata !9877, metadata !DIExpression(DW_OP_deref)), !dbg !9878
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %6, metadata !9876, metadata !DIExpression()), !dbg !9878
  %7 = icmp eq i32 %6, 0, !dbg !9881
  br i1 %7, label %8, label %31, !dbg !9883

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9876, metadata !DIExpression()), !dbg !9878
  %9 = and i32 %2, 131072, !dbg !9884
  %10 = icmp eq i32 %9, 0, !dbg !9886
  br i1 %10, label %28, label %11, !dbg !9887

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9888
  %13 = icmp eq i32 %12, 0, !dbg !9891
  br i1 %13, label %18, label %14, !dbg !9892

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9893
  %16 = shl nuw i32 1, %15, !dbg !9893
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9895
  br label %25, !dbg !9896

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9897
  %20 = icmp eq i32 %19, 0, !dbg !9899
  %21 = zext i8 %1 to i32, !dbg !9878
  br i1 %20, label %25, label %22, !dbg !9900

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9901
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9903
  br label %25, !dbg !9904

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9905
  %27 = load i32, i32* %4, align 4, !dbg !9906
  call void @llvm.dbg.value(metadata i32 %30, metadata !9877, metadata !DIExpression()), !dbg !9878
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9907
  br label %31, !dbg !9908

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9905
  %30 = load i32, i32* %4, align 4, !dbg !9906
  call void @llvm.dbg.value(metadata i32 %30, metadata !9877, metadata !DIExpression()), !dbg !9878
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9907
  call void @llvm.dbg.value(metadata i32 0, metadata !9876, metadata !DIExpression()), !dbg !9878
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9909
  ret i32 %6, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9914, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata i32* %1, metadata !9915, metadata !DIExpression()), !dbg !9919
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9920
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9920
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9916, metadata !DIExpression()), !dbg !9919
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9921
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9921
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9918, metadata !DIExpression()), !dbg !9919
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9922
  store i32 %9, i32* %1, align 4, !dbg !9923
  ret i32 0, !dbg !9924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9927, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata i32 %1, metadata !9928, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata i32 %2, metadata !9929, metadata !DIExpression()), !dbg !9933
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9934
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9934
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9934
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9930, metadata !DIExpression()), !dbg !9933
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9935
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9935
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9935
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9931, metadata !DIExpression()), !dbg !9933
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %10, metadata !9932, metadata !DIExpression()), !dbg !9933
  %11 = xor i32 %1, -1, !dbg !9937
  %12 = and i32 %10, %11, !dbg !9938
  %13 = and i32 %2, %1, !dbg !9939
  %14 = or i32 %12, %13, !dbg !9940
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9941
  ret i32 0, !dbg !9942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9945, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 %1, metadata !9946, metadata !DIExpression()), !dbg !9949
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9950
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9950
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9950
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9947, metadata !DIExpression()), !dbg !9949
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9951
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9951
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9951
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9948, metadata !DIExpression()), !dbg !9949
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9952
  store volatile i32 %1, i32* %9, align 4, !dbg !9952
  ret i32 0, !dbg !9953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9954 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9956, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata i32 %1, metadata !9957, metadata !DIExpression()), !dbg !9960
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9961
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9961
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9961
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9958, metadata !DIExpression()), !dbg !9960
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9962
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9962
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9959, metadata !DIExpression()), !dbg !9960
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9963
  ret i32 0, !dbg !9964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9967, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %1, metadata !9968, metadata !DIExpression()), !dbg !9971
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9972
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9972
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9972
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9969, metadata !DIExpression()), !dbg !9971
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9973
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9973
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9973
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9970, metadata !DIExpression()), !dbg !9971
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9974
  %10 = load volatile i32, i32* %9, align 4, !dbg !9974
  %11 = xor i32 %10, %1, !dbg !9974
  store volatile i32 %11, i32* %9, align 4, !dbg !9974
  ret i32 0, !dbg !9975
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i8 %1, metadata !9979, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 %2, metadata !9980, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 %3, metadata !9981, metadata !DIExpression()), !dbg !9988
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9989
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9989
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9989
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9982, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i8* undef, metadata !9983, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 0, metadata !9985, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 0, metadata !9986, metadata !DIExpression()), !dbg !9988
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9990

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9991
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9995
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9996
  %12 = load i32, i32* %11, align 4, !dbg !9996
  %13 = icmp eq i32 %10, %12, !dbg !9997
  br i1 %13, label %14, label %29, !dbg !9998

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9999
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10001
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10002
  br label %29, !dbg !10003

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10004
  %17 = load i8*, i8** %16, align 4, !dbg !10004
  call void @llvm.dbg.value(metadata i8* %17, metadata !9983, metadata !DIExpression()), !dbg !9988
  %18 = zext i8 %1 to i32, !dbg !10005
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10007
  %20 = icmp eq i32 %19, 0, !dbg !10008
  br i1 %20, label %21, label %29, !dbg !10009

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10010
  %23 = load i32, i32* %22, align 4, !dbg !10010
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10011
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10012

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9985, metadata !DIExpression()), !dbg !9988
  br label %27, !dbg !10013

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9985, metadata !DIExpression()), !dbg !9988
  br label %27, !dbg !10015

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9985, metadata !DIExpression()), !dbg !9988
  br label %27, !dbg !10016

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9988
  call void @llvm.dbg.value(metadata i32 %28, metadata !9985, metadata !DIExpression()), !dbg !9988
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10017
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10018
  br label %29, !dbg !10018

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9988
  call void @llvm.dbg.value(metadata i32 %30, metadata !9986, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.label(metadata !9987), !dbg !10019
  ret i32 %30, !dbg !10020
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10023, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i1 %2, metadata !10025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10027
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10028
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10028
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10028
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10026, metadata !DIExpression()), !dbg !10027
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10029
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10030
  ret i32 %8, !dbg !10031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10032 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10038, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10039, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i1 %2, metadata !10040, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10041
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10042
  br i1 %4, label %5, label %6, !dbg !10045

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10046
  unreachable, !dbg !10046

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10048
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10048
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10048
  br i1 %9, label %10, label %11, !dbg !10051

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10052
  unreachable, !dbg !10052

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10054
  br i1 %12, label %18, label %13, !dbg !10056

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10057
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10060
  %16 = or i1 %15, %2, !dbg !10061
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10061
  br i1 %2, label %19, label %21, !dbg !10061

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10062

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10063
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10066
  br label %21, !dbg !10067

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10041
  ret i32 %22, !dbg !10068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10069 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10073, metadata !DIExpression()), !dbg !10074
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10075
  %3 = icmp eq %struct._snode* %2, null, !dbg !10075
  ret i1 %3, !dbg !10075
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10080, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10081, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10082, metadata !DIExpression()), !dbg !10084
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10085
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10082, metadata !DIExpression()), !dbg !10084
  %4 = icmp eq %struct._snode* %3, null, !dbg !10087
  br i1 %4, label %15, label %5, !dbg !10085

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10082, metadata !DIExpression()), !dbg !10084
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10089
  br i1 %6, label %9, label %11, !dbg !10092

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10082, metadata !DIExpression()), !dbg !10084
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10089
  br i1 %8, label %9, label %11, !dbg !10092, !llvm.loop !10093

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10094
  br label %15, !dbg !10094

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10082, metadata !DIExpression()), !dbg !10084
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10087
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10083, metadata !DIExpression()), !dbg !10084
  %14 = icmp eq %struct._snode* %13, null, !dbg !10087
  br i1 %14, label %15, label %7, !dbg !10085, !llvm.loop !10093

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10097 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10101, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10102, metadata !DIExpression()), !dbg !10103
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10104
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10104
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10104
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10105
  %5 = icmp eq %struct._snode* %4, null, !dbg !10105
  br i1 %5, label %6, label %8, !dbg !10104

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10107
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10107
  br label %8, !dbg !10107

8:                                                ; preds = %6, %2
  ret void, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10115
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10115
  ret %struct._snode* %3, !dbg !10116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10122, metadata !DIExpression()), !dbg !10123
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10124
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10125
  ret void, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10129, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10130, metadata !DIExpression()), !dbg !10131
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10132
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10133
  ret void, !dbg !10134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10135 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10137, metadata !DIExpression()), !dbg !10138
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10139
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10139
  ret %struct._snode* %3, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10144, metadata !DIExpression()), !dbg !10145
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10146
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10149 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10153, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10154, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10155, metadata !DIExpression()), !dbg !10156
  %4 = icmp eq %struct._snode* %1, null, !dbg !10157
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10159
  br i1 %4, label %6, label %11, !dbg !10160

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10161
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10163
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10163
  br i1 %8, label %9, label %15, !dbg !10161

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10165
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10165
  br label %15, !dbg !10165

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10167
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10169
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10169
  br i1 %13, label %14, label %15, !dbg !10167

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10171
  br label %15, !dbg !10171

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10160
  ret void, !dbg !10160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10177, metadata !DIExpression()), !dbg !10178
  %2 = icmp eq %struct._snode* %0, null, !dbg !10179
  br i1 %2, label %5, label %3, !dbg !10179

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10179
  br label %5, !dbg !10179

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10179
  ret %struct._snode* %6, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10182, metadata !DIExpression()), !dbg !10183
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10184
  ret %struct._snode* %2, !dbg !10184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10187, metadata !DIExpression()), !dbg !10188
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10189
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10189
  ret %struct._snode* %3, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10193, metadata !DIExpression()), !dbg !10196
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10197, !range !10198
  call void @llvm.dbg.value(metadata i32 %2, metadata !10194, metadata !DIExpression()), !dbg !10196
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %3, metadata !10195, metadata !DIExpression()), !dbg !10196
  ret i32 %3, !dbg !10200
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10203, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %1, metadata !10204, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %1, metadata !10205, metadata !DIExpression()), !dbg !10206
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10207
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10207
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10208
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10208
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10208
  %8 = shl nuw i32 1, %0, !dbg !10209
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10210
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10212 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10216, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata i32 %1, metadata !10217, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10218, metadata !DIExpression()), !dbg !10222
  %4 = bitcast i64* %3 to i8*, !dbg !10223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10223
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10220, metadata !DIExpression()), !dbg !10222
  store i64 70368744177732, i64* %3, align 8, !dbg !10224
  call void @llvm.dbg.value(metadata i64* %3, metadata !10220, metadata !DIExpression(DW_OP_deref)), !dbg !10222
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %5, metadata !10221, metadata !DIExpression()), !dbg !10222
  %6 = icmp eq i32 %5, 0, !dbg !10226
  br i1 %6, label %7, label %8, !dbg !10228

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10229
  br label %8, !dbg !10230

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10231
  ret void, !dbg !10231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10232 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10234, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i8* %0, metadata !10235, metadata !DIExpression()), !dbg !10237
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10236, metadata !DIExpression()), !dbg !10237
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10239
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10239
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10240
  ret i32 %5, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10248
  call void @llvm.dbg.value(metadata i32 %3, metadata !10246, metadata !DIExpression()), !dbg !10247
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10255, metadata !DIExpression()), !dbg !10256
  %2 = sdiv i32 %0, 4, !dbg !10257
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10258
  %6 = add nsw i32 %5, 16, !dbg !10259
  %7 = shl i32 15, %6, !dbg !10260
  %8 = or i32 %7, %2, !dbg !10261
  ret i32 %8, !dbg !10262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10267, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()), !dbg !10269
  %3 = and i32 %1, 255, !dbg !10270
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10270
  %5 = load volatile i32, i32* %4, align 4, !dbg !10270
  %6 = lshr i32 %1, 16, !dbg !10270
  %7 = xor i32 %6, -1, !dbg !10270
  %8 = and i32 %5, %7, !dbg !10270
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10275
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10277, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %9, metadata !10274, metadata !DIExpression()) #23, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %9, metadata !10279, metadata !DIExpression()) #23, !dbg !10284
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10286, !range !7473
  %11 = shl i32 %0, %10, !dbg !10270
  %12 = or i32 %11, %8, !dbg !10270
  store volatile i32 %12, i32* %4, align 4, !dbg !10270
  ret void, !dbg !10287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10292, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10293, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 %2, metadata !10294, metadata !DIExpression()), !dbg !10297
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10298
  %5 = icmp eq %struct._snode* %4, null, !dbg !10298
  br i1 %5, label %24, label %6, !dbg !10298

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10300
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10296, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10295, metadata !DIExpression()), !dbg !10297
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10301
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10301
  %12 = load i32, i32* %11, align 4, !dbg !10301
  %13 = and i32 %12, %2, !dbg !10305
  %14 = icmp eq i32 %13, 0, !dbg !10305
  br i1 %14, label %22, label %15, !dbg !10306

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10307
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10307
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10307
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10307
  br i1 %19, label %20, label %21, !dbg !10311

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10312
  unreachable, !dbg !10312

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10314
  br label %22, !dbg !10315

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10295, metadata !DIExpression()), !dbg !10297
  %23 = icmp eq %struct._snode* %8, null, !dbg !10316
  br i1 %23, label %24, label %6, !dbg !10316

24:                                               ; preds = %22, %3
  ret void, !dbg !10317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10320, metadata !DIExpression()), !dbg !10321
  %2 = and i32 %0, 255, !dbg !10322
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10322
  %4 = load volatile i32, i32* %3, align 4, !dbg !10322
  %5 = lshr i32 %0, 16, !dbg !10322
  %6 = and i32 %4, %5, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %5, metadata !10271, metadata !DIExpression()) #23, !dbg !10323
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10325, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %7, metadata !10274, metadata !DIExpression()) #23, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %7, metadata !10279, metadata !DIExpression()) #23, !dbg !10326
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10328, !range !7473
  %9 = lshr i32 %6, %8, !dbg !10329
  ret i32 %9, !dbg !10330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10336, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32 %1, metadata !10337, metadata !DIExpression()), !dbg !10338
  %3 = shl i32 %1, 16, !dbg !10339
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10339
  store volatile i32 %3, i32* %4, align 4, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10341 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10345, metadata !DIExpression()), !dbg !10346
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10347
  %3 = load volatile i32, i32* %2, align 4, !dbg !10347
  ret i32 %3, !dbg !10348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !10352, metadata !DIExpression()), !dbg !10353
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10354
  store volatile i32 %1, i32* %3, align 4, !dbg !10354
  ret void, !dbg !10355
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10360
  %3 = load volatile i32, i32* %2, align 4, !dbg !10360
  ret i32 %3, !dbg !10361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10366, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i32* %1, metadata !10367, metadata !DIExpression()), !dbg !10368
  %3 = and i32 %0, 131072, !dbg !10369
  %4 = icmp eq i32 %3, 0, !dbg !10371
  br i1 %4, label %22, label %5, !dbg !10372

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10373
  %6 = and i32 %0, 2, !dbg !10375
  %7 = icmp eq i32 %6, 0, !dbg !10377
  br i1 %7, label %11, label %8, !dbg !10378

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10379
  %10 = icmp eq i32 %9, 0, !dbg !10379
  br i1 %10, label %33, label %11, !dbg !10382

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10383
  store i32 %12, i32* %1, align 4, !dbg !10383
  %13 = and i32 %0, 16, !dbg !10384
  %14 = icmp eq i32 %13, 0, !dbg !10386
  br i1 %14, label %17, label %15, !dbg !10387

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10388
  br label %31, !dbg !10390

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10391
  %19 = icmp eq i32 %18, 0, !dbg !10393
  br i1 %19, label %33, label %20, !dbg !10394

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10395
  br label %31, !dbg !10397

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10398
  %24 = icmp eq i32 %23, 0, !dbg !10400
  br i1 %24, label %31, label %25, !dbg !10401

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10402
  %27 = icmp eq i32 %26, 0, !dbg !10405
  br i1 %27, label %28, label %31, !dbg !10406

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10407
  br label %33, !dbg !10408

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10368
  ret i32 %34, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10413, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %1, metadata !10414, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %2, metadata !10415, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %3, metadata !10416, metadata !DIExpression()), !dbg !10424
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10425
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10425
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10425
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10417, metadata !DIExpression()), !dbg !10424
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10426
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10426
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10426
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10418, metadata !DIExpression()), !dbg !10424
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %11, metadata !10419, metadata !DIExpression()), !dbg !10424
  %12 = and i32 %2, 48, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %12, metadata !10420, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %2, metadata !10421, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %2, metadata !10422, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10424
  call void @llvm.dbg.value(metadata i32 %2, metadata !10423, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10424
  %13 = lshr i32 %2, 6, !dbg !10429
  %14 = and i32 %13, 1, !dbg !10429
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10430
  %15 = lshr i32 %2, 7, !dbg !10431
  %16 = and i32 %15, 3, !dbg !10431
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10432
  %17 = lshr i32 %2, 9, !dbg !10433
  %18 = and i32 %17, 3, !dbg !10433
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10434
  %19 = icmp eq i32 %12, 32, !dbg !10435
  br i1 %19, label %20, label %24, !dbg !10437

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10438
  br i1 %21, label %22, label %23, !dbg !10441

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10442
  br label %24, !dbg !10444

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10445
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10447
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10448
  ret void, !dbg !10449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10454
  %2 = shl nuw i32 1, %0, !dbg !10455
  call void @llvm.dbg.value(metadata i32 %2, metadata !10453, metadata !DIExpression()), !dbg !10454
  ret i32 %2, !dbg !10456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10461, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i32 %1, metadata !10462, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i32 %2, metadata !10463, metadata !DIExpression()), !dbg !10464
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10465
  %5 = load volatile i32, i32* %4, align 4, !dbg !10465
  %6 = xor i32 %1, -1, !dbg !10465
  %7 = and i32 %5, %6, !dbg !10465
  %8 = mul i32 %2, %1, !dbg !10465
  %9 = or i32 %7, %8, !dbg !10465
  store volatile i32 %9, i32* %4, align 4, !dbg !10465
  ret void, !dbg !10466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10469, metadata !DIExpression()), !dbg !10472
  call void @llvm.dbg.value(metadata i32 %1, metadata !10470, metadata !DIExpression()), !dbg !10472
  call void @llvm.dbg.value(metadata i32 %2, metadata !10471, metadata !DIExpression()), !dbg !10472
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10473
  %5 = load volatile i32, i32* %4, align 4, !dbg !10473
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10474
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10476, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10477
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10479, !range !7473
  %8 = shl nuw nsw i32 %7, 1, !dbg !10473
  %9 = shl i32 3, %8, !dbg !10473
  %10 = xor i32 %9, -1, !dbg !10473
  %11 = and i32 %5, %10, !dbg !10473
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10482
  %12 = shl i32 %2, %8, !dbg !10473
  %13 = or i32 %11, %12, !dbg !10473
  store volatile i32 %13, i32* %4, align 4, !dbg !10473
  ret void, !dbg !10484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10487, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i32 %1, metadata !10488, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i32 %2, metadata !10489, metadata !DIExpression()), !dbg !10490
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10491
  %5 = load volatile i32, i32* %4, align 4, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10492
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10494, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10495
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10497, !range !7473
  %8 = shl nuw nsw i32 %7, 1, !dbg !10491
  %9 = shl i32 3, %8, !dbg !10491
  %10 = xor i32 %9, -1, !dbg !10491
  %11 = and i32 %5, %10, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10500
  %12 = shl i32 %2, %8, !dbg !10491
  %13 = or i32 %11, %12, !dbg !10491
  store volatile i32 %13, i32* %4, align 4, !dbg !10491
  ret void, !dbg !10502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 %1, metadata !10506, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 %2, metadata !10507, metadata !DIExpression()), !dbg !10508
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10509
  %5 = load volatile i32, i32* %4, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10510
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10512, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10513
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10515, !range !7473
  %8 = shl nuw nsw i32 %7, 2, !dbg !10509
  %9 = shl i32 15, %8, !dbg !10509
  %10 = xor i32 %9, -1, !dbg !10509
  %11 = and i32 %5, %10, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10518
  %12 = shl i32 %2, %8, !dbg !10509
  %13 = or i32 %11, %12, !dbg !10509
  store volatile i32 %13, i32* %4, align 4, !dbg !10509
  ret void, !dbg !10520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10521 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10523, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 %1, metadata !10524, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 %2, metadata !10525, metadata !DIExpression()), !dbg !10526
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10527
  %5 = load volatile i32, i32* %4, align 4, !dbg !10527
  %6 = lshr i32 %1, 8, !dbg !10527
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10528
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10530, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %7, metadata !10274, metadata !DIExpression()) #23, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %7, metadata !10279, metadata !DIExpression()) #23, !dbg !10531
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10533, !range !7473
  %9 = shl nuw nsw i32 %8, 2, !dbg !10527
  %10 = shl i32 15, %9, !dbg !10527
  %11 = xor i32 %10, -1, !dbg !10527
  %12 = and i32 %5, %11, !dbg !10527
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %7, metadata !10274, metadata !DIExpression()) #23, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %7, metadata !10279, metadata !DIExpression()) #23, !dbg !10536
  %13 = shl i32 %2, %9, !dbg !10527
  %14 = or i32 %12, %13, !dbg !10527
  store volatile i32 %14, i32* %4, align 4, !dbg !10527
  ret void, !dbg !10538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10539 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10541, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 %1, metadata !10542, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 %2, metadata !10543, metadata !DIExpression()), !dbg !10544
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10545
  %5 = load volatile i32, i32* %4, align 4, !dbg !10545
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10546
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10548, !srcloc !10278
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10549
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10551, !range !7473
  %8 = shl nuw nsw i32 %7, 1, !dbg !10545
  %9 = shl i32 3, %8, !dbg !10545
  %10 = xor i32 %9, -1, !dbg !10545
  %11 = and i32 %5, %10, !dbg !10545
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()) #23, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %6, metadata !10274, metadata !DIExpression()) #23, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %6, metadata !10279, metadata !DIExpression()) #23, !dbg !10554
  %12 = shl i32 %2, %8, !dbg !10545
  %13 = or i32 %11, %12, !dbg !10545
  store volatile i32 %13, i32* %4, align 4, !dbg !10545
  ret void, !dbg !10556
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10559, metadata !DIExpression()), !dbg !10562
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10563
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10563
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10563
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10560, metadata !DIExpression()), !dbg !10562
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10564
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10565
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10566
  br i1 %6, label %7, label %11, !dbg !10568

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %8, metadata !10561, metadata !DIExpression()), !dbg !10562
  %9 = icmp slt i32 %8, 0, !dbg !10570
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10572
  br label %11, !dbg !10572

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10562
  ret i32 %12, !dbg !10573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10574 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10578, metadata !DIExpression()), !dbg !10579
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10580, !srcloc !10582
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10583
  ret i1 %1, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10589, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i8 1, metadata !10590, metadata !DIExpression()), !dbg !10594
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10595
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10595
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10595
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10591, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 0, metadata !10592, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10593, metadata !DIExpression()), !dbg !10594
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10596
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10599
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %7, metadata !10592, metadata !DIExpression()), !dbg !10594
  ret i32 %7, !dbg !10601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10602 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10604, metadata !DIExpression()), !dbg !10605
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10606
  ret i1 %1, !dbg !10607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10608 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10612, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i32 %1, metadata !10613, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i32 %2, metadata !10614, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i32 %3, metadata !10615, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i32 0, metadata !10616, metadata !DIExpression()), !dbg !10620
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10621
  %5 = icmp eq i32 %3, 17, !dbg !10622
  br i1 %5, label %6, label %14, !dbg !10623

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %7, metadata !10617, metadata !DIExpression()), !dbg !10625
  %8 = icmp eq i32 %7, 0, !dbg !10626
  %9 = shl nuw i32 1, %1, !dbg !10628
  br i1 %8, label %12, label %10, !dbg !10629

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10630
  br label %14, !dbg !10632

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10633
  br label %14, !dbg !10636

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10637
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10640, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata i8* %1, metadata !10641, metadata !DIExpression()), !dbg !10644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10645
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10645
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10642, metadata !DIExpression()), !dbg !10644
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10646
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10646
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10648
  %9 = icmp eq i32 %8, 0, !dbg !10648
  br i1 %9, label %12, label %10, !dbg !10649

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10650
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10652
  br label %12, !dbg !10653

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10654
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10656
  %15 = icmp eq i32 %14, 0, !dbg !10656
  br i1 %15, label %19, label %16, !dbg !10657

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10658
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10659
  store i8 %18, i8* %1, align 1, !dbg !10660
  br label %19, !dbg !10661

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10644
  ret i32 %20, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10665, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i8 %1, metadata !10666, metadata !DIExpression()), !dbg !10669
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10670
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10670
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10670
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10667, metadata !DIExpression()), !dbg !10669
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10671

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10672
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10675
  %10 = icmp eq i32 %9, 0, !dbg !10675
  br i1 %10, label %18, label %11, !dbg !10676

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10677, !srcloc !10684
  call void @llvm.dbg.value(metadata i32 undef, metadata !10680, metadata !DIExpression()) #23, !dbg !10685
  call void @llvm.dbg.value(metadata i32 undef, metadata !10681, metadata !DIExpression()) #23, !dbg !10685
  call void @llvm.dbg.value(metadata i32 undef, metadata !10668, metadata !DIExpression()), !dbg !10669
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10686
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10688
  %15 = icmp eq i32 %14, 0, !dbg !10688
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10677
  br i1 %15, label %17, label %19, !dbg !10689

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10680, metadata !DIExpression()) #23, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %16, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i32 undef, metadata !10690, metadata !DIExpression()) #23, !dbg !10693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10695, !srcloc !10696
  br label %18, !dbg !10697

18:                                               ; preds = %17, %7
  br label %7, !dbg !10672, !llvm.loop !10698

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10677
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10700
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %20, metadata !10690, metadata !DIExpression()) #23, !dbg !10702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10704, !srcloc !10696
  ret void, !dbg !10705
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10708, metadata !DIExpression()), !dbg !10711
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10712
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10712
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10712
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10709, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i32 0, metadata !10710, metadata !DIExpression()), !dbg !10711
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10713
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10713
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10715
  %8 = icmp ne i32 %7, 0, !dbg !10715
  %9 = zext i1 %8 to i32, !dbg !10716
  call void @llvm.dbg.value(metadata i32 %9, metadata !10710, metadata !DIExpression()), !dbg !10711
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10717
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10719
  %12 = icmp eq i32 %11, 0, !dbg !10719
  %13 = or i32 %9, 2, !dbg !10720
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %14, metadata !10710, metadata !DIExpression()), !dbg !10711
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10721
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10723
  %17 = icmp eq i32 %16, 0, !dbg !10723
  %18 = or i32 %14, 4, !dbg !10724
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %19, metadata !10710, metadata !DIExpression()), !dbg !10711
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10725
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10727
  %22 = icmp eq i32 %21, 0, !dbg !10727
  %23 = or i32 %19, 8, !dbg !10728
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %24, metadata !10710, metadata !DIExpression()), !dbg !10711
  %25 = and i32 %24, 8, !dbg !10729
  %26 = icmp eq i32 %25, 0, !dbg !10729
  br i1 %26, label %29, label %27, !dbg !10731

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10732
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10734
  br label %29, !dbg !10735

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10736
  %31 = icmp eq i32 %30, 0, !dbg !10736
  br i1 %31, label %34, label %32, !dbg !10738

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10739
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10741
  br label %34, !dbg !10742

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10743
  %36 = icmp eq i32 %35, 0, !dbg !10743
  br i1 %36, label %39, label %37, !dbg !10745

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10746
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10748
  br label %39, !dbg !10749

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10750
  %41 = icmp eq i32 %40, 0, !dbg !10750
  br i1 %41, label %44, label %42, !dbg !10752

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10753
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10755
  br label %44, !dbg !10756

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10757
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10758
  ret i32 %24, !dbg !10759
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10760 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10762, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10763, metadata !DIExpression()), !dbg !10771
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10772
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10772
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10772
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10764, metadata !DIExpression()), !dbg !10771
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10773
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10773
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10773
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10765, metadata !DIExpression()), !dbg !10771
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10774
  %10 = load i8, i8* %9, align 4, !dbg !10774
  %11 = zext i8 %10 to i32, !dbg !10775
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %12, metadata !10767, metadata !DIExpression()), !dbg !10771
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10777
  %14 = load i8, i8* %13, align 1, !dbg !10777
  %15 = zext i8 %14 to i32, !dbg !10778
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %16, metadata !10768, metadata !DIExpression()), !dbg !10771
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10780
  %18 = load i8, i8* %17, align 2, !dbg !10780
  %19 = zext i8 %18 to i32, !dbg !10781
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %20, metadata !10769, metadata !DIExpression()), !dbg !10771
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10783
  %22 = load i8, i8* %21, align 1, !dbg !10783
  %23 = zext i8 %22 to i32, !dbg !10784
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %24, metadata !10770, metadata !DIExpression()), !dbg !10771
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10786

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10788
  br i1 %26, label %69, label %27, !dbg !10790

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10791

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10792
  br i1 %29, label %65, label %30, !dbg !10792

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10794
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10771
  br i1 %31, label %38, label %34, !dbg !10796

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10797
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10797

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10800
  br i1 %37, label %38, label %69, !dbg !10801

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10802
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10803
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10804
  %41 = icmp eq i32 %12, %40, !dbg !10806
  br i1 %41, label %43, label %42, !dbg !10807

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10808
  br label %43, !dbg !10810

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10811
  %45 = icmp eq i32 %16, %44, !dbg !10813
  br i1 %45, label %47, label %46, !dbg !10814

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10815
  br label %47, !dbg !10817

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10818
  %49 = icmp eq i32 %20, %48, !dbg !10820
  br i1 %49, label %51, label %50, !dbg !10821

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10822
  br label %51, !dbg !10824

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10825
  %53 = icmp eq i32 %24, %52, !dbg !10827
  br i1 %53, label %55, label %54, !dbg !10828

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10829
  br label %55, !dbg !10831

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10832
  %57 = load i32, i32* %56, align 4, !dbg !10832
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10834
  %59 = load i32, i32* %58, align 4, !dbg !10834
  %60 = icmp eq i32 %57, %59, !dbg !10835
  br i1 %60, label %63, label %61, !dbg !10836

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10837
  %62 = load i32, i32* %56, align 4, !dbg !10839
  store i32 %62, i32* %58, align 4, !dbg !10840
  br label %63, !dbg !10841

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10842
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10843
  br label %69, !dbg !10844

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10792
  %67 = and i8 %66, 1, !dbg !10792
  %68 = icmp eq i8 %67, 0, !dbg !10792
  br i1 %68, label %30, label %69, !dbg !10792

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10771
  ret i32 %70, !dbg !10845
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10848, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10849, metadata !DIExpression()), !dbg !10851
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10852
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10852
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10850, metadata !DIExpression()), !dbg !10851
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10853
  %7 = load i32, i32* %6, align 4, !dbg !10853
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10854
  store i32 %7, i32* %8, align 4, !dbg !10855
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10856, !range !10857
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10858
  %11 = trunc i32 %10 to i8, !dbg !10858
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10859
  store i8 %11, i8* %12, align 4, !dbg !10860
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10861, !range !10862
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10863
  %15 = trunc i32 %14 to i8, !dbg !10863
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10864
  store i8 %15, i8* %16, align 1, !dbg !10865
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10866
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10867, !range !10857
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10868
  %20 = trunc i32 %19 to i8, !dbg !10868
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10869
  store i8 %20, i8* %21, align 2, !dbg !10870
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10871, !range !10872
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10873
  %24 = trunc i32 %23 to i8, !dbg !10873
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10874
  store i8 %24, i8* %25, align 1, !dbg !10875
  ret i32 0, !dbg !10876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10881, metadata !DIExpression()), !dbg !10883
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10884
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10884
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10884
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10882, metadata !DIExpression()), !dbg !10883
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10885
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10885
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10886
  ret i32 %7, !dbg !10887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10892, metadata !DIExpression()), !dbg !10893
  %2 = icmp eq i32 %0, 1024, !dbg !10894
  %3 = select i1 %2, i32 2, i32 0, !dbg !10894
  %4 = icmp eq i32 %0, 1536, !dbg !10894
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10894
  ret i32 %5, !dbg !10895
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10898, metadata !DIExpression()), !dbg !10900
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10901
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10901
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10899, metadata !DIExpression()), !dbg !10900
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10902
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10902
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10903
  ret i32 %7, !dbg !10904
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10909, metadata !DIExpression()), !dbg !10910
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10911
  %3 = icmp ult i32 %2, 4, !dbg !10911
  br i1 %3, label %4, label %7, !dbg !10911

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10911
  %6 = load i32, i32* %5, align 4, !dbg !10911
  br label %7, !dbg !10911

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10912
  ret i32 %8, !dbg !10914
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10915 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10917, metadata !DIExpression()), !dbg !10919
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10920
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10920
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10920
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10918, metadata !DIExpression()), !dbg !10919
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10921
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10921
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10922
  ret i32 %7, !dbg !10923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10928, metadata !DIExpression()), !dbg !10930
  call void @llvm.dbg.value(metadata i32 %1, metadata !10929, metadata !DIExpression()), !dbg !10930
  %3 = icmp eq i32 %0, 4096, !dbg !10931
  %4 = icmp eq i32 %1, 0, !dbg !10931
  %5 = select i1 %4, i32 4, i32 3, !dbg !10931
  %6 = select i1 %4, i32 3, i32 2, !dbg !10931
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10931
  ret i32 %7, !dbg !10932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10933 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10935, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10938
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10938
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10938
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10936, metadata !DIExpression()), !dbg !10937
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10939
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10939
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10940
  ret i32 %7, !dbg !10941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10946, metadata !DIExpression()), !dbg !10947
  %2 = icmp eq i32 %0, 768, !dbg !10948
  %3 = zext i1 %2 to i32, !dbg !10947
  ret i32 %3, !dbg !10950
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10956, metadata !DIExpression()), !dbg !10957
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10958
  %3 = load volatile i32, i32* %2, align 4, !dbg !10958
  %4 = and i32 %3, 768, !dbg !10958
  ret i32 %4, !dbg !10959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10964
  %3 = load volatile i32, i32* %2, align 4, !dbg !10964
  %4 = and i32 %3, 4096, !dbg !10964
  ret i32 %4, !dbg !10965
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10968, metadata !DIExpression()), !dbg !10969
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10970
  %3 = load volatile i32, i32* %2, align 4, !dbg !10970
  %4 = and i32 %3, 12288, !dbg !10970
  ret i32 %4, !dbg !10971
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10972 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10974, metadata !DIExpression()), !dbg !10975
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10976
  %3 = load volatile i32, i32* %2, align 4, !dbg !10976
  %4 = and i32 %3, 1536, !dbg !10976
  ret i32 %4, !dbg !10977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  %2 = icmp eq i32 %0, 2, !dbg !10984
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10984
  %4 = icmp eq i32 %0, 1, !dbg !10984
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10984
  ret i32 %5, !dbg !10985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10990, metadata !DIExpression()), !dbg !10991
  %2 = icmp ult i32 %0, 3, !dbg !10992
  br i1 %2, label %3, label %6, !dbg !10992

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10992
  %5 = load i32, i32* %4, align 4, !dbg !10992
  br label %6, !dbg !10992

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10993
  ret i32 %7, !dbg !10995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11000, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11002
  %3 = icmp eq i32 %0, 4, !dbg !11003
  %4 = icmp eq i32 %1, 0, !dbg !11003
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11003
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11003
  ret i32 %6, !dbg !11004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11009, metadata !DIExpression()), !dbg !11010
  %2 = icmp eq i32 %0, 1, !dbg !11011
  %3 = select i1 %2, i32 768, i32 0, !dbg !11010
  ret i32 %3, !dbg !11013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11018, metadata !DIExpression()), !dbg !11019
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11020
  %3 = load volatile i32, i32* %2, align 4, !dbg !11020
  %4 = and i32 %3, -8193, !dbg !11020
  store volatile i32 %4, i32* %2, align 4, !dbg !11020
  ret void, !dbg !11021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11026, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 %1, metadata !11027, metadata !DIExpression()), !dbg !11029
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11030
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11030
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11030
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11028, metadata !DIExpression()), !dbg !11029
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11031
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11031
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11032
  ret void, !dbg !11033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11036, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %1, metadata !11037, metadata !DIExpression()), !dbg !11039
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11040
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11040
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11038, metadata !DIExpression()), !dbg !11039
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11041
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11041
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11042
  ret void, !dbg !11043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11046, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i32 %1, metadata !11047, metadata !DIExpression()), !dbg !11049
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11050
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11050
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11050
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11048, metadata !DIExpression()), !dbg !11049
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11051
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11051
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11052
  ret void, !dbg !11053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11056, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 %1, metadata !11057, metadata !DIExpression()), !dbg !11059
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11060
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11060
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11060
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11058, metadata !DIExpression()), !dbg !11059
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11061
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11061
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11062
  ret void, !dbg !11063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11064 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11066, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %1, metadata !11067, metadata !DIExpression()), !dbg !11071
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11072
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11072
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11072
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11068, metadata !DIExpression()), !dbg !11071
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11073
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11073
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11073
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11069, metadata !DIExpression()), !dbg !11071
  %10 = bitcast i32* %3 to i8*, !dbg !11074
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11074
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11075
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11075
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11079
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11079
  %15 = load i8*, i8** %14, align 4, !dbg !11079
  call void @llvm.dbg.value(metadata i32* %3, metadata !11070, metadata !DIExpression(DW_OP_deref)), !dbg !11071
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11080
  %17 = icmp slt i32 %16, 0, !dbg !11081
  br i1 %17, label %18, label %21, !dbg !11082

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11083
  %20 = zext i8 %19 to i32, !dbg !11083
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11083
  br label %31, !dbg !11089

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11090
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11090
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11091
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11092
  %25 = load i32, i32* %3, align 4, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %25, metadata !11070, metadata !DIExpression()), !dbg !11071
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11094
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11095
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11095
  %28 = load volatile i32, i32* %27, align 4, !dbg !11095
  %29 = icmp ugt i32 %28, 16, !dbg !11095
  br i1 %29, label %31, label %30, !dbg !11098

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11099
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.166, i32 0, i32 0)) #25, !dbg !11099
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11099
  unreachable, !dbg !11099

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11101
  ret void, !dbg !11101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11105
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11106
  %3 = load volatile i32, i32* %2, align 4, !dbg !11106
  %4 = or i32 %3, 8192, !dbg !11106
  store volatile i32 %4, i32* %2, align 4, !dbg !11106
  ret void, !dbg !11107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i8* %1, metadata !11111, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32* %2, metadata !11112, metadata !DIExpression()), !dbg !11114
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11115
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11115
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11113, metadata !DIExpression()), !dbg !11114
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11116
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11116
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11118
  br i1 %9, label %12, label %10, !dbg !11119

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11120
  br label %12, !dbg !11121

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11114
  ret i32 %13, !dbg !11122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #4 !dbg !11123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11125, metadata !DIExpression()), !dbg !11126
  %2 = icmp eq i32 %0, 2, !dbg !11127
  %3 = select i1 %2, i8 87, i8 63, !dbg !11127
  %4 = icmp eq i32 %0, 1, !dbg !11127
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11127
  ret i8 %5, !dbg !11128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 0, metadata !11134, metadata !DIExpression()), !dbg !11135
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11136
  %3 = load volatile i32, i32* %2, align 4, !dbg !11136
  %4 = and i32 %3, -32769, !dbg !11136
  store volatile i32 %4, i32* %2, align 4, !dbg !11136
  ret void, !dbg !11137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11142, metadata !DIExpression()), !dbg !11146
  call void @llvm.dbg.value(metadata i32 %1, metadata !11143, metadata !DIExpression()), !dbg !11146
  call void @llvm.dbg.value(metadata i32 0, metadata !11144, metadata !DIExpression()), !dbg !11146
  call void @llvm.dbg.value(metadata i32 %2, metadata !11145, metadata !DIExpression()), !dbg !11146
  %4 = zext i32 %1 to i64, !dbg !11147
  %5 = mul nuw nsw i64 %4, 25, !dbg !11147
  %6 = zext i32 %2 to i64, !dbg !11147
  %7 = shl nuw nsw i64 %6, 2, !dbg !11147
  %8 = udiv i64 %5, %7, !dbg !11147
  %9 = trunc i64 %8 to i32, !dbg !11147
  %10 = udiv i32 %9, 100, !dbg !11147
  %11 = shl nuw nsw i32 %10, 4, !dbg !11147
  %12 = mul i32 %10, -100, !dbg !11147
  %13 = add i32 %12, %9, !dbg !11147
  %14 = shl i32 %13, 4, !dbg !11147
  %15 = add i32 %14, 50, !dbg !11147
  %16 = udiv i32 %15, 100, !dbg !11147
  %17 = and i32 %16, 240, !dbg !11147
  %18 = add nuw nsw i32 %17, %11, !dbg !11147
  %19 = and i32 %16, 15, !dbg !11147
  %20 = and i32 %18, 65520, !dbg !11150
  %21 = or i32 %20, %19, !dbg !11150
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11151
  store volatile i32 %21, i32* %22, align 4, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11154 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11156, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 %1, metadata !11157, metadata !DIExpression()), !dbg !11158
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11159
  %4 = load volatile i32, i32* %3, align 4, !dbg !11159
  %5 = and i32 %4, -769, !dbg !11159
  %6 = or i32 %5, %1, !dbg !11159
  store volatile i32 %6, i32* %3, align 4, !dbg !11159
  ret void, !dbg !11160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11161 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11163, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i32 %1, metadata !11164, metadata !DIExpression()), !dbg !11165
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11166
  %4 = load volatile i32, i32* %3, align 4, !dbg !11166
  %5 = and i32 %4, -4097, !dbg !11166
  %6 = or i32 %5, %1, !dbg !11166
  store volatile i32 %6, i32* %3, align 4, !dbg !11166
  ret void, !dbg !11167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11168 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11170, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.value(metadata i32 %1, metadata !11171, metadata !DIExpression()), !dbg !11172
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11173
  %4 = load volatile i32, i32* %3, align 4, !dbg !11173
  %5 = and i32 %4, -12289, !dbg !11173
  %6 = or i32 %5, %1, !dbg !11173
  store volatile i32 %6, i32* %3, align 4, !dbg !11173
  ret void, !dbg !11174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11175 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11177, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.value(metadata i32 %1, metadata !11178, metadata !DIExpression()), !dbg !11179
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11180
  %4 = load volatile i32, i32* %3, align 4, !dbg !11180
  %5 = and i32 %4, -1537, !dbg !11180
  %6 = or i32 %5, %1, !dbg !11180
  store volatile i32 %6, i32* %3, align 4, !dbg !11180
  ret void, !dbg !11181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11182 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11186
  %3 = load volatile i32, i32* %2, align 4, !dbg !11186
  %4 = lshr i32 %3, 3, !dbg !11187
  %5 = and i32 %4, 1, !dbg !11187
  ret i32 %5, !dbg !11188
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11189 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11191, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11193
  %3 = load volatile i32, i32* %2, align 4, !dbg !11193
  %4 = and i32 %3, 1, !dbg !11193
  ret i32 %4, !dbg !11194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11195 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11197, metadata !DIExpression()), !dbg !11198
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11199
  %3 = load volatile i32, i32* %2, align 4, !dbg !11199
  %4 = lshr i32 %3, 1, !dbg !11200
  %5 = and i32 %4, 1, !dbg !11200
  ret i32 %5, !dbg !11201
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11202 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11204, metadata !DIExpression()), !dbg !11205
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11206
  %3 = load volatile i32, i32* %2, align 4, !dbg !11206
  %4 = lshr i32 %3, 8, !dbg !11207
  %5 = and i32 %4, 1, !dbg !11207
  ret i32 %5, !dbg !11208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11211, metadata !DIExpression()), !dbg !11212
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11213
  store volatile i32 -257, i32* %2, align 4, !dbg !11213
  ret void, !dbg !11214
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11215 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11217, metadata !DIExpression()), !dbg !11219
  %3 = bitcast i32* %2 to i8*, !dbg !11220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11220
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11218, metadata !DIExpression()), !dbg !11221
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11222
  %5 = load volatile i32, i32* %4, align 4, !dbg !11222
  store volatile i32 %5, i32* %2, align 4, !dbg !11223
  %6 = load volatile i32, i32* %2, align 4, !dbg !11224
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11225
  %8 = load volatile i32, i32* %7, align 4, !dbg !11225
  store volatile i32 %8, i32* %2, align 4, !dbg !11226
  %9 = load volatile i32, i32* %2, align 4, !dbg !11227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11228
  ret void, !dbg !11228
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11229 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11231, metadata !DIExpression()), !dbg !11233
  %3 = bitcast i32* %2 to i8*, !dbg !11234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11234
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11232, metadata !DIExpression()), !dbg !11235
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11236
  %5 = load volatile i32, i32* %4, align 4, !dbg !11236
  store volatile i32 %5, i32* %2, align 4, !dbg !11237
  %6 = load volatile i32, i32* %2, align 4, !dbg !11238
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11239
  %8 = load volatile i32, i32* %7, align 4, !dbg !11239
  store volatile i32 %8, i32* %2, align 4, !dbg !11240
  %9 = load volatile i32, i32* %2, align 4, !dbg !11241
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11242
  ret void, !dbg !11242
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11243 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11245, metadata !DIExpression()), !dbg !11247
  %3 = bitcast i32* %2 to i8*, !dbg !11248
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11248
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11246, metadata !DIExpression()), !dbg !11249
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11250
  %5 = load volatile i32, i32* %4, align 4, !dbg !11250
  store volatile i32 %5, i32* %2, align 4, !dbg !11251
  %6 = load volatile i32, i32* %2, align 4, !dbg !11252
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11253
  %8 = load volatile i32, i32* %7, align 4, !dbg !11253
  store volatile i32 %8, i32* %2, align 4, !dbg !11254
  %9 = load volatile i32, i32* %2, align 4, !dbg !11255
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11256
  ret void, !dbg !11256
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11257 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  %3 = bitcast i32* %2 to i8*, !dbg !11262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11262
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11260, metadata !DIExpression()), !dbg !11263
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11264
  %5 = load volatile i32, i32* %4, align 4, !dbg !11264
  store volatile i32 %5, i32* %2, align 4, !dbg !11265
  %6 = load volatile i32, i32* %2, align 4, !dbg !11266
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11267
  %8 = load volatile i32, i32* %7, align 4, !dbg !11267
  store volatile i32 %8, i32* %2, align 4, !dbg !11268
  %9 = load volatile i32, i32* %2, align 4, !dbg !11269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11270
  ret void, !dbg !11270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11271 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11273, metadata !DIExpression()), !dbg !11274
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11275
  %3 = load volatile i32, i32* %2, align 4, !dbg !11275
  %4 = lshr i32 %3, 7, !dbg !11276
  %5 = and i32 %4, 1, !dbg !11276
  ret i32 %5, !dbg !11277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11278 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11282, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i8 %1, metadata !11283, metadata !DIExpression()), !dbg !11284
  %3 = zext i8 %1 to i32, !dbg !11285
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11286
  store volatile i32 %3, i32* %4, align 4, !dbg !11287
  ret void, !dbg !11288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11291, metadata !DIExpression()), !dbg !11292
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11293
  %3 = load volatile i32, i32* %2, align 4, !dbg !11293
  %4 = lshr i32 %3, 5, !dbg !11294
  %5 = and i32 %4, 1, !dbg !11294
  ret i32 %5, !dbg !11295
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11296 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11300, metadata !DIExpression()), !dbg !11301
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11302
  %3 = load volatile i32, i32* %2, align 4, !dbg !11302
  %4 = trunc i32 %3 to i8, !dbg !11303
  ret i8 %4, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11307, metadata !DIExpression()), !dbg !11313
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11314
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11314
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11314
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11308, metadata !DIExpression()), !dbg !11313
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11315
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11315
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11315
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11309, metadata !DIExpression()), !dbg !11313
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11316
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11317
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11317
  %10 = tail call fastcc zeroext i1 @device_is_ready.170(%struct.device* noundef %9) #24, !dbg !11319
  br i1 %10, label %14, label %11, !dbg !11320

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11321
  %13 = zext i8 %12 to i32, !dbg !11321
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.171, i32 0, i32 0), i32 noundef %13) #25, !dbg !11321
  br label %62, !dbg !11327

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11328
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11329
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11329
  %18 = load i8*, i8** %17, align 4, !dbg !11329
  %19 = tail call fastcc i32 @clock_control_on.172(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %19, metadata !11312, metadata !DIExpression()), !dbg !11313
  %20 = icmp eq i32 %19, 0, !dbg !11331
  br i1 %20, label %24, label %21, !dbg !11333

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11334
  %23 = zext i8 %22 to i32, !dbg !11334
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.173, i32 0, i32 0), i32 noundef %23) #25, !dbg !11334
  br label %62, !dbg !11340

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11341
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11341
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %27, metadata !11312, metadata !DIExpression()), !dbg !11313
  %28 = icmp slt i32 %27, 0, !dbg !11343
  br i1 %28, label %62, label %29, !dbg !11345

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11346
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11346
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11347
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11348
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11349
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11350
  %34 = load i32, i32* %33, align 4, !dbg !11350
  %35 = icmp ult i32 %34, 3, !dbg !11352
  br i1 %35, label %39, label %36, !dbg !11352

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11353
  %38 = zext i8 %37 to i32, !dbg !11353
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.174, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11353
  call void @llvm.dbg.value(metadata i32 0, metadata !11310, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i32 0, metadata !11311, metadata !DIExpression()), !dbg !11313
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11352
  %41 = load i32, i32* %40, align 4, !dbg !11352
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.12, i32 0, i32 %34, !dbg !11352
  %43 = load i32, i32* %42, align 4, !dbg !11352
  br label %44, !dbg !11352

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11362
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11362
  call void @llvm.dbg.value(metadata i32 %46, metadata !11311, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i32 %45, metadata !11310, metadata !DIExpression()), !dbg !11313
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11363
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11364
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11365
  %49 = load i8, i8* %48, align 4, !dbg !11365, !range !6636
  %50 = icmp eq i8 %49, 0, !dbg !11365
  br i1 %50, label %52, label %51, !dbg !11367

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11368
  br label %52, !dbg !11370

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11371
  %54 = load i32, i32* %53, align 4, !dbg !11371
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11372
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11373
  %56 = load i8, i8* %55, align 4, !dbg !11373, !range !6636
  %57 = icmp eq i8 %56, 0, !dbg !11373
  br i1 %57, label %60, label %58, !dbg !11375

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11376
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11378
  br label %60, !dbg !11379

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11380
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11381
  br label %62, !dbg !11382

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11313
  ret i32 %63, !dbg !11383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11384 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11388, metadata !DIExpression()), !dbg !11392
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11393
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11393
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11393
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11389, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11390, metadata !DIExpression()), !dbg !11392
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11394
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11395
  ret void, !dbg !11396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.170(%struct.device* noundef %0) unnamed_addr #1 !dbg !11397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11401, metadata !DIExpression()), !dbg !11402
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11403, !srcloc !11405
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.175(%struct.device* noundef %0) #24, !dbg !11406
  ret i1 %2, !dbg !11407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.172(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11410, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.value(metadata i8* %1, metadata !11411, metadata !DIExpression()), !dbg !11413
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11414
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11414
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11414
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11412, metadata !DIExpression()), !dbg !11413
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11415
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11415
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11416
  ret i32 %8, !dbg !11417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11418 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11422, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i8 0, metadata !11423, metadata !DIExpression()), !dbg !11426
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11427
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11425, metadata !DIExpression(DW_OP_deref)), !dbg !11426
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11428
  call void @llvm.dbg.value(metadata i32 %4, metadata !11424, metadata !DIExpression()), !dbg !11426
  %5 = icmp slt i32 %4, 0, !dbg !11429
  br i1 %5, label %9, label %6, !dbg !11431

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11432
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11425, metadata !DIExpression()), !dbg !11426
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11433
  br label %9, !dbg !11434

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11435
  ret i32 %10, !dbg !11435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11436 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11438, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 12, metadata !11439, metadata !DIExpression()), !dbg !11442
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11443

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11444, metadata !DIExpression()) #23, !dbg !11450
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11453, !srcloc !11454
  call void @llvm.dbg.value(metadata i32 %4, metadata !11449, metadata !DIExpression()) #23, !dbg !11450
  %5 = or i32 %4, 12, !dbg !11455
  call void @llvm.dbg.value(metadata i32 %5, metadata !11440, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %5, metadata !11457, metadata !DIExpression()) #23, !dbg !11464
  call void @llvm.dbg.value(metadata i32* %2, metadata !11462, metadata !DIExpression()) #23, !dbg !11464
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11466, !srcloc !11467
  call void @llvm.dbg.value(metadata i32 %6, metadata !11463, metadata !DIExpression()) #23, !dbg !11464
  %7 = icmp eq i32 %6, 0, !dbg !11443
  br i1 %7, label %8, label %3, !dbg !11455, !llvm.loop !11468

8:                                                ; preds = %3
  ret void, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11472, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i32 %1, metadata !11473, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i32 %2, metadata !11474, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i32 0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11477
  %5 = load volatile i32, i32* %4, align 4, !dbg !11477
  %6 = and i32 %5, -5633, !dbg !11477
  %7 = or i32 %2, %1, !dbg !11477
  %8 = or i32 %7, %6, !dbg !11477
  store volatile i32 %8, i32* %4, align 4, !dbg !11477
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11478
  %10 = load volatile i32, i32* %9, align 4, !dbg !11478
  %11 = and i32 %10, -12289, !dbg !11478
  store volatile i32 %11, i32* %9, align 4, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11482, metadata !DIExpression()), !dbg !11483
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11484
  %3 = load volatile i32, i32* %2, align 4, !dbg !11484
  %4 = or i32 %3, 8, !dbg !11484
  store volatile i32 %4, i32* %2, align 4, !dbg !11484
  ret void, !dbg !11485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11486 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11490, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11491, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.value(metadata i32 0, metadata !11492, metadata !DIExpression()), !dbg !11493
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11494
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11494
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11495
  %5 = load i8, i8* %4, align 4, !dbg !11495
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11496
  ret i32 %6, !dbg !11497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.175(%struct.device* noundef %0) unnamed_addr #1 !dbg !11498 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11500, metadata !DIExpression()), !dbg !11501
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11502
  ret i1 %2, !dbg !11503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11506, metadata !DIExpression()), !dbg !11507
  tail call fastcc void @__NVIC_SetPriority.177() #24, !dbg !11508
  store i32 8399, i32* @last_load, align 4, !dbg !11509
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11510
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11511
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11512
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11513
  %3 = or i32 %2, 7, !dbg !11513
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11513
  ret i32 0, !dbg !11514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.177() unnamed_addr #14 !dbg !11515 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11517, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 1, metadata !11518, metadata !DIExpression()), !dbg !11519
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11520
  ret void, !dbg !11523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11524 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11526, metadata !DIExpression()), !dbg !11528
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11529
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11530
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11531
  %5 = add i32 %4, %3, !dbg !11531
  store i32 %5, i32* @cycle_count, align 4, !dbg !11531
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11532
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11533
  %7 = sub i32 %5, %6, !dbg !11536
  %8 = udiv i32 %7, 8400, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %8, metadata !11527, metadata !DIExpression()), !dbg !11528
  %9 = mul nuw i32 %8, 8400, !dbg !11538
  %10 = add i32 %9, %6, !dbg !11539
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11539
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11540
  tail call void @z_arm_int_exit() #25, !dbg !11541
  ret void, !dbg !11542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11543 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %1, metadata !11545, metadata !DIExpression()), !dbg !11549
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %2, metadata !11546, metadata !DIExpression()), !dbg !11549
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11551
  call void @llvm.dbg.value(metadata i32 %3, metadata !11547, metadata !DIExpression()), !dbg !11549
  %4 = and i32 %2, 65536, !dbg !11552
  %5 = icmp ne i32 %4, 0, !dbg !11552
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11554
  %8 = load i32, i32* @last_load, align 4, !dbg !11549
  br i1 %7, label %9, label %13, !dbg !11554

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11555
  %11 = add i32 %10, %8, !dbg !11555
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11555
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11557
  br label %13, !dbg !11558

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11559
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11560
  %16 = add i32 %14, %15, !dbg !11561
  ret i32 %16, !dbg !11562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11567, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.value(metadata i1 %1, metadata !11568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11580
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11581
  br i1 %4, label %5, label %8, !dbg !11581

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11583
  %7 = and i32 %6, -2, !dbg !11583
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11583
  store i32 -16777216, i32* @last_load, align 4, !dbg !11585
  br label %60, !dbg !11586

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %9, metadata !11572, metadata !DIExpression()), !dbg !11580
  br i1 %3, label %18, label %10, !dbg !11588

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11588
  call void @llvm.dbg.value(metadata i32 undef, metadata !11567, metadata !DIExpression()), !dbg !11580
  %12 = icmp slt i32 %11, 1, !dbg !11589
  br i1 %12, label %18, label %13, !dbg !11589

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11589
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11589
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11589
  %17 = add nuw nsw i32 %16, 8399, !dbg !11589
  br label %18, !dbg !11589

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11567, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11590, metadata !DIExpression()) #23, !dbg !11597
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11599, !srcloc !11605
  call void @llvm.dbg.value(metadata i32 undef, metadata !11602, metadata !DIExpression()) #23, !dbg !11606
  call void @llvm.dbg.value(metadata i32 undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11606
  call void @llvm.dbg.value(metadata i32 undef, metadata !11596, metadata !DIExpression()) #23, !dbg !11597
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11607
  br i1 %21, label %23, label %22, !dbg !11610

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11611
  unreachable, !dbg !11611

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11599
  call void @llvm.dbg.value(metadata i32 %24, metadata !11602, metadata !DIExpression()) #23, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %24, metadata !11596, metadata !DIExpression()) #23, !dbg !11597
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %24, metadata !11573, metadata !DIExpression()), !dbg !11580
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %25, metadata !11578, metadata !DIExpression()), !dbg !11580
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %26, metadata !11570, metadata !DIExpression()), !dbg !11580
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11616
  %28 = add i32 %27, %25, !dbg !11616
  store i32 %28, i32* @cycle_count, align 4, !dbg !11616
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11617
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11618
  %30 = sub i32 %28, %29, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %30, metadata !11579, metadata !DIExpression()), !dbg !11580
  %31 = icmp slt i32 %30, 0, !dbg !11620
  br i1 %31, label %41, label %32, !dbg !11622

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11569, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.value(metadata i32 undef, metadata !11569, metadata !DIExpression()), !dbg !11580
  %33 = add nuw i32 %19, %30, !dbg !11623
  %34 = urem i32 %33, 8400, !dbg !11625
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11569, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11580
  %35 = sub nuw nsw i32 %19, %34, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %35, metadata !11569, metadata !DIExpression()), !dbg !11580
  %36 = icmp ugt i32 %35, 1024, !dbg !11627
  br i1 %36, label %37, label %39, !dbg !11627

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11569, metadata !DIExpression()), !dbg !11580
  %38 = icmp ugt i32 %35, 16766400, !dbg !11628
  br i1 %38, label %41, label %39, !dbg !11630

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11631
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11632
  call void @llvm.dbg.value(metadata i32 %43, metadata !11571, metadata !DIExpression()), !dbg !11580
  %44 = add nsw i32 %42, -1, !dbg !11633
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11634
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11635
  %45 = icmp ult i32 %26, %43, !dbg !11636
  br i1 %45, label %46, label %51, !dbg !11638

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11639
  %48 = add i32 %26, %9, !dbg !11641
  %49 = sub i32 %48, %43, !dbg !11642
  %50 = add i32 %49, %47, !dbg !11639
  br label %55, !dbg !11643

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11644
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11646
  %54 = add i32 %52, %53, !dbg !11646
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11647
  store i32 %56, i32* @cycle_count, align 4, !dbg !11647
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11653, metadata !DIExpression()) #23, !dbg !11654
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11656
  br i1 %57, label %59, label %58, !dbg !11659

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11660
  unreachable, !dbg !11660

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11648, metadata !DIExpression()) #23, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %24, metadata !11662, metadata !DIExpression()) #23, !dbg !11665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11667, !srcloc !11668
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11670 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11590, metadata !DIExpression()) #23, !dbg !11674
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11676, !srcloc !11605
  call void @llvm.dbg.value(metadata i32 undef, metadata !11602, metadata !DIExpression()) #23, !dbg !11678
  call void @llvm.dbg.value(metadata i32 undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11678
  call void @llvm.dbg.value(metadata i32 undef, metadata !11596, metadata !DIExpression()) #23, !dbg !11674
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11679
  br i1 %2, label %4, label %3, !dbg !11680

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11681
  unreachable, !dbg !11681

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11602, metadata !DIExpression()) #23, !dbg !11678
  call void @llvm.dbg.value(metadata i32 undef, metadata !11596, metadata !DIExpression()) #23, !dbg !11674
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11682
  call void @llvm.dbg.value(metadata i32 undef, metadata !11672, metadata !DIExpression()), !dbg !11683
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11684
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11685
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11686
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11673, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11683
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11653, metadata !DIExpression()) #23, !dbg !11687
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11689
  br i1 %8, label %10, label %9, !dbg !11690

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11691
  unreachable, !dbg !11691

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11692
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11673, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11683
  %12 = sub i32 %11, %7, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %12, metadata !11673, metadata !DIExpression()), !dbg !11683
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11676
  call void @llvm.dbg.value(metadata i32 %13, metadata !11602, metadata !DIExpression()) #23, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %13, metadata !11596, metadata !DIExpression()) #23, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %13, metadata !11672, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11662, metadata !DIExpression()) #23, !dbg !11694
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11696, !srcloc !11668
  %14 = udiv i32 %12, 8400, !dbg !11697
  ret i32 %14, !dbg !11698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11699 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11590, metadata !DIExpression()) #23, !dbg !11703
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11705, !srcloc !11605
  call void @llvm.dbg.value(metadata i32 undef, metadata !11602, metadata !DIExpression()) #23, !dbg !11707
  call void @llvm.dbg.value(metadata i32 undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11707
  call void @llvm.dbg.value(metadata i32 undef, metadata !11596, metadata !DIExpression()) #23, !dbg !11703
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11708
  br i1 %2, label %4, label %3, !dbg !11709

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11710
  unreachable, !dbg !11710

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11602, metadata !DIExpression()) #23, !dbg !11707
  call void @llvm.dbg.value(metadata i32 undef, metadata !11596, metadata !DIExpression()) #23, !dbg !11703
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11711
  call void @llvm.dbg.value(metadata i32 undef, metadata !11701, metadata !DIExpression()), !dbg !11712
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11713
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11714
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11702, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11712
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11653, metadata !DIExpression()) #23, !dbg !11715
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11717
  br i1 %7, label %9, label %8, !dbg !11718

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11719
  unreachable, !dbg !11719

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %10, metadata !11702, metadata !DIExpression()), !dbg !11712
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11705
  call void @llvm.dbg.value(metadata i32 %11, metadata !11602, metadata !DIExpression()) #23, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %11, metadata !11596, metadata !DIExpression()) #23, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %11, metadata !11701, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11715
  call void @llvm.dbg.value(metadata i32 undef, metadata !11662, metadata !DIExpression()) #23, !dbg !11721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11723, !srcloc !11668
  ret i32 %10, !dbg !11724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11725 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11726
  %2 = icmp eq i32 %1, -16777216, !dbg !11728
  br i1 %2, label %3, label %6, !dbg !11729

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11730
  %5 = or i32 %4, 1, !dbg !11730
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11730
  br label %6, !dbg !11732

6:                                                ; preds = %3, %0
  ret void, !dbg !11733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11734 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11735
  %2 = and i32 %1, -2, !dbg !11735
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11735
  ret void, !dbg !11736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11737 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11763, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata i8 %1, metadata !11764, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11765, metadata !DIExpression()), !dbg !11766
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11767
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11767
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11766
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11768
  %8 = load i8, i8* %6, align 4, !dbg !11769
  %9 = zext i8 %8 to i32, !dbg !11770
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11770
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11771
  br i1 %11, label %18, label %24, !dbg !11772

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11766
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11768
  %14 = load i8, i8* %6, align 4, !dbg !11769
  %15 = zext i8 %14 to i32, !dbg !11770
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11770
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11771
  br i1 %17, label %18, label %24, !dbg !11772, !llvm.loop !11773

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11775
  %21 = load i8, i8* %20, align 1, !dbg !11775
  %22 = icmp eq i8 %21, %1, !dbg !11778
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11779
  br i1 %22, label %24, label %12, !dbg !11780

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11766
  ret i32 %25, !dbg !11781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11782 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11793, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i8 %1, metadata !11794, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i32 %2, metadata !11795, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i32 0, metadata !11798, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i32 0, metadata !11799, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i8 0, metadata !11800, metadata !DIExpression()), !dbg !11810
  %4 = icmp eq i8 %1, 0, !dbg !11811
  br i1 %4, label %35, label %5, !dbg !11812

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11811
  br label %9, !dbg !11812

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11800, metadata !DIExpression()), !dbg !11810
  call void @llvm.dbg.value(metadata i32 %29, metadata !11798, metadata !DIExpression()), !dbg !11809
  %8 = icmp eq i32 %34, %6, !dbg !11811
  br i1 %8, label %35, label %9, !dbg !11812, !llvm.loop !11813

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11800, metadata !DIExpression()), !dbg !11810
  call void @llvm.dbg.value(metadata i32 %11, metadata !11798, metadata !DIExpression()), !dbg !11809
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11815
  %13 = load i32, i32* %12, align 4, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %13, metadata !11797, metadata !DIExpression()), !dbg !11809
  %14 = and i32 %13, 31, !dbg !11816
  %15 = icmp ult i32 %14, 16, !dbg !11817
  br i1 %15, label %16, label %20, !dbg !11818

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11819
  %18 = load i32, i32* %17, align 4, !dbg !11819
  %19 = or i32 %18, 32, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %19, metadata !11798, metadata !DIExpression()), !dbg !11809
  br label %28, !dbg !11822

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11823

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11824
  %23 = load i32, i32* %22, align 4, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %23, metadata !11802, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11825
  %24 = lshr i32 %23, 7, !dbg !11826
  %25 = and i32 %24, 16, !dbg !11826
  %26 = or i32 %25, %23, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %26, metadata !11798, metadata !DIExpression()), !dbg !11809
  br label %28, !dbg !11827

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11809
  call void @llvm.dbg.value(metadata i32 %29, metadata !11798, metadata !DIExpression()), !dbg !11809
  %30 = lshr i32 %13, 5, !dbg !11828
  %31 = and i32 %30, 255, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %31, metadata !11796, metadata !DIExpression()), !dbg !11809
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %32, metadata !11799, metadata !DIExpression()), !dbg !11809
  %33 = icmp slt i32 %32, 0, !dbg !11830
  %34 = add nuw nsw i32 %10, 1, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %34, metadata !11800, metadata !DIExpression()), !dbg !11810
  br i1 %33, label %35, label %7, !dbg !11833

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11839, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 %1, metadata !11840, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 %2, metadata !11841, metadata !DIExpression()), !dbg !11843
  %4 = icmp ugt i32 %0, 175, !dbg !11844
  br i1 %4, label %16, label %5, !dbg !11846

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11847
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11848
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11848
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11842, metadata !DIExpression()), !dbg !11843
  %9 = add nsw i32 %6, -8, !dbg !11849
  %10 = icmp ult i32 %9, 3, !dbg !11849
  br i1 %10, label %16, label %11, !dbg !11851

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %8) #24, !dbg !11852
  br i1 %12, label %13, label %16, !dbg !11853

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11854
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11855
  br label %16, !dbg !11856

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11843
  ret i32 %17, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11862, metadata !DIExpression()), !dbg !11863
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11864, !srcloc !11866
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.191(%struct.device* noundef %0) #24, !dbg !11867
  ret i1 %2, !dbg !11868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.191(%struct.device* noundef %0) unnamed_addr #1 !dbg !11869 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11871, metadata !DIExpression()), !dbg !11872
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11873
  ret i1 %2, !dbg !11874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11875 {
  ret void, !dbg !11876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11877 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11879, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 0, metadata !11880, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 2, metadata !11881, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 0, metadata !11882, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 2, metadata !11883, metadata !DIExpression()), !dbg !11884
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11885
  %2 = and i32 %1, 12, !dbg !11886
  call void @llvm.dbg.value(metadata i32 %2, metadata !11879, metadata !DIExpression()), !dbg !11884
  %3 = icmp eq i32 %2, 8, !dbg !11887
  br i1 %3, label %4, label %18, !dbg !11887

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %5, metadata !11882, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11884
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11890
  %7 = and i32 %6, 63, !dbg !11891
  call void @llvm.dbg.value(metadata i32 %7, metadata !11883, metadata !DIExpression()), !dbg !11884
  %8 = udiv i32 16000000, %7, !dbg !11892
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11892
  %10 = lshr i32 %9, 6, !dbg !11892
  %11 = and i32 %10, 511, !dbg !11892
  %12 = mul i32 %11, %8, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %12, metadata !11880, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %12, metadata !11880, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %12, metadata !11880, metadata !DIExpression()), !dbg !11884
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11894
  %14 = lshr i32 %13, 15, !dbg !11895
  %15 = and i32 %14, 6, !dbg !11895
  %16 = add nuw nsw i32 %15, 2, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %16, metadata !11881, metadata !DIExpression()), !dbg !11884
  %17 = udiv i32 %12, %16, !dbg !11896
  br label %18, !dbg !11897

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11898
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11899
  %21 = lshr i32 %20, 4, !dbg !11900
  %22 = and i32 %21, 15, !dbg !11900
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11901
  %24 = load i8, i8* %23, align 1, !dbg !11901
  %25 = zext i8 %24 to i32, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %25, metadata !11879, metadata !DIExpression()), !dbg !11884
  %26 = lshr i32 %19, %25, !dbg !11902
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11902
  ret void, !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11904 {
  ret i32 0, !dbg !11909
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11910 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11936, metadata !DIExpression()), !dbg !11947
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11948
  br i1 %3, label %311, label %4, !dbg !11950

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11951
  %6 = load i32, i32* %5, align 4, !dbg !11951
  %7 = and i32 %6, 1, !dbg !11953
  %8 = icmp eq i32 %7, 0, !dbg !11954
  br i1 %8, label %66, label %9, !dbg !11955

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11956
  %11 = and i32 %10, 12, !dbg !11956
  %12 = icmp eq i32 %11, 4, !dbg !11959
  br i1 %12, label %21, label %13, !dbg !11960

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11961
  %15 = and i32 %14, 12, !dbg !11961
  %16 = icmp eq i32 %15, 8, !dbg !11962
  br i1 %16, label %17, label %29, !dbg !11963

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11964
  %19 = and i32 %18, 4194304, !dbg !11965
  %20 = icmp eq i32 %19, 0, !dbg !11966
  br i1 %20, label %29, label %21, !dbg !11967

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11968
  %23 = and i32 %22, 131072, !dbg !11968
  %24 = icmp eq i32 %23, 0, !dbg !11968
  br i1 %24, label %66, label %25, !dbg !11971

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11972
  %27 = load i32, i32* %26, align 4, !dbg !11972
  %28 = icmp eq i32 %27, 0, !dbg !11973
  br i1 %28, label %311, label %66, !dbg !11974

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11975
  %31 = load i32, i32* %30, align 4, !dbg !11975
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11979

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %34 = or i32 %33, 65536, !dbg !11980
  br label %45, !dbg !11980

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %37 = or i32 %36, 262144, !dbg !11982
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %39 = or i32 %38, 65536, !dbg !11982
  br label %45, !dbg !11982

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11985
  %42 = and i32 %41, -65537, !dbg !11985
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11985
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11985
  %44 = and i32 %43, -262145, !dbg !11985
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11987
  %47 = load i32, i32* %30, align 4, !dbg !11988
  %48 = icmp eq i32 %47, 0, !dbg !11990
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %49, metadata !11937, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 %49, metadata !11937, metadata !DIExpression()), !dbg !11947
  br i1 %48, label %58, label %50, !dbg !11992

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11993
  %52 = and i32 %51, 131072, !dbg !11995
  %53 = icmp eq i32 %52, 0, !dbg !11995
  br i1 %53, label %54, label %66, !dbg !11996

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11997
  %56 = sub i32 %55, %49, !dbg !12000
  %57 = icmp ugt i32 %56, 100, !dbg !12001
  br i1 %57, label %311, label %50, !dbg !12002, !llvm.loop !12003

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12005
  %60 = and i32 %59, 131072, !dbg !12005
  %61 = icmp eq i32 %60, 0, !dbg !12005
  br i1 %61, label %66, label %62, !dbg !12007

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12008
  %64 = sub i32 %63, %49, !dbg !12011
  %65 = icmp ugt i32 %64, 100, !dbg !12012
  br i1 %65, label %311, label %58, !dbg !12013, !llvm.loop !12014

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12016
  %68 = and i32 %67, 2, !dbg !12018
  %69 = icmp eq i32 %68, 0, !dbg !12019
  br i1 %69, label %121, label %70, !dbg !12020

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12021
  %72 = and i32 %71, 12, !dbg !12021
  %73 = icmp eq i32 %72, 0, !dbg !12024
  br i1 %73, label %82, label %74, !dbg !12025

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12026
  %76 = and i32 %75, 12, !dbg !12026
  %77 = icmp eq i32 %76, 8, !dbg !12027
  br i1 %77, label %78, label %90, !dbg !12028

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12029
  %80 = and i32 %79, 4194304, !dbg !12030
  %81 = icmp eq i32 %80, 0, !dbg !12031
  br i1 %81, label %82, label %90, !dbg !12032

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12033
  %84 = and i32 %83, 2, !dbg !12033
  %85 = icmp eq i32 %84, 0, !dbg !12033
  br i1 %85, label %114, label %86, !dbg !12036

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12037
  %88 = load i32, i32* %87, align 4, !dbg !12037
  %89 = icmp eq i32 %88, 1, !dbg !12038
  br i1 %89, label %114, label %311, !dbg !12039

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12040
  %92 = load i32, i32* %91, align 4, !dbg !12040
  %93 = icmp eq i32 %92, 0, !dbg !12043
  br i1 %93, label %104, label %94, !dbg !12044

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12045
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %95, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %96, !dbg !12048

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12049
  %98 = and i32 %97, 2, !dbg !12050
  %99 = icmp eq i32 %98, 0, !dbg !12050
  br i1 %99, label %100, label %114, !dbg !12048

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12051
  %102 = sub i32 %101, %95, !dbg !12054
  %103 = icmp ugt i32 %102, 2, !dbg !12055
  br i1 %103, label %311, label %96, !dbg !12056, !llvm.loop !12057

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12059
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %105, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %106, !dbg !12062

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12063
  %108 = and i32 %107, 2, !dbg !12063
  %109 = icmp eq i32 %108, 0, !dbg !12063
  br i1 %109, label %121, label %110, !dbg !12062

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12064
  %112 = sub i32 %111, %105, !dbg !12067
  %113 = icmp ugt i32 %112, 2, !dbg !12068
  br i1 %113, label %311, label %106, !dbg !12069, !llvm.loop !12070

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12072
  %116 = and i32 %115, -249, !dbg !12072
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12072
  %118 = load i32, i32* %117, align 4, !dbg !12072
  %119 = shl i32 %118, 3, !dbg !12072
  %120 = or i32 %119, %116, !dbg !12072
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12072
  br label %121, !dbg !12073

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12073
  %123 = and i32 %122, 8, !dbg !12075
  %124 = icmp eq i32 %123, 0, !dbg !12076
  br i1 %124, label %149, label %125, !dbg !12077

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12078
  %127 = load i32, i32* %126, align 4, !dbg !12078
  %128 = icmp eq i32 %127, 0, !dbg !12081
  br i1 %128, label %139, label %129, !dbg !12082

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12083
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %130, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %131, !dbg !12086

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12087
  %133 = and i32 %132, 2, !dbg !12088
  %134 = icmp eq i32 %133, 0, !dbg !12088
  br i1 %134, label %135, label %149, !dbg !12086

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12089
  %137 = sub i32 %136, %130, !dbg !12092
  %138 = icmp ugt i32 %137, 2, !dbg !12093
  br i1 %138, label %311, label %131, !dbg !12094, !llvm.loop !12095

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12097
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12099
  call void @llvm.dbg.value(metadata i32 %140, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %141, !dbg !12100

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12101
  %143 = and i32 %142, 2, !dbg !12101
  %144 = icmp eq i32 %143, 0, !dbg !12101
  br i1 %144, label %149, label %145, !dbg !12100

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12102
  %147 = sub i32 %146, %140, !dbg !12105
  %148 = icmp ugt i32 %147, 2, !dbg !12106
  br i1 %148, label %311, label %141, !dbg !12107, !llvm.loop !12108

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12110
  %151 = and i32 %150, 4, !dbg !12111
  %152 = icmp eq i32 %151, 0, !dbg !12112
  br i1 %152, label %221, label %153, !dbg !12113

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11939, metadata !DIExpression()), !dbg !12114
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12115
  %155 = and i32 %154, 268435456, !dbg !12115
  %156 = icmp eq i32 %155, 0, !dbg !12115
  br i1 %156, label %157, label %164, !dbg !12116

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12117
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12117
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11943, metadata !DIExpression()), !dbg !12117
  store volatile i32 0, i32* %2, align 4, !dbg !12117
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12117
  %160 = or i32 %159, 268435456, !dbg !12117
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12117
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12117
  %162 = and i32 %161, 268435456, !dbg !12117
  store volatile i32 %162, i32* %2, align 4, !dbg !12117
  %163 = load volatile i32, i32* %2, align 4, !dbg !12117
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12118
  call void @llvm.dbg.value(metadata i32 1, metadata !11939, metadata !DIExpression()), !dbg !12114
  br label %164, !dbg !12119

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11939, metadata !DIExpression()), !dbg !12114
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12120
  %166 = and i32 %165, 256, !dbg !12120
  %167 = icmp eq i32 %166, 0, !dbg !12120
  br i1 %167, label %168, label %180, !dbg !12122

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12123
  %170 = or i32 %169, 256, !dbg !12123
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12123
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %171, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %172, !dbg !12126

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12127
  %174 = and i32 %173, 256, !dbg !12127
  %175 = icmp eq i32 %174, 0, !dbg !12127
  br i1 %175, label %176, label %180, !dbg !12126

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12128
  %178 = sub i32 %177, %171, !dbg !12131
  %179 = icmp ugt i32 %178, 2, !dbg !12132
  br i1 %179, label %311, label %172, !dbg !12133, !llvm.loop !12134

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12136
  %182 = load i32, i32* %181, align 4, !dbg !12136
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12139

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12140
  %185 = or i32 %184, 1, !dbg !12140
  br label %196, !dbg !12140

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %188 = or i32 %187, 4, !dbg !12142
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %190 = or i32 %189, 1, !dbg !12142
  br label %196, !dbg !12142

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12145
  %193 = and i32 %192, -2, !dbg !12145
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12145
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12145
  %195 = and i32 %194, -5, !dbg !12145
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12147
  %198 = load i32, i32* %181, align 4, !dbg !12148
  %199 = icmp eq i32 %198, 0, !dbg !12150
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %200, metadata !11937, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 %200, metadata !11937, metadata !DIExpression()), !dbg !11947
  br i1 %199, label %209, label %201, !dbg !12152

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12153
  %203 = and i32 %202, 2, !dbg !12155
  %204 = icmp eq i32 %203, 0, !dbg !12155
  br i1 %204, label %205, label %217, !dbg !12156

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12157
  %207 = sub i32 %206, %200, !dbg !12160
  %208 = icmp ugt i32 %207, 5000, !dbg !12161
  br i1 %208, label %311, label %201, !dbg !12162, !llvm.loop !12163

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12165
  %211 = and i32 %210, 2, !dbg !12165
  %212 = icmp eq i32 %211, 0, !dbg !12165
  br i1 %212, label %217, label %213, !dbg !12167

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12168
  %215 = sub i32 %214, %200, !dbg !12171
  %216 = icmp ugt i32 %215, 5000, !dbg !12172
  br i1 %216, label %311, label %209, !dbg !12173, !llvm.loop !12174

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12176

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12177
  %220 = and i32 %219, -268435457, !dbg !12177
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12177
  br label %221, !dbg !12180

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12181
  %223 = load i32, i32* %222, align 4, !dbg !12181
  %224 = icmp eq i32 %223, 0, !dbg !12183
  br i1 %224, label %310, label %225, !dbg !12184

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12185
  %227 = and i32 %226, 12, !dbg !12185
  %228 = icmp eq i32 %227, 8, !dbg !12188
  br i1 %228, label %277, label %229, !dbg !12189

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12190
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12193
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12193
  call void @llvm.dbg.value(metadata i32 %231, metadata !11937, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 %231, metadata !11937, metadata !DIExpression()), !dbg !11947
  br i1 %230, label %232, label %269, !dbg !12194

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12195
  %234 = and i32 %233, 33554432, !dbg !12195
  %235 = icmp eq i32 %234, 0, !dbg !12195
  br i1 %235, label %240, label %236, !dbg !12197

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12198
  %238 = sub i32 %237, %231, !dbg !12201
  %239 = icmp ugt i32 %238, 2, !dbg !12202
  br i1 %239, label %311, label %232, !dbg !12203, !llvm.loop !12204

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12206
  %242 = load i32, i32* %241, align 4, !dbg !12206
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12206
  %244 = load i32, i32* %243, align 4, !dbg !12206
  %245 = or i32 %244, %242, !dbg !12206
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12206
  %247 = load i32, i32* %246, align 4, !dbg !12206
  %248 = shl i32 %247, 6, !dbg !12206
  %249 = or i32 %245, %248, !dbg !12206
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12206
  %251 = load i32, i32* %250, align 4, !dbg !12206
  %252 = shl i32 %251, 15, !dbg !12206
  %253 = add i32 %252, -65536, !dbg !12206
  %254 = and i32 %253, -65536, !dbg !12206
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12206
  %256 = load i32, i32* %255, align 4, !dbg !12206
  %257 = shl i32 %256, 24, !dbg !12206
  %258 = or i32 %249, %257, !dbg !12206
  %259 = or i32 %258, %254, !dbg !12206
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12206
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12207
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %260, metadata !11937, metadata !DIExpression()), !dbg !11947
  br label %261, !dbg !12209

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12210
  %263 = and i32 %262, 33554432, !dbg !12211
  %264 = icmp eq i32 %263, 0, !dbg !12211
  br i1 %264, label %265, label %310, !dbg !12209

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12212
  %267 = sub i32 %266, %260, !dbg !12215
  %268 = icmp ugt i32 %267, 2, !dbg !12216
  br i1 %268, label %311, label %261, !dbg !12217, !llvm.loop !12218

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12220
  %271 = and i32 %270, 33554432, !dbg !12220
  %272 = icmp eq i32 %271, 0, !dbg !12220
  br i1 %272, label %310, label %273, !dbg !12222

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12223
  %275 = sub i32 %274, %231, !dbg !12226
  %276 = icmp ugt i32 %275, 2, !dbg !12227
  br i1 %276, label %311, label %269, !dbg !12228, !llvm.loop !12229

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12231
  br i1 %278, label %311, label %279, !dbg !12234

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %280, metadata !11938, metadata !DIExpression()), !dbg !11947
  %281 = and i32 %280, 4194304, !dbg !12237
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12239
  %283 = load i32, i32* %282, align 4, !dbg !12239
  %284 = icmp eq i32 %281, %283, !dbg !12240
  br i1 %284, label %285, label %311, !dbg !12241

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12242
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12243
  %288 = load i32, i32* %287, align 4, !dbg !12243
  %289 = icmp eq i32 %286, %288, !dbg !12244
  br i1 %289, label %290, label %311, !dbg !12245

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12246
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12247
  %293 = load i32, i32* %292, align 4, !dbg !12247
  %294 = shl i32 %293, 6, !dbg !12248
  %295 = icmp eq i32 %291, %294, !dbg !12249
  br i1 %295, label %296, label %311, !dbg !12250

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12251
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12252
  %299 = load i32, i32* %298, align 4, !dbg !12252
  %300 = shl i32 %299, 15, !dbg !12253
  %301 = add i32 %300, -65536, !dbg !12253
  %302 = and i32 %301, -65536, !dbg !12253
  %303 = icmp eq i32 %297, %302, !dbg !12254
  br i1 %303, label %304, label %311, !dbg !12255

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12256
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12257
  %307 = load i32, i32* %306, align 4, !dbg !12257
  %308 = shl i32 %307, 24, !dbg !12258
  %309 = icmp eq i32 %305, %308, !dbg !12259
  br i1 %309, label %310, label %311, !dbg !12260

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12261

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11947
  ret i32 %312, !dbg !12262
}

; Function Attrs: optsize
declare !dbg !12263 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12265 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12278, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata i32 %1, metadata !12279, metadata !DIExpression()), !dbg !12281
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12282
  br i1 %3, label %115, label %4, !dbg !12284

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12285
  %6 = and i32 %5, 7, !dbg !12285
  %7 = icmp ult i32 %6, %1, !dbg !12287
  br i1 %7, label %8, label %13, !dbg !12288

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12289
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12289
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12291
  %11 = and i32 %10, 7, !dbg !12291
  %12 = icmp eq i32 %11, %1, !dbg !12293
  br i1 %12, label %13, label %115, !dbg !12294

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12295
  %15 = load i32, i32* %14, align 4, !dbg !12295
  %16 = and i32 %15, 2, !dbg !12297
  %17 = icmp eq i32 %16, 0, !dbg !12298
  br i1 %17, label %39, label %18, !dbg !12299

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12300
  %20 = icmp eq i32 %19, 0, !dbg !12303
  br i1 %20, label %25, label %21, !dbg !12304

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12305
  %23 = or i32 %22, 7168, !dbg !12305
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12305
  %24 = load i32, i32* %14, align 4, !dbg !12307
  br label %25, !dbg !12309

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12307
  %27 = and i32 %26, 8, !dbg !12310
  %28 = icmp eq i32 %27, 0, !dbg !12311
  br i1 %28, label %32, label %29, !dbg !12312

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12313
  %31 = or i32 %30, 57344, !dbg !12313
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12313
  br label %32, !dbg !12315

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12316
  %34 = and i32 %33, -241, !dbg !12316
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12316
  %36 = load i32, i32* %35, align 4, !dbg !12316
  %37 = or i32 %34, %36, !dbg !12316
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12316
  %38 = load i32, i32* %14, align 4, !dbg !12317
  br label %39, !dbg !12319

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12317
  %41 = and i32 %40, 1, !dbg !12320
  %42 = icmp eq i32 %41, 0, !dbg !12321
  br i1 %42, label %73, label %43, !dbg !12322

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12323
  %45 = load i32, i32* %44, align 4, !dbg !12323
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12326

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12327
  %48 = and i32 %47, 131072, !dbg !12330
  %49 = icmp eq i32 %48, 0, !dbg !12330
  br i1 %49, label %115, label %58, !dbg !12331

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12332
  %52 = and i32 %51, 33554432, !dbg !12336
  %53 = icmp eq i32 %52, 0, !dbg !12336
  br i1 %53, label %115, label %58, !dbg !12337

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12338
  %56 = and i32 %55, 2, !dbg !12341
  %57 = icmp eq i32 %56, 0, !dbg !12341
  br i1 %57, label %115, label %58, !dbg !12342

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12343
  %60 = and i32 %59, -4, !dbg !12343
  %61 = or i32 %60, %45, !dbg !12343
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12343
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %62, metadata !12280, metadata !DIExpression()), !dbg !12281
  br label %63, !dbg !12345

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12346
  %65 = and i32 %64, 12, !dbg !12346
  %66 = load i32, i32* %44, align 4, !dbg !12347
  %67 = shl i32 %66, 2, !dbg !12348
  %68 = icmp eq i32 %65, %67, !dbg !12349
  br i1 %68, label %73, label %69, !dbg !12345

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12350
  %71 = sub i32 %70, %62, !dbg !12353
  %72 = icmp ugt i32 %71, 5000, !dbg !12354
  br i1 %72, label %115, label %63, !dbg !12355, !llvm.loop !12356

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12358
  %75 = and i32 %74, 7, !dbg !12358
  %76 = icmp ugt i32 %75, %1, !dbg !12360
  br i1 %76, label %77, label %82, !dbg !12361

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12362
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12362
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12364
  %80 = and i32 %79, 7, !dbg !12364
  %81 = icmp eq i32 %80, %1, !dbg !12366
  br i1 %81, label %82, label %115, !dbg !12367

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12368
  %84 = and i32 %83, 4, !dbg !12370
  %85 = icmp eq i32 %84, 0, !dbg !12371
  br i1 %85, label %93, label %86, !dbg !12372

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12373
  %88 = and i32 %87, -7169, !dbg !12373
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12373
  %90 = load i32, i32* %89, align 4, !dbg !12373
  %91 = or i32 %88, %90, !dbg !12373
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12373
  %92 = load i32, i32* %14, align 4, !dbg !12375
  br label %93, !dbg !12377

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12375
  %95 = and i32 %94, 8, !dbg !12378
  %96 = icmp eq i32 %95, 0, !dbg !12379
  br i1 %96, label %104, label %97, !dbg !12380

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12381
  %99 = and i32 %98, -57345, !dbg !12381
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12381
  %101 = load i32, i32* %100, align 4, !dbg !12381
  %102 = shl i32 %101, 3, !dbg !12381
  %103 = or i32 %102, %99, !dbg !12381
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12381
  br label %104, !dbg !12383

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12384
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12385
  %107 = lshr i32 %106, 4, !dbg !12386
  %108 = and i32 %107, 15, !dbg !12386
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12387
  %110 = load i8, i8* %109, align 1, !dbg !12387
  %111 = zext i8 %110 to i32, !dbg !12387
  %112 = lshr i32 %105, %111, !dbg !12388
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12389
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12390
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12391
  br label %115, !dbg !12392

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12281
  ret i32 %116, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12394 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12396, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 0, metadata !12397, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 0, metadata !12398, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 0, metadata !12399, metadata !DIExpression()), !dbg !12400
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12401
  %2 = and i32 %1, 12, !dbg !12402
  %3 = icmp eq i32 %2, 8, !dbg !12403
  br i1 %3, label %4, label %21, !dbg !12403

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12404
  %6 = and i32 %5, 63, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %6, metadata !12396, metadata !DIExpression()), !dbg !12400
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12408
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12410
  %9 = lshr i32 %8, 6, !dbg !12410
  %10 = and i32 %9, 511, !dbg !12410
  %11 = zext i32 %10 to i64, !dbg !12410
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12410
  %13 = zext i32 %6 to i64, !dbg !12410
  %14 = udiv i64 %12, %13, !dbg !12410
  %15 = trunc i64 %14 to i32, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %15, metadata !12397, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 %15, metadata !12397, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 %15, metadata !12397, metadata !DIExpression()), !dbg !12400
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12411
  %17 = lshr i32 %16, 15, !dbg !12412
  %18 = and i32 %17, 6, !dbg !12412
  %19 = add nuw nsw i32 %18, 2, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %19, metadata !12398, metadata !DIExpression()), !dbg !12400
  %20 = udiv i32 %15, %19, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %20, metadata !12399, metadata !DIExpression()), !dbg !12400
  br label %21, !dbg !12414

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12415
  call void @llvm.dbg.value(metadata i32 %22, metadata !12399, metadata !DIExpression()), !dbg !12400
  ret i32 %22, !dbg !12416
}

; Function Attrs: optsize
declare !dbg !12417 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12420 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12424, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata i32 %1, metadata !12425, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.value(metadata i32 %2, metadata !12426, metadata !DIExpression()), !dbg !12444
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12445
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12445
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12427, metadata !DIExpression()), !dbg !12446
  %8 = icmp eq i32 %0, 0, !dbg !12447
  br i1 %8, label %9, label %23, !dbg !12448

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12449
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12437, metadata !DIExpression()), !dbg !12449
  store volatile i32 0, i32* %5, align 4, !dbg !12449
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %12 = or i32 %11, 1, !dbg !12449
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %14 = and i32 %13, 1, !dbg !12449
  store volatile i32 %14, i32* %5, align 4, !dbg !12449
  %15 = load volatile i32, i32* %5, align 4, !dbg !12449
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12450
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12451
  store i32 256, i32* %16, align 4, !dbg !12452
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12453
  store i32 2, i32* %17, align 4, !dbg !12454
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12455
  store i32 3, i32* %18, align 4, !dbg !12456
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12457
  store i32 0, i32* %19, align 4, !dbg !12458
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12459
  store i32 0, i32* %20, align 4, !dbg !12460
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12461
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12462
  %22 = and i32 %21, -123731969, !dbg !12462
  br label %38, !dbg !12463

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12464
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12464
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12441, metadata !DIExpression()), !dbg !12464
  store volatile i32 0, i32* %6, align 4, !dbg !12464
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12464
  %26 = or i32 %25, 4, !dbg !12464
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12464
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12464
  %28 = and i32 %27, 4, !dbg !12464
  store volatile i32 %28, i32* %6, align 4, !dbg !12464
  %29 = load volatile i32, i32* %6, align 4, !dbg !12464
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12465
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12466
  store i32 512, i32* %30, align 4, !dbg !12467
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12468
  store i32 2, i32* %31, align 4, !dbg !12469
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12470
  store i32 3, i32* %32, align 4, !dbg !12471
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12472
  store i32 0, i32* %33, align 4, !dbg !12473
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12474
  store i32 0, i32* %34, align 4, !dbg !12475
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12476
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12477
  %36 = and i32 %35, 134217727, !dbg !12477
  %37 = shl i32 %2, 3, !dbg !12477
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12478
  %42 = or i32 %41, %40, !dbg !12478
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12478
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12479
  ret void, !dbg !12479
}

; Function Attrs: optsize
declare !dbg !12480 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12484 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12487 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12488
  ret void, !dbg !12489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12490 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12491
  ret i32 %1, !dbg !12492
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12493 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12494
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12495
  %3 = lshr i32 %2, 10, !dbg !12496
  %4 = and i32 %3, 7, !dbg !12496
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12497
  %6 = load i8, i8* %5, align 1, !dbg !12497
  %7 = zext i8 %6 to i32, !dbg !12497
  %8 = lshr i32 %1, %7, !dbg !12498
  ret i32 %8, !dbg !12499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12500 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12501
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12502
  %3 = lshr i32 %2, 13, !dbg !12503
  %4 = and i32 %3, 7, !dbg !12503
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12504
  %6 = load i8, i8* %5, align 1, !dbg !12504
  %7 = zext i8 %6 to i32, !dbg !12504
  %8 = lshr i32 %1, %7, !dbg !12505
  ret i32 %8, !dbg !12506
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12507 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12511, metadata !DIExpression()), !dbg !12512
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12513
  store i32 15, i32* %2, align 4, !dbg !12514
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12515
  %4 = and i32 %3, 262144, !dbg !12517
  %5 = icmp eq i32 %4, 0, !dbg !12518
  br i1 %5, label %8, label %6, !dbg !12519

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12520
  store i32 327680, i32* %7, align 4, !dbg !12522
  br label %15, !dbg !12523

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12524
  %10 = and i32 %9, 65536, !dbg !12526
  %11 = icmp eq i32 %10, 0, !dbg !12527
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12528
  br i1 %11, label %14, label %13, !dbg !12529

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12530
  br label %15, !dbg !12532

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12533
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12535
  %17 = and i32 %16, 1, !dbg !12537
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12538
  store i32 %17, i32* %18, align 4, !dbg !12540
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12541
  %20 = lshr i32 %19, 3, !dbg !12542
  %21 = and i32 %20, 31, !dbg !12542
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12543
  store i32 %21, i32* %22, align 4, !dbg !12544
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12545
  %24 = and i32 %23, 4, !dbg !12547
  %25 = icmp eq i32 %24, 0, !dbg !12548
  br i1 %25, label %28, label %26, !dbg !12549

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12550
  store i32 5, i32* %27, align 4, !dbg !12552
  br label %35, !dbg !12553

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12554
  %30 = and i32 %29, 1, !dbg !12556
  %31 = icmp eq i32 %30, 0, !dbg !12557
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12558
  br i1 %31, label %34, label %33, !dbg !12559

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12560
  br label %35, !dbg !12562

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12563
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12565
  %37 = and i32 %36, 1, !dbg !12567
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12568
  store i32 %37, i32* %38, align 4, !dbg !12570
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12571
  %40 = and i32 %39, 16777216, !dbg !12573
  %41 = icmp eq i32 %40, 0, !dbg !12574
  %42 = select i1 %41, i32 1, i32 2, !dbg !12575
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12576
  store i32 %42, i32* %43, align 4, !dbg !12578
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12579
  %45 = and i32 %44, 4194304, !dbg !12580
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12581
  store i32 %45, i32* %46, align 4, !dbg !12582
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12583
  %48 = and i32 %47, 63, !dbg !12584
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12585
  store i32 %48, i32* %49, align 4, !dbg !12586
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12587
  %51 = lshr i32 %50, 6, !dbg !12588
  %52 = and i32 %51, 511, !dbg !12588
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12589
  store i32 %52, i32* %53, align 4, !dbg !12590
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12591
  %55 = shl i32 %54, 1, !dbg !12592
  %56 = and i32 %55, 393216, !dbg !12592
  %57 = add nuw nsw i32 %56, 131072, !dbg !12592
  %58 = lshr exact i32 %57, 16, !dbg !12593
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12594
  store i32 %58, i32* %59, align 4, !dbg !12595
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12596
  %61 = lshr i32 %60, 24, !dbg !12597
  %62 = and i32 %61, 15, !dbg !12597
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12598
  store i32 %62, i32* %63, align 4, !dbg !12599
  ret void, !dbg !12600
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12601 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12605, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32* %1, metadata !12606, metadata !DIExpression()), !dbg !12607
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12608
  store i32 15, i32* %3, align 4, !dbg !12609
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12610
  %5 = and i32 %4, 3, !dbg !12611
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12612
  store i32 %5, i32* %6, align 4, !dbg !12613
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12614
  %8 = and i32 %7, 240, !dbg !12615
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12616
  store i32 %8, i32* %9, align 4, !dbg !12617
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12618
  %11 = and i32 %10, 7168, !dbg !12619
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12620
  store i32 %11, i32* %12, align 4, !dbg !12621
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12622
  %14 = lshr i32 %13, 3, !dbg !12623
  %15 = and i32 %14, 7168, !dbg !12623
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12624
  store i32 %15, i32* %16, align 4, !dbg !12625
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12626
  %18 = and i32 %17, 7, !dbg !12627
  store i32 %18, i32* %1, align 4, !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12630 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12631
  %2 = and i32 %1, 128, !dbg !12631
  %3 = icmp eq i32 %2, 0, !dbg !12631
  br i1 %3, label %5, label %4, !dbg !12633

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12634
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12636
  br label %5, !dbg !12637

5:                                                ; preds = %4, %0
  ret void, !dbg !12638
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12639 {
  ret void, !dbg !12640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12644, metadata !DIExpression()), !dbg !12645
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12646
  ret void, !dbg !12647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12651, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.value(metadata i32 1000, metadata !12652, metadata !DIExpression()), !dbg !12653
  %2 = udiv i32 %0, 1000, !dbg !12654
  %3 = add nsw i32 %2, -1, !dbg !12655
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12656
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12657
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12658
  ret void, !dbg !12659
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12660 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12662, metadata !DIExpression()), !dbg !12664
  %3 = bitcast i32* %2 to i8*, !dbg !12665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12665
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12663, metadata !DIExpression()), !dbg !12666
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12667
  store volatile i32 %4, i32* %2, align 4, !dbg !12666
  %5 = load volatile i32, i32* %2, align 4, !dbg !12668
  %6 = icmp eq i32 %0, -1, !dbg !12669
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12662, metadata !DIExpression()), !dbg !12664
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12664
  call void @llvm.dbg.value(metadata i32 %8, metadata !12662, metadata !DIExpression()), !dbg !12664
  br label %9, !dbg !12671

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12662, metadata !DIExpression()), !dbg !12664
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12662, metadata !DIExpression()), !dbg !12664
  %12 = shl i32 %11, 15, !dbg !12664
  %13 = ashr i32 %12, 31, !dbg !12664
  %14 = add i32 %13, %10, !dbg !12664
  call void @llvm.dbg.value(metadata i32 %14, metadata !12662, metadata !DIExpression()), !dbg !12664
  %15 = icmp eq i32 %14, 0, !dbg !12671
  br i1 %15, label %16, label %9, !dbg !12671

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12675
  ret void, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12678, metadata !DIExpression()), !dbg !12679
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12680
  ret void, !dbg !12681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12687, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 0, metadata !12690, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 0, metadata !12691, metadata !DIExpression()), !dbg !12692
  %2 = icmp eq i32 %0, 0, !dbg !12693
  br i1 %2, label %35, label %3, !dbg !12695

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12696
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12699
  %6 = icmp eq i32 %5, 32768, !dbg !12701
  br i1 %6, label %7, label %12, !dbg !12702

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !12703
  br i1 %8, label %12, label %9, !dbg !12706

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !12707
  %11 = zext i1 %10 to i32, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %11, metadata !12690, metadata !DIExpression()), !dbg !12692
  br label %12, !dbg !12710

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !12692
  call void @llvm.dbg.value(metadata i32 %13, metadata !12690, metadata !DIExpression()), !dbg !12692
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12711
  %15 = icmp eq i32 %14, 16384, !dbg !12713
  br i1 %15, label %16, label %24, !dbg !12714

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !12715
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !12718
  br i1 %19, label %24, label %20, !dbg !12718

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !12719
  %22 = and i1 %21, %18, !dbg !12722
  %23 = select i1 %22, i32 1, i32 %13, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %23, metadata !12690, metadata !DIExpression()), !dbg !12692
  br label %24, !dbg !12722

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !12723
  call void @llvm.dbg.value(metadata i32 %25, metadata !12690, metadata !DIExpression()), !dbg !12692
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #24, !dbg !12724
  call void @llvm.dbg.value(metadata i32 2, metadata !12688, metadata !DIExpression()), !dbg !12692
  br label %26, !dbg !12725

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !12723
  call void @llvm.dbg.value(metadata i32 %27, metadata !12688, metadata !DIExpression()), !dbg !12692
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %28, metadata !12689, metadata !DIExpression()), !dbg !12692
  %29 = add nsw i32 %27, -1, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %29, metadata !12688, metadata !DIExpression()), !dbg !12692
  %30 = icmp ne i32 %28, %25, !dbg !12729
  %31 = icmp ne i32 %29, 0, !dbg !12730
  %32 = select i1 %30, i1 %31, i1 false, !dbg !12730
  br i1 %32, label %26, label %33, !dbg !12731, !llvm.loop !12732

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !12734
  call void @llvm.dbg.value(metadata i32 %36, metadata !12691, metadata !DIExpression()), !dbg !12692
  ret i32 %36, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12736 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12738
  %2 = and i32 %1, 49152, !dbg !12738
  ret i32 %2, !dbg !12739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12742, metadata !DIExpression()), !dbg !12743
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12744
  %3 = and i32 %2, -8, !dbg !12744
  %4 = or i32 %3, %0, !dbg !12744
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12744
  ret void, !dbg !12745
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12746 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12747
  %2 = and i32 %1, 7, !dbg !12747
  ret i32 %2, !dbg !12748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12749 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12768, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12769, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12770, metadata !DIExpression()), !dbg !12771
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12772
  %4 = icmp eq i32 %3, 0, !dbg !12774
  br i1 %4, label %5, label %21, !dbg !12775

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12776
  call void @llvm.dbg.value(metadata i32 %6, metadata !12770, metadata !DIExpression()), !dbg !12771
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.200() #24, !dbg !12778
  %8 = icmp eq i32 %7, 1, !dbg !12780
  br i1 %8, label %13, label %9, !dbg !12781

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.201() #24, !dbg !12782
  br label %10, !dbg !12784

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.200() #24, !dbg !12785
  %12 = icmp eq i32 %11, 1, !dbg !12786
  br i1 %12, label %13, label %10, !dbg !12784, !llvm.loop !12787

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12789
  %15 = load i32, i32* %14, align 4, !dbg !12789
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12790
  %17 = load i32, i32* %16, align 4, !dbg !12790
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12791
  %19 = load i32, i32* %18, align 4, !dbg !12791
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12792
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12793
  call void @llvm.dbg.value(metadata i32 %20, metadata !12769, metadata !DIExpression()), !dbg !12771
  br label %21, !dbg !12794

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12795
  call void @llvm.dbg.value(metadata i32 %22, metadata !12769, metadata !DIExpression()), !dbg !12771
  ret i32 %22, !dbg !12796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12797 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12801, metadata !DIExpression()), !dbg !12802
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.204() #24, !dbg !12803
  %2 = icmp ne i32 %1, 0, !dbg !12805
  call void @llvm.dbg.value(metadata i1 %2, metadata !12801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12802
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12806
  %4 = icmp ne i32 %3, 0, !dbg !12808
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12809
  %6 = zext i1 %5 to i32, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %6, metadata !12801, metadata !DIExpression()), !dbg !12802
  ret i32 %6, !dbg !12810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12815, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12816, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 0, metadata !12817, metadata !DIExpression()), !dbg !12818
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12819
  %4 = load i32, i32* %3, align 4, !dbg !12819
  %5 = and i32 %4, 63, !dbg !12820
  %6 = udiv i32 %0, %5, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %6, metadata !12817, metadata !DIExpression()), !dbg !12818
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12822
  %8 = load i32, i32* %7, align 4, !dbg !12822
  %9 = and i32 %8, 511, !dbg !12823
  %10 = mul i32 %9, %6, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %10, metadata !12817, metadata !DIExpression()), !dbg !12818
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12825
  %12 = load i32, i32* %11, align 4, !dbg !12825
  %13 = lshr i32 %12, 15, !dbg !12826
  %14 = and i32 %13, 131070, !dbg !12826
  %15 = add nuw nsw i32 %14, 2, !dbg !12826
  %16 = udiv i32 %10, %15, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %16, metadata !12817, metadata !DIExpression()), !dbg !12818
  ret i32 %16, !dbg !12828
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.200() unnamed_addr #15 !dbg !12829 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12830
  %2 = lshr i32 %1, 1, !dbg !12831
  %3 = and i32 %2, 1, !dbg !12831
  ret i32 %3, !dbg !12832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.201() unnamed_addr #14 !dbg !12833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12834
  %2 = or i32 %1, 1, !dbg !12834
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12834
  ret void, !dbg !12835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12838, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %1, metadata !12839, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %2, metadata !12840, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %3, metadata !12841, metadata !DIExpression()), !dbg !12842
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12843
  %6 = and i32 %5, -4227072, !dbg !12843
  %7 = or i32 %1, %0, !dbg !12843
  %8 = shl i32 %2, 6, !dbg !12843
  %9 = or i32 %7, %8, !dbg !12843
  %10 = or i32 %9, %6, !dbg !12843
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12843
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12844
  %12 = and i32 %11, -196609, !dbg !12844
  %13 = or i32 %12, %3, !dbg !12844
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12844
  ret void, !dbg !12845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12850, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12851, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.value(metadata i32 0, metadata !12852, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.value(metadata i32 0, metadata !12853, metadata !DIExpression()), !dbg !12854
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12855
  %4 = load i32, i32* %3, align 4, !dbg !12855
  %5 = lshr i32 %4, 4, !dbg !12855
  %6 = and i32 %5, 15, !dbg !12855
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12855
  %8 = load i8, i8* %7, align 1, !dbg !12855
  %9 = zext i8 %8 to i32, !dbg !12855
  %10 = lshr i32 %0, %9, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %10, metadata !12853, metadata !DIExpression()), !dbg !12854
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12856
  %12 = icmp ult i32 %11, %10, !dbg !12858
  br i1 %12, label %13, label %16, !dbg !12859

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %14, metadata !12852, metadata !DIExpression()), !dbg !12854
  %15 = icmp eq i32 %14, 0, !dbg !12862
  br i1 %15, label %16, label %30, !dbg !12864

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.203() #24, !dbg !12865
  br label %17, !dbg !12867

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.204() #24, !dbg !12868
  %19 = icmp eq i32 %18, 1, !dbg !12869
  br i1 %19, label %20, label %17, !dbg !12867, !llvm.loop !12870

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12872
  tail call fastcc void @LL_RCC_SetAHBPrescaler.205(i32 noundef %21) #24, !dbg !12873
  tail call fastcc void @LL_RCC_SetSysClkSource.206() #24, !dbg !12874
  br label %22, !dbg !12875

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.207() #24, !dbg !12876
  %24 = icmp eq i32 %23, 8, !dbg !12877
  br i1 %24, label %25, label %22, !dbg !12875, !llvm.loop !12878

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12880
  %27 = load i32, i32* %26, align 4, !dbg !12880
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.208(i32 noundef %27) #24, !dbg !12881
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12882
  %29 = load i32, i32* %28, align 4, !dbg !12882
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.209(i32 noundef %29) #24, !dbg !12883
  br label %30, !dbg !12884

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12885
  %33 = icmp ugt i32 %32, %10, !dbg !12887
  br i1 %33, label %34, label %36, !dbg !12888

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %35, metadata !12852, metadata !DIExpression()), !dbg !12854
  br label %36, !dbg !12891

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12854
  call void @llvm.dbg.value(metadata i32 %37, metadata !12852, metadata !DIExpression()), !dbg !12854
  %38 = icmp eq i32 %37, 0, !dbg !12892
  br i1 %38, label %39, label %40, !dbg !12894

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12895
  br label %40, !dbg !12897

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.203() unnamed_addr #14 !dbg !12899 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12900
  %2 = or i32 %1, 16777216, !dbg !12900
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.204() unnamed_addr #15 !dbg !12902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12903
  %2 = lshr i32 %1, 25, !dbg !12904
  %3 = and i32 %2, 1, !dbg !12904
  ret i32 %3, !dbg !12905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.205(i32 noundef %0) unnamed_addr #14 !dbg !12906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12908, metadata !DIExpression()), !dbg !12909
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12910
  %3 = and i32 %2, -241, !dbg !12910
  %4 = or i32 %3, %0, !dbg !12910
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12910
  ret void, !dbg !12911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.206() unnamed_addr #14 !dbg !12912 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12914, metadata !DIExpression()), !dbg !12915
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  %2 = and i32 %1, -4, !dbg !12916
  %3 = or i32 %2, 2, !dbg !12916
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  ret void, !dbg !12917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.207() unnamed_addr #15 !dbg !12918 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12919
  %2 = and i32 %1, 12, !dbg !12919
  ret i32 %2, !dbg !12920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.208(i32 noundef %0) unnamed_addr #14 !dbg !12921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12923, metadata !DIExpression()), !dbg !12924
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12925
  %3 = and i32 %2, -7169, !dbg !12925
  %4 = or i32 %3, %0, !dbg !12925
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12925
  ret void, !dbg !12926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.209(i32 noundef %0) unnamed_addr #14 !dbg !12927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12929, metadata !DIExpression()), !dbg !12930
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12931
  %3 = and i32 %2, -57345, !dbg !12931
  %4 = or i32 %3, %0, !dbg !12931
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12931
  ret void, !dbg !12932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12934
  %2 = lshr i32 %1, 27, !dbg !12935
  %3 = and i32 %2, 1, !dbg !12935
  ret i32 %3, !dbg !12936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12941, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 %1, metadata !12942, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12943, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 0, metadata !12946, metadata !DIExpression()), !dbg !12947
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12948
  %6 = icmp eq i32 %5, 0, !dbg !12950
  br i1 %6, label %7, label %27, !dbg !12951

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12952
  call void @llvm.dbg.value(metadata i32 %8, metadata !12946, metadata !DIExpression()), !dbg !12947
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.210() #24, !dbg !12954
  %10 = icmp eq i32 %9, 1, !dbg !12956
  br i1 %10, label %19, label %11, !dbg !12957

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12958
  br i1 %12, label %13, label %14, !dbg !12961

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12962
  br label %15, !dbg !12964

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.211() #24, !dbg !12965
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.212() #24, !dbg !12967
  br label %16, !dbg !12968

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.210() #24, !dbg !12969
  %18 = icmp eq i32 %17, 1, !dbg !12970
  br i1 %18, label %19, label %16, !dbg !12968, !llvm.loop !12971

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12973
  %21 = load i32, i32* %20, align 4, !dbg !12973
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12974
  %23 = load i32, i32* %22, align 4, !dbg !12974
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12975
  %25 = load i32, i32* %24, align 4, !dbg !12975
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12976
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %26, metadata !12945, metadata !DIExpression()), !dbg !12947
  br label %27, !dbg !12978

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12979
  call void @llvm.dbg.value(metadata i32 %28, metadata !12945, metadata !DIExpression()), !dbg !12947
  ret i32 %28, !dbg !12980
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.210() unnamed_addr #15 !dbg !12981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12982
  %2 = lshr i32 %1, 17, !dbg !12983
  %3 = and i32 %2, 1, !dbg !12983
  ret i32 %3, !dbg !12984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12985 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12986
  %2 = or i32 %1, 262144, !dbg !12986
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.211() unnamed_addr #14 !dbg !12988 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12989
  %2 = and i32 %1, -262145, !dbg !12989
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12989
  ret void, !dbg !12990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.212() unnamed_addr #14 !dbg !12991 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12992
  %2 = or i32 %1, 65536, !dbg !12992
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12992
  ret void, !dbg !12993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12994 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12997, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 undef, metadata !12997, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 undef, metadata !12997, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13013
  ret void, !dbg !13014
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13019, metadata !DIExpression()), !dbg !13021
  %2 = icmp eq i8* %0, null, !dbg !13022
  br i1 %2, label %29, label %3, !dbg !13024

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13025
  %5 = icmp eq i8 %4, 0, !dbg !13026
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13027
  br i1 %6, label %29, label %8, !dbg !13027

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13020, metadata !DIExpression()), !dbg !13021
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13028

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13020, metadata !DIExpression()), !dbg !13021
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13030
  br i1 %10, label %11, label %15, !dbg !13035

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13036
  %13 = load i8*, i8** %12, align 4, !dbg !13036
  %14 = icmp eq i8* %13, %0, !dbg !13037
  br i1 %14, label %29, label %15, !dbg !13038

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13039
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13020, metadata !DIExpression()), !dbg !13021
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13040
  br i1 %17, label %7, label %8, !dbg !13041, !llvm.loop !13042

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13020, metadata !DIExpression()), !dbg !13021
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13044
  br i1 %20, label %21, label %26, !dbg !13048

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13049
  %23 = load i8*, i8** %22, align 4, !dbg !13049
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13050
  %25 = icmp eq i32 %24, 0, !dbg !13051
  br i1 %25, label %29, label %26, !dbg !13052

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13053
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13020, metadata !DIExpression()), !dbg !13021
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13054
  br i1 %28, label %29, label %18, !dbg !13028, !llvm.loop !13055

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13021
  ret %struct.device* %30, !dbg !13057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13062, metadata !DIExpression()), !dbg !13063
  %2 = icmp eq %struct.device* %0, null, !dbg !13064
  br i1 %2, label %14, label %3, !dbg !13066

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13067
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13067
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13068
  %7 = load i8, i8* %6, align 1, !dbg !13068
  %8 = and i8 %7, 1, !dbg !13068
  %9 = icmp eq i8 %8, 0, !dbg !13068
  br i1 %9, label %14, label %10, !dbg !13069

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13070
  %12 = load i8, i8* %11, align 1, !dbg !13070
  %13 = icmp eq i8 %12, 0, !dbg !13071
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13063
  ret i1 %15, !dbg !13072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13073 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13078, metadata !DIExpression()), !dbg !13079
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13080
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13082 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13090, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13091, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i8* %2, metadata !13092, metadata !DIExpression()), !dbg !13095
  %5 = bitcast i32* %4 to i8*, !dbg !13096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13096
  call void @llvm.dbg.value(metadata i32 0, metadata !13093, metadata !DIExpression()), !dbg !13095
  store i32 0, i32* %4, align 4, !dbg !13097
  call void @llvm.dbg.value(metadata i32* %4, metadata !13093, metadata !DIExpression(DW_OP_deref)), !dbg !13095
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13098
  call void @llvm.dbg.value(metadata i16* %6, metadata !13094, metadata !DIExpression()), !dbg !13095
  %7 = load i32, i32* %4, align 4, !dbg !13099
  call void @llvm.dbg.value(metadata i32 %7, metadata !13093, metadata !DIExpression()), !dbg !13095
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13101
  ret i32 %8, !dbg !13102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13107, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i32* %1, metadata !13108, metadata !DIExpression()), !dbg !13113
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13114
  %4 = load i16*, i16** %3, align 4, !dbg !13114
  call void @llvm.dbg.value(metadata i16* %4, metadata !13109, metadata !DIExpression()), !dbg !13113
  %5 = icmp eq i16* %4, null, !dbg !13115
  br i1 %5, label %14, label %6, !dbg !13116

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13117
  call void @llvm.dbg.value(metadata i32 %7, metadata !13110, metadata !DIExpression()), !dbg !13117
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13118
  %9 = load i16, i16* %8, align 2, !dbg !13118
  %10 = add i16 %9, -32767, !dbg !13119
  %11 = icmp ult i16 %10, 2, !dbg !13119
  %12 = add i32 %7, 1, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %12, metadata !13110, metadata !DIExpression()), !dbg !13117
  br i1 %11, label %13, label %6, !dbg !13119, !llvm.loop !13122

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13125
  br label %14, !dbg !13126

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13128 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13132, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 %1, metadata !13133, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13134, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i8* %3, metadata !13135, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 0, metadata !13136, metadata !DIExpression()), !dbg !13144
  %5 = icmp eq i32 %1, 0, !dbg !13145
  br i1 %5, label %16, label %8, !dbg !13146

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13136, metadata !DIExpression()), !dbg !13144
  %7 = icmp eq i32 %15, %1, !dbg !13145
  br i1 %7, label %16, label %8, !dbg !13146, !llvm.loop !13147

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13136, metadata !DIExpression()), !dbg !13144
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13149
  %11 = load i16, i16* %10, align 2, !dbg !13149
  call void @llvm.dbg.value(metadata i16 %11, metadata !13138, metadata !DIExpression()), !dbg !13150
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13151
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13141, metadata !DIExpression()), !dbg !13150
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13152
  call void @llvm.dbg.value(metadata i32 %13, metadata !13142, metadata !DIExpression()), !dbg !13150
  %14 = icmp slt i32 %13, 0, !dbg !13153
  %15 = add nuw i32 %9, 1, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %15, metadata !13136, metadata !DIExpression()), !dbg !13144
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13157 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13161, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13163, metadata !DIExpression()), !dbg !13164
  %2 = sext i16 %0 to i32, !dbg !13165
  %3 = icmp slt i16 %0, 1, !dbg !13167
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13168
  %6 = add nsw i32 %2, -1, !dbg !13168
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13168
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13168
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13162, metadata !DIExpression()), !dbg !13164
  ret %struct.device* %8, !dbg !13169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13170 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13172, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13173, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i8* %2, metadata !13174, metadata !DIExpression()), !dbg !13177
  %5 = bitcast i32* %4 to i8*, !dbg !13178
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13178
  call void @llvm.dbg.value(metadata i32 0, metadata !13175, metadata !DIExpression()), !dbg !13177
  store i32 0, i32* %4, align 4, !dbg !13179
  call void @llvm.dbg.value(metadata i32* %4, metadata !13175, metadata !DIExpression(DW_OP_deref)), !dbg !13177
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13180
  call void @llvm.dbg.value(metadata i16* %6, metadata !13176, metadata !DIExpression()), !dbg !13177
  %7 = load i32, i32* %4, align 4, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %7, metadata !13175, metadata !DIExpression()), !dbg !13177
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13182
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13183
  ret i32 %8, !dbg !13184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13187, metadata !DIExpression()), !dbg !13192
  call void @llvm.dbg.value(metadata i32* %1, metadata !13188, metadata !DIExpression()), !dbg !13192
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13193
  %4 = load i16*, i16** %3, align 4, !dbg !13193
  call void @llvm.dbg.value(metadata i16* %4, metadata !13189, metadata !DIExpression()), !dbg !13192
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13192
  call void @llvm.dbg.value(metadata i32 0, metadata !13191, metadata !DIExpression()), !dbg !13192
  %5 = icmp eq i16* %4, null, !dbg !13194
  br i1 %5, label %22, label %6, !dbg !13196

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13190, metadata !DIExpression()), !dbg !13192
  call void @llvm.dbg.value(metadata i16* %8, metadata !13189, metadata !DIExpression()), !dbg !13192
  %9 = load i16, i16* %8, align 2, !dbg !13197
  %10 = icmp eq i16 %9, -32768, !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13190, metadata !DIExpression()), !dbg !13192
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13202
  call void @llvm.dbg.value(metadata i16* %11, metadata !13189, metadata !DIExpression()), !dbg !13192
  %12 = zext i1 %10 to i32, !dbg !13203
  %13 = add i32 %7, %12, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %13, metadata !13190, metadata !DIExpression()), !dbg !13192
  %14 = icmp eq i32 %13, 2, !dbg !13204
  br i1 %14, label %15, label %6, !dbg !13205

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13192
  call void @llvm.dbg.value(metadata i32 %16, metadata !13191, metadata !DIExpression()), !dbg !13192
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13206
  %18 = load i16, i16* %17, align 2, !dbg !13206
  %19 = icmp eq i16 %18, 32767, !dbg !13207
  %20 = add i32 %16, 1, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %20, metadata !13191, metadata !DIExpression()), !dbg !13192
  br i1 %19, label %21, label %15, !dbg !13210, !llvm.loop !13211

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13213
  br label %22, !dbg !13214

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13215
  call void @llvm.dbg.value(metadata i16* %23, metadata !13189, metadata !DIExpression()), !dbg !13192
  ret i16* %23, !dbg !13216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13217 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13221
  ret i32* %2, !dbg !13222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13223 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13374, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13375, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13376, metadata !DIExpression()), !dbg !13377
  ret void, !dbg !13378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13383, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i32 %1, metadata !13384, metadata !DIExpression()), !dbg !13385
  ret void, !dbg !13386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13391, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %1, metadata !13392, metadata !DIExpression()), !dbg !13393
  ret void, !dbg !13394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13399, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i8* %1, metadata !13400, metadata !DIExpression()), !dbg !13401
  ret i32 -134, !dbg !13402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13407, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i8* %1, metadata !13408, metadata !DIExpression()), !dbg !13409
  ret i32 -134, !dbg !13410
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13414, metadata !DIExpression()), !dbg !13415
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13416, !srcloc !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13419, metadata !DIExpression()) #23, !dbg !13423
  call void @llvm.dbg.value(metadata i32 undef, metadata !13420, metadata !DIExpression()) #23, !dbg !13423
  br label %3, !dbg !13424

3:                                                ; preds = %3, %1
  br label %3, !dbg !13425, !llvm.loop !13428
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13435, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13436, metadata !DIExpression()), !dbg !13437
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.217, i32 0, i32 0), i32 noundef 69) #25, !dbg !13438
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13443
  unreachable, !dbg !13443
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13446, metadata !DIExpression()), !dbg !13447
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13448
  unreachable, !dbg !13448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13451, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13452, metadata !DIExpression()), !dbg !13455
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13456, !srcloc !13422
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13456
  call void @llvm.dbg.value(metadata i32 %4, metadata !13419, metadata !DIExpression()) #23, !dbg !13458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13420, metadata !DIExpression()) #23, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %4, metadata !13453, metadata !DIExpression()), !dbg !13455
  %5 = tail call fastcc %struct.k_thread* @k_current_get.220() #26, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13454, metadata !DIExpression()), !dbg !13455
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13460
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.221, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13460
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13465
  br i1 %7, label %20, label %8, !dbg !13467

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13468, metadata !DIExpression()), !dbg !13473
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13475
  %10 = load i32, i32* %9, align 4, !dbg !13475
  %11 = and i32 %10, 511, !dbg !13476
  %12 = icmp eq i32 %11, 0, !dbg !13477
  br i1 %12, label %14, label %13, !dbg !13478

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 69) #25, !dbg !13479
  br label %14, !dbg !13485

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13486
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.223, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13486
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13491
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13468, metadata !DIExpression()), !dbg !13492
  %16 = load i32, i32* %9, align 4, !dbg !13497
  %17 = and i32 %16, 511, !dbg !13498
  %18 = icmp eq i32 %17, 0, !dbg !13499
  br i1 %18, label %22, label %19, !dbg !13500

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13501, metadata !DIExpression()) #23, !dbg !13504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13507, !srcloc !13508
  br label %25, !dbg !13509

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13486
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.223, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13486
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13491
  br label %22, !dbg !13510

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13511
  call void @llvm.dbg.value(metadata i32 %4, metadata !13501, metadata !DIExpression()) #23, !dbg !13514
  call void @llvm.dbg.value(metadata i32 %4, metadata !13501, metadata !DIExpression()) #23, !dbg !13517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13455
  br i1 %23, label %25, label %24, !dbg !13519

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.224(%struct.k_thread* noundef %5) #24, !dbg !13520
  br label %25, !dbg !13523

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.220() unnamed_addr #11 !dbg !13524 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.232() #26, !dbg !13528
  ret %struct.k_thread* %1, !dbg !13529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13534, metadata !DIExpression()), !dbg !13535
  %2 = icmp ult i32 %0, 5, !dbg !13536
  br i1 %2, label %3, label %6, !dbg !13536

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13536
  %5 = load i8*, i8** %4, align 4, !dbg !13536
  br label %6, !dbg !13536

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.226, i32 0, i32 0), %1 ], !dbg !13537
  ret i8* %7, !dbg !13539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13544, metadata !DIExpression()), !dbg !13546
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13547
  br i1 %2, label %9, label %3, !dbg !13548

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13549
  call void @llvm.dbg.value(metadata i8* %4, metadata !13545, metadata !DIExpression()), !dbg !13546
  %5 = icmp eq i8* %4, null, !dbg !13550
  br i1 %5, label %9, label %6, !dbg !13552

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13553
  %8 = icmp eq i8 %7, 0, !dbg !13554
  br i1 %8, label %9, label %10, !dbg !13555

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.225, i32 0, i32 0), metadata !13545, metadata !DIExpression()), !dbg !13546
  br label %10, !dbg !13556

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.225, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13546
  call void @llvm.dbg.value(metadata i8* %11, metadata !13545, metadata !DIExpression()), !dbg !13546
  ret i8* %11, !dbg !13558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.224(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13563, metadata !DIExpression()), !dbg !13564
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13565, !srcloc !13567
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13568
  ret void, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.232() unnamed_addr #11 !dbg !13570 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13571, !srcloc !13573
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13574
  ret %struct.k_thread* %1, !dbg !13575
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13576 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13580, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.value(metadata i32 %1, metadata !13581, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.value(metadata i32 %2, metadata !13582, metadata !DIExpression()), !dbg !13583
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13584
  ret void, !dbg !13585
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13590, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.value(metadata i8* %1, metadata !13591, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.value(metadata i32 %2, metadata !13592, metadata !DIExpression()), !dbg !13593
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13594
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13596 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13597
  ret void, !dbg !13598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13601, metadata !DIExpression()), !dbg !13602
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13603
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13604
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13605
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13606
  %4 = trunc i32 %0 to i8, !dbg !13607
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13608
  store i8 %4, i8* %5, align 4, !dbg !13609
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13610
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13611
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13612
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13613
  store i8* %8, i8** %9, align 4, !dbg !13614
  ret void, !dbg !13615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13618, metadata !DIExpression()), !dbg !13624
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13625
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13619, metadata !DIExpression()), !dbg !13624
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13626
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13620, metadata !DIExpression()), !dbg !13624
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.239, i32 0, i32 0), metadata !13623, metadata !DIExpression()), !dbg !13624
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13627
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13628
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.239, i32 0, i32 0)) #25, !dbg !13629
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13630
  ret void, !dbg !13631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13632 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13636, metadata !DIExpression()), !dbg !13637
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13638
  ret i8* %2, !dbg !13639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13647
  %3 = load i8, i8* %2, align 1, !dbg !13648
  %4 = and i8 %3, -5, !dbg !13648
  store i8 %4, i8* %2, align 1, !dbg !13648
  ret void, !dbg !13649
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13650 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13653
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13654
  %3 = ptrtoint i8* %2 to i32, !dbg !13663
  %4 = add i32 %3, 2048, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %4, metadata !13658, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %4, metadata !13666, metadata !DIExpression()) #23, !dbg !13669
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13671, !srcloc !13672
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13673
  %6 = or i32 %5, 512, !dbg !13673
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13673
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -2, i32 noundef 255) #25, !dbg !13674
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -5, i32 noundef 0) #25, !dbg !13677
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -12, i32 noundef 0) #25, !dbg !13678
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -11, i32 noundef 0) #25, !dbg !13679
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -10, i32 noundef 0) #25, !dbg !13680
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -4, i32 noundef 0) #25, !dbg !13681
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13682
  %8 = or i32 %7, 458752, !dbg !13682
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13682
  tail call void @z_arm_fault_init() #25, !dbg !13683
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13684
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13685
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13688
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13689
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13690
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13691
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13652, metadata !DIExpression()), !dbg !13692
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13693
  call void @z_device_state_init() #25, !dbg !13694
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13695
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13696
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13697
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13698
  unreachable, !dbg !13698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2217, metadata !DIExpression()), !dbg !13699
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13700
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13700
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2218, metadata !DIExpression()), !dbg !13699
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2218, metadata !DIExpression()), !dbg !13699
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13701
  br i1 %7, label %8, label %35, !dbg !13702

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2218, metadata !DIExpression()), !dbg !13699
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13703
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13703
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2228, metadata !DIExpression()), !dbg !13704
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13705
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13705
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13706
  call void @llvm.dbg.value(metadata i32 %14, metadata !2232, metadata !DIExpression()), !dbg !13704
  %15 = icmp eq %struct.device* %11, null, !dbg !13707
  br i1 %15, label %32, label %16, !dbg !13709

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13710
  br i1 %17, label %26, label %18, !dbg !13713

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13714
  call void @llvm.dbg.value(metadata i32 %19, metadata !2232, metadata !DIExpression()), !dbg !13704
  %20 = icmp ult i32 %19, 255, !dbg !13716
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13716
  call void @llvm.dbg.value(metadata i32 %21, metadata !2232, metadata !DIExpression()), !dbg !13704
  %22 = trunc i32 %21 to i8, !dbg !13717
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13718
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13718
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13719
  store i8 %22, i8* %25, align 1, !dbg !13720
  br label %26, !dbg !13721

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13722
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13722
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13723
  %30 = load i8, i8* %29, align 1, !dbg !13724
  %31 = or i8 %30, 1, !dbg !13724
  store i8 %31, i8* %29, align 1, !dbg !13724
  br label %32, !dbg !13725

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2218, metadata !DIExpression()), !dbg !13699
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13701
  br i1 %34, label %8, label %35, !dbg !13702, !llvm.loop !13727

35:                                               ; preds = %32, %1
  ret void, !dbg !13729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.242(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13732, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata i32 %1, metadata !13733, metadata !DIExpression()), !dbg !13734
  %3 = trunc i32 %1 to i8, !dbg !13735
  %4 = shl i8 %3, 4, !dbg !13735
  %5 = and i32 %0, 15, !dbg !13738
  %6 = add nsw i32 %5, -4, !dbg !13739
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13740
  store volatile i8 %4, i8* %7, align 1, !dbg !13741
  ret void, !dbg !13742
}

; Function Attrs: optsize
declare !dbg !13743 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13747, metadata !DIExpression()), !dbg !13748
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13749
  store i8 1, i8* %2, align 1, !dbg !13750
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13751
  store i8 1, i8* %3, align 4, !dbg !13752
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13753
  store i32 0, i32* %4, align 4, !dbg !13754
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13755
  store i32 0, i32* %5, align 4, !dbg !13756
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13757
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13758
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13759
  ret void, !dbg !13760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13761 {
  tail call void @z_sched_init() #25, !dbg !13766
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13767
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.243, i32 0, i32 0)) #25, !dbg !13768
  call void @llvm.dbg.value(metadata i8* %1, metadata !13765, metadata !DIExpression()), !dbg !13769
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13770
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13771
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13772
  ret i8* %1, !dbg !13773
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13778, metadata !DIExpression()), !dbg !13779
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13780
  unreachable, !dbg !13781
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13782 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13784, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %1, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %2, metadata !13786, metadata !DIExpression()), !dbg !13787
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13788
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13789
  tail call void @boot_banner() #25, !dbg !13790
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13791
  tail call void @z_init_static_threads() #25, !dbg !13792
  tail call void @main() #25, !dbg !13793
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13794
  %5 = and i8 %4, -2, !dbg !13794
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13794
  ret void, !dbg !13795
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13796 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13806, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata i8* %1, metadata !13807, metadata !DIExpression()), !dbg !13808
  ret void, !dbg !13809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13810 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13812, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.value(metadata i8* %1, metadata !13813, metadata !DIExpression()), !dbg !13814
  ret void, !dbg !13815
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13816 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13817, !srcloc !13824
  call void @llvm.dbg.value(metadata i32 %1, metadata !13820, metadata !DIExpression()) #23, !dbg !13825
  %2 = icmp ne i32 %1, 0, !dbg !13826
  ret i1 %2, !dbg !13827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13828 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13829
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13830
  %3 = load i8, i8* %2, align 4, !dbg !13831
  %4 = or i8 %3, 1, !dbg !13831
  store i8 %4, i8* %2, align 4, !dbg !13831
  ret void, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13833 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13835
  %3 = load i8, i8* %2, align 4, !dbg !13836
  %4 = and i8 %3, -2, !dbg !13836
  store i8 %4, i8* %2, align 4, !dbg !13836
  ret void, !dbg !13837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13838 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13839
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13840
  %3 = load i8, i8* %2, align 4, !dbg !13840
  %4 = and i8 %3, 1, !dbg !13841
  %5 = icmp ne i8 %4, 0, !dbg !13842
  ret i1 %5, !dbg !13843
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13848, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i8* %1, metadata !13849, metadata !DIExpression()), !dbg !13850
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13851
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13853
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13848, metadata !DIExpression()), !dbg !13850
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13854
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13855
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13856
  store i8 0, i8* %8, align 1, !dbg !13857
  ret i32 0, !dbg !13858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13863, metadata !DIExpression()), !dbg !13864
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13865
  ret i8* %2, !dbg !13866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13871, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata i8* %1, metadata !13872, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata i32 %2, metadata !13873, metadata !DIExpression()), !dbg !13874
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13875
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13876
  ret i32 0, !dbg !13877
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2358, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8* %1, metadata !2359, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 %2, metadata !2360, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 0, metadata !2361, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8 undef, metadata !2363, metadata !DIExpression()), !dbg !13878
  %4 = icmp eq i8* %1, null, !dbg !13879
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13881
  br i1 %6, label %46, label %7, !dbg !13881

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13882
  %9 = load i8, i8* %8, align 1, !dbg !13882
  call void @llvm.dbg.value(metadata i8 %9, metadata !2363, metadata !DIExpression()), !dbg !13878
  %10 = add i32 %2, -1, !dbg !13883
  call void @llvm.dbg.value(metadata i32 %10, metadata !2360, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8 0, metadata !2364, metadata !DIExpression()), !dbg !13884
  call void @llvm.dbg.value(metadata i8 %9, metadata !2363, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 0, metadata !2361, metadata !DIExpression()), !dbg !13878
  %11 = icmp eq i8 %9, 0, !dbg !13885
  br i1 %11, label %12, label %15, !dbg !13887

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13888
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13889
  store i8 0, i8* %14, align 1, !dbg !13890
  br label %46, !dbg !13891

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2364, metadata !DIExpression()), !dbg !13884
  call void @llvm.dbg.value(metadata i8 %17, metadata !2363, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 %18, metadata !2361, metadata !DIExpression()), !dbg !13878
  %19 = zext i8 %17 to i32, !dbg !13892
  %20 = zext i8 %16 to i32, !dbg !13893
  %21 = shl nuw i32 1, %20, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %21, metadata !2362, metadata !DIExpression()), !dbg !13878
  %22 = and i32 %21, %19, !dbg !13895
  %23 = icmp eq i32 %22, 0, !dbg !13897
  br i1 %23, label %42, label %24, !dbg !13898

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13899
  %26 = sub i32 %10, %18, !dbg !13900
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13901
  %28 = load i8*, i8** %27, align 4, !dbg !13901
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13902
  %30 = load i32, i32* %29, align 4, !dbg !13902
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13903
  %32 = add i32 %31, %18, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %32, metadata !2361, metadata !DIExpression()), !dbg !13878
  %33 = trunc i32 %21 to i8, !dbg !13905
  %34 = xor i8 %33, -1, !dbg !13905
  %35 = and i8 %17, %34, !dbg !13905
  call void @llvm.dbg.value(metadata i8 %35, metadata !2363, metadata !DIExpression()), !dbg !13878
  %36 = icmp eq i8 %35, 0, !dbg !13906
  br i1 %36, label %12, label %37, !dbg !13908

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13909
  %39 = sub i32 %10, %32, !dbg !13911
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.248, i32 0, i32 0), i32 noundef 1) #24, !dbg !13912
  %41 = add i32 %40, %32, !dbg !13913
  call void @llvm.dbg.value(metadata i32 %41, metadata !2361, metadata !DIExpression()), !dbg !13878
  br label %42, !dbg !13914

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13878
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13878
  call void @llvm.dbg.value(metadata i8 %44, metadata !2363, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i32 %43, metadata !2361, metadata !DIExpression()), !dbg !13878
  %45 = add i8 %16, 1, !dbg !13915
  call void @llvm.dbg.value(metadata i8 %45, metadata !2364, metadata !DIExpression()), !dbg !13884
  br label %15, !dbg !13887

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.249, i32 0, i32 0), %3 ], !dbg !13878
  ret i8* %47, !dbg !13916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13917 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13921, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.value(metadata i32 %1, metadata !13922, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.value(metadata i8* %2, metadata !13923, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.value(metadata i32 %3, metadata !13924, metadata !DIExpression()), !dbg !13926
  %5 = icmp ult i32 %1, %3, !dbg !13927
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13927
  call void @llvm.dbg.value(metadata i32 %6, metadata !13925, metadata !DIExpression()), !dbg !13926
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13928
  ret i32 %6, !dbg !13929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13934, metadata !DIExpression()), !dbg !13935
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13936
  ret void, !dbg !13937
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13947, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13948, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i32 %2, metadata !13949, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13950, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i8* %4, metadata !13951, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i8* %5, metadata !13952, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i8* %6, metadata !13953, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i32 %7, metadata !13954, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i32 %8, metadata !13955, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.value(metadata i8* %9, metadata !13956, metadata !DIExpression()), !dbg !13958
  %11 = icmp eq i32 %7, 15, !dbg !13959
  br i1 %11, label %12, label %15, !dbg !13959

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13959
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13959
  br i1 %14, label %19, label %18, !dbg !13959

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13959
  %17 = icmp ult i32 %16, 31, !dbg !13959
  br i1 %17, label %19, label %18, !dbg !13959

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 536) #25, !dbg !13963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.264, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 536) #25, !dbg !13963
  unreachable, !dbg !13963

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13965
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13966
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13967
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13968
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13969
  call void @llvm.dbg.value(metadata i8* %22, metadata !13957, metadata !DIExpression()), !dbg !13958
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13970
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13971
  store i8* null, i8** %23, align 4, !dbg !13972
  %24 = icmp eq i8* %9, null, !dbg !13973
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13975
  br i1 %24, label %29, label %26, !dbg !13976

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13977
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13979
  store i8 0, i8* %28, align 1, !dbg !13980
  br label %30, !dbg !13981

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13982
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13984
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13984
  br i1 %32, label %36, label %33, !dbg !13986

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13987
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13987
  br label %36, !dbg !13988

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13958
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13989
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13991
  ret i8* %22, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13997, metadata !DIExpression()), !dbg !13998
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13999
  ret i1 %2, !dbg !14000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14001 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14006, metadata !DIExpression()), !dbg !14007
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14008
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14009
  ret void, !dbg !14010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14011 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14016, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %1, metadata !14017, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %2, metadata !14018, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %3, metadata !14019, metadata !DIExpression()), !dbg !14020
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14021
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14022
  %6 = trunc i32 %3 to i8, !dbg !14023
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14024
  store i8 %6, i8* %7, align 4, !dbg !14025
  %8 = trunc i32 %2 to i8, !dbg !14026
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14027
  store i8 %8, i8* %9, align 1, !dbg !14028
  %10 = trunc i32 %1 to i8, !dbg !14029
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14030
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14030
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14030
  store i8 %10, i8* %13, align 2, !dbg !14031
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14032
  store i8 0, i8* %14, align 1, !dbg !14033
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14034
  ret void, !dbg !14035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14040, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14041, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 %2, metadata !14042, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 0, metadata !14047, metadata !DIExpression()), !dbg !14048
  %4 = add i32 %2, 7, !dbg !14049
  %5 = and i32 %4, -8, !dbg !14049
  %6 = add i32 %5, 64, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()), !dbg !14048
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.265(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14051
  call void @llvm.dbg.value(metadata i8* %7, metadata !14046, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 %5, metadata !14044, metadata !DIExpression()), !dbg !14048
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14052
  call void @llvm.dbg.value(metadata i8* %8, metadata !14045, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 0, metadata !14047, metadata !DIExpression()), !dbg !14048
  %9 = ptrtoint i8* %7 to i32, !dbg !14053
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14054
  store i32 %9, i32* %10, align 4, !dbg !14055
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14056
  store i32 %5, i32* %11, align 4, !dbg !14057
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14058
  store i32 0, i32* %12, align 4, !dbg !14059
  call void @llvm.dbg.value(metadata i8* %8, metadata !14045, metadata !DIExpression()), !dbg !14048
  ret i8* %8, !dbg !14060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.265(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14061 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14065, metadata !DIExpression()), !dbg !14066
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14067
  ret i8* %2, !dbg !14068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14069 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14074, metadata !DIExpression()), !dbg !14075
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14076
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14079 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14081, metadata !DIExpression()), !dbg !14082
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14083
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14084
  ret void, !dbg !14085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14086 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14090, metadata !DIExpression()), !dbg !14091
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14092
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14093
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14094
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14095
  ret void, !dbg !14096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14102, metadata !DIExpression()), !dbg !14103
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14104
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14105
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14106
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14107
  ret void, !dbg !14108
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14109 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14126, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14117, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14118, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 %2, metadata !14119, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14120, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i8* %4, metadata !14121, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i8* %5, metadata !14122, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i8* %6, metadata !14123, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 %7, metadata !14124, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 %8, metadata !14125, metadata !DIExpression()), !dbg !14127
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14128, !srcloc !13824
  call void @llvm.dbg.value(metadata i32 %11, metadata !13820, metadata !DIExpression()) #23, !dbg !14133
  %12 = icmp eq i32 %11, 0, !dbg !14134
  br i1 %12, label %14, label %13, !dbg !14135

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 647) #25, !dbg !14136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.269, i32 0, i32 0)) #25, !dbg !14136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 647) #25, !dbg !14136
  unreachable, !dbg !14136

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14126, metadata !DIExpression()), !dbg !14127
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14138
  %17 = icmp eq i64 %15, -1, !dbg !14139
  br i1 %17, label %19, label %18, !dbg !14141

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14142
  br label %19, !dbg !14144

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14146 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14151, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14150, metadata !DIExpression()), !dbg !14152
  %4 = icmp eq i64 %3, 0, !dbg !14153
  br i1 %4, label %5, label %6, !dbg !14155

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.270(%struct.k_thread* noundef %0) #24, !dbg !14156
  br label %7, !dbg !14158

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14159
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.270(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14166, metadata !DIExpression()), !dbg !14167
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14168, !srcloc !14170
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14171
  ret void, !dbg !14172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14173 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14176, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14175, metadata !DIExpression()), !dbg !14177
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14178
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14179
  ret void, !dbg !14180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14183, metadata !DIExpression()), !dbg !14203
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14204

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 750) #25, !dbg !14208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.274, i32 0, i32 0)) #25, !dbg !14208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 750) #25, !dbg !14208
  unreachable, !dbg !14208

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14183, metadata !DIExpression()), !dbg !14203
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14211
  br i1 %4, label %6, label %5, !dbg !14212

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14213
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14201, metadata !DIExpression()), !dbg !14214
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14215

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14219
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14219
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14221
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14221
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14222
  %12 = load i32, i32* %11, align 4, !dbg !14222
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14223
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14223
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14224
  %16 = load i8*, i8** %15, align 4, !dbg !14224
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14225
  %18 = load i8*, i8** %17, align 4, !dbg !14225
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14226
  %20 = load i8*, i8** %19, align 4, !dbg !14226
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14227
  %22 = load i32, i32* %21, align 4, !dbg !14227
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14228
  %24 = load i32, i32* %23, align 4, !dbg !14228
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14229
  %26 = load i8*, i8** %25, align 4, !dbg !14229
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14230
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14231
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14232
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14233
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14233
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14234
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14183, metadata !DIExpression()), !dbg !14203
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14235
  br i1 %32, label %1, label %2, !dbg !14204, !llvm.loop !14236

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 781) #25, !dbg !14238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.274, i32 0, i32 0)) #25, !dbg !14238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 781) #25, !dbg !14238
  unreachable, !dbg !14238

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14201, metadata !DIExpression()), !dbg !14214
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14241
  br i1 %36, label %38, label %37, !dbg !14242

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14243
  ret void, !dbg !14244

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14245
  %40 = load i32, i32* %39, align 4, !dbg !14245
  %41 = icmp eq i32 %40, -1, !dbg !14248
  br i1 %41, label %50, label %42, !dbg !14249

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14250
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14250
  %45 = icmp sgt i32 %40, 0, !dbg !14252
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14252
  %47 = zext i32 %46 to i64, !dbg !14252
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14252
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14253
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14253
  br label %50, !dbg !14254

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14255
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14201, metadata !DIExpression()), !dbg !14214
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14256
  br i1 %52, label %33, label %34, !dbg !14215, !llvm.loop !14257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14259 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14263, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i64 %0, metadata !14265, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i32 1000, metadata !14268, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i32 10000, metadata !14269, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 1, metadata !14270, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 0, metadata !14271, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 1, metadata !14272, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 0, metadata !14273, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 1, metadata !14274, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8 0, metadata !14275, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i64 0, metadata !14276, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i64 0, metadata !14276, metadata !DIExpression()), !dbg !14280
  %2 = mul i64 %0, 10, !dbg !14282
  ret i64 %2, !dbg !14288
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14289 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14291, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i8* %1, metadata !14292, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i8* %2, metadata !14293, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i8* %3, metadata !14294, metadata !DIExpression()), !dbg !14295
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14296
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14297
  %7 = load i8, i8* %6, align 4, !dbg !14298
  %8 = or i8 %7, 4, !dbg !14298
  store i8 %8, i8* %6, align 4, !dbg !14298
  tail call void @z_thread_essential_clear() #24, !dbg !14299
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14300
  unreachable, !dbg !14300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14306, metadata !DIExpression()), !dbg !14308
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14309
  %3 = load i32, i32* %2, align 4, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %3, metadata !14307, metadata !DIExpression()), !dbg !14308
  %4 = icmp eq i32 %3, 0, !dbg !14310
  br i1 %4, label %10, label %5, !dbg !14312

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14313
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14316
  %8 = zext i8 %7 to i32, !dbg !14317
  %9 = icmp eq i32 %6, %8, !dbg !14318
  br i1 %9, label %11, label %10, !dbg !14319

10:                                               ; preds = %5, %1
  br label %11, !dbg !14320

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14308
  ret i1 %12, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14326
  %3 = load i32, i32* %2, align 4, !dbg !14326
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14328
  %5 = zext i8 %4 to i32, !dbg !14329
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14330
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14331
  %8 = or i32 %7, %5, !dbg !14332
  %9 = icmp eq i32 %3, %8, !dbg !14333
  br i1 %9, label %10, label %11, !dbg !14334

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14335
  br label %11, !dbg !14336

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14342, metadata !DIExpression()), !dbg !14343
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14344
  %3 = zext i8 %2 to i32, !dbg !14345
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14346
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14347
  %6 = or i32 %5, %3, !dbg !14348
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14349
  store i32 %6, i32* %7, align 4, !dbg !14350
  ret void, !dbg !14351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14356, metadata !DIExpression()), !dbg !14357
  ret i32 -134, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14363, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 %1, metadata !14364, metadata !DIExpression()), !dbg !14365
  ret i32 -134, !dbg !14366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14375, metadata !DIExpression()), !dbg !14376
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14377
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14379
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14376
  ret i32 %6, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14381 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14385, metadata !DIExpression()), !dbg !14386
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14387
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14386
  ret i32 %3, !dbg !14389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14390 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14396, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i8* %1, metadata !14397, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i8* %2, metadata !14398, metadata !DIExpression()), !dbg !14399
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14400
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14400
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14400
  %7 = load i8, i8* %6, align 2, !dbg !14400
  %8 = icmp sgt i8 %7, -1, !dbg !14400
  br i1 %8, label %10, label %9, !dbg !14403

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.285, i32 0, i32 0), i32 noundef 39) #25, !dbg !14404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.285, i32 0, i32 0), i32 noundef 39) #25, !dbg !14404
  unreachable, !dbg !14404

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14406, !srcloc !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !14414
  call void @llvm.dbg.value(metadata i32 undef, metadata !14410, metadata !DIExpression()) #23, !dbg !14414
  tail call fastcc void @k_cpu_idle() #24, !dbg !14415
  br label %10, !dbg !14416, !llvm.loop !14417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14419 {
  tail call void @arch_cpu_idle() #25, !dbg !14420
  ret void, !dbg !14421
}

; Function Attrs: optsize
declare !dbg !14422 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14427, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14428, metadata !DIExpression()), !dbg !14431
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14432
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14432
  %5 = load i8, i8* %4, align 2, !dbg !14432
  call void @llvm.dbg.value(metadata i8 %5, metadata !14429, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14431
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14433
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14433
  %8 = load i8, i8* %7, align 2, !dbg !14433
  call void @llvm.dbg.value(metadata i8 %8, metadata !14430, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14431
  %9 = icmp eq i8 %8, %5, !dbg !14434
  %10 = sext i8 %5 to i32, !dbg !14436
  %11 = sext i8 %8 to i32, !dbg !14436
  %12 = sub nsw i32 %11, %10, !dbg !14436
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14436
  ret i32 %13, !dbg !14437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14442, metadata !DIExpression()), !dbg !14443
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14444
  %3 = icmp eq i32 %2, 0, !dbg !14446
  br i1 %3, label %8, label %4, !dbg !14447

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14448
  %6 = add i32 %5, %2, !dbg !14450
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14451
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14452
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14453
  br label %8, !dbg !14454

8:                                                ; preds = %4, %1
  ret void, !dbg !14455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14460, metadata !DIExpression()), !dbg !14462
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %1, metadata !14461, metadata !DIExpression()), !dbg !14462
  ret i32 %1, !dbg !14464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14469, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.value(metadata i32 %1, metadata !14470, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.value(metadata i32 0, metadata !14471, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !14487
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14489, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14487
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14497
  br i1 %4, label %6, label %5, !dbg !14500

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14501
  unreachable, !dbg !14501

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14477, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()), !dbg !14479
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14504
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14507
  %8 = icmp sgt i32 %0, 0, !dbg !14508
  %9 = icmp sgt i32 %7, 2, !dbg !14510
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14510
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14510
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14511
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14512
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14513
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !14520
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14522
  br i1 %12, label %14, label %13, !dbg !14525

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14526
  unreachable, !dbg !14526

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14489
  call void @llvm.dbg.value(metadata i32 %15, metadata !14492, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata i32 %15, metadata !14486, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 %15, metadata !14477, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !14531
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14533, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !14471, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()), !dbg !14479
  ret void, !dbg !14535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14538, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i32 %0, metadata !14540, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14555
  call void @llvm.dbg.value(metadata i32 1000, metadata !14543, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i32 10000, metadata !14544, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i8 1, metadata !14545, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i1 true, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14555
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14555
  call void @llvm.dbg.value(metadata i8 0, metadata !14548, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i1 true, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14555
  call void @llvm.dbg.value(metadata i1 false, metadata !14550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14555
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !14555
  %2 = mul i32 %0, 10, !dbg !14557
  ret i32 %2, !dbg !14563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14566, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !14569
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14571, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14569
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14574
  br i1 %3, label %5, label %4, !dbg !14575

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14576
  unreachable, !dbg !14576

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %6, metadata !14492, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !14569
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %6, metadata !14567, metadata !DIExpression()), !dbg !14568
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14578
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14580
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14581
  br i1 %9, label %10, label %14, !dbg !14582

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14583
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !14585
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14587
  br i1 %11, label %13, label %12, !dbg !14588

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14589
  unreachable, !dbg !14589

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !14590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14592, !srcloc !14534
  br label %33, !dbg !14593

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14594
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14595
  %16 = icmp eq i32 %15, 0, !dbg !14595
  br i1 %16, label %27, label %17, !dbg !14597

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14598
  br i1 %18, label %19, label %27, !dbg !14599

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14600
  %21 = icmp sgt i32 %20, %0, !dbg !14603
  br i1 %21, label %25, label %22, !dbg !14604

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14605
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14605
  call void @llvm.dbg.value(metadata i32 %24, metadata !14567, metadata !DIExpression()), !dbg !14568
  br label %28, !dbg !14607

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14608
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14608
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14610
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14568
  call void @llvm.dbg.value(metadata i32 %29, metadata !14567, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !14612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !14612
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14614
  br i1 %30, label %32, label %31, !dbg !14615

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14616
  unreachable, !dbg !14616

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14514, metadata !DIExpression()) #23, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %29, metadata !14528, metadata !DIExpression()) #23, !dbg !14617
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14619, !srcloc !14534
  br label %33, !dbg !14620

33:                                               ; preds = %32, %13
  ret void, !dbg !14620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14625, metadata !DIExpression()), !dbg !14627
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14628
  %3 = icmp eq i32 %2, 0, !dbg !14628
  br i1 %3, label %16, label %4, !dbg !14629

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14630
  br i1 %5, label %16, label %6, !dbg !14631

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14632
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14632
  %9 = load i8, i8* %8, align 2, !dbg !14632
  %10 = sext i8 %9 to i32, !dbg !14633
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14634
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14635
  br i1 %12, label %16, label %13, !dbg !14636

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14637
  %15 = xor i1 %14, true, !dbg !14638
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14627
  call void @llvm.dbg.value(metadata i1 %17, metadata !14626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14627
  ret i1 %17, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14640 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14644, metadata !DIExpression()), !dbg !14646
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14645, metadata !DIExpression()), !dbg !14646
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14648
  br i1 %3, label %5, label %4, !dbg !14650

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14651
  br label %5, !dbg !14653

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14644, metadata !DIExpression()), !dbg !14646
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14654
  ret i32 %6, !dbg !14655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14658, metadata !DIExpression()), !dbg !14660
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14661
  %3 = load i8, i8* %2, align 1, !dbg !14661
  call void @llvm.dbg.value(metadata i8 %3, metadata !14659, metadata !DIExpression()), !dbg !14660
  %4 = and i8 %3, 31, !dbg !14662
  %5 = icmp ne i8 %4, 0, !dbg !14663
  ret i1 %5, !dbg !14664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14667, metadata !DIExpression()), !dbg !14668
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14669
  br i1 %2, label %3, label %7, !dbg !14671

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !14675
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14678
  %5 = load i8, i8* %4, align 1, !dbg !14679
  %6 = and i8 %5, 127, !dbg !14679
  store i8 %6, i8* %4, align 1, !dbg !14679
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !14683
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14687
  br label %7, !dbg !14688

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #23, !dbg !14692
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14694
  %9 = load i8, i8* %8, align 1, !dbg !14695
  %10 = or i8 %9, -128, !dbg !14695
  store i8 %10, i8* %8, align 1, !dbg !14695
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14703, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14709, metadata !DIExpression()) #23, !dbg !14711
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14713
  br i1 %11, label %12, label %13, !dbg !14716

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !14717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !14717
  unreachable, !dbg !14717

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14719
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14710, metadata !DIExpression()) #23, !dbg !14711
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14721
  br i1 %15, label %26, label %16, !dbg !14719

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14710, metadata !DIExpression()) #23, !dbg !14711
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14723
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14710, metadata !DIExpression()) #23, !dbg !14711
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14724
  %20 = icmp sgt i32 %19, 0, !dbg !14727
  br i1 %20, label %21, label %23, !dbg !14728

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14729
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14731
  br label %28, !dbg !14732

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14721
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14710, metadata !DIExpression()) #23, !dbg !14711
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14721
  br i1 %25, label %26, label %16, !dbg !14719, !llvm.loop !14733

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14735
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14736
  br label %28, !dbg !14737

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14738
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14739
  %31 = zext i1 %30 to i32, !dbg !14739
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14740
  ret void, !dbg !14741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14744, metadata !DIExpression()), !dbg !14745
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14746
  ret i1 %2, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14750, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14751, metadata !DIExpression()), !dbg !14752
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14753
  br i1 %3, label %4, label %5, !dbg !14756

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14757
  unreachable, !dbg !14757

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14759
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14760
  ret void, !dbg !14761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14762 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14764, metadata !DIExpression()), !dbg !14765
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14766
  ret i1 %2, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14772, metadata !DIExpression()), !dbg !14773
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14774
  br i1 %2, label %6, label %3, !dbg !14774

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14775
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14775
  br label %6, !dbg !14774

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14774
  ret %struct._dnode* %7, !dbg !14776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14777 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14781, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14782, metadata !DIExpression()), !dbg !14785
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14786
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14786
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14783, metadata !DIExpression()), !dbg !14785
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14787
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14788
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14789
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14790
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14791
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14792
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14793
  ret void, !dbg !14794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14795 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14799, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14800, metadata !DIExpression()), !dbg !14801
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14802
  br i1 %3, label %6, label %4, !dbg !14803

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14804
  br label %6, !dbg !14803

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14803
  ret %struct._dnode* %7, !dbg !14805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14806 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14810, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14811, metadata !DIExpression()), !dbg !14813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14814
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14814
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14812, metadata !DIExpression()), !dbg !14813
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14815
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14816
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14817
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14818
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14819
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14820
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14821
  ret void, !dbg !14822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14825, metadata !DIExpression()), !dbg !14827
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14828
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14835, metadata !DIExpression()) #23, !dbg !14837
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14838
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14839
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14839
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14826, metadata !DIExpression()), !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14840, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 %0, metadata !14845, metadata !DIExpression()) #23, !dbg !14846
  %6 = icmp eq i32 %0, 0, !dbg !14849
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14851
  br i1 %6, label %8, label %18, !dbg !14852

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14853
  br i1 %9, label %10, label %11, !dbg !14856

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 137) #25, !dbg !14857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !14857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 137) #25, !dbg !14857
  unreachable, !dbg !14857

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14859
  br i1 %12, label %18, label %13, !dbg !14861

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14862
  br i1 %14, label %18, label %15, !dbg !14864

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14865
  %17 = icmp eq i32 %16, 0, !dbg !14865
  br i1 %17, label %21, label %18, !dbg !14867

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14868
  br i1 %19, label %21, label %20, !dbg !14871

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14872
  br label %21, !dbg !14874

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14851
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14851
  ret void, !dbg !14875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14880, metadata !DIExpression()), !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14881, metadata !DIExpression()), !dbg !14883
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14884
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14882, metadata !DIExpression()), !dbg !14883
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14881, metadata !DIExpression()), !dbg !14883
  ret %struct.k_thread* %3, !dbg !14885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14888, metadata !DIExpression()), !dbg !14889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14890
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14891
  %4 = xor i1 %3, true, !dbg !14892
  ret i1 %4, !dbg !14893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14896, metadata !DIExpression()), !dbg !14897
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14898
  %3 = load i16, i16* %2, align 2, !dbg !14898
  %4 = icmp ult i16 %3, 128, !dbg !14899
  %5 = zext i1 %4 to i32, !dbg !14899
  ret i32 %5, !dbg !14900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14901 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14907, metadata !DIExpression()), !dbg !14908
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14909
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14910
  %4 = xor i1 %3, true, !dbg !14911
  ret i1 %4, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14913 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14921
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14921
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14922
  ret i1 %4, !dbg !14923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14926, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14927, metadata !DIExpression()), !dbg !14928
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14929
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14929
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14930
  br i1 %5, label %9, label %6, !dbg !14931

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14932
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14932
  br label %9, !dbg !14931

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14931
  ret %struct._dnode* %10, !dbg !14933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14934 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14938, metadata !DIExpression()), !dbg !14939
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14940
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14940
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14941
  ret i1 %4, !dbg !14942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14943 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14947, metadata !DIExpression()), !dbg !14950
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14951
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14951
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14948, metadata !DIExpression()), !dbg !14950
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14952
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14952
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14949, metadata !DIExpression()), !dbg !14950
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14953
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14954
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14955
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14956
  tail call fastcc void @sys_dnode_init.296(%struct._dnode* noundef %0) #24, !dbg !14957
  ret void, !dbg !14958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.296(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14959 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14961, metadata !DIExpression()), !dbg !14962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14963
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14964
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14965
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14966
  ret void, !dbg !14967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14968 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()), !dbg !14974
  call void @llvm.dbg.value(metadata i32 %1, metadata !14973, metadata !DIExpression()), !dbg !14974
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14975
  %4 = load i8, i8* %3, align 1, !dbg !14975
  %5 = zext i8 %4 to i32, !dbg !14976
  %6 = and i32 %5, %1, !dbg !14977
  %7 = icmp ne i32 %6, 0, !dbg !14978
  ret i1 %7, !dbg !14979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14984, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata i32 %1, metadata !14985, metadata !DIExpression()), !dbg !14986
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14987
  ret i1 %3, !dbg !14988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14991, metadata !DIExpression()), !dbg !14993
  call void @llvm.dbg.value(metadata i32 %1, metadata !14992, metadata !DIExpression()), !dbg !14993
  %3 = icmp slt i32 %0, %1, !dbg !14994
  ret i1 %3, !dbg !14995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14998, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i32 0, metadata !14999, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15004
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15006, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15004
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15009
  br i1 %3, label %5, label %4, !dbg !15010

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15011
  unreachable, !dbg !15011

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15004
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15001, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14999, metadata !DIExpression()), !dbg !15003
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15018
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15020
  br i1 %6, label %8, label %7, !dbg !15021

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15022
  unreachable, !dbg !15022

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %9, metadata !14492, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 %9, metadata !15001, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15025, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !14999, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14999, metadata !DIExpression()), !dbg !15003
  ret void, !dbg !15026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15029, metadata !DIExpression()), !dbg !15030
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15031
  br i1 %2, label %27, label %3, !dbg !15033

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15034
  br i1 %4, label %5, label %27, !dbg !15035

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #23, !dbg !15036
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15039
  %7 = load i8, i8* %6, align 1, !dbg !15040
  %8 = or i8 %7, -128, !dbg !15040
  store i8 %8, i8* %6, align 1, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14703, metadata !DIExpression()) #23, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14709, metadata !DIExpression()) #23, !dbg !15043
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15045
  br i1 %9, label %10, label %11, !dbg !15046

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15047
  unreachable, !dbg !15047

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15048
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14710, metadata !DIExpression()) #23, !dbg !15043
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15049
  br i1 %13, label %24, label %14, !dbg !15048

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14710, metadata !DIExpression()) #23, !dbg !15043
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14710, metadata !DIExpression()) #23, !dbg !15043
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15051
  %18 = icmp sgt i32 %17, 0, !dbg !15052
  br i1 %18, label %19, label %21, !dbg !15053

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15054
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15055
  br label %26, !dbg !15056

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15049
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14710, metadata !DIExpression()) #23, !dbg !15043
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15049
  br i1 %23, label %24, label %14, !dbg !15048, !llvm.loop !15057

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15059
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15060
  br label %26, !dbg !15061

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15062
  br label %27, !dbg !15063

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15069
  br i1 %2, label %6, label %3, !dbg !15070

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15071
  %5 = xor i1 %4, true, !dbg !15070
  br label %6, !dbg !15070

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15075, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 0, metadata !15076, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15081
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15083, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15081
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15086
  br i1 %3, label %5, label %4, !dbg !15087

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15088
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15088
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15088
  unreachable, !dbg !15088

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15081
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15078, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i32 undef, metadata !15076, metadata !DIExpression()), !dbg !15080
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15093
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15095
  br i1 %6, label %8, label %7, !dbg !15096

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15097
  unreachable, !dbg !15097

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %9, metadata !14492, metadata !DIExpression()) #23, !dbg !15085
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %9, metadata !15078, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15093
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15098
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15100, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15076, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i32 undef, metadata !15076, metadata !DIExpression()), !dbg !15080
  ret void, !dbg !15101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15104, metadata !DIExpression()), !dbg !15106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15107
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15109, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15107
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15112
  br i1 %3, label %5, label %4, !dbg !15113

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15114
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15114
  unreachable, !dbg !15114

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15109
  call void @llvm.dbg.value(metadata i32 %6, metadata !14492, metadata !DIExpression()) #23, !dbg !15111
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !15107
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15115
  call void @llvm.dbg.value(metadata i32 %6, metadata !15105, metadata !DIExpression()), !dbg !15106
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15116
  br i1 %7, label %8, label %12, !dbg !15118

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15119
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15122
  br i1 %9, label %11, label %10, !dbg !15123

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15124
  unreachable, !dbg !15124

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !15125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15127, !srcloc !14534
  br label %14, !dbg !15128

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.301(%struct.k_thread* noundef %0) #24, !dbg !15129
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15130
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15131
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15131
  br label %14, !dbg !15132

14:                                               ; preds = %12, %11
  ret void, !dbg !15132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15135, metadata !DIExpression()), !dbg !15136
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15137
  %3 = load i8, i8* %2, align 1, !dbg !15137
  %4 = and i8 %3, 4, !dbg !15138
  %5 = icmp eq i8 %4, 0, !dbg !15139
  ret i1 %5, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.301(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15145
  %3 = load i8, i8* %2, align 1, !dbg !15146
  %4 = and i8 %3, -5, !dbg !15146
  store i8 %4, i8* %2, align 1, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15148 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15151, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15150, metadata !DIExpression()), !dbg !15152
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15153
  br i1 %4, label %5, label %12, !dbg !15155

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15156
  br i1 %6, label %7, label %12, !dbg !15157

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15163, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15167, metadata !DIExpression()) #23, !dbg !15172
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15174
  br i1 %8, label %10, label %9, !dbg !15177

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15178
  unreachable, !dbg !15178

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15158, metadata !DIExpression()) #23, !dbg !15164
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15180
  br label %16, !dbg !15181

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14519, metadata !DIExpression()) #23, !dbg !15182
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15185
  br i1 %13, label %15, label %14, !dbg !15186

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15187
  unreachable, !dbg !15187

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14514, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %3, metadata !14528, metadata !DIExpression()) #23, !dbg !15188
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15190, !srcloc !14534
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15196, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 %0, metadata !15198, metadata !DIExpression()), !dbg !15203
  %2 = icmp eq i32 %0, 0, !dbg !15205
  br i1 %2, label %3, label %6, !dbg !15206

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15207, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %4, metadata !15210, metadata !DIExpression()) #23, !dbg !15215
  %5 = icmp eq i32 %4, 0, !dbg !15216
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15197
  ret i1 %7, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15218 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15221
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15220, metadata !DIExpression()), !dbg !15222
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15223
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15224
  ret i1 %3, !dbg !15225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15228, metadata !DIExpression()), !dbg !15230
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15231
  call void @llvm.dbg.value(metadata i32 %2, metadata !15229, metadata !DIExpression()), !dbg !15230
  ret i32 %2, !dbg !15232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15235, metadata !DIExpression()), !dbg !15239
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 0, metadata !15236, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15242
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15244, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15246
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15246
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15242
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15247
  br i1 %4, label %6, label %5, !dbg !15248

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15249
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15249
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15249
  unreachable, !dbg !15249

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %7, metadata !14492, metadata !DIExpression()) #23, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %7, metadata !14486, metadata !DIExpression()) #23, !dbg !15242
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %7, metadata !15238, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()), !dbg !15241
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15251
  br i1 %8, label %9, label %13, !dbg !15255

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !15256
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15259
  %11 = load i8, i8* %10, align 1, !dbg !15260
  %12 = and i8 %11, 127, !dbg !15260
  store i8 %12, i8* %10, align 1, !dbg !15260
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !15261
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15263
  br label %13, !dbg !15264

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15265
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15266
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15267
  %16 = zext i1 %15 to i32, !dbg !15267
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15269
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15271
  br i1 %17, label %19, label %18, !dbg !15272

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15273
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15273
  unreachable, !dbg !15273

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14514, metadata !DIExpression()) #23, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %7, metadata !14528, metadata !DIExpression()) #23, !dbg !15274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15276, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15236, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()), !dbg !15241
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15277
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15279
  br i1 %21, label %22, label %23, !dbg !15280

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15281
  br label %23, !dbg !15283

23:                                               ; preds = %22, %19
  ret void, !dbg !15284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15287, metadata !DIExpression()), !dbg !15288
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15289
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15290
  ret i32 %3, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15296
  %3 = load i8, i8* %2, align 1, !dbg !15297
  %4 = or i8 %3, 16, !dbg !15297
  store i8 %4, i8* %2, align 1, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15299 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15300, !srcloc !14495
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %2, metadata !14492, metadata !DIExpression()) #23, !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15302
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15303
  ret void, !dbg !15304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15307, metadata !DIExpression()), !dbg !15308
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15309
  br i1 %2, label %3, label %5, !dbg !15311

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15312
  br label %6, !dbg !15314

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14528, metadata !DIExpression()) #23, !dbg !15315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15318, !srcloc !14534
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15322, metadata !DIExpression()), !dbg !15324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15325
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15327, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15325
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15330
  br i1 %3, label %5, label %4, !dbg !15331

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15332
  unreachable, !dbg !15332

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %6, metadata !14492, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !15325
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %6, metadata !15323, metadata !DIExpression()), !dbg !15324
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15334
  br i1 %7, label %12, label %8, !dbg !15336

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15337
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15340
  br i1 %9, label %11, label %10, !dbg !15341

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15342
  unreachable, !dbg !15342

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !15343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15345, !srcloc !14534
  br label %14, !dbg !15346

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15347
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15348
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15349
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15349
  br label %14, !dbg !15350

14:                                               ; preds = %12, %11
  ret void, !dbg !15350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15351 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15353, metadata !DIExpression()), !dbg !15354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15355
  %3 = load i8, i8* %2, align 1, !dbg !15355
  %4 = and i8 %3, 16, !dbg !15356
  %5 = icmp ne i8 %4, 0, !dbg !15357
  ret i1 %5, !dbg !15358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()), !dbg !15362
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15363
  %3 = load i8, i8* %2, align 1, !dbg !15364
  %4 = and i8 %3, -17, !dbg !15364
  store i8 %4, i8* %2, align 1, !dbg !15364
  ret void, !dbg !15365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15366 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15376, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15374, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15375, metadata !DIExpression()), !dbg !15380
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15381
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15381
  br i1 %5, label %9, label %6, !dbg !15381

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15381
  br i1 %7, label %9, label %8, !dbg !15384

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 773) #25, !dbg !15385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 773) #25, !dbg !15385
  unreachable, !dbg !15385

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15377, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15388
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15390, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15388
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15393
  br i1 %11, label %13, label %12, !dbg !15394

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15395
  unreachable, !dbg !15395

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15388
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15379, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !15377, metadata !DIExpression()), !dbg !15387
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15397
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15400
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15402
  br i1 %14, label %16, label %15, !dbg !15403

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15404
  unreachable, !dbg !15404

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15390
  call void @llvm.dbg.value(metadata i32 %17, metadata !14492, metadata !DIExpression()) #23, !dbg !15392
  call void @llvm.dbg.value(metadata i32 %17, metadata !14486, metadata !DIExpression()) #23, !dbg !15388
  call void @llvm.dbg.value(metadata i32 %17, metadata !15379, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15407, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15377, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !15377, metadata !DIExpression()), !dbg !15387
  ret void, !dbg !15408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15411, metadata !DIExpression()), !dbg !15412
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15413
  %3 = load i8, i8* %2, align 1, !dbg !15413
  %4 = and i8 %3, 1, !dbg !15414
  %5 = icmp ne i8 %4, 0, !dbg !15415
  ret i1 %5, !dbg !15416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15417 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15421, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15419, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15420, metadata !DIExpression()), !dbg !15422
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15423
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15424
  ret void, !dbg !15425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15430, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15431, metadata !DIExpression()), !dbg !15432
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15433
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15434
  %3 = icmp eq %union.anon* %1, null, !dbg !15435
  br i1 %3, label %24, label %4, !dbg !15437

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15438
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15440
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15441
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14703, metadata !DIExpression()) #23, !dbg !15442
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14709, metadata !DIExpression()) #23, !dbg !15442
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15444
  br i1 %7, label %8, label %9, !dbg !15445

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15446
  unreachable, !dbg !15446

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15447
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14710, metadata !DIExpression()) #23, !dbg !15442
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15448
  br i1 %11, label %22, label %12, !dbg !15447

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14710, metadata !DIExpression()) #23, !dbg !15442
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14710, metadata !DIExpression()) #23, !dbg !15442
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15450
  %16 = icmp sgt i32 %15, 0, !dbg !15451
  br i1 %16, label %17, label %19, !dbg !15452

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15453
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15454
  br label %24, !dbg !15455

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15448
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14710, metadata !DIExpression()) #23, !dbg !15442
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15448
  br i1 %21, label %22, label %12, !dbg !15447, !llvm.loop !15456

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15458
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15459
  br label %24, !dbg !15460

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15462 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15466, metadata !DIExpression()), !dbg !15468
  %4 = icmp eq i64 %3, -1, !dbg !15469
  br i1 %4, label %6, label %5, !dbg !15471

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15472
  br label %6, !dbg !15474

6:                                                ; preds = %5, %2
  ret void, !dbg !15475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15476 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15479, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15478, metadata !DIExpression()), !dbg !15480
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15481
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15482
  ret void, !dbg !15483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15484 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15486, metadata !DIExpression()), !dbg !15494
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15495
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15487, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.value(metadata i32 0, metadata !15488, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15497
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15499, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15497
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15502
  br i1 %5, label %7, label %6, !dbg !15503

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15504
  unreachable, !dbg !15504

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15497
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15490, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 undef, metadata !15488, metadata !DIExpression()), !dbg !15496
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15506
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15507
  %10 = load i8, i8* %9, align 1, !dbg !15507
  %11 = and i8 %10, 40, !dbg !15508
  %12 = icmp eq i8 %11, 0, !dbg !15508
  call void @llvm.dbg.value(metadata i1 %12, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15509
  br i1 %12, label %13, label %20, !dbg !15510

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15511
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15511
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15511
  %17 = icmp eq %union.anon* %16, null, !dbg !15515
  br i1 %17, label %19, label %18, !dbg !15516

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15517
  br label %19, !dbg !15519

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.301(%struct.k_thread* noundef nonnull %3) #24, !dbg !15520
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15521
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15522
  br label %20, !dbg !15523

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15524
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15526
  br i1 %21, label %23, label %22, !dbg !15527

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15528
  unreachable, !dbg !15528

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %24, metadata !14492, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %24, metadata !14486, metadata !DIExpression()) #23, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %24, metadata !15490, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15529
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15531, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15488, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 undef, metadata !15488, metadata !DIExpression()), !dbg !15496
  ret void, !dbg !15532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15535, metadata !DIExpression()), !dbg !15536
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15537
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15538
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15539
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15540
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15541
  ret void, !dbg !15542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15547, metadata !DIExpression()), !dbg !15548
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15549
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15549
  %4 = icmp eq %union.anon* %3, null, !dbg !15549
  br i1 %4, label %5, label %6, !dbg !15552

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 726) #25, !dbg !15553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 726) #25, !dbg !15553
  unreachable, !dbg !15553

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15558, metadata !DIExpression()), !dbg !15559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15560
  %3 = load i8, i8* %2, align 1, !dbg !15561
  %4 = and i8 %3, -3, !dbg !15561
  store i8 %4, i8* %2, align 1, !dbg !15561
  ret void, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15565, metadata !DIExpression()), !dbg !15566
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15567
  br i1 %2, label %3, label %7, !dbg !15569

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !15570
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15573
  %5 = load i8, i8* %4, align 1, !dbg !15574
  %6 = and i8 %5, 127, !dbg !15574
  store i8 %6, i8* %4, align 1, !dbg !15574
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !15575
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15577
  br label %7, !dbg !15578

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15579
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15580
  %10 = zext i1 %9 to i32, !dbg !15580
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15581
  ret void, !dbg !15582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15585, metadata !DIExpression()), !dbg !15586
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15587
  %3 = load i8, i8* %2, align 1, !dbg !15588
  %4 = or i8 %3, 2, !dbg !15588
  store i8 %4, i8* %2, align 1, !dbg !15588
  ret void, !dbg !15589
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i32 0, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15598
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15600, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15598
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15603
  br i1 %3, label %5, label %4, !dbg !15604

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15605
  unreachable, !dbg !15605

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15598
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15606
  call void @llvm.dbg.value(metadata i32 undef, metadata !15595, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15593, metadata !DIExpression()), !dbg !15597
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15610
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15612
  br i1 %6, label %8, label %7, !dbg !15613

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15614
  unreachable, !dbg !15614

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15600
  call void @llvm.dbg.value(metadata i32 %9, metadata !14492, metadata !DIExpression()) #23, !dbg !15602
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %9, metadata !15595, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15617, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15593, metadata !DIExpression()), !dbg !15597
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15619 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15625, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 %0, metadata !15623, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15624, metadata !DIExpression()), !dbg !15630
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15631
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15632
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15633
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15634
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %6, metadata !15626, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 0, metadata !15627, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15637
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15639, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15637
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15642
  br i1 %8, label %10, label %9, !dbg !15643

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15644
  unreachable, !dbg !15644

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15637
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !15629, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()), !dbg !15636
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15646
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15650
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15651
  br i1 %13, label %14, label %15, !dbg !15652

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15653
  br label %15, !dbg !15655

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15656
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15658
  br i1 %16, label %18, label %17, !dbg !15659

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15660
  unreachable, !dbg !15660

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %19, metadata !14492, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 %19, metadata !14486, metadata !DIExpression()) #23, !dbg !15637
  call void @llvm.dbg.value(metadata i32 %19, metadata !15629, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15663, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15627, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()), !dbg !15636
  ret i32 %6, !dbg !15664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15665 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15670, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i64 undef, metadata !15672, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15669, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15671, metadata !DIExpression()), !dbg !15673
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15674
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15675
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15676
  br i1 %6, label %7, label %8, !dbg !15679

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 846) #25, !dbg !15680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 846) #25, !dbg !15680
  unreachable, !dbg !15680

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15682
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15684, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15682
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15687
  br i1 %10, label %12, label %11, !dbg !15688

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15689
  unreachable, !dbg !15689

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15682
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15690
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15691
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15167, metadata !DIExpression()) #23, !dbg !15693
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15695
  br i1 %14, label %16, label %15, !dbg !15696

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15697
  unreachable, !dbg !15697

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15163, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15167, metadata !DIExpression()) #23, !dbg !15700
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15702
  br i1 %17, label %19, label %18, !dbg !15703

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15704
  unreachable, !dbg !15704

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15158, metadata !DIExpression()) #23, !dbg !15698
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15705
  ret i32 %21, !dbg !15706
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15707 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15711, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15712, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.value(metadata i32 0, metadata !15713, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15718
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15720, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15718
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15723
  br i1 %3, label %5, label %4, !dbg !15724

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15725
  unreachable, !dbg !15725

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15718
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15726
  call void @llvm.dbg.value(metadata i32 undef, metadata !15715, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15712, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !15713, metadata !DIExpression()), !dbg !15717
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15727
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15712, metadata !DIExpression()), !dbg !15716
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15730
  br i1 %8, label %10, label %9, !dbg !15732

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15733
  br label %10, !dbg !15735

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15736
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15738
  br i1 %11, label %13, label %12, !dbg !15739

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15740
  unreachable, !dbg !15740

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15720
  call void @llvm.dbg.value(metadata i32 %14, metadata !14492, metadata !DIExpression()) #23, !dbg !15722
  call void @llvm.dbg.value(metadata i32 %14, metadata !14486, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 %14, metadata !15715, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15743, !srcloc !14534
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15712, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !15713, metadata !DIExpression()), !dbg !15717
  ret %struct.k_thread* %7, !dbg !15744
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15745 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15747, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15748, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata i32 0, metadata !15749, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15754
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15756, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15754
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15759
  br i1 %3, label %5, label %4, !dbg !15760

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15761
  unreachable, !dbg !15761

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15754
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !15751, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15748, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15749, metadata !DIExpression()), !dbg !15753
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15748, metadata !DIExpression()), !dbg !15752
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15766
  br i1 %8, label %11, label %9, !dbg !15768

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15769
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15771
  br label %11, !dbg !15772

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15773
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15775
  br i1 %12, label %14, label %13, !dbg !15776

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15777
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15777
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15777
  unreachable, !dbg !15777

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15756
  call void @llvm.dbg.value(metadata i32 %15, metadata !14492, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata i32 %15, metadata !14486, metadata !DIExpression()) #23, !dbg !15754
  call void @llvm.dbg.value(metadata i32 %15, metadata !15751, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15778
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15780, !srcloc !14534
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15748, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15749, metadata !DIExpression()), !dbg !15753
  ret %struct.k_thread* %7, !dbg !15781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15784, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 0, metadata !15593, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15789
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15791, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15789
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15794
  br i1 %3, label %5, label %4, !dbg !15795

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15796
  unreachable, !dbg !15796

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15789
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15595, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !15593, metadata !DIExpression()) #23, !dbg !15788
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15799
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15801
  br i1 %6, label %8, label %7, !dbg !15802

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15803
  unreachable, !dbg !15803

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %9, metadata !14492, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15789
  call void @llvm.dbg.value(metadata i32 %9, metadata !15595, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15806, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15593, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !15593, metadata !DIExpression()) #23, !dbg !15788
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15807
  ret void, !dbg !15808
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15811, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 %1, metadata !15812, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i8 0, metadata !15813, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 0, metadata !15814, metadata !DIExpression()), !dbg !15818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15819
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15821, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15819
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15824
  br i1 %4, label %6, label %5, !dbg !15825

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15826
  unreachable, !dbg !15826

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15819
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15816, metadata !DIExpression()), !dbg !15818
  call void @llvm.dbg.value(metadata i8 poison, metadata !15813, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()), !dbg !15818
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15828
  call void @llvm.dbg.value(metadata i1 %9, metadata !15813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15817
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15831

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !15832
  %14 = load i8, i8* %7, align 1, !dbg !15838
  %15 = and i8 %14, 127, !dbg !15838
  store i8 %15, i8* %7, align 1, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !15839
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15841
  store i8 %12, i8* %11, align 2, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #23, !dbg !15843
  %16 = load i8, i8* %7, align 1, !dbg !15845
  %17 = or i8 %16, -128, !dbg !15845
  store i8 %17, i8* %7, align 1, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()) #23, !dbg !15846
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14703, metadata !DIExpression()) #23, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14709, metadata !DIExpression()) #23, !dbg !15848
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15850
  br i1 %18, label %19, label %20, !dbg !15851

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15852
  unreachable, !dbg !15852

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15853
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14710, metadata !DIExpression()) #23, !dbg !15848
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15854
  br i1 %22, label %32, label %23, !dbg !15853

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14710, metadata !DIExpression()) #23, !dbg !15848
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14710, metadata !DIExpression()) #23, !dbg !15848
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15856
  %27 = icmp sgt i32 %26, 0, !dbg !15857
  br i1 %27, label %28, label %29, !dbg !15858

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15859
  br label %33, !dbg !15860

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15854
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14710, metadata !DIExpression()) #23, !dbg !15848
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15854
  br i1 %31, label %32, label %23, !dbg !15853, !llvm.loop !15861

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15863
  br label %33, !dbg !15864

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15865
  br label %35, !dbg !15866

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15867
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15869
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15871
  br i1 %36, label %38, label %37, !dbg !15872

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15873
  unreachable, !dbg !15873

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %39, metadata !14492, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 %39, metadata !14486, metadata !DIExpression()) #23, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %39, metadata !15816, metadata !DIExpression()), !dbg !15818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15874
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15876, !srcloc !14534
  call void @llvm.dbg.value(metadata i8 poison, metadata !15813, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()), !dbg !15818
  ret i1 %9, !dbg !15877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i32 %1, metadata !15883, metadata !DIExpression()), !dbg !15885
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15886
  call void @llvm.dbg.value(metadata i1 %3, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15885
  br i1 %3, label %4, label %12, !dbg !15887

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15889
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15890
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15890
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15890
  %9 = load i8, i8* %8, align 1, !dbg !15890
  %10 = icmp eq i8 %9, 0, !dbg !15891
  br i1 %10, label %11, label %12, !dbg !15892

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15893
  br label %12, !dbg !15895

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15897 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15899, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15903
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15905, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15903
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15908
  br i1 %2, label %4, label %3, !dbg !15909

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15910
  unreachable, !dbg !15910

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15903
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15901, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !15899, metadata !DIExpression()), !dbg !15902
  tail call fastcc void @z_sched_lock() #24, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15915
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15917
  br i1 %5, label %7, label %6, !dbg !15918

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15919
  unreachable, !dbg !15919

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %8, metadata !14492, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %8, metadata !14486, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %8, metadata !15901, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15922, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15899, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !15899, metadata !DIExpression()), !dbg !15902
  ret void, !dbg !15923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15924 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15925, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %1, metadata !15210, metadata !DIExpression()) #23, !dbg !15930
  %2 = icmp eq i32 %1, 0, !dbg !15931
  br i1 %2, label %4, label %3, !dbg !15932

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 253) #25, !dbg !15933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 253) #25, !dbg !15933
  unreachable, !dbg !15933

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15935
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15935
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15935
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15935
  %9 = load i8, i8* %8, align 1, !dbg !15935
  %10 = icmp eq i8 %9, 1, !dbg !15935
  br i1 %10, label %11, label %12, !dbg !15938

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 254) #25, !dbg !15939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 254) #25, !dbg !15939
  unreachable, !dbg !15939

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15941
  store i8 %13, i8* %8, align 1, !dbg !15941
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15942, !srcloc !15944
  ret void, !dbg !15945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15946 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15948, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !15952
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15954, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15952
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15957
  br i1 %2, label %4, label %3, !dbg !15958

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15959
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15959
  unreachable, !dbg !15959

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15952
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15951
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15961
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15961
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15961
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15961
  %9 = load i8, i8* %8, align 1, !dbg !15961
  %10 = icmp eq i8 %9, 0, !dbg !15961
  br i1 %10, label %11, label %12, !dbg !15966

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 999) #25, !dbg !15967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 999) #25, !dbg !15967
  unreachable, !dbg !15967

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15969, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %13, metadata !15210, metadata !DIExpression()) #23, !dbg !15974
  %14 = icmp eq i32 %13, 0, !dbg !15975
  br i1 %14, label %16, label %15, !dbg !15976

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15977
  unreachable, !dbg !15977

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15979
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15980
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15980
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15980
  %21 = load i8, i8* %20, align 1, !dbg !15981
  %22 = add i8 %21, 1, !dbg !15981
  store i8 %22, i8* %20, align 1, !dbg !15981
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !15983
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15985
  br i1 %23, label %25, label %24, !dbg !15986

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15987
  unreachable, !dbg !15987

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %26, metadata !14492, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata i32 %26, metadata !14486, metadata !DIExpression()) #23, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %26, metadata !15950, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !15988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15990, !srcloc !14534
  call void @llvm.dbg.value(metadata i32 1, metadata !15948, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15951
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15991
  ret void, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15993 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15994
  ret %struct.k_thread* %1, !dbg !15995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15996 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16000, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16001, metadata !DIExpression()), !dbg !16005
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16006
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16002, metadata !DIExpression()), !dbg !16005
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16003, metadata !DIExpression()), !dbg !16005
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %5, metadata !16004, metadata !DIExpression()), !dbg !16005
  %6 = icmp sgt i32 %5, 0, !dbg !16009
  br i1 %6, label %17, label %7, !dbg !16011

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16012
  br i1 %8, label %17, label %9, !dbg !16014

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16015
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16015
  %12 = load i32, i32* %11, align 8, !dbg !16015
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16017
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16017
  %15 = load i32, i32* %14, align 8, !dbg !16017
  %16 = icmp ult i32 %12, %15, !dbg !16018
  br label %17, !dbg !16019

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16020
  ret i1 %18, !dbg !16021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16022 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16039, metadata !DIExpression()), !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16040, metadata !DIExpression()), !dbg !16054
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16055
  br i1 %4, label %5, label %6, !dbg !16058

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16059
  unreachable, !dbg !16059

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16061
  %8 = load i32, i32* %7, align 4, !dbg !16062
  %9 = add nsw i32 %8, 1, !dbg !16062
  store i32 %9, i32* %7, align 4, !dbg !16062
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16063
  store i32 %8, i32* %10, align 8, !dbg !16064
  %11 = load i32, i32* %7, align 4, !dbg !16065
  %12 = icmp eq i32 %11, 0, !dbg !16066
  br i1 %12, label %13, label %35, !dbg !16067

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16068
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16068
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16042, metadata !DIExpression()), !dbg !16068
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16068
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16068
  %17 = load i32, i32* %16, align 4, !dbg !16068
  %18 = shl i32 %17, 2, !dbg !16068
  %19 = alloca i8, i32 %18, align 8, !dbg !16068
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16068
  store i8* %19, i8** %20, align 4, !dbg !16068
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16068
  %22 = alloca i8, i32 %17, align 8, !dbg !16068
  store i8* %22, i8** %21, align 4, !dbg !16068
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16068
  store i32 -1, i32* %23, align 4, !dbg !16068
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16051, metadata !DIExpression()), !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16041, metadata !DIExpression()), !dbg !16054
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16071
  br i1 %25, label %26, label %27, !dbg !16068

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16071
  br label %35, !dbg !16072

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16041, metadata !DIExpression()), !dbg !16054
  %29 = load i32, i32* %7, align 4, !dbg !16073
  %30 = add nsw i32 %29, 1, !dbg !16073
  store i32 %30, i32* %7, align 4, !dbg !16073
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16075
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16075
  store i32 %29, i32* %32, align 8, !dbg !16076
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16051, metadata !DIExpression()), !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16041, metadata !DIExpression()), !dbg !16054
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16071
  br i1 %34, label %26, label %27, !dbg !16068, !llvm.loop !16077

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16079
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16080
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16081
  ret void, !dbg !16082
}

; Function Attrs: optsize
declare !dbg !16083 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16088 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16093, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16094, metadata !DIExpression()), !dbg !16095
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16096
  br i1 %3, label %4, label %5, !dbg !16099

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16100
  unreachable, !dbg !16100

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16102
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16103
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16104
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16105
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16105
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16107
  br i1 %10, label %11, label %13, !dbg !16108

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16109
  store i32 0, i32* %12, align 4, !dbg !16111
  br label %13, !dbg !16112

13:                                               ; preds = %11, %5
  ret void, !dbg !16113
}

; Function Attrs: optsize
declare !dbg !16114 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16119, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16120, metadata !DIExpression()), !dbg !16122
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16123
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16124
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16121, metadata !DIExpression()), !dbg !16122
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16120, metadata !DIExpression()), !dbg !16122
  ret %struct.k_thread* %4, !dbg !16125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16126 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16130, metadata !DIExpression()), !dbg !16131
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16132
  ret %struct.rbnode* %2, !dbg !16133
}

; Function Attrs: optsize
declare !dbg !16134 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16137 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16147, metadata !DIExpression()), !dbg !16151
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16152
  %3 = load i32, i32* %2, align 4, !dbg !16152
  %4 = icmp eq i32 %3, 0, !dbg !16154
  br i1 %4, label %10, label %5, !dbg !16155

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16148, metadata !DIExpression()), !dbg !16151
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16156, !range !7473
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16157
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16149, metadata !DIExpression()), !dbg !16151
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16158
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16150, metadata !DIExpression()), !dbg !16151
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16148, metadata !DIExpression()), !dbg !16151
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16151
  ret %struct.k_thread* %11, !dbg !16159
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16160 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16164, metadata !DIExpression()), !dbg !16167
  call void @llvm.dbg.value(metadata i32 0, metadata !16165, metadata !DIExpression()), !dbg !16167
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16166, metadata !DIExpression()), !dbg !16167
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16169
  br i1 %3, label %8, label %4, !dbg !16170

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16171
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16173
  call void @llvm.dbg.value(metadata i32 1, metadata !16165, metadata !DIExpression()), !dbg !16167
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16166, metadata !DIExpression()), !dbg !16167
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16169
  br i1 %7, label %8, label %4, !dbg !16170, !llvm.loop !16174

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16167
  ret i32 %9, !dbg !16176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16177 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16181
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16182
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16183
  ret %struct.k_thread* %4, !dbg !16184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16185 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16194, metadata !DIExpression()), !dbg !16195
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16196
  tail call fastcc void @sys_dlist_init.316(%struct._dnode* noundef nonnull %2) #24, !dbg !16197
  ret void, !dbg !16198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.316(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16199 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16203, metadata !DIExpression()), !dbg !16204
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16205
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16206
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16207
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16210 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16211
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16212
  ret void, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16219, metadata !DIExpression()), !dbg !16220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16221
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16221
  %4 = load i8, i8* %3, align 2, !dbg !16221
  %5 = sext i8 %4 to i32, !dbg !16222
  ret i32 %5, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16228, metadata !DIExpression()), !dbg !16231
  call void @llvm.dbg.value(metadata i32 %1, metadata !16229, metadata !DIExpression()), !dbg !16231
  %3 = add i32 %1, 16, !dbg !16232
  %4 = icmp ult i32 %3, 31, !dbg !16232
  br i1 %4, label %6, label %5, !dbg !16232

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.320, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16236
  unreachable, !dbg !16236

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16238, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %7, metadata !15210, metadata !DIExpression()) #23, !dbg !16243
  %8 = icmp eq i32 %7, 0, !dbg !16244
  br i1 %8, label %10, label %9, !dbg !16245

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16246
  unreachable, !dbg !16246

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16230, metadata !DIExpression()), !dbg !16231
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16248
  ret void, !dbg !16249
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16250 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16251
  br i1 %1, label %8, label %2, !dbg !16252

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16253
  br i1 %3, label %8, label %4, !dbg !16254

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16255
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16256
  %7 = xor i1 %6, true, !dbg !16254
  br label %8, !dbg !16254

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16258 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16259, !range !6636
  %2 = icmp eq i8 %1, 0, !dbg !16259
  ret i1 %2, !dbg !16260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16261 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16264, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %1, metadata !15210, metadata !DIExpression()) #23, !dbg !16269
  %2 = icmp eq i32 %1, 0, !dbg !16270
  br i1 %2, label %4, label %3, !dbg !16271

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16272
  unreachable, !dbg !16272

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !16274
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16276, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16274
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16279
  br i1 %6, label %8, label %7, !dbg !16280

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16281
  unreachable, !dbg !16281

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16274
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()), !dbg !16283
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14672, metadata !DIExpression()) #23, !dbg !16287
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16289
  %11 = load i8, i8* %10, align 1, !dbg !16290
  %12 = and i8 %11, 127, !dbg !16290
  store i8 %12, i8* %10, align 1, !dbg !16290
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14680, metadata !DIExpression()) #23, !dbg !16291
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16293
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16294
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14689, metadata !DIExpression()) #23, !dbg !16295
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16297
  %15 = load i8, i8* %14, align 1, !dbg !16298
  %16 = or i8 %15, -128, !dbg !16298
  store i8 %16, i8* %14, align 1, !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14696, metadata !DIExpression()) #23, !dbg !16299
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14703, metadata !DIExpression()) #23, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14709, metadata !DIExpression()) #23, !dbg !16301
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16303
  br i1 %17, label %18, label %19, !dbg !16304

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !16305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !16305
  unreachable, !dbg !16305

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16306
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14710, metadata !DIExpression()) #23, !dbg !16301
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16307
  br i1 %21, label %32, label %22, !dbg !16306

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14710, metadata !DIExpression()) #23, !dbg !16301
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14710, metadata !DIExpression()) #23, !dbg !16301
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16309
  %26 = icmp sgt i32 %25, 0, !dbg !16310
  br i1 %26, label %27, label %29, !dbg !16311

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16312
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16313
  br label %34, !dbg !16314

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16307
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14710, metadata !DIExpression()) #23, !dbg !16301
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16307
  br i1 %31, label %32, label %22, !dbg !16306, !llvm.loop !16315

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16317
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16318
  br label %34, !dbg !16319

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15163, metadata !DIExpression()) #23, !dbg !16321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15167, metadata !DIExpression()) #23, !dbg !16323
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16325
  br i1 %35, label %37, label %36, !dbg !16326

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16327
  unreachable, !dbg !16327

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16276
  call void @llvm.dbg.value(metadata i32 %38, metadata !14492, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %38, metadata !14486, metadata !DIExpression()) #23, !dbg !16274
  call void @llvm.dbg.value(metadata i32 %38, metadata !16263, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16321
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16328
  ret void, !dbg !16329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16330 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16334, metadata !DIExpression()), !dbg !16337
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16338, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %3, metadata !15210, metadata !DIExpression()) #23, !dbg !16343
  %4 = icmp eq i32 %3, 0, !dbg !16344
  br i1 %4, label %6, label %5, !dbg !16345

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16346
  unreachable, !dbg !16346

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16348
  br i1 %7, label %8, label %10, !dbg !16350

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16351
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16353
  br label %15, !dbg !16354

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16335, metadata !DIExpression()), !dbg !16337
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16355
  %12 = sext i32 %11 to i64, !dbg !16355
  call void @llvm.dbg.value(metadata i64 %12, metadata !16335, metadata !DIExpression()), !dbg !16337
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16356
  %14 = trunc i64 %13 to i32, !dbg !16356
  call void @llvm.dbg.value(metadata i32 %14, metadata !16336, metadata !DIExpression()), !dbg !16337
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16337
  ret i32 %16, !dbg !16357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16362, metadata !DIExpression()), !dbg !16363
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16364, !srcloc !16366
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16367
  ret void, !dbg !16368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16369 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16373, metadata !DIExpression()), !dbg !16377
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16378, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %2, metadata !15210, metadata !DIExpression()) #23, !dbg !16383
  %3 = icmp eq i32 %2, 0, !dbg !16384
  br i1 %3, label %5, label %4, !dbg !16385

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16386
  unreachable, !dbg !16386

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16388
  br i1 %6, label %7, label %8, !dbg !16390

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16391
  br label %43, !dbg !16393

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16375, metadata !DIExpression()), !dbg !16377
  %9 = icmp sgt i64 %0, -3, !dbg !16394
  br i1 %9, label %10, label %14, !dbg !16396

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16397
  %12 = trunc i64 %0 to i32, !dbg !16399
  %13 = add i32 %11, %12, !dbg !16399
  call void @llvm.dbg.value(metadata i32 %13, metadata !16374, metadata !DIExpression()), !dbg !16377
  br label %17, !dbg !16400

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16401
  %16 = sub i32 -2, %15, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %16, metadata !16374, metadata !DIExpression()), !dbg !16377
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16403
  call void @llvm.dbg.value(metadata i32 %18, metadata !16374, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !16404
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16406, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16404
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16409
  br i1 %20, label %22, label %21, !dbg !16410

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16411
  unreachable, !dbg !16411

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16404
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16412
  call void @llvm.dbg.value(metadata i32 undef, metadata !16376, metadata !DIExpression()), !dbg !16377
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16413
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16414
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16415
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16416
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16417
  tail call fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16417
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16418
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15163, metadata !DIExpression()) #23, !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15167, metadata !DIExpression()) #23, !dbg !16422
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16424
  br i1 %27, label %29, label %28, !dbg !16425

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16426
  unreachable, !dbg !16426

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16406
  call void @llvm.dbg.value(metadata i32 %30, metadata !14492, metadata !DIExpression()) #23, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %30, metadata !14486, metadata !DIExpression()) #23, !dbg !16404
  call void @llvm.dbg.value(metadata i32 %30, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16420
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16427
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16428
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16428
  br i1 %33, label %34, label %35, !dbg !16431

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16432
  unreachable, !dbg !16432

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16434
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16435
  %38 = zext i32 %37 to i64, !dbg !16435
  %39 = sub nsw i64 %36, %38, !dbg !16436
  call void @llvm.dbg.value(metadata i64 %39, metadata !16373, metadata !DIExpression()), !dbg !16377
  %40 = icmp sgt i64 %39, 0, !dbg !16437
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16437
  %42 = trunc i64 %41 to i32, !dbg !16437
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16377
  ret i32 %44, !dbg !16438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16439 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16441, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i64 %0, metadata !14540, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i32 10000, metadata !14543, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i32 1000, metadata !14544, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i8 1, metadata !14545, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16443
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16443
  call void @llvm.dbg.value(metadata i8 0, metadata !14548, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i1 false, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16443
  call void @llvm.dbg.value(metadata i1 true, metadata !14550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16443
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i64 %0, metadata !14540, metadata !DIExpression()), !dbg !16443
  %2 = udiv i64 %0, 10, !dbg !16445
  ret i64 %2, !dbg !16449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16450 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16451, !srcloc !16453
  tail call void @z_impl_k_yield() #24, !dbg !16454
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16460, metadata !DIExpression()), !dbg !16462
  %2 = sext i32 %0 to i64, !dbg !16463
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16464
  call void @llvm.dbg.value(metadata i64 %3, metadata !16461, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16462
  %4 = shl i64 %3, 32, !dbg !16465
  %5 = ashr exact i64 %4, 32, !dbg !16465
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16466
  call void @llvm.dbg.value(metadata i32 %6, metadata !16461, metadata !DIExpression()), !dbg !16462
  %7 = sext i32 %6 to i64, !dbg !16467
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16468
  %9 = trunc i64 %8 to i32, !dbg !16468
  ret i32 %9, !dbg !16469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16470 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16472, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i64 %0, metadata !14540, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14543, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 10000, metadata !14544, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i8 1, metadata !14545, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16474
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16474
  call void @llvm.dbg.value(metadata i8 0, metadata !14548, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i1 false, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16474
  call void @llvm.dbg.value(metadata i1 true, metadata !14550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16474
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16474
  %2 = add i64 %0, 99, !dbg !16476
  call void @llvm.dbg.value(metadata i64 %2, metadata !14540, metadata !DIExpression()), !dbg !16474
  %3 = udiv i64 %2, 100, !dbg !16477
  ret i64 %3, !dbg !16478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16479 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i64 %0, metadata !14540, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 10000, metadata !14543, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14544, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i8 1, metadata !14545, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16483
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16483
  call void @llvm.dbg.value(metadata i8 0, metadata !14548, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i1 true, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16483
  call void @llvm.dbg.value(metadata i1 false, metadata !14550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16483
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i64 0, metadata !14551, metadata !DIExpression()), !dbg !16483
  %2 = mul i64 %0, 100, !dbg !16485
  ret i64 %2, !dbg !16487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16490, metadata !DIExpression()), !dbg !16491
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16492
  br i1 %2, label %14, label %3, !dbg !16494

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16495
  %5 = icmp slt i32 %4, 0, !dbg !16497
  br i1 %5, label %6, label %10, !dbg !16498

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16499
  %8 = load i8, i8* %7, align 1, !dbg !16499
  %9 = icmp eq i8 %8, 16, !dbg !16502
  br i1 %9, label %10, label %14, !dbg !16503

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16504
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16505
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16506, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %11, metadata !15210, metadata !DIExpression()) #23, !dbg !16510
  %12 = icmp eq i32 %11, 0, !dbg !16511
  br i1 %12, label %13, label %14, !dbg !16512

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16513
  br label %14, !dbg !16515

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16519, metadata !DIExpression()), !dbg !16520
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16521
  %3 = load i8, i8* %2, align 1, !dbg !16521
  %4 = and i8 %3, 2, !dbg !16522
  %5 = icmp ne i8 %4, 0, !dbg !16523
  ret i1 %5, !dbg !16524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16525 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16530
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16529, metadata !DIExpression()), !dbg !16531
  ret %struct.k_thread* %1, !dbg !16532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16533 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16534, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %1, metadata !15210, metadata !DIExpression()) #23, !dbg !16537
  %2 = icmp eq i32 %1, 0, !dbg !16538
  br i1 %2, label %3, label %8, !dbg !16539

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16540
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16541
  %6 = icmp ne i32 %5, 0, !dbg !16539
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16545, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !16548
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16550, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16548
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16553
  br i1 %3, label %5, label %4, !dbg !16554

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16555
  unreachable, !dbg !16555

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16550
  call void @llvm.dbg.value(metadata i32 %6, metadata !14492, metadata !DIExpression()) #23, !dbg !16552
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !16548
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()), !dbg !16547
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16557
  %8 = load i8, i8* %7, align 4, !dbg !16557
  %9 = and i8 %8, 1, !dbg !16559
  %10 = icmp eq i8 %9, 0, !dbg !16560
  br i1 %10, label %15, label %11, !dbg !16561

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !16562
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16565
  br i1 %12, label %14, label %13, !dbg !16566

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16567
  unreachable, !dbg !16567

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !16568
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16570, !srcloc !14534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.327, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16571
  unreachable, !dbg !16571

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16575
  %17 = load i8, i8* %16, align 1, !dbg !16575
  %18 = and i8 %17, 8, !dbg !16577
  %19 = icmp eq i8 %18, 0, !dbg !16578
  br i1 %19, label %24, label %20, !dbg !16579

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !16580
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16583
  br i1 %21, label %23, label %22, !dbg !16584

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16585
  unreachable, !dbg !16585

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !16586
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16588, !srcloc !14534
  br label %39, !dbg !16589

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16590
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16591
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16593
  br i1 %26, label %27, label %35, !dbg !16594

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16595, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %28, metadata !15210, metadata !DIExpression()) #23, !dbg !16598
  %29 = icmp eq i32 %28, 0, !dbg !16599
  br i1 %29, label %30, label %35, !dbg !16600

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15163, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15167, metadata !DIExpression()) #23, !dbg !16604
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16606
  br i1 %31, label %33, label %32, !dbg !16607

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16608
  unreachable, !dbg !16608

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15158, metadata !DIExpression()) #23, !dbg !16601
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.328, i32 0, i32 0)) #25, !dbg !16610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16610
  unreachable, !dbg !16610

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !16614
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16616
  br i1 %36, label %38, label %37, !dbg !16617

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16618
  unreachable, !dbg !16618

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14514, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %6, metadata !14528, metadata !DIExpression()) #23, !dbg !16619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16621, !srcloc !14534
  br label %39, !dbg !16622

39:                                               ; preds = %38, %23
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16625, metadata !DIExpression()), !dbg !16626
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16627
  %3 = load i8, i8* %2, align 1, !dbg !16627
  %4 = and i8 %3, 8, !dbg !16629
  %5 = icmp eq i8 %4, 0, !dbg !16630
  br i1 %5, label %6, label %20, !dbg !16631

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16632
  %8 = or i8 %7, 8, !dbg !16632
  store i8 %8, i8* %2, align 1, !dbg !16632
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16634
  br i1 %9, label %10, label %12, !dbg !16636

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !16637
  %11 = and i8 %8, 95, !dbg !16640
  store i8 %11, i8* %2, align 1, !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !16641
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16643
  br label %12, !dbg !16644

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16645
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16645
  %15 = icmp eq %union.anon* %14, null, !dbg !16647
  br i1 %15, label %17, label %16, !dbg !16648

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16649
  br label %17, !dbg !16651

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16652
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16653
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16654
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16655
  br label %20, !dbg !16656

20:                                               ; preds = %17, %1
  ret void, !dbg !16657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16658 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16662, metadata !DIExpression()), !dbg !16664
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16665
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16663, metadata !DIExpression()), !dbg !16664
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16666
  br i1 %3, label %10, label %4, !dbg !16667

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16668
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16670
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16671, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 0, metadata !16676, metadata !DIExpression()), !dbg !16677
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16679
  store i32 0, i32* %7, align 4, !dbg !16680
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16681
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16665
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16663, metadata !DIExpression()), !dbg !16664
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16666
  br i1 %9, label %10, label %4, !dbg !16667, !llvm.loop !16682

10:                                               ; preds = %4, %1
  ret void, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16685 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16690, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16689, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !16694
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16696, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16694
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16699
  br i1 %4, label %6, label %5, !dbg !16700

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16701
  unreachable, !dbg !16701

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %7, metadata !14492, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %7, metadata !14486, metadata !DIExpression()) #23, !dbg !16694
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16702
  call void @llvm.dbg.value(metadata i32 %7, metadata !16691, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16693
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16703
  %9 = load i8, i8* %8, align 1, !dbg !16703
  %10 = and i8 %9, 8, !dbg !16705
  %11 = icmp eq i8 %10, 0, !dbg !16706
  br i1 %11, label %12, label %35, !dbg !16707

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16690, metadata !DIExpression()), !dbg !16693
  %14 = icmp eq i64 %13, 0, !dbg !16708
  br i1 %14, label %35, label %15, !dbg !16710

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16711
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16713
  br i1 %17, label %35, label %18, !dbg !16714

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16715
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16715
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16716
  %22 = icmp eq %union.anon* %20, %21, !dbg !16717
  br i1 %22, label %35, label %23, !dbg !16718

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16719, !srcloc !15214
  call void @llvm.dbg.value(metadata i32 %24, metadata !15210, metadata !DIExpression()) #23, !dbg !16725
  %25 = icmp eq i32 %24, 0, !dbg !16726
  br i1 %25, label %27, label %26, !dbg !16727

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.331, i32 0, i32 0)) #25, !dbg !16728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16728
  unreachable, !dbg !16728

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16730
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16731
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16732
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16733
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15163, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15167, metadata !DIExpression()) #23, !dbg !16737
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16739
  br i1 %31, label %33, label %32, !dbg !16740

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16741
  unreachable, !dbg !16741

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15158, metadata !DIExpression()) #23, !dbg !16735
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %34, metadata !16692, metadata !DIExpression()), !dbg !16693
  br label %40, !dbg !16743

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16744
  call void @llvm.dbg.value(metadata i32 %36, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !16745
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16747
  br i1 %37, label %39, label %38, !dbg !16748

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16749
  unreachable, !dbg !16749

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14514, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %7, metadata !14528, metadata !DIExpression()) #23, !dbg !16750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16752, !srcloc !14534
  br label %40, !dbg !16753

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16693
  ret i32 %41, !dbg !16754
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16755 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16759, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 %1, metadata !16760, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i8* %2, metadata !16761, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i8 0, metadata !16763, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 0, metadata !16764, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14480, metadata !DIExpression()) #23, !dbg !16769
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16771, !srcloc !14495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16769
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16774
  br i1 %5, label %7, label %6, !dbg !16775

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16776
  unreachable, !dbg !16776

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16766, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i8 poison, metadata !16763, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16764, metadata !DIExpression()), !dbg !16768
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16778
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16762, metadata !DIExpression()), !dbg !16767
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16781
  br i1 %10, label %15, label %11, !dbg !16783

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16784, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i32 %1, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i8* %2, metadata !16791, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16671, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.value(metadata i32 %1, metadata !16676, metadata !DIExpression()), !dbg !16795
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16797
  store i32 %1, i32* %12, align 4, !dbg !16798
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16799
  store i8* %2, i8** %13, align 4, !dbg !16800
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16801
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16802
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16803
  call void @llvm.dbg.value(metadata i8 1, metadata !16763, metadata !DIExpression()), !dbg !16767
  br label %15, !dbg !16804

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16763, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14519, metadata !DIExpression()) #23, !dbg !16805
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16807
  br i1 %16, label %18, label %17, !dbg !16808

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16809
  unreachable, !dbg !16809

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16767
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16771
  call void @llvm.dbg.value(metadata i32 %20, metadata !14492, metadata !DIExpression()) #23, !dbg !16773
  call void @llvm.dbg.value(metadata i32 %20, metadata !14486, metadata !DIExpression()) #23, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %20, metadata !16766, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !14514, metadata !DIExpression()) #23, !dbg !16805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !16810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16812, !srcloc !14534
  call void @llvm.dbg.value(metadata i8 poison, metadata !16763, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16764, metadata !DIExpression()), !dbg !16768
  ret i1 %19, !dbg !16813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16814 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16820, metadata !DIExpression()), !dbg !16825
  call void @llvm.dbg.value(metadata i64 undef, metadata !16822, metadata !DIExpression()), !dbg !16825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16819, metadata !DIExpression()), !dbg !16825
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16821, metadata !DIExpression()), !dbg !16825
  call void @llvm.dbg.value(metadata i8** %4, metadata !16823, metadata !DIExpression()), !dbg !16825
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16826
  call void @llvm.dbg.value(metadata i32 %6, metadata !16824, metadata !DIExpression()), !dbg !16825
  %7 = icmp eq i8** %4, null, !dbg !16827
  br i1 %7, label %12, label %8, !dbg !16829

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16830
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16832
  %11 = load i8*, i8** %10, align 4, !dbg !16832
  store i8* %11, i8** %4, align 4, !dbg !16833
  br label %12, !dbg !16834

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16836 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16838
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16839
  ret void, !dbg !16840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16841 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16851, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16849, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16850, metadata !DIExpression()), !dbg !16868
  %5 = icmp eq i64 %4, -1, !dbg !16869
  br i1 %5, label %63, label %6, !dbg !16871

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16872
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %7) #24, !dbg !16872
  br i1 %8, label %9, label %10, !dbg !16875

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 99) #25, !dbg !16876
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.340, i32 0, i32 0)) #25, !dbg !16876
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 99) #25, !dbg !16876
  unreachable, !dbg !16876

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16878
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16879
  call void @llvm.dbg.value(metadata i32 0, metadata !16852, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !16888
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16890, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !16897
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !16897
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !16888
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16898
  br i1 %13, label %15, label %14, !dbg !16901

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !16902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !16902
  unreachable, !dbg !16902

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16890
  call void @llvm.dbg.value(metadata i32 %16, metadata !16893, metadata !DIExpression()) #23, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %16, metadata !16887, metadata !DIExpression()) #23, !dbg !16888
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16904
  call void @llvm.dbg.value(metadata i32 %16, metadata !16858, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()), !dbg !16880
  %17 = icmp slt i64 %4, -1, !dbg !16905
  br i1 %17, label %18, label %24, !dbg !16906

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16907
  %20 = add i64 %4, %19, !dbg !16908
  %21 = sub i64 -2, %20, !dbg !16908
  call void @llvm.dbg.value(metadata i64 %21, metadata !16862, metadata !DIExpression()), !dbg !16909
  %22 = icmp sgt i64 %21, 1, !dbg !16910
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16910
  br label %29, !dbg !16911

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16912
  %26 = tail call fastcc i32 @elapsed.344() #24, !dbg !16914
  %27 = sext i32 %26 to i64, !dbg !16914
  %28 = add nsw i64 %25, %27, !dbg !16915
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16916
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16917
  store i64 %30, i64* %31, align 8, !dbg !16918
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16919
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16859, metadata !DIExpression()), !dbg !16921
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16922
  br i1 %33, label %48, label %34, !dbg !16922

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16923
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16859, metadata !DIExpression()), !dbg !16921
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16927
  %38 = load i64, i64* %37, align 8, !dbg !16927
  %39 = icmp slt i64 %35, %38, !dbg !16928
  br i1 %39, label %40, label %44, !dbg !16929

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16927
  %42 = sub nsw i64 %38, %35, !dbg !16930
  store i64 %42, i64* %41, align 8, !dbg !16930
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16932
  tail call fastcc void @sys_dlist_insert.345(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16933
  br label %49, !dbg !16934

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16935
  store i64 %45, i64* %31, align 8, !dbg !16935
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16936
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16859, metadata !DIExpression()), !dbg !16921
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16922
  br i1 %47, label %48, label %34, !dbg !16922, !llvm.loop !16937

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.346(%struct._dnode* noundef nonnull %7) #24, !dbg !16939
  br label %49, !dbg !16942

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16943
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16944
  br i1 %51, label %52, label %59, !dbg !16945

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16946
  call void @llvm.dbg.value(metadata i32 %53, metadata !16865, metadata !DIExpression()), !dbg !16947
  %54 = icmp ne i32 %53, 0, !dbg !16948
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16950
  br i1 %57, label %59, label %58, !dbg !16950

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16951
  br label %59, !dbg !16953

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !16960
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16962
  br i1 %60, label %62, label %61, !dbg !16965

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !16966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !16966
  unreachable, !dbg !16966

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16954, metadata !DIExpression()) #23, !dbg !16960
  call void @llvm.dbg.value(metadata i32 %16, metadata !16968, metadata !DIExpression()) #23, !dbg !16971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16973, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()), !dbg !16880
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16976 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16982, metadata !DIExpression()), !dbg !16983
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16984
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16984
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16985
  ret i1 %4, !dbg !16986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.344() unnamed_addr #1 !dbg !16987 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16990
  %2 = icmp eq i32 %1, 0, !dbg !16991
  br i1 %2, label %3, label %5, !dbg !16990

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16992
  br label %5, !dbg !16990

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16990
  ret i32 %6, !dbg !16993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16994 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.351() #24, !dbg !17000
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16998, metadata !DIExpression()), !dbg !17001
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17002
  ret %struct._timeout* %2, !dbg !17003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.345(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17008, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17009, metadata !DIExpression()), !dbg !17012
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17013
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17013
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17010, metadata !DIExpression()), !dbg !17012
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17014
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17015
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17016
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17017
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17018
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17019
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17020
  ret void, !dbg !17021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17022 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17026, metadata !DIExpression()), !dbg !17028
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17029
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.349(%struct._dnode* noundef %2) #24, !dbg !17030
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17027, metadata !DIExpression()), !dbg !17028
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17031
  ret %struct._timeout* %4, !dbg !17032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.346(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17033 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17038, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17039, metadata !DIExpression()), !dbg !17041
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17042
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17040, metadata !DIExpression()), !dbg !17041
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17043
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17044
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17045
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17046
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17047
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17048
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17049
  ret void, !dbg !17050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17051 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17056
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17053, metadata !DIExpression()), !dbg !17057
  %2 = tail call fastcc i32 @elapsed.344() #24, !dbg !17058
  call void @llvm.dbg.value(metadata i32 %2, metadata !17054, metadata !DIExpression()), !dbg !17057
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17059
  br i1 %3, label %14, label %4, !dbg !17061

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17062
  %6 = load i64, i64* %5, align 8, !dbg !17062
  %7 = sext i32 %2 to i64, !dbg !17063
  %8 = sub nsw i64 %6, %7, !dbg !17064
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17065
  br i1 %9, label %14, label %10, !dbg !17066

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17067
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17067
  %13 = trunc i64 %12 to i32, !dbg !17067
  call void @llvm.dbg.value(metadata i32 %13, metadata !17055, metadata !DIExpression()), !dbg !17057
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17069
  call void @llvm.dbg.value(metadata i32 %15, metadata !17055, metadata !DIExpression()), !dbg !17057
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17070
  %17 = icmp ne i32 %16, 0, !dbg !17072
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17073
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %20, metadata !17055, metadata !DIExpression()), !dbg !17057
  ret i32 %20, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.349(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17079, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17080, metadata !DIExpression()), !dbg !17081
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17082
  br i1 %2, label %5, label %3, !dbg !17083

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.350(%struct._dnode* noundef nonnull %0) #24, !dbg !17084
  br label %5, !dbg !17083

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17083
  ret %struct._dnode* %6, !dbg !17085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.350(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17086 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17088, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17089, metadata !DIExpression()), !dbg !17090
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17091
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17092
  br i1 %3, label %7, label %4, !dbg !17093

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17094
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17094
  br label %7, !dbg !17093

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17093
  ret %struct._dnode* %8, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.351() unnamed_addr #8 !dbg !17096 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17100, metadata !DIExpression()), !dbg !17101
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.352() #24, !dbg !17102
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17102
  ret %struct._dnode* %3, !dbg !17103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.352() unnamed_addr #8 !dbg !17104 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17108, metadata !DIExpression()), !dbg !17109
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17110
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17111
  ret i1 %2, !dbg !17112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17113 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17117, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 -22, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 0, metadata !17119, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17124
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17126, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17124
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  br i1 %3, label %5, label %4, !dbg !17130

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17131
  unreachable, !dbg !17131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17124
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17121, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata i32 -22, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17119, metadata !DIExpression()), !dbg !17123
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17118, metadata !DIExpression()), !dbg !17122
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %6) #24, !dbg !17133
  br i1 %7, label %8, label %9, !dbg !17137

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17138
  call void @llvm.dbg.value(metadata i32 0, metadata !17118, metadata !DIExpression()), !dbg !17122
  br label %9, !dbg !17140

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17122
  call void @llvm.dbg.value(metadata i32 %10, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17141
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17143
  br i1 %11, label %13, label %12, !dbg !17144

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17145
  unreachable, !dbg !17145

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %14, metadata !16893, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 %14, metadata !16887, metadata !DIExpression()) #23, !dbg !17124
  call void @llvm.dbg.value(metadata i32 %14, metadata !17121, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17148, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 %10, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17119, metadata !DIExpression()), !dbg !17123
  ret i32 %10, !dbg !17149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17150 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17152, metadata !DIExpression()), !dbg !17153
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17154
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17156
  br i1 %3, label %10, label %4, !dbg !17157

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17158
  %6 = load i64, i64* %5, align 8, !dbg !17158
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17160
  %8 = load i64, i64* %7, align 8, !dbg !17161
  %9 = add nsw i64 %8, %6, !dbg !17161
  store i64 %9, i64* %7, align 8, !dbg !17161
  br label %10, !dbg !17162

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17163
  tail call fastcc void @sys_dlist_remove.355(%struct._dnode* noundef %11) #24, !dbg !17164
  ret void, !dbg !17165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.355(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17170, metadata !DIExpression()), !dbg !17173
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17174
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17174
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17171, metadata !DIExpression()), !dbg !17173
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17175
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17172, metadata !DIExpression()), !dbg !17173
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17176
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17177
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17178
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17179
  tail call fastcc void @sys_dnode_init.356(%struct._dnode* noundef %0) #24, !dbg !17180
  ret void, !dbg !17181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.356(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17182 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17184, metadata !DIExpression()), !dbg !17185
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17186
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17187
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17188
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17189
  ret void, !dbg !17190
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17191 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17197, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i64 0, metadata !17198, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i32 0, metadata !17199, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17204
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17206, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17204
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17209
  br i1 %3, label %5, label %4, !dbg !17210

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17211
  unreachable, !dbg !17211

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17204
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !17201, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i64 0, metadata !17198, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !17199, metadata !DIExpression()), !dbg !17203
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17213
  call void @llvm.dbg.value(metadata i64 %6, metadata !17198, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17216
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17218
  br i1 %7, label %9, label %8, !dbg !17219

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17220
  unreachable, !dbg !17220

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17206
  call void @llvm.dbg.value(metadata i32 %10, metadata !16893, metadata !DIExpression()) #23, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %10, metadata !16887, metadata !DIExpression()) #23, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %10, metadata !17201, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17223, !srcloc !16974
  call void @llvm.dbg.value(metadata i64 %6, metadata !17198, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !17199, metadata !DIExpression()), !dbg !17203
  ret i64 %6, !dbg !17224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17225 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17227, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata i64 0, metadata !17228, metadata !DIExpression()), !dbg !17231
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.357(%struct._timeout* noundef %0) #24, !dbg !17232
  br i1 %2, label %21, label %3, !dbg !17234

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17235
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17229, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i64 0, metadata !17228, metadata !DIExpression()), !dbg !17231
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17237
  br i1 %5, label %16, label %6, !dbg !17239

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17229, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i64 %8, metadata !17228, metadata !DIExpression()), !dbg !17231
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17240
  %10 = load i64, i64* %9, align 8, !dbg !17240
  %11 = add nsw i64 %10, %8, !dbg !17242
  call void @llvm.dbg.value(metadata i64 %11, metadata !17228, metadata !DIExpression()), !dbg !17231
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17243
  br i1 %12, label %16, label %13, !dbg !17245

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17246
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17229, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i64 %11, metadata !17228, metadata !DIExpression()), !dbg !17231
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17237
  br i1 %15, label %16, label %6, !dbg !17239, !llvm.loop !17247

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17231
  call void @llvm.dbg.value(metadata i64 %17, metadata !17228, metadata !DIExpression()), !dbg !17231
  %18 = tail call fastcc i32 @elapsed.344() #24, !dbg !17249
  %19 = sext i32 %18 to i64, !dbg !17249
  %20 = sub nsw i64 %17, %19, !dbg !17250
  br label %21, !dbg !17251

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17231
  ret i64 %22, !dbg !17252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.357(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17253 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17257, metadata !DIExpression()), !dbg !17258
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17259
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %2) #24, !dbg !17260
  %4 = xor i1 %3, true, !dbg !17261
  ret i1 %4, !dbg !17262
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17263 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17265, metadata !DIExpression()), !dbg !17270
  call void @llvm.dbg.value(metadata i64 0, metadata !17266, metadata !DIExpression()), !dbg !17270
  call void @llvm.dbg.value(metadata i32 0, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17272
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17274, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17272
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17277
  br i1 %3, label %5, label %4, !dbg !17278

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17279
  unreachable, !dbg !17279

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17272
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !17269, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i64 0, metadata !17266, metadata !DIExpression()), !dbg !17270
  call void @llvm.dbg.value(metadata i32 undef, metadata !17267, metadata !DIExpression()), !dbg !17271
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17281
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17284
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17266, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17285
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  br i1 %8, label %10, label %9, !dbg !17288

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17289
  unreachable, !dbg !17289

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %11, metadata !16893, metadata !DIExpression()) #23, !dbg !17276
  call void @llvm.dbg.value(metadata i32 %11, metadata !16887, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %11, metadata !17269, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17266, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17292, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 undef, metadata !17267, metadata !DIExpression()), !dbg !17271
  %12 = add i64 %7, %6, !dbg !17293
  ret i64 %12, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17295 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 0, metadata !17298, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17303
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17305, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17303
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17308
  br i1 %2, label %4, label %3, !dbg !17309

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17310
  unreachable, !dbg !17310

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17303
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 undef, metadata !17300, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 -1, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17302
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %5, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17315
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17317
  br i1 %6, label %8, label %7, !dbg !17318

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17319
  unreachable, !dbg !17319

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %9, metadata !16893, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %9, metadata !16887, metadata !DIExpression()) #23, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %9, metadata !17300, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17322, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 %5, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17302
  ret i32 %5, !dbg !17323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17326, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i1 %1, metadata !17327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17336
  call void @llvm.dbg.value(metadata i32 0, metadata !17328, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17338
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17340, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17338
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  br i1 %4, label %6, label %5, !dbg !17344

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17345
  unreachable, !dbg !17345

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17338
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17330, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !17328, metadata !DIExpression()), !dbg !17337
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17347
  call void @llvm.dbg.value(metadata i32 %7, metadata !17331, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i1 undef, metadata !17334, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  %8 = icmp slt i32 %7, 2, !dbg !17349
  call void @llvm.dbg.value(metadata i1 %8, metadata !17335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17350
  call void @llvm.dbg.value(metadata i1 %9, metadata !17334, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17348
  br i1 %10, label %14, label %11, !dbg !17350

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17352
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17352
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17354
  br label %14, !dbg !17355

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17356
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17358
  br i1 %15, label %17, label %16, !dbg !17359

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17360
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17360
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17360
  unreachable, !dbg !17360

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17340
  call void @llvm.dbg.value(metadata i32 %18, metadata !16893, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %18, metadata !16887, metadata !DIExpression()) #23, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %18, metadata !17330, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17361
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17363, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 1, metadata !17328, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !17328, metadata !DIExpression()), !dbg !17337
  ret void, !dbg !17364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17369, metadata !DIExpression()), !dbg !17374
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17376
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17378, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17380
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17380
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17376
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17381
  br i1 %3, label %5, label %4, !dbg !17382

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17383
  unreachable, !dbg !17383

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17380
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17376
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17384
  call void @llvm.dbg.value(metadata i32 undef, metadata !17370, metadata !DIExpression()), !dbg !17374
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17374
  call void @llvm.dbg.value(metadata i32 undef, metadata !17370, metadata !DIExpression()), !dbg !17374
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17385
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17386
  br i1 %7, label %37, label %8, !dbg !17387

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17374
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17388
  %14 = load i64, i64* %13, align 8, !dbg !17388
  %15 = sext i32 %11 to i64, !dbg !17389
  %16 = icmp sgt i64 %14, %15, !dbg !17390
  br i1 %16, label %35, label %17, !dbg !17391

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17371, metadata !DIExpression()), !dbg !17392
  %18 = trunc i64 %14 to i32, !dbg !17393
  call void @llvm.dbg.value(metadata i32 %18, metadata !17373, metadata !DIExpression()), !dbg !17392
  %19 = sext i32 %18 to i64, !dbg !17394
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17395
  %21 = add i64 %20, %19, !dbg !17395
  store i64 %21, i64* @curr_tick, align 8, !dbg !17395
  store i64 0, i64* %13, align 8, !dbg !17396
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17398
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17400
  br i1 %22, label %24, label %23, !dbg !17401

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17402
  unreachable, !dbg !17402

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16954, metadata !DIExpression()) #23, !dbg !17398
  call void @llvm.dbg.value(metadata i32 %12, metadata !16968, metadata !DIExpression()) #23, !dbg !17403
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17405, !srcloc !16974
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17406
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17406
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17408
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17410, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17412
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17412
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17408
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17413
  br i1 %28, label %30, label %29, !dbg !17414

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17415
  unreachable, !dbg !17415

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17412
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17408
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !17370, metadata !DIExpression()), !dbg !17374
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17417
  %32 = sub nsw i32 %31, %18, !dbg !17417
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17374
  call void @llvm.dbg.value(metadata i32 undef, metadata !17370, metadata !DIExpression()), !dbg !17374
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17385
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17386
  br i1 %34, label %37, label %8, !dbg !17387, !llvm.loop !17418

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17420
  store i64 %36, i64* %13, align 8, !dbg !17420
  br label %41, !dbg !17423

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17374
  %40 = sext i32 %39 to i64, !dbg !17424
  br label %41, !dbg !17424

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17424
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17425
  %45 = add i64 %44, %42, !dbg !17425
  store i64 %45, i64* @curr_tick, align 8, !dbg !17425
  store i32 0, i32* @announce_remaining, align 4, !dbg !17426
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17427
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17429
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  br i1 %47, label %49, label %48, !dbg !17432

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17433
  unreachable, !dbg !17433

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17374
  call void @llvm.dbg.value(metadata i32 %50, metadata !16954, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata i32 %50, metadata !16968, metadata !DIExpression()) #23, !dbg !17434
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17436, !srcloc !16974
  ret void, !dbg !17437
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17438 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17442, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata i32 0, metadata !17443, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16881, metadata !DIExpression()) #23, !dbg !17448
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17450, !srcloc !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16894, metadata !DIExpression()) #23, !dbg !17452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17448
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17453
  br i1 %2, label %4, label %3, !dbg !17454

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17455
  unreachable, !dbg !17455

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16893, metadata !DIExpression()) #23, !dbg !17452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()) #23, !dbg !17448
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i64 0, metadata !17442, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()), !dbg !17447
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17457
  %6 = tail call fastcc i32 @elapsed.344() #24, !dbg !17460
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16959, metadata !DIExpression()) #23, !dbg !17461
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17463
  br i1 %7, label %9, label %8, !dbg !17464

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17465
  unreachable, !dbg !17465

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %10, metadata !16893, metadata !DIExpression()) #23, !dbg !17452
  call void @llvm.dbg.value(metadata i32 %10, metadata !16887, metadata !DIExpression()) #23, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %10, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17446
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()) #23, !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16968, metadata !DIExpression()) #23, !dbg !17466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17468, !srcloc !16974
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()), !dbg !17447
  %11 = sext i32 %6 to i64, !dbg !17460
  %12 = add i64 %5, %11, !dbg !17469
  ret i64 %12, !dbg !17470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17471 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17472
  %2 = trunc i64 %1 to i32, !dbg !17473
  ret i32 %2, !dbg !17474
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17475 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17476
  ret i64 %1, !dbg !17477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17480, metadata !DIExpression()), !dbg !17487
  %2 = icmp eq i32 %0, 0, !dbg !17488
  br i1 %2, label %10, label %3, !dbg !17490

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.364() #24, !dbg !17491
  call void @llvm.dbg.value(metadata i32 %4, metadata !17481, metadata !DIExpression()), !dbg !17487
  %5 = mul i32 %0, 84, !dbg !17492
  call void @llvm.dbg.value(metadata i32 %5, metadata !17482, metadata !DIExpression()), !dbg !17487
  br label %6, !dbg !17493

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.364() #24, !dbg !17494
  call void @llvm.dbg.value(metadata i32 %7, metadata !17483, metadata !DIExpression()), !dbg !17495
  %8 = sub i32 %7, %4, !dbg !17496
  %9 = icmp ult i32 %8, %5, !dbg !17498
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.364() unnamed_addr #1 !dbg !17500 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.365() #24, !dbg !17501
  ret i32 %1, !dbg !17502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.365() unnamed_addr #1 !dbg !17503 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17504
  ret i32 %1, !dbg !17505
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17506 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17510, metadata !DIExpression()), !dbg !17512
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17513

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17514
  br label %14, !dbg !17518

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17511, metadata !DIExpression()), !dbg !17512
  %6 = icmp slt i64 %2, -1, !dbg !17519
  br i1 %6, label %7, label %9, !dbg !17522

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17523
  br label %14, !dbg !17524

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17526
  %11 = icmp ugt i64 %2, 1, !dbg !17527
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17527
  %13 = add nsw i64 %10, %12, !dbg !17528
  br label %14, !dbg !17529

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17530
  ret i64 %15, !dbg !17531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17532 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.368, i32 0, i32 0)) #25, !dbg !17534
  ret void, !dbg !17535
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!903, !2, !2526, !27, !177, !209, !2528, !2530, !2564, !2566, !218, !268, !2568, !2571, !2582, !2628, !2630, !2658, !2686, !2729, !2801, !2846, !297, !458, !2874, !494, !504, !529, !696, !731, !939, !2879, !1077, !1143, !1449, !1713, !2918, !1828, !1918, !2920, !3006, !3071, !1970, !3074, !1977, !2349, !3092, !2369, !3094, !2487, !3097}
!llvm.ident = !{!3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099}
!llvm.module.flags = !{!3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 251, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !814, line: 72, type: !898, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !800, globals: !811, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!764 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!765 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!766 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!767 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!768 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!769 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!770 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!771 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!772 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!773 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!774 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!775 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!776 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!777 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!778 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!779 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!780 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!781 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!787 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!788 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!789 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!790 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!791 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!792 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!793 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!794 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!795 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!796 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!797 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!798 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!799 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!800 = !{!185, !107, !106, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 243, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 235, size: 192, elements: !804)
!804 = !{!805, !806, !807, !808, !809, !810}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !803, file: !223, line: 237, baseType: !227, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !803, file: !223, line: 238, baseType: !227, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !803, file: !223, line: 239, baseType: !227, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !803, file: !223, line: 240, baseType: !227, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !803, file: !223, line: 241, baseType: !227, size: 32, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !803, file: !223, line: 242, baseType: !227, size: 32, offset: 160)
!811 = !{!812, !818, !834, !845, !862, !729, !864, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896}
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !731, file: !814, line: 424, type: !815, isLocal: false, isDefinition: true, align: 16)
!814 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 4)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !731, file: !814, line: 424, type: !820, isLocal: false, isDefinition: true, align: 32)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !822)
!822 = !{!823, !824, !825, !826, !832, !833}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !821, file: !247, line: 380, baseType: !118, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !821, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !821, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !821, file: !247, line: 386, baseType: !827, size: 32, offset: 96)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !829)
!829 = !{!830, !831}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !828, file: !247, line: 359, baseType: !195, size: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !828, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !821, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !821, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !731, file: !814, line: 424, type: !836, isLocal: true, isDefinition: true, align: 32)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !838)
!838 = !{!839, !844}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !837, file: !238, line: 60, baseType: !840, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DISubroutineType(types: !842)
!842 = !{!107, !843}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !837, file: !238, line: 65, baseType: !843, size: 32, offset: 32)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !814, line: 423, type: !847, isLocal: true, isDefinition: true)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !814, line: 107, size: 1472, elements: !848)
!848 = !{!849}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !847, file: !814, line: 109, baseType: !850, size: 1472)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 1472, elements: !860)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !814, line: 101, size: 64, elements: !852)
!852 = !{!853, !859}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !851, file: !814, line: 102, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !855, line: 63, baseType: !856)
!855 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !107, !106}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !851, file: !814, line: 103, baseType: !106, size: 32, offset: 32)
!860 = !{!861}
!861 = !DISubrange(count: 23)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !731, file: !814, line: 424, type: !828, isLocal: true, isDefinition: true, align: 8)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !866, file: !814, line: 493, type: !871, isLocal: true, isDefinition: true, align: 32)
!866 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !814, file: !814, line: 460, type: !867, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !869)
!867 = !DISubroutineType(types: !868)
!868 = !{null, !843}
!869 = !{!870}
!870 = !DILocalVariable(name: "dev", arg: 1, scope: !866, file: !814, line: 460, type: !843)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !872)
!872 = !{!873, !875, !876, !877}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !871, file: !10, line: 55, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !871, file: !10, line: 57, baseType: !874, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !871, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !871, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !866, file: !814, line: 497, type: !871, isLocal: true, isDefinition: true, align: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !866, file: !814, line: 507, type: !871, isLocal: true, isDefinition: true, align: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !866, file: !814, line: 512, type: !871, isLocal: true, isDefinition: true, align: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !866, file: !814, line: 516, type: !871, isLocal: true, isDefinition: true, align: 32)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !866, file: !814, line: 523, type: !871, isLocal: true, isDefinition: true, align: 32)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !866, file: !814, line: 527, type: !871, isLocal: true, isDefinition: true, align: 32)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !866, file: !814, line: 581, type: !871, isLocal: true, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !866, file: !814, line: 586, type: !871, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !866, file: !814, line: 591, type: !871, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !866, file: !814, line: 595, type: !871, isLocal: true, isDefinition: true, align: 32)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 736, elements: !860)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 133, baseType: !734)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !903, file: !908, line: 24, type: !934, isLocal: false, isDefinition: true, align: 16)
!903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !905, splitDebugInlining: false, nameTableKind: None)
!904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!905 = !{!906, !901, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932}
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !903, file: !908, line: 19, type: !909, isLocal: false, isDefinition: true, align: 16)
!908 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 224, elements: !910)
!910 = !{!911}
!911 = !DISubrange(count: 14)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !903, file: !908, line: 31, type: !815, isLocal: false, isDefinition: true, align: 16)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !903, file: !908, line: 38, type: !815, isLocal: false, isDefinition: true, align: 16)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !903, file: !908, line: 45, type: !815, isLocal: false, isDefinition: true, align: 16)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !903, file: !908, line: 52, type: !815, isLocal: false, isDefinition: true, align: 16)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !903, file: !908, line: 59, type: !815, isLocal: false, isDefinition: true, align: 16)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !903, file: !908, line: 66, type: !815, isLocal: false, isDefinition: true, align: 16)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !903, file: !908, line: 73, type: !815, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !903, file: !908, line: 80, type: !815, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !903, file: !908, line: 87, type: !815, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !903, file: !908, line: 94, type: !815, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !903, file: !908, line: 101, type: !815, isLocal: false, isDefinition: true, align: 16)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 3)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !939, file: !1003, line: 398, type: !1036, isLocal: true, isDefinition: true)
!939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !941, retainedTypes: !954, globals: !1000, splitDebugInlining: false, nameTableKind: None)
!940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!941 = !{!942, !30, !947}
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 197, baseType: !32, size: 32, elements: !944)
!943 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = !{!945, !946}
!945 = !DIEnumerator(name: "SUCCESS", value: 0)
!946 = !DIEnumerator(name: "ERROR", value: 1)
!947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !948, line: 44, baseType: !32, size: 32, elements: !949)
!948 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !951, !952, !953}
!950 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!951 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!952 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!953 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!954 = !{!106, !107, !152, !955, !993, !999}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !958)
!958 = !{!959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !992}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !957, file: !223, line: 337, baseType: !227, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !957, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !957, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !957, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !957, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !957, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !957, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !957, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !957, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !957, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !957, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !957, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !957, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !957, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !957, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !957, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !957, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !957, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !957, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !957, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !957, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !957, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !957, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !957, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !957, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !957, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !957, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !957, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !957, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !957, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !957, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 32, elements: !445)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !957, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !996)
!995 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !994, file: !995, line: 344, baseType: !152, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !994, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1000 = !{!1001, !1007, !1023, !1034, !937}
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1004, isLocal: false, isDefinition: true, align: 16)
!1003 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 640, elements: !1005)
!1005 = !{!1006}
!1006 = !DISubrange(count: 40)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1009, isLocal: false, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1021, !1022}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1010, file: !247, line: 380, baseType: !118, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1010, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1010, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1010, file: !247, line: 386, baseType: !1016, size: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1017, file: !247, line: 359, baseType: !195, size: 8)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1017, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1010, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1010, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1025, isLocal: true, isDefinition: true, align: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1027)
!1027 = !{!1028, !1033}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1026, file: !238, line: 60, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!107, !1032}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1026, file: !238, line: 65, baseType: !1032, size: 32, offset: 32)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1017, isLocal: true, isDefinition: true, align: 8)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1037)
!1037 = !{!1038, !1044, !1045, !1054, !1059, !1064, !1070}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1036, file: !948, line: 101, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!107, !1032, !1043}
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !948, line: 56, baseType: !106)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1036, file: !948, line: 102, baseType: !1039, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1036, file: !948, line: 103, baseType: !1046, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1047)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!107, !1032, !1043, !1050, !106}
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1032, !1043, !106}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1036, file: !948, line: 104, baseType: !1055, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!107, !1032, !1043, !999}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1036, file: !948, line: 105, baseType: !1060, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!947, !1032, !1043}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1036, file: !948, line: 106, baseType: !1065, size: 32, offset: 160)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!107, !1032, !1043, !1069}
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !948, line: 64, baseType: !106)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1036, file: !948, line: 107, baseType: !1071, size: 32, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!107, !1032, !1043, !106}
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1077, file: !1134, line: 603, type: !1136, isLocal: true, isDefinition: true, align: 32)
!1077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1079, globals: !1131, splitDebugInlining: false, nameTableKind: None)
!1078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1079 = !{!106, !107, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1083, line: 336, size: 160, elements: !1084)
!1083 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1084 = !{!1085, !1105, !1109, !1113, !1126}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1082, file: !1083, line: 365, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!107, !1089, !1104}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1102, !1103}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1091, file: !247, line: 380, baseType: !118, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1091, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1091, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1091, file: !247, line: 386, baseType: !1097, size: 32, offset: 96)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1098, file: !247, line: 359, baseType: !195, size: 8)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1098, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1091, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1091, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1082, file: !1083, line: 366, baseType: !1106, size: 32, offset: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1089, !196}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1082, file: !1083, line: 374, baseType: !1110, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!107, !1089}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1082, file: !1083, line: 377, baseType: !1114, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!107, !1089, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1083, line: 122, size: 64, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1119, file: !1083, line: 123, baseType: !152, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1119, file: !1083, line: 124, baseType: !195, size: 8, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1119, file: !1083, line: 125, baseType: !195, size: 8, offset: 40)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1119, file: !1083, line: 126, baseType: !195, size: 8, offset: 48)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1119, file: !1083, line: 127, baseType: !195, size: 8, offset: 56)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1082, file: !1083, line: 379, baseType: !1127, size: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!107, !1089, !1130}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1131 = !{!1075, !1132}
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1077, file: !1134, line: 38, type: !1135, isLocal: true, isDefinition: true)
!1134 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1137, file: !238, line: 60, baseType: !1110, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1137, file: !238, line: 65, baseType: !1089, size: 32, offset: 32)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1143, file: !1312, line: 762, type: !1424, isLocal: true, isDefinition: true)
!1143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1145, retainedTypes: !1163, globals: !1309, splitDebugInlining: false, nameTableKind: None)
!1144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1145 = !{!30, !1146, !1152, !1157, !947}
!1146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1147, line: 506, baseType: !32, size: 32, elements: !1148)
!1147 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1148 = !{!1149, !1150, !1151}
!1149 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1150 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1151 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1147, line: 512, baseType: !32, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1155 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1156 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !855, line: 43, baseType: !32, size: 32, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162}
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1160 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1161 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1162 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1163 = !{!106, !107, !1164, !1234, !1239, !1199, !1152, !1146, !1244, !1245, !152, !1259, !1214, !193, !1269, !1270}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1147, line: 523, size: 288, elements: !1167)
!1167 = !{!1168, !1189, !1195, !1200, !1204, !1205, !1206, !1210, !1230}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1166, file: !1147, line: 524, baseType: !1169, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!107, !1172, !1187, !1188}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1185, !1186}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1174, file: !247, line: 380, baseType: !118, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1174, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1174, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1174, file: !247, line: 386, baseType: !1180, size: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1181, file: !247, line: 359, baseType: !195, size: 8)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1181, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1174, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1174, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1147, line: 237, baseType: !195)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1147, line: 257, baseType: !152)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1166, file: !1147, line: 530, baseType: !1190, size: 32, offset: 32)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!107, !1172, !1193}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1147, line: 229, baseType: !152)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1166, file: !1147, line: 532, baseType: !1196, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!107, !1172, !1199, !1194}
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1147, line: 216, baseType: !152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1166, file: !1147, line: 535, baseType: !1201, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1172, !1199}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1166, file: !1147, line: 537, baseType: !1201, size: 32, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1166, file: !1147, line: 539, baseType: !1201, size: 32, offset: 160)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1166, file: !1147, line: 541, baseType: !1207, size: 32, offset: 192)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!107, !1172, !1187, !1146, !1152}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1166, file: !1147, line: 544, baseType: !1211, size: 32, offset: 224)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!107, !1172, !1214, !145}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1147, line: 478, size: 96, elements: !1216)
!1216 = !{!1217, !1224, !1229}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1215, file: !1147, line: 482, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1219, line: 33, baseType: !1220)
!1219 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1219, line: 29, size: 32, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1220, file: !1219, line: 30, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1215, file: !1147, line: 485, baseType: !1225, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1147, line: 464, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{null, !1172, !1214, !1199}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1215, file: !1147, line: 493, baseType: !1199, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1166, file: !1147, line: 547, baseType: !1231, size: 32, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!152, !1172}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1147, line: 428, size: 32, elements: !1237)
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1236, file: !1147, line: 434, baseType: !1199, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1147, line: 441, size: 32, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1241, file: !1147, line: 447, baseType: !1199, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 275, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 264, size: 320, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1247, file: !223, line: 266, baseType: !227, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1247, file: !223, line: 267, baseType: !227, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1247, file: !223, line: 268, baseType: !227, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1247, file: !223, line: 269, baseType: !227, size: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1247, file: !223, line: 270, baseType: !227, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1247, file: !223, line: 271, baseType: !227, size: 32, offset: 160)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1247, file: !223, line: 272, baseType: !227, size: 32, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1247, file: !223, line: 273, baseType: !227, size: 32, offset: 224)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1247, file: !223, line: 274, baseType: !1258, size: 64, offset: 256)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 288, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 281, size: 288, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1267, !1268}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1261, file: !223, line: 283, baseType: !227, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1261, file: !223, line: 284, baseType: !227, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1261, file: !223, line: 285, baseType: !1266, size: 128, offset: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !816)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1261, file: !223, line: 286, baseType: !970, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1261, file: !223, line: 287, baseType: !227, size: 32, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1273)
!1273 = !{!1274, !1279, !1280, !1289, !1294, !1299, !1304}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1272, file: !948, line: 101, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!107, !1172, !1043}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1272, file: !948, line: 102, baseType: !1275, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1272, file: !948, line: 103, baseType: !1281, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!107, !1172, !1043, !1285, !106}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1172, !1043, !106}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1272, file: !948, line: 104, baseType: !1290, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!107, !1172, !1043, !999}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1272, file: !948, line: 105, baseType: !1295, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!947, !1172, !1043}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1272, file: !948, line: 106, baseType: !1300, size: 32, offset: 160)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!107, !1172, !1043, !1069}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1272, file: !948, line: 107, baseType: !1305, size: 32, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!107, !1172, !1043, !106}
!1309 = !{!1310, !1316, !1318, !1328, !1330, !1332, !1334, !1339, !1341, !1343, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1141, !1420, !1422, !1435, !1437, !1439, !1441, !1443, !1445}
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 112, elements: !1314)
!1314 = !{!1315}
!1315 = !DISubrange(count: 7)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1321, file: !238, line: 60, baseType: !1324, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!107, !1172}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1321, file: !238, line: 65, baseType: !1172, size: 32, offset: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 5)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 6)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1143, file: !1312, line: 762, type: !1378, isLocal: true, isDefinition: true)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1379, line: 237, size: 128, elements: !1380)
!1379 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1378, file: !1379, line: 239, baseType: !1241, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1378, file: !1379, line: 241, baseType: !1172, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1378, file: !1379, line: 243, baseType: !1384, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1219, line: 40, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1219, line: 35, size: 64, elements: !1386)
!1386 = !{!1387, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1385, file: !1219, line: 36, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1385, file: !1219, line: 37, baseType: !1388, size: 32, offset: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1143, file: !1312, line: 766, type: !1378, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1143, file: !1312, line: 770, type: !1378, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1143, file: !1312, line: 774, type: !1378, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1143, file: !1312, line: 778, type: !1378, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1143, file: !1312, line: 782, type: !1378, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1143, file: !1312, line: 786, type: !1378, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1143, file: !1312, line: 790, type: !1378, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1143, file: !1312, line: 656, type: !1165, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1143, file: !1312, line: 766, type: !1424, isLocal: true, isDefinition: true)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1379, line: 224, size: 160, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1425, file: !1379, line: 226, baseType: !1236, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1425, file: !1379, line: 228, baseType: !999, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1425, file: !1379, line: 230, baseType: !107, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1425, file: !1379, line: 231, baseType: !1431, size: 64, offset: 96)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1431, file: !995, line: 344, baseType: !152, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1431, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1143, file: !1312, line: 770, type: !1424, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1143, file: !1312, line: 774, type: !1424, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1143, file: !1312, line: 778, type: !1424, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1143, file: !1312, line: 782, type: !1424, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1143, file: !1312, line: 786, type: !1424, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1143, file: !1312, line: 790, type: !1424, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1449, file: !1588, line: 44, type: !1706, isLocal: false, isDefinition: true)
!1449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1451, retainedTypes: !1484, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1451 = !{!30, !1452, !1459, !1466, !1473, !1479, !947}
!1452 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1083, line: 47, baseType: !32, size: 32, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458}
!1454 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1455 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1456 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1457 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1458 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1083, line: 75, baseType: !32, size: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465}
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1462 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1463 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1083, line: 92, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1083, line: 84, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478}
!1475 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1083, line: 107, baseType: !32, size: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1482 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1483 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1484 = !{!106, !107, !1485, !196, !195, !1534, !152, !1043, !1545, !197, !566, !1584}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1083, line: 336, size: 160, elements: !1488)
!1488 = !{!1489, !1508, !1512, !1516, !1529}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1487, file: !1083, line: 365, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!107, !1493, !1104}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1506, !1507}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1495, file: !247, line: 380, baseType: !118, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1495, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1495, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1495, file: !247, line: 386, baseType: !1501, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1502, file: !247, line: 359, baseType: !195, size: 8)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1502, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1495, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1495, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1487, file: !1083, line: 366, baseType: !1509, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !1493, !196}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1487, file: !1083, line: 374, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!107, !1493}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1487, file: !1083, line: 377, baseType: !1517, size: 32, offset: 96)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!107, !1493, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1083, line: 122, size: 64, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1522, file: !1083, line: 123, baseType: !152, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1522, file: !1083, line: 124, baseType: !195, size: 8, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1522, file: !1083, line: 125, baseType: !195, size: 8, offset: 40)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1522, file: !1083, line: 126, baseType: !195, size: 8, offset: 48)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1522, file: !1083, line: 127, baseType: !195, size: 8, offset: 56)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1487, file: !1083, line: 379, baseType: !1530, size: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!107, !1493, !1533}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 507, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 498, size: 224, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1536, file: !223, line: 500, baseType: !227, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1536, file: !223, line: 501, baseType: !227, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1536, file: !223, line: 502, baseType: !227, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1536, file: !223, line: 503, baseType: !227, size: 32, offset: 96)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1536, file: !223, line: 504, baseType: !227, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1536, file: !223, line: 505, baseType: !227, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1536, file: !223, line: 506, baseType: !227, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1548)
!1548 = !{!1549, !1554, !1555, !1564, !1569, !1574, !1579}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1547, file: !948, line: 101, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!107, !1493, !1043}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1547, file: !948, line: 102, baseType: !1550, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1547, file: !948, line: 103, baseType: !1556, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!107, !1493, !1043, !1560, !106}
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1561)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1493, !1043, !106}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1547, file: !948, line: 104, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!107, !1493, !1043, !999}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1547, file: !948, line: 105, baseType: !1570, size: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!947, !1493, !1043}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1547, file: !948, line: 106, baseType: !1575, size: 32, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!107, !1493, !1043, !1069}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1547, file: !948, line: 107, baseType: !1580, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!107, !1493, !1043, !106}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1585 = !{!1447, !1586, !1592, !1594, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1663, !1666, !1668, !1671, !1674, !1676, !1682, !1684, !1686, !1688, !1690, !1692, !1694, !1696, !1698, !1700, !1702, !1704}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1588 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 8)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1597, file: !238, line: 60, baseType: !1513, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1597, file: !238, line: 65, baseType: !1493, size: 32, offset: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1623, line: 22, size: 224, elements: !1624)
!1623 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1624 = !{!1625, !1626, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1622, file: !1623, line: 24, baseType: !1534, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1622, file: !1623, line: 26, baseType: !1627, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1629, file: !995, line: 344, baseType: !152, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1629, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1622, file: !1623, line: 28, baseType: !185, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1622, file: !1623, line: 30, baseType: !145, size: 8, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1622, file: !1623, line: 32, baseType: !107, size: 32, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1622, file: !1623, line: 34, baseType: !145, size: 8, offset: 160)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1622, file: !1623, line: 36, baseType: !145, size: 8, offset: 168)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1622, file: !1623, line: 38, baseType: !145, size: 8, offset: 176)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1622, file: !1623, line: 40, baseType: !145, size: 8, offset: 184)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1622, file: !1623, line: 41, baseType: !1641, size: 32, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1644, line: 60, size: 64, elements: !1645)
!1644 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = !{!1646, !1662}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1643, file: !1644, line: 69, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1644, line: 50, size: 64, elements: !1650)
!1650 = !{!1651, !1660, !1661}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1649, file: !1644, line: 52, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !1656)
!1655 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1656, file: !1655, line: 34, baseType: !152, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1656, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1649, file: !1644, line: 54, baseType: !195, size: 8, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1649, file: !1644, line: 56, baseType: !195, size: 8, offset: 40)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1643, file: !1644, line: 71, baseType: !195, size: 8, offset: 32)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1628, size: 64, elements: !445)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 64, elements: !445)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 128, elements: !340)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1449, file: !1588, line: 1539, type: !1486, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1623, line: 74, size: 64, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1678, file: !1623, line: 76, baseType: !152, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1678, file: !1623, line: 78, baseType: !1493, size: 32, offset: 32)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !203, line: 17, baseType: !118, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1707, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1713, file: !1791, line: 65, type: !227, isLocal: true, isDefinition: true)
!1713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1715, retainedTypes: !1716, globals: !1788, splitDebugInlining: false, nameTableKind: None)
!1714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1715 = !{!734}
!1716 = !{!564, !1717, !874, !195, !152, !1725, !1756}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1719, file: !463, line: 766, baseType: !227, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1719, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1719, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1719, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1728)
!1728 = !{!1729, !1731, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1746, !1751, !1755}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1727, file: !463, line: 413, baseType: !1730, size: 256)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1590)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1727, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1733)
!1733 = !{!1734}
!1734 = !DISubrange(count: 24)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1727, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1727, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1727, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1727, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1727, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1727, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1727, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1727, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1744)
!1744 = !{!1745}
!1745 = !DISubrange(count: 56)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1727, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1748, size: 1920, elements: !1749)
!1748 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1749 = !{!1750}
!1750 = !DISubrange(count: 240)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1727, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 644)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1727, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764, !1765, !1766, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1779, !1780, !1781, !1783, !1785, !1787}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1758, file: !463, line: 447, baseType: !467, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1758, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1758, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1758, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1758, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1758, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1758, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1748, size: 96, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 12)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1758, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1758, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1758, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1758, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1758, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1758, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1758, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1758, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1758, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1758, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1758, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !816)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1758, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1337)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1758, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1337)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1758, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1788 = !{!1789, !1815, !1820, !1822, !1824, !1711}
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1713, file: !1791, line: 285, type: !1792, isLocal: true, isDefinition: true, align: 32)
!1791 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1794)
!1794 = !{!1795, !1814}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1793, file: !238, line: 60, baseType: !1796, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!107, !1799}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1812, !1813}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1801, file: !247, line: 380, baseType: !118, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1801, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1801, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1801, file: !247, line: 386, baseType: !1807, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1808, file: !247, line: 359, baseType: !195, size: 8)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1808, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1801, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1801, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1793, file: !238, line: 65, baseType: !1799, size: 32, offset: 32)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "lock", scope: !1713, file: !1791, line: 34, type: !1817, isLocal: true, isDefinition: true)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1817, file: !420, line: 52, baseType: !22, size: 32)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "last_load", scope: !1713, file: !1791, line: 36, type: !152, isLocal: true, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1713, file: !1791, line: 48, type: !152, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1713, file: !1791, line: 54, type: !152, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1828, file: !1910, line: 22, type: !1912, isLocal: true, isDefinition: true)
!1828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1830, retainedTypes: !1831, globals: !1907, splitDebugInlining: false, nameTableKind: None)
!1829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1830 = !{!1146, !1152}
!1831 = !{!1832, !1896, !1901, !1199, !1152, !1146, !1906, !106}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1147, line: 523, size: 288, elements: !1835)
!1835 = !{!1836, !1855, !1859, !1863, !1867, !1868, !1869, !1873, !1892}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1834, file: !1147, line: 524, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!107, !1840, !1187, !1188}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1853, !1854}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1842, file: !247, line: 380, baseType: !118, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1842, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1842, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1842, file: !247, line: 386, baseType: !1848, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1849, file: !247, line: 359, baseType: !195, size: 8)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1849, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1842, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1842, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1834, file: !1147, line: 530, baseType: !1856, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!107, !1840, !1193}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1834, file: !1147, line: 532, baseType: !1860, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!107, !1840, !1199, !1194}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1834, file: !1147, line: 535, baseType: !1864, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!107, !1840, !1199}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1834, file: !1147, line: 537, baseType: !1864, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1834, file: !1147, line: 539, baseType: !1864, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1834, file: !1147, line: 541, baseType: !1870, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!107, !1840, !1187, !1146, !1152}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1834, file: !1147, line: 544, baseType: !1874, size: 32, offset: 224)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!107, !1840, !1877, !145}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1147, line: 478, size: 96, elements: !1879)
!1879 = !{!1880, !1886, !1891}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1878, file: !1147, line: 482, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1219, line: 33, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1219, line: 29, size: 32, elements: !1883)
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1882, file: !1219, line: 30, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1878, file: !1147, line: 485, baseType: !1887, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1147, line: 464, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1840, !1877, !1199}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1878, file: !1147, line: 493, baseType: !1199, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1834, file: !1147, line: 547, baseType: !1893, size: 32, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!152, !1840}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1147, line: 428, size: 32, elements: !1899)
!1899 = !{!1900}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1898, file: !1147, line: 434, baseType: !1199, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1147, line: 441, size: 32, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1903, file: !1147, line: 447, baseType: !1199, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1907 = !{!1908, !1826}
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1909 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1828, file: !1910, line: 37, type: !1911, isLocal: true, isDefinition: true)
!1910 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 352, elements: !1914)
!1913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1914 = !{!1915}
!1915 = !DISubrange(count: 11)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1918, file: !1960, line: 139, type: !1967, isLocal: false, isDefinition: true)
!1918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1920, globals: !1957, splitDebugInlining: false, nameTableKind: None)
!1919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1920 = !{!1921}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1923, file: !223, line: 337, baseType: !227, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1923, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1923, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1923, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1923, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1923, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1923, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1923, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1923, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1923, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1923, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1923, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1923, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1923, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1923, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1923, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1923, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1923, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1923, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1923, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1923, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1923, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1923, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1923, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1923, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1923, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1923, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1923, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1923, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1923, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1923, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1923, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!1957 = !{!1958, !1961, !1916}
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1918, file: !1960, line: 137, type: !152, isLocal: false, isDefinition: true)
!1960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1918, file: !1960, line: 138, type: !1963, isLocal: false, isDefinition: true)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 128, elements: !1965)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1965 = !{!1966}
!1966 = !DISubrange(count: 16)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 64, elements: !1590)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1970, file: !1973, line: 23, type: !1974, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1972, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1972 = !{!1968}
!1973 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1977, file: !1981, line: 37, type: !2234, isLocal: false, isDefinition: true)
!1977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1979, retainedTypes: !1988, globals: !2061, splitDebugInlining: false, nameTableKind: None)
!1978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!1979 = !{!1980, !30, !734}
!1980 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1981, line: 63, baseType: !32, size: 32, elements: !1982)
!1981 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1982 = !{!1983, !1984, !1985, !1986, !1987}
!1983 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1984 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1985 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1986 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1987 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1988 = !{!185, !106, !107, !1989, !193, !152, !2019, !874, !195, !2044}
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1992, line: 51, size: 64, elements: !1993)
!1992 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1993 = !{!1994, !2014}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1991, file: !1992, line: 52, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1992, line: 38, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!107, !1999, !194, !197}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2012, !2013}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2001, file: !247, line: 380, baseType: !118, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2001, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2001, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2001, file: !247, line: 386, baseType: !2007, size: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2008, file: !247, line: 359, baseType: !195, size: 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2008, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2001, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2001, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1991, file: !1992, line: 53, baseType: !2015, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1992, line: 47, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!107, !1999, !194, !197, !152}
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2021, file: !463, line: 447, baseType: !467, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2021, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2021, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2021, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2021, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2021, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2021, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2021, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2021, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2021, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2021, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2021, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2021, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2021, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2021, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2021, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2021, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2021, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2021, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2021, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2021, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2046, file: !463, line: 413, baseType: !1730, size: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2046, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2046, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2046, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2046, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2046, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2046, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2046, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2046, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2046, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2046, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2046, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2046, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2061 = !{!1975, !2062, !2188, !2194, !2196, !2199, !2204, !2206, !2211}
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "_kernel", scope: !1977, file: !1981, line: 40, type: !2064, isLocal: false, isDefinition: true)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2065)
!2065 = !{!2066, !2183}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2064, file: !345, line: 159, baseType: !2067, size: 192)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2068, size: 192, elements: !445)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2176, !2177, !2178, !2179}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2068, file: !345, line: 102, baseType: !152, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2068, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2068, file: !345, line: 108, baseType: !2073, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2075)
!2075 = !{!2076, !2134, !2146, !2147, !2148, !2149, !2150, !2156, !2171}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2074, file: !309, line: 247, baseType: !2077, size: 384)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2078)
!2078 = !{!2079, !2103, !2110, !2111, !2112, !2121, !2122, !2123}
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !309, line: 60, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !309, line: 60, size: 64, elements: !2081)
!2081 = !{!2082, !2097}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2080, file: !309, line: 61, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2085)
!2085 = !{!2086, !2092}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !319, line: 38, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !319, line: 38, size: 32, elements: !2088)
!2088 = !{!2089, !2091}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2087, file: !319, line: 39, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2087, file: !319, line: 40, baseType: !2090, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !319, line: 42, baseType: !2093, size: 32, offset: 32)
!2093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !319, line: 42, size: 32, elements: !2094)
!2094 = !{!2095, !2096}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2093, file: !319, line: 43, baseType: !2090, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2093, file: !319, line: 44, baseType: !2090, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2080, file: !309, line: 62, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2098, file: !335, line: 50, baseType: !2101, size: 64)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2102, size: 64, elements: !340)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2077, file: !309, line: 68, baseType: !2104, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2107)
!2107 = !{!2108}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2106, file: !345, line: 232, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2084)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2077, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2077, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !309, line: 90, baseType: !2113, size: 16, offset: 112)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !309, line: 90, size: 16, elements: !2114)
!2114 = !{!2115, !2120}
!2115 = !DIDerivedType(tag: DW_TAG_member, scope: !2113, file: !309, line: 91, baseType: !2116, size: 16)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2113, file: !309, line: 91, size: 16, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2116, file: !309, line: 96, baseType: !359, size: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2116, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2113, file: !309, line: 100, baseType: !197, size: 16)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2077, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2077, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2077, file: !309, line: 131, baseType: !2124, size: 192, offset: 192)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2125)
!2125 = !{!2126, !2127, !2133}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2124, file: !345, line: 245, baseType: !2083, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2124, file: !345, line: 246, baseType: !2128, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2124, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2074, file: !309, line: 250, baseType: !2135, size: 288, offset: 384)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2135, file: !379, line: 26, baseType: !152, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2135, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2135, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2135, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2135, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2135, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2135, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2135, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2135, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2074, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2074, file: !309, line: 256, baseType: !2105, size: 64, offset: 704)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2074, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2074, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2074, file: !309, line: 300, baseType: !2151, size: 96, offset: 1056)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2151, file: !309, line: 153, baseType: !22, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2151, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2151, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2074, file: !309, line: 325, baseType: !2157, size: 32, offset: 1152)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2159)
!2159 = !{!2160, !2166, !2167}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2158, file: !406, line: 5074, baseType: !2161, size: 96)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2162)
!2162 = !{!2163, !2164, !2165}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2161, file: !410, line: 57, baseType: !413, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2161, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2161, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2158, file: !406, line: 5075, baseType: !2105, size: 64, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2158, file: !406, line: 5076, baseType: !2168, size: 32, offset: 160)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2168, file: !420, line: 52, baseType: !22, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2074, file: !309, line: 343, baseType: !2172, size: 64, offset: 1184)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2172, file: !379, line: 63, baseType: !152, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2172, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2068, file: !345, line: 111, baseType: !2073, size: 32, offset: 96)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2068, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2068, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2068, file: !345, line: 153, baseType: !2180, offset: 168)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2181, line: 33, elements: !2182)
!2181 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2182 = !{}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2064, file: !345, line: 170, baseType: !2184, size: 96, offset: 192)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2184, file: !345, line: 86, baseType: !2073, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2184, file: !345, line: 90, baseType: !2109, size: 64, offset: 32)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1977, file: !1981, line: 43, type: !2190, isLocal: false, isDefinition: true, align: 512)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 8704, elements: !580)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2191, file: !577, line: 48, baseType: !120, size: 8)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1977, file: !1981, line: 44, type: !2074, isLocal: false, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1977, file: !1981, line: 48, type: !2198, isLocal: false, isDefinition: true)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2074, size: 1280, elements: !445)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1977, file: !1981, line: 86, type: !2201, isLocal: false, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 16896, elements: !2202)
!2202 = !{!446, !2203}
!2203 = !DISubrange(count: 2112)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1977, file: !1981, line: 217, type: !145, isLocal: false, isDefinition: true)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1977, file: !1981, line: 50, type: !2208, isLocal: true, isDefinition: true, align: 512)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 33280, elements: !2209)
!2209 = !{!446, !2210}
!2210 = !DISubrange(count: 4160)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "levels", scope: !2213, file: !1981, line: 232, type: !2233, isLocal: true, isDefinition: true)
!2213 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1981, file: !1981, line: 230, type: !2214, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2216)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !1980}
!2216 = !{!2217, !2218, !2228, !2232}
!2217 = !DILocalVariable(name: "level", arg: 1, scope: !2213, file: !1981, line: 230, type: !1980)
!2218 = !DILocalVariable(name: "entry", scope: !2213, file: !1981, line: 244, type: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2222)
!2222 = !{!2223, !2227}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2221, file: !238, line: 60, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!107, !1999}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2221, file: !238, line: 65, baseType: !1999, size: 32, offset: 32)
!2228 = !DILocalVariable(name: "dev", scope: !2229, file: !1981, line: 247, type: !1999)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !1981, line: 246, column: 64)
!2230 = distinct !DILexicalBlock(scope: !2231, file: !1981, line: 246, column: 2)
!2231 = distinct !DILexicalBlock(scope: !2213, file: !1981, line: 246, column: 2)
!2232 = !DILocalVariable(name: "rc", scope: !2229, file: !1981, line: 248, type: !107)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2219, size: 192, elements: !1346)
!2234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2235, file: !203, line: 17, baseType: !118, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2235, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "states_str", scope: !2241, file: !2242, line: 276, type: !2366, isLocal: true, isDefinition: true)
!2241 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2242, file: !2242, line: 271, type: !2243, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2357)
!2242 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!118, !2245, !193, !185}
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2246)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2248)
!2248 = !{!2249, !2307, !2319, !2320, !2321, !2322, !2323, !2329, !2344}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2247, file: !309, line: 247, baseType: !2250, size: 384)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2251)
!2251 = !{!2252, !2276, !2283, !2284, !2285, !2294, !2295, !2296}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !309, line: 60, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !309, line: 60, size: 64, elements: !2254)
!2254 = !{!2255, !2270}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2253, file: !309, line: 61, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2258)
!2258 = !{!2259, !2265}
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !319, line: 38, baseType: !2260, size: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !319, line: 38, size: 32, elements: !2261)
!2261 = !{!2262, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2260, file: !319, line: 39, baseType: !2263, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2260, file: !319, line: 40, baseType: !2263, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !319, line: 42, baseType: !2266, size: 32, offset: 32)
!2266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !319, line: 42, size: 32, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2266, file: !319, line: 43, baseType: !2263, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2266, file: !319, line: 44, baseType: !2263, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2253, file: !309, line: 62, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2272)
!2272 = !{!2273}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2271, file: !335, line: 50, baseType: !2274, size: 64)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2275, size: 64, elements: !340)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2250, file: !309, line: 68, baseType: !2277, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2279, file: !345, line: 232, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2257)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2250, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2250, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !309, line: 90, baseType: !2286, size: 16, offset: 112)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !309, line: 90, size: 16, elements: !2287)
!2287 = !{!2288, !2293}
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !309, line: 91, baseType: !2289, size: 16)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !309, line: 91, size: 16, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2289, file: !309, line: 96, baseType: !359, size: 8)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2289, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2286, file: !309, line: 100, baseType: !197, size: 16)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2250, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2250, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2250, file: !309, line: 131, baseType: !2297, size: 192, offset: 192)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2298)
!2298 = !{!2299, !2300, !2306}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2297, file: !345, line: 245, baseType: !2256, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2297, file: !345, line: 246, baseType: !2301, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{null, !2305}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2297, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2247, file: !309, line: 250, baseType: !2308, size: 288, offset: 384)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2308, file: !379, line: 26, baseType: !152, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2308, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2308, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2308, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2308, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2308, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2308, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2308, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2308, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2247, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2247, file: !309, line: 256, baseType: !2278, size: 64, offset: 704)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2247, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2247, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2247, file: !309, line: 300, baseType: !2324, size: 96, offset: 1056)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2324, file: !309, line: 153, baseType: !22, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2324, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2324, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2247, file: !309, line: 325, baseType: !2330, size: 32, offset: 1152)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2332)
!2332 = !{!2333, !2339, !2340}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2331, file: !406, line: 5074, baseType: !2334, size: 96)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2335)
!2335 = !{!2336, !2337, !2338}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2334, file: !410, line: 57, baseType: !413, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2334, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2334, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2331, file: !406, line: 5075, baseType: !2278, size: 64, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2331, file: !406, line: 5076, baseType: !2341, size: 32, offset: 160)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2342)
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2341, file: !420, line: 52, baseType: !22, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2247, file: !309, line: 343, baseType: !2345, size: 64, offset: 1184)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2345, file: !379, line: 63, baseType: !152, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2345, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2351, globals: !2353, splitDebugInlining: false, nameTableKind: None)
!2350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2351 = !{!106, !118, !564, !195, !22, !107, !2352, !24, !185, !193, !152, !566}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2353 = !{!2239, !2354}
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "states_sz", scope: !2241, file: !2242, line: 279, type: !2356, isLocal: true, isDefinition: true)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 256, elements: !1590)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364}
!2358 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2241, file: !2242, line: 271, type: !2245)
!2359 = !DILocalVariable(name: "buf", arg: 2, scope: !2241, file: !2242, line: 271, type: !193)
!2360 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2241, file: !2242, line: 271, type: !185)
!2361 = !DILocalVariable(name: "off", scope: !2241, file: !2242, line: 273, type: !185)
!2362 = !DILocalVariable(name: "bit", scope: !2241, file: !2242, line: 274, type: !195)
!2363 = !DILocalVariable(name: "thread_state", scope: !2241, file: !2242, line: 275, type: !195)
!2364 = !DILocalVariable(name: "index", scope: !2365, file: !2242, line: 293, type: !195)
!2365 = distinct !DILexicalBlock(scope: !2241, file: !2242, line: 293, column: 2)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1590)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2369, file: !2480, line: 56, type: !2467, isLocal: false, isDefinition: true)
!2369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2371, globals: !2477, splitDebugInlining: false, nameTableKind: None)
!2370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2371 = !{!2372, !193, !106, !2475, !194, !564, !874, !107, !152, !566, !2476}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2374)
!2374 = !{!2375, !2433, !2445, !2446, !2447, !2448, !2449, !2455, !2470}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2373, file: !309, line: 247, baseType: !2376, size: 384)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2377)
!2377 = !{!2378, !2402, !2409, !2410, !2411, !2420, !2421, !2422}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !309, line: 60, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !309, line: 60, size: 64, elements: !2380)
!2380 = !{!2381, !2396}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2379, file: !309, line: 61, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2384)
!2384 = !{!2385, !2391}
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !319, line: 38, baseType: !2386, size: 32)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !319, line: 38, size: 32, elements: !2387)
!2387 = !{!2388, !2390}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2386, file: !319, line: 39, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2386, file: !319, line: 40, baseType: !2389, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !319, line: 42, baseType: !2392, size: 32, offset: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !319, line: 42, size: 32, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2392, file: !319, line: 43, baseType: !2389, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2392, file: !319, line: 44, baseType: !2389, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2379, file: !309, line: 62, baseType: !2397, size: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2398)
!2398 = !{!2399}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2397, file: !335, line: 50, baseType: !2400, size: 64)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 64, elements: !340)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2376, file: !309, line: 68, baseType: !2403, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2406)
!2406 = !{!2407}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2405, file: !345, line: 232, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2383)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2376, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2376, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2411 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !309, line: 90, baseType: !2412, size: 16, offset: 112)
!2412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !309, line: 90, size: 16, elements: !2413)
!2413 = !{!2414, !2419}
!2414 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !309, line: 91, baseType: !2415, size: 16)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2412, file: !309, line: 91, size: 16, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2415, file: !309, line: 96, baseType: !359, size: 8)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2415, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2412, file: !309, line: 100, baseType: !197, size: 16)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2376, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2376, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2376, file: !309, line: 131, baseType: !2423, size: 192, offset: 192)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2424)
!2424 = !{!2425, !2426, !2432}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2423, file: !345, line: 245, baseType: !2382, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2423, file: !345, line: 246, baseType: !2427, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2428)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{null, !2431}
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2423, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2373, file: !309, line: 250, baseType: !2434, size: 288, offset: 384)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2434, file: !379, line: 26, baseType: !152, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2434, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2434, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2434, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2434, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2434, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2434, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2434, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2434, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2373, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2373, file: !309, line: 256, baseType: !2404, size: 64, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2373, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2373, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2373, file: !309, line: 300, baseType: !2450, size: 96, offset: 1056)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2450, file: !309, line: 153, baseType: !22, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2450, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2450, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2373, file: !309, line: 325, baseType: !2456, size: 32, offset: 1152)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2458)
!2458 = !{!2459, !2465, !2466}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2457, file: !406, line: 5074, baseType: !2460, size: 96)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2460, file: !410, line: 57, baseType: !413, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2460, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2460, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2457, file: !406, line: 5075, baseType: !2404, size: 64, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2457, file: !406, line: 5076, baseType: !2467, size: 32, offset: 160)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2467, file: !420, line: 52, baseType: !22, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2373, file: !309, line: 343, baseType: !2471, size: 64, offset: 1184)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2471, file: !379, line: 63, baseType: !152, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2471, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2477 = !{!2367, !2478, !2481, !2483}
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2369, file: !2480, line: 404, type: !107, isLocal: true, isDefinition: true)
!2480 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2369, file: !2480, line: 405, type: !107, isLocal: true, isDefinition: true)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "pending_current", scope: !2369, file: !2480, line: 425, type: !2372, isLocal: true, isDefinition: true)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2487, file: !2517, line: 19, type: !2523, isLocal: true, isDefinition: true)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2489, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2489 = !{!564, !106, !874, !152, !566, !107, !2490, !193, !376}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2492)
!2492 = !{!2493, !2508, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2491, file: !345, line: 245, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2496)
!2496 = !{!2497, !2503}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !319, line: 38, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !319, line: 38, size: 32, elements: !2499)
!2499 = !{!2500, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2498, file: !319, line: 39, baseType: !2501, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2498, file: !319, line: 40, baseType: !2501, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !319, line: 42, baseType: !2504, size: 32, offset: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !319, line: 42, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2504, file: !319, line: 43, baseType: !2501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2504, file: !319, line: 44, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2491, file: !345, line: 246, baseType: !2509, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2490}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2491, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2514 = !{!2515, !2485, !2518, !2520}
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2487, file: !2517, line: 15, type: !566, isLocal: true, isDefinition: true)
!2517 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2487, file: !2517, line: 25, type: !107, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2487, file: !2517, line: 17, type: !2522, isLocal: true, isDefinition: true)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2495)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !420, line: 52, baseType: !22, size: 32)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2532, retainedTypes: !2552, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2532 = !{!2533, !2541}
!2533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2534, line: 69, baseType: !32, size: 32, elements: !2535)
!2534 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2535 = !{!2536, !2537, !2538, !2539, !2540}
!2536 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2537 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2538 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2539 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2540 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2534, line: 56, baseType: !32, size: 32, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551}
!2543 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2544 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2545 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2546 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2547 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2548 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2549 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2550 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2551 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2552 = !{!107, !2533, !2541, !2553, !360, !264, !2555, !2556, !196, !198, !118, !185, !106, !22, !32, !187, !2558, !2559, !189, !188, !191, !190, !2554, !2560, !2561, !2562, !2563}
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2534, line: 31, baseType: !2554)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2534, line: 32, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2570, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2570 = !{!118, !196, !107, !32}
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2573 = !{!2574, !30}
!2574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2575, line: 27, baseType: !32, size: 32, elements: !2576)
!2575 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2576 = !{!2577, !2578, !2579, !2580, !2581}
!2577 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2578 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2579 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2580 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2581 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2584, retainedTypes: !2585, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2584 = !{!734, !2574, !30}
!2585 = !{!900, !2586, !106, !107, !874, !152, !195, !2603}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2588, file: !463, line: 413, baseType: !1730, size: 256)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2588, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2588, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2588, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2588, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2588, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2588, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2588, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2588, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2588, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2588, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2588, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2588, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2605, file: !463, line: 447, baseType: !467, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2605, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2605, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2605, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2605, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2605, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2605, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2605, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2605, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2605, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2605, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2605, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2605, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2605, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2605, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2605, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2605, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2605, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2605, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2605, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2605, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2632, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2632 = !{!106, !107, !22, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2635, file: !463, line: 447, baseType: !467, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2635, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2635, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2635, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2635, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2635, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2635, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2635, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2635, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2635, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2635, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2635, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2635, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2635, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2635, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2635, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2635, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2635, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2635, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2635, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2635, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2660, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2660 = !{!2661, !106, !107}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2663)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2663, file: !463, line: 447, baseType: !467, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2663, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2663, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2663, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2663, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2663, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2663, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2663, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2663, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2663, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2663, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2663, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2663, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2663, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2663, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2663, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2663, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2663, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2663, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2663, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2663, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2688 = !{!2689, !152, !106, !107}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2692)
!2691 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2698, !2703, !2708, !2713, !2718, !2723, !2728}
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 99, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 99, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2694, file: !2691, line: 99, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2694, file: !2691, line: 99, baseType: !152, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 100, baseType: !2699, size: 32, offset: 32)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 100, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2699, file: !2691, line: 100, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2699, file: !2691, line: 100, baseType: !152, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 101, baseType: !2704, size: 32, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 101, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2704, file: !2691, line: 101, baseType: !152, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2704, file: !2691, line: 101, baseType: !152, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 102, baseType: !2709, size: 32, offset: 96)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 102, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2709, file: !2691, line: 102, baseType: !152, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2709, file: !2691, line: 102, baseType: !152, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 103, baseType: !2714, size: 32, offset: 128)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 103, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2714, file: !2691, line: 103, baseType: !152, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2714, file: !2691, line: 103, baseType: !152, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 104, baseType: !2719, size: 32, offset: 160)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 104, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2719, file: !2691, line: 104, baseType: !152, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2719, file: !2691, line: 104, baseType: !152, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 105, baseType: !2724, size: 32, offset: 192)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 105, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2724, file: !2691, line: 105, baseType: !152, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2724, file: !2691, line: 105, baseType: !152, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2690, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2731 = !{!2732, !106, !107, !2757, !2800, !152}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2734, file: !463, line: 447, baseType: !467, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2734, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2734, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2734, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2734, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2734, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2734, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2734, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2734, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2734, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2734, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2734, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2734, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2734, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2734, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2734, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2734, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2734, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2734, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2734, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2759, file: !2691, line: 107, baseType: !2762, size: 256)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2763)
!2763 = !{!2764, !2769, !2774, !2779, !2784, !2789, !2794, !2799}
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 99, baseType: !2765, size: 32)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 99, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2765, file: !2691, line: 99, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2765, file: !2691, line: 99, baseType: !152, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 100, baseType: !2770, size: 32, offset: 32)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 100, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2770, file: !2691, line: 100, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2770, file: !2691, line: 100, baseType: !152, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 101, baseType: !2775, size: 32, offset: 64)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 101, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2775, file: !2691, line: 101, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2775, file: !2691, line: 101, baseType: !152, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 102, baseType: !2780, size: 32, offset: 96)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 102, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2780, file: !2691, line: 102, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2780, file: !2691, line: 102, baseType: !152, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 103, baseType: !2785, size: 32, offset: 128)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 103, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2785, file: !2691, line: 103, baseType: !152, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2785, file: !2691, line: 103, baseType: !152, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 104, baseType: !2790, size: 32, offset: 160)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 104, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2790, file: !2691, line: 104, baseType: !152, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2790, file: !2691, line: 104, baseType: !152, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 105, baseType: !2795, size: 32, offset: 192)
!2795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 105, size: 32, elements: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2795, file: !2691, line: 105, baseType: !152, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2795, file: !2691, line: 105, baseType: !152, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2762, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1715, retainedTypes: !2803, splitDebugInlining: false, nameTableKind: None)
!2802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2803 = !{!900, !874, !195, !152, !2804, !2821}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2806, file: !463, line: 413, baseType: !1730, size: 256)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2806, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2806, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2806, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2806, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2806, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2806, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2806, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2806, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2806, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2806, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2806, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2806, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2823)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2824)
!2824 = !{!2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2823, file: !463, line: 447, baseType: !467, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2823, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2823, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2823, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2823, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2823, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2823, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2823, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2823, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2823, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2823, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2823, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2823, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2823, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2823, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2823, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2823, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2823, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2823, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2823, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2823, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2848, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2848 = !{!2849, !106, !107}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2851)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2851, file: !463, line: 447, baseType: !467, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2851, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2851, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2851, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2851, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2851, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2851, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2851, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2851, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2851, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2851, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2851, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2851, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2851, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2851, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2851, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2851, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2851, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2851, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2851, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2851, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2876, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2876 = !{!120, !193, !185, !1104, !2877, !196, !106}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2881, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2884, file: !223, line: 337, baseType: !227, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2884, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2884, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2884, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2884, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2884, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2884, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2884, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2884, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2884, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2884, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2884, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2884, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2884, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2884, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2884, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2884, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2884, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2884, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2884, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2884, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2884, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2884, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2884, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2884, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2884, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2884, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2884, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2884, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2884, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2884, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2884, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2922, retainedTypes: !2938, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!2922 = !{!2923, !2930, !2934}
!2923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2924, line: 38, baseType: !32, size: 32, elements: !2925)
!2924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2925 = !{!2926, !2927, !2928, !2929}
!2926 = !DIEnumerator(name: "HAL_OK", value: 0)
!2927 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2928 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2929 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 184, baseType: !32, size: 32, elements: !2931)
!2931 = !{!2932, !2933}
!2932 = !DIEnumerator(name: "RESET", value: 0)
!2933 = !DIEnumerator(name: "SET", value: 1)
!2934 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 190, baseType: !32, size: 32, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIEnumerator(name: "DISABLE", value: 0)
!2937 = !DIEnumerator(name: "ENABLE", value: 1)
!2938 = !{!106, !2939, !195, !152, !1584, !2975, !2981, !2992, !197, !2993, !566}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2941, file: !223, line: 337, baseType: !227, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2941, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2941, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2941, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2941, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2941, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2941, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2941, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2941, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2941, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2941, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2941, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2941, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2941, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2941, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2941, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2941, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2941, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2941, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2941, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2941, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2941, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2941, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2941, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2941, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2941, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2941, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2941, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2941, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2941, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2941, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2941, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 329, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 325, size: 64, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2977, file: !223, line: 327, baseType: !227, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2977, file: !223, line: 328, baseType: !227, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !2983)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990, !2991}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2983, file: !223, line: 251, baseType: !227, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2983, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2983, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2983, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2983, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2983, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2983, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 275, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 264, size: 320, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2995, file: !223, line: 266, baseType: !227, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2995, file: !223, line: 267, baseType: !227, size: 32, offset: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2995, file: !223, line: 268, baseType: !227, size: 32, offset: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2995, file: !223, line: 269, baseType: !227, size: 32, offset: 96)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2995, file: !223, line: 270, baseType: !227, size: 32, offset: 128)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2995, file: !223, line: 271, baseType: !227, size: 32, offset: 160)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2995, file: !223, line: 272, baseType: !227, size: 32, offset: 192)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2995, file: !223, line: 273, baseType: !227, size: 32, offset: 224)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2995, file: !223, line: 274, baseType: !1258, size: 64, offset: 256)
!3006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3008, retainedTypes: !3009, splitDebugInlining: false, nameTableKind: None)
!3007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3008 = !{!942}
!3009 = !{!3010, !152, !3018, !3024, !3035}
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3012, file: !463, line: 766, baseType: !227, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3012, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3012, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3012, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 329, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 325, size: 64, elements: !3021)
!3021 = !{!3022, !3023}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !223, line: 327, baseType: !227, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3020, file: !223, line: 328, baseType: !227, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !3026)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !3027)
!3027 = !{!3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3026, file: !223, line: 251, baseType: !227, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3026, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3026, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3026, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3026, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3026, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3026, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !3038)
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3037, file: !223, line: 337, baseType: !227, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3037, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3037, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3037, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3037, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3037, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3037, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3037, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3037, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3037, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3037, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3037, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3037, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3037, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3037, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3037, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3037, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3037, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3037, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3037, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3037, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3037, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3037, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3037, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3037, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3037, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3037, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3037, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3037, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3037, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3037, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3037, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!3071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3073, splitDebugInlining: false, nameTableKind: None)
!3072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3073 = !{!106, !185}
!3074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3076, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3076 = !{!3077, !3084, !2574, !30}
!3077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3078, line: 14, baseType: !32, size: 32, elements: !3079)
!3078 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3079 = !{!3080, !3081, !3082, !3083}
!3080 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3081 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3082 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3083 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3078, line: 42, baseType: !32, size: 32, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091}
!3086 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3087 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3088 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3089 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3090 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3091 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3096, splitDebugInlining: false, nameTableKind: None)
!3095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3096 = !{!22, !106, !107}
!3097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!3099 = !{!"Ubuntu clang version 14.0.6"}
!3100 = !{i32 7, !"Dwarf Version", i32 4}
!3101 = !{i32 2, !"Debug Info Version", i32 3}
!3102 = !{i32 1, !"wchar_size", i32 4}
!3103 = !{i32 1, !"min_enum_size", i32 4}
!3104 = !{i32 1, !"branch-target-enforcement", i32 0}
!3105 = !{i32 1, !"sign-return-address", i32 0}
!3106 = !{i32 1, !"sign-return-address-all", i32 0}
!3107 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3108 = !{i32 7, !"frame-pointer", i32 2}
!3109 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3110, file: !3110, line: 26, type: !3111, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2182)
!3110 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null}
!3113 = !DILocation(line: 28, column: 1, scope: !3109)
!3114 = !{i64 2154450912, i64 2154450932, i64 2154450995}
!3115 = !DILocation(line: 29, column: 1, scope: !3109)
!3116 = !{i64 2154451327, i64 2154451347, i64 2154451410}
!3117 = !DILocation(line: 30, column: 1, scope: !3109)
!3118 = !{i64 2154451746, i64 2154451766, i64 2154451829}
!3119 = !DILocation(line: 31, column: 1, scope: !3109)
!3120 = !{i64 2154452165, i64 2154452185, i64 2154452248}
!3121 = !DILocation(line: 33, column: 1, scope: !3109)
!3122 = !{i64 2154452457, i64 2154452477, i64 2154452540}
!3123 = !DILocation(line: 35, column: 1, scope: !3109)
!3124 = !{i64 2154452782, i64 2154452802, i64 2154452865}
!3125 = !DILocation(line: 50, column: 1, scope: !3109)
!3126 = !{i64 2154453209, i64 2154453229, i64 2154453292}
!3127 = !DILocation(line: 54, column: 1, scope: !3109)
!3128 = !{i64 2154453648, i64 2154453668, i64 2154453731}
!3129 = !DILocation(line: 61, column: 1, scope: !3109)
!3130 = !{i64 2154453965, i64 2154453985, i64 2154454048}
!3131 = !DILocation(line: 63, column: 1, scope: !3109)
!3132 = !{i64 2154458406, i64 2154458426, i64 2154458489}
!3133 = !DILocation(line: 64, column: 1, scope: !3109)
!3134 = !{i64 2154458928, i64 2154458948, i64 2154459011}
!3135 = !DILocation(line: 65, column: 1, scope: !3109)
!3136 = !{i64 2154459426, i64 2154459446, i64 2154459509}
!3137 = !DILocation(line: 66, column: 1, scope: !3109)
!3138 = !{i64 2154459908, i64 2154459928, i64 2154459991}
!3139 = !DILocation(line: 67, column: 1, scope: !3109)
!3140 = !{i64 2154460415, i64 2154460435, i64 2154460498}
!3141 = !DILocation(line: 68, column: 1, scope: !3109)
!3142 = !{i64 2154460903, i64 2154460923, i64 2154460986}
!3143 = !DILocation(line: 70, column: 1, scope: !3109)
!3144 = !{i64 2154461371, i64 2154461391, i64 2154461454}
!3145 = !DILocation(line: 71, column: 1, scope: !3109)
!3146 = !{i64 2154461813, i64 2154461833, i64 2154461896}
!3147 = !DILocation(line: 72, column: 1, scope: !3109)
!3148 = !{i64 2154462271, i64 2154462291, i64 2154462354}
!3149 = !DILocation(line: 79, column: 1, scope: !3109)
!3150 = !{i64 2154462725, i64 2154462745, i64 2154462808}
!3151 = !DILocation(line: 80, column: 1, scope: !3109)
!3152 = !{i64 2154463236, i64 2154463256, i64 2154463319}
!3153 = !DILocation(line: 82, column: 1, scope: !3109)
!3154 = !{i64 2154463727, i64 2154463747, i64 2154463810}
!3155 = !DILocation(line: 97, column: 1, scope: !3109)
!3156 = !{i64 2154464064, i64 2154464084, i64 2154464147}
!3157 = !DILocation(line: 99, column: 1, scope: !3109)
!3158 = !{i64 2154464282, i64 2154464302, i64 2154464365}
!3159 = !DILocation(line: 102, column: 1, scope: !3109)
!3160 = !{i64 2154464539, i64 2154464559, i64 2154464622}
!3161 = !DILocation(line: 105, column: 1, scope: !3109)
!3162 = !{i64 2154464779, i64 2154464799, i64 2154464862}
!3163 = !DILocation(line: 115, column: 1, scope: !3109)
!3164 = !{i64 2154465118, i64 2154465138, i64 2154465201}
!3165 = !DILocation(line: 118, column: 1, scope: !3109)
!3166 = !{i64 2154465462, i64 2154465482, i64 2154465545}
!3167 = !DILocation(line: 32, column: 1, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3109, file: !3169, discriminator: 0)
!3169 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3170 = !{i64 2154465818, i64 2154465838, i64 2154465901}
!3171 = !DILocation(line: 33, column: 1, scope: !3168)
!3172 = !{i64 2154466330, i64 2154466350, i64 2154466413}
!3173 = !DILocation(line: 53, column: 1, scope: !3168)
!3174 = !{i64 2154466838, i64 2154466858, i64 2154466921}
!3175 = !DILocation(line: 54, column: 1, scope: !3168)
!3176 = !{i64 2154467256, i64 2154467276, i64 2154467339}
!3177 = !DILocation(line: 55, column: 1, scope: !3168)
!3178 = !{i64 2154471735, i64 2154471755, i64 2154471818}
!3179 = !DILocation(line: 56, column: 1, scope: !3168)
!3180 = !{i64 2154472153, i64 2154472173, i64 2154472236}
!3181 = !DILocation(line: 57, column: 1, scope: !3168)
!3182 = !{i64 2154472571, i64 2154472591, i64 2154472654}
!3183 = !DILocation(line: 58, column: 1, scope: !3168)
!3184 = !{i64 2154472989, i64 2154473009, i64 2154473072}
!3185 = !DILocation(line: 59, column: 1, scope: !3168)
!3186 = !{i64 2154473407, i64 2154473427, i64 2154473490}
!3187 = !DILocation(line: 60, column: 1, scope: !3168)
!3188 = !{i64 2154473831, i64 2154473851, i64 2154473914}
!3189 = !DILocation(line: 61, column: 1, scope: !3168)
!3190 = !{i64 2154474148, i64 2154474168, i64 2154474231}
!3191 = !DILocation(line: 70, column: 1, scope: !3168)
!3192 = !{i64 2154474377, i64 2154474397, i64 2154474460}
!3193 = !DILocation(line: 72, column: 1, scope: !3168)
!3194 = !{i64 2154474709, i64 2154474729, i64 2154474792}
!3195 = !DILocation(line: 73, column: 1, scope: !3168)
!3196 = !{i64 2154475159, i64 2154475179, i64 2154475242}
!3197 = !DILocation(line: 74, column: 1, scope: !3168)
!3198 = !{i64 2154475609, i64 2154475629, i64 2154475692}
!3199 = !DILocation(line: 75, column: 1, scope: !3168)
!3200 = !{i64 2154476059, i64 2154476079, i64 2154476142}
!3201 = !DILocation(line: 76, column: 1, scope: !3168)
!3202 = !{i64 2154476509, i64 2154476529, i64 2154476592}
!3203 = !DILocation(line: 77, column: 1, scope: !3168)
!3204 = !{i64 2154476959, i64 2154476979, i64 2154477042}
!3205 = !DILocation(line: 78, column: 1, scope: !3168)
!3206 = !{i64 2154477409, i64 2154477429, i64 2154477492}
!3207 = !DILocation(line: 79, column: 1, scope: !3168)
!3208 = !{i64 2154477859, i64 2154477879, i64 2154477942}
!3209 = !DILocation(line: 80, column: 1, scope: !3168)
!3210 = !{i64 2154478312, i64 2154478332, i64 2154478395}
!3211 = !DILocation(line: 84, column: 1, scope: !3168)
!3212 = !{i64 2154478644, i64 2154478664, i64 2154478727}
!3213 = !DILocation(line: 91, column: 1, scope: !3168)
!3214 = !{i64 2154479041, i64 2154479061, i64 2154479124}
!3215 = !DILocation(line: 93, column: 1, scope: !3168)
!3216 = !{i64 2154479408, i64 2154479428, i64 2154479491}
!3217 = !DILocation(line: 106, column: 1, scope: !3168)
!3218 = !{i64 2154479678, i64 2154479698, i64 2154479761}
!3219 = !DILocation(line: 11, column: 1, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3109, file: !3221, discriminator: 0)
!3221 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3222 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3223)
!3223 = !{!3224}
!3224 = !DILocalVariable(name: "data", arg: 1, scope: !3222, file: !111, line: 10, type: !106)
!3225 = !DILocation(line: 0, scope: !3222)
!3226 = !DILocation(line: 10, column: 1, scope: !3222)
!3227 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3111, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2182)
!3228 = !DILocation(line: 12, column: 2, scope: !3227)
!3229 = !DILocation(line: 13, column: 1, scope: !3227)
!3230 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3231, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3240)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!107, !106, !185, !152, !118, !3233}
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3234, line: 99, baseType: !3235)
!3234 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3234, line: 40, baseType: !3236)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3237)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3238)
!3238 = !{!3239}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3237, file: !200, line: 18, baseType: !106, size: 32)
!3240 = !{!3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3276, !3285, !3288, !3289, !3292, !3295, !3298, !3301, !3307}
!3241 = !DILocalVariable(name: "packaged", arg: 1, scope: !3230, file: !200, line: 233, type: !106)
!3242 = !DILocalVariable(name: "len", arg: 2, scope: !3230, file: !200, line: 233, type: !185)
!3243 = !DILocalVariable(name: "flags", arg: 3, scope: !3230, file: !200, line: 233, type: !152)
!3244 = !DILocalVariable(name: "fmt", arg: 4, scope: !3230, file: !200, line: 234, type: !118)
!3245 = !DILocalVariable(name: "ap", arg: 5, scope: !3230, file: !200, line: 234, type: !3233)
!3246 = !DILocalVariable(name: "buf0", scope: !3230, file: !200, line: 247, type: !194)
!3247 = !DILocalVariable(name: "buf", scope: !3230, file: !200, line: 248, type: !194)
!3248 = !DILocalVariable(name: "size", scope: !3230, file: !200, line: 249, type: !32)
!3249 = !DILocalVariable(name: "align", scope: !3230, file: !200, line: 250, type: !32)
!3250 = !DILocalVariable(name: "str_ptr_pos", scope: !3230, file: !200, line: 251, type: !3251)
!3251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1965)
!3252 = !DILocalVariable(name: "str_ptr_arg", scope: !3230, file: !200, line: 252, type: !3251)
!3253 = !DILocalVariable(name: "s_idx", scope: !3230, file: !200, line: 253, type: !32)
!3254 = !DILocalVariable(name: "s_rw_cnt", scope: !3230, file: !200, line: 254, type: !32)
!3255 = !DILocalVariable(name: "s_ro_cnt", scope: !3230, file: !200, line: 255, type: !32)
!3256 = !DILocalVariable(name: "arg_idx", scope: !3230, file: !200, line: 256, type: !107)
!3257 = !DILocalVariable(name: "i", scope: !3230, file: !200, line: 257, type: !32)
!3258 = !DILocalVariable(name: "s", scope: !3230, file: !200, line: 258, type: !118)
!3259 = !DILocalVariable(name: "parsing", scope: !3230, file: !200, line: 259, type: !145)
!3260 = !DILocalVariable(name: "rws_pos_en", scope: !3230, file: !200, line: 263, type: !145)
!3261 = !DILocalVariable(name: "fros_cnt", scope: !3230, file: !200, line: 268, type: !107)
!3262 = !DILocalVariable(name: "is_str_arg", scope: !3230, file: !200, line: 269, type: !145)
!3263 = !DILocalVariable(name: "pkg_hdr", scope: !3230, file: !200, line: 270, type: !3264)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!3265 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3266, line: 78, size: 32, elements: !3267)
!3266 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3267 = !{!3268, !3275}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3265, file: !3266, line: 80, baseType: !3269, size: 32)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3266, line: 45, size: 32, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3269, file: !3266, line: 47, baseType: !195, size: 8)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3269, file: !3266, line: 50, baseType: !195, size: 8, offset: 8)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3269, file: !3266, line: 53, baseType: !195, size: 8, offset: 16)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3269, file: !3266, line: 56, baseType: !195, size: 8, offset: 24)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3265, file: !3266, line: 82, baseType: !106, size: 32)
!3276 = !DILocalVariable(name: "v", scope: !3277, file: !200, line: 567, type: !3281)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 562, column: 14)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !200, line: 481, column: 18)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 466, column: 3)
!3280 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 343, column: 15)
!3281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3230, file: !200, line: 567, size: 64, elements: !3282)
!3282 = !{!3283, !3284}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3281, file: !200, line: 567, baseType: !183, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3281, file: !200, line: 567, baseType: !181, size: 64)
!3285 = !DILocalVariable(name: "is_ro", scope: !3286, file: !200, line: 620, type: !145)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 613, column: 19)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 613, column: 7)
!3288 = !DILocalVariable(name: "do_ro", scope: !3286, file: !200, line: 621, type: !145)
!3289 = !DILocalVariable(name: "s_ptr_idx", scope: !3290, file: !200, line: 626, type: !152)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 625, column: 11)
!3291 = distinct !DILexicalBlock(scope: !3286, file: !200, line: 623, column: 8)
!3292 = !DILocalVariable(name: "v", scope: !3293, file: !200, line: 684, type: !107)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !200, line: 683, column: 35)
!3294 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 683, column: 14)
!3295 = !DILocalVariable(name: "v", scope: !3296, file: !200, line: 691, type: !189)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !200, line: 690, column: 36)
!3297 = distinct !DILexicalBlock(scope: !3294, file: !200, line: 690, column: 14)
!3298 = !DILocalVariable(name: "v", scope: !3299, file: !200, line: 698, type: !191)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !200, line: 697, column: 41)
!3300 = distinct !DILexicalBlock(scope: !3297, file: !200, line: 697, column: 14)
!3301 = !DILocalVariable(name: "pos", scope: !3302, file: !200, line: 762, type: !195)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !200, line: 757, column: 31)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !200, line: 757, column: 3)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !200, line: 757, column: 3)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !200, line: 756, column: 16)
!3306 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 756, column: 6)
!3307 = !DILabel(scope: !3286, name: "process_string", file: !200, line: 615)
!3308 = !DILocation(line: 0, scope: !3230)
!3309 = !DILocation(line: 251, column: 2, scope: !3230)
!3310 = !DILocation(line: 251, column: 10, scope: !3230)
!3311 = !DILocation(line: 252, column: 2, scope: !3230)
!3312 = !DILocation(line: 252, column: 10, scope: !3230)
!3313 = !DILocation(line: 263, column: 29, scope: !3230)
!3314 = !DILocation(line: 263, column: 21, scope: !3230)
!3315 = !DILocation(line: 268, column: 21, scope: !3230)
!3316 = !DILocation(line: 268, column: 19, scope: !3230)
!3317 = !DILocation(line: 273, column: 6, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 273, column: 6)
!3319 = !DILocation(line: 273, column: 26, scope: !3318)
!3320 = !DILocation(line: 273, column: 6, scope: !3230)
!3321 = !DILocation(line: 297, column: 6, scope: !3230)
!3322 = !DILocation(line: 305, column: 11, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 305, column: 6)
!3324 = !DILocation(line: 305, column: 6, scope: !3230)
!3325 = !DILocation(line: 327, column: 19, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 327, column: 6)
!3327 = !DILocation(line: 327, column: 22, scope: !3326)
!3328 = !DILocation(line: 327, column: 33, scope: !3326)
!3329 = !DILocation(line: 327, column: 50, scope: !3326)
!3330 = !DILocation(line: 327, column: 6, scope: !3230)
!3331 = !DILocation(line: 338, column: 9, scope: !3230)
!3332 = !DILocation(line: 341, column: 2, scope: !3230)
!3333 = !DILocation(line: 472, column: 8, scope: !3279)
!3334 = !DILocation(line: 473, column: 14, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !200, line: 473, column: 9)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !200, line: 472, column: 18)
!3337 = distinct !DILexicalBlock(scope: !3279, file: !200, line: 472, column: 8)
!3338 = !DILocation(line: 473, column: 9, scope: !3336)
!3339 = !DILocation(line: 479, column: 5, scope: !3336)
!3340 = !DILocation(line: 468, column: 9, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3279, file: !200, line: 468, column: 8)
!3342 = !DILocation(line: 468, column: 8, scope: !3341)
!3343 = !DILocation(line: 468, column: 15, scope: !3341)
!3344 = !DILocation(line: 468, column: 8, scope: !3279)
!3345 = distinct !{!3345, !3346, !3347}
!3346 = !DILocation(line: 343, column: 2, scope: !3230)
!3347 = !DILocation(line: 712, column: 2, scope: !3230)
!3348 = !DILocation(line: 481, column: 4, scope: !3279)
!3349 = !DILocation(line: 484, column: 12, scope: !3278)
!3350 = !DILocation(line: 485, column: 5, scope: !3278)
!3351 = !DILocation(line: 505, column: 5, scope: !3278)
!3352 = !DILocation(line: 518, column: 5, scope: !3278)
!3353 = !DILocation(line: 523, column: 5, scope: !3278)
!3354 = !DILocation(line: 532, column: 9, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 532, column: 9)
!3356 = !DILocation(line: 532, column: 17, scope: !3355)
!3357 = !DILocation(line: 532, column: 9, scope: !3278)
!3358 = !DILocation(line: 533, column: 10, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !200, line: 533, column: 10)
!3360 = distinct !DILexicalBlock(scope: !3355, file: !200, line: 532, column: 25)
!3361 = !DILocation(line: 533, column: 18, scope: !3359)
!3362 = !DILocation(line: 0, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 569, column: 9)
!3364 = !DILocation(line: 0, scope: !3277)
!3365 = !DILocation(line: 579, column: 20, scope: !3277)
!3366 = !DILocation(line: 579, column: 11, scope: !3277)
!3367 = !DILocation(line: 580, column: 9, scope: !3277)
!3368 = !DILocation(line: 582, column: 21, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !200, line: 582, column: 10)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !200, line: 580, column: 23)
!3371 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 580, column: 9)
!3372 = !DILocation(line: 582, column: 28, scope: !3369)
!3373 = !DILocation(line: 582, column: 10, scope: !3370)
!3374 = !DILocation(line: 0, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !200, line: 587, column: 17)
!3376 = distinct !DILexicalBlock(scope: !3370, file: !200, line: 585, column: 10)
!3377 = !DILocation(line: 593, column: 9, scope: !3277)
!3378 = !DILocation(line: 600, column: 5, scope: !3278)
!3379 = !DILocation(line: 605, column: 18, scope: !3280)
!3380 = !DILocation(line: 605, column: 9, scope: !3280)
!3381 = !DILocation(line: 608, column: 20, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 608, column: 7)
!3383 = !DILocation(line: 608, column: 23, scope: !3382)
!3384 = !DILocation(line: 608, column: 34, scope: !3382)
!3385 = !DILocation(line: 608, column: 41, scope: !3382)
!3386 = !DILocation(line: 608, column: 7, scope: !3280)
!3387 = !DILocation(line: 613, column: 7, scope: !3280)
!3388 = !DILocation(line: 614, column: 8, scope: !3286)
!3389 = !DILocation(line: 614, column: 4, scope: !3286)
!3390 = !DILocation(line: 256, column: 6, scope: !3230)
!3391 = !DILocation(line: 254, column: 15, scope: !3230)
!3392 = !DILocation(line: 320, column: 7, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 305, column: 20)
!3394 = !DILocation(line: 615, column: 1, scope: !3286)
!3395 = !DILocation(line: 616, column: 8, scope: !3286)
!3396 = !DILocation(line: 617, column: 5, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !200, line: 616, column: 22)
!3398 = distinct !DILexicalBlock(scope: !3286, file: !200, line: 616, column: 8)
!3399 = !DILocation(line: 617, column: 25, scope: !3397)
!3400 = !DILocation(line: 618, column: 4, scope: !3397)
!3401 = !DILocation(line: 620, column: 26, scope: !3286)
!3402 = !DILocation(line: 620, column: 29, scope: !3286)
!3403 = !DILocation(line: 620, column: 17, scope: !3286)
!3404 = !DILocation(line: 620, column: 43, scope: !3286)
!3405 = !DILocation(line: 0, scope: !3286)
!3406 = !DILocation(line: 623, column: 14, scope: !3291)
!3407 = !DILocation(line: 626, column: 26, scope: !3290)
!3408 = !DILocation(line: 626, column: 37, scope: !3290)
!3409 = !DILocation(line: 0, scope: !3290)
!3410 = !DILocation(line: 634, column: 15, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3290, file: !200, line: 634, column: 9)
!3412 = !DILocation(line: 635, column: 6, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !200, line: 635, column: 6)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 635, column: 6)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 635, column: 6)
!3416 = distinct !DILexicalBlock(scope: !3411, file: !200, line: 634, column: 44)
!3417 = !DILocation(line: 639, column: 15, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3290, file: !200, line: 639, column: 9)
!3419 = !DILocation(line: 639, column: 9, scope: !3290)
!3420 = !DILocation(line: 640, column: 6, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !200, line: 640, column: 6)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !200, line: 640, column: 6)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !200, line: 640, column: 6)
!3424 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 639, column: 43)
!3425 = !DILocation(line: 644, column: 9, scope: !3290)
!3426 = !DILocation(line: 649, column: 27, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !200, line: 644, column: 23)
!3428 = distinct !DILexicalBlock(scope: !3290, file: !200, line: 644, column: 9)
!3429 = !DILocation(line: 649, column: 6, scope: !3427)
!3430 = !DILocation(line: 649, column: 25, scope: !3427)
!3431 = !DILocation(line: 650, column: 27, scope: !3427)
!3432 = !DILocation(line: 650, column: 6, scope: !3427)
!3433 = !DILocation(line: 650, column: 25, scope: !3427)
!3434 = !DILocation(line: 651, column: 10, scope: !3427)
!3435 = !DILocation(line: 653, column: 26, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !200, line: 651, column: 17)
!3437 = distinct !DILexicalBlock(scope: !3427, file: !200, line: 651, column: 10)
!3438 = !DILocation(line: 654, column: 15, scope: !3436)
!3439 = !DILocation(line: 655, column: 6, scope: !3436)
!3440 = !DILocation(line: 656, column: 15, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3437, file: !200, line: 655, column: 13)
!3442 = !DILocation(line: 658, column: 16, scope: !3428)
!3443 = !DILocation(line: 663, column: 10, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !200, line: 658, column: 23)
!3445 = distinct !DILexicalBlock(scope: !3428, file: !200, line: 658, column: 16)
!3446 = !DILocation(line: 664, column: 5, scope: !3444)
!3447 = !DILocation(line: 664, column: 16, scope: !3445)
!3448 = !DILocation(line: 669, column: 10, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !200, line: 664, column: 28)
!3450 = distinct !DILexicalBlock(scope: !3445, file: !200, line: 664, column: 16)
!3451 = !DILocation(line: 670, column: 5, scope: !3449)
!3452 = !DILocation(line: 675, column: 13, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3450, file: !200, line: 670, column: 12)
!3454 = !DILocation(line: 675, column: 27, scope: !3453)
!3455 = !DILocation(line: 675, column: 10, scope: !3453)
!3456 = !DILocation(line: 678, column: 10, scope: !3290)
!3457 = !DILocation(line: 680, column: 8, scope: !3286)
!3458 = !DILocation(line: 683, column: 14, scope: !3287)
!3459 = !DILocation(line: 684, column: 12, scope: !3293)
!3460 = !DILocation(line: 0, scope: !3293)
!3461 = !DILocation(line: 686, column: 8, scope: !3293)
!3462 = !DILocation(line: 687, column: 5, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !200, line: 686, column: 22)
!3464 = distinct !DILexicalBlock(scope: !3293, file: !200, line: 686, column: 8)
!3465 = !DILocation(line: 687, column: 17, scope: !3463)
!3466 = !DILocation(line: 688, column: 4, scope: !3463)
!3467 = !DILocation(line: 698, column: 18, scope: !3299)
!3468 = !DILocation(line: 0, scope: !3299)
!3469 = !DILocation(line: 700, column: 8, scope: !3299)
!3470 = !DILocation(line: 704, column: 6, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !200, line: 703, column: 12)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !200, line: 701, column: 9)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !200, line: 700, column: 22)
!3474 = distinct !DILexicalBlock(scope: !3299, file: !200, line: 700, column: 8)
!3475 = !DILocation(line: 704, column: 24, scope: !3471)
!3476 = !DILocation(line: 706, column: 4, scope: !3473)
!3477 = !DILocation(line: 709, column: 4, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 709, column: 4)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !200, line: 709, column: 4)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !200, line: 709, column: 4)
!3481 = distinct !DILexicalBlock(scope: !3300, file: !200, line: 708, column: 10)
!3482 = !DILocation(line: 0, scope: !3294)
!3483 = !DILocation(line: 0, scope: !3280)
!3484 = !DILocation(line: 720, column: 6, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 720, column: 6)
!3486 = !DILocation(line: 720, column: 17, scope: !3485)
!3487 = !DILocation(line: 720, column: 31, scope: !3485)
!3488 = !DILocation(line: 720, column: 6, scope: !3230)
!3489 = !DILocation(line: 721, column: 3, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !200, line: 721, column: 3)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !200, line: 721, column: 3)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !200, line: 721, column: 3)
!3493 = distinct !DILexicalBlock(scope: !3485, file: !200, line: 720, column: 38)
!3494 = !DILocation(line: 729, column: 6, scope: !3230)
!3495 = !DILocation(line: 730, column: 21, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !200, line: 729, column: 20)
!3497 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 729, column: 6)
!3498 = !DILocation(line: 730, column: 27, scope: !3496)
!3499 = !DILocation(line: 730, column: 3, scope: !3496)
!3500 = !DILocation(line: 737, column: 22, scope: !3230)
!3501 = !DILocation(line: 737, column: 20, scope: !3230)
!3502 = !DILocation(line: 0, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 739, column: 6)
!3504 = !DILocation(line: 745, column: 17, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3503, file: !200, line: 743, column: 9)
!3506 = !DILocation(line: 745, column: 25, scope: !3505)
!3507 = !DILocation(line: 746, column: 17, scope: !3505)
!3508 = !DILocation(line: 746, column: 28, scope: !3505)
!3509 = !DILocation(line: 749, column: 29, scope: !3230)
!3510 = !DILocation(line: 749, column: 16, scope: !3230)
!3511 = !DILocation(line: 749, column: 27, scope: !3230)
!3512 = !DILocation(line: 756, column: 6, scope: !3306)
!3513 = !DILocation(line: 756, column: 6, scope: !3230)
!3514 = !DILocation(line: 757, column: 3, scope: !3304)
!3515 = !DILocation(line: 758, column: 10, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3302, file: !200, line: 758, column: 8)
!3517 = !DILocation(line: 758, column: 25, scope: !3516)
!3518 = !DILocation(line: 758, column: 8, scope: !3302)
!3519 = !DILocation(line: 0, scope: !3302)
!3520 = !DILocation(line: 765, column: 8, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3302, file: !200, line: 765, column: 8)
!3522 = !DILocation(line: 765, column: 19, scope: !3521)
!3523 = !DILocation(line: 765, column: 23, scope: !3521)
!3524 = !DILocation(line: 765, column: 8, scope: !3302)
!3525 = !DILocation(line: 762, column: 33, scope: !3302)
!3526 = !DILocation(line: 769, column: 8, scope: !3302)
!3527 = !DILocation(line: 769, column: 11, scope: !3302)
!3528 = !DILocation(line: 757, column: 27, scope: !3303)
!3529 = !DILocation(line: 757, column: 17, scope: !3303)
!3530 = distinct !{!3530, !3514, !3531}
!3531 = !DILocation(line: 770, column: 3, scope: !3304)
!3532 = !DILocation(line: 774, column: 16, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !200, line: 774, column: 2)
!3534 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 774, column: 2)
!3535 = !DILocation(line: 774, column: 2, scope: !3534)
!3536 = !DILocation(line: 776, column: 16, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !200, line: 776, column: 7)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !200, line: 774, column: 30)
!3539 = !DILocation(line: 776, column: 19, scope: !3537)
!3540 = !DILocation(line: 776, column: 34, scope: !3537)
!3541 = !DILocation(line: 776, column: 7, scope: !3538)
!3542 = !DILocation(line: 780, column: 7, scope: !3538)
!3543 = !DILocation(line: 782, column: 13, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !200, line: 780, column: 19)
!3545 = distinct !DILexicalBlock(scope: !3538, file: !200, line: 780, column: 7)
!3546 = !DILocation(line: 782, column: 8, scope: !3544)
!3547 = !DILocation(line: 782, column: 11, scope: !3544)
!3548 = !DILocation(line: 783, column: 3, scope: !3544)
!3549 = !DILocation(line: 785, column: 26, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3545, file: !200, line: 783, column: 10)
!3551 = !DILocation(line: 785, column: 41, scope: !3550)
!3552 = !DILocation(line: 785, column: 24, scope: !3550)
!3553 = !DILocation(line: 785, column: 8, scope: !3550)
!3554 = !DILocation(line: 787, column: 52, scope: !3550)
!3555 = !DILocation(line: 789, column: 11, scope: !3550)
!3556 = !DILocation(line: 789, column: 21, scope: !3550)
!3557 = !DILocation(line: 0, scope: !3545)
!3558 = !DILocation(line: 793, column: 7, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3538, file: !200, line: 793, column: 7)
!3560 = !DILocation(line: 793, column: 18, scope: !3559)
!3561 = !DILocation(line: 793, column: 22, scope: !3559)
!3562 = !DILocation(line: 793, column: 29, scope: !3559)
!3563 = !DILocation(line: 793, column: 7, scope: !3538)
!3564 = !DILocation(line: 797, column: 12, scope: !3538)
!3565 = !DILocation(line: 797, column: 7, scope: !3538)
!3566 = !DILocation(line: 797, column: 10, scope: !3538)
!3567 = !DILocation(line: 799, column: 3, scope: !3538)
!3568 = !DILocation(line: 800, column: 7, scope: !3538)
!3569 = !DILocation(line: 801, column: 2, scope: !3538)
!3570 = !DILocation(line: 338, column: 4, scope: !3230)
!3571 = !DILocation(line: 774, column: 26, scope: !3533)
!3572 = distinct !{!3572, !3535, !3573}
!3573 = !DILocation(line: 801, column: 2, scope: !3534)
!3574 = !DILocation(line: 808, column: 9, scope: !3230)
!3575 = !DILocation(line: 808, column: 2, scope: !3230)
!3576 = !DILocation(line: 813, column: 1, scope: !3230)
!3577 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3578, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3580)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!145, !118}
!3580 = !{!3581}
!3581 = !DILocalVariable(name: "addr", arg: 1, scope: !3577, file: !200, line: 33, type: !118)
!3582 = !DILocation(line: 0, scope: !3577)
!3583 = !DILocation(line: 41, column: 9, scope: !3577)
!3584 = !DILocation(line: 41, column: 2, scope: !3577)
!3585 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3586, file: !3586, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3587)
!3586 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3587 = !{!3588}
!3588 = !DILocalVariable(name: "addr", arg: 1, scope: !3585, file: !3586, line: 24, type: !13)
!3589 = !DILocation(line: 0, scope: !3585)
!3590 = !DILocation(line: 49, column: 30, scope: !3585)
!3591 = !DILocation(line: 49, column: 57, scope: !3585)
!3592 = !DILocation(line: 49, column: 2, scope: !3585)
!3593 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3594, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!107, !106, !185, !152, !118, null}
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3602}
!3597 = !DILocalVariable(name: "packaged", arg: 1, scope: !3593, file: !200, line: 815, type: !106)
!3598 = !DILocalVariable(name: "len", arg: 2, scope: !3593, file: !200, line: 815, type: !185)
!3599 = !DILocalVariable(name: "flags", arg: 3, scope: !3593, file: !200, line: 815, type: !152)
!3600 = !DILocalVariable(name: "format", arg: 4, scope: !3593, file: !200, line: 816, type: !118)
!3601 = !DILocalVariable(name: "ap", scope: !3593, file: !200, line: 818, type: !3233)
!3602 = !DILocalVariable(name: "ret", scope: !3593, file: !200, line: 819, type: !107)
!3603 = !DILocation(line: 0, scope: !3593)
!3604 = !DILocation(line: 818, column: 2, scope: !3593)
!3605 = !DILocation(line: 818, column: 10, scope: !3593)
!3606 = !DILocation(line: 821, column: 2, scope: !3593)
!3607 = !DILocation(line: 822, column: 8, scope: !3593)
!3608 = !DILocation(line: 823, column: 2, scope: !3593)
!3609 = !DILocation(line: 825, column: 1, scope: !3593)
!3610 = !DILocation(line: 824, column: 2, scope: !3593)
!3611 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3612, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3622)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!107, !3614, !3618, !106, !106}
!3614 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3266, line: 297, baseType: !3615)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 32)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!107, null}
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3266, line: 328, baseType: !3619)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 32)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!107, !3614, !106, !118, !3233}
!3622 = !{!3623, !3624, !3625, !3626, !3627, !3628, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641}
!3623 = !DILocalVariable(name: "out", arg: 1, scope: !3611, file: !200, line: 827, type: !3614)
!3624 = !DILocalVariable(name: "formatter", arg: 2, scope: !3611, file: !200, line: 828, type: !3618)
!3625 = !DILocalVariable(name: "ctx", arg: 3, scope: !3611, file: !200, line: 829, type: !106)
!3626 = !DILocalVariable(name: "packaged", arg: 4, scope: !3611, file: !200, line: 829, type: !106)
!3627 = !DILocalVariable(name: "buf", scope: !3611, file: !200, line: 831, type: !194)
!3628 = !DILocalVariable(name: "hdr", scope: !3611, file: !200, line: 832, type: !3629)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 32)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3266, line: 96, size: 64, elements: !3631)
!3631 = !{!3632, !3633}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3630, file: !3266, line: 98, baseType: !3265, size: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3630, file: !3266, line: 101, baseType: !193, size: 32, offset: 32)
!3634 = !DILocalVariable(name: "s", scope: !3611, file: !200, line: 833, type: !193)
!3635 = !DILocalVariable(name: "ps", scope: !3611, file: !200, line: 833, type: !192)
!3636 = !DILocalVariable(name: "i", scope: !3611, file: !200, line: 834, type: !32)
!3637 = !DILocalVariable(name: "args_size", scope: !3611, file: !200, line: 834, type: !32)
!3638 = !DILocalVariable(name: "s_nbr", scope: !3611, file: !200, line: 834, type: !32)
!3639 = !DILocalVariable(name: "ros_nbr", scope: !3611, file: !200, line: 834, type: !32)
!3640 = !DILocalVariable(name: "rws_nbr", scope: !3611, file: !200, line: 834, type: !32)
!3641 = !DILocalVariable(name: "s_idx", scope: !3611, file: !200, line: 834, type: !32)
!3642 = !DILocation(line: 0, scope: !3611)
!3643 = !DILocation(line: 836, column: 10, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3611, file: !200, line: 836, column: 6)
!3645 = !DILocation(line: 836, column: 6, scope: !3611)
!3646 = !DILocation(line: 842, column: 28, scope: !3611)
!3647 = !DILocation(line: 842, column: 14, scope: !3611)
!3648 = !DILocation(line: 852, column: 16, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !200, line: 852, column: 2)
!3650 = distinct !DILexicalBlock(scope: !3611, file: !200, line: 852, column: 2)
!3651 = !DILocation(line: 852, column: 2, scope: !3650)
!3652 = !DILocation(line: 841, column: 28, scope: !3611)
!3653 = !DILocation(line: 841, column: 14, scope: !3611)
!3654 = !DILocation(line: 841, column: 32, scope: !3611)
!3655 = !DILocation(line: 847, column: 19, scope: !3611)
!3656 = !DILocation(line: 843, column: 28, scope: !3611)
!3657 = !DILocation(line: 843, column: 14, scope: !3611)
!3658 = !DILocation(line: 847, column: 31, scope: !3611)
!3659 = !DILocation(line: 844, column: 28, scope: !3611)
!3660 = !DILocation(line: 844, column: 14, scope: !3611)
!3661 = !DILocation(line: 847, column: 45, scope: !3611)
!3662 = !DILocation(line: 847, column: 41, scope: !3611)
!3663 = !DILocation(line: 854, column: 24, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3649, file: !200, line: 852, column: 30)
!3665 = !DILocation(line: 854, column: 11, scope: !3664)
!3666 = !DILocation(line: 855, column: 30, scope: !3664)
!3667 = !DILocation(line: 855, column: 22, scope: !3664)
!3668 = !DILocation(line: 855, column: 8, scope: !3664)
!3669 = !DILocation(line: 857, column: 7, scope: !3664)
!3670 = !DILocation(line: 859, column: 8, scope: !3664)
!3671 = !DILocation(line: 859, column: 18, scope: !3664)
!3672 = !DILocation(line: 859, column: 5, scope: !3664)
!3673 = !DILocation(line: 852, column: 26, scope: !3649)
!3674 = distinct !{!3674, !3651, !3675}
!3675 = !DILocation(line: 860, column: 2, scope: !3650)
!3676 = !DILocation(line: 863, column: 6, scope: !3611)
!3677 = !DILocation(line: 866, column: 56, scope: !3611)
!3678 = !DILocation(line: 866, column: 9, scope: !3611)
!3679 = !DILocation(line: 866, column: 2, scope: !3611)
!3680 = !DILocation(line: 867, column: 1, scope: !3611)
!3681 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3682, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3684)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!107, !3614, !3618, !106, !118, !106}
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3690}
!3685 = !DILocalVariable(name: "out", arg: 1, scope: !3681, file: !200, line: 179, type: !3614)
!3686 = !DILocalVariable(name: "formatter", arg: 2, scope: !3681, file: !200, line: 180, type: !3618)
!3687 = !DILocalVariable(name: "ctx", arg: 3, scope: !3681, file: !200, line: 181, type: !106)
!3688 = !DILocalVariable(name: "fmt", arg: 4, scope: !3681, file: !200, line: 182, type: !118)
!3689 = !DILocalVariable(name: "buf", arg: 5, scope: !3681, file: !200, line: 182, type: !106)
!3690 = !DILocalVariable(name: "u", scope: !3681, file: !200, line: 187, type: !3691)
!3691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3681, file: !200, line: 184, size: 32, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3691, file: !200, line: 185, baseType: !3233, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3691, file: !200, line: 186, baseType: !106, size: 32)
!3695 = !DILocation(line: 0, scope: !3681)
!3696 = !DILocation(line: 191, column: 9, scope: !3681)
!3697 = !DILocation(line: 191, column: 2, scope: !3681)
!3698 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3699, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!145, !118, !107}
!3701 = !{!3702, !3703, !3704, !3705, !3706}
!3702 = !DILocalVariable(name: "fmt", arg: 1, scope: !3698, file: !200, line: 881, type: !118)
!3703 = !DILocalVariable(name: "n", arg: 2, scope: !3698, file: !200, line: 881, type: !107)
!3704 = !DILocalVariable(name: "c", scope: !3698, file: !200, line: 883, type: !120)
!3705 = !DILocalVariable(name: "mod", scope: !3698, file: !200, line: 884, type: !145)
!3706 = !DILocalVariable(name: "cnt", scope: !3698, file: !200, line: 885, type: !107)
!3707 = !DILocation(line: 0, scope: !3698)
!3708 = !DILocation(line: 887, column: 14, scope: !3698)
!3709 = !DILocation(line: 887, column: 22, scope: !3698)
!3710 = !DILocation(line: 887, column: 2, scope: !3698)
!3711 = !DILocation(line: 887, column: 18, scope: !3698)
!3712 = !DILocation(line: 888, column: 7, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3698, file: !200, line: 887, column: 31)
!3714 = !DILocation(line: 889, column: 12, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !200, line: 889, column: 8)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !200, line: 888, column: 12)
!3717 = distinct !DILexicalBlock(scope: !3713, file: !200, line: 888, column: 7)
!3718 = !DILocation(line: 889, column: 8, scope: !3716)
!3719 = !DILocation(line: 890, column: 11, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 890, column: 9)
!3721 = distinct !DILexicalBlock(scope: !3715, file: !200, line: 889, column: 18)
!3722 = !DILocation(line: 890, column: 9, scope: !3721)
!3723 = !DILocation(line: 892, column: 16, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3720, file: !200, line: 892, column: 16)
!3725 = !DILocation(line: 892, column: 16, scope: !3720)
!3726 = !DILocation(line: 895, column: 15, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3715, file: !200, line: 895, column: 15)
!3728 = !DILocation(line: 895, column: 15, scope: !3715)
!3729 = !DILocation(line: 900, column: 9, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3713, file: !200, line: 900, column: 7)
!3731 = !DILocation(line: 900, column: 7, scope: !3713)
!3732 = distinct !{!3732, !3710, !3733}
!3733 = !DILocation(line: 903, column: 2, scope: !3698)
!3734 = !DILocation(line: 906, column: 1, scope: !3698)
!3735 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3736, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!145, !120}
!3738 = !{!3739}
!3739 = !DILocalVariable(name: "c", arg: 1, scope: !3735, file: !200, line: 873, type: !120)
!3740 = !DILocation(line: 0, scope: !3735)
!3741 = !DILocation(line: 875, column: 19, scope: !3735)
!3742 = !DILocation(line: 875, column: 2, scope: !3735)
!3743 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3744, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3750)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!107, !106, !185, !3746, !106, !152, !2800, !185}
!3746 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3266, line: 308, baseType: !3747)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 32)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!107, !13, !185, !106}
!3750 = !{!3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3768, !3769, !3770, !3771, !3772, !3778, !3781, !3782, !3783, !3785, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3801, !3804, !3805, !3806, !3807, !3808, !3809, !3811, !3814, !3815, !3816}
!3751 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3743, file: !200, line: 908, type: !106)
!3752 = !DILocalVariable(name: "in_len", arg: 2, scope: !3743, file: !200, line: 909, type: !185)
!3753 = !DILocalVariable(name: "cb", arg: 3, scope: !3743, file: !200, line: 910, type: !3746)
!3754 = !DILocalVariable(name: "ctx", arg: 4, scope: !3743, file: !200, line: 911, type: !106)
!3755 = !DILocalVariable(name: "flags", arg: 5, scope: !3743, file: !200, line: 912, type: !152)
!3756 = !DILocalVariable(name: "strl", arg: 6, scope: !3743, file: !200, line: 913, type: !2800)
!3757 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3743, file: !200, line: 914, type: !185)
!3758 = !DILocalVariable(name: "buf", scope: !3743, file: !200, line: 918, type: !194)
!3759 = !DILocalVariable(name: "buf32", scope: !3743, file: !200, line: 919, type: !999)
!3760 = !DILocalVariable(name: "args_size", scope: !3743, file: !200, line: 920, type: !32)
!3761 = !DILocalVariable(name: "ros_nbr", scope: !3743, file: !200, line: 920, type: !32)
!3762 = !DILocalVariable(name: "rws_nbr", scope: !3743, file: !200, line: 920, type: !32)
!3763 = !DILocalVariable(name: "fmt_present", scope: !3743, file: !200, line: 921, type: !145)
!3764 = !DILocalVariable(name: "rw_cpy", scope: !3743, file: !200, line: 922, type: !145)
!3765 = !DILocalVariable(name: "ro_cpy", scope: !3743, file: !200, line: 923, type: !145)
!3766 = !DILocalVariable(name: "in_desc", scope: !3743, file: !200, line: 924, type: !3767)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 32)
!3768 = !DILocalVariable(name: "out_len", scope: !3743, file: !200, line: 960, type: !107)
!3769 = !DILocalVariable(name: "fmt", scope: !3743, file: !200, line: 965, type: !118)
!3770 = !DILocalVariable(name: "str_pos", scope: !3743, file: !200, line: 966, type: !194)
!3771 = !DILocalVariable(name: "strl_cnt", scope: !3743, file: !200, line: 967, type: !185)
!3772 = !DILocalVariable(name: "i", scope: !3773, file: !200, line: 973, type: !107)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !200, line: 973, column: 4)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 972, column: 15)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !200, line: 972, column: 7)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 970, column: 18)
!3777 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 970, column: 6)
!3778 = !DILocalVariable(name: "str", scope: !3779, file: !200, line: 974, type: !118)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 973, column: 38)
!3780 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 973, column: 4)
!3781 = !DILocalVariable(name: "len", scope: !3779, file: !200, line: 975, type: !107)
!3782 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3776, file: !200, line: 990, type: !145)
!3783 = !DILocalVariable(name: "i", scope: !3784, file: !200, line: 995, type: !107)
!3784 = distinct !DILexicalBlock(scope: !3776, file: !200, line: 995, column: 3)
!3785 = !DILocalVariable(name: "arg_idx", scope: !3786, file: !200, line: 996, type: !195)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 995, column: 37)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !200, line: 995, column: 3)
!3788 = !DILocalVariable(name: "arg_pos", scope: !3786, file: !200, line: 997, type: !195)
!3789 = !DILocalVariable(name: "str", scope: !3786, file: !200, line: 998, type: !118)
!3790 = !DILocalVariable(name: "is_ro", scope: !3786, file: !200, line: 999, type: !145)
!3791 = !DILocalVariable(name: "len", scope: !3786, file: !200, line: 1000, type: !107)
!3792 = !DILocalVariable(name: "out_desc", scope: !3743, file: !200, line: 1038, type: !3269)
!3793 = !DILocalVariable(name: "cpy_str_pos", scope: !3743, file: !200, line: 1040, type: !3251)
!3794 = !DILocalVariable(name: "keep_str_pos", scope: !3743, file: !200, line: 1042, type: !3251)
!3795 = !DILocalVariable(name: "scpy_cnt", scope: !3743, file: !200, line: 1043, type: !195)
!3796 = !DILocalVariable(name: "keep_cnt", scope: !3743, file: !200, line: 1044, type: !195)
!3797 = !DILocalVariable(name: "dst", scope: !3743, file: !200, line: 1045, type: !194)
!3798 = !DILocalVariable(name: "rv", scope: !3743, file: !200, line: 1046, type: !107)
!3799 = !DILocalVariable(name: "i", scope: !3800, file: !200, line: 1074, type: !107)
!3800 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1074, column: 2)
!3801 = !DILocalVariable(name: "arg_idx", scope: !3802, file: !200, line: 1075, type: !195)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !200, line: 1074, column: 36)
!3803 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 1074, column: 2)
!3804 = !DILocalVariable(name: "arg_pos", scope: !3802, file: !200, line: 1076, type: !195)
!3805 = !DILocalVariable(name: "str", scope: !3802, file: !200, line: 1077, type: !118)
!3806 = !DILocalVariable(name: "is_ro", scope: !3802, file: !200, line: 1078, type: !145)
!3807 = !DILocalVariable(name: "in_desc_backup", scope: !3743, file: !200, line: 1114, type: !3269)
!3808 = !DILocalVariable(name: "strs_len", scope: !3743, file: !200, line: 1134, type: !185)
!3809 = !DILocalVariable(name: "i", scope: !3810, file: !200, line: 1143, type: !107)
!3810 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1143, column: 2)
!3811 = !DILocalVariable(name: "loc", scope: !3812, file: !200, line: 1144, type: !195)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 1143, column: 37)
!3813 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 1143, column: 2)
!3814 = !DILocalVariable(name: "str", scope: !3812, file: !200, line: 1145, type: !118)
!3815 = !DILocalVariable(name: "str_len", scope: !3812, file: !200, line: 1146, type: !197)
!3816 = !DILabel(scope: !3817, name: "calculate_string_length", file: !200, line: 1021)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !200, line: 1020, column: 56)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !200, line: 1020, column: 15)
!3819 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 1014, column: 8)
!3820 = !DILocation(line: 0, scope: !3743)
!3821 = !DILocation(line: 916, column: 2, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !200, line: 916, column: 2)
!3823 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 916, column: 2)
!3824 = !DILocation(line: 916, column: 2, scope: !3823)
!3825 = !DILocation(line: 916, column: 2, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3822, file: !200, line: 916, column: 2)
!3827 = !DILocation(line: 919, column: 20, scope: !3743)
!3828 = !DILocation(line: 921, column: 27, scope: !3743)
!3829 = !DILocation(line: 921, column: 21, scope: !3743)
!3830 = !DILocation(line: 926, column: 18, scope: !3743)
!3831 = !DILocation(line: 926, column: 11, scope: !3743)
!3832 = !DILocation(line: 926, column: 34, scope: !3743)
!3833 = !DILocation(line: 931, column: 21, scope: !3743)
!3834 = !DILocation(line: 931, column: 12, scope: !3743)
!3835 = !DILocation(line: 932, column: 11, scope: !3743)
!3836 = !DILocation(line: 932, column: 19, scope: !3743)
!3837 = !DILocation(line: 938, column: 21, scope: !3743)
!3838 = !DILocation(line: 938, column: 12, scope: !3743)
!3839 = !DILocation(line: 939, column: 19, scope: !3743)
!3840 = !DILocation(line: 939, column: 23, scope: !3743)
!3841 = !DILocation(line: 946, column: 14, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 946, column: 6)
!3843 = !DILocation(line: 947, column: 7, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !200, line: 947, column: 7)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !200, line: 946, column: 26)
!3846 = !DILocation(line: 947, column: 7, scope: !3845)
!3847 = !DILocation(line: 948, column: 4, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3844, file: !200, line: 947, column: 11)
!3849 = !DILocation(line: 949, column: 3, scope: !3848)
!3850 = !DILocation(line: 958, column: 23, scope: !3743)
!3851 = !DILocation(line: 958, column: 14, scope: !3743)
!3852 = !DILocation(line: 958, column: 27, scope: !3743)
!3853 = !DILocation(line: 965, column: 41, scope: !3743)
!3854 = !DILocation(line: 965, column: 20, scope: !3743)
!3855 = !DILocation(line: 966, column: 22, scope: !3743)
!3856 = !DILocation(line: 970, column: 9, scope: !3777)
!3857 = !DILocation(line: 970, column: 6, scope: !3743)
!3858 = !DILocation(line: 972, column: 7, scope: !3776)
!3859 = !DILocation(line: 0, scope: !3773)
!3860 = !DILocation(line: 973, column: 4, scope: !3773)
!3861 = !DILocation(line: 974, column: 46, scope: !3779)
!3862 = !DILocation(line: 974, column: 40, scope: !3779)
!3863 = !DILocation(line: 974, column: 23, scope: !3779)
!3864 = !DILocation(line: 0, scope: !3779)
!3865 = !DILocation(line: 975, column: 15, scope: !3779)
!3866 = !DILocation(line: 978, column: 14, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3779, file: !200, line: 978, column: 9)
!3868 = !DILocation(line: 979, column: 25, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3867, file: !200, line: 978, column: 38)
!3870 = !DILocation(line: 979, column: 19, scope: !3869)
!3871 = !DILocation(line: 979, column: 6, scope: !3869)
!3872 = !DILocation(line: 979, column: 23, scope: !3869)
!3873 = !DILocation(line: 980, column: 5, scope: !3869)
!3874 = !DILocation(line: 981, column: 13, scope: !3779)
!3875 = !DILocation(line: 982, column: 12, scope: !3779)
!3876 = !DILocation(line: 973, column: 34, scope: !3780)
!3877 = !DILocation(line: 973, column: 22, scope: !3780)
!3878 = distinct !{!3878, !3860, !3879}
!3879 = !DILocation(line: 983, column: 4, scope: !3773)
!3880 = !DILocation(line: 985, column: 16, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 985, column: 8)
!3882 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 984, column: 10)
!3883 = !DILocation(line: 967, column: 9, scope: !3743)
!3884 = !DILocation(line: 971, column: 11, scope: !3776)
!3885 = !DILocation(line: 0, scope: !3776)
!3886 = !DILocation(line: 0, scope: !3784)
!3887 = !DILocation(line: 995, column: 21, scope: !3787)
!3888 = !DILocation(line: 995, column: 3, scope: !3784)
!3889 = !DILocation(line: 990, column: 34, scope: !3776)
!3890 = !DILocation(line: 990, column: 26, scope: !3776)
!3891 = !DILocation(line: 996, column: 30, scope: !3786)
!3892 = !DILocation(line: 0, scope: !3786)
!3893 = !DILocation(line: 997, column: 30, scope: !3786)
!3894 = !DILocation(line: 997, column: 22, scope: !3786)
!3895 = !DILocation(line: 998, column: 39, scope: !3786)
!3896 = !DILocation(line: 998, column: 22, scope: !3786)
!3897 = !DILocation(line: 999, column: 17, scope: !3786)
!3898 = !DILocation(line: 1002, column: 20, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 1002, column: 8)
!3900 = !DILocation(line: 996, column: 22, scope: !3786)
!3901 = !DILocation(line: 1002, column: 35, scope: !3899)
!3902 = !DILocation(line: 1002, column: 23, scope: !3899)
!3903 = !DILocation(line: 1002, column: 8, scope: !3786)
!3904 = !DILocation(line: 1003, column: 5, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !200, line: 1003, column: 5)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !200, line: 1003, column: 5)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !200, line: 1003, column: 5)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !200, line: 1003, column: 5)
!3909 = distinct !DILexicalBlock(scope: !3899, file: !200, line: 1002, column: 45)
!3910 = !DILocation(line: 1010, column: 13, scope: !3909)
!3911 = !DILocation(line: 1011, column: 5, scope: !3909)
!3912 = !DILocation(line: 1014, column: 8, scope: !3786)
!3913 = !DILocation(line: 1015, column: 9, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3819, file: !200, line: 1014, column: 15)
!3915 = !DILocation(line: 1018, column: 14, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !200, line: 1017, column: 12)
!3917 = distinct !DILexicalBlock(scope: !3914, file: !200, line: 1015, column: 9)
!3918 = !DILocation(line: 1020, column: 4, scope: !3914)
!3919 = !DILocation(line: 1020, column: 15, scope: !3819)
!3920 = !DILocation(line: 1021, column: 1, scope: !3817)
!3921 = !DILocation(line: 1022, column: 11, scope: !3817)
!3922 = !DILocation(line: 1025, column: 14, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3817, file: !200, line: 1025, column: 9)
!3924 = !DILocation(line: 1026, column: 25, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3923, file: !200, line: 1025, column: 38)
!3926 = !DILocation(line: 1026, column: 19, scope: !3925)
!3927 = !DILocation(line: 1026, column: 6, scope: !3925)
!3928 = !DILocation(line: 1026, column: 23, scope: !3925)
!3929 = !DILocation(line: 1027, column: 5, scope: !3925)
!3930 = !DILocation(line: 1031, column: 21, scope: !3817)
!3931 = !DILocation(line: 1031, column: 13, scope: !3817)
!3932 = !DILocation(line: 1032, column: 4, scope: !3817)
!3933 = !DILocation(line: 995, column: 33, scope: !3787)
!3934 = distinct !{!3934, !3888, !3935}
!3935 = !DILocation(line: 1033, column: 3, scope: !3784)
!3936 = !DILocation(line: 1040, column: 10, scope: !3743)
!3937 = !DILocation(line: 1042, column: 10, scope: !3743)
!3938 = !DILocation(line: 1052, column: 6, scope: !3743)
!3939 = !DILocation(line: 1055, column: 9, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1052, column: 14)
!3941 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1052, column: 6)
!3942 = !DILocation(line: 1056, column: 2, scope: !3940)
!3943 = !DILocation(line: 1056, column: 21, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1056, column: 13)
!3945 = !DILocation(line: 1066, column: 3, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !200, line: 1065, column: 11)
!3947 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1065, column: 6)
!3948 = !DILocation(line: 1067, column: 2, scope: !3946)
!3949 = !DILocation(line: 1068, column: 10, scope: !3743)
!3950 = !DILocation(line: 0, scope: !3800)
!3951 = !DILocation(line: 1074, column: 20, scope: !3803)
!3952 = !DILocation(line: 1074, column: 2, scope: !3800)
!3953 = !DILocation(line: 1110, column: 24, scope: !3743)
!3954 = !DILocation(line: 1053, column: 12, scope: !3940)
!3955 = !DILocation(line: 1054, column: 12, scope: !3940)
!3956 = !DILocation(line: 1108, column: 30, scope: !3743)
!3957 = !DILocation(line: 1108, column: 40, scope: !3743)
!3958 = !DILocation(line: 1108, column: 38, scope: !3743)
!3959 = !DILocation(line: 1109, column: 31, scope: !3743)
!3960 = !DILocation(line: 1109, column: 24, scope: !3743)
!3961 = !DILocation(line: 1110, column: 31, scope: !3743)
!3962 = !DILocation(line: 1114, column: 31, scope: !3743)
!3963 = !DILocation(line: 1114, column: 48, scope: !3743)
!3964 = !DILocation(line: 1115, column: 13, scope: !3743)
!3965 = !DILocation(line: 1118, column: 7, scope: !3743)
!3966 = !DILocation(line: 1119, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1119, column: 6)
!3968 = !DILocation(line: 1119, column: 6, scope: !3743)
!3969 = !DILocation(line: 1075, column: 29, scope: !3802)
!3970 = !DILocation(line: 1075, column: 21, scope: !3802)
!3971 = !DILocation(line: 0, scope: !3802)
!3972 = !DILocation(line: 1076, column: 29, scope: !3802)
!3973 = !DILocation(line: 1076, column: 21, scope: !3802)
!3974 = !DILocation(line: 1077, column: 38, scope: !3802)
!3975 = !DILocation(line: 1077, column: 21, scope: !3802)
!3976 = !DILocation(line: 1078, column: 16, scope: !3802)
!3977 = !DILocation(line: 1080, column: 19, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3802, file: !200, line: 1080, column: 7)
!3979 = !DILocation(line: 1080, column: 34, scope: !3978)
!3980 = !DILocation(line: 1080, column: 22, scope: !3978)
!3981 = !DILocation(line: 1080, column: 7, scope: !3802)
!3982 = !DILocation(line: 1084, column: 7, scope: !3802)
!3983 = !DILocation(line: 1085, column: 8, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !200, line: 1084, column: 14)
!3985 = distinct !DILexicalBlock(scope: !3802, file: !200, line: 1084, column: 7)
!3986 = !DILocation(line: 1086, column: 5, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !200, line: 1086, column: 5)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !200, line: 1086, column: 5)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !200, line: 1085, column: 49)
!3990 = distinct !DILexicalBlock(scope: !3984, file: !200, line: 1085, column: 8)
!3991 = !DILocation(line: 1086, column: 5, scope: !3988)
!3992 = !DILocation(line: 1086, column: 5, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3987, file: !200, line: 1086, column: 5)
!3994 = !DILocation(line: 1087, column: 25, scope: !3989)
!3995 = !DILocation(line: 1087, column: 5, scope: !3989)
!3996 = !DILocation(line: 1088, column: 4, scope: !3989)
!3997 = !DILocation(line: 1088, column: 15, scope: !3990)
!3998 = !DILocation(line: 1089, column: 5, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !200, line: 1089, column: 5)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !200, line: 1089, column: 5)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !200, line: 1088, column: 61)
!4002 = distinct !DILexicalBlock(scope: !3990, file: !200, line: 1088, column: 15)
!4003 = !DILocation(line: 1089, column: 5, scope: !4000)
!4004 = !DILocation(line: 1089, column: 5, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3999, file: !200, line: 1089, column: 5)
!4006 = !DILocation(line: 1090, column: 26, scope: !4001)
!4007 = !DILocation(line: 1090, column: 5, scope: !4001)
!4008 = !DILocation(line: 1091, column: 4, scope: !4001)
!4009 = !DILocation(line: 1095, column: 8, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3985, file: !200, line: 1094, column: 10)
!4011 = !DILocation(line: 1096, column: 5, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !200, line: 1096, column: 5)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !200, line: 1096, column: 5)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !200, line: 1095, column: 49)
!4015 = distinct !DILexicalBlock(scope: !4010, file: !200, line: 1095, column: 8)
!4016 = !DILocation(line: 1096, column: 5, scope: !4013)
!4017 = !DILocation(line: 1096, column: 5, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4012, file: !200, line: 1096, column: 5)
!4019 = !DILocation(line: 1097, column: 25, scope: !4014)
!4020 = !DILocation(line: 1097, column: 5, scope: !4014)
!4021 = !DILocation(line: 1098, column: 4, scope: !4014)
!4022 = !DILocation(line: 1099, column: 5, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !200, line: 1099, column: 5)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !200, line: 1099, column: 5)
!4025 = distinct !DILexicalBlock(scope: !4015, file: !200, line: 1098, column: 11)
!4026 = !DILocation(line: 1099, column: 5, scope: !4024)
!4027 = !DILocation(line: 1099, column: 5, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4023, file: !200, line: 1099, column: 5)
!4029 = !DILocation(line: 1100, column: 26, scope: !4025)
!4030 = !DILocation(line: 1100, column: 5, scope: !4025)
!4031 = !DILocation(line: 1100, column: 30, scope: !4025)
!4032 = !DILocation(line: 1101, column: 26, scope: !4025)
!4033 = !DILocation(line: 1101, column: 5, scope: !4025)
!4034 = !DILocation(line: 0, scope: !3985)
!4035 = !DILocation(line: 1074, column: 32, scope: !3803)
!4036 = distinct !{!4036, !3952, !4037}
!4037 = !DILocation(line: 1104, column: 2, scope: !3800)
!4038 = !DILocation(line: 1124, column: 13, scope: !3743)
!4039 = !DILocation(line: 1127, column: 10, scope: !3743)
!4040 = !DILocation(line: 1127, column: 7, scope: !3743)
!4041 = !DILocation(line: 1128, column: 9, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1128, column: 6)
!4043 = !DILocation(line: 1128, column: 6, scope: !3743)
!4044 = !DILocation(line: 1134, column: 27, scope: !3743)
!4045 = !DILocation(line: 1136, column: 7, scope: !3743)
!4046 = !DILocation(line: 1137, column: 9, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 1137, column: 6)
!4048 = !DILocation(line: 1137, column: 6, scope: !3743)
!4049 = !DILocation(line: 1131, column: 10, scope: !3743)
!4050 = !DILocation(line: 1140, column: 10, scope: !3743)
!4051 = !DILocation(line: 0, scope: !3810)
!4052 = !DILocation(line: 1143, column: 20, scope: !3813)
!4053 = !DILocation(line: 1143, column: 2, scope: !3810)
!4054 = !DILocation(line: 1144, column: 3, scope: !3812)
!4055 = !DILocation(line: 1144, column: 17, scope: !3812)
!4056 = !DILocation(line: 0, scope: !3812)
!4057 = !DILocation(line: 1144, column: 11, scope: !3812)
!4058 = !DILocation(line: 1145, column: 38, scope: !3812)
!4059 = !DILocation(line: 1145, column: 21, scope: !3812)
!4060 = !DILocation(line: 1146, column: 22, scope: !3812)
!4061 = !DILocation(line: 1146, column: 29, scope: !3812)
!4062 = !DILocation(line: 1148, column: 8, scope: !3812)
!4063 = !DILocation(line: 1149, column: 10, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 1149, column: 7)
!4065 = !DILocation(line: 1149, column: 7, scope: !3812)
!4066 = !DILocation(line: 1154, column: 8, scope: !3812)
!4067 = !DILocation(line: 1155, column: 10, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 1155, column: 7)
!4069 = !DILocation(line: 1155, column: 7, scope: !3812)
!4070 = !DILocation(line: 1159, column: 2, scope: !3813)
!4071 = !DILocation(line: 1152, column: 11, scope: !3812)
!4072 = !DILocation(line: 1158, column: 11, scope: !3812)
!4073 = !DILocation(line: 1143, column: 33, scope: !3813)
!4074 = distinct !{!4074, !4053, !4075}
!4075 = !DILocation(line: 1159, column: 2, scope: !3810)
!4076 = !DILocation(line: 1162, column: 8, scope: !3743)
!4077 = !DILocation(line: 1164, column: 2, scope: !3743)
!4078 = !DILocation(line: 1165, column: 1, scope: !3743)
!4079 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4080, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4082)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!185, !106}
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089}
!4083 = !DILocalVariable(name: "packaged", arg: 1, scope: !4079, file: !200, line: 196, type: !106)
!4084 = !DILocalVariable(name: "buf", scope: !4079, file: !200, line: 200, type: !194)
!4085 = !DILocalVariable(name: "start", scope: !4079, file: !200, line: 201, type: !194)
!4086 = !DILocalVariable(name: "args_size", scope: !4079, file: !200, line: 202, type: !32)
!4087 = !DILocalVariable(name: "s_nbr", scope: !4079, file: !200, line: 202, type: !32)
!4088 = !DILocalVariable(name: "ros_nbr", scope: !4079, file: !200, line: 202, type: !32)
!4089 = !DILocalVariable(name: "i", scope: !4090, file: !200, line: 215, type: !107)
!4090 = distinct !DILexicalBlock(scope: !4079, file: !200, line: 215, column: 2)
!4091 = !DILocation(line: 0, scope: !4079)
!4092 = !DILocation(line: 198, column: 2, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !200, line: 198, column: 2)
!4094 = distinct !DILexicalBlock(scope: !4079, file: !200, line: 198, column: 2)
!4095 = !DILocation(line: 198, column: 2, scope: !4094)
!4096 = !DILocation(line: 198, column: 2, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !200, line: 198, column: 2)
!4098 = !DILocation(line: 204, column: 14, scope: !4079)
!4099 = !DILocation(line: 204, column: 21, scope: !4079)
!4100 = !DILocation(line: 205, column: 14, scope: !4079)
!4101 = !DILocation(line: 206, column: 14, scope: !4079)
!4102 = !DILocation(line: 209, column: 6, scope: !4079)
!4103 = !DILocation(line: 212, column: 6, scope: !4079)
!4104 = !DILocation(line: 0, scope: !4090)
!4105 = !DILocation(line: 215, column: 20, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4090, file: !200, line: 215, column: 2)
!4107 = !DILocation(line: 215, column: 2, scope: !4090)
!4108 = !DILocation(line: 220, column: 33, scope: !4079)
!4109 = !DILocation(line: 220, column: 2, scope: !4079)
!4110 = !DILocation(line: 216, column: 6, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4106, file: !200, line: 215, column: 34)
!4112 = !DILocation(line: 217, column: 10, scope: !4111)
!4113 = !DILocation(line: 217, column: 36, scope: !4111)
!4114 = !DILocation(line: 217, column: 7, scope: !4111)
!4115 = !DILocation(line: 215, column: 30, scope: !4106)
!4116 = distinct !{!4116, !4107, !4117}
!4117 = !DILocation(line: 218, column: 2, scope: !4090)
!4118 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4119, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!107, !3746, !106, !118, !197}
!4121 = !{!4122, !4123, !4124, !4125}
!4122 = !DILocalVariable(name: "cb", arg: 1, scope: !4118, file: !200, line: 223, type: !3746)
!4123 = !DILocalVariable(name: "ctx", arg: 2, scope: !4118, file: !200, line: 223, type: !106)
!4124 = !DILocalVariable(name: "str", arg: 3, scope: !4118, file: !200, line: 223, type: !118)
!4125 = !DILocalVariable(name: "strl", arg: 4, scope: !4118, file: !200, line: 223, type: !197)
!4126 = !DILocation(line: 0, scope: !4118)
!4127 = !DILocation(line: 225, column: 9, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4118, file: !200, line: 225, column: 6)
!4129 = !DILocation(line: 225, column: 6, scope: !4118)
!4130 = !DILocation(line: 226, column: 14, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4128, file: !200, line: 225, column: 18)
!4132 = !DILocation(line: 226, column: 12, scope: !4131)
!4133 = !DILocation(line: 226, column: 3, scope: !4131)
!4134 = !DILocation(line: 229, column: 14, scope: !4118)
!4135 = !DILocation(line: 229, column: 9, scope: !4118)
!4136 = !DILocation(line: 229, column: 27, scope: !4118)
!4137 = !DILocation(line: 229, column: 39, scope: !4118)
!4138 = !DILocation(line: 230, column: 17, scope: !4118)
!4139 = !DILocation(line: 230, column: 9, scope: !4118)
!4140 = !DILocation(line: 230, column: 2, scope: !4118)
!4141 = !DILocation(line: 231, column: 1, scope: !4118)
!4142 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4143)
!4143 = !{!4144}
!4144 = !DILocalVariable(name: "c", arg: 1, scope: !4142, file: !212, line: 45, type: !107)
!4145 = !DILocation(line: 0, scope: !4142)
!4146 = !DILocation(line: 50, column: 2, scope: !4142)
!4147 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4148, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{null, !213}
!4150 = !{!4151}
!4151 = !DILocalVariable(name: "fn", arg: 1, scope: !4147, file: !212, line: 63, type: !213)
!4152 = !DILocation(line: 0, scope: !4147)
!4153 = !DILocation(line: 65, column: 12, scope: !4147)
!4154 = !DILocation(line: 66, column: 1, scope: !4147)
!4155 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2182)
!4156 = !DILocation(line: 78, column: 9, scope: !4155)
!4157 = !DILocation(line: 78, column: 2, scope: !4155)
!4158 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4159, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4167)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{null, !118, !4161}
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3234, line: 99, baseType: !4162)
!4162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3234, line: 40, baseType: !4163)
!4163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4164)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4165)
!4165 = !{!4166}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4164, file: !212, line: 79, baseType: !106, size: 32)
!4167 = !{!4168, !4169, !4170}
!4168 = !DILocalVariable(name: "fmt", arg: 1, scope: !4158, file: !212, line: 113, type: !118)
!4169 = !DILocalVariable(name: "ap", arg: 2, scope: !4158, file: !212, line: 113, type: !4161)
!4170 = !DILocalVariable(name: "ctx", scope: !4171, file: !212, line: 121, type: !4173)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !212, line: 120, column: 27)
!4172 = distinct !DILexicalBlock(scope: !4158, file: !212, line: 120, column: 6)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4174)
!4174 = !{!4175, !4176}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4173, file: !212, line: 85, baseType: !32, size: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4173, file: !212, line: 86, baseType: !4177, offset: 32)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4178)
!4178 = !{!4179}
!4179 = !DISubrange(count: 0)
!4180 = !DILocation(line: 0, scope: !4158)
!4181 = !DILocation(line: 148, column: 3, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4172, file: !212, line: 138, column: 9)
!4183 = !DILocation(line: 155, column: 1, scope: !4158)
!4184 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4185, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!107, !107, !106}
!4187 = !{!4188, !4189}
!4188 = !DILocalVariable(name: "c", arg: 1, scope: !4184, file: !212, line: 107, type: !107)
!4189 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4184, file: !212, line: 107, type: !106)
!4190 = !DILocation(line: 0, scope: !4184)
!4191 = !DILocation(line: 110, column: 9, scope: !4184)
!4192 = !DILocation(line: 110, column: 2, scope: !4184)
!4193 = distinct !DISubprogram(name: "cbvprintf", scope: !3266, file: !3266, line: 739, type: !4194, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4196)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!107, !3614, !106, !118, !4161}
!4196 = !{!4197, !4198, !4199, !4200}
!4197 = !DILocalVariable(name: "out", arg: 1, scope: !4193, file: !3266, line: 739, type: !3614)
!4198 = !DILocalVariable(name: "ctx", arg: 2, scope: !4193, file: !3266, line: 739, type: !106)
!4199 = !DILocalVariable(name: "format", arg: 3, scope: !4193, file: !3266, line: 739, type: !118)
!4200 = !DILocalVariable(name: "ap", arg: 4, scope: !4193, file: !3266, line: 739, type: !4161)
!4201 = !DILocation(line: 0, scope: !4193)
!4202 = !DILocation(line: 741, column: 9, scope: !4193)
!4203 = !DILocation(line: 741, column: 2, scope: !4193)
!4204 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4205, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4207)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{null, !193, !185}
!4207 = !{!4208, !4209, !4210}
!4208 = !DILocalVariable(name: "c", arg: 1, scope: !4204, file: !212, line: 157, type: !193)
!4209 = !DILocalVariable(name: "n", arg: 2, scope: !4204, file: !212, line: 157, type: !185)
!4210 = !DILocalVariable(name: "i", scope: !4204, file: !212, line: 159, type: !185)
!4211 = !DILocation(line: 0, scope: !4204)
!4212 = !DILocation(line: 164, column: 16, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !212, line: 164, column: 2)
!4214 = distinct !DILexicalBlock(scope: !4204, file: !212, line: 164, column: 2)
!4215 = !DILocation(line: 164, column: 2, scope: !4214)
!4216 = !DILocation(line: 165, column: 3, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4213, file: !212, line: 164, column: 26)
!4218 = !DILocation(line: 165, column: 13, scope: !4217)
!4219 = !DILocation(line: 164, column: 22, scope: !4213)
!4220 = distinct !{!4220, !4215, !4221}
!4221 = !DILocation(line: 166, column: 2, scope: !4214)
!4222 = !DILocation(line: 171, column: 1, scope: !4204)
!4223 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4224, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4226)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{null, !118, null}
!4226 = !{!4227, !4228}
!4227 = !DILocalVariable(name: "fmt", arg: 1, scope: !4223, file: !212, line: 203, type: !118)
!4228 = !DILocalVariable(name: "ap", scope: !4223, file: !212, line: 205, type: !4161)
!4229 = !DILocation(line: 0, scope: !4223)
!4230 = !DILocation(line: 205, column: 2, scope: !4223)
!4231 = !DILocation(line: 205, column: 10, scope: !4223)
!4232 = !DILocation(line: 207, column: 2, scope: !4223)
!4233 = !DILocation(line: 209, column: 2, scope: !4223)
!4234 = !DILocation(line: 211, column: 2, scope: !4223)
!4235 = !DILocation(line: 212, column: 1, scope: !4223)
!4236 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4237, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!107, !193, !185, !118, null}
!4239 = !{!4240, !4241, !4242, !4243, !4244}
!4240 = !DILocalVariable(name: "str", arg: 1, scope: !4236, file: !212, line: 239, type: !193)
!4241 = !DILocalVariable(name: "size", arg: 2, scope: !4236, file: !212, line: 239, type: !185)
!4242 = !DILocalVariable(name: "fmt", arg: 3, scope: !4236, file: !212, line: 239, type: !118)
!4243 = !DILocalVariable(name: "ap", scope: !4236, file: !212, line: 241, type: !4161)
!4244 = !DILocalVariable(name: "ret", scope: !4236, file: !212, line: 242, type: !107)
!4245 = !DILocation(line: 0, scope: !4236)
!4246 = !DILocation(line: 241, column: 2, scope: !4236)
!4247 = !DILocation(line: 241, column: 10, scope: !4236)
!4248 = !DILocation(line: 244, column: 2, scope: !4236)
!4249 = !DILocation(line: 245, column: 8, scope: !4236)
!4250 = !DILocation(line: 246, column: 2, scope: !4236)
!4251 = !DILocation(line: 249, column: 1, scope: !4236)
!4252 = !DILocation(line: 248, column: 2, scope: !4236)
!4253 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4254, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!107, !193, !185, !118, !4161}
!4256 = !{!4257, !4258, !4259, !4260, !4261}
!4257 = !DILocalVariable(name: "str", arg: 1, scope: !4253, file: !212, line: 251, type: !193)
!4258 = !DILocalVariable(name: "size", arg: 2, scope: !4253, file: !212, line: 251, type: !185)
!4259 = !DILocalVariable(name: "fmt", arg: 3, scope: !4253, file: !212, line: 251, type: !118)
!4260 = !DILocalVariable(name: "ap", arg: 4, scope: !4253, file: !212, line: 251, type: !4161)
!4261 = !DILocalVariable(name: "ctx", scope: !4253, file: !212, line: 253, type: !4262)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4263)
!4263 = !{!4264, !4265, !4266}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4262, file: !212, line: 218, baseType: !193, size: 32)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4262, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4262, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4267 = !DILocation(line: 0, scope: !4253)
!4268 = !DILocation(line: 253, column: 2, scope: !4253)
!4269 = !DILocation(line: 253, column: 21, scope: !4253)
!4270 = !DILocation(line: 253, column: 27, scope: !4253)
!4271 = !DILocation(line: 255, column: 2, scope: !4253)
!4272 = !DILocation(line: 257, column: 10, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4253, file: !212, line: 257, column: 6)
!4274 = !DILocation(line: 257, column: 22, scope: !4273)
!4275 = !DILocation(line: 257, column: 16, scope: !4273)
!4276 = !DILocation(line: 257, column: 6, scope: !4253)
!4277 = !DILocation(line: 258, column: 3, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4273, file: !212, line: 257, column: 27)
!4279 = !DILocation(line: 258, column: 18, scope: !4278)
!4280 = !DILocation(line: 259, column: 2, scope: !4278)
!4281 = !DILocation(line: 262, column: 1, scope: !4253)
!4282 = !DILocation(line: 261, column: 2, scope: !4253)
!4283 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4284, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4287)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!107, !107, !4286}
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 32)
!4287 = !{!4288, !4289}
!4288 = !DILocalVariable(name: "c", arg: 1, scope: !4283, file: !212, line: 223, type: !107)
!4289 = !DILocalVariable(name: "ctx", arg: 2, scope: !4283, file: !212, line: 223, type: !4286)
!4290 = !DILocation(line: 0, scope: !4283)
!4291 = !DILocation(line: 225, column: 11, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4283, file: !212, line: 225, column: 6)
!4293 = !DILocation(line: 225, column: 15, scope: !4292)
!4294 = !DILocation(line: 0, scope: !4292)
!4295 = !DILocation(line: 225, column: 23, scope: !4292)
!4296 = !DILocation(line: 225, column: 45, scope: !4292)
!4297 = !DILocation(line: 225, column: 37, scope: !4292)
!4298 = !DILocation(line: 225, column: 6, scope: !4283)
!4299 = !DILocation(line: 226, column: 8, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4292, file: !212, line: 225, column: 50)
!4301 = !DILocation(line: 226, column: 13, scope: !4300)
!4302 = !DILocation(line: 227, column: 3, scope: !4300)
!4303 = !DILocation(line: 230, column: 29, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4283, file: !212, line: 230, column: 6)
!4305 = !DILocation(line: 230, column: 17, scope: !4304)
!4306 = !DILocation(line: 230, column: 6, scope: !4283)
!4307 = !DILocation(line: 231, column: 22, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4304, file: !212, line: 230, column: 34)
!4309 = !DILocation(line: 231, column: 3, scope: !4308)
!4310 = !DILocation(line: 231, column: 26, scope: !4308)
!4311 = !DILocation(line: 232, column: 2, scope: !4308)
!4312 = !DILocation(line: 233, column: 28, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4304, file: !212, line: 232, column: 9)
!4314 = !DILocation(line: 233, column: 22, scope: !4313)
!4315 = !DILocation(line: 233, column: 3, scope: !4313)
!4316 = !DILocation(line: 233, column: 26, scope: !4313)
!4317 = !DILocation(line: 237, column: 1, scope: !4283)
!4318 = distinct !DISubprogram(name: "z_thread_entry", scope: !4319, file: !4319, line: 30, type: !4320, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4322)
!4319 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4320 = !DISubroutineType(types: !4321)
!4321 = !{null, !559, !106, !106, !106}
!4322 = !{!4323, !4324, !4325, !4326}
!4323 = !DILocalVariable(name: "entry", arg: 1, scope: !4318, file: !4319, line: 30, type: !559)
!4324 = !DILocalVariable(name: "p1", arg: 2, scope: !4318, file: !4319, line: 31, type: !106)
!4325 = !DILocalVariable(name: "p2", arg: 3, scope: !4318, file: !4319, line: 31, type: !106)
!4326 = !DILocalVariable(name: "p3", arg: 4, scope: !4318, file: !4319, line: 31, type: !106)
!4327 = !DILocation(line: 0, scope: !4318)
!4328 = !DILocation(line: 36, column: 2, scope: !4318)
!4329 = !DILocation(line: 38, column: 17, scope: !4318)
!4330 = !DILocation(line: 38, column: 2, scope: !4318)
!4331 = !DILocation(line: 45, column: 2, scope: !4318)
!4332 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4333, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2182)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!4335}
!4335 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4336)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 32)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4338)
!4338 = !{!4339, !4397, !4409, !4410, !4411, !4412, !4413, !4419, !4434}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4337, file: !309, line: 247, baseType: !4340, size: 384)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4341)
!4341 = !{!4342, !4366, !4373, !4374, !4375, !4384, !4385, !4386}
!4342 = !DIDerivedType(tag: DW_TAG_member, scope: !4340, file: !309, line: 60, baseType: !4343, size: 64)
!4343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4340, file: !309, line: 60, size: 64, elements: !4344)
!4344 = !{!4345, !4360}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4343, file: !309, line: 61, baseType: !4346, size: 64)
!4346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4347)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4348)
!4348 = !{!4349, !4355}
!4349 = !DIDerivedType(tag: DW_TAG_member, scope: !4347, file: !319, line: 38, baseType: !4350, size: 32)
!4350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4347, file: !319, line: 38, size: 32, elements: !4351)
!4351 = !{!4352, !4354}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4350, file: !319, line: 39, baseType: !4353, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4350, file: !319, line: 40, baseType: !4353, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, scope: !4347, file: !319, line: 42, baseType: !4356, size: 32, offset: 32)
!4356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4347, file: !319, line: 42, size: 32, elements: !4357)
!4357 = !{!4358, !4359}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4356, file: !319, line: 43, baseType: !4353, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4356, file: !319, line: 44, baseType: !4353, size: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4343, file: !309, line: 62, baseType: !4361, size: 64)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4362)
!4362 = !{!4363}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4361, file: !335, line: 50, baseType: !4364, size: 64)
!4364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4365, size: 64, elements: !340)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 32)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4340, file: !309, line: 68, baseType: !4367, size: 32, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4369)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4370)
!4370 = !{!4371}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4369, file: !345, line: 232, baseType: !4372, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4347)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4340, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4340, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4375 = !DIDerivedType(tag: DW_TAG_member, scope: !4340, file: !309, line: 90, baseType: !4376, size: 16, offset: 112)
!4376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4340, file: !309, line: 90, size: 16, elements: !4377)
!4377 = !{!4378, !4383}
!4378 = !DIDerivedType(tag: DW_TAG_member, scope: !4376, file: !309, line: 91, baseType: !4379, size: 16)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4376, file: !309, line: 91, size: 16, elements: !4380)
!4380 = !{!4381, !4382}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4379, file: !309, line: 96, baseType: !359, size: 8)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4379, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4376, file: !309, line: 100, baseType: !197, size: 16)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4340, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4340, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4340, file: !309, line: 131, baseType: !4387, size: 192, offset: 192)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4388)
!4388 = !{!4389, !4390, !4396}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4387, file: !345, line: 245, baseType: !4346, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4387, file: !345, line: 246, baseType: !4391, size: 32, offset: 64)
!4391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4392)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 32)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{null, !4395}
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4387, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4337, file: !309, line: 250, baseType: !4398, size: 288, offset: 384)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4399)
!4399 = !{!4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4398, file: !379, line: 26, baseType: !152, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4398, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4398, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4398, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4398, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4398, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4398, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4398, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4398, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4337, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4337, file: !309, line: 256, baseType: !4368, size: 64, offset: 704)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4337, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4337, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4337, file: !309, line: 300, baseType: !4414, size: 96, offset: 1056)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4415)
!4415 = !{!4416, !4417, !4418}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4414, file: !309, line: 153, baseType: !22, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4414, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4414, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4337, file: !309, line: 325, baseType: !4420, size: 32, offset: 1152)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 32)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4422)
!4422 = !{!4423, !4429, !4430}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4421, file: !406, line: 5074, baseType: !4424, size: 96)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4425)
!4425 = !{!4426, !4427, !4428}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4424, file: !410, line: 57, baseType: !413, size: 32)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4424, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4424, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4421, file: !406, line: 5075, baseType: !4368, size: 64, offset: 96)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4421, file: !406, line: 5076, baseType: !4431, size: 32, offset: 160)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4432)
!4432 = !{!4433}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4431, file: !420, line: 52, baseType: !22, size: 32)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4337, file: !309, line: 343, baseType: !4435, size: 64, offset: 1184)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4436)
!4436 = !{!4437, !4438}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4435, file: !379, line: 63, baseType: !152, size: 32)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4435, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4439 = !DILocation(line: 535, column: 9, scope: !4332)
!4440 = !DILocation(line: 535, column: 2, scope: !4332)
!4441 = distinct !DISubprogram(name: "k_thread_abort", scope: !4442, file: !4442, line: 188, type: !4443, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4445)
!4442 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!4443 = !DISubroutineType(types: !4444)
!4444 = !{null, !4335}
!4445 = !{!4446}
!4446 = !DILocalVariable(name: "thread", arg: 1, scope: !4441, file: !4442, line: 188, type: !4335)
!4447 = !DILocation(line: 0, scope: !4441)
!4448 = !DILocation(line: 197, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4441, file: !4442, line: 197, column: 2)
!4450 = !{i64 2154156003}
!4451 = !DILocation(line: 198, column: 2, scope: !4441)
!4452 = !DILocation(line: 199, column: 1, scope: !4441)
!4453 = distinct !DISubprogram(name: "z_current_get", scope: !4442, file: !4442, line: 173, type: !4333, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2182)
!4454 = !DILocation(line: 180, column: 2, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4453, file: !4442, line: 180, column: 2)
!4456 = !{i64 2154155935}
!4457 = !DILocation(line: 181, column: 9, scope: !4453)
!4458 = !DILocation(line: 181, column: 2, scope: !4453)
!4459 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2534, file: !2534, line: 1338, type: !4460, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4468)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!107, !3614, !106, !118, !4462, !152}
!4462 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3234, line: 99, baseType: !4463)
!4463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3234, line: 40, baseType: !4464)
!4464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2534, baseType: !4465)
!4465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4466)
!4466 = !{!4467}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4465, file: !2534, baseType: !106, size: 32)
!4468 = !{!4469, !4470, !4471, !4472, !4473, !4474, !4478, !4479, !4480, !4482, !4487, !4530, !4533, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4545, !4546, !4547, !4551, !4554, !4556, !4559, !4560, !4561, !4566, !4572, !4575, !4579, !4585, !4589, !4592, !4594, !4597}
!4469 = !DILocalVariable(name: "out", arg: 1, scope: !4459, file: !2534, line: 1338, type: !3614)
!4470 = !DILocalVariable(name: "ctx", arg: 2, scope: !4459, file: !2534, line: 1338, type: !106)
!4471 = !DILocalVariable(name: "fp", arg: 3, scope: !4459, file: !2534, line: 1338, type: !118)
!4472 = !DILocalVariable(name: "ap", arg: 4, scope: !4459, file: !2534, line: 1339, type: !4462)
!4473 = !DILocalVariable(name: "flags", arg: 5, scope: !4459, file: !2534, line: 1339, type: !152)
!4474 = !DILocalVariable(name: "buf", scope: !4459, file: !2534, line: 1341, type: !4475)
!4475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4476)
!4476 = !{!4477}
!4477 = !DISubrange(count: 22)
!4478 = !DILocalVariable(name: "count", scope: !4459, file: !2534, line: 1342, type: !185)
!4479 = !DILocalVariable(name: "sint", scope: !4459, file: !2534, line: 1343, type: !2553)
!4480 = !DILocalVariable(name: "tagged_ap", scope: !4459, file: !2534, line: 1345, type: !4481)
!4481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4482 = !DILocalVariable(name: "rc", scope: !4483, file: !2534, line: 1377, type: !107)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !2534, line: 1377, column: 4)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !2534, line: 1376, column: 19)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1376, column: 7)
!4486 = distinct !DILexicalBlock(scope: !4459, file: !2534, line: 1375, column: 19)
!4487 = !DILocalVariable(name: "state", scope: !4486, file: !2534, line: 1395, type: !4488)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4459, file: !2534, line: 1392, size: 192, elements: !4489)
!4489 = !{!4490, !4498}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4488, file: !2534, line: 1393, baseType: !4491, size: 64)
!4491 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2534, line: 166, size: 64, elements: !4492)
!4492 = !{!4493, !4494, !4495, !4496, !4497}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4491, file: !2534, line: 168, baseType: !2553, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4491, file: !2534, line: 171, baseType: !2556, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4491, file: !2534, line: 174, baseType: !183, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4491, file: !2534, line: 177, baseType: !181, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4491, file: !2534, line: 180, baseType: !106, size: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4488, file: !2534, line: 1394, baseType: !4499, size: 96, offset: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2534, line: 189, size: 96, elements: !4500)
!4500 = !{!4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4525}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4499, file: !2534, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4499, file: !2534, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4499, file: !2534, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4499, file: !2534, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4499, file: !2534, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4499, file: !2534, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4499, file: !2534, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4499, file: !2534, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4499, file: !2534, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4499, file: !2534, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4499, file: !2534, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4499, file: !2534, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4499, file: !2534, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4499, file: !2534, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4499, file: !2534, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4499, file: !2534, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4499, file: !2534, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4499, file: !2534, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4499, file: !2534, line: 260, baseType: !196, size: 8, offset: 24)
!4520 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !2534, line: 262, baseType: !4521, size: 32, offset: 32)
!4521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !2534, line: 262, size: 32, elements: !4522)
!4522 = !{!4523, !4524}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4521, file: !2534, line: 267, baseType: !107, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4521, file: !2534, line: 289, baseType: !107, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !2534, line: 292, baseType: !4526, size: 32, offset: 64)
!4526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !2534, line: 292, size: 32, elements: !4527)
!4527 = !{!4528, !4529}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4526, file: !2534, line: 297, baseType: !107, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4526, file: !2534, line: 306, baseType: !107, size: 32)
!4530 = !DILocalVariable(name: "conv", scope: !4486, file: !2534, line: 1400, type: !4531)
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 32)
!4533 = !DILocalVariable(name: "value", scope: !4486, file: !2534, line: 1401, type: !4534)
!4534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4535)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 32)
!4536 = !DILocalVariable(name: "sp", scope: !4486, file: !2534, line: 1402, type: !118)
!4537 = !DILocalVariable(name: "width", scope: !4486, file: !2534, line: 1403, type: !107)
!4538 = !DILocalVariable(name: "precision", scope: !4486, file: !2534, line: 1404, type: !107)
!4539 = !DILocalVariable(name: "bps", scope: !4486, file: !2534, line: 1405, type: !118)
!4540 = !DILocalVariable(name: "bpe", scope: !4486, file: !2534, line: 1406, type: !118)
!4541 = !DILocalVariable(name: "sign", scope: !4486, file: !2534, line: 1407, type: !120)
!4542 = !DILocalVariable(name: "arg", scope: !4543, file: !2534, line: 1432, type: !107)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2534, line: 1431, column: 24)
!4544 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1431, column: 7)
!4545 = !DILocalVariable(name: "specifier_cat", scope: !4486, file: !2534, line: 1468, type: !2533)
!4546 = !DILocalVariable(name: "length_mod", scope: !4486, file: !2534, line: 1470, type: !2541)
!4547 = !DILocalVariable(name: "rc", scope: !4548, file: !2534, line: 1575, type: !107)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2534, line: 1575, column: 4)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1574, column: 43)
!4550 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1574, column: 7)
!4551 = !DILocalVariable(name: "rc", scope: !4552, file: !2534, line: 1584, type: !107)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1584, column: 4)
!4553 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1582, column: 28)
!4554 = !DILocalVariable(name: "len", scope: !4555, file: !2534, line: 1589, type: !185)
!4555 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1586, column: 13)
!4556 = !DILocalVariable(name: "len", scope: !4557, file: !2534, line: 1641, type: !185)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2534, line: 1640, column: 24)
!4558 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1640, column: 8)
!4559 = !DILocalVariable(name: "nj_len", scope: !4486, file: !2534, line: 1722, type: !185)
!4560 = !DILocalVariable(name: "pad_len", scope: !4486, file: !2534, line: 1723, type: !107)
!4561 = !DILocalVariable(name: "pad", scope: !4562, file: !2534, line: 1751, type: !120)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2534, line: 1750, column: 26)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !2534, line: 1750, column: 8)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2534, line: 1747, column: 18)
!4565 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1747, column: 7)
!4566 = !DILocalVariable(name: "rc", scope: !4567, file: !2534, line: 1758, type: !107)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2534, line: 1758, column: 7)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !2534, line: 1757, column: 21)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2534, line: 1757, column: 10)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !2534, line: 1756, column: 26)
!4571 = distinct !DILexicalBlock(scope: !4562, file: !2534, line: 1756, column: 9)
!4572 = !DILocalVariable(name: "rc", scope: !4573, file: !2534, line: 1765, type: !107)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !2534, line: 1765, column: 6)
!4574 = distinct !DILexicalBlock(scope: !4562, file: !2534, line: 1764, column: 25)
!4575 = !DILocalVariable(name: "rc", scope: !4576, file: !2534, line: 1774, type: !107)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !2534, line: 1774, column: 4)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !2534, line: 1773, column: 18)
!4578 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1773, column: 7)
!4579 = !DILocalVariable(name: "rc", scope: !4580, file: !2534, line: 1819, type: !107)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !2534, line: 1819, column: 5)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !2534, line: 1818, column: 44)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !2534, line: 1818, column: 8)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !2534, line: 1817, column: 10)
!4584 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1777, column: 7)
!4585 = !DILocalVariable(name: "rc", scope: !4586, file: !2534, line: 1823, type: !107)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !2534, line: 1823, column: 5)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !2534, line: 1822, column: 26)
!4588 = distinct !DILexicalBlock(scope: !4583, file: !2534, line: 1822, column: 8)
!4589 = !DILocalVariable(name: "rc", scope: !4590, file: !2534, line: 1828, type: !107)
!4590 = distinct !DILexicalBlock(scope: !4591, file: !2534, line: 1828, column: 5)
!4591 = distinct !DILexicalBlock(scope: !4583, file: !2534, line: 1827, column: 26)
!4592 = !DILocalVariable(name: "rc", scope: !4593, file: !2534, line: 1831, type: !107)
!4593 = distinct !DILexicalBlock(scope: !4583, file: !2534, line: 1831, column: 4)
!4594 = !DILocalVariable(name: "rc", scope: !4595, file: !2534, line: 1836, type: !107)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !2534, line: 1836, column: 4)
!4596 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1835, column: 21)
!4597 = !DILabel(scope: !4553, name: "prec_int_pad0", file: !2534, line: 1634)
!4598 = !DILocation(line: 0, scope: !4459)
!4599 = !DILocation(line: 1341, column: 2, scope: !4459)
!4600 = !DILocation(line: 1341, column: 7, scope: !4459)
!4601 = !DILocation(line: 1375, column: 2, scope: !4459)
!4602 = !DILocation(line: 1342, column: 9, scope: !4459)
!4603 = !DILocation(line: 1375, column: 9, scope: !4459)
!4604 = !DILocation(line: 1377, column: 4, scope: !4483)
!4605 = !DILocation(line: 0, scope: !4483)
!4606 = !DILocation(line: 1377, column: 4, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1377, column: 4)
!4608 = distinct !{!4608, !4601, !4609}
!4609 = !DILocation(line: 1839, column: 2, scope: !4459)
!4610 = !DILocation(line: 1392, column: 3, scope: !4486)
!4611 = !DILocation(line: 1395, column: 5, scope: !4486)
!4612 = !DILocation(line: 0, scope: !4486)
!4613 = !DILocation(line: 1409, column: 8, scope: !4486)
!4614 = !DILocation(line: 1414, column: 13, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1414, column: 7)
!4616 = !DILocation(line: 1414, column: 7, scope: !4486)
!4617 = !DILocation(line: 1415, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !2534, line: 1414, column: 25)
!4619 = !DILocation(line: 1417, column: 14, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4618, file: !2534, line: 1417, column: 8)
!4621 = !DILocation(line: 1417, column: 8, scope: !4618)
!4622 = !DILocation(line: 1418, column: 21, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !2534, line: 1417, column: 19)
!4624 = !DILocation(line: 1419, column: 13, scope: !4623)
!4625 = !DILocation(line: 1420, column: 4, scope: !4623)
!4626 = !DILocation(line: 1421, column: 20, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4615, file: !2534, line: 1421, column: 14)
!4628 = !DILocation(line: 1421, column: 14, scope: !4615)
!4629 = !DILocation(line: 1431, column: 13, scope: !4544)
!4630 = !DILocation(line: 1431, column: 7, scope: !4486)
!4631 = !DILocation(line: 1432, column: 14, scope: !4543)
!4632 = !DILocation(line: 0, scope: !4543)
!4633 = !DILocation(line: 1434, column: 12, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4543, file: !2534, line: 1434, column: 8)
!4635 = !DILocation(line: 1434, column: 8, scope: !4543)
!4636 = !DILocation(line: 1435, column: 24, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !2534, line: 1434, column: 17)
!4638 = !DILocation(line: 1436, column: 4, scope: !4637)
!4639 = !DILocation(line: 1439, column: 20, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4544, file: !2534, line: 1439, column: 14)
!4641 = !DILocation(line: 1439, column: 14, scope: !4544)
!4642 = !DILocation(line: 1469, column: 37, scope: !4486)
!4643 = !DILocation(line: 1448, column: 20, scope: !4486)
!4644 = !DILocation(line: 1449, column: 22, scope: !4486)
!4645 = !DILocation(line: 1471, column: 34, scope: !4486)
!4646 = !DILocation(line: 1478, column: 7, scope: !4486)
!4647 = !DILocation(line: 1479, column: 4, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2534, line: 1478, column: 40)
!4649 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1478, column: 7)
!4650 = !DILocation(line: 1484, column: 19, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4648, file: !2534, line: 1479, column: 24)
!4652 = !DILocation(line: 1484, column: 17, scope: !4651)
!4653 = !DILocation(line: 1485, column: 5, scope: !4651)
!4654 = !DILocation(line: 1492, column: 20, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2534, line: 1491, column: 12)
!4656 = distinct !DILexicalBlock(scope: !4651, file: !2534, line: 1487, column: 9)
!4657 = !DILocation(line: 1492, column: 18, scope: !4655)
!4658 = !DILocation(line: 1494, column: 5, scope: !4651)
!4659 = !DILocation(line: 1497, column: 23, scope: !4651)
!4660 = !DILocation(line: 1496, column: 17, scope: !4651)
!4661 = !DILocation(line: 1498, column: 5, scope: !4651)
!4662 = !DILocation(line: 1501, column: 23, scope: !4651)
!4663 = !DILocation(line: 1500, column: 17, scope: !4651)
!4664 = !DILocation(line: 1502, column: 5, scope: !4651)
!4665 = !DILocation(line: 1513, column: 23, scope: !4651)
!4666 = !DILocation(line: 1513, column: 6, scope: !4651)
!4667 = !DILocation(line: 1512, column: 17, scope: !4651)
!4668 = !DILocation(line: 1514, column: 5, scope: !4651)
!4669 = !DILocation(line: 0, scope: !4651)
!4670 = !DILocation(line: 1516, column: 8, scope: !4648)
!4671 = !DILocation(line: 1517, column: 19, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !2534, line: 1516, column: 33)
!4673 = distinct !DILexicalBlock(scope: !4648, file: !2534, line: 1516, column: 8)
!4674 = !DILocation(line: 1517, column: 17, scope: !4672)
!4675 = !DILocation(line: 1518, column: 4, scope: !4672)
!4676 = !DILocation(line: 1519, column: 19, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !2534, line: 1518, column: 39)
!4678 = distinct !DILexicalBlock(scope: !4673, file: !2534, line: 1518, column: 15)
!4679 = !DILocation(line: 1519, column: 17, scope: !4677)
!4680 = !DILocation(line: 1520, column: 4, scope: !4677)
!4681 = !DILocation(line: 1522, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2534, line: 1521, column: 47)
!4683 = distinct !DILexicalBlock(scope: !4649, file: !2534, line: 1521, column: 14)
!4684 = !DILocation(line: 1527, column: 19, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !2534, line: 1522, column: 24)
!4686 = !DILocation(line: 1527, column: 17, scope: !4685)
!4687 = !DILocation(line: 1528, column: 5, scope: !4685)
!4688 = !DILocation(line: 0, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4685, file: !2534, line: 1530, column: 9)
!4690 = !DILocation(line: 1540, column: 23, scope: !4685)
!4691 = !DILocation(line: 1539, column: 17, scope: !4685)
!4692 = !DILocation(line: 1542, column: 5, scope: !4685)
!4693 = !DILocation(line: 1545, column: 23, scope: !4685)
!4694 = !DILocation(line: 1544, column: 17, scope: !4685)
!4695 = !DILocation(line: 1547, column: 5, scope: !4685)
!4696 = !DILocation(line: 1551, column: 23, scope: !4685)
!4697 = !DILocation(line: 1551, column: 6, scope: !4685)
!4698 = !DILocation(line: 1550, column: 17, scope: !4685)
!4699 = !DILocation(line: 1552, column: 5, scope: !4685)
!4700 = !DILocation(line: 0, scope: !4685)
!4701 = !DILocation(line: 1554, column: 8, scope: !4682)
!4702 = !DILocation(line: 1555, column: 19, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2534, line: 1554, column: 33)
!4704 = distinct !DILexicalBlock(scope: !4682, file: !2534, line: 1554, column: 8)
!4705 = !DILocation(line: 1555, column: 17, scope: !4703)
!4706 = !DILocation(line: 1556, column: 4, scope: !4703)
!4707 = !DILocation(line: 1557, column: 19, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2534, line: 1556, column: 39)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !2534, line: 1556, column: 15)
!4710 = !DILocation(line: 1557, column: 17, scope: !4708)
!4711 = !DILocation(line: 1558, column: 4, scope: !4708)
!4712 = !DILocation(line: 0, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2534, line: 1560, column: 8)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2534, line: 1559, column: 45)
!4715 = distinct !DILexicalBlock(scope: !4683, file: !2534, line: 1559, column: 14)
!4716 = !DILocation(line: 1566, column: 17, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2534, line: 1565, column: 46)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !2534, line: 1565, column: 14)
!4719 = !DILocation(line: 1566, column: 15, scope: !4717)
!4720 = !DILocation(line: 1567, column: 3, scope: !4717)
!4721 = !DILocation(line: 1574, column: 21, scope: !4550)
!4722 = !DILocation(line: 1575, column: 4, scope: !4548)
!4723 = !DILocation(line: 0, scope: !4548)
!4724 = !DILocation(line: 1575, column: 4, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4548, file: !2534, line: 1575, column: 4)
!4726 = !DILocation(line: 1582, column: 17, scope: !4486)
!4727 = !DILocation(line: 1582, column: 3, scope: !4486)
!4728 = !DILocation(line: 1584, column: 4, scope: !4552)
!4729 = !DILocation(line: 0, scope: !4552)
!4730 = !DILocation(line: 1584, column: 4, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4552, file: !2534, line: 1584, column: 4)
!4732 = !DILocation(line: 1587, column: 31, scope: !4555)
!4733 = !DILocation(line: 1591, column: 18, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4555, file: !2534, line: 1591, column: 8)
!4735 = !DILocation(line: 1591, column: 8, scope: !4555)
!4736 = !DILocation(line: 1592, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !2534, line: 1591, column: 24)
!4738 = !DILocation(line: 0, scope: !4555)
!4739 = !DILocation(line: 1593, column: 4, scope: !4737)
!4740 = !DILocation(line: 1594, column: 11, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4734, file: !2534, line: 1593, column: 11)
!4742 = !DILocation(line: 1604, column: 51, scope: !4553)
!4743 = !DILocation(line: 1604, column: 13, scope: !4553)
!4744 = !DILocation(line: 1604, column: 11, scope: !4553)
!4745 = !DILocation(line: 1606, column: 4, scope: !4553)
!4746 = !DILocation(line: 1609, column: 14, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1609, column: 8)
!4748 = !DILocation(line: 1609, column: 8, scope: !4553)
!4749 = !DILocation(line: 1619, column: 18, scope: !4553)
!4750 = !DILocation(line: 1620, column: 13, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1620, column: 8)
!4752 = !DILocation(line: 1620, column: 8, scope: !4553)
!4753 = !DILocation(line: 1622, column: 36, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4751, file: !2534, line: 1620, column: 18)
!4755 = !DILocation(line: 1622, column: 17, scope: !4754)
!4756 = !DILocation(line: 1623, column: 4, scope: !4754)
!4757 = !DILocation(line: 1632, column: 29, scope: !4553)
!4758 = !DILocation(line: 1632, column: 10, scope: !4553)
!4759 = !DILocation(line: 1632, column: 4, scope: !4553)
!4760 = !DILocation(line: 1407, column: 8, scope: !4486)
!4761 = !DILocation(line: 0, scope: !4553)
!4762 = !DILocation(line: 1634, column: 3, scope: !4553)
!4763 = !DILocation(line: 1640, column: 18, scope: !4558)
!4764 = !DILocation(line: 1640, column: 8, scope: !4553)
!4765 = !DILocation(line: 1729, column: 13, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1729, column: 7)
!4767 = !DILocation(line: 1641, column: 22, scope: !4557)
!4768 = !DILocation(line: 0, scope: !4557)
!4769 = !DILocation(line: 1646, column: 21, scope: !4557)
!4770 = !DILocation(line: 1649, column: 13, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4557, file: !2534, line: 1649, column: 9)
!4772 = !DILocation(line: 1649, column: 9, scope: !4557)
!4773 = !DILocation(line: 1650, column: 35, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !2534, line: 1649, column: 34)
!4775 = !DILocation(line: 1650, column: 23, scope: !4774)
!4776 = !DILocation(line: 1651, column: 5, scope: !4774)
!4777 = !DILocation(line: 1660, column: 15, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1660, column: 8)
!4779 = !DILocation(line: 1660, column: 19, scope: !4778)
!4780 = !DILocation(line: 1660, column: 8, scope: !4553)
!4781 = !DILocation(line: 1661, column: 23, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !2534, line: 1660, column: 28)
!4783 = !DILocation(line: 1661, column: 11, scope: !4782)
!4784 = !DILocation(line: 1665, column: 22, scope: !4782)
!4785 = !DILocation(line: 1666, column: 21, scope: !4782)
!4786 = !DILocation(line: 1668, column: 5, scope: !4782)
!4787 = !DILocation(line: 1677, column: 30, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2534, line: 1676, column: 49)
!4789 = distinct !DILexicalBlock(scope: !4553, file: !2534, line: 1676, column: 8)
!4790 = !DILocation(line: 1677, column: 5, scope: !4788)
!4791 = !DILocation(line: 1680, column: 4, scope: !4553)
!4792 = !DILocation(line: 0, scope: !4734)
!4793 = !DILocation(line: 1597, column: 14, scope: !4555)
!4794 = !DILocation(line: 1699, column: 11, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1699, column: 7)
!4796 = !DILocation(line: 1699, column: 7, scope: !4486)
!4797 = !DILocation(line: 1725, column: 7, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1725, column: 7)
!4799 = !DILocation(line: 1725, column: 12, scope: !4798)
!4800 = !DILocation(line: 1747, column: 13, scope: !4565)
!4801 = !DILocation(line: 1747, column: 7, scope: !4486)
!4802 = !DILocation(line: 1722, column: 24, scope: !4486)
!4803 = !DILocation(line: 1725, column: 7, scope: !4486)
!4804 = !DILocation(line: 1729, column: 7, scope: !4486)
!4805 = !DILocation(line: 1736, column: 13, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4486, file: !2534, line: 1736, column: 7)
!4807 = !DILocation(line: 1735, column: 19, scope: !4486)
!4808 = !DILocation(line: 1736, column: 7, scope: !4486)
!4809 = !DILocation(line: 1748, column: 10, scope: !4564)
!4810 = !DILocation(line: 1750, column: 15, scope: !4563)
!4811 = !DILocation(line: 1750, column: 8, scope: !4564)
!4812 = !DILocation(line: 0, scope: !4562)
!4813 = !DILocation(line: 1756, column: 15, scope: !4571)
!4814 = !DILocation(line: 1756, column: 9, scope: !4562)
!4815 = !DILocation(line: 1758, column: 7, scope: !4567)
!4816 = !DILocation(line: 0, scope: !4567)
!4817 = !DILocation(line: 1758, column: 7, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4567, file: !2534, line: 1758, column: 7)
!4819 = !DILocation(line: 1764, column: 5, scope: !4562)
!4820 = !DILocation(line: 0, scope: !4564)
!4821 = !DILocation(line: 1764, column: 20, scope: !4562)
!4822 = !DILocation(line: 1764, column: 17, scope: !4562)
!4823 = !DILocation(line: 1765, column: 6, scope: !4573)
!4824 = !DILocation(line: 0, scope: !4573)
!4825 = !DILocation(line: 1765, column: 6, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4573, file: !2534, line: 1765, column: 6)
!4827 = distinct !{!4827, !4819, !4828}
!4828 = !DILocation(line: 1766, column: 5, scope: !4562)
!4829 = !DILocation(line: 1773, column: 12, scope: !4578)
!4830 = !DILocation(line: 1773, column: 7, scope: !4486)
!4831 = !DILocation(line: 1773, column: 7, scope: !4578)
!4832 = !DILocation(line: 1774, column: 4, scope: !4576)
!4833 = !DILocation(line: 0, scope: !4576)
!4834 = !DILocation(line: 1774, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4576, file: !2534, line: 1774, column: 4)
!4836 = !DILocation(line: 1818, column: 8, scope: !4582)
!4837 = !DILocation(line: 1818, column: 27, scope: !4582)
!4838 = !DILocation(line: 1818, column: 25, scope: !4582)
!4839 = !DILocation(line: 1818, column: 8, scope: !4583)
!4840 = !DILocation(line: 1819, column: 5, scope: !4580)
!4841 = !DILocation(line: 0, scope: !4580)
!4842 = !DILocation(line: 1819, column: 5, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4580, file: !2534, line: 1819, column: 5)
!4844 = !DILocation(line: 1822, column: 14, scope: !4588)
!4845 = !DILocation(line: 1822, column: 8, scope: !4583)
!4846 = !DILocation(line: 1823, column: 5, scope: !4586)
!4847 = !DILocation(line: 0, scope: !4586)
!4848 = !DILocation(line: 1823, column: 5, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4586, file: !2534, line: 1823, column: 5)
!4850 = !DILocation(line: 1826, column: 20, scope: !4583)
!4851 = !DILocation(line: 1827, column: 4, scope: !4583)
!4852 = !DILocation(line: 0, scope: !4583)
!4853 = !DILocation(line: 1827, column: 21, scope: !4583)
!4854 = !DILocation(line: 1827, column: 18, scope: !4583)
!4855 = !DILocation(line: 1828, column: 5, scope: !4590)
!4856 = !DILocation(line: 0, scope: !4590)
!4857 = !DILocation(line: 1828, column: 5, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4590, file: !2534, line: 1828, column: 5)
!4859 = distinct !{!4859, !4851, !4860}
!4860 = !DILocation(line: 1829, column: 4, scope: !4583)
!4861 = !DILocation(line: 1831, column: 4, scope: !4593)
!4862 = !DILocation(line: 0, scope: !4593)
!4863 = !DILocation(line: 1831, column: 4, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4593, file: !2534, line: 1831, column: 4)
!4865 = !DILocation(line: 1835, column: 16, scope: !4486)
!4866 = !DILocation(line: 1835, column: 3, scope: !4486)
!4867 = !DILocation(line: 1836, column: 4, scope: !4595)
!4868 = !DILocation(line: 0, scope: !4595)
!4869 = !DILocation(line: 1836, column: 4, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4595, file: !2534, line: 1836, column: 4)
!4871 = !DILocation(line: 1837, column: 4, scope: !4596)
!4872 = distinct !{!4872, !4866, !4873}
!4873 = !DILocation(line: 1838, column: 3, scope: !4486)
!4874 = !DILocation(line: 1844, column: 1, scope: !4459)
!4875 = distinct !DISubprogram(name: "extract_conversion", scope: !2534, file: !2534, line: 642, type: !4876, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4878)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{!118, !4532, !118}
!4878 = !{!4879, !4880}
!4879 = !DILocalVariable(name: "conv", arg: 1, scope: !4875, file: !2534, line: 642, type: !4532)
!4880 = !DILocalVariable(name: "sp", arg: 2, scope: !4875, file: !2534, line: 643, type: !118)
!4881 = !DILocation(line: 0, scope: !4875)
!4882 = !DILocation(line: 645, column: 10, scope: !4875)
!4883 = !DILocation(line: 653, column: 2, scope: !4875)
!4884 = !DILocation(line: 654, column: 6, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4875, file: !2534, line: 654, column: 6)
!4886 = !DILocation(line: 654, column: 10, scope: !4885)
!4887 = !DILocation(line: 654, column: 6, scope: !4875)
!4888 = !DILocation(line: 655, column: 24, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !2534, line: 654, column: 18)
!4890 = !DILocation(line: 655, column: 19, scope: !4889)
!4891 = !DILocation(line: 656, column: 3, scope: !4889)
!4892 = !DILocation(line: 659, column: 7, scope: !4875)
!4893 = !DILocation(line: 660, column: 7, scope: !4875)
!4894 = !DILocation(line: 661, column: 7, scope: !4875)
!4895 = !DILocation(line: 662, column: 7, scope: !4875)
!4896 = !DILocation(line: 663, column: 7, scope: !4875)
!4897 = !DILocation(line: 665, column: 2, scope: !4875)
!4898 = !DILocation(line: 666, column: 1, scope: !4875)
!4899 = distinct !DISubprogram(name: "outs", scope: !2534, file: !2534, line: 1319, type: !4900, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4902)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!107, !3614, !106, !118, !118}
!4902 = !{!4903, !4904, !4905, !4906, !4907, !4908}
!4903 = !DILocalVariable(name: "out", arg: 1, scope: !4899, file: !2534, line: 1319, type: !3614)
!4904 = !DILocalVariable(name: "ctx", arg: 2, scope: !4899, file: !2534, line: 1320, type: !106)
!4905 = !DILocalVariable(name: "sp", arg: 3, scope: !4899, file: !2534, line: 1321, type: !118)
!4906 = !DILocalVariable(name: "ep", arg: 4, scope: !4899, file: !2534, line: 1322, type: !118)
!4907 = !DILocalVariable(name: "count", scope: !4899, file: !2534, line: 1324, type: !185)
!4908 = !DILocalVariable(name: "rc", scope: !4909, file: !2534, line: 1327, type: !107)
!4909 = distinct !DILexicalBlock(scope: !4899, file: !2534, line: 1326, column: 45)
!4910 = !DILocation(line: 0, scope: !4899)
!4911 = !DILocation(line: 1326, column: 2, scope: !4899)
!4912 = !DILocation(line: 1324, column: 9, scope: !4899)
!4913 = !DILocation(line: 1326, column: 13, scope: !4899)
!4914 = !DILocation(line: 1326, column: 19, scope: !4899)
!4915 = !DILocation(line: 1327, column: 21, scope: !4909)
!4916 = !DILocation(line: 1326, column: 36, scope: !4899)
!4917 = !DILocation(line: 1326, column: 39, scope: !4899)
!4918 = !DILocation(line: 1327, column: 24, scope: !4909)
!4919 = !DILocation(line: 1327, column: 16, scope: !4909)
!4920 = !DILocation(line: 1327, column: 12, scope: !4909)
!4921 = !DILocation(line: 0, scope: !4909)
!4922 = !DILocation(line: 1329, column: 10, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4909, file: !2534, line: 1329, column: 7)
!4924 = !DILocation(line: 1329, column: 7, scope: !4909)
!4925 = distinct !{!4925, !4911, !4926}
!4926 = !DILocation(line: 1333, column: 2, scope: !4899)
!4927 = !DILocation(line: 1336, column: 1, scope: !4899)
!4928 = distinct !DISubprogram(name: "encode_uint", scope: !2534, file: !2534, line: 788, type: !4929, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4931)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!193, !2556, !4532, !193, !118}
!4931 = !{!4932, !4933, !4934, !4935, !4936, !4937, !4939, !4940}
!4932 = !DILocalVariable(name: "value", arg: 1, scope: !4928, file: !2534, line: 788, type: !2556)
!4933 = !DILocalVariable(name: "conv", arg: 2, scope: !4928, file: !2534, line: 789, type: !4532)
!4934 = !DILocalVariable(name: "bps", arg: 3, scope: !4928, file: !2534, line: 790, type: !193)
!4935 = !DILocalVariable(name: "bpe", arg: 4, scope: !4928, file: !2534, line: 791, type: !118)
!4936 = !DILocalVariable(name: "upcase", scope: !4928, file: !2534, line: 793, type: !145)
!4937 = !DILocalVariable(name: "radix", scope: !4928, file: !2534, line: 794, type: !4938)
!4938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4939 = !DILocalVariable(name: "bp", scope: !4928, file: !2534, line: 795, type: !193)
!4940 = !DILocalVariable(name: "lsv", scope: !4941, file: !2534, line: 798, type: !32)
!4941 = distinct !DILexicalBlock(scope: !4928, file: !2534, line: 797, column: 5)
!4942 = !DILocation(line: 0, scope: !4928)
!4943 = !DILocation(line: 793, column: 35, scope: !4928)
!4944 = !DILocation(line: 793, column: 24, scope: !4928)
!4945 = !DILocation(line: 793, column: 16, scope: !4928)
!4946 = !DILocation(line: 794, column: 29, scope: !4928)
!4947 = !DILocation(line: 795, column: 24, scope: !4928)
!4948 = !DILocation(line: 795, column: 17, scope: !4928)
!4949 = !DILocation(line: 797, column: 2, scope: !4928)
!4950 = !DILocation(line: 802, column: 9, scope: !4941)
!4951 = !DILocation(line: 798, column: 22, scope: !4941)
!4952 = !DILocation(line: 0, scope: !4941)
!4953 = !DILocation(line: 800, column: 16, scope: !4941)
!4954 = !DILocation(line: 800, column: 11, scope: !4941)
!4955 = !DILocation(line: 800, column: 4, scope: !4941)
!4956 = !DILocation(line: 800, column: 9, scope: !4941)
!4957 = !DILocation(line: 803, column: 18, scope: !4928)
!4958 = !DILocation(line: 803, column: 24, scope: !4928)
!4959 = !DILocation(line: 803, column: 2, scope: !4941)
!4960 = distinct !{!4960, !4949, !4961}
!4961 = !DILocation(line: 803, column: 37, scope: !4928)
!4962 = !DILocation(line: 808, column: 12, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4928, file: !2534, line: 808, column: 6)
!4964 = !DILocation(line: 808, column: 6, scope: !4928)
!4965 = !DILocation(line: 809, column: 7, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !2534, line: 808, column: 23)
!4967 = !DILocation(line: 813, column: 3, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !2534, line: 811, column: 27)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !2534, line: 811, column: 14)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !2534, line: 809, column: 7)
!4971 = !DILocation(line: 0, scope: !4970)
!4972 = !DILocation(line: 818, column: 2, scope: !4928)
!4973 = distinct !DISubprogram(name: "store_count", scope: !2534, file: !2534, line: 1280, type: !4974, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4978)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{null, !4976, !106, !107}
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 32)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4499)
!4978 = !{!4979, !4980, !4981}
!4979 = !DILocalVariable(name: "conv", arg: 1, scope: !4973, file: !2534, line: 1280, type: !4976)
!4980 = !DILocalVariable(name: "dp", arg: 2, scope: !4973, file: !2534, line: 1281, type: !106)
!4981 = !DILocalVariable(name: "count", arg: 3, scope: !4973, file: !2534, line: 1282, type: !107)
!4982 = !DILocation(line: 0, scope: !4973)
!4983 = !DILocation(line: 1284, column: 38, scope: !4973)
!4984 = !DILocation(line: 1284, column: 2, scope: !4973)
!4985 = !DILocation(line: 1286, column: 4, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4973, file: !2534, line: 1284, column: 50)
!4987 = !DILocation(line: 1286, column: 14, scope: !4986)
!4988 = !DILocation(line: 1287, column: 3, scope: !4986)
!4989 = !DILocation(line: 1289, column: 24, scope: !4986)
!4990 = !DILocation(line: 1289, column: 22, scope: !4986)
!4991 = !DILocation(line: 1290, column: 3, scope: !4986)
!4992 = !DILocation(line: 1292, column: 18, scope: !4986)
!4993 = !DILocation(line: 1292, column: 4, scope: !4986)
!4994 = !DILocation(line: 1292, column: 16, scope: !4986)
!4995 = !DILocation(line: 1293, column: 3, scope: !4986)
!4996 = !DILocation(line: 1295, column: 4, scope: !4986)
!4997 = !DILocation(line: 1295, column: 15, scope: !4986)
!4998 = !DILocation(line: 1296, column: 3, scope: !4986)
!4999 = !DILocation(line: 1298, column: 22, scope: !4986)
!5000 = !DILocation(line: 1298, column: 4, scope: !4986)
!5001 = !DILocation(line: 1298, column: 20, scope: !4986)
!5002 = !DILocation(line: 1299, column: 3, scope: !4986)
!5003 = !DILocation(line: 1301, column: 21, scope: !4986)
!5004 = !DILocation(line: 1301, column: 4, scope: !4986)
!5005 = !DILocation(line: 1301, column: 19, scope: !4986)
!5006 = !DILocation(line: 1302, column: 3, scope: !4986)
!5007 = !DILocation(line: 1304, column: 4, scope: !4986)
!5008 = !DILocation(line: 1304, column: 17, scope: !4986)
!5009 = !DILocation(line: 1305, column: 3, scope: !4986)
!5010 = !DILocation(line: 1307, column: 4, scope: !4986)
!5011 = !DILocation(line: 1307, column: 20, scope: !4986)
!5012 = !DILocation(line: 1308, column: 3, scope: !4986)
!5013 = !DILocation(line: 1316, column: 1, scope: !4973)
!5014 = distinct !DISubprogram(name: "isupper", scope: !5015, file: !5015, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5016)
!5015 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5016 = !{!5017}
!5017 = !DILocalVariable(name: "a", arg: 1, scope: !5014, file: !5015, line: 16, type: !107)
!5018 = !DILocation(line: 0, scope: !5014)
!5019 = !DILocation(line: 18, column: 29, scope: !5014)
!5020 = !DILocation(line: 18, column: 45, scope: !5014)
!5021 = !DILocation(line: 18, column: 2, scope: !5014)
!5022 = distinct !DISubprogram(name: "conversion_radix", scope: !2534, file: !2534, line: 761, type: !5023, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!185, !120}
!5025 = !{!5026}
!5026 = !DILocalVariable(name: "specifier", arg: 1, scope: !5022, file: !2534, line: 761, type: !120)
!5027 = !DILocation(line: 0, scope: !5022)
!5028 = !DILocation(line: 763, column: 2, scope: !5022)
!5029 = !DILocation(line: 770, column: 3, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5022, file: !2534, line: 763, column: 21)
!5031 = !DILocation(line: 774, column: 3, scope: !5030)
!5032 = !DILocation(line: 0, scope: !5030)
!5033 = !DILocation(line: 776, column: 1, scope: !5022)
!5034 = distinct !DISubprogram(name: "extract_flags", scope: !2534, file: !2534, line: 339, type: !4876, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5035)
!5035 = !{!5036, !5037, !5038}
!5036 = !DILocalVariable(name: "conv", arg: 1, scope: !5034, file: !2534, line: 339, type: !4532)
!5037 = !DILocalVariable(name: "sp", arg: 2, scope: !5034, file: !2534, line: 340, type: !118)
!5038 = !DILocalVariable(name: "loop", scope: !5034, file: !2534, line: 342, type: !145)
!5039 = !DILocation(line: 0, scope: !5034)
!5040 = !DILocation(line: 344, column: 2, scope: !5034)
!5041 = !DILocation(line: 345, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5034, file: !2534, line: 344, column: 5)
!5043 = !DILocation(line: 345, column: 3, scope: !5042)
!5044 = !DILocation(line: 351, column: 4, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !2534, line: 345, column: 16)
!5046 = !DILocation(line: 354, column: 4, scope: !5045)
!5047 = !DILocation(line: 357, column: 4, scope: !5045)
!5048 = !DILocation(line: 360, column: 4, scope: !5045)
!5049 = !DILocation(line: 0, scope: !5045)
!5050 = !DILocation(line: 370, column: 12, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5034, file: !2534, line: 370, column: 6)
!5052 = !DILocation(line: 370, column: 22, scope: !5051)
!5053 = !DILocation(line: 371, column: 19, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !2534, line: 370, column: 42)
!5055 = !DILocation(line: 372, column: 2, scope: !5054)
!5056 = !DILocation(line: 376, column: 2, scope: !5034)
!5057 = distinct !DISubprogram(name: "extract_width", scope: !2534, file: !2534, line: 388, type: !4876, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5058)
!5058 = !{!5059, !5060, !5061, !5062}
!5059 = !DILocalVariable(name: "conv", arg: 1, scope: !5057, file: !2534, line: 388, type: !4532)
!5060 = !DILocalVariable(name: "sp", arg: 2, scope: !5057, file: !2534, line: 389, type: !118)
!5061 = !DILocalVariable(name: "wp", scope: !5057, file: !2534, line: 398, type: !118)
!5062 = !DILocalVariable(name: "width", scope: !5057, file: !2534, line: 399, type: !185)
!5063 = !DILocation(line: 0, scope: !5057)
!5064 = !DILocation(line: 391, column: 8, scope: !5057)
!5065 = !DILocation(line: 391, column: 22, scope: !5057)
!5066 = !DILocation(line: 393, column: 6, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5057, file: !2534, line: 393, column: 6)
!5068 = !DILocation(line: 393, column: 10, scope: !5067)
!5069 = !DILocation(line: 393, column: 6, scope: !5057)
!5070 = !DILocation(line: 394, column: 20, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5067, file: !2534, line: 393, column: 18)
!5072 = !DILocation(line: 395, column: 10, scope: !5071)
!5073 = !DILocation(line: 395, column: 3, scope: !5071)
!5074 = !DILocation(line: 399, column: 17, scope: !5057)
!5075 = !DILocation(line: 401, column: 6, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5057, file: !2534, line: 401, column: 6)
!5077 = !DILocation(line: 401, column: 9, scope: !5076)
!5078 = !DILocation(line: 401, column: 6, scope: !5057)
!5079 = !DILocation(line: 402, column: 23, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5076, file: !2534, line: 401, column: 16)
!5081 = !DILocation(line: 403, column: 9, scope: !5080)
!5082 = !DILocation(line: 403, column: 21, scope: !5080)
!5083 = !DILocation(line: 405, column: 11, scope: !5080)
!5084 = !DILocation(line: 404, column: 21, scope: !5080)
!5085 = !DILocation(line: 406, column: 2, scope: !5080)
!5086 = !DILocation(line: 409, column: 1, scope: !5057)
!5087 = distinct !DISubprogram(name: "extract_prec", scope: !2534, file: !2534, line: 420, type: !4876, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5088)
!5088 = !{!5089, !5090, !5091}
!5089 = !DILocalVariable(name: "conv", arg: 1, scope: !5087, file: !2534, line: 420, type: !4532)
!5090 = !DILocalVariable(name: "sp", arg: 2, scope: !5087, file: !2534, line: 421, type: !118)
!5091 = !DILocalVariable(name: "prec", scope: !5087, file: !2534, line: 435, type: !185)
!5092 = !DILocation(line: 0, scope: !5087)
!5093 = !DILocation(line: 423, column: 24, scope: !5087)
!5094 = !DILocation(line: 423, column: 28, scope: !5087)
!5095 = !DILocation(line: 423, column: 8, scope: !5087)
!5096 = !DILocation(line: 423, column: 21, scope: !5087)
!5097 = !DILocation(line: 425, column: 6, scope: !5087)
!5098 = !DILocation(line: 428, column: 2, scope: !5087)
!5099 = !DILocation(line: 430, column: 6, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5087, file: !2534, line: 430, column: 6)
!5101 = !DILocation(line: 430, column: 10, scope: !5100)
!5102 = !DILocation(line: 430, column: 6, scope: !5087)
!5103 = !DILocation(line: 431, column: 19, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5100, file: !2534, line: 430, column: 18)
!5105 = !DILocation(line: 432, column: 10, scope: !5104)
!5106 = !DILocation(line: 432, column: 3, scope: !5104)
!5107 = !DILocation(line: 435, column: 16, scope: !5087)
!5108 = !DILocation(line: 437, column: 8, scope: !5087)
!5109 = !DILocation(line: 437, column: 19, scope: !5087)
!5110 = !DILocation(line: 439, column: 10, scope: !5087)
!5111 = !DILocation(line: 438, column: 20, scope: !5087)
!5112 = !DILocation(line: 441, column: 9, scope: !5087)
!5113 = !DILocation(line: 442, column: 1, scope: !5087)
!5114 = distinct !DISubprogram(name: "extract_length", scope: !2534, file: !2534, line: 453, type: !4876, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5115)
!5115 = !{!5116, !5117}
!5116 = !DILocalVariable(name: "conv", arg: 1, scope: !5114, file: !2534, line: 453, type: !4532)
!5117 = !DILocalVariable(name: "sp", arg: 2, scope: !5114, file: !2534, line: 454, type: !118)
!5118 = !DILocation(line: 0, scope: !5114)
!5119 = !DILocation(line: 456, column: 10, scope: !5114)
!5120 = !DILocation(line: 456, column: 2, scope: !5114)
!5121 = !DILocation(line: 458, column: 8, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !2534, line: 458, column: 7)
!5123 = distinct !DILexicalBlock(scope: !5114, file: !2534, line: 456, column: 15)
!5124 = !DILocation(line: 458, column: 7, scope: !5122)
!5125 = !DILocation(line: 458, column: 13, scope: !5122)
!5126 = !DILocation(line: 0, scope: !5122)
!5127 = !DILocation(line: 458, column: 7, scope: !5123)
!5128 = !DILocation(line: 459, column: 21, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5122, file: !2534, line: 458, column: 21)
!5130 = !DILocation(line: 460, column: 4, scope: !5129)
!5131 = !DILocation(line: 461, column: 3, scope: !5129)
!5132 = !DILocation(line: 462, column: 21, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5122, file: !2534, line: 461, column: 10)
!5134 = !DILocation(line: 466, column: 8, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5123, file: !2534, line: 466, column: 7)
!5136 = !DILocation(line: 466, column: 7, scope: !5135)
!5137 = !DILocation(line: 466, column: 13, scope: !5135)
!5138 = !DILocation(line: 0, scope: !5135)
!5139 = !DILocation(line: 466, column: 7, scope: !5123)
!5140 = !DILocation(line: 467, column: 21, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5135, file: !2534, line: 466, column: 21)
!5142 = !DILocation(line: 468, column: 4, scope: !5141)
!5143 = !DILocation(line: 469, column: 3, scope: !5141)
!5144 = !DILocation(line: 470, column: 21, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5135, file: !2534, line: 469, column: 10)
!5146 = !DILocation(line: 474, column: 9, scope: !5123)
!5147 = !DILocation(line: 474, column: 20, scope: !5123)
!5148 = !DILocation(line: 475, column: 3, scope: !5123)
!5149 = !DILocation(line: 476, column: 3, scope: !5123)
!5150 = !DILocation(line: 478, column: 9, scope: !5123)
!5151 = !DILocation(line: 478, column: 20, scope: !5123)
!5152 = !DILocation(line: 479, column: 3, scope: !5123)
!5153 = !DILocation(line: 480, column: 3, scope: !5123)
!5154 = !DILocation(line: 482, column: 9, scope: !5123)
!5155 = !DILocation(line: 482, column: 20, scope: !5123)
!5156 = !DILocation(line: 483, column: 3, scope: !5123)
!5157 = !DILocation(line: 484, column: 3, scope: !5123)
!5158 = !DILocation(line: 486, column: 9, scope: !5123)
!5159 = !DILocation(line: 486, column: 20, scope: !5123)
!5160 = !DILocation(line: 487, column: 3, scope: !5123)
!5161 = !DILocation(line: 492, column: 21, scope: !5123)
!5162 = !DILocation(line: 493, column: 3, scope: !5123)
!5163 = !DILocation(line: 495, column: 9, scope: !5123)
!5164 = !DILocation(line: 495, column: 20, scope: !5123)
!5165 = !DILocation(line: 496, column: 3, scope: !5123)
!5166 = !DILocation(line: 498, column: 2, scope: !5114)
!5167 = distinct !DISubprogram(name: "extract_specifier", scope: !2534, file: !2534, line: 513, type: !4876, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5168)
!5168 = !{!5169, !5170, !5171, !5172}
!5169 = !DILocalVariable(name: "conv", arg: 1, scope: !5167, file: !2534, line: 513, type: !4532)
!5170 = !DILocalVariable(name: "sp", arg: 2, scope: !5167, file: !2534, line: 514, type: !118)
!5171 = !DILocalVariable(name: "unsupported", scope: !5167, file: !2534, line: 516, type: !145)
!5172 = !DILabel(scope: !5173, name: "int_conv", file: !2534, line: 526)
!5173 = distinct !DILexicalBlock(scope: !5167, file: !2534, line: 520, column: 27)
!5174 = !DILocation(line: 0, scope: !5167)
!5175 = !DILocation(line: 518, column: 20, scope: !5167)
!5176 = !DILocation(line: 518, column: 8, scope: !5167)
!5177 = !DILocation(line: 518, column: 18, scope: !5167)
!5178 = !DILocation(line: 520, column: 2, scope: !5167)
!5179 = !DILocation(line: 525, column: 3, scope: !5173)
!5180 = !DILocation(line: 0, scope: !5173)
!5181 = !DILocation(line: 526, column: 1, scope: !5173)
!5182 = !DILocation(line: 528, column: 24, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5173, file: !2534, line: 528, column: 7)
!5184 = !DILocation(line: 528, column: 7, scope: !5173)
!5185 = !DILocation(line: 535, column: 23, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5173, file: !2534, line: 535, column: 7)
!5187 = !DILocation(line: 535, column: 7, scope: !5173)
!5188 = !DILocation(line: 536, column: 36, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !2534, line: 535, column: 31)
!5190 = !DILocation(line: 537, column: 3, scope: !5189)
!5191 = !DILocation(line: 570, column: 9, scope: !5173)
!5192 = !DILocation(line: 570, column: 23, scope: !5173)
!5193 = !DILocation(line: 575, column: 4, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !2534, line: 573, column: 48)
!5195 = distinct !DILexicalBlock(scope: !5173, file: !2534, line: 573, column: 7)
!5196 = !DILocation(line: 603, column: 9, scope: !5173)
!5197 = !DILocation(line: 603, column: 23, scope: !5173)
!5198 = !DILocation(line: 605, column: 24, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5173, file: !2534, line: 605, column: 7)
!5200 = !DILocation(line: 605, column: 7, scope: !5173)
!5201 = !DILocation(line: 612, column: 9, scope: !5173)
!5202 = !DILocation(line: 612, column: 23, scope: !5173)
!5203 = !DILocation(line: 619, column: 24, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5173, file: !2534, line: 619, column: 7)
!5205 = !DILocation(line: 619, column: 7, scope: !5173)
!5206 = !DILocation(line: 625, column: 9, scope: !5173)
!5207 = !DILocation(line: 625, column: 17, scope: !5173)
!5208 = !DILocation(line: 626, column: 3, scope: !5173)
!5209 = !DILocation(line: 629, column: 20, scope: !5167)
!5210 = !DILocation(line: 629, column: 8, scope: !5167)
!5211 = !DILocation(line: 518, column: 23, scope: !5167)
!5212 = !DILocation(line: 631, column: 2, scope: !5167)
!5213 = distinct !DISubprogram(name: "extract_decimal", scope: !2534, file: !2534, line: 318, type: !5214, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5216)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{!185, !184}
!5216 = !{!5217, !5218, !5219}
!5217 = !DILocalVariable(name: "str", arg: 1, scope: !5213, file: !2534, line: 318, type: !184)
!5218 = !DILocalVariable(name: "sp", scope: !5213, file: !2534, line: 320, type: !118)
!5219 = !DILocalVariable(name: "val", scope: !5213, file: !2534, line: 321, type: !185)
!5220 = !DILocation(line: 0, scope: !5213)
!5221 = !DILocation(line: 320, column: 19, scope: !5213)
!5222 = !DILocation(line: 323, column: 37, scope: !5213)
!5223 = !DILocation(line: 323, column: 17, scope: !5213)
!5224 = !DILocation(line: 323, column: 9, scope: !5213)
!5225 = !DILocation(line: 323, column: 2, scope: !5213)
!5226 = !DILocation(line: 324, column: 13, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5213, file: !2534, line: 323, column: 43)
!5228 = !DILocation(line: 324, column: 24, scope: !5227)
!5229 = !DILocation(line: 324, column: 19, scope: !5227)
!5230 = !DILocation(line: 324, column: 27, scope: !5227)
!5231 = distinct !{!5231, !5225, !5232}
!5232 = !DILocation(line: 325, column: 2, scope: !5213)
!5233 = !DILocation(line: 326, column: 7, scope: !5213)
!5234 = !DILocation(line: 327, column: 2, scope: !5213)
!5235 = distinct !DISubprogram(name: "isdigit", scope: !5015, file: !5015, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5236)
!5236 = !{!5237}
!5237 = !DILocalVariable(name: "a", arg: 1, scope: !5235, file: !5015, line: 43, type: !107)
!5238 = !DILocation(line: 0, scope: !5235)
!5239 = !DILocation(line: 45, column: 29, scope: !5235)
!5240 = !DILocation(line: 45, column: 45, scope: !5235)
!5241 = !DILocation(line: 45, column: 2, scope: !5235)
!5242 = distinct !DISubprogram(name: "assert_post_action", scope: !5243, file: !5243, line: 26, type: !5244, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5246)
!5243 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !118, !32}
!5246 = !{!5247, !5248}
!5247 = !DILocalVariable(name: "file", arg: 1, scope: !5242, file: !5243, line: 26, type: !118)
!5248 = !DILocalVariable(name: "line", arg: 2, scope: !5242, file: !5243, line: 26, type: !32)
!5249 = !DILocation(line: 0, scope: !5242)
!5250 = !DILocation(line: 43, column: 2, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5242, file: !5243, line: 43, column: 2)
!5252 = !{i64 2154161347, i64 2154161363, i64 2154161389, i64 2154161417, i64 2154161437}
!5253 = !DILocation(line: 44, column: 1, scope: !5242)
!5254 = distinct !DISubprogram(name: "assert_print", scope: !5243, file: !5243, line: 46, type: !4224, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5255)
!5255 = !{!5256, !5257}
!5256 = !DILocalVariable(name: "fmt", arg: 1, scope: !5254, file: !5243, line: 46, type: !118)
!5257 = !DILocalVariable(name: "ap", scope: !5254, file: !5243, line: 48, type: !5258)
!5258 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3234, line: 99, baseType: !5259)
!5259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3234, line: 40, baseType: !5260)
!5260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5243, baseType: !5261)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5262)
!5262 = !{!5263}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5261, file: !5243, line: 48, baseType: !106, size: 32)
!5264 = !DILocation(line: 0, scope: !5254)
!5265 = !DILocation(line: 48, column: 2, scope: !5254)
!5266 = !DILocation(line: 48, column: 10, scope: !5254)
!5267 = !DILocation(line: 50, column: 2, scope: !5254)
!5268 = !DILocation(line: 52, column: 2, scope: !5254)
!5269 = !DILocation(line: 54, column: 2, scope: !5254)
!5270 = !DILocation(line: 55, column: 1, scope: !5254)
!5271 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5272, file: !5272, line: 9, type: !3111, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2182)
!5272 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!5273 = !DILocation(line: 11, column: 1, scope: !5271)
!5274 = !{i64 2147566614, i64 2147566657, i64 2147566697}
!5275 = !DILocation(line: 12, column: 1, scope: !5271)
!5276 = !{i64 2147570841, i64 2147570884, i64 2147570924}
!5277 = !DILocation(line: 13, column: 1, scope: !5271)
!5278 = !{i64 2147571050, i64 2147571093, i64 2147571133}
!5279 = !DILocation(line: 14, column: 1, scope: !5271)
!5280 = !{i64 2147571219, i64 2147571262, i64 2147571302}
!5281 = !DILocation(line: 15, column: 1, scope: !5271)
!5282 = !{i64 2147571382, i64 2147571425, i64 2147571465}
!5283 = !DILocation(line: 16, column: 1, scope: !5271)
!5284 = !{i64 2147571566, i64 2147571609, i64 2147571649}
!5285 = !DILocation(line: 17, column: 1, scope: !5271)
!5286 = !{i64 2147571745, i64 2147571788, i64 2147571828}
!5287 = !DILocation(line: 18, column: 1, scope: !5271)
!5288 = !{i64 2147571987, i64 2147572030, i64 2147572070}
!5289 = !DILocation(line: 19, column: 1, scope: !5271)
!5290 = !{i64 2147572222, i64 2147572265, i64 2147572305}
!5291 = !DILocation(line: 20, column: 1, scope: !5271)
!5292 = !{i64 2147572408, i64 2147572451, i64 2147572491}
!5293 = !DILocation(line: 21, column: 1, scope: !5271)
!5294 = !{i64 2147572624, i64 2147572667, i64 2147572707}
!5295 = !DILocation(line: 22, column: 1, scope: !5271)
!5296 = !{i64 2147572827, i64 2147572870, i64 2147572910}
!5297 = !DILocation(line: 23, column: 1, scope: !5271)
!5298 = !{i64 2147573030, i64 2147573073, i64 2147573113}
!5299 = !DILocation(line: 24, column: 1, scope: !5271)
!5300 = !{i64 2147573205, i64 2147573248, i64 2147573288}
!5301 = !DILocation(line: 25, column: 1, scope: !5271)
!5302 = !{i64 2147573413, i64 2147573456, i64 2147573496}
!5303 = !DILocation(line: 26, column: 1, scope: !5271)
!5304 = !{i64 2147573617, i64 2147573660, i64 2147573700}
!5305 = !DILocation(line: 27, column: 1, scope: !5271)
!5306 = !{i64 2147573810, i64 2147573853, i64 2147573893}
!5307 = !DILocation(line: 28, column: 1, scope: !5271)
!5308 = !{i64 2147574012, i64 2147574055, i64 2147574095}
!5309 = !DILocation(line: 29, column: 1, scope: !5271)
!5310 = !{i64 2147574211, i64 2147574254, i64 2147574294}
!5311 = !DILocation(line: 30, column: 1, scope: !5271)
!5312 = !{i64 2147574438, i64 2147574481, i64 2147574521}
!5313 = !DILocation(line: 31, column: 1, scope: !5271)
!5314 = !{i64 2147574640, i64 2147574683, i64 2147574723}
!5315 = !DILocation(line: 32, column: 1, scope: !5271)
!5316 = !{i64 2147574855, i64 2147574898, i64 2147574938}
!5317 = !DILocation(line: 33, column: 1, scope: !5271)
!5318 = !{i64 2147575072, i64 2147575115, i64 2147575155}
!5319 = !DILocation(line: 34, column: 1, scope: !5271)
!5320 = !{i64 2147575244, i64 2147575287, i64 2147575327}
!5321 = !DILocation(line: 35, column: 1, scope: !5271)
!5322 = !{i64 2147575446, i64 2147575489, i64 2147575529}
!5323 = !DILocation(line: 36, column: 1, scope: !5271)
!5324 = !{i64 2147575672, i64 2147575715, i64 2147575755}
!5325 = !DILocation(line: 37, column: 1, scope: !5271)
!5326 = !{i64 2147575871, i64 2147575914, i64 2147575954}
!5327 = !DILocation(line: 38, column: 1, scope: !5271)
!5328 = !{i64 2147576046, i64 2147576089, i64 2147576129}
!5329 = !DILocation(line: 39, column: 1, scope: !5271)
!5330 = !{i64 2147576299, i64 2147576342, i64 2147576382}
!5331 = !DILocation(line: 40, column: 1, scope: !5271)
!5332 = !{i64 2147576540, i64 2147576583, i64 2147576623}
!5333 = !DILocation(line: 41, column: 1, scope: !5271)
!5334 = !{i64 2147576775, i64 2147576818, i64 2147576858}
!5335 = !DILocation(line: 42, column: 1, scope: !5271)
!5336 = !{i64 2147577007, i64 2147577050, i64 2147577090}
!5337 = !DILocation(line: 43, column: 1, scope: !5271)
!5338 = !{i64 2147577254, i64 2147577297, i64 2147577337}
!5339 = !DILocation(line: 44, column: 1, scope: !5271)
!5340 = !{i64 2147577480, i64 2147577523, i64 2147577563}
!5341 = !DILocation(line: 45, column: 1, scope: !5271)
!5342 = !{i64 2147577706, i64 2147577749, i64 2147577789}
!5343 = !DILocation(line: 46, column: 1, scope: !5271)
!5344 = !{i64 2147577965, i64 2147578008, i64 2147578048}
!5345 = !DILocation(line: 47, column: 1, scope: !5271)
!5346 = !{i64 2147578191, i64 2147578234, i64 2147578274}
!5347 = !DILocation(line: 48, column: 1, scope: !5271)
!5348 = !{i64 2147578426, i64 2147578469, i64 2147578509}
!5349 = !DILocation(line: 49, column: 1, scope: !5271)
!5350 = !{i64 2147578664, i64 2147578707, i64 2147578747}
!5351 = !DILocation(line: 50, column: 1, scope: !5271)
!5352 = !{i64 2147578938, i64 2147578981, i64 2147579021}
!5353 = !DILocation(line: 51, column: 1, scope: !5271)
!5354 = !{i64 2147579176, i64 2147579219, i64 2147579259}
!5355 = !DILocation(line: 52, column: 1, scope: !5271)
!5356 = !{i64 2147579429, i64 2147579472, i64 2147579512}
!5357 = !DILocation(line: 53, column: 1, scope: !5271)
!5358 = !{i64 2147583734, i64 2147583777, i64 2147583817}
!5359 = !DILocation(line: 54, column: 1, scope: !5271)
!5360 = !{i64 2147583984, i64 2147584027, i64 2147584067}
!5361 = !DILocation(line: 55, column: 1, scope: !5271)
!5362 = !{i64 2147584225, i64 2147584268, i64 2147584308}
!5363 = !DILocation(line: 56, column: 1, scope: !5271)
!5364 = !{i64 2147584472, i64 2147584515, i64 2147584555}
!5365 = !DILocation(line: 57, column: 1, scope: !5271)
!5366 = !{i64 2147584707, i64 2147584750, i64 2147584790}
!5367 = !DILocation(line: 58, column: 1, scope: !5271)
!5368 = !{i64 2147584942, i64 2147584985, i64 2147585025}
!5369 = !DILocation(line: 59, column: 1, scope: !5271)
!5370 = !{i64 2147585177, i64 2147585220, i64 2147585260}
!5371 = !DILocation(line: 60, column: 1, scope: !5271)
!5372 = !{i64 2147585415, i64 2147585458, i64 2147585498}
!5373 = !DILocation(line: 61, column: 1, scope: !5271)
!5374 = !{i64 2147585656, i64 2147585699, i64 2147585739}
!5375 = !DILocation(line: 62, column: 1, scope: !5271)
!5376 = !{i64 2147585936, i64 2147585979, i64 2147586019}
!5377 = !DILocation(line: 63, column: 1, scope: !5271)
!5378 = !{i64 2147586195, i64 2147586238, i64 2147586278}
!5379 = !DILocation(line: 64, column: 1, scope: !5271)
!5380 = !{i64 2147586433, i64 2147586476, i64 2147586516}
!5381 = !DILocation(line: 65, column: 1, scope: !5271)
!5382 = !{i64 2147586683, i64 2147586726, i64 2147586766}
!5383 = !DILocation(line: 66, column: 1, scope: !5271)
!5384 = !{i64 2147586912, i64 2147586955, i64 2147586995}
!5385 = !DILocation(line: 67, column: 1, scope: !5271)
!5386 = !{i64 2147587120, i64 2147587163, i64 2147587203}
!5387 = !DILocation(line: 68, column: 1, scope: !5271)
!5388 = !{i64 2147587331, i64 2147587374, i64 2147587414}
!5389 = !DILocation(line: 69, column: 1, scope: !5271)
!5390 = !{i64 2147587566, i64 2147587609, i64 2147587649}
!5391 = !DILocation(line: 70, column: 1, scope: !5271)
!5392 = !{i64 2147587795, i64 2147587838, i64 2147587878}
!5393 = !DILocation(line: 71, column: 1, scope: !5271)
!5394 = !{i64 2147588012, i64 2147588055, i64 2147588095}
!5395 = !DILocation(line: 72, column: 1, scope: !5271)
!5396 = !{i64 2147588241, i64 2147588284, i64 2147588324}
!5397 = !DILocation(line: 73, column: 1, scope: !5271)
!5398 = !{i64 2147588479, i64 2147588522, i64 2147588562}
!5399 = !DILocation(line: 74, column: 1, scope: !5271)
!5400 = !{i64 2147588711, i64 2147588754, i64 2147588794}
!5401 = !DILocation(line: 75, column: 1, scope: !5271)
!5402 = !{i64 2147588937, i64 2147588980, i64 2147589020}
!5403 = !DILocation(line: 76, column: 1, scope: !5271)
!5404 = !{i64 2147589154, i64 2147589197, i64 2147589237}
!5405 = !DILocation(line: 77, column: 1, scope: !5271)
!5406 = !{i64 2147589386, i64 2147589429, i64 2147589469}
!5407 = !DILocation(line: 78, column: 1, scope: !5271)
!5408 = !{i64 2147589612, i64 2147589655, i64 2147589695}
!5409 = !DILocation(line: 79, column: 1, scope: !5271)
!5410 = !{i64 2147589826, i64 2147589869, i64 2147589909}
!5411 = !DILocation(line: 80, column: 1, scope: !5271)
!5412 = !{i64 2147590046, i64 2147590089, i64 2147590129}
!5413 = !DILocation(line: 81, column: 1, scope: !5271)
!5414 = !{i64 2147590278, i64 2147590321, i64 2147590361}
!5415 = !DILocation(line: 82, column: 1, scope: !5271)
!5416 = !{i64 2147590486, i64 2147590529, i64 2147590569}
!5417 = !DILocation(line: 83, column: 1, scope: !5271)
!5418 = !{i64 2147590691, i64 2147590734, i64 2147590774}
!5419 = !DILocation(line: 84, column: 1, scope: !5271)
!5420 = !{i64 2147590908, i64 2147590951, i64 2147590991}
!5421 = !DILocation(line: 85, column: 1, scope: !5271)
!5422 = !{i64 2147591122, i64 2147591165, i64 2147591205}
!5423 = !DILocation(line: 86, column: 1, scope: !5271)
!5424 = !{i64 2147591348, i64 2147591391, i64 2147591431}
!5425 = !DILocation(line: 87, column: 1, scope: !5271)
!5426 = !{i64 2147591568, i64 2147591611, i64 2147591651}
!5427 = !DILocation(line: 88, column: 1, scope: !5271)
!5428 = !{i64 2147595834, i64 2147595877, i64 2147595917}
!5429 = !DILocation(line: 89, column: 1, scope: !5271)
!5430 = !{i64 2147596066, i64 2147596109, i64 2147596149}
!5431 = !DILocation(line: 90, column: 1, scope: !5271)
!5432 = !{i64 2147596301, i64 2147596344, i64 2147596384}
!5433 = !DILocation(line: 91, column: 1, scope: !5271)
!5434 = !{i64 2147596551, i64 2147596594, i64 2147596634}
!5435 = !DILocation(line: 92, column: 1, scope: !5271)
!5436 = !{i64 2147596801, i64 2147596844, i64 2147596884}
!5437 = !DILocation(line: 93, column: 1, scope: !5271)
!5438 = !{i64 2147597039, i64 2147597082, i64 2147597122}
!5439 = !DILocation(line: 94, column: 1, scope: !5271)
!5440 = !{i64 2147597250, i64 2147597293, i64 2147597333}
!5441 = !DILocation(line: 95, column: 1, scope: !5271)
!5442 = !{i64 2147597467, i64 2147597510, i64 2147597550}
!5443 = !DILocation(line: 96, column: 1, scope: !5271)
!5444 = !{i64 2147597663, i64 2147597706, i64 2147597746}
!5445 = !DILocation(line: 97, column: 1, scope: !5271)
!5446 = !{i64 2147597865, i64 2147597908, i64 2147597948}
!5447 = !DILocation(line: 98, column: 1, scope: !5271)
!5448 = !{i64 2147598058, i64 2147598101, i64 2147598141}
!5449 = !DILocation(line: 99, column: 1, scope: !5271)
!5450 = !{i64 2147598266, i64 2147598309, i64 2147598349}
!5451 = !DILocation(line: 100, column: 1, scope: !5271)
!5452 = !{i64 2147598462, i64 2147598505, i64 2147598545}
!5453 = !DILocation(line: 101, column: 1, scope: !5271)
!5454 = !{i64 2147598664, i64 2147598707, i64 2147598747}
!5455 = !DILocation(line: 102, column: 1, scope: !5271)
!5456 = !{i64 2147598875, i64 2147598918, i64 2147598958}
!5457 = !DILocation(line: 103, column: 1, scope: !5271)
!5458 = !{i64 2147599074, i64 2147599117, i64 2147599157}
!5459 = !DILocation(line: 104, column: 1, scope: !5271)
!5460 = !{i64 2147599249, i64 2147599292, i64 2147599332}
!5461 = !DILocation(line: 105, column: 1, scope: !5271)
!5462 = !{i64 2147599433, i64 2147599476, i64 2147599516}
!5463 = !DILocation(line: 106, column: 1, scope: !5271)
!5464 = !{i64 2147599635, i64 2147599678, i64 2147599718}
!5465 = !DILocation(line: 107, column: 1, scope: !5271)
!5466 = !{i64 2147599834, i64 2147599877, i64 2147599917}
!5467 = !DILocation(line: 108, column: 1, scope: !5271)
!5468 = !{i64 2147600039, i64 2147600082, i64 2147600122}
!5469 = !DILocation(line: 109, column: 1, scope: !5271)
!5470 = !{i64 2147600232, i64 2147600275, i64 2147600315}
!5471 = !DILocation(line: 110, column: 1, scope: !5271)
!5472 = !{i64 2147600398, i64 2147600441, i64 2147600481}
!5473 = !DILocation(line: 111, column: 1, scope: !5271)
!5474 = !{i64 2147600582, i64 2147600625, i64 2147600665}
!5475 = !DILocation(line: 112, column: 1, scope: !5271)
!5476 = !{i64 2147600772, i64 2147600815, i64 2147600855}
!5477 = !DILocation(line: 113, column: 1, scope: !5271)
!5478 = !{i64 2147600956, i64 2147600999, i64 2147601039}
!5479 = !DILocation(line: 114, column: 1, scope: !5271)
!5480 = !{i64 2147601170, i64 2147601213, i64 2147601253}
!5481 = !DILocation(line: 115, column: 1, scope: !5271)
!5482 = !{i64 2147601381, i64 2147601424, i64 2147601464}
!5483 = !DILocation(line: 116, column: 1, scope: !5271)
!5484 = !{i64 2147601604, i64 2147601647, i64 2147601687}
!5485 = !DILocation(line: 117, column: 1, scope: !5271)
!5486 = !{i64 2147601788, i64 2147601831, i64 2147601871}
!5487 = !DILocation(line: 118, column: 1, scope: !5271)
!5488 = !{i64 2147602002, i64 2147602045, i64 2147602085}
!5489 = !DILocation(line: 119, column: 1, scope: !5271)
!5490 = !{i64 2147602168, i64 2147602211, i64 2147602251}
!5491 = !DILocation(line: 120, column: 1, scope: !5271)
!5492 = !{i64 2147602349, i64 2147602392, i64 2147602432}
!5493 = !DILocation(line: 121, column: 1, scope: !5271)
!5494 = !{i64 2147602542, i64 2147602585, i64 2147602625}
!5495 = !DILocation(line: 122, column: 1, scope: !5271)
!5496 = !{i64 2147602768, i64 2147602811, i64 2147602851}
!5497 = !DILocation(line: 123, column: 1, scope: !5271)
!5498 = !{i64 2147602982, i64 2147603025, i64 2147603065}
!5499 = !DILocation(line: 124, column: 1, scope: !5271)
!5500 = !{i64 2147603208, i64 2147603251, i64 2147603291}
!5501 = !DILocation(line: 125, column: 1, scope: !5271)
!5502 = !{i64 2147603425, i64 2147603468, i64 2147603508}
!5503 = !DILocation(line: 126, column: 1, scope: !5271)
!5504 = !{i64 2147603702, i64 2147603745, i64 2147603785}
!5505 = !DILocation(line: 127, column: 1, scope: !5271)
!5506 = !{i64 2147603928, i64 2147603971, i64 2147604011}
!5507 = !DILocation(line: 128, column: 1, scope: !5271)
!5508 = !{i64 2147604136, i64 2147604179, i64 2147604219}
!5509 = !DILocation(line: 129, column: 1, scope: !5271)
!5510 = !{i64 2147604332, i64 2147604375, i64 2147604415}
!5511 = !DILocation(line: 130, column: 1, scope: !5271)
!5512 = !{i64 2147604597, i64 2147604640, i64 2147604680}
!5513 = !DILocation(line: 131, column: 1, scope: !5271)
!5514 = !{i64 2147604811, i64 2147604854, i64 2147604894}
!5515 = !DILocation(line: 132, column: 1, scope: !5271)
!5516 = !{i64 2147609047, i64 2147609090, i64 2147609130}
!5517 = !DILocation(line: 133, column: 1, scope: !5271)
!5518 = !{i64 2147609301, i64 2147609344, i64 2147609384}
!5519 = !DILocation(line: 134, column: 1, scope: !5271)
!5520 = !{i64 2147609500, i64 2147609543, i64 2147609583}
!5521 = !DILocation(line: 135, column: 1, scope: !5271)
!5522 = !{i64 2147609742, i64 2147609785, i64 2147609825}
!5523 = !DILocation(line: 136, column: 1, scope: !5271)
!5524 = !{i64 2147609905, i64 2147609948, i64 2147609988}
!5525 = !DILocation(line: 137, column: 1, scope: !5271)
!5526 = !{i64 2147610092, i64 2147610135, i64 2147610175}
!5527 = !DILocation(line: 138, column: 1, scope: !5271)
!5528 = !{i64 2147610300, i64 2147610343, i64 2147610383}
!5529 = !DILocation(line: 139, column: 1, scope: !5271)
!5530 = !{i64 2147610496, i64 2147610539, i64 2147610579}
!5531 = !DILocation(line: 140, column: 1, scope: !5271)
!5532 = !{i64 2147610689, i64 2147610732, i64 2147610772}
!5533 = !DILocation(line: 141, column: 1, scope: !5271)
!5534 = !{i64 2147610871, i64 2147610914, i64 2147610954}
!5535 = !DILocation(line: 142, column: 1, scope: !5271)
!5536 = !{i64 2147611085, i64 2147611128, i64 2147611168}
!5537 = !DILocation(line: 143, column: 1, scope: !5271)
!5538 = !{i64 2147611296, i64 2147611339, i64 2147611379}
!5539 = !DILocation(line: 144, column: 1, scope: !5271)
!5540 = !{i64 2147611516, i64 2147611559, i64 2147611599}
!5541 = !DILocation(line: 145, column: 1, scope: !5271)
!5542 = !{i64 2147611723, i64 2147611766, i64 2147611806}
!5543 = !DILocation(line: 146, column: 1, scope: !5271)
!5544 = !{i64 2147611996, i64 2147612039, i64 2147612079}
!5545 = !DILocation(line: 147, column: 1, scope: !5271)
!5546 = !{i64 2147612244, i64 2147612287, i64 2147612327}
!5547 = !DILocation(line: 148, column: 1, scope: !5271)
!5548 = !{i64 2147612443, i64 2147612486, i64 2147612526}
!5549 = !DILocation(line: 149, column: 1, scope: !5271)
!5550 = !{i64 2147612678, i64 2147612721, i64 2147612761}
!5551 = !DILocation(line: 150, column: 1, scope: !5271)
!5552 = !{i64 2147612928, i64 2147612971, i64 2147613011}
!5553 = !DILocation(line: 151, column: 1, scope: !5271)
!5554 = !{i64 2147613130, i64 2147613173, i64 2147613213}
!5555 = !DILocation(line: 152, column: 1, scope: !5271)
!5556 = !{i64 2147613353, i64 2147613396, i64 2147613436}
!5557 = !DILocation(line: 153, column: 1, scope: !5271)
!5558 = !{i64 2147613567, i64 2147613610, i64 2147613650}
!5559 = !DILocation(line: 154, column: 1, scope: !5271)
!5560 = !{i64 2147613811, i64 2147613854, i64 2147613894}
!5561 = !DILocation(line: 155, column: 1, scope: !5271)
!5562 = !{i64 2147614040, i64 2147614083, i64 2147614123}
!5563 = !DILocation(line: 156, column: 1, scope: !5271)
!5564 = !{i64 2147614269, i64 2147614312, i64 2147614352}
!5565 = !DILocation(line: 157, column: 1, scope: !5271)
!5566 = !{i64 2147614477, i64 2147614520, i64 2147614560}
!5567 = !DILocation(line: 158, column: 1, scope: !5271)
!5568 = !{i64 2147614715, i64 2147614758, i64 2147614798}
!5569 = !DILocation(line: 159, column: 1, scope: !5271)
!5570 = !{i64 2147614941, i64 2147614984, i64 2147615024}
!5571 = !DILocation(line: 160, column: 1, scope: !5271)
!5572 = !{i64 2147615200, i64 2147615243, i64 2147615283}
!5573 = !DILocation(line: 161, column: 1, scope: !5271)
!5574 = !{i64 2147615420, i64 2147615463, i64 2147615503}
!5575 = !DILocation(line: 162, column: 1, scope: !5271)
!5576 = !{i64 2147615652, i64 2147615695, i64 2147615735}
!5577 = !DILocation(line: 163, column: 1, scope: !5271)
!5578 = !{i64 2147615893, i64 2147615936, i64 2147615976}
!5579 = !DILocation(line: 164, column: 1, scope: !5271)
!5580 = !{i64 2147616134, i64 2147616177, i64 2147616217}
!5581 = !DILocation(line: 165, column: 1, scope: !5271)
!5582 = !{i64 2147616357, i64 2147616400, i64 2147616440}
!5583 = !DILocation(line: 166, column: 1, scope: !5271)
!5584 = !{i64 2147616574, i64 2147616617, i64 2147616657}
!5585 = !DILocation(line: 167, column: 1, scope: !5271)
!5586 = !{i64 2147616815, i64 2147616858, i64 2147616898}
!5587 = !DILocation(line: 168, column: 1, scope: !5271)
!5588 = !{i64 2147617002, i64 2147617045, i64 2147617085}
!5589 = !DILocation(line: 169, column: 1, scope: !5271)
!5590 = !{i64 2147617189, i64 2147617232, i64 2147617272}
!5591 = !DILocation(line: 170, column: 1, scope: !5271)
!5592 = !{i64 2147617352, i64 2147617395, i64 2147617435}
!5593 = !DILocation(line: 171, column: 1, scope: !5271)
!5594 = !{i64 2147617557, i64 2147617600, i64 2147617640}
!5595 = !DILocation(line: 172, column: 1, scope: !5271)
!5596 = !{i64 2147621811, i64 2147621854, i64 2147621894}
!5597 = !DILocation(line: 173, column: 1, scope: !5271)
!5598 = !{i64 2147622070, i64 2147622113, i64 2147622153}
!5599 = !DILocation(line: 174, column: 1, scope: !5271)
!5600 = !{i64 2147622293, i64 2147622336, i64 2147622376}
!5601 = !DILocation(line: 175, column: 1, scope: !5271)
!5602 = !{i64 2147622522, i64 2147622565, i64 2147622605}
!5603 = !DILocation(line: 176, column: 1, scope: !5271)
!5604 = !{i64 2147622736, i64 2147622779, i64 2147622819}
!5605 = !DILocation(line: 177, column: 1, scope: !5271)
!5606 = !{i64 2147622938, i64 2147622981, i64 2147623021}
!5607 = !DILocation(line: 178, column: 1, scope: !5271)
!5608 = !{i64 2147623134, i64 2147623177, i64 2147623217}
!5609 = !DILocation(line: 179, column: 1, scope: !5271)
!5610 = !{i64 2147623346, i64 2147623389, i64 2147623429}
!5611 = !DILocation(line: 180, column: 1, scope: !5271)
!5612 = !{i64 2147623567, i64 2147623610, i64 2147623650}
!5613 = !DILocation(line: 181, column: 1, scope: !5271)
!5614 = !{i64 2147623781, i64 2147623824, i64 2147623864}
!5615 = !DILocation(line: 182, column: 1, scope: !5271)
!5616 = !{i64 2147623971, i64 2147624014, i64 2147624054}
!5617 = !DILocation(line: 183, column: 1, scope: !5271)
!5618 = !{i64 2147624170, i64 2147624213, i64 2147624253}
!5619 = !DILocation(line: 184, column: 1, scope: !5271)
!5620 = !{i64 2147624375, i64 2147624418, i64 2147624458}
!5621 = !DILocation(line: 185, column: 1, scope: !5271)
!5622 = !{i64 2147624595, i64 2147624638, i64 2147624678}
!5623 = !DILocation(line: 186, column: 1, scope: !5271)
!5624 = !{i64 2147624797, i64 2147624840, i64 2147624880}
!5625 = !DILocation(line: 187, column: 1, scope: !5271)
!5626 = !{i64 2147624996, i64 2147625039, i64 2147625079}
!5627 = !DILocation(line: 188, column: 1, scope: !5271)
!5628 = !{i64 2147625201, i64 2147625244, i64 2147625284}
!5629 = !DILocation(line: 189, column: 1, scope: !5271)
!5630 = !{i64 2147625370, i64 2147625413, i64 2147625453}
!5631 = !DILocation(line: 190, column: 1, scope: !5271)
!5632 = !{i64 2147625554, i64 2147625597, i64 2147625637}
!5633 = !DILocation(line: 191, column: 1, scope: !5271)
!5634 = !{i64 2147625738, i64 2147625781, i64 2147625821}
!5635 = !DILocation(line: 192, column: 1, scope: !5271)
!5636 = !{i64 2147625925, i64 2147625968, i64 2147626008}
!5637 = !DILocation(line: 193, column: 1, scope: !5271)
!5638 = !{i64 2147626109, i64 2147626152, i64 2147626192}
!5639 = !DILocation(line: 194, column: 1, scope: !5271)
!5640 = !{i64 2147626296, i64 2147626339, i64 2147626379}
!5641 = !DILocation(line: 195, column: 1, scope: !5271)
!5642 = !{i64 2147626508, i64 2147626551, i64 2147626591}
!5643 = !DILocation(line: 196, column: 1, scope: !5271)
!5644 = !{i64 2147626746, i64 2147626789, i64 2147626829}
!5645 = !DILocation(line: 197, column: 1, scope: !5271)
!5646 = !{i64 2147626976, i64 2147627019, i64 2147627059}
!5647 = !DILocation(line: 198, column: 1, scope: !5271)
!5648 = !{i64 2147627205, i64 2147627248, i64 2147627288}
!5649 = !DILocation(line: 199, column: 1, scope: !5271)
!5650 = !{i64 2147627392, i64 2147627435, i64 2147627475}
!5651 = !DILocation(line: 200, column: 1, scope: !5271)
!5652 = !{i64 2147627588, i64 2147627631, i64 2147627671}
!5653 = !DILocation(line: 201, column: 1, scope: !5271)
!5654 = !{i64 2147627796, i64 2147627839, i64 2147627879}
!5655 = !DILocation(line: 202, column: 1, scope: !5271)
!5656 = !{i64 2147628008, i64 2147628051, i64 2147628091}
!5657 = !DILocation(line: 203, column: 1, scope: !5271)
!5658 = !{i64 2147628207, i64 2147628250, i64 2147628290}
!5659 = !DILocation(line: 204, column: 1, scope: !5271)
!5660 = !{i64 2147628445, i64 2147628488, i64 2147628528}
!5661 = !DILocation(line: 205, column: 1, scope: !5271)
!5662 = !{i64 2147628641, i64 2147628684, i64 2147628724}
!5663 = !DILocation(line: 206, column: 1, scope: !5271)
!5664 = !{i64 2147628843, i64 2147628886, i64 2147628926}
!5665 = !DILocation(line: 207, column: 1, scope: !5271)
!5666 = !{i64 2147629036, i64 2147629079, i64 2147629119}
!5667 = !DILocation(line: 208, column: 1, scope: !5271)
!5668 = !{i64 2147629270, i64 2147629313, i64 2147629353}
!5669 = !DILocation(line: 209, column: 1, scope: !5271)
!5670 = !{i64 2147629433, i64 2147629476, i64 2147629516}
!5671 = !DILocation(line: 210, column: 1, scope: !5271)
!5672 = !{i64 2147629672, i64 2147629715, i64 2147629755}
!5673 = !DILocation(line: 211, column: 1, scope: !5271)
!5674 = !{i64 2147629911, i64 2147629954, i64 2147629994}
!5675 = !DILocation(line: 212, column: 1, scope: !5271)
!5676 = !{i64 2147630147, i64 2147630190, i64 2147630230}
!5677 = !DILocation(line: 213, column: 1, scope: !5271)
!5678 = !{i64 2147630377, i64 2147630420, i64 2147630460}
!5679 = !DILocation(line: 214, column: 1, scope: !5271)
!5680 = !{i64 2147630564, i64 2147630607, i64 2147630647}
!5681 = !DILocation(line: 215, column: 1, scope: !5271)
!5682 = !{i64 2147630763, i64 2147630806, i64 2147630846}
!5683 = !DILocation(line: 216, column: 1, scope: !5271)
!5684 = !{i64 2147635095, i64 2147635138, i64 2147635178}
!5685 = !DILocation(line: 217, column: 1, scope: !5271)
!5686 = !{i64 2147635270, i64 2147635313, i64 2147635353}
!5687 = !DILocation(line: 218, column: 1, scope: !5271)
!5688 = !{i64 2147635504, i64 2147635547, i64 2147635587}
!5689 = !DILocation(line: 219, column: 1, scope: !5271)
!5690 = !{i64 2147635712, i64 2147635755, i64 2147635795}
!5691 = !DILocation(line: 220, column: 1, scope: !5271)
!5692 = !{i64 2147635930, i64 2147635973, i64 2147636013}
!5693 = !DILocation(line: 221, column: 1, scope: !5271)
!5694 = !{i64 2147636120, i64 2147636163, i64 2147636203}
!5695 = !DILocation(line: 222, column: 1, scope: !5271)
!5696 = !{i64 2147636352, i64 2147636395, i64 2147636435}
!5697 = !DILocation(line: 223, column: 1, scope: !5271)
!5698 = !{i64 2147636572, i64 2147636615, i64 2147636655}
!5699 = !DILocation(line: 224, column: 1, scope: !5271)
!5700 = !{i64 2147636768, i64 2147636811, i64 2147636851}
!5701 = !DILocation(line: 225, column: 1, scope: !5271)
!5702 = !{i64 2147636974, i64 2147637017, i64 2147637057}
!5703 = !DILocation(line: 226, column: 1, scope: !5271)
!5704 = !{i64 2147637179, i64 2147637222, i64 2147637262}
!5705 = !DILocation(line: 227, column: 1, scope: !5271)
!5706 = !{i64 2147637405, i64 2147637448, i64 2147637488}
!5707 = !DILocation(line: 228, column: 1, scope: !5271)
!5708 = !{i64 2147637613, i64 2147637656, i64 2147637696}
!5709 = !DILocation(line: 229, column: 1, scope: !5271)
!5710 = !{i64 2147637809, i64 2147637852, i64 2147637892}
!5711 = !DILocation(line: 230, column: 1, scope: !5271)
!5712 = !{i64 2147638041, i64 2147638084, i64 2147638124}
!5713 = !DILocation(line: 231, column: 1, scope: !5271)
!5714 = !{i64 2147638225, i64 2147638268, i64 2147638308}
!5715 = !DILocation(line: 232, column: 1, scope: !5271)
!5716 = !{i64 2147638434, i64 2147638477, i64 2147638517}
!5717 = !DILocation(line: 233, column: 1, scope: !5271)
!5718 = !{i64 2147638642, i64 2147638685, i64 2147638725}
!5719 = !DILocation(line: 234, column: 1, scope: !5271)
!5720 = !{i64 2147638838, i64 2147638881, i64 2147638921}
!5721 = !DILocation(line: 235, column: 1, scope: !5271)
!5722 = !{i64 2147639022, i64 2147639065, i64 2147639105}
!5723 = !DILocation(line: 236, column: 1, scope: !5271)
!5724 = !{i64 2147639248, i64 2147639291, i64 2147639331}
!5725 = !DILocation(line: 237, column: 1, scope: !5271)
!5726 = !{i64 2147639474, i64 2147639517, i64 2147639557}
!5727 = !DILocation(line: 238, column: 1, scope: !5271)
!5728 = !{i64 2147639700, i64 2147639743, i64 2147639783}
!5729 = !DILocation(line: 239, column: 1, scope: !5271)
!5730 = !{i64 2147639926, i64 2147639969, i64 2147640009}
!5731 = !DILocation(line: 240, column: 1, scope: !5271)
!5732 = !{i64 2147640152, i64 2147640195, i64 2147640235}
!5733 = !DILocation(line: 241, column: 1, scope: !5271)
!5734 = !{i64 2147640384, i64 2147640427, i64 2147640467}
!5735 = !DILocation(line: 242, column: 1, scope: !5271)
!5736 = !{i64 2147640622, i64 2147640665, i64 2147640705}
!5737 = !DILocation(line: 243, column: 1, scope: !5271)
!5738 = !{i64 2147640842, i64 2147640885, i64 2147640925}
!5739 = !DILocation(line: 244, column: 1, scope: !5271)
!5740 = !{i64 2147641086, i64 2147641129, i64 2147641169}
!5741 = !DILocation(line: 245, column: 1, scope: !5271)
!5742 = !{i64 2147641327, i64 2147641370, i64 2147641410}
!5743 = !DILocation(line: 246, column: 1, scope: !5271)
!5744 = !{i64 2147641562, i64 2147641605, i64 2147641645}
!5745 = !DILocation(line: 247, column: 1, scope: !5271)
!5746 = !{i64 2147641794, i64 2147641837, i64 2147641877}
!5747 = !DILocation(line: 248, column: 1, scope: !5271)
!5748 = !{i64 2147641996, i64 2147642039, i64 2147642079}
!5749 = !DILocation(line: 249, column: 1, scope: !5271)
!5750 = !{i64 2147642246, i64 2147642289, i64 2147642329}
!5751 = !DILocation(line: 250, column: 1, scope: !5271)
!5752 = !{i64 2147642484, i64 2147642527, i64 2147642567}
!5753 = !DILocation(line: 251, column: 1, scope: !5271)
!5754 = !{i64 2147642692, i64 2147642735, i64 2147642775}
!5755 = !DILocation(line: 252, column: 1, scope: !5271)
!5756 = !{i64 2147642888, i64 2147642931, i64 2147642971}
!5757 = !DILocation(line: 253, column: 1, scope: !5271)
!5758 = !{i64 2147643072, i64 2147643115, i64 2147643155}
!5759 = !DILocation(line: 254, column: 1, scope: !5271)
!5760 = !{i64 2147643289, i64 2147643332, i64 2147643372}
!5761 = !DILocation(line: 255, column: 1, scope: !5271)
!5762 = !{i64 2147643494, i64 2147643537, i64 2147643577}
!5763 = !DILocation(line: 256, column: 1, scope: !5271)
!5764 = !{i64 2147647790, i64 2147647833, i64 2147647873}
!5765 = !DILocation(line: 257, column: 1, scope: !5271)
!5766 = !{i64 2147648013, i64 2147648056, i64 2147648096}
!5767 = !DILocation(line: 258, column: 1, scope: !5271)
!5768 = !{i64 2147648237, i64 2147648280, i64 2147648320}
!5769 = !DILocation(line: 259, column: 1, scope: !5271)
!5770 = !{i64 2147648475, i64 2147648518, i64 2147648558}
!5771 = !DILocation(line: 260, column: 1, scope: !5271)
!5772 = !{i64 2147648713, i64 2147648756, i64 2147648796}
!5773 = !DILocation(line: 261, column: 1, scope: !5271)
!5774 = !{i64 2147648930, i64 2147648973, i64 2147649013}
!5775 = !DILocation(line: 262, column: 1, scope: !5271)
!5776 = !{i64 2147649135, i64 2147649178, i64 2147649218}
!5777 = !DILocation(line: 263, column: 1, scope: !5271)
!5778 = !{i64 2147649328, i64 2147649371, i64 2147649411}
!5779 = !DILocation(line: 264, column: 1, scope: !5271)
!5780 = !{i64 2147649581, i64 2147649624, i64 2147649664}
!5781 = !DILocation(line: 265, column: 1, scope: !5271)
!5782 = !{i64 2147649789, i64 2147649832, i64 2147649872}
!5783 = !DILocation(line: 266, column: 1, scope: !5271)
!5784 = !{i64 2147649985, i64 2147650028, i64 2147650068}
!5785 = !DILocation(line: 267, column: 1, scope: !5271)
!5786 = !{i64 2147650199, i64 2147650242, i64 2147650282}
!5787 = !DILocation(line: 268, column: 1, scope: !5271)
!5788 = !{i64 2147650407, i64 2147650450, i64 2147650490}
!5789 = !DILocation(line: 269, column: 1, scope: !5271)
!5790 = !{i64 2147650597, i64 2147650640, i64 2147650680}
!5791 = !DILocation(line: 270, column: 1, scope: !5271)
!5792 = !{i64 2147650811, i64 2147650854, i64 2147650894}
!5793 = !DILocation(line: 271, column: 1, scope: !5271)
!5794 = !{i64 2147651073, i64 2147651116, i64 2147651156}
!5795 = !DILocation(line: 272, column: 1, scope: !5271)
!5796 = !{i64 2147651284, i64 2147651327, i64 2147651367}
!5797 = !DILocation(line: 273, column: 1, scope: !5271)
!5798 = !{i64 2147651528, i64 2147651571, i64 2147651611}
!5799 = !DILocation(line: 274, column: 1, scope: !5271)
!5800 = !{i64 2147651739, i64 2147651782, i64 2147651822}
!5801 = !DILocation(line: 275, column: 1, scope: !5271)
!5802 = !{i64 2147651968, i64 2147652011, i64 2147652051}
!5803 = !DILocation(line: 276, column: 1, scope: !5271)
!5804 = !{i64 2147652233, i64 2147652276, i64 2147652316}
!5805 = !DILocation(line: 277, column: 1, scope: !5271)
!5806 = !{i64 2147652438, i64 2147652481, i64 2147652521}
!5807 = !DILocation(line: 278, column: 1, scope: !5271)
!5808 = !{i64 2147652634, i64 2147652677, i64 2147652717}
!5809 = !DILocation(line: 279, column: 1, scope: !5271)
!5810 = !{i64 2147652857, i64 2147652900, i64 2147652940}
!5811 = !DILocation(line: 280, column: 1, scope: !5271)
!5812 = !{i64 2147653020, i64 2147653063, i64 2147653103}
!5813 = !DILocation(line: 281, column: 1, scope: !5271)
!5814 = !{i64 2147653225, i64 2147653268, i64 2147653308}
!5815 = !DILocation(line: 282, column: 1, scope: !5271)
!5816 = !{i64 2147653445, i64 2147653488, i64 2147653528}
!5817 = !DILocation(line: 283, column: 1, scope: !5271)
!5818 = !{i64 2147653659, i64 2147653702, i64 2147653742}
!5819 = !DILocation(line: 284, column: 1, scope: !5271)
!5820 = !{i64 2147653903, i64 2147653946, i64 2147653986}
!5821 = !DILocation(line: 285, column: 1, scope: !5271)
!5822 = !{i64 2147654135, i64 2147654178, i64 2147654218}
!5823 = !DILocation(line: 286, column: 1, scope: !5271)
!5824 = !{i64 2147654349, i64 2147654392, i64 2147654432}
!5825 = !DILocation(line: 287, column: 1, scope: !5271)
!5826 = !{i64 2147654560, i64 2147654603, i64 2147654643}
!5827 = !DILocation(line: 288, column: 1, scope: !5271)
!5828 = !{i64 2147654753, i64 2147654796, i64 2147654836}
!5829 = !DILocation(line: 289, column: 1, scope: !5271)
!5830 = !{i64 2147654952, i64 2147654995, i64 2147655035}
!5831 = !DILocation(line: 290, column: 1, scope: !5271)
!5832 = !{i64 2147655124, i64 2147655167, i64 2147655207}
!5833 = !DILocation(line: 291, column: 1, scope: !5271)
!5834 = !{i64 2147655317, i64 2147655360, i64 2147655400}
!5835 = !DILocation(line: 292, column: 1, scope: !5271)
!5836 = !{i64 2147655489, i64 2147655532, i64 2147655572}
!5837 = !DILocation(line: 293, column: 1, scope: !5271)
!5838 = !{i64 2147655679, i64 2147655722, i64 2147655762}
!5839 = !DILocation(line: 294, column: 1, scope: !5271)
!5840 = !{i64 2147655872, i64 2147655915, i64 2147655955}
!5841 = !DILocation(line: 295, column: 1, scope: !5271)
!5842 = !{i64 2147656068, i64 2147656111, i64 2147656151}
!5843 = !DILocation(line: 296, column: 1, scope: !5271)
!5844 = !{i64 2147656231, i64 2147656274, i64 2147656314}
!5845 = !DILocation(line: 297, column: 1, scope: !5271)
!5846 = !{i64 2147656433, i64 2147656476, i64 2147656516}
!5847 = !DILocation(line: 298, column: 1, scope: !5271)
!5848 = !{i64 2147656644, i64 2147656687, i64 2147656727}
!5849 = !DILocation(line: 299, column: 1, scope: !5271)
!5850 = !{i64 2147660910, i64 2147660953, i64 2147660993}
!5851 = !DILocation(line: 300, column: 1, scope: !5271)
!5852 = !{i64 2147661118, i64 2147661161, i64 2147661201}
!5853 = !DILocation(line: 301, column: 1, scope: !5271)
!5854 = !{i64 2147661311, i64 2147661354, i64 2147661394}
!5855 = !DILocation(line: 302, column: 1, scope: !5271)
!5856 = !{i64 2147661549, i64 2147661592, i64 2147661632}
!5857 = !DILocation(line: 303, column: 1, scope: !5271)
!5858 = !{i64 2147661736, i64 2147661779, i64 2147661819}
!5859 = !DILocation(line: 304, column: 1, scope: !5271)
!5860 = !{i64 2147661905, i64 2147661948, i64 2147661988}
!5861 = !DILocation(line: 305, column: 1, scope: !5271)
!5862 = !{i64 2147662098, i64 2147662141, i64 2147662181}
!5863 = !DILocation(line: 306, column: 1, scope: !5271)
!5864 = !{i64 2147662303, i64 2147662346, i64 2147662386}
!5865 = !DILocation(line: 307, column: 1, scope: !5271)
!5866 = !{i64 2147662514, i64 2147662557, i64 2147662597}
!5867 = !DILocation(line: 308, column: 1, scope: !5271)
!5868 = !{i64 2147662737, i64 2147662780, i64 2147662820}
!5869 = !DILocation(line: 309, column: 1, scope: !5271)
!5870 = !{i64 2147662951, i64 2147662994, i64 2147663034}
!5871 = !DILocation(line: 310, column: 1, scope: !5271)
!5872 = !{i64 2147663169, i64 2147663212, i64 2147663252}
!5873 = !DILocation(line: 311, column: 1, scope: !5271)
!5874 = !{i64 2147663383, i64 2147663426, i64 2147663466}
!5875 = !DILocation(line: 312, column: 1, scope: !5271)
!5876 = !{i64 2147663597, i64 2147663640, i64 2147663680}
!5877 = !DILocation(line: 313, column: 1, scope: !5271)
!5878 = !{i64 2147663814, i64 2147663857, i64 2147663897}
!5879 = !DILocation(line: 314, column: 1, scope: !5271)
!5880 = !{i64 2147664028, i64 2147664071, i64 2147664111}
!5881 = !DILocation(line: 315, column: 1, scope: !5271)
!5882 = !{i64 2147664269, i64 2147664312, i64 2147664352}
!5883 = !DILocation(line: 316, column: 1, scope: !5271)
!5884 = !{i64 2147664435, i64 2147664478, i64 2147664518}
!5885 = !DILocation(line: 317, column: 1, scope: !5271)
!5886 = !{i64 2147664662, i64 2147664705, i64 2147664745}
!5887 = !DILocation(line: 318, column: 1, scope: !5271)
!5888 = !{i64 2147664879, i64 2147664922, i64 2147664962}
!5889 = !DILocation(line: 319, column: 1, scope: !5271)
!5890 = !{i64 2147665105, i64 2147665148, i64 2147665188}
!5891 = !DILocation(line: 320, column: 1, scope: !5271)
!5892 = !{i64 2147665310, i64 2147665353, i64 2147665393}
!5893 = !DILocation(line: 321, column: 1, scope: !5271)
!5894 = !{i64 2147665527, i64 2147665570, i64 2147665610}
!5895 = !DILocation(line: 322, column: 1, scope: !5271)
!5896 = !{i64 2147665819, i64 2147665862, i64 2147665902}
!5897 = !DILocation(line: 323, column: 1, scope: !5271)
!5898 = !{i64 2147666051, i64 2147666094, i64 2147666134}
!5899 = !DILocation(line: 324, column: 1, scope: !5271)
!5900 = !{i64 2147666268, i64 2147666311, i64 2147666351}
!5901 = !DILocation(line: 325, column: 1, scope: !5271)
!5902 = !{i64 2147666475, i64 2147666518, i64 2147666558}
!5903 = !DILocation(line: 326, column: 1, scope: !5271)
!5904 = !{i64 2147666676, i64 2147666719, i64 2147666759}
!5905 = !DILocation(line: 327, column: 1, scope: !5271)
!5906 = !{i64 2147666908, i64 2147666951, i64 2147666991}
!5907 = !DILocation(line: 328, column: 1, scope: !5271)
!5908 = !{i64 2147667116, i64 2147667159, i64 2147667199}
!5909 = !DILocation(line: 329, column: 1, scope: !5271)
!5910 = !{i64 2147667306, i64 2147667349, i64 2147667389}
!5911 = !DILocation(line: 330, column: 1, scope: !5271)
!5912 = !{i64 2147667532, i64 2147667575, i64 2147667615}
!5913 = !DILocation(line: 331, column: 1, scope: !5271)
!5914 = !{i64 2147667721, i64 2147667764, i64 2147667804}
!5915 = !DILocation(line: 332, column: 1, scope: !5271)
!5916 = !{i64 2147667992, i64 2147668035, i64 2147668075}
!5917 = !DILocation(line: 333, column: 1, scope: !5271)
!5918 = !{i64 2147668212, i64 2147668255, i64 2147668295}
!5919 = !DILocation(line: 334, column: 1, scope: !5271)
!5920 = !{i64 2147668465, i64 2147668508, i64 2147668548}
!5921 = !DILocation(line: 335, column: 1, scope: !5271)
!5922 = !{i64 2147668673, i64 2147668716, i64 2147668756}
!5923 = !DILocation(line: 336, column: 1, scope: !5271)
!5924 = !{i64 2147668905, i64 2147668948, i64 2147668988}
!5925 = !DILocation(line: 337, column: 1, scope: !5271)
!5926 = !{i64 2147669116, i64 2147669159, i64 2147669199}
!5927 = !DILocation(line: 338, column: 1, scope: !5271)
!5928 = !{i64 2147669306, i64 2147669349, i64 2147669389}
!5929 = !DILocation(line: 339, column: 1, scope: !5271)
!5930 = !{i64 2147669520, i64 2147669563, i64 2147669603}
!5931 = !DILocation(line: 340, column: 1, scope: !5271)
!5932 = !{i64 2147673780, i64 2147673823, i64 2147673863}
!5933 = !DILocation(line: 341, column: 1, scope: !5271)
!5934 = !{i64 2147673967, i64 2147674010, i64 2147674050}
!5935 = !DILocation(line: 342, column: 1, scope: !5271)
!5936 = !{i64 2147674163, i64 2147674206, i64 2147674246}
!5937 = !DILocation(line: 343, column: 1, scope: !5271)
!5938 = !{i64 2147674371, i64 2147674414, i64 2147674454}
!5939 = !DILocation(line: 344, column: 1, scope: !5271)
!5940 = !{i64 2147674600, i64 2147674643, i64 2147674683}
!5941 = !DILocation(line: 345, column: 1, scope: !5271)
!5942 = !{i64 2147674802, i64 2147674845, i64 2147674885}
!5943 = !DILocation(line: 346, column: 1, scope: !5271)
!5944 = !{i64 2147675001, i64 2147675044, i64 2147675084}
!5945 = !DILocation(line: 347, column: 1, scope: !5271)
!5946 = !{i64 2147675218, i64 2147675261, i64 2147675301}
!5947 = !DILocation(line: 349, column: 1, scope: !5271)
!5948 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5949)
!5949 = !{!5950, !5951}
!5950 = !DILocalVariable(name: "arg", arg: 1, scope: !5948, file: !235, line: 30, type: !244)
!5951 = !DILocalVariable(name: "key", scope: !5948, file: !235, line: 32, type: !152)
!5952 = !DILocation(line: 0, scope: !5948)
!5953 = !DILocation(line: 37, column: 2, scope: !5948)
!5954 = !DILocation(line: 38, column: 2, scope: !5948)
!5955 = !DILocation(line: 55, column: 2, scope: !5956, inlinedAt: !5963)
!5956 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5960)
!5957 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5958 = !DISubroutineType(types: !5959)
!5959 = !{!32}
!5960 = !{!5961, !5962}
!5961 = !DILocalVariable(name: "key", scope: !5956, file: !5957, line: 44, type: !32)
!5962 = !DILocalVariable(name: "tmp", scope: !5956, file: !5957, line: 53, type: !32)
!5963 = distinct !DILocation(line: 40, column: 8, scope: !5948)
!5964 = !{i64 1938081}
!5965 = !DILocation(line: 0, scope: !5956, inlinedAt: !5963)
!5966 = !DILocalVariable(name: "key", arg: 1, scope: !5967, file: !5957, line: 84, type: !32)
!5967 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{null, !32}
!5970 = !{!5966}
!5971 = !DILocation(line: 0, scope: !5967, inlinedAt: !5972)
!5972 = distinct !DILocation(line: 47, column: 2, scope: !5948)
!5973 = !DILocation(line: 95, column: 2, scope: !5967, inlinedAt: !5972)
!5974 = !{i64 1938898}
!5975 = !DILocation(line: 51, column: 18, scope: !5948)
!5976 = !DILocation(line: 53, column: 2, scope: !5948)
!5977 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5978, file: !5978, line: 1609, type: !3111, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2182)
!5978 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DILocation(line: 1611, column: 3, scope: !5977)
!5980 = !DILocation(line: 1612, column: 1, scope: !5977)
!5981 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5978, file: !5978, line: 1629, type: !3111, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2182)
!5982 = !DILocation(line: 1631, column: 3, scope: !5981)
!5983 = !DILocation(line: 1632, column: 1, scope: !5981)
!5984 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5985)
!5985 = !{!5986}
!5986 = !DILocalVariable(name: "dev", arg: 1, scope: !5984, file: !271, line: 26, type: !279)
!5987 = !DILocation(line: 0, scope: !5984)
!5988 = !DILocation(line: 68, column: 2, scope: !5984)
!5989 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5990, file: !5990, line: 14, type: !4224, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !5991)
!5990 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5991 = !{!5992, !5993}
!5992 = !DILocalVariable(name: "fmt", arg: 1, scope: !5989, file: !5990, line: 14, type: !118)
!5993 = !DILocalVariable(name: "ap", scope: !5989, file: !5990, line: 16, type: !5994)
!5994 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3234, line: 99, baseType: !5995)
!5995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3234, line: 40, baseType: !5996)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5990, baseType: !5997)
!5997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5998)
!5998 = !{!5999}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5997, file: !5990, line: 16, baseType: !106, size: 32)
!6000 = !DILocation(line: 0, scope: !5989)
!6001 = !DILocation(line: 16, column: 2, scope: !5989)
!6002 = !DILocation(line: 16, column: 10, scope: !5989)
!6003 = !DILocation(line: 18, column: 2, scope: !5989)
!6004 = !DILocation(line: 19, column: 2, scope: !5989)
!6005 = !DILocation(line: 20, column: 2, scope: !5989)
!6006 = !DILocation(line: 21, column: 1, scope: !5989)
!6007 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5990, file: !5990, line: 23, type: !6008, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6010)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{null, !118, !5994}
!6010 = !{!6011, !6012}
!6011 = !DILocalVariable(name: "fmt", arg: 1, scope: !6007, file: !5990, line: 23, type: !118)
!6012 = !DILocalVariable(name: "ap", arg: 2, scope: !6007, file: !5990, line: 23, type: !5994)
!6013 = !DILocation(line: 0, scope: !6007)
!6014 = !DILocation(line: 25, column: 2, scope: !6007)
!6015 = !DILocation(line: 26, column: 1, scope: !6007)
!6016 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5990, file: !5990, line: 52, type: !6017, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{null, !107, !13, !185}
!6019 = !{!6020, !6021, !6022, !6023}
!6020 = !DILocalVariable(name: "level", arg: 1, scope: !6016, file: !5990, line: 52, type: !107)
!6021 = !DILocalVariable(name: "data", arg: 2, scope: !6016, file: !5990, line: 52, type: !13)
!6022 = !DILocalVariable(name: "size", arg: 3, scope: !6016, file: !5990, line: 52, type: !185)
!6023 = !DILocalVariable(name: "data_buffer", scope: !6016, file: !5990, line: 54, type: !118)
!6024 = !DILocation(line: 0, scope: !6016)
!6025 = !DILocation(line: 55, column: 14, scope: !6016)
!6026 = !DILocation(line: 55, column: 2, scope: !6016)
!6027 = !DILocation(line: 56, column: 3, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6016, file: !5990, line: 55, column: 20)
!6029 = !DILocation(line: 57, column: 3, scope: !6028)
!6030 = !DILocation(line: 59, column: 7, scope: !6028)
!6031 = distinct !{!6031, !6026, !6032}
!6032 = !DILocation(line: 65, column: 2, scope: !6016)
!6033 = !DILocation(line: 66, column: 1, scope: !6016)
!6034 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6035, file: !6035, line: 175, type: !6036, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6038)
!6035 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!120, !107}
!6038 = !{!6039}
!6039 = !DILocalVariable(name: "level", arg: 1, scope: !6034, file: !6035, line: 175, type: !107)
!6040 = !DILocation(line: 0, scope: !6034)
!6041 = !DILocation(line: 177, column: 2, scope: !6034)
!6042 = !DILocation(line: 189, column: 1, scope: !6034)
!6043 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5990, file: !5990, line: 28, type: !6044, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !118, !185}
!6046 = !{!6047, !6048, !6049, !6051, !6053}
!6047 = !DILocalVariable(name: "data", arg: 1, scope: !6043, file: !5990, line: 28, type: !118)
!6048 = !DILocalVariable(name: "length", arg: 2, scope: !6043, file: !5990, line: 28, type: !185)
!6049 = !DILocalVariable(name: "i", scope: !6050, file: !5990, line: 30, type: !185)
!6050 = distinct !DILexicalBlock(scope: !6043, file: !5990, line: 30, column: 2)
!6051 = !DILocalVariable(name: "i", scope: !6052, file: !5990, line: 40, type: !185)
!6052 = distinct !DILexicalBlock(scope: !6043, file: !5990, line: 40, column: 2)
!6053 = !DILocalVariable(name: "c", scope: !6054, file: !5990, line: 42, type: !196)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !5990, line: 41, column: 19)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !5990, line: 41, column: 7)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !5990, line: 40, column: 54)
!6057 = distinct !DILexicalBlock(scope: !6052, file: !5990, line: 40, column: 2)
!6058 = !DILocation(line: 0, scope: !6043)
!6059 = !DILocation(line: 0, scope: !6050)
!6060 = !DILocation(line: 30, column: 2, scope: !6050)
!6061 = !DILocation(line: 38, column: 2, scope: !6043)
!6062 = !DILocation(line: 0, scope: !6052)
!6063 = !DILocation(line: 40, column: 2, scope: !6052)
!6064 = !DILocation(line: 31, column: 9, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !5990, line: 31, column: 7)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !5990, line: 30, column: 54)
!6067 = distinct !DILexicalBlock(scope: !6050, file: !5990, line: 30, column: 2)
!6068 = !DILocation(line: 31, column: 7, scope: !6066)
!6069 = !DILocation(line: 32, column: 35, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6065, file: !5990, line: 31, column: 19)
!6071 = !DILocation(line: 32, column: 20, scope: !6070)
!6072 = !DILocation(line: 32, column: 4, scope: !6070)
!6073 = !DILocation(line: 33, column: 3, scope: !6070)
!6074 = !DILocation(line: 34, column: 4, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6065, file: !5990, line: 33, column: 10)
!6076 = !DILocation(line: 30, column: 50, scope: !6067)
!6077 = !DILocation(line: 30, column: 24, scope: !6067)
!6078 = distinct !{!6078, !6060, !6079}
!6079 = !DILocation(line: 36, column: 2, scope: !6050)
!6080 = !DILocation(line: 49, column: 2, scope: !6043)
!6081 = !DILocation(line: 50, column: 1, scope: !6043)
!6082 = !DILocation(line: 41, column: 9, scope: !6055)
!6083 = !DILocation(line: 41, column: 7, scope: !6056)
!6084 = !DILocation(line: 42, column: 22, scope: !6054)
!6085 = !DILocation(line: 0, scope: !6054)
!6086 = !DILocation(line: 44, column: 25, scope: !6054)
!6087 = !DILocation(line: 44, column: 17, scope: !6054)
!6088 = !DILocation(line: 44, column: 33, scope: !6054)
!6089 = !DILocation(line: 44, column: 4, scope: !6054)
!6090 = !DILocation(line: 45, column: 3, scope: !6054)
!6091 = !DILocation(line: 46, column: 4, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6055, file: !5990, line: 45, column: 10)
!6093 = !DILocation(line: 40, column: 50, scope: !6057)
!6094 = !DILocation(line: 40, column: 24, scope: !6057)
!6095 = distinct !{!6095, !6063, !6096}
!6096 = !DILocation(line: 48, column: 2, scope: !6052)
!6097 = distinct !DISubprogram(name: "isprint", scope: !5015, file: !5015, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6098)
!6098 = !{!6099}
!6099 = !DILocalVariable(name: "c", arg: 1, scope: !6097, file: !5015, line: 37, type: !107)
!6100 = !DILocation(line: 0, scope: !6097)
!6101 = !DILocation(line: 39, column: 38, scope: !6097)
!6102 = !DILocation(line: 39, column: 2, scope: !6097)
!6103 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6104, file: !6104, line: 57, type: !6105, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6151)
!6104 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6105 = !DISubroutineType(types: !6106)
!6106 = !{null, !32, !6107}
!6107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6108, size: 32)
!6108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6109)
!6109 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !6110)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !6111)
!6111 = !{!6112}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6110, file: !2691, line: 107, baseType: !6113, size: 256)
!6113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !6114)
!6114 = !{!6115, !6120, !6125, !6130, !6135, !6140, !6145, !6150}
!6115 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 99, baseType: !6116, size: 32)
!6116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 99, size: 32, elements: !6117)
!6117 = !{!6118, !6119}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6116, file: !2691, line: 99, baseType: !152, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6116, file: !2691, line: 99, baseType: !152, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 100, baseType: !6121, size: 32, offset: 32)
!6121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 100, size: 32, elements: !6122)
!6122 = !{!6123, !6124}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6121, file: !2691, line: 100, baseType: !152, size: 32)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6121, file: !2691, line: 100, baseType: !152, size: 32)
!6125 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 101, baseType: !6126, size: 32, offset: 64)
!6126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 101, size: 32, elements: !6127)
!6127 = !{!6128, !6129}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6126, file: !2691, line: 101, baseType: !152, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6126, file: !2691, line: 101, baseType: !152, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 102, baseType: !6131, size: 32, offset: 96)
!6131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 102, size: 32, elements: !6132)
!6132 = !{!6133, !6134}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6131, file: !2691, line: 102, baseType: !152, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6131, file: !2691, line: 102, baseType: !152, size: 32)
!6135 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 103, baseType: !6136, size: 32, offset: 128)
!6136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 103, size: 32, elements: !6137)
!6137 = !{!6138, !6139}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6136, file: !2691, line: 103, baseType: !152, size: 32)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6136, file: !2691, line: 103, baseType: !152, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 104, baseType: !6141, size: 32, offset: 160)
!6141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 104, size: 32, elements: !6142)
!6142 = !{!6143, !6144}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6141, file: !2691, line: 104, baseType: !152, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6141, file: !2691, line: 104, baseType: !152, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, scope: !6113, file: !2691, line: 105, baseType: !6146, size: 32, offset: 192)
!6146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6113, file: !2691, line: 105, size: 32, elements: !6147)
!6147 = !{!6148, !6149}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6146, file: !2691, line: 105, baseType: !152, size: 32)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6146, file: !2691, line: 105, baseType: !152, size: 32)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6113, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!6151 = !{!6152, !6153}
!6152 = !DILocalVariable(name: "reason", arg: 1, scope: !6103, file: !6104, line: 57, type: !32)
!6153 = !DILocalVariable(name: "esf", arg: 2, scope: !6103, file: !6104, line: 57, type: !6107)
!6154 = !DILocation(line: 0, scope: !6103)
!6155 = !DILocation(line: 60, column: 10, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6103, file: !6104, line: 60, column: 6)
!6157 = !DILocation(line: 60, column: 6, scope: !6103)
!6158 = !DILocation(line: 61, column: 3, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !6104, line: 60, column: 19)
!6160 = !DILocation(line: 62, column: 2, scope: !6159)
!6161 = !DILocation(line: 63, column: 2, scope: !6103)
!6162 = !DILocation(line: 64, column: 1, scope: !6103)
!6163 = distinct !DISubprogram(name: "esf_dump", scope: !6104, file: !6104, line: 20, type: !6164, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6166)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{null, !6107}
!6166 = !{!6167}
!6167 = !DILocalVariable(name: "esf", arg: 1, scope: !6163, file: !6104, line: 20, type: !6107)
!6168 = !DILocation(line: 0, scope: !6163)
!6169 = !DILocation(line: 22, column: 2, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !6104, line: 22, column: 2)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !6104, line: 22, column: 2)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !6104, line: 22, column: 2)
!6173 = distinct !DILexicalBlock(scope: !6163, file: !6104, line: 22, column: 2)
!6174 = !DILocation(line: 24, column: 2, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !6104, line: 24, column: 2)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !6104, line: 24, column: 2)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !6104, line: 24, column: 2)
!6178 = distinct !DILexicalBlock(scope: !6163, file: !6104, line: 24, column: 2)
!6179 = !DILocation(line: 26, column: 2, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6181, file: !6104, line: 26, column: 2)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !6104, line: 26, column: 2)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !6104, line: 26, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6163, file: !6104, line: 26, column: 2)
!6184 = !DILocation(line: 53, column: 2, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !6104, line: 53, column: 2)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !6104, line: 53, column: 2)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !6104, line: 53, column: 2)
!6188 = distinct !DILexicalBlock(scope: !6163, file: !6104, line: 53, column: 2)
!6189 = !DILocation(line: 55, column: 1, scope: !6163)
!6190 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6104, file: !6104, line: 82, type: !6191, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6206)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{null, !6107, !6193}
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 32)
!6194 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6195)
!6195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6196)
!6196 = !{!6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205}
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6195, file: !379, line: 26, baseType: !152, size: 32)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6195, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6195, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6195, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6195, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6195, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6195, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6195, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6195, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6206 = !{!6207, !6208, !6209}
!6207 = !DILocalVariable(name: "esf", arg: 1, scope: !6190, file: !6104, line: 82, type: !6107)
!6208 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6190, file: !6104, line: 82, type: !6193)
!6209 = !DILocalVariable(name: "reason", scope: !6190, file: !6104, line: 88, type: !32)
!6210 = !DILocation(line: 0, scope: !6190)
!6211 = !DILocation(line: 88, column: 35, scope: !6190)
!6212 = !DILocation(line: 108, column: 2, scope: !6190)
!6213 = !DILocation(line: 131, column: 1, scope: !6190)
!6214 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6104, file: !6104, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6215)
!6215 = !{!6216, !6217, !6218}
!6216 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6214, file: !6104, line: 133, type: !106)
!6217 = !DILocalVariable(name: "ssf_contents", scope: !6214, file: !6104, line: 135, type: !999)
!6218 = !DILocalVariable(name: "oops_esf", scope: !6214, file: !6104, line: 136, type: !6109)
!6219 = !DILocation(line: 0, scope: !6214)
!6220 = !DILocation(line: 136, column: 2, scope: !6214)
!6221 = !DILocation(line: 136, column: 15, scope: !6214)
!6222 = !DILocation(line: 139, column: 22, scope: !6214)
!6223 = !DILocation(line: 139, column: 17, scope: !6214)
!6224 = !DILocation(line: 139, column: 20, scope: !6214)
!6225 = !DILocation(line: 141, column: 2, scope: !6214)
!6226 = !DILocation(line: 142, column: 2, scope: !6214)
!6227 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6228, file: !6228, line: 40, type: !5968, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6229)
!6228 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6229 = !{!6230}
!6230 = !DILocalVariable(name: "irq", arg: 1, scope: !6227, file: !6228, line: 40, type: !32)
!6231 = !DILocation(line: 0, scope: !6227)
!6232 = !DILocation(line: 42, column: 2, scope: !6227)
!6233 = !DILocation(line: 43, column: 1, scope: !6227)
!6234 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6235, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{null, !900}
!6237 = !{!6238}
!6238 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6234, file: !463, line: 1684, type: !900)
!6239 = !DILocation(line: 0, scope: !6234)
!6240 = !DILocation(line: 1686, column: 23, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6234, file: !463, line: 1686, column: 7)
!6242 = !DILocation(line: 1686, column: 7, scope: !6234)
!6243 = !DILocation(line: 1688, column: 5, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !463, line: 1687, column: 3)
!6245 = !{i64 2150445812}
!6246 = !DILocation(line: 1689, column: 81, scope: !6244)
!6247 = !DILocation(line: 1689, column: 60, scope: !6244)
!6248 = !DILocation(line: 1689, column: 34, scope: !6244)
!6249 = !DILocation(line: 1689, column: 5, scope: !6244)
!6250 = !DILocation(line: 1689, column: 43, scope: !6244)
!6251 = !DILocation(line: 1690, column: 5, scope: !6244)
!6252 = !{i64 2150445926}
!6253 = !DILocation(line: 1691, column: 3, scope: !6244)
!6254 = !DILocation(line: 1692, column: 1, scope: !6234)
!6255 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6228, file: !6228, line: 45, type: !5968, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6256)
!6256 = !{!6257}
!6257 = !DILocalVariable(name: "irq", arg: 1, scope: !6255, file: !6228, line: 45, type: !32)
!6258 = !DILocation(line: 0, scope: !6255)
!6259 = !DILocation(line: 47, column: 2, scope: !6255)
!6260 = !DILocation(line: 48, column: 1, scope: !6255)
!6261 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6235, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6262)
!6262 = !{!6263}
!6263 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6261, file: !463, line: 1722, type: !900)
!6264 = !DILocation(line: 0, scope: !6261)
!6265 = !DILocation(line: 1724, column: 23, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6261, file: !463, line: 1724, column: 7)
!6267 = !DILocation(line: 1724, column: 7, scope: !6261)
!6268 = !DILocation(line: 1726, column: 81, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !463, line: 1725, column: 3)
!6270 = !DILocation(line: 1726, column: 60, scope: !6269)
!6271 = !DILocation(line: 1726, column: 34, scope: !6269)
!6272 = !DILocation(line: 1726, column: 5, scope: !6269)
!6273 = !DILocation(line: 1726, column: 43, scope: !6269)
!6274 = !DILocation(line: 271, column: 3, scope: !6275, inlinedAt: !6277)
!6275 = distinct !DISubprogram(name: "__DSB", scope: !6276, file: !6276, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2182)
!6276 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6277 = distinct !DILocation(line: 1727, column: 5, scope: !6269)
!6278 = !{i64 2900195}
!6279 = !DILocation(line: 260, column: 3, scope: !6280, inlinedAt: !6281)
!6280 = distinct !DISubprogram(name: "__ISB", scope: !6276, file: !6276, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2182)
!6281 = distinct !DILocation(line: 1728, column: 5, scope: !6269)
!6282 = !{i64 2899912}
!6283 = !DILocation(line: 1729, column: 3, scope: !6269)
!6284 = !DILocation(line: 1730, column: 1, scope: !6261)
!6285 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6228, file: !6228, line: 50, type: !6286, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6288)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!107, !32}
!6288 = !{!6289}
!6289 = !DILocalVariable(name: "irq", arg: 1, scope: !6285, file: !6228, line: 50, type: !32)
!6290 = !DILocation(line: 0, scope: !6285)
!6291 = !DILocation(line: 52, column: 20, scope: !6285)
!6292 = !DILocation(line: 52, column: 9, scope: !6285)
!6293 = !DILocation(line: 52, column: 41, scope: !6285)
!6294 = !DILocation(line: 52, column: 39, scope: !6285)
!6295 = !DILocation(line: 52, column: 2, scope: !6285)
!6296 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6228, file: !6228, line: 64, type: !6297, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6299)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{null, !32, !32, !152}
!6299 = !{!6300, !6301, !6302}
!6300 = !DILocalVariable(name: "irq", arg: 1, scope: !6296, file: !6228, line: 64, type: !32)
!6301 = !DILocalVariable(name: "prio", arg: 2, scope: !6296, file: !6228, line: 64, type: !32)
!6302 = !DILocalVariable(name: "flags", arg: 3, scope: !6296, file: !6228, line: 64, type: !152)
!6303 = !DILocation(line: 0, scope: !6296)
!6304 = !DILocation(line: 83, column: 8, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !6228, line: 82, column: 9)
!6306 = distinct !DILexicalBlock(scope: !6296, file: !6228, line: 76, column: 6)
!6307 = !DILocation(line: 91, column: 2, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !6228, line: 91, column: 2)
!6309 = distinct !DILexicalBlock(scope: !6296, file: !6228, line: 91, column: 2)
!6310 = !DILocation(line: 91, column: 2, scope: !6309)
!6311 = !DILocation(line: 91, column: 2, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6308, file: !6228, line: 91, column: 2)
!6313 = !DILocation(line: 95, column: 2, scope: !6296)
!6314 = !DILocation(line: 96, column: 1, scope: !6296)
!6315 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6316, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !900, !152}
!6318 = !{!6319, !6320}
!6319 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6315, file: !463, line: 1814, type: !900)
!6320 = !DILocalVariable(name: "priority", arg: 2, scope: !6315, file: !463, line: 1814, type: !152)
!6321 = !DILocation(line: 0, scope: !6315)
!6322 = !DILocation(line: 0, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6315, file: !463, line: 1816, column: 7)
!6324 = !DILocation(line: 1816, column: 7, scope: !6315)
!6325 = !DILocation(line: 1824, column: 1, scope: !6315)
!6326 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6228, file: !6228, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6327)
!6327 = !{!6328}
!6328 = !DILocalVariable(name: "unused", arg: 1, scope: !6326, file: !6228, line: 155, type: !13)
!6329 = !DILocation(line: 0, scope: !6326)
!6330 = !DILocation(line: 159, column: 2, scope: !6326)
!6331 = !DILocation(line: 160, column: 1, scope: !6326)
!6332 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6333, file: !6333, line: 87, type: !3111, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2182)
!6333 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6334 = !DILocation(line: 89, column: 2, scope: !6332)
!6335 = !DILocation(line: 90, column: 2, scope: !6332)
!6336 = !DILocation(line: 91, column: 1, scope: !6332)
!6337 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6333, file: !6333, line: 23, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!6338 = !DISubprogram(name: "z_arm_int_exit", scope: !6339, file: !6339, line: 153, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!6339 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6340 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6341, file: !6341, line: 256, type: !3111, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6341 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6342 = !DILocation(line: 258, column: 2, scope: !6340)
!6343 = !DILocation(line: 260, column: 2, scope: !6340)
!6344 = !DILocation(line: 262, column: 2, scope: !6340)
!6345 = !DILocation(line: 263, column: 2, scope: !6340)
!6346 = !DILocation(line: 267, column: 2, scope: !6340)
!6347 = !DILocation(line: 268, column: 2, scope: !6340)
!6348 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6341, file: !6341, line: 53, type: !3111, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6349 = !DILocation(line: 55, column: 12, scope: !6348)
!6350 = !DILocation(line: 271, column: 3, scope: !6351, inlinedAt: !6352)
!6351 = distinct !DISubprogram(name: "__DSB", scope: !6276, file: !6276, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6352 = distinct !DILocation(line: 56, column: 2, scope: !6348)
!6353 = !{i64 2898866}
!6354 = !DILocation(line: 260, column: 3, scope: !6355, inlinedAt: !6356)
!6355 = distinct !DISubprogram(name: "__ISB", scope: !6276, file: !6276, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6356 = distinct !DILocation(line: 57, column: 2, scope: !6348)
!6357 = !{i64 2898583}
!6358 = !DILocation(line: 58, column: 1, scope: !6348)
!6359 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6341, file: !6341, line: 96, type: !3111, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6360 = !DILocation(line: 103, column: 13, scope: !6359)
!6361 = !DILocation(line: 975, column: 3, scope: !6362, inlinedAt: !6367)
!6362 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6276, file: !6276, line: 971, type: !6363, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !6365)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{!152}
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "result", scope: !6362, file: !6276, line: 973, type: !152)
!6367 = distinct !DILocation(line: 189, column: 16, scope: !6359)
!6368 = !{i64 2919696}
!6369 = !DILocation(line: 0, scope: !6362, inlinedAt: !6367)
!6370 = !DILocation(line: 189, column: 32, scope: !6359)
!6371 = !DILocalVariable(name: "control", arg: 1, scope: !6372, file: !6276, line: 1001, type: !152)
!6372 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6276, file: !6276, line: 1001, type: !6373, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !6375)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{null, !152}
!6375 = !{!6371}
!6376 = !DILocation(line: 0, scope: !6372, inlinedAt: !6377)
!6377 = distinct !DILocation(line: 189, column: 2, scope: !6359)
!6378 = !DILocation(line: 1003, column: 3, scope: !6372, inlinedAt: !6377)
!6379 = !{i64 2920416}
!6380 = !DILocation(line: 260, column: 3, scope: !6355, inlinedAt: !6381)
!6381 = distinct !DILocation(line: 1004, column: 3, scope: !6372, inlinedAt: !6377)
!6382 = !DILocation(line: 191, column: 1, scope: !6359)
!6383 = distinct !DISubprogram(name: "arch_swap", scope: !6384, file: !6384, line: 33, type: !6286, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6385)
!6384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "key", arg: 1, scope: !6383, file: !6384, line: 33, type: !32)
!6387 = !DILocation(line: 0, scope: !6383)
!6388 = !DILocation(line: 36, column: 2, scope: !6383)
!6389 = !DILocation(line: 36, column: 17, scope: !6383)
!6390 = !DILocation(line: 36, column: 25, scope: !6383)
!6391 = !DILocation(line: 37, column: 37, scope: !6383)
!6392 = !DILocation(line: 37, column: 17, scope: !6383)
!6393 = !DILocation(line: 37, column: 35, scope: !6383)
!6394 = !DILocation(line: 41, column: 12, scope: !6383)
!6395 = !DILocalVariable(name: "key", arg: 1, scope: !6396, file: !5957, line: 84, type: !32)
!6396 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6397)
!6397 = !{!6395}
!6398 = !DILocation(line: 0, scope: !6396, inlinedAt: !6399)
!6399 = distinct !DILocation(line: 44, column: 2, scope: !6383)
!6400 = !DILocation(line: 95, column: 2, scope: !6396, inlinedAt: !6399)
!6401 = !{i64 2041226}
!6402 = !DILocation(line: 53, column: 9, scope: !6383)
!6403 = !DILocation(line: 53, column: 24, scope: !6383)
!6404 = !DILocation(line: 53, column: 2, scope: !6383)
!6405 = distinct !DISubprogram(name: "arch_new_thread", scope: !6406, file: !6406, line: 56, type: !6407, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6517)
!6406 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6407 = !DISubroutineType(types: !6408)
!6408 = !{null, !6409, !6512, !193, !559, !106, !106, !106}
!6409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6410, size: 32)
!6410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6411)
!6411 = !{!6412, !6470, !6482, !6483, !6484, !6485, !6486, !6492, !6507}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6410, file: !309, line: 247, baseType: !6413, size: 384)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6414)
!6414 = !{!6415, !6439, !6446, !6447, !6448, !6457, !6458, !6459}
!6415 = !DIDerivedType(tag: DW_TAG_member, scope: !6413, file: !309, line: 60, baseType: !6416, size: 64)
!6416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6413, file: !309, line: 60, size: 64, elements: !6417)
!6417 = !{!6418, !6433}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6416, file: !309, line: 61, baseType: !6419, size: 64)
!6419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6420)
!6420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6421)
!6421 = !{!6422, !6428}
!6422 = !DIDerivedType(tag: DW_TAG_member, scope: !6420, file: !319, line: 38, baseType: !6423, size: 32)
!6423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6420, file: !319, line: 38, size: 32, elements: !6424)
!6424 = !{!6425, !6427}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6423, file: !319, line: 39, baseType: !6426, size: 32)
!6426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 32)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6423, file: !319, line: 40, baseType: !6426, size: 32)
!6428 = !DIDerivedType(tag: DW_TAG_member, scope: !6420, file: !319, line: 42, baseType: !6429, size: 32, offset: 32)
!6429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6420, file: !319, line: 42, size: 32, elements: !6430)
!6430 = !{!6431, !6432}
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6429, file: !319, line: 43, baseType: !6426, size: 32)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6429, file: !319, line: 44, baseType: !6426, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6416, file: !309, line: 62, baseType: !6434, size: 64)
!6434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6435)
!6435 = !{!6436}
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6434, file: !335, line: 50, baseType: !6437, size: 64)
!6437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6438, size: 64, elements: !340)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 32)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6413, file: !309, line: 68, baseType: !6440, size: 32, offset: 64)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 32)
!6441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6442)
!6442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6443)
!6443 = !{!6444}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6442, file: !345, line: 232, baseType: !6445, size: 64)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6420)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6413, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6413, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6448 = !DIDerivedType(tag: DW_TAG_member, scope: !6413, file: !309, line: 90, baseType: !6449, size: 16, offset: 112)
!6449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6413, file: !309, line: 90, size: 16, elements: !6450)
!6450 = !{!6451, !6456}
!6451 = !DIDerivedType(tag: DW_TAG_member, scope: !6449, file: !309, line: 91, baseType: !6452, size: 16)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6449, file: !309, line: 91, size: 16, elements: !6453)
!6453 = !{!6454, !6455}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6452, file: !309, line: 96, baseType: !359, size: 8)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6452, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6449, file: !309, line: 100, baseType: !197, size: 16)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6413, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6413, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6413, file: !309, line: 131, baseType: !6460, size: 192, offset: 192)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6461)
!6461 = !{!6462, !6463, !6469}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6460, file: !345, line: 245, baseType: !6419, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6460, file: !345, line: 246, baseType: !6464, size: 32, offset: 64)
!6464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6465)
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 32)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{null, !6468}
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6460, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6460, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6410, file: !309, line: 250, baseType: !6471, size: 288, offset: 384)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6472)
!6472 = !{!6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6481}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6471, file: !379, line: 26, baseType: !152, size: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6471, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6471, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6471, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6471, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6471, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6471, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6471, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6471, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6410, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6410, file: !309, line: 256, baseType: !6441, size: 64, offset: 704)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6410, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6410, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6410, file: !309, line: 300, baseType: !6487, size: 96, offset: 1056)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6488)
!6488 = !{!6489, !6490, !6491}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6487, file: !309, line: 153, baseType: !22, size: 32)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6487, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6487, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6410, file: !309, line: 325, baseType: !6493, size: 32, offset: 1152)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 32)
!6494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6495)
!6495 = !{!6496, !6502, !6503}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6494, file: !406, line: 5074, baseType: !6497, size: 96)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6498)
!6498 = !{!6499, !6500, !6501}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6497, file: !410, line: 57, baseType: !413, size: 32)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6497, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6497, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6494, file: !406, line: 5075, baseType: !6441, size: 64, offset: 96)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6494, file: !406, line: 5076, baseType: !6504, size: 32, offset: 160)
!6504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6505)
!6505 = !{!6506}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6504, file: !420, line: 52, baseType: !22, size: 32)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6410, file: !309, line: 343, baseType: !6508, size: 64, offset: 1184)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6509)
!6509 = !{!6510, !6511}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6508, file: !379, line: 63, baseType: !152, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6508, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6513, size: 32)
!6513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6514)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6515)
!6515 = !{!6516}
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6514, file: !577, line: 48, baseType: !120, size: 8)
!6517 = !{!6518, !6519, !6520, !6521, !6522, !6523, !6524, !6525}
!6518 = !DILocalVariable(name: "thread", arg: 1, scope: !6405, file: !6406, line: 56, type: !6409)
!6519 = !DILocalVariable(name: "stack", arg: 2, scope: !6405, file: !6406, line: 56, type: !6512)
!6520 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6405, file: !6406, line: 57, type: !193)
!6521 = !DILocalVariable(name: "entry", arg: 4, scope: !6405, file: !6406, line: 57, type: !559)
!6522 = !DILocalVariable(name: "p1", arg: 5, scope: !6405, file: !6406, line: 58, type: !106)
!6523 = !DILocalVariable(name: "p2", arg: 6, scope: !6405, file: !6406, line: 58, type: !106)
!6524 = !DILocalVariable(name: "p3", arg: 7, scope: !6405, file: !6406, line: 58, type: !106)
!6525 = !DILocalVariable(name: "iframe", scope: !6405, file: !6406, line: 60, type: !2689)
!6526 = !DILocation(line: 0, scope: !6405)
!6527 = !DILocation(line: 85, column: 11, scope: !6405)
!6528 = !DILocation(line: 93, column: 10, scope: !6405)
!6529 = !DILocation(line: 98, column: 13, scope: !6405)
!6530 = !DILocation(line: 100, column: 15, scope: !6405)
!6531 = !DILocation(line: 100, column: 10, scope: !6405)
!6532 = !DILocation(line: 100, column: 13, scope: !6405)
!6533 = !DILocation(line: 101, column: 15, scope: !6405)
!6534 = !DILocation(line: 101, column: 10, scope: !6405)
!6535 = !DILocation(line: 101, column: 13, scope: !6405)
!6536 = !DILocation(line: 102, column: 15, scope: !6405)
!6537 = !DILocation(line: 102, column: 10, scope: !6405)
!6538 = !DILocation(line: 102, column: 13, scope: !6405)
!6539 = !DILocation(line: 103, column: 15, scope: !6405)
!6540 = !DILocation(line: 103, column: 10, scope: !6405)
!6541 = !DILocation(line: 103, column: 13, scope: !6405)
!6542 = !DILocation(line: 106, column: 10, scope: !6405)
!6543 = !DILocation(line: 106, column: 15, scope: !6405)
!6544 = !DILocation(line: 122, column: 29, scope: !6405)
!6545 = !DILocation(line: 122, column: 23, scope: !6405)
!6546 = !DILocation(line: 122, column: 27, scope: !6405)
!6547 = !DILocation(line: 123, column: 15, scope: !6405)
!6548 = !DILocation(line: 123, column: 23, scope: !6405)
!6549 = !DILocation(line: 143, column: 1, scope: !6405)
!6550 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6406, file: !6406, line: 385, type: !6551, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6554)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!152, !6553, !6553}
!6553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6554 = !{!6555, !6556, !6557, !6560}
!6555 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6550, file: !6406, line: 385, type: !6553)
!6556 = !DILocalVariable(name: "psp", arg: 2, scope: !6550, file: !6406, line: 385, type: !6553)
!6557 = !DILocalVariable(name: "thread", scope: !6550, file: !6406, line: 388, type: !6558)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 32)
!6559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6410)
!6560 = !DILocalVariable(name: "guard_len", scope: !6550, file: !6406, line: 405, type: !152)
!6561 = !DILocation(line: 0, scope: !6550)
!6562 = !DILocation(line: 388, column: 34, scope: !6550)
!6563 = !DILocation(line: 390, column: 13, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6550, file: !6406, line: 390, column: 6)
!6565 = !DILocation(line: 390, column: 6, scope: !6550)
!6566 = !DILocation(line: 438, column: 6, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6550, file: !6406, line: 438, column: 6)
!6568 = !DILocation(line: 438, column: 6, scope: !6550)
!6569 = !DILocation(line: 442, column: 3, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6567, file: !6406, line: 440, column: 22)
!6571 = !DILocation(line: 455, column: 1, scope: !6550)
!6572 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6406, file: !6406, line: 530, type: !6573, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6575)
!6573 = !DISubroutineType(types: !6574)
!6574 = !{null, !6409, !193, !559}
!6575 = !{!6576, !6577, !6578}
!6576 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6572, file: !6406, line: 530, type: !6409)
!6577 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6572, file: !6406, line: 530, type: !193)
!6578 = !DILocalVariable(name: "_main", arg: 3, scope: !6572, file: !6406, line: 531, type: !559)
!6579 = !DILocation(line: 0, scope: !6572)
!6580 = !DILocation(line: 535, column: 11, scope: !6572)
!6581 = !DILocation(line: 560, column: 2, scope: !6572)
!6582 = !DILocation(line: 576, column: 2, scope: !6572)
!6583 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6584 = !DILocation(line: 603, column: 2, scope: !6572)
!6585 = distinct !DISubprogram(name: "z_arm_fault", scope: !6586, file: !6586, line: 1036, type: !6587, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6602)
!6586 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6587 = !DISubroutineType(types: !6588)
!6588 = !{null, !152, !152, !152, !6589}
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 32)
!6590 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6591)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6592)
!6592 = !{!6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6591, file: !379, line: 26, baseType: !152, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6591, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6591, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6591, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6591, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6591, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6591, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6591, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6591, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6602 = !{!6603, !6604, !6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612}
!6603 = !DILocalVariable(name: "msp", arg: 1, scope: !6585, file: !6586, line: 1036, type: !152)
!6604 = !DILocalVariable(name: "psp", arg: 2, scope: !6585, file: !6586, line: 1036, type: !152)
!6605 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6585, file: !6586, line: 1036, type: !152)
!6606 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6585, file: !6586, line: 1037, type: !6589)
!6607 = !DILocalVariable(name: "reason", scope: !6585, file: !6586, line: 1039, type: !152)
!6608 = !DILocalVariable(name: "fault", scope: !6585, file: !6586, line: 1040, type: !107)
!6609 = !DILocalVariable(name: "recoverable", scope: !6585, file: !6586, line: 1041, type: !145)
!6610 = !DILocalVariable(name: "nested_exc", scope: !6585, file: !6586, line: 1041, type: !145)
!6611 = !DILocalVariable(name: "esf", scope: !6585, file: !6586, line: 1042, type: !2757)
!6612 = !DILocalVariable(name: "esf_copy", scope: !6585, file: !6586, line: 1047, type: !2758)
!6613 = !DILocation(line: 0, scope: !6585)
!6614 = !DILocation(line: 1040, column: 19, scope: !6585)
!6615 = !DILocation(line: 1041, column: 2, scope: !6585)
!6616 = !DILocation(line: 1047, column: 2, scope: !6585)
!6617 = !DILocation(line: 1047, column: 15, scope: !6585)
!6618 = !DILocalVariable(name: "key", arg: 1, scope: !6619, file: !5957, line: 84, type: !32)
!6619 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6620)
!6620 = !{!6618}
!6621 = !DILocation(line: 0, scope: !6619, inlinedAt: !6622)
!6622 = distinct !DILocation(line: 1050, column: 2, scope: !6585)
!6623 = !DILocation(line: 95, column: 2, scope: !6619, inlinedAt: !6622)
!6624 = !{i64 2074470}
!6625 = !DILocation(line: 1055, column: 9, scope: !6585)
!6626 = !DILocation(line: 1056, column: 2, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !6586, line: 1056, column: 2)
!6628 = distinct !DILexicalBlock(scope: !6585, file: !6586, line: 1056, column: 2)
!6629 = !DILocation(line: 1056, column: 2, scope: !6628)
!6630 = !DILocation(line: 1056, column: 2, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !6586, line: 1056, column: 2)
!6632 = !DILocation(line: 1040, column: 24, scope: !6585)
!6633 = !DILocation(line: 1063, column: 11, scope: !6585)
!6634 = !DILocation(line: 1064, column: 6, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6585, file: !6586, line: 1064, column: 6)
!6636 = !{i8 0, i8 2}
!6637 = !DILocation(line: 1064, column: 6, scope: !6585)
!6638 = !DILocation(line: 1070, column: 20, scope: !6585)
!6639 = !DILocation(line: 1070, column: 2, scope: !6585)
!6640 = !DILocation(line: 1089, column: 6, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6585, file: !6586, line: 1089, column: 6)
!6642 = !DILocation(line: 0, scope: !6641)
!6643 = !DILocation(line: 1089, column: 6, scope: !6585)
!6644 = !DILocation(line: 1090, column: 28, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !6586, line: 1090, column: 7)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !6586, line: 1089, column: 18)
!6647 = !DILocation(line: 1090, column: 44, scope: !6645)
!6648 = !DILocation(line: 1090, column: 7, scope: !6646)
!6649 = !DILocation(line: 1091, column: 24, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6645, file: !6586, line: 1090, column: 50)
!6651 = !DILocation(line: 1092, column: 3, scope: !6650)
!6652 = !DILocation(line: 1094, column: 23, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6641, file: !6586, line: 1093, column: 9)
!6654 = !DILocation(line: 1097, column: 2, scope: !6585)
!6655 = !DILocation(line: 1098, column: 1, scope: !6585)
!6656 = distinct !DISubprogram(name: "get_esf", scope: !6586, file: !6586, line: 894, type: !6657, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6660)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!2757, !152, !152, !152, !6659}
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6660 = !{!6661, !6662, !6663, !6664, !6665, !6666}
!6661 = !DILocalVariable(name: "msp", arg: 1, scope: !6656, file: !6586, line: 894, type: !152)
!6662 = !DILocalVariable(name: "psp", arg: 2, scope: !6656, file: !6586, line: 894, type: !152)
!6663 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6656, file: !6586, line: 894, type: !152)
!6664 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6656, file: !6586, line: 895, type: !6659)
!6665 = !DILocalVariable(name: "alternative_state_exc", scope: !6656, file: !6586, line: 897, type: !145)
!6666 = !DILocalVariable(name: "ptr_esf", scope: !6656, file: !6586, line: 898, type: !2757)
!6667 = !DILocation(line: 0, scope: !6656)
!6668 = !DILocation(line: 900, column: 14, scope: !6656)
!6669 = !DILocation(line: 902, column: 49, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6656, file: !6586, line: 902, column: 6)
!6671 = !DILocation(line: 902, column: 6, scope: !6656)
!6672 = !DILocation(line: 983, column: 44, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6656, file: !6586, line: 983, column: 6)
!6674 = !DILocation(line: 985, column: 3, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !6586, line: 985, column: 3)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !6586, line: 985, column: 3)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !6586, line: 985, column: 3)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6586, line: 985, column: 3)
!6679 = distinct !DILexicalBlock(scope: !6673, file: !6586, line: 984, column: 47)
!6680 = !DILocation(line: 986, column: 3, scope: !6679)
!6681 = !DILocation(line: 983, column: 18, scope: !6673)
!6682 = !DILocation(line: 991, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6586, line: 990, column: 30)
!6684 = distinct !DILexicalBlock(scope: !6656, file: !6586, line: 990, column: 6)
!6685 = !DILocation(line: 998, column: 16, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !6586, line: 995, column: 10)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !6586, line: 991, column: 7)
!6688 = !DILocation(line: 1002, column: 2, scope: !6656)
!6689 = !DILocation(line: 1003, column: 1, scope: !6656)
!6690 = distinct !DISubprogram(name: "fault_handle", scope: !6586, file: !6586, line: 786, type: !6691, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6693)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{!152, !2757, !107, !6659}
!6693 = !{!6694, !6695, !6696, !6697}
!6694 = !DILocalVariable(name: "esf", arg: 1, scope: !6690, file: !6586, line: 786, type: !2757)
!6695 = !DILocalVariable(name: "fault", arg: 2, scope: !6690, file: !6586, line: 786, type: !107)
!6696 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6690, file: !6586, line: 786, type: !6659)
!6697 = !DILocalVariable(name: "reason", scope: !6690, file: !6586, line: 788, type: !152)
!6698 = !DILocation(line: 0, scope: !6690)
!6699 = !DILocation(line: 790, column: 15, scope: !6690)
!6700 = !DILocation(line: 792, column: 2, scope: !6690)
!6701 = !DILocation(line: 794, column: 12, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6690, file: !6586, line: 792, column: 17)
!6703 = !DILocation(line: 795, column: 3, scope: !6702)
!6704 = !DILocation(line: 800, column: 12, scope: !6702)
!6705 = !DILocation(line: 801, column: 3, scope: !6702)
!6706 = !DILocation(line: 803, column: 12, scope: !6702)
!6707 = !DILocation(line: 804, column: 3, scope: !6702)
!6708 = !DILocation(line: 806, column: 12, scope: !6702)
!6709 = !DILocation(line: 807, column: 3, scope: !6702)
!6710 = !DILocation(line: 814, column: 3, scope: !6702)
!6711 = !DILocation(line: 815, column: 3, scope: !6702)
!6712 = !DILocation(line: 820, column: 3, scope: !6702)
!6713 = !DILocation(line: 821, column: 3, scope: !6702)
!6714 = !DILocation(line: 829, column: 2, scope: !6690)
!6715 = distinct !DISubprogram(name: "hard_fault", scope: !6586, file: !6586, line: 709, type: !6716, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6718)
!6716 = !DISubroutineType(types: !6717)
!6717 = !{!152, !2757, !6659}
!6718 = !{!6719, !6720, !6721}
!6719 = !DILocalVariable(name: "esf", arg: 1, scope: !6715, file: !6586, line: 709, type: !2757)
!6720 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6715, file: !6586, line: 709, type: !6659)
!6721 = !DILocalVariable(name: "reason", scope: !6715, file: !6586, line: 711, type: !152)
!6722 = !DILocation(line: 0, scope: !6715)
!6723 = !DILocation(line: 713, column: 2, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !6586, line: 713, column: 2)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6586, line: 713, column: 2)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6586, line: 713, column: 2)
!6727 = distinct !DILexicalBlock(scope: !6715, file: !6586, line: 713, column: 2)
!6728 = !DILocation(line: 732, column: 15, scope: !6715)
!6729 = !DILocation(line: 734, column: 12, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6715, file: !6586, line: 734, column: 6)
!6731 = !DILocation(line: 734, column: 17, scope: !6730)
!6732 = !DILocation(line: 734, column: 41, scope: !6730)
!6733 = !DILocation(line: 734, column: 6, scope: !6715)
!6734 = !DILocation(line: 735, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !6586, line: 735, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !6586, line: 735, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6586, line: 735, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6586, line: 735, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6730, file: !6586, line: 734, column: 47)
!6740 = !DILocation(line: 736, column: 2, scope: !6739)
!6741 = !DILocation(line: 736, column: 19, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6730, file: !6586, line: 736, column: 13)
!6743 = !DILocation(line: 736, column: 49, scope: !6742)
!6744 = !DILocation(line: 736, column: 13, scope: !6730)
!6745 = !DILocation(line: 737, column: 3, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6586, line: 737, column: 3)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6586, line: 737, column: 3)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6586, line: 737, column: 3)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6586, line: 737, column: 3)
!6750 = distinct !DILexicalBlock(scope: !6742, file: !6586, line: 736, column: 55)
!6751 = !DILocation(line: 738, column: 2, scope: !6750)
!6752 = !DILocation(line: 738, column: 19, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6742, file: !6586, line: 738, column: 13)
!6754 = !DILocation(line: 738, column: 24, scope: !6753)
!6755 = !DILocation(line: 738, column: 47, scope: !6753)
!6756 = !DILocation(line: 738, column: 13, scope: !6742)
!6757 = !DILocation(line: 739, column: 3, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6586, line: 739, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6586, line: 739, column: 3)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6586, line: 739, column: 3)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6586, line: 739, column: 3)
!6762 = distinct !DILexicalBlock(scope: !6753, file: !6586, line: 738, column: 53)
!6763 = !DILocation(line: 740, column: 7, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6762, file: !6586, line: 740, column: 7)
!6765 = !DILocation(line: 740, column: 7, scope: !6762)
!6766 = !DILocation(line: 741, column: 4, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6586, line: 741, column: 4)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6586, line: 741, column: 4)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6586, line: 741, column: 4)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6586, line: 741, column: 4)
!6771 = distinct !DILexicalBlock(scope: !6764, file: !6586, line: 740, column: 38)
!6772 = !DILocation(line: 742, column: 24, scope: !6771)
!6773 = !DILocation(line: 743, column: 3, scope: !6771)
!6774 = !DILocation(line: 743, column: 20, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6764, file: !6586, line: 743, column: 14)
!6776 = !DILocation(line: 743, column: 25, scope: !6775)
!6777 = !DILocation(line: 743, column: 52, scope: !6775)
!6778 = !DILocation(line: 743, column: 14, scope: !6764)
!6779 = !DILocation(line: 744, column: 13, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6775, file: !6586, line: 743, column: 58)
!6781 = !DILocation(line: 745, column: 3, scope: !6780)
!6782 = !DILocation(line: 745, column: 20, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6775, file: !6586, line: 745, column: 14)
!6784 = !DILocation(line: 745, column: 25, scope: !6783)
!6785 = !DILocation(line: 745, column: 52, scope: !6783)
!6786 = !DILocation(line: 745, column: 14, scope: !6775)
!6787 = !DILocation(line: 746, column: 13, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !6586, line: 745, column: 58)
!6789 = !DILocation(line: 747, column: 3, scope: !6788)
!6790 = !DILocation(line: 747, column: 20, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6783, file: !6586, line: 747, column: 14)
!6792 = !DILocation(line: 747, column: 52, scope: !6791)
!6793 = !DILocation(line: 747, column: 14, scope: !6783)
!6794 = !DILocation(line: 748, column: 13, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6791, file: !6586, line: 747, column: 58)
!6796 = !DILocation(line: 754, column: 4, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6586, line: 754, column: 4)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6586, line: 754, column: 4)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6586, line: 754, column: 4)
!6800 = distinct !DILexicalBlock(scope: !6791, file: !6586, line: 753, column: 10)
!6801 = !DILocation(line: 758, column: 3, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6586, line: 758, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6586, line: 758, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6586, line: 758, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6753, file: !6586, line: 757, column: 9)
!6806 = !DILocation(line: 766, column: 2, scope: !6715)
!6807 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6586, file: !6586, line: 229, type: !6691, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6808)
!6808 = !{!6809, !6810, !6811, !6812, !6813, !6814, !6817}
!6809 = !DILocalVariable(name: "esf", arg: 1, scope: !6807, file: !6586, line: 229, type: !2757)
!6810 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6807, file: !6586, line: 229, type: !107)
!6811 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6807, file: !6586, line: 230, type: !6659)
!6812 = !DILocalVariable(name: "reason", scope: !6807, file: !6586, line: 232, type: !152)
!6813 = !DILocalVariable(name: "mmfar", scope: !6807, file: !6586, line: 233, type: !152)
!6814 = !DILocalVariable(name: "temp", scope: !6815, file: !6586, line: 254, type: !152)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6586, line: 244, column: 48)
!6816 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 244, column: 6)
!6817 = !DILocalVariable(name: "min_stack_ptr", scope: !6818, file: !6586, line: 309, type: !152)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6586, line: 308, column: 43)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6586, line: 308, column: 7)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6586, line: 289, column: 40)
!6821 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 288, column: 6)
!6822 = !DILocation(line: 0, scope: !6807)
!6823 = !DILocation(line: 235, column: 2, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6586, line: 235, column: 2)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6586, line: 235, column: 2)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6586, line: 235, column: 2)
!6827 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 235, column: 2)
!6828 = !DILocation(line: 237, column: 12, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 237, column: 6)
!6830 = !DILocation(line: 237, column: 17, scope: !6829)
!6831 = !DILocation(line: 237, column: 41, scope: !6829)
!6832 = !DILocation(line: 237, column: 6, scope: !6807)
!6833 = !DILocation(line: 238, column: 3, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6586, line: 238, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6586, line: 238, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6586, line: 238, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6586, line: 238, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6829, file: !6586, line: 237, column: 47)
!6839 = !DILocation(line: 240, column: 2, scope: !6838)
!6840 = !DILocation(line: 241, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 241, column: 6)
!6842 = !DILocation(line: 241, column: 17, scope: !6841)
!6843 = !DILocation(line: 241, column: 43, scope: !6841)
!6844 = !DILocation(line: 241, column: 6, scope: !6807)
!6845 = !DILocation(line: 242, column: 3, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6586, line: 242, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6586, line: 242, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6586, line: 242, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6586, line: 242, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6841, file: !6586, line: 241, column: 49)
!6851 = !DILocation(line: 243, column: 2, scope: !6850)
!6852 = !DILocation(line: 244, column: 12, scope: !6816)
!6853 = !DILocation(line: 244, column: 17, scope: !6816)
!6854 = !DILocation(line: 244, column: 42, scope: !6816)
!6855 = !DILocation(line: 244, column: 6, scope: !6807)
!6856 = !DILocation(line: 245, column: 3, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6586, line: 245, column: 3)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !6586, line: 245, column: 3)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6586, line: 245, column: 3)
!6860 = distinct !DILexicalBlock(scope: !6815, file: !6586, line: 245, column: 3)
!6861 = !DILocation(line: 254, column: 24, scope: !6815)
!6862 = !DILocation(line: 0, scope: !6815)
!6863 = !DILocation(line: 256, column: 13, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6815, file: !6586, line: 256, column: 7)
!6865 = !DILocation(line: 256, column: 18, scope: !6864)
!6866 = !DILocation(line: 256, column: 44, scope: !6864)
!6867 = !DILocation(line: 256, column: 7, scope: !6815)
!6868 = !DILocation(line: 258, column: 4, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6586, line: 258, column: 4)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6586, line: 258, column: 4)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6586, line: 258, column: 4)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6586, line: 258, column: 4)
!6873 = distinct !DILexicalBlock(scope: !6864, file: !6586, line: 256, column: 50)
!6874 = !DILocation(line: 259, column: 24, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6873, file: !6586, line: 259, column: 8)
!6876 = !DILocation(line: 259, column: 8, scope: !6873)
!6877 = !DILocation(line: 261, column: 15, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6875, file: !6586, line: 259, column: 30)
!6879 = !DILocation(line: 262, column: 4, scope: !6878)
!6880 = !DILocation(line: 265, column: 12, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 265, column: 6)
!6882 = !DILocation(line: 265, column: 17, scope: !6881)
!6883 = !DILocation(line: 265, column: 42, scope: !6881)
!6884 = !DILocation(line: 265, column: 6, scope: !6807)
!6885 = !DILocation(line: 266, column: 3, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6586, line: 266, column: 3)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6586, line: 266, column: 3)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6586, line: 266, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6586, line: 266, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6881, file: !6586, line: 265, column: 48)
!6891 = !DILocation(line: 267, column: 2, scope: !6890)
!6892 = !DILocation(line: 269, column: 12, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 269, column: 6)
!6894 = !DILocation(line: 269, column: 17, scope: !6893)
!6895 = !DILocation(line: 269, column: 41, scope: !6893)
!6896 = !DILocation(line: 269, column: 6, scope: !6807)
!6897 = !DILocation(line: 270, column: 3, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6586, line: 270, column: 3)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6586, line: 270, column: 3)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6586, line: 270, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6586, line: 270, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6893, file: !6586, line: 269, column: 47)
!6903 = !DILocation(line: 272, column: 2, scope: !6902)
!6904 = !DILocation(line: 288, column: 12, scope: !6821)
!6905 = !DILocation(line: 288, column: 17, scope: !6821)
!6906 = !DILocation(line: 288, column: 41, scope: !6821)
!6907 = !DILocation(line: 289, column: 9, scope: !6821)
!6908 = !DILocation(line: 289, column: 14, scope: !6821)
!6909 = !DILocation(line: 288, column: 6, scope: !6807)
!6910 = !DILocation(line: 308, column: 12, scope: !6819)
!6911 = !DILocation(line: 308, column: 17, scope: !6819)
!6912 = !DILocation(line: 308, column: 7, scope: !6820)
!6913 = !DILocation(line: 310, column: 6, scope: !6818)
!6914 = !DILocation(line: 309, column: 29, scope: !6818)
!6915 = !DILocation(line: 0, scope: !6818)
!6916 = !DILocation(line: 312, column: 8, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6818, file: !6586, line: 312, column: 8)
!6918 = !DILocation(line: 312, column: 8, scope: !6818)
!6919 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6920, file: !6276, line: 1099, type: !152)
!6920 = distinct !DISubprogram(name: "__set_PSP", scope: !6276, file: !6276, line: 1099, type: !6373, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6921)
!6921 = !{!6919}
!6922 = !DILocation(line: 0, scope: !6920, inlinedAt: !6923)
!6923 = distinct !DILocation(line: 338, column: 5, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6917, file: !6586, line: 312, column: 23)
!6925 = !DILocation(line: 1101, column: 3, scope: !6920, inlinedAt: !6923)
!6926 = !{i64 2949835}
!6927 = !DILocation(line: 341, column: 4, scope: !6924)
!6928 = !DILocation(line: 342, column: 5, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6586, line: 342, column: 5)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6586, line: 342, column: 5)
!6931 = distinct !DILexicalBlock(scope: !6917, file: !6586, line: 341, column: 11)
!6932 = !DILocation(line: 342, column: 5, scope: !6930)
!6933 = !DILocation(line: 342, column: 5, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !6586, line: 342, column: 5)
!6935 = !DILocation(line: 360, column: 12, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6807, file: !6586, line: 360, column: 6)
!6937 = !DILocation(line: 360, column: 17, scope: !6936)
!6938 = !DILocation(line: 360, column: 41, scope: !6936)
!6939 = !DILocation(line: 360, column: 6, scope: !6807)
!6940 = !DILocation(line: 361, column: 14, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6936, file: !6586, line: 360, column: 47)
!6942 = !DILocation(line: 362, column: 2, scope: !6941)
!6943 = !DILocation(line: 366, column: 12, scope: !6807)
!6944 = !DILocation(line: 369, column: 15, scope: !6807)
!6945 = !DILocation(line: 371, column: 2, scope: !6807)
!6946 = distinct !DISubprogram(name: "bus_fault", scope: !6586, file: !6586, line: 383, type: !6947, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6949)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!107, !2757, !107, !6659}
!6949 = !{!6950, !6951, !6952, !6953, !6954}
!6950 = !DILocalVariable(name: "esf", arg: 1, scope: !6946, file: !6586, line: 383, type: !2757)
!6951 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6946, file: !6586, line: 383, type: !107)
!6952 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6946, file: !6586, line: 383, type: !6659)
!6953 = !DILocalVariable(name: "reason", scope: !6946, file: !6586, line: 385, type: !152)
!6954 = !DILocalVariable(name: "bfar", scope: !6955, file: !6586, line: 405, type: !152)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6586, line: 395, column: 42)
!6956 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 395, column: 6)
!6957 = !DILocation(line: 0, scope: !6946)
!6958 = !DILocation(line: 387, column: 2, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6586, line: 387, column: 2)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6586, line: 387, column: 2)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6586, line: 387, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 387, column: 2)
!6963 = !DILocation(line: 389, column: 11, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 389, column: 6)
!6965 = !DILocation(line: 389, column: 16, scope: !6964)
!6966 = !DILocation(line: 389, column: 6, scope: !6946)
!6967 = !DILocation(line: 390, column: 3, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6586, line: 390, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6586, line: 390, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6586, line: 390, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6586, line: 390, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6964, file: !6586, line: 389, column: 39)
!6973 = !DILocation(line: 391, column: 2, scope: !6972)
!6974 = !DILocation(line: 392, column: 11, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 392, column: 6)
!6976 = !DILocation(line: 392, column: 16, scope: !6975)
!6977 = !DILocation(line: 392, column: 6, scope: !6946)
!6978 = !DILocation(line: 393, column: 3, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6586, line: 393, column: 3)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6586, line: 393, column: 3)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6586, line: 393, column: 3)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6586, line: 393, column: 3)
!6983 = distinct !DILexicalBlock(scope: !6975, file: !6586, line: 392, column: 41)
!6984 = !DILocation(line: 394, column: 2, scope: !6983)
!6985 = !DILocation(line: 395, column: 11, scope: !6956)
!6986 = !DILocation(line: 395, column: 16, scope: !6956)
!6987 = !DILocation(line: 395, column: 6, scope: !6946)
!6988 = !DILocation(line: 396, column: 3, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6586, line: 396, column: 3)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6586, line: 396, column: 3)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6586, line: 396, column: 3)
!6992 = distinct !DILexicalBlock(scope: !6955, file: !6586, line: 396, column: 3)
!6993 = !DILocation(line: 405, column: 3, scope: !6955)
!6994 = !DILocation(line: 0, scope: !6955)
!6995 = !DILocation(line: 407, column: 13, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6955, file: !6586, line: 407, column: 7)
!6997 = !DILocation(line: 407, column: 18, scope: !6996)
!6998 = !DILocation(line: 407, column: 44, scope: !6996)
!6999 = !DILocation(line: 407, column: 7, scope: !6955)
!7000 = !DILocation(line: 408, column: 4, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6586, line: 408, column: 4)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6586, line: 408, column: 4)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6586, line: 408, column: 4)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6586, line: 408, column: 4)
!7005 = distinct !DILexicalBlock(scope: !6996, file: !6586, line: 407, column: 50)
!7006 = !DILocation(line: 409, column: 24, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7005, file: !6586, line: 409, column: 8)
!7008 = !DILocation(line: 409, column: 8, scope: !7005)
!7009 = !DILocation(line: 411, column: 15, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7007, file: !6586, line: 409, column: 30)
!7011 = !DILocation(line: 412, column: 4, scope: !7010)
!7012 = !DILocation(line: 415, column: 11, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 415, column: 6)
!7014 = !DILocation(line: 415, column: 16, scope: !7013)
!7015 = !DILocation(line: 415, column: 6, scope: !6946)
!7016 = !DILocation(line: 416, column: 3, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6586, line: 416, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6586, line: 416, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6586, line: 416, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6586, line: 416, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7013, file: !6586, line: 415, column: 44)
!7022 = !DILocation(line: 417, column: 2, scope: !7021)
!7023 = !DILocation(line: 418, column: 12, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6946, file: !6586, line: 418, column: 6)
!7025 = !DILocation(line: 418, column: 17, scope: !7024)
!7026 = !DILocation(line: 418, column: 41, scope: !7024)
!7027 = !DILocation(line: 418, column: 6, scope: !6946)
!7028 = !DILocation(line: 423, column: 18, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !6586, line: 423, column: 13)
!7030 = !DILocation(line: 423, column: 23, scope: !7029)
!7031 = !DILocation(line: 423, column: 13, scope: !7024)
!7032 = !DILocation(line: 0, scope: !7024)
!7033 = !DILocation(line: 524, column: 12, scope: !6946)
!7034 = !DILocation(line: 526, column: 15, scope: !6946)
!7035 = !DILocation(line: 528, column: 2, scope: !6946)
!7036 = distinct !DISubprogram(name: "usage_fault", scope: !6586, file: !6586, line: 539, type: !7037, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7041)
!7037 = !DISubroutineType(types: !7038)
!7038 = !{!152, !7039}
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 32)
!7040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2758)
!7041 = !{!7042, !7043}
!7042 = !DILocalVariable(name: "esf", arg: 1, scope: !7036, file: !6586, line: 539, type: !7039)
!7043 = !DILocalVariable(name: "reason", scope: !7036, file: !6586, line: 541, type: !152)
!7044 = !DILocation(line: 0, scope: !7036)
!7045 = !DILocation(line: 543, column: 2, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6586, line: 543, column: 2)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6586, line: 543, column: 2)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6586, line: 543, column: 2)
!7049 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 543, column: 2)
!7050 = !DILocation(line: 546, column: 12, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 546, column: 6)
!7052 = !DILocation(line: 546, column: 17, scope: !7051)
!7053 = !DILocation(line: 546, column: 43, scope: !7051)
!7054 = !DILocation(line: 546, column: 6, scope: !7036)
!7055 = !DILocation(line: 547, column: 3, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6586, line: 547, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6586, line: 547, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6586, line: 547, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6586, line: 547, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7051, file: !6586, line: 546, column: 49)
!7061 = !DILocation(line: 548, column: 2, scope: !7060)
!7062 = !DILocation(line: 549, column: 12, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 549, column: 6)
!7064 = !DILocation(line: 549, column: 17, scope: !7063)
!7065 = !DILocation(line: 549, column: 43, scope: !7063)
!7066 = !DILocation(line: 549, column: 6, scope: !7036)
!7067 = !DILocation(line: 550, column: 3, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6586, line: 550, column: 3)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6586, line: 550, column: 3)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6586, line: 550, column: 3)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6586, line: 550, column: 3)
!7072 = distinct !DILexicalBlock(scope: !7063, file: !6586, line: 549, column: 49)
!7073 = !DILocation(line: 551, column: 2, scope: !7072)
!7074 = !DILocation(line: 567, column: 12, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 567, column: 6)
!7076 = !DILocation(line: 567, column: 17, scope: !7075)
!7077 = !DILocation(line: 567, column: 38, scope: !7075)
!7078 = !DILocation(line: 567, column: 6, scope: !7036)
!7079 = !DILocation(line: 568, column: 3, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6586, line: 568, column: 3)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6586, line: 568, column: 3)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6586, line: 568, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6586, line: 568, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7075, file: !6586, line: 567, column: 44)
!7085 = !DILocation(line: 569, column: 2, scope: !7084)
!7086 = !DILocation(line: 570, column: 12, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 570, column: 6)
!7088 = !DILocation(line: 570, column: 17, scope: !7087)
!7089 = !DILocation(line: 570, column: 39, scope: !7087)
!7090 = !DILocation(line: 570, column: 6, scope: !7036)
!7091 = !DILocation(line: 571, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6586, line: 571, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6586, line: 571, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6586, line: 571, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6586, line: 571, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7087, file: !6586, line: 570, column: 45)
!7097 = !DILocation(line: 572, column: 2, scope: !7096)
!7098 = !DILocation(line: 573, column: 12, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 573, column: 6)
!7100 = !DILocation(line: 573, column: 17, scope: !7099)
!7101 = !DILocation(line: 573, column: 42, scope: !7099)
!7102 = !DILocation(line: 573, column: 6, scope: !7036)
!7103 = !DILocation(line: 574, column: 3, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6586, line: 574, column: 3)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6586, line: 574, column: 3)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6586, line: 574, column: 3)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6586, line: 574, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7099, file: !6586, line: 573, column: 48)
!7109 = !DILocation(line: 575, column: 2, scope: !7108)
!7110 = !DILocation(line: 576, column: 12, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7036, file: !6586, line: 576, column: 6)
!7112 = !DILocation(line: 576, column: 17, scope: !7111)
!7113 = !DILocation(line: 576, column: 44, scope: !7111)
!7114 = !DILocation(line: 576, column: 6, scope: !7036)
!7115 = !DILocation(line: 577, column: 3, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6586, line: 577, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !6586, line: 577, column: 3)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6586, line: 577, column: 3)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6586, line: 577, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7111, file: !6586, line: 576, column: 50)
!7121 = !DILocation(line: 578, column: 2, scope: !7120)
!7122 = !DILocation(line: 581, column: 12, scope: !7036)
!7123 = !DILocation(line: 583, column: 2, scope: !7036)
!7124 = distinct !DISubprogram(name: "debug_monitor", scope: !6586, file: !6586, line: 632, type: !7125, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7127)
!7125 = !DISubroutineType(types: !7126)
!7126 = !{null, !2757, !6659}
!7127 = !{!7128, !7129}
!7128 = !DILocalVariable(name: "esf", arg: 1, scope: !7124, file: !6586, line: 632, type: !2757)
!7129 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7124, file: !6586, line: 632, type: !6659)
!7130 = !DILocation(line: 0, scope: !7124)
!7131 = !DILocation(line: 634, column: 15, scope: !7124)
!7132 = !DILocation(line: 636, column: 2, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !6586, line: 636, column: 2)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6586, line: 636, column: 2)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6586, line: 636, column: 2)
!7136 = distinct !DILexicalBlock(scope: !7124, file: !6586, line: 636, column: 2)
!7137 = !DILocation(line: 652, column: 1, scope: !7124)
!7138 = distinct !DISubprogram(name: "reserved_exception", scope: !6586, file: !6586, line: 776, type: !7139, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{null, !7039, !107}
!7141 = !{!7142, !7143}
!7142 = !DILocalVariable(name: "esf", arg: 1, scope: !7138, file: !6586, line: 776, type: !7039)
!7143 = !DILocalVariable(name: "fault", arg: 2, scope: !7138, file: !6586, line: 776, type: !107)
!7144 = !DILocation(line: 0, scope: !7138)
!7145 = !DILocation(line: 780, column: 2, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !6586, line: 780, column: 2)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6586, line: 780, column: 2)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6586, line: 780, column: 2)
!7149 = distinct !DILexicalBlock(scope: !7138, file: !6586, line: 780, column: 2)
!7150 = !DILocation(line: 783, column: 1, scope: !7138)
!7151 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6586, file: !6586, line: 658, type: !7152, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!145, !2757}
!7154 = !{!7155, !7156, !7157}
!7155 = !DILocalVariable(name: "esf", arg: 1, scope: !7151, file: !6586, line: 658, type: !2757)
!7156 = !DILocalVariable(name: "ret_addr", scope: !7151, file: !6586, line: 660, type: !2800)
!7157 = !DILocalVariable(name: "fault_insn", scope: !7151, file: !6586, line: 686, type: !197)
!7158 = !DILocation(line: 0, scope: !7151)
!7159 = !DILocation(line: 660, column: 46, scope: !7151)
!7160 = !DILocation(line: 660, column: 23, scope: !7151)
!7161 = !DILocation(line: 682, column: 11, scope: !7151)
!7162 = !DILocation(line: 271, column: 3, scope: !7163, inlinedAt: !7164)
!7163 = distinct !DISubprogram(name: "__DSB", scope: !6276, file: !6276, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7164 = distinct !DILocation(line: 683, column: 2, scope: !7151)
!7165 = !{i64 2925970}
!7166 = !DILocation(line: 260, column: 3, scope: !7167, inlinedAt: !7168)
!7167 = distinct !DISubprogram(name: "__ISB", scope: !6276, file: !6276, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7168 = distinct !DILocation(line: 684, column: 2, scope: !7151)
!7169 = !{i64 2925687}
!7170 = !DILocation(line: 686, column: 35, scope: !7151)
!7171 = !DILocation(line: 686, column: 24, scope: !7151)
!7172 = !DILocation(line: 688, column: 11, scope: !7151)
!7173 = !DILocation(line: 271, column: 3, scope: !7163, inlinedAt: !7174)
!7174 = distinct !DILocation(line: 689, column: 2, scope: !7151)
!7175 = !DILocation(line: 260, column: 3, scope: !7167, inlinedAt: !7176)
!7176 = distinct !DILocation(line: 690, column: 2, scope: !7151)
!7177 = !DILocation(line: 693, column: 45, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7151, file: !6586, line: 693, column: 6)
!7179 = !DILocation(line: 699, column: 1, scope: !7151)
!7180 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6586, file: !6586, line: 1107, type: !3111, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7181 = !DILocation(line: 1111, column: 11, scope: !7180)
!7182 = !DILocation(line: 1136, column: 1, scope: !7180)
!7183 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7184, file: !7184, line: 26, type: !3111, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7185)
!7184 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7185 = !{!7186}
!7186 = !DILocalVariable(name: "irq", scope: !7183, file: !7184, line: 28, type: !107)
!7187 = !DILocation(line: 0, scope: !7183)
!7188 = !DILocation(line: 30, column: 2, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7183, file: !7184, line: 30, column: 2)
!7190 = !DILocation(line: 31, column: 3, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !7184, line: 30, column: 39)
!7192 = distinct !DILexicalBlock(scope: !7189, file: !7184, line: 30, column: 2)
!7193 = !DILocation(line: 30, column: 35, scope: !7192)
!7194 = !DILocation(line: 30, column: 13, scope: !7192)
!7195 = distinct !{!7195, !7188, !7196}
!7196 = !DILocation(line: 32, column: 2, scope: !7189)
!7197 = !DILocation(line: 33, column: 1, scope: !7183)
!7198 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6316, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7199)
!7199 = !{!7200, !7201}
!7200 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7198, file: !463, line: 1814, type: !900)
!7201 = !DILocalVariable(name: "priority", arg: 2, scope: !7198, file: !463, line: 1814, type: !152)
!7202 = !DILocation(line: 0, scope: !7198)
!7203 = !DILocation(line: 1816, column: 7, scope: !7198)
!7204 = !DILocation(line: 0, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7198, file: !463, line: 1816, column: 7)
!7206 = !DILocation(line: 1824, column: 1, scope: !7198)
!7207 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7208, file: !7208, line: 27, type: !7209, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7315)
!7208 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7209 = !DISubroutineType(types: !7210)
!7210 = !{null, !7211}
!7211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7212)
!7212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7213, size: 32)
!7213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7214)
!7214 = !{!7215, !7273, !7285, !7286, !7287, !7288, !7289, !7295, !7310}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7213, file: !309, line: 247, baseType: !7216, size: 384)
!7216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7217)
!7217 = !{!7218, !7242, !7249, !7250, !7251, !7260, !7261, !7262}
!7218 = !DIDerivedType(tag: DW_TAG_member, scope: !7216, file: !309, line: 60, baseType: !7219, size: 64)
!7219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7216, file: !309, line: 60, size: 64, elements: !7220)
!7220 = !{!7221, !7236}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7219, file: !309, line: 61, baseType: !7222, size: 64)
!7222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7223)
!7223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7224)
!7224 = !{!7225, !7231}
!7225 = !DIDerivedType(tag: DW_TAG_member, scope: !7223, file: !319, line: 38, baseType: !7226, size: 32)
!7226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7223, file: !319, line: 38, size: 32, elements: !7227)
!7227 = !{!7228, !7230}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7226, file: !319, line: 39, baseType: !7229, size: 32)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 32)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7226, file: !319, line: 40, baseType: !7229, size: 32)
!7231 = !DIDerivedType(tag: DW_TAG_member, scope: !7223, file: !319, line: 42, baseType: !7232, size: 32, offset: 32)
!7232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7223, file: !319, line: 42, size: 32, elements: !7233)
!7233 = !{!7234, !7235}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7232, file: !319, line: 43, baseType: !7229, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7232, file: !319, line: 44, baseType: !7229, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7219, file: !309, line: 62, baseType: !7237, size: 64)
!7237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7238)
!7238 = !{!7239}
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7237, file: !335, line: 50, baseType: !7240, size: 64)
!7240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7241, size: 64, elements: !340)
!7241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7237, size: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7216, file: !309, line: 68, baseType: !7243, size: 32, offset: 64)
!7243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7244, size: 32)
!7244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7245)
!7245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7246)
!7246 = !{!7247}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7245, file: !345, line: 232, baseType: !7248, size: 64)
!7248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7223)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7216, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7216, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7251 = !DIDerivedType(tag: DW_TAG_member, scope: !7216, file: !309, line: 90, baseType: !7252, size: 16, offset: 112)
!7252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7216, file: !309, line: 90, size: 16, elements: !7253)
!7253 = !{!7254, !7259}
!7254 = !DIDerivedType(tag: DW_TAG_member, scope: !7252, file: !309, line: 91, baseType: !7255, size: 16)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7252, file: !309, line: 91, size: 16, elements: !7256)
!7256 = !{!7257, !7258}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7255, file: !309, line: 96, baseType: !359, size: 8)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7255, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7252, file: !309, line: 100, baseType: !197, size: 16)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7216, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7216, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7216, file: !309, line: 131, baseType: !7263, size: 192, offset: 192)
!7263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7264)
!7264 = !{!7265, !7266, !7272}
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7263, file: !345, line: 245, baseType: !7222, size: 64)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7263, file: !345, line: 246, baseType: !7267, size: 32, offset: 64)
!7267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7268)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7269, size: 32)
!7269 = !DISubroutineType(types: !7270)
!7270 = !{null, !7271}
!7271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7263, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7263, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7213, file: !309, line: 250, baseType: !7274, size: 288, offset: 384)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7275)
!7275 = !{!7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7274, file: !379, line: 26, baseType: !152, size: 32)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7274, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7274, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7274, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7274, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7274, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7274, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7274, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7274, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7213, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7213, file: !309, line: 256, baseType: !7244, size: 64, offset: 704)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7213, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7213, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7213, file: !309, line: 300, baseType: !7290, size: 96, offset: 1056)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7291)
!7291 = !{!7292, !7293, !7294}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7290, file: !309, line: 153, baseType: !22, size: 32)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7290, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7290, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7213, file: !309, line: 325, baseType: !7296, size: 32, offset: 1152)
!7296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7297, size: 32)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7298)
!7298 = !{!7299, !7305, !7306}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7297, file: !406, line: 5074, baseType: !7300, size: 96)
!7300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7301)
!7301 = !{!7302, !7303, !7304}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7300, file: !410, line: 57, baseType: !413, size: 32)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7300, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7300, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7297, file: !406, line: 5075, baseType: !7244, size: 64, offset: 96)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7297, file: !406, line: 5076, baseType: !7307, size: 32, offset: 160)
!7307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7308)
!7308 = !{!7309}
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7307, file: !420, line: 52, baseType: !22, size: 32)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7213, file: !309, line: 343, baseType: !7311, size: 64, offset: 1184)
!7311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7312)
!7312 = !{!7313, !7314}
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7311, file: !379, line: 63, baseType: !152, size: 32)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7311, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7315 = !{!7316}
!7316 = !DILocalVariable(name: "thread", arg: 1, scope: !7207, file: !7208, line: 27, type: !7211)
!7317 = !DILocation(line: 0, scope: !7207)
!7318 = !DILocation(line: 29, column: 6, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7207, file: !7208, line: 29, column: 6)
!7320 = !DILocation(line: 29, column: 15, scope: !7319)
!7321 = !DILocation(line: 29, column: 6, scope: !7207)
!7322 = !DILocation(line: 1031, column: 3, scope: !7323, inlinedAt: !7326)
!7323 = distinct !DISubprogram(name: "__get_IPSR", scope: !6276, file: !6276, line: 1027, type: !6363, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7324)
!7324 = !{!7325}
!7325 = !DILocalVariable(name: "result", scope: !7323, file: !6276, line: 1029, type: !152)
!7326 = distinct !DILocation(line: 48, column: 10, scope: !7327, inlinedAt: !7331)
!7327 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7328, file: !7328, line: 46, type: !7329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !2182)
!7328 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!145}
!7331 = distinct !DILocation(line: 30, column: 7, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !7208, line: 30, column: 7)
!7333 = distinct !DILexicalBlock(scope: !7319, file: !7208, line: 29, column: 26)
!7334 = !{i64 2914818}
!7335 = !DILocation(line: 0, scope: !7323, inlinedAt: !7326)
!7336 = !DILocation(line: 48, column: 9, scope: !7327, inlinedAt: !7331)
!7337 = !DILocation(line: 30, column: 7, scope: !7333)
!7338 = !DILocation(line: 42, column: 14, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7332, file: !7208, line: 30, column: 25)
!7340 = !DILocation(line: 48, column: 15, scope: !7339)
!7341 = !DILocation(line: 49, column: 3, scope: !7339)
!7342 = !DILocation(line: 52, column: 2, scope: !7207)
!7343 = !DILocation(line: 53, column: 1, scope: !7207)
!7344 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3111, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2182)
!7345 = !DILocation(line: 134, column: 2, scope: !7344)
!7346 = !DILocation(line: 156, column: 1, scope: !7344)
!7347 = !DILocation(line: 0, scope: !303)
!7348 = !DILocation(line: 289, column: 36, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7350 = !DILocation(line: 289, column: 42, scope: !7349)
!7351 = !DILocation(line: 300, column: 36, scope: !303)
!7352 = !DILocation(line: 301, column: 35, scope: !303)
!7353 = !DILocation(line: 302, column: 37, scope: !303)
!7354 = !DILocation(line: 311, column: 2, scope: !303)
!7355 = !DILocation(line: 316, column: 1, scope: !303)
!7356 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3111, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7357 = !DILocation(line: 188, column: 12, scope: !7356)
!7358 = !DILocation(line: 271, column: 3, scope: !7359, inlinedAt: !7360)
!7359 = distinct !DISubprogram(name: "__DSB", scope: !6276, file: !6276, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7360 = distinct !DILocation(line: 192, column: 2, scope: !7356)
!7361 = !{i64 3090833}
!7362 = !DILocation(line: 260, column: 3, scope: !7363, inlinedAt: !7364)
!7363 = distinct !DISubprogram(name: "__ISB", scope: !6276, file: !6276, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7364 = distinct !DILocation(line: 193, column: 2, scope: !7356)
!7365 = !{i64 3090550}
!7366 = !DILocation(line: 194, column: 1, scope: !7356)
!7367 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3111, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7368 = !DILocation(line: 282, column: 3, scope: !7369, inlinedAt: !7370)
!7369 = distinct !DISubprogram(name: "__DMB", scope: !6276, file: !6276, line: 280, type: !3111, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7370 = distinct !DILocation(line: 202, column: 2, scope: !7367)
!7371 = !{i64 3091109}
!7372 = !DILocation(line: 205, column: 12, scope: !7367)
!7373 = !DILocation(line: 206, column: 1, scope: !7367)
!7374 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7375, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7388)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{null, !7377, !1964, !6553, !6553}
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 32)
!7378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7379)
!7379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7380)
!7380 = !{!7381, !7382, !7383}
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7379, file: !435, line: 53, baseType: !22, size: 32)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7379, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7379, file: !435, line: 55, baseType: !7384, size: 32, offset: 64)
!7384 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7385)
!7385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7386)
!7386 = !{!7387}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7385, file: !441, line: 150, baseType: !152, size: 32)
!7388 = !{!7389, !7390, !7391, !7392}
!7389 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7374, file: !491, line: 276, type: !7377)
!7390 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7374, file: !491, line: 276, type: !1964)
!7391 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7374, file: !491, line: 277, type: !6553)
!7392 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7374, file: !491, line: 277, type: !6553)
!7393 = !DILocation(line: 0, scope: !7374)
!7394 = !DILocation(line: 279, column: 6, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7374, file: !491, line: 279, column: 6)
!7396 = !DILocation(line: 280, column: 57, scope: !7395)
!7397 = !DILocation(line: 279, column: 6, scope: !7374)
!7398 = !DILocation(line: 282, column: 3, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !491, line: 282, column: 3)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !491, line: 282, column: 3)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !491, line: 282, column: 3)
!7402 = distinct !DILexicalBlock(scope: !7395, file: !491, line: 280, column: 69)
!7403 = !DILocation(line: 285, column: 1, scope: !7374)
!7404 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7405, file: !7405, line: 220, type: !7406, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7408)
!7405 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7406 = !DISubroutineType(types: !7407)
!7407 = !{!107, !7377, !1964, !6553, !6553}
!7408 = !{!7409, !7410, !7411, !7412, !7413}
!7409 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7404, file: !7405, line: 221, type: !7377)
!7410 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7404, file: !7405, line: 221, type: !1964)
!7411 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7404, file: !7405, line: 222, type: !6553)
!7412 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7404, file: !7405, line: 223, type: !6553)
!7413 = !DILocalVariable(name: "mpu_reg_index", scope: !7404, file: !7405, line: 225, type: !107)
!7414 = !DILocation(line: 0, scope: !7404)
!7415 = !DILocation(line: 225, column: 22, scope: !7404)
!7416 = !DILocation(line: 233, column: 18, scope: !7404)
!7417 = !DILocation(line: 236, column: 23, scope: !7404)
!7418 = !DILocation(line: 236, column: 21, scope: !7404)
!7419 = !DILocation(line: 238, column: 2, scope: !7404)
!7420 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7421, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7423)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!107, !7377, !195, !195, !145}
!7423 = !{!7424, !7425, !7426, !7427, !7428, !7429}
!7424 = !DILocalVariable(name: "regions", arg: 1, scope: !7420, file: !491, line: 106, type: !7377)
!7425 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7420, file: !491, line: 106, type: !195)
!7426 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7420, file: !491, line: 106, type: !195)
!7427 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7420, file: !491, line: 107, type: !145)
!7428 = !DILocalVariable(name: "i", scope: !7420, file: !491, line: 109, type: !107)
!7429 = !DILocalVariable(name: "reg_index", scope: !7420, file: !491, line: 110, type: !107)
!7430 = !DILocation(line: 0, scope: !7420)
!7431 = !DILocation(line: 110, column: 18, scope: !7420)
!7432 = !DILocation(line: 112, column: 16, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !491, line: 112, column: 2)
!7434 = distinct !DILexicalBlock(scope: !7420, file: !491, line: 112, column: 2)
!7435 = !DILocation(line: 112, column: 2, scope: !7434)
!7436 = !DILocation(line: 113, column: 7, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !491, line: 113, column: 7)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !491, line: 112, column: 36)
!7439 = !DILocation(line: 113, column: 18, scope: !7437)
!7440 = !DILocation(line: 113, column: 23, scope: !7437)
!7441 = !DILocation(line: 113, column: 7, scope: !7438)
!7442 = !DILocation(line: 118, column: 23, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7438, file: !491, line: 118, column: 7)
!7444 = !DILocation(line: 119, column: 7, scope: !7443)
!7445 = !DILocation(line: 118, column: 7, scope: !7438)
!7446 = !DILocation(line: 120, column: 4, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7448, file: !491, line: 120, column: 4)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !491, line: 120, column: 4)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !491, line: 120, column: 4)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !491, line: 120, column: 4)
!7451 = distinct !DILexicalBlock(scope: !7443, file: !491, line: 119, column: 45)
!7452 = !DILocation(line: 121, column: 4, scope: !7451)
!7453 = !DILocation(line: 124, column: 36, scope: !7438)
!7454 = !DILocation(line: 124, column: 15, scope: !7438)
!7455 = !DILocation(line: 126, column: 17, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7438, file: !491, line: 126, column: 7)
!7457 = !DILocation(line: 126, column: 7, scope: !7438)
!7458 = !DILocation(line: 131, column: 12, scope: !7438)
!7459 = !DILocation(line: 132, column: 2, scope: !7438)
!7460 = !DILocation(line: 112, column: 32, scope: !7433)
!7461 = distinct !{!7461, !7435, !7462}
!7462 = !DILocation(line: 132, column: 2, scope: !7434)
!7463 = !DILocation(line: 135, column: 1, scope: !7420)
!7464 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7405, file: !7405, line: 63, type: !7465, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7467)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{!107, !7377}
!7467 = !{!7468, !7469}
!7468 = !DILocalVariable(name: "part", arg: 1, scope: !7464, file: !7405, line: 63, type: !7377)
!7469 = !DILocalVariable(name: "partition_is_valid", scope: !7464, file: !7405, line: 70, type: !107)
!7470 = !DILocation(line: 0, scope: !7464)
!7471 = !DILocation(line: 71, column: 11, scope: !7464)
!7472 = !DILocation(line: 71, column: 37, scope: !7464)
!7473 = !{i32 0, i32 33}
!7474 = !DILocation(line: 72, column: 3, scope: !7464)
!7475 = !DILocation(line: 71, column: 30, scope: !7464)
!7476 = !DILocation(line: 75, column: 11, scope: !7464)
!7477 = !DILocation(line: 75, column: 17, scope: !7464)
!7478 = !DILocation(line: 75, column: 38, scope: !7464)
!7479 = !DILocation(line: 77, column: 2, scope: !7464)
!7480 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7481, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7483)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!107, !1964, !7377}
!7483 = !{!7484, !7485, !7486}
!7484 = !DILocalVariable(name: "index", arg: 1, scope: !7480, file: !491, line: 79, type: !1964)
!7485 = !DILocalVariable(name: "new_region", arg: 2, scope: !7480, file: !491, line: 80, type: !7377)
!7486 = !DILocalVariable(name: "region_conf", scope: !7480, file: !491, line: 82, type: !480)
!7487 = !DILocation(line: 0, scope: !7480)
!7488 = !DILocation(line: 82, column: 2, scope: !7480)
!7489 = !DILocation(line: 82, column: 24, scope: !7480)
!7490 = !DILocation(line: 87, column: 33, scope: !7480)
!7491 = !DILocation(line: 87, column: 14, scope: !7480)
!7492 = !DILocation(line: 87, column: 19, scope: !7480)
!7493 = !DILocation(line: 91, column: 55, scope: !7480)
!7494 = !DILocation(line: 92, column: 16, scope: !7480)
!7495 = !DILocation(line: 92, column: 53, scope: !7480)
!7496 = !DILocation(line: 91, column: 2, scope: !7480)
!7497 = !DILocation(line: 95, column: 9, scope: !7480)
!7498 = !DILocation(line: 97, column: 1, scope: !7480)
!7499 = !DILocation(line: 95, column: 2, scope: !7480)
!7500 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7405, file: !7405, line: 113, type: !7501, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7506)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{null, !7503, !7504, !152, !152}
!7503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7505, size: 32)
!7505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7384)
!7506 = !{!7507, !7508, !7509, !7510}
!7507 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7500, file: !7405, line: 114, type: !7503)
!7508 = !DILocalVariable(name: "attr", arg: 2, scope: !7500, file: !7405, line: 115, type: !7504)
!7509 = !DILocalVariable(name: "base", arg: 3, scope: !7500, file: !7405, line: 115, type: !152)
!7510 = !DILocalVariable(name: "size", arg: 4, scope: !7500, file: !7405, line: 115, type: !152)
!7511 = !DILocation(line: 0, scope: !7500)
!7512 = !DILocation(line: 127, column: 23, scope: !7500)
!7513 = !DILocation(line: 127, column: 35, scope: !7500)
!7514 = !DILocation(line: 127, column: 33, scope: !7500)
!7515 = !DILocation(line: 127, column: 10, scope: !7500)
!7516 = !DILocation(line: 127, column: 15, scope: !7500)
!7517 = !DILocation(line: 129, column: 1, scope: !7500)
!7518 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7519, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!107, !1964, !478}
!7521 = !{!7522, !7523}
!7522 = !DILocalVariable(name: "index", arg: 1, scope: !7518, file: !491, line: 57, type: !1964)
!7523 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7518, file: !491, line: 58, type: !478)
!7524 = !DILocation(line: 0, scope: !7518)
!7525 = !DILocation(line: 61, column: 6, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7518, file: !491, line: 61, column: 6)
!7527 = !DILocation(line: 61, column: 12, scope: !7526)
!7528 = !DILocation(line: 61, column: 6, scope: !7518)
!7529 = !DILocation(line: 64, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !491, line: 64, column: 3)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !491, line: 64, column: 3)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !491, line: 64, column: 3)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !491, line: 64, column: 3)
!7534 = distinct !DILexicalBlock(scope: !7526, file: !491, line: 61, column: 40)
!7535 = !DILocation(line: 65, column: 3, scope: !7534)
!7536 = !DILocation(line: 71, column: 2, scope: !7518)
!7537 = !DILocation(line: 73, column: 2, scope: !7518)
!7538 = !DILocation(line: 74, column: 1, scope: !7518)
!7539 = distinct !DISubprogram(name: "region_init", scope: !7405, file: !7405, line: 29, type: !7540, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{null, !6553, !478}
!7542 = !{!7543, !7544}
!7543 = !DILocalVariable(name: "index", arg: 1, scope: !7539, file: !7405, line: 29, type: !6553)
!7544 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7539, file: !7405, line: 30, type: !478)
!7545 = !DILocation(line: 0, scope: !7539)
!7546 = !DILocation(line: 33, column: 2, scope: !7539)
!7547 = !DILocation(line: 47, column: 28, scope: !7539)
!7548 = !DILocation(line: 47, column: 33, scope: !7539)
!7549 = !DILocation(line: 48, column: 26, scope: !7539)
!7550 = !DILocation(line: 47, column: 12, scope: !7539)
!7551 = !DILocation(line: 49, column: 32, scope: !7539)
!7552 = !DILocation(line: 49, column: 37, scope: !7539)
!7553 = !DILocation(line: 49, column: 12, scope: !7539)
!7554 = !DILocation(line: 53, column: 1, scope: !7539)
!7555 = distinct !DISubprogram(name: "set_region_number", scope: !7556, file: !7556, line: 32, type: !6373, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7557)
!7556 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7557 = !{!7558}
!7558 = !DILocalVariable(name: "index", arg: 1, scope: !7555, file: !7556, line: 32, type: !152)
!7559 = !DILocation(line: 0, scope: !7555)
!7560 = !DILocation(line: 34, column: 11, scope: !7555)
!7561 = !DILocation(line: 35, column: 1, scope: !7555)
!7562 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7405, file: !7405, line: 88, type: !7563, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!152, !152}
!7565 = !{!7566}
!7566 = !DILocalVariable(name: "size", arg: 1, scope: !7562, file: !7405, line: 88, type: !152)
!7567 = !DILocation(line: 0, scope: !7562)
!7568 = !DILocation(line: 91, column: 11, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7562, file: !7405, line: 91, column: 6)
!7570 = !DILocation(line: 91, column: 6, scope: !7562)
!7571 = !DILocation(line: 100, column: 11, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7562, file: !7405, line: 100, column: 6)
!7573 = !DILocation(line: 100, column: 6, scope: !7562)
!7574 = !DILocation(line: 104, column: 35, scope: !7562)
!7575 = !DILocation(line: 104, column: 16, scope: !7562)
!7576 = !DILocation(line: 104, column: 50, scope: !7562)
!7577 = !DILocation(line: 104, column: 72, scope: !7562)
!7578 = !DILocation(line: 104, column: 2, scope: !7562)
!7579 = !DILocation(line: 106, column: 1, scope: !7562)
!7580 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7581, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7583)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !7377, !195}
!7583 = !{!7584, !7585}
!7584 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7580, file: !491, line: 308, type: !7377)
!7585 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7580, file: !491, line: 308, type: !195)
!7586 = !DILocation(line: 0, scope: !7580)
!7587 = !DILocation(line: 310, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7580, file: !491, line: 310, column: 6)
!7589 = !DILocation(line: 311, column: 3, scope: !7588)
!7590 = !DILocation(line: 310, column: 6, scope: !7580)
!7591 = !DILocation(line: 313, column: 3, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !491, line: 313, column: 3)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !491, line: 313, column: 3)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !491, line: 313, column: 3)
!7595 = distinct !DILexicalBlock(scope: !7588, file: !491, line: 311, column: 15)
!7596 = !DILocation(line: 316, column: 1, scope: !7580)
!7597 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7405, file: !7405, line: 249, type: !7598, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7600)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!107, !7377, !195}
!7600 = !{!7601, !7602, !7603, !7604}
!7601 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7597, file: !7405, line: 250, type: !7377)
!7602 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7597, file: !7405, line: 250, type: !195)
!7603 = !DILocalVariable(name: "mpu_reg_index", scope: !7597, file: !7405, line: 252, type: !107)
!7604 = !DILocalVariable(name: "i", scope: !7605, file: !7405, line: 264, type: !107)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !7405, line: 264, column: 3)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !7405, line: 261, column: 32)
!7607 = distinct !DILexicalBlock(scope: !7597, file: !7405, line: 261, column: 6)
!7608 = !DILocation(line: 0, scope: !7597)
!7609 = !DILocation(line: 252, column: 22, scope: !7597)
!7610 = !DILocation(line: 258, column: 18, scope: !7597)
!7611 = !DILocation(line: 261, column: 20, scope: !7607)
!7612 = !DILocation(line: 261, column: 6, scope: !7597)
!7613 = !DILocation(line: 0, scope: !7605)
!7614 = !DILocation(line: 265, column: 4, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7616, file: !7405, line: 264, column: 59)
!7616 = distinct !DILexicalBlock(scope: !7605, file: !7405, line: 264, column: 3)
!7617 = !DILocation(line: 264, column: 55, scope: !7616)
!7618 = !DILocation(line: 264, column: 33, scope: !7616)
!7619 = !DILocation(line: 264, column: 3, scope: !7605)
!7620 = distinct !{!7620, !7619, !7621}
!7621 = !DILocation(line: 266, column: 3, scope: !7605)
!7622 = !DILocation(line: 269, column: 2, scope: !7597)
!7623 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7624, file: !7624, line: 218, type: !6373, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7625)
!7624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7625 = !{!7626}
!7626 = !DILocalVariable(name: "rnr", arg: 1, scope: !7623, file: !7624, line: 218, type: !152)
!7627 = !DILocation(line: 0, scope: !7623)
!7628 = !DILocation(line: 220, column: 12, scope: !7623)
!7629 = !DILocation(line: 221, column: 13, scope: !7623)
!7630 = !DILocation(line: 222, column: 1, scope: !7623)
!7631 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7632, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7634)
!7632 = !DISubroutineType(types: !7633)
!7633 = !{!107}
!7634 = !{!7635}
!7635 = !DILocalVariable(name: "r_index", scope: !7631, file: !491, line: 328, type: !152)
!7636 = !DILocation(line: 330, column: 17, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7631, file: !491, line: 330, column: 6)
!7638 = !DILocation(line: 330, column: 29, scope: !7637)
!7639 = !DILocation(line: 330, column: 6, scope: !7631)
!7640 = !DILocation(line: 337, column: 3, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !491, line: 337, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !491, line: 337, column: 3)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !491, line: 337, column: 3)
!7644 = distinct !DILexicalBlock(scope: !7637, file: !491, line: 330, column: 50)
!7645 = !DILocation(line: 347, column: 2, scope: !7631)
!7646 = !DILocation(line: 0, scope: !7631)
!7647 = !DILocation(line: 364, column: 29, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !491, line: 364, column: 2)
!7649 = distinct !DILexicalBlock(scope: !7631, file: !491, line: 364, column: 2)
!7650 = !DILocation(line: 364, column: 2, scope: !7649)
!7651 = !DILocation(line: 365, column: 25, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7648, file: !491, line: 364, column: 66)
!7653 = !DILocation(line: 365, column: 3, scope: !7652)
!7654 = !DILocation(line: 364, column: 62, scope: !7648)
!7655 = distinct !{!7655, !7650, !7656}
!7656 = !DILocation(line: 366, column: 2, scope: !7649)
!7657 = !DILocation(line: 369, column: 23, scope: !7631)
!7658 = !DILocation(line: 369, column: 21, scope: !7631)
!7659 = !DILocation(line: 372, column: 2, scope: !7631)
!7660 = !DILocation(line: 433, column: 2, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !491, line: 433, column: 2)
!7662 = distinct !DILexicalBlock(scope: !7631, file: !491, line: 433, column: 2)
!7663 = !DILocation(line: 433, column: 2, scope: !7662)
!7664 = !DILocation(line: 433, column: 2, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7661, file: !491, line: 433, column: 2)
!7666 = !DILocation(line: 444, column: 1, scope: !7631)
!7667 = distinct !DISubprogram(name: "strcpy", scope: !7668, file: !7668, line: 20, type: !7669, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7673)
!7668 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!193, !7671, !7672}
!7671 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7672 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7673 = !{!7674, !7675, !7676}
!7674 = !DILocalVariable(name: "d", arg: 1, scope: !7667, file: !7668, line: 20, type: !7671)
!7675 = !DILocalVariable(name: "s", arg: 2, scope: !7667, file: !7668, line: 20, type: !7672)
!7676 = !DILocalVariable(name: "dest", scope: !7667, file: !7668, line: 22, type: !193)
!7677 = !DILocation(line: 0, scope: !7667)
!7678 = !DILocation(line: 24, column: 9, scope: !7667)
!7679 = !DILocation(line: 24, column: 12, scope: !7667)
!7680 = !DILocation(line: 24, column: 2, scope: !7667)
!7681 = !DILocation(line: 25, column: 6, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7667, file: !7668, line: 24, column: 21)
!7683 = !DILocation(line: 26, column: 4, scope: !7682)
!7684 = !DILocation(line: 27, column: 4, scope: !7682)
!7685 = distinct !{!7685, !7680, !7686}
!7686 = !DILocation(line: 28, column: 2, scope: !7667)
!7687 = !DILocation(line: 30, column: 5, scope: !7667)
!7688 = !DILocation(line: 32, column: 2, scope: !7667)
!7689 = distinct !DISubprogram(name: "strncpy", scope: !7668, file: !7668, line: 42, type: !7690, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7692)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!193, !7671, !7672, !185}
!7692 = !{!7693, !7694, !7695, !7696}
!7693 = !DILocalVariable(name: "d", arg: 1, scope: !7689, file: !7668, line: 42, type: !7671)
!7694 = !DILocalVariable(name: "s", arg: 2, scope: !7689, file: !7668, line: 42, type: !7672)
!7695 = !DILocalVariable(name: "n", arg: 3, scope: !7689, file: !7668, line: 42, type: !185)
!7696 = !DILocalVariable(name: "dest", scope: !7689, file: !7668, line: 44, type: !193)
!7697 = !DILocation(line: 0, scope: !7689)
!7698 = !DILocation(line: 46, column: 12, scope: !7689)
!7699 = !DILocation(line: 46, column: 17, scope: !7689)
!7700 = !DILocation(line: 46, column: 20, scope: !7689)
!7701 = !DILocation(line: 46, column: 23, scope: !7689)
!7702 = !DILocation(line: 46, column: 2, scope: !7689)
!7703 = !DILocation(line: 47, column: 6, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7689, file: !7668, line: 46, column: 32)
!7705 = !DILocation(line: 48, column: 4, scope: !7704)
!7706 = !DILocation(line: 49, column: 4, scope: !7704)
!7707 = !DILocation(line: 50, column: 4, scope: !7704)
!7708 = distinct !{!7708, !7702, !7709}
!7709 = !DILocation(line: 51, column: 2, scope: !7689)
!7710 = !DILocation(line: 54, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7689, file: !7668, line: 53, column: 16)
!7712 = !DILocation(line: 55, column: 4, scope: !7711)
!7713 = !DILocation(line: 56, column: 4, scope: !7711)
!7714 = !DILocation(line: 53, column: 11, scope: !7689)
!7715 = !DILocation(line: 53, column: 2, scope: !7689)
!7716 = distinct !{!7716, !7715, !7717}
!7717 = !DILocation(line: 57, column: 2, scope: !7689)
!7718 = !DILocation(line: 59, column: 2, scope: !7689)
!7719 = distinct !DISubprogram(name: "strchr", scope: !7668, file: !7668, line: 69, type: !7720, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7722)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!193, !118, !107}
!7722 = !{!7723, !7724, !7725}
!7723 = !DILocalVariable(name: "s", arg: 1, scope: !7719, file: !7668, line: 69, type: !118)
!7724 = !DILocalVariable(name: "c", arg: 2, scope: !7719, file: !7668, line: 69, type: !107)
!7725 = !DILocalVariable(name: "tmp", scope: !7719, file: !7668, line: 71, type: !120)
!7726 = !DILocation(line: 0, scope: !7719)
!7727 = !DILocation(line: 73, column: 2, scope: !7719)
!7728 = !DILocation(line: 73, column: 10, scope: !7719)
!7729 = !DILocation(line: 73, column: 13, scope: !7719)
!7730 = !DILocation(line: 73, column: 21, scope: !7719)
!7731 = !DILocation(line: 74, column: 4, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7719, file: !7668, line: 73, column: 38)
!7733 = distinct !{!7733, !7727, !7734}
!7734 = !DILocation(line: 75, column: 2, scope: !7719)
!7735 = !DILocation(line: 77, column: 9, scope: !7719)
!7736 = !DILocation(line: 77, column: 2, scope: !7719)
!7737 = distinct !DISubprogram(name: "strrchr", scope: !7668, file: !7668, line: 87, type: !7720, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7738)
!7738 = !{!7739, !7740, !7741}
!7739 = !DILocalVariable(name: "s", arg: 1, scope: !7737, file: !7668, line: 87, type: !118)
!7740 = !DILocalVariable(name: "c", arg: 2, scope: !7737, file: !7668, line: 87, type: !107)
!7741 = !DILocalVariable(name: "match", scope: !7737, file: !7668, line: 89, type: !193)
!7742 = !DILocation(line: 0, scope: !7737)
!7743 = !DILocation(line: 91, column: 2, scope: !7737)
!7744 = !DILocation(line: 92, column: 7, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7668, line: 92, column: 7)
!7746 = distinct !DILexicalBlock(scope: !7737, file: !7668, line: 91, column: 5)
!7747 = !DILocation(line: 92, column: 10, scope: !7745)
!7748 = !DILocation(line: 92, column: 7, scope: !7746)
!7749 = !DILocation(line: 95, column: 13, scope: !7737)
!7750 = !DILocation(line: 95, column: 2, scope: !7746)
!7751 = distinct !{!7751, !7743, !7752}
!7752 = !DILocation(line: 95, column: 15, scope: !7737)
!7753 = !DILocation(line: 97, column: 2, scope: !7737)
!7754 = distinct !DISubprogram(name: "strlen", scope: !7668, file: !7668, line: 107, type: !7755, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7757)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!185, !118}
!7757 = !{!7758, !7759}
!7758 = !DILocalVariable(name: "s", arg: 1, scope: !7754, file: !7668, line: 107, type: !118)
!7759 = !DILocalVariable(name: "n", scope: !7754, file: !7668, line: 109, type: !185)
!7760 = !DILocation(line: 0, scope: !7754)
!7761 = !DILocation(line: 111, column: 9, scope: !7754)
!7762 = !DILocation(line: 111, column: 12, scope: !7754)
!7763 = !DILocation(line: 111, column: 2, scope: !7754)
!7764 = !DILocation(line: 112, column: 4, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7754, file: !7668, line: 111, column: 21)
!7766 = !DILocation(line: 113, column: 4, scope: !7765)
!7767 = distinct !{!7767, !7763, !7768}
!7768 = !DILocation(line: 114, column: 2, scope: !7754)
!7769 = !DILocation(line: 116, column: 2, scope: !7754)
!7770 = distinct !DISubprogram(name: "strnlen", scope: !7668, file: !7668, line: 126, type: !7771, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!185, !118, !185}
!7773 = !{!7774, !7775, !7776}
!7774 = !DILocalVariable(name: "s", arg: 1, scope: !7770, file: !7668, line: 126, type: !118)
!7775 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7770, file: !7668, line: 126, type: !185)
!7776 = !DILocalVariable(name: "n", scope: !7770, file: !7668, line: 128, type: !185)
!7777 = !DILocation(line: 0, scope: !7770)
!7778 = !DILocation(line: 130, column: 9, scope: !7770)
!7779 = !DILocation(line: 130, column: 12, scope: !7770)
!7780 = !DILocation(line: 130, column: 20, scope: !7770)
!7781 = !DILocation(line: 130, column: 2, scope: !7770)
!7782 = !DILocation(line: 131, column: 4, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7770, file: !7668, line: 130, column: 35)
!7784 = !DILocation(line: 132, column: 4, scope: !7783)
!7785 = distinct !{!7785, !7781, !7786}
!7786 = !DILocation(line: 133, column: 2, scope: !7770)
!7787 = !DILocation(line: 135, column: 2, scope: !7770)
!7788 = distinct !DISubprogram(name: "strcmp", scope: !7668, file: !7668, line: 145, type: !7789, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7791)
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!107, !118, !118}
!7791 = !{!7792, !7793}
!7792 = !DILocalVariable(name: "s1", arg: 1, scope: !7788, file: !7668, line: 145, type: !118)
!7793 = !DILocalVariable(name: "s2", arg: 2, scope: !7788, file: !7668, line: 145, type: !118)
!7794 = !DILocation(line: 0, scope: !7788)
!7795 = !DILocation(line: 147, column: 10, scope: !7788)
!7796 = !DILocation(line: 147, column: 17, scope: !7788)
!7797 = !DILocation(line: 147, column: 14, scope: !7788)
!7798 = !DILocation(line: 147, column: 22, scope: !7788)
!7799 = !DILocation(line: 148, column: 5, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7788, file: !7668, line: 147, column: 40)
!7801 = !DILocation(line: 149, column: 5, scope: !7800)
!7802 = distinct !{!7802, !7803, !7804}
!7803 = !DILocation(line: 147, column: 2, scope: !7788)
!7804 = !DILocation(line: 150, column: 2, scope: !7788)
!7805 = !DILocation(line: 152, column: 9, scope: !7788)
!7806 = !DILocation(line: 152, column: 15, scope: !7788)
!7807 = !DILocation(line: 152, column: 13, scope: !7788)
!7808 = !DILocation(line: 152, column: 2, scope: !7788)
!7809 = distinct !DISubprogram(name: "strncmp", scope: !7668, file: !7668, line: 162, type: !7810, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7812)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!107, !118, !118, !185}
!7812 = !{!7813, !7814, !7815}
!7813 = !DILocalVariable(name: "s1", arg: 1, scope: !7809, file: !7668, line: 162, type: !118)
!7814 = !DILocalVariable(name: "s2", arg: 2, scope: !7809, file: !7668, line: 162, type: !118)
!7815 = !DILocalVariable(name: "n", arg: 3, scope: !7809, file: !7668, line: 162, type: !185)
!7816 = !DILocation(line: 0, scope: !7809)
!7817 = !DILocation(line: 164, column: 17, scope: !7809)
!7818 = !DILocation(line: 164, column: 21, scope: !7809)
!7819 = !DILocation(line: 164, column: 28, scope: !7809)
!7820 = !DILocation(line: 164, column: 25, scope: !7809)
!7821 = !DILocation(line: 164, column: 33, scope: !7809)
!7822 = !DILocation(line: 165, column: 5, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7809, file: !7668, line: 164, column: 51)
!7824 = !DILocation(line: 166, column: 5, scope: !7823)
!7825 = !DILocation(line: 167, column: 4, scope: !7823)
!7826 = distinct !{!7826, !7827, !7828}
!7827 = !DILocation(line: 164, column: 2, scope: !7809)
!7828 = !DILocation(line: 168, column: 2, scope: !7809)
!7829 = !DILocation(line: 170, column: 25, scope: !7809)
!7830 = !DILocation(line: 170, column: 31, scope: !7809)
!7831 = !DILocation(line: 170, column: 29, scope: !7809)
!7832 = !DILocation(line: 170, column: 9, scope: !7809)
!7833 = !DILocation(line: 170, column: 2, scope: !7809)
!7834 = distinct !DISubprogram(name: "strtok_r", scope: !7668, file: !7668, line: 180, type: !7835, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7837)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!193, !193, !118, !192}
!7837 = !{!7838, !7839, !7840, !7841, !7842}
!7838 = !DILocalVariable(name: "str", arg: 1, scope: !7834, file: !7668, line: 180, type: !193)
!7839 = !DILocalVariable(name: "sep", arg: 2, scope: !7834, file: !7668, line: 180, type: !118)
!7840 = !DILocalVariable(name: "state", arg: 3, scope: !7834, file: !7668, line: 180, type: !192)
!7841 = !DILocalVariable(name: "start", scope: !7834, file: !7668, line: 182, type: !193)
!7842 = !DILocalVariable(name: "end", scope: !7834, file: !7668, line: 182, type: !193)
!7843 = !DILocation(line: 0, scope: !7834)
!7844 = !DILocation(line: 184, column: 10, scope: !7834)
!7845 = !DILocation(line: 184, column: 22, scope: !7834)
!7846 = !DILocation(line: 187, column: 9, scope: !7834)
!7847 = !DILocation(line: 187, column: 16, scope: !7834)
!7848 = !DILocation(line: 187, column: 19, scope: !7834)
!7849 = !DILocation(line: 187, column: 2, scope: !7834)
!7850 = !DILocation(line: 188, column: 8, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7834, file: !7668, line: 187, column: 40)
!7852 = distinct !{!7852, !7849, !7853}
!7853 = !DILocation(line: 189, column: 2, scope: !7834)
!7854 = !DILocation(line: 198, column: 9, scope: !7834)
!7855 = !DILocation(line: 198, column: 18, scope: !7834)
!7856 = !DILocation(line: 198, column: 17, scope: !7834)
!7857 = !DILocation(line: 198, column: 2, scope: !7834)
!7858 = !DILocation(line: 199, column: 6, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7834, file: !7668, line: 198, column: 37)
!7860 = !DILocation(line: 198, column: 14, scope: !7834)
!7861 = distinct !{!7861, !7857, !7862}
!7862 = !DILocation(line: 200, column: 2, scope: !7834)
!7863 = !DILocation(line: 203, column: 8, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !7668, line: 202, column: 20)
!7865 = distinct !DILexicalBlock(scope: !7834, file: !7668, line: 202, column: 6)
!7866 = !DILocation(line: 204, column: 16, scope: !7864)
!7867 = !DILocation(line: 205, column: 2, scope: !7864)
!7868 = !DILocation(line: 210, column: 1, scope: !7834)
!7869 = distinct !DISubprogram(name: "strcat", scope: !7668, file: !7668, line: 212, type: !7669, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7870)
!7870 = !{!7871, !7872}
!7871 = !DILocalVariable(name: "dest", arg: 1, scope: !7869, file: !7668, line: 212, type: !7671)
!7872 = !DILocalVariable(name: "src", arg: 2, scope: !7869, file: !7668, line: 212, type: !7672)
!7873 = !DILocation(line: 0, scope: !7869)
!7874 = !DILocation(line: 214, column: 16, scope: !7869)
!7875 = !DILocation(line: 214, column: 14, scope: !7869)
!7876 = !DILocation(line: 214, column: 2, scope: !7869)
!7877 = !DILocation(line: 215, column: 2, scope: !7869)
!7878 = distinct !DISubprogram(name: "strncat", scope: !7668, file: !7668, line: 218, type: !7690, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7879)
!7879 = !{!7880, !7881, !7882, !7883, !7884}
!7880 = !DILocalVariable(name: "dest", arg: 1, scope: !7878, file: !7668, line: 218, type: !7671)
!7881 = !DILocalVariable(name: "src", arg: 2, scope: !7878, file: !7668, line: 218, type: !7672)
!7882 = !DILocalVariable(name: "n", arg: 3, scope: !7878, file: !7668, line: 219, type: !185)
!7883 = !DILocalVariable(name: "orig_dest", scope: !7878, file: !7668, line: 221, type: !193)
!7884 = !DILocalVariable(name: "len", scope: !7878, file: !7668, line: 222, type: !185)
!7885 = !DILocation(line: 0, scope: !7878)
!7886 = !DILocation(line: 222, column: 15, scope: !7878)
!7887 = !DILocation(line: 224, column: 7, scope: !7878)
!7888 = !DILocation(line: 225, column: 14, scope: !7878)
!7889 = !DILocation(line: 225, column: 19, scope: !7878)
!7890 = !DILocation(line: 225, column: 11, scope: !7878)
!7891 = !DILocation(line: 225, column: 23, scope: !7878)
!7892 = !DILocation(line: 225, column: 28, scope: !7878)
!7893 = !DILocation(line: 225, column: 2, scope: !7878)
!7894 = !DILocation(line: 226, column: 17, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7878, file: !7668, line: 225, column: 38)
!7896 = !DILocation(line: 226, column: 8, scope: !7895)
!7897 = !DILocation(line: 226, column: 11, scope: !7895)
!7898 = distinct !{!7898, !7893, !7899}
!7899 = !DILocation(line: 227, column: 2, scope: !7878)
!7900 = !DILocation(line: 228, column: 8, scope: !7878)
!7901 = !DILocation(line: 230, column: 2, scope: !7878)
!7902 = distinct !DISubprogram(name: "memcmp", scope: !7668, file: !7668, line: 239, type: !7903, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7905)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!107, !13, !13, !185}
!7905 = !{!7906, !7907, !7908, !7909, !7910}
!7906 = !DILocalVariable(name: "m1", arg: 1, scope: !7902, file: !7668, line: 239, type: !13)
!7907 = !DILocalVariable(name: "m2", arg: 2, scope: !7902, file: !7668, line: 239, type: !13)
!7908 = !DILocalVariable(name: "n", arg: 3, scope: !7902, file: !7668, line: 239, type: !185)
!7909 = !DILocalVariable(name: "c1", scope: !7902, file: !7668, line: 241, type: !118)
!7910 = !DILocalVariable(name: "c2", scope: !7902, file: !7668, line: 242, type: !118)
!7911 = !DILocation(line: 0, scope: !7902)
!7912 = !DILocation(line: 244, column: 7, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7902, file: !7668, line: 244, column: 6)
!7914 = !DILocation(line: 244, column: 6, scope: !7902)
!7915 = !DILocation(line: 248, column: 10, scope: !7902)
!7916 = !DILocation(line: 248, column: 14, scope: !7902)
!7917 = !DILocation(line: 248, column: 19, scope: !7902)
!7918 = !DILocation(line: 248, column: 2, scope: !7902)
!7919 = !DILocation(line: 248, column: 23, scope: !7902)
!7920 = !DILocation(line: 248, column: 30, scope: !7902)
!7921 = !DILocation(line: 248, column: 27, scope: !7902)
!7922 = !DILocation(line: 249, column: 5, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7902, file: !7668, line: 248, column: 36)
!7924 = !DILocation(line: 250, column: 5, scope: !7923)
!7925 = distinct !{!7925, !7918, !7926}
!7926 = !DILocation(line: 251, column: 2, scope: !7902)
!7927 = !DILocation(line: 253, column: 9, scope: !7902)
!7928 = !DILocation(line: 253, column: 15, scope: !7902)
!7929 = !DILocation(line: 253, column: 13, scope: !7902)
!7930 = !DILocation(line: 253, column: 2, scope: !7902)
!7931 = !DILocation(line: 254, column: 1, scope: !7902)
!7932 = distinct !DISubprogram(name: "memmove", scope: !7668, file: !7668, line: 263, type: !7933, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7935)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{!106, !106, !13, !185}
!7935 = !{!7936, !7937, !7938, !7939, !7940}
!7936 = !DILocalVariable(name: "d", arg: 1, scope: !7932, file: !7668, line: 263, type: !106)
!7937 = !DILocalVariable(name: "s", arg: 2, scope: !7932, file: !7668, line: 263, type: !13)
!7938 = !DILocalVariable(name: "n", arg: 3, scope: !7932, file: !7668, line: 263, type: !185)
!7939 = !DILocalVariable(name: "dest", scope: !7932, file: !7668, line: 265, type: !193)
!7940 = !DILocalVariable(name: "src", scope: !7932, file: !7668, line: 266, type: !118)
!7941 = !DILocation(line: 0, scope: !7932)
!7942 = !DILocation(line: 268, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7932, file: !7668, line: 268, column: 6)
!7944 = !DILocation(line: 268, column: 28, scope: !7943)
!7945 = !DILocation(line: 268, column: 6, scope: !7932)
!7946 = !DILocation(line: 280, column: 12, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !7668, line: 278, column: 9)
!7948 = !DILocation(line: 280, column: 3, scope: !7947)
!7949 = !DILocation(line: 275, column: 5, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !7668, line: 274, column: 17)
!7951 = distinct !DILexicalBlock(scope: !7943, file: !7668, line: 268, column: 33)
!7952 = !DILocation(line: 276, column: 14, scope: !7950)
!7953 = !DILocation(line: 276, column: 4, scope: !7950)
!7954 = !DILocation(line: 276, column: 12, scope: !7950)
!7955 = !DILocation(line: 274, column: 12, scope: !7951)
!7956 = !DILocation(line: 274, column: 3, scope: !7951)
!7957 = distinct !{!7957, !7956, !7958}
!7958 = !DILocation(line: 277, column: 3, scope: !7951)
!7959 = !DILocation(line: 281, column: 12, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7947, file: !7668, line: 280, column: 17)
!7961 = !DILocation(line: 281, column: 10, scope: !7960)
!7962 = !DILocation(line: 282, column: 8, scope: !7960)
!7963 = !DILocation(line: 283, column: 7, scope: !7960)
!7964 = !DILocation(line: 284, column: 5, scope: !7960)
!7965 = distinct !{!7965, !7948, !7966}
!7966 = !DILocation(line: 285, column: 3, scope: !7947)
!7967 = !DILocation(line: 288, column: 2, scope: !7932)
!7968 = distinct !DISubprogram(name: "memcpy", scope: !7668, file: !7668, line: 298, type: !7969, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7973)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!106, !7971, !7972, !185}
!7971 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7972 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7973 = !{!7974, !7975, !7976, !7977, !7978}
!7974 = !DILocalVariable(name: "d", arg: 1, scope: !7968, file: !7668, line: 298, type: !7971)
!7975 = !DILocalVariable(name: "s", arg: 2, scope: !7968, file: !7668, line: 298, type: !7972)
!7976 = !DILocalVariable(name: "n", arg: 3, scope: !7968, file: !7668, line: 298, type: !185)
!7977 = !DILocalVariable(name: "d_byte", scope: !7968, file: !7668, line: 302, type: !1104)
!7978 = !DILocalVariable(name: "s_byte", scope: !7968, file: !7668, line: 303, type: !2877)
!7979 = !DILocation(line: 0, scope: !7968)
!7980 = !DILocation(line: 337, column: 11, scope: !7968)
!7981 = !DILocation(line: 337, column: 2, scope: !7968)
!7982 = !DILocation(line: 338, column: 25, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7968, file: !7668, line: 337, column: 16)
!7984 = !DILocation(line: 338, column: 17, scope: !7983)
!7985 = !DILocation(line: 338, column: 11, scope: !7983)
!7986 = !DILocation(line: 338, column: 15, scope: !7983)
!7987 = !DILocation(line: 339, column: 4, scope: !7983)
!7988 = distinct !{!7988, !7981, !7989}
!7989 = !DILocation(line: 340, column: 2, scope: !7968)
!7990 = !DILocation(line: 342, column: 2, scope: !7968)
!7991 = distinct !DISubprogram(name: "memset", scope: !7668, file: !7668, line: 352, type: !7992, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7994)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!106, !106, !107, !185}
!7994 = !{!7995, !7996, !7997, !7998, !7999}
!7995 = !DILocalVariable(name: "buf", arg: 1, scope: !7991, file: !7668, line: 352, type: !106)
!7996 = !DILocalVariable(name: "c", arg: 2, scope: !7991, file: !7668, line: 352, type: !107)
!7997 = !DILocalVariable(name: "n", arg: 3, scope: !7991, file: !7668, line: 352, type: !185)
!7998 = !DILocalVariable(name: "d_byte", scope: !7991, file: !7668, line: 356, type: !1104)
!7999 = !DILocalVariable(name: "c_byte", scope: !7991, file: !7668, line: 357, type: !196)
!8000 = !DILocation(line: 0, scope: !7991)
!8001 = !DILocation(line: 357, column: 25, scope: !7991)
!8002 = !DILocation(line: 389, column: 11, scope: !7991)
!8003 = !DILocation(line: 389, column: 2, scope: !7991)
!8004 = !DILocation(line: 390, column: 11, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7991, file: !7668, line: 389, column: 16)
!8006 = !DILocation(line: 390, column: 15, scope: !8005)
!8007 = !DILocation(line: 391, column: 4, scope: !8005)
!8008 = distinct !{!8008, !8003, !8009}
!8009 = !DILocation(line: 392, column: 2, scope: !7991)
!8010 = !DILocation(line: 394, column: 2, scope: !7991)
!8011 = distinct !DISubprogram(name: "memchr", scope: !7668, file: !7668, line: 404, type: !8012, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8014)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!106, !13, !107, !185}
!8014 = !{!8015, !8016, !8017, !8018}
!8015 = !DILocalVariable(name: "s", arg: 1, scope: !8011, file: !7668, line: 404, type: !13)
!8016 = !DILocalVariable(name: "c", arg: 2, scope: !8011, file: !7668, line: 404, type: !107)
!8017 = !DILocalVariable(name: "n", arg: 3, scope: !8011, file: !7668, line: 404, type: !185)
!8018 = !DILocalVariable(name: "p", scope: !8019, file: !7668, line: 407, type: !2877)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !7668, line: 406, column: 14)
!8020 = distinct !DILexicalBlock(scope: !8011, file: !7668, line: 406, column: 6)
!8021 = !DILocation(line: 0, scope: !8011)
!8022 = !DILocation(line: 406, column: 8, scope: !8020)
!8023 = !DILocation(line: 406, column: 6, scope: !8011)
!8024 = !DILocation(line: 409, column: 3, scope: !8019)
!8025 = !DILocation(line: 0, scope: !8019)
!8026 = !DILocation(line: 410, column: 8, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7668, line: 410, column: 8)
!8028 = distinct !DILexicalBlock(scope: !8019, file: !7668, line: 409, column: 6)
!8029 = !DILocation(line: 410, column: 13, scope: !8027)
!8030 = !DILocation(line: 410, column: 8, scope: !8028)
!8031 = distinct !{!8031, !8024, !8032}
!8032 = !DILocation(line: 414, column: 20, scope: !8019)
!8033 = !DILocation(line: 417, column: 2, scope: !8011)
!8034 = !DILocation(line: 418, column: 1, scope: !8011)
!8035 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4148, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8036)
!8036 = !{!8037}
!8037 = !DILocalVariable(name: "hook", arg: 1, scope: !8035, file: !501, line: 23, type: !213)
!8038 = !DILocation(line: 0, scope: !8035)
!8039 = !DILocation(line: 25, column: 15, scope: !8035)
!8040 = !DILocation(line: 26, column: 1, scope: !8035)
!8041 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8042)
!8042 = !{!8043}
!8043 = !DILocalVariable(name: "c", arg: 1, scope: !8041, file: !501, line: 14, type: !107)
!8044 = !DILocation(line: 0, scope: !8041)
!8045 = !DILocation(line: 18, column: 2, scope: !8041)
!8046 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8047, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8049)
!8047 = !DISubroutineType(types: !8048)
!8048 = !{!107, !107, !497}
!8049 = !{!8050, !8051}
!8050 = !DILocalVariable(name: "c", arg: 1, scope: !8046, file: !501, line: 28, type: !107)
!8051 = !DILocalVariable(name: "stream", arg: 2, scope: !8046, file: !501, line: 28, type: !497)
!8052 = !DILocation(line: 0, scope: !8046)
!8053 = !DILocation(line: 30, column: 27, scope: !8046)
!8054 = !DILocation(line: 30, column: 50, scope: !8046)
!8055 = !DILocation(line: 30, column: 9, scope: !8046)
!8056 = !DILocation(line: 30, column: 2, scope: !8046)
!8057 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8047, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8058)
!8058 = !{!8059, !8060}
!8059 = !DILocalVariable(name: "c", arg: 1, scope: !8057, file: !501, line: 41, type: !107)
!8060 = !DILocalVariable(name: "stream", arg: 2, scope: !8057, file: !501, line: 41, type: !497)
!8061 = !DILocation(line: 0, scope: !8057)
!8062 = !DILocation(line: 43, column: 9, scope: !8057)
!8063 = !DILocation(line: 43, column: 2, scope: !8057)
!8064 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8065, file: !8065, line: 72, type: !8047, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8066)
!8065 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!8066 = !{!8067, !8068}
!8067 = !DILocalVariable(name: "c", arg: 1, scope: !8064, file: !8065, line: 72, type: !107)
!8068 = !DILocalVariable(name: "stream", arg: 2, scope: !8064, file: !8065, line: 72, type: !497)
!8069 = !DILocation(line: 0, scope: !8064)
!8070 = !DILocation(line: 81, column: 2, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8064, file: !8065, line: 81, column: 2)
!8072 = !{i64 2154221552}
!8073 = !DILocation(line: 82, column: 9, scope: !8064)
!8074 = !DILocation(line: 82, column: 2, scope: !8064)
!8075 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8076, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8079)
!8076 = !DISubroutineType(types: !8077)
!8077 = !{!107, !7672, !8078}
!8078 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8079 = !{!8080, !8081, !8082, !8083}
!8080 = !DILocalVariable(name: "s", arg: 1, scope: !8075, file: !501, line: 46, type: !7672)
!8081 = !DILocalVariable(name: "stream", arg: 2, scope: !8075, file: !501, line: 46, type: !8078)
!8082 = !DILocalVariable(name: "len", scope: !8075, file: !501, line: 48, type: !107)
!8083 = !DILocalVariable(name: "ret", scope: !8075, file: !501, line: 49, type: !107)
!8084 = !DILocation(line: 0, scope: !8075)
!8085 = !DILocation(line: 48, column: 12, scope: !8075)
!8086 = !DILocation(line: 51, column: 8, scope: !8075)
!8087 = !DILocation(line: 53, column: 13, scope: !8075)
!8088 = !DILocation(line: 53, column: 9, scope: !8075)
!8089 = !DILocation(line: 53, column: 2, scope: !8075)
!8090 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8091, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8093)
!8091 = !DISubroutineType(types: !8092)
!8092 = !{!185, !7972, !185, !185, !8078}
!8093 = !{!8094, !8095, !8096, !8097}
!8094 = !DILocalVariable(name: "ptr", arg: 1, scope: !8090, file: !501, line: 99, type: !7972)
!8095 = !DILocalVariable(name: "size", arg: 2, scope: !8090, file: !501, line: 99, type: !185)
!8096 = !DILocalVariable(name: "nitems", arg: 3, scope: !8090, file: !501, line: 99, type: !185)
!8097 = !DILocalVariable(name: "stream", arg: 4, scope: !8090, file: !501, line: 100, type: !8078)
!8098 = !DILocation(line: 0, scope: !8090)
!8099 = !DILocation(line: 102, column: 9, scope: !8090)
!8100 = !DILocation(line: 102, column: 2, scope: !8090)
!8101 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8065, file: !8065, line: 96, type: !8091, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8102)
!8102 = !{!8103, !8104, !8105, !8106}
!8103 = !DILocalVariable(name: "ptr", arg: 1, scope: !8101, file: !8065, line: 96, type: !7972)
!8104 = !DILocalVariable(name: "size", arg: 2, scope: !8101, file: !8065, line: 96, type: !185)
!8105 = !DILocalVariable(name: "nitems", arg: 3, scope: !8101, file: !8065, line: 96, type: !185)
!8106 = !DILocalVariable(name: "stream", arg: 4, scope: !8101, file: !8065, line: 96, type: !8078)
!8107 = !DILocation(line: 0, scope: !8101)
!8108 = !DILocation(line: 107, column: 2, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8101, file: !8065, line: 107, column: 2)
!8110 = !{i64 2154221656}
!8111 = !DILocation(line: 108, column: 9, scope: !8101)
!8112 = !DILocation(line: 108, column: 2, scope: !8101)
!8113 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8091, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8114)
!8114 = !{!8115, !8116, !8117, !8118, !8119, !8120, !8121, !8122}
!8115 = !DILocalVariable(name: "ptr", arg: 1, scope: !8113, file: !501, line: 56, type: !7972)
!8116 = !DILocalVariable(name: "size", arg: 2, scope: !8113, file: !501, line: 56, type: !185)
!8117 = !DILocalVariable(name: "nitems", arg: 3, scope: !8113, file: !501, line: 57, type: !185)
!8118 = !DILocalVariable(name: "stream", arg: 4, scope: !8113, file: !501, line: 57, type: !8078)
!8119 = !DILocalVariable(name: "i", scope: !8113, file: !501, line: 59, type: !185)
!8120 = !DILocalVariable(name: "j", scope: !8113, file: !501, line: 60, type: !185)
!8121 = !DILocalVariable(name: "p", scope: !8113, file: !501, line: 61, type: !2877)
!8122 = !DILabel(scope: !8113, name: "done", file: !501, line: 82)
!8123 = !DILocation(line: 0, scope: !8113)
!8124 = !DILocation(line: 63, column: 14, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8113, file: !501, line: 63, column: 6)
!8126 = !DILocation(line: 63, column: 24, scope: !8125)
!8127 = !DILocation(line: 72, column: 3, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8113, file: !501, line: 70, column: 5)
!8129 = !DILocation(line: 0, scope: !8128)
!8130 = !DILocation(line: 73, column: 8, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !501, line: 73, column: 8)
!8132 = distinct !DILexicalBlock(scope: !8128, file: !501, line: 72, column: 6)
!8133 = !DILocation(line: 73, column: 29, scope: !8131)
!8134 = !DILocation(line: 73, column: 27, scope: !8131)
!8135 = !DILocation(line: 73, column: 21, scope: !8131)
!8136 = !DILocation(line: 73, column: 33, scope: !8131)
!8137 = !DILocation(line: 73, column: 8, scope: !8132)
!8138 = !DILocation(line: 76, column: 5, scope: !8132)
!8139 = !DILocation(line: 77, column: 14, scope: !8128)
!8140 = !DILocation(line: 77, column: 3, scope: !8132)
!8141 = distinct !{!8141, !8127, !8142}
!8142 = !DILocation(line: 77, column: 17, scope: !8128)
!8143 = !DILocation(line: 79, column: 4, scope: !8128)
!8144 = !DILocation(line: 80, column: 13, scope: !8113)
!8145 = !DILocation(line: 80, column: 2, scope: !8128)
!8146 = distinct !{!8146, !8147, !8148}
!8147 = !DILocation(line: 70, column: 2, scope: !8113)
!8148 = !DILocation(line: 80, column: 16, scope: !8113)
!8149 = !DILocation(line: 82, column: 1, scope: !8113)
!8150 = !DILocation(line: 83, column: 17, scope: !8113)
!8151 = !DILocation(line: 83, column: 2, scope: !8113)
!8152 = !DILocation(line: 84, column: 1, scope: !8113)
!8153 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8154, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8156)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!107, !118}
!8156 = !{!8157}
!8157 = !DILocalVariable(name: "s", arg: 1, scope: !8153, file: !501, line: 106, type: !118)
!8158 = !DILocation(line: 0, scope: !8153)
!8159 = !DILocation(line: 108, column: 6, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8153, file: !501, line: 108, column: 6)
!8161 = !DILocation(line: 108, column: 23, scope: !8160)
!8162 = !DILocation(line: 108, column: 6, scope: !8153)
!8163 = !DILocation(line: 112, column: 9, scope: !8153)
!8164 = !DILocation(line: 112, column: 29, scope: !8153)
!8165 = !DILocation(line: 112, column: 2, scope: !8153)
!8166 = !DILocation(line: 113, column: 1, scope: !8153)
!8167 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3111, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8168 = !DILocation(line: 69, column: 6, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8167, file: !533, line: 69, column: 6)
!8170 = !DILocation(line: 0, scope: !8169)
!8171 = !DILocation(line: 74, column: 1, scope: !8167)
!8172 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3111, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8173 = !DILocation(line: 183, column: 1, scope: !8172)
!8174 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3111, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8175 = !DILocation(line: 196, column: 1, scope: !8174)
!8176 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3111, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8177 = !DILocation(line: 298, column: 34, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !533, line: 297, column: 47)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !533, line: 297, column: 6)
!8180 = !DILocation(line: 300, column: 2, scope: !8176)
!8181 = !DILocation(line: 301, column: 1, scope: !8176)
!8182 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3111, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8183 = !DILocation(line: 478, column: 10, scope: !8182)
!8184 = !DILocation(line: 478, column: 2, scope: !8182)
!8185 = !DILocation(line: 480, column: 15, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !533, line: 478, column: 17)
!8187 = !DILocation(line: 481, column: 3, scope: !8186)
!8188 = !DILocation(line: 484, column: 15, scope: !8186)
!8189 = !DILocation(line: 485, column: 3, scope: !8186)
!8190 = !DILocation(line: 486, column: 3, scope: !8186)
!8191 = !DILocation(line: 489, column: 9, scope: !8186)
!8192 = !DILocation(line: 488, column: 3, scope: !8186)
!8193 = !DILocation(line: 490, column: 15, scope: !8186)
!8194 = !DILocation(line: 491, column: 3, scope: !8186)
!8195 = !DILocation(line: 493, column: 1, scope: !8182)
!8196 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3111, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8197 = !DILocation(line: 435, column: 3, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !533, line: 434, column: 41)
!8199 = distinct !DILexicalBlock(scope: !8196, file: !533, line: 434, column: 6)
!8200 = !DILocation(line: 436, column: 18, scope: !8198)
!8201 = !DILocation(line: 436, column: 3, scope: !8198)
!8202 = !DILocation(line: 438, column: 1, scope: !8196)
!8203 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8204, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8206)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!118, !532}
!8206 = !{!8207}
!8207 = !DILocalVariable(name: "phase", arg: 1, scope: !8203, file: !533, line: 274, type: !532)
!8208 = !DILocation(line: 0, scope: !8203)
!8209 = !DILocation(line: 276, column: 2, scope: !8203)
!8210 = !DILocation(line: 0, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8203, file: !533, line: 276, column: 17)
!8212 = !DILocation(line: 292, column: 1, scope: !8203)
!8213 = distinct !DISubprogram(name: "k_thread_abort", scope: !4442, file: !4442, line: 188, type: !8214, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8218)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{null, !8216}
!8216 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8217)
!8217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8218 = !{!8219}
!8219 = !DILocalVariable(name: "thread", arg: 1, scope: !8213, file: !4442, line: 188, type: !8216)
!8220 = !DILocation(line: 0, scope: !8213)
!8221 = !DILocation(line: 197, column: 2, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8213, file: !4442, line: 197, column: 2)
!8223 = !{i64 2154183355}
!8224 = !DILocation(line: 198, column: 2, scope: !8213)
!8225 = !DILocation(line: 199, column: 1, scope: !8213)
!8226 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8227, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!8216}
!8229 = !DILocation(line: 535, column: 9, scope: !8226)
!8230 = !DILocation(line: 535, column: 2, scope: !8226)
!8231 = distinct !DISubprogram(name: "z_current_get", scope: !4442, file: !4442, line: 173, type: !8227, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8232 = !DILocation(line: 180, column: 2, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8231, file: !4442, line: 180, column: 2)
!8234 = !{i64 2154183287}
!8235 = !DILocation(line: 181, column: 9, scope: !8231)
!8236 = !DILocation(line: 181, column: 2, scope: !8231)
!8237 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3111, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8238 = !DILocation(line: 442, column: 10, scope: !8237)
!8239 = !DILocation(line: 442, column: 2, scope: !8237)
!8240 = !DILocation(line: 444, column: 15, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8237, file: !533, line: 442, column: 17)
!8242 = !DILocation(line: 445, column: 3, scope: !8241)
!8243 = !DILocation(line: 448, column: 15, scope: !8241)
!8244 = !DILocation(line: 449, column: 3, scope: !8241)
!8245 = !DILocation(line: 450, column: 3, scope: !8241)
!8246 = !DILocation(line: 453, column: 9, scope: !8241)
!8247 = !DILocation(line: 452, column: 3, scope: !8241)
!8248 = !DILocation(line: 454, column: 15, scope: !8241)
!8249 = !DILocation(line: 455, column: 3, scope: !8241)
!8250 = !DILocation(line: 457, column: 1, scope: !8237)
!8251 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3111, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8252 = !DILocation(line: 461, column: 10, scope: !8251)
!8253 = !DILocation(line: 461, column: 2, scope: !8251)
!8254 = !DILocation(line: 463, column: 15, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8251, file: !533, line: 461, column: 17)
!8256 = !DILocation(line: 465, column: 3, scope: !8255)
!8257 = !DILocation(line: 468, column: 9, scope: !8255)
!8258 = !DILocation(line: 467, column: 3, scope: !8255)
!8259 = !DILocation(line: 469, column: 15, scope: !8255)
!8260 = !DILocation(line: 470, column: 7, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8255, file: !533, line: 470, column: 7)
!8262 = !DILocation(line: 470, column: 13, scope: !8261)
!8263 = !DILocation(line: 470, column: 7, scope: !8255)
!8264 = !DILocation(line: 0, scope: !8255)
!8265 = !DILocation(line: 474, column: 1, scope: !8251)
!8266 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8267)
!8267 = !{!8268}
!8268 = !DILocalVariable(name: "data", arg: 1, scope: !8266, file: !533, line: 495, type: !106)
!8269 = !DILocation(line: 0, scope: !8266)
!8270 = !DILocation(line: 498, column: 2, scope: !8266)
!8271 = !DILocation(line: 499, column: 1, scope: !8266)
!8272 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8273, file: !8273, line: 24, type: !3111, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8273 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!8274 = !DILocation(line: 32, column: 2, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8272, file: !8273, line: 32, column: 2)
!8276 = !{i64 2154305742}
!8277 = !DILocation(line: 34, column: 1, scope: !8272)
!8278 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8279)
!8279 = !{!8280}
!8280 = !DILocalVariable(name: "data", arg: 1, scope: !8278, file: !533, line: 501, type: !106)
!8281 = !DILocation(line: 0, scope: !8278)
!8282 = !DILocation(line: 504, column: 2, scope: !8278)
!8283 = !DILocation(line: 505, column: 1, scope: !8278)
!8284 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8273, file: !8273, line: 47, type: !3111, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8285 = !DILocation(line: 55, column: 2, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8284, file: !8273, line: 55, column: 2)
!8287 = !{i64 2154305810}
!8288 = !DILocation(line: 57, column: 1, scope: !8284)
!8289 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8290, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8309)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!8292, !118, !8292}
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8293, size: 32)
!8293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8294)
!8294 = !{!8295, !8296, !8297, !8298, !8299}
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8293, file: !114, line: 98, baseType: !118, size: 32)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8293, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8293, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8293, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8293, file: !114, line: 104, baseType: !8300, size: 32, offset: 128)
!8300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8301)
!8301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8302, size: 32)
!8302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8303)
!8303 = !{!8304, !8305, !8306, !8307, !8308}
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8302, file: !114, line: 125, baseType: !152, size: 32)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8302, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8302, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8302, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8302, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8309 = !{!8310, !8311, !8312}
!8310 = !DILocalVariable(name: "suite", arg: 1, scope: !8289, file: !533, line: 617, type: !118)
!8311 = !DILocalVariable(name: "prev", arg: 2, scope: !8289, file: !533, line: 617, type: !8292)
!8312 = !DILocalVariable(name: "test", scope: !8289, file: !533, line: 619, type: !8292)
!8313 = !DILocation(line: 0, scope: !8289)
!8314 = !DILocation(line: 619, column: 39, scope: !8289)
!8315 = !DILocation(line: 619, column: 33, scope: !8289)
!8316 = !DILocation(line: 621, column: 14, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 621, column: 2)
!8318 = distinct !DILexicalBlock(scope: !8289, file: !533, line: 621, column: 2)
!8319 = !DILocation(line: 621, column: 2, scope: !8318)
!8320 = !DILocation(line: 622, column: 27, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !533, line: 622, column: 7)
!8322 = distinct !DILexicalBlock(scope: !8317, file: !533, line: 621, column: 51)
!8323 = !DILocation(line: 622, column: 7, scope: !8321)
!8324 = !DILocation(line: 622, column: 44, scope: !8321)
!8325 = !DILocation(line: 622, column: 7, scope: !8322)
!8326 = !DILocation(line: 621, column: 43, scope: !8317)
!8327 = distinct !{!8327, !8319, !8328}
!8328 = !DILocation(line: 625, column: 2, scope: !8318)
!8329 = !DILocation(line: 627, column: 1, scope: !8289)
!8330 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8154, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8331)
!8331 = !{!8332}
!8332 = !DILocalVariable(name: "name", arg: 1, scope: !8330, file: !533, line: 764, type: !118)
!8333 = !DILocation(line: 0, scope: !8330)
!8334 = !DILocation(line: 766, column: 36, scope: !8330)
!8335 = !DILocation(line: 766, column: 9, scope: !8330)
!8336 = !DILocation(line: 766, column: 2, scope: !8330)
!8337 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8338, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8357)
!8338 = !DISubroutineType(types: !8339)
!8339 = !{!8340, !118}
!8340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8341, size: 32)
!8341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8342)
!8342 = !{!8343, !8344, !8345, !8346, !8347, !8348, !8349}
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8341, file: !114, line: 179, baseType: !117, size: 32)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8341, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8341, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8341, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8341, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8341, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8341, file: !114, line: 197, baseType: !8350, size: 32, offset: 192)
!8350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8351)
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8352, size: 32)
!8352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8353)
!8353 = !{!8354, !8355, !8356}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8352, file: !114, line: 116, baseType: !152, size: 32)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8352, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8352, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8357 = !{!8358, !8359}
!8358 = !DILocalVariable(name: "name", arg: 1, scope: !8337, file: !533, line: 604, type: !118)
!8359 = !DILocalVariable(name: "node", scope: !8337, file: !533, line: 606, type: !8340)
!8360 = !DILocation(line: 0, scope: !8337)
!8361 = !DILocation(line: 608, column: 2, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8337, file: !533, line: 608, column: 2)
!8363 = !DILocation(line: 609, column: 26, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !533, line: 609, column: 7)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !533, line: 608, column: 87)
!8366 = distinct !DILexicalBlock(scope: !8362, file: !533, line: 608, column: 2)
!8367 = !DILocation(line: 609, column: 7, scope: !8364)
!8368 = !DILocation(line: 609, column: 32, scope: !8364)
!8369 = !DILocation(line: 609, column: 7, scope: !8365)
!8370 = !DILocation(line: 608, column: 79, scope: !8366)
!8371 = !DILocation(line: 608, column: 49, scope: !8366)
!8372 = distinct !{!8372, !8361, !8373}
!8373 = !DILocation(line: 612, column: 2, scope: !8362)
!8374 = !DILocation(line: 615, column: 1, scope: !8337)
!8375 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8376, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8378)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{!107, !8340}
!8378 = !{!8379, !8380, !8381, !8382, !8383, !8384}
!8379 = !DILocalVariable(name: "suite", arg: 1, scope: !8375, file: !533, line: 652, type: !8340)
!8380 = !DILocalVariable(name: "test", scope: !8375, file: !533, line: 654, type: !8292)
!8381 = !DILocalVariable(name: "data", scope: !8375, file: !533, line: 655, type: !106)
!8382 = !DILocalVariable(name: "fail", scope: !8375, file: !533, line: 656, type: !107)
!8383 = !DILocalVariable(name: "tc_result", scope: !8375, file: !533, line: 657, type: !107)
!8384 = !DILocalVariable(name: "i", scope: !8385, file: !533, line: 692, type: !107)
!8385 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 692, column: 2)
!8386 = !DILocation(line: 0, scope: !8375)
!8387 = !DILocation(line: 663, column: 12, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 663, column: 6)
!8389 = !DILocation(line: 663, column: 6, scope: !8375)
!8390 = !DILocation(line: 664, column: 15, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8388, file: !533, line: 663, column: 21)
!8392 = !DILocation(line: 665, column: 3, scope: !8391)
!8393 = !DILocation(line: 679, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 679, column: 2)
!8395 = !DILocation(line: 680, column: 33, scope: !8375)
!8396 = !DILocation(line: 681, column: 14, scope: !8375)
!8397 = !DILocation(line: 682, column: 8, scope: !8375)
!8398 = !DILocation(line: 688, column: 55, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 688, column: 6)
!8400 = !DILocation(line: 688, column: 61, scope: !8399)
!8401 = !DILocation(line: 688, column: 6, scope: !8375)
!8402 = !DILocation(line: 689, column: 10, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8399, file: !533, line: 688, column: 70)
!8404 = !DILocation(line: 690, column: 2, scope: !8403)
!8405 = !DILocation(line: 0, scope: !8385)
!8406 = !DILocation(line: 727, column: 3, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !533, line: 692, column: 46)
!8408 = distinct !DILexicalBlock(scope: !8385, file: !533, line: 692, column: 2)
!8409 = !DILocation(line: 0, scope: !8407)
!8410 = !DILocation(line: 727, column: 48, scope: !8407)
!8411 = !DILocation(line: 727, column: 19, scope: !8407)
!8412 = !DILocation(line: 727, column: 61, scope: !8407)
!8413 = !DILocation(line: 728, column: 41, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 728, column: 8)
!8415 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 727, column: 71)
!8416 = !DILocation(line: 728, column: 53, scope: !8414)
!8417 = !DILocation(line: 728, column: 8, scope: !8414)
!8418 = !DILocation(line: 728, column: 8, scope: !8415)
!8419 = !DILocation(line: 729, column: 11, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8414, file: !533, line: 728, column: 60)
!8421 = !DILocation(line: 729, column: 18, scope: !8420)
!8422 = !DILocation(line: 729, column: 27, scope: !8420)
!8423 = !DILocation(line: 730, column: 17, scope: !8420)
!8424 = !DILocation(line: 731, column: 9, scope: !8420)
!8425 = !DILocation(line: 732, column: 12, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !533, line: 731, column: 31)
!8427 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 731, column: 9)
!8428 = !DILocation(line: 732, column: 19, scope: !8426)
!8429 = !DILocation(line: 733, column: 5, scope: !8426)
!8430 = !DILocation(line: 734, column: 12, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !533, line: 733, column: 38)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !533, line: 733, column: 16)
!8433 = !DILocation(line: 734, column: 19, scope: !8431)
!8434 = !DILocation(line: 735, column: 5, scope: !8431)
!8435 = !DILocation(line: 736, column: 12, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !533, line: 735, column: 38)
!8437 = distinct !DILexicalBlock(scope: !8432, file: !533, line: 735, column: 16)
!8438 = !DILocation(line: 736, column: 19, scope: !8436)
!8439 = !DILocation(line: 737, column: 5, scope: !8436)
!8440 = !DILocation(line: 0, scope: !8427)
!8441 = !DILocation(line: 739, column: 19, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 739, column: 9)
!8443 = !DILocation(line: 739, column: 9, scope: !8420)
!8444 = !DILocation(line: 744, column: 31, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 744, column: 8)
!8446 = !DILocation(line: 744, column: 43, scope: !8445)
!8447 = !DILocation(line: 744, column: 8, scope: !8415)
!8448 = distinct !{!8448, !8406, !8449}
!8449 = !DILocation(line: 747, column: 3, scope: !8407)
!8450 = !DILocation(line: 750, column: 7, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 750, column: 7)
!8452 = !DILocation(line: 750, column: 38, scope: !8451)
!8453 = !DILocation(line: 751, column: 16, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !533, line: 750, column: 52)
!8455 = !DILocation(line: 752, column: 3, scope: !8454)
!8456 = !DILocation(line: 755, column: 2, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !533, line: 755, column: 2)
!8458 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 755, column: 2)
!8459 = !DILocation(line: 0, scope: !8457)
!8460 = !DILocation(line: 756, column: 8, scope: !8375)
!8461 = !DILocation(line: 757, column: 13, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 757, column: 6)
!8463 = !DILocation(line: 757, column: 22, scope: !8462)
!8464 = !DILocation(line: 757, column: 6, scope: !8375)
!8465 = !DILocation(line: 758, column: 3, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 757, column: 31)
!8467 = !DILocation(line: 759, column: 2, scope: !8466)
!8468 = !DILocation(line: 762, column: 1, scope: !8375)
!8469 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8470, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!107, !8340, !8292, !106}
!8472 = !{!8473, !8474, !8475, !8476}
!8473 = !DILocalVariable(name: "suite", arg: 1, scope: !8469, file: !533, line: 521, type: !8340)
!8474 = !DILocalVariable(name: "test", arg: 2, scope: !8469, file: !533, line: 521, type: !8292)
!8475 = !DILocalVariable(name: "data", arg: 3, scope: !8469, file: !533, line: 521, type: !106)
!8476 = !DILocalVariable(name: "ret", scope: !8469, file: !533, line: 523, type: !107)
!8477 = !DILocation(line: 0, scope: !8469)
!8478 = !DILocation(line: 528, column: 2, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 528, column: 2)
!8480 = !DILocation(line: 530, column: 8, scope: !8469)
!8481 = !DILocation(line: 536, column: 3, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !533, line: 535, column: 41)
!8483 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 535, column: 6)
!8484 = !DILocation(line: 539, column: 32, scope: !8482)
!8485 = !DILocation(line: 539, column: 39, scope: !8482)
!8486 = !DILocation(line: 541, column: 11, scope: !8482)
!8487 = !DILocation(line: 541, column: 26, scope: !8482)
!8488 = !DILocation(line: 537, column: 3, scope: !8482)
!8489 = !DILocation(line: 543, column: 3, scope: !8482)
!8490 = !DILocation(line: 544, column: 13, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8482, file: !533, line: 544, column: 7)
!8492 = !DILocation(line: 544, column: 18, scope: !8491)
!8493 = !DILocation(line: 544, column: 7, scope: !8482)
!8494 = !DILocation(line: 545, column: 4, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8491, file: !533, line: 544, column: 27)
!8496 = !DILocation(line: 546, column: 3, scope: !8495)
!8497 = !DILocation(line: 548, column: 7, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8482, file: !533, line: 548, column: 7)
!8499 = !DILocation(line: 548, column: 46, scope: !8498)
!8500 = !DILocation(line: 550, column: 4, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8498, file: !533, line: 549, column: 47)
!8502 = !DILocation(line: 551, column: 4, scope: !8501)
!8503 = !DILocation(line: 552, column: 3, scope: !8501)
!8504 = !DILocation(line: 564, column: 8, scope: !8469)
!8505 = !DILocation(line: 565, column: 13, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 565, column: 6)
!8507 = !DILocation(line: 565, column: 19, scope: !8506)
!8508 = !DILocation(line: 565, column: 6, scope: !8469)
!8509 = !DILocation(line: 566, column: 3, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !533, line: 565, column: 28)
!8511 = !DILocation(line: 567, column: 2, scope: !8510)
!8512 = !DILocation(line: 568, column: 2, scope: !8469)
!8513 = !DILocation(line: 570, column: 2, scope: !8469)
!8514 = !DILocation(line: 571, column: 6, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 571, column: 6)
!8516 = !DILocation(line: 571, column: 28, scope: !8515)
!8517 = !DILocation(line: 571, column: 35, scope: !8515)
!8518 = !DILocation(line: 571, column: 20, scope: !8515)
!8519 = !DILocation(line: 571, column: 6, scope: !8469)
!8520 = !DILocation(line: 572, column: 34, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8515, file: !533, line: 571, column: 54)
!8522 = !DILocation(line: 573, column: 2, scope: !8521)
!8523 = !DILocation(line: 575, column: 8, scope: !8469)
!8524 = !DILocation(line: 583, column: 6, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 583, column: 6)
!8526 = !DILocation(line: 583, column: 39, scope: !8525)
!8527 = !DILocation(line: 585, column: 46, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8525, file: !533, line: 585, column: 13)
!8529 = !DILocation(line: 590, column: 10, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !533, line: 589, column: 54)
!8531 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 589, column: 6)
!8532 = !DILocation(line: 593, column: 8, scope: !8469)
!8533 = !DILocation(line: 594, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 594, column: 2)
!8535 = !DILocation(line: 595, column: 10, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 595, column: 6)
!8537 = !DILocation(line: 595, column: 21, scope: !8536)
!8538 = !DILocation(line: 595, column: 24, scope: !8536)
!8539 = !DILocation(line: 595, column: 6, scope: !8469)
!8540 = !DILocation(line: 596, column: 15, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8536, file: !533, line: 595, column: 56)
!8542 = !DILocation(line: 597, column: 2, scope: !8541)
!8543 = !DILocation(line: 599, column: 2, scope: !8469)
!8544 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3111, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8545 = !DILocation(line: 100, column: 18, scope: !8544)
!8546 = !DILocation(line: 100, column: 16, scope: !8544)
!8547 = !DILocation(line: 101, column: 1, scope: !8544)
!8548 = distinct !DISubprogram(name: "k_thread_create", scope: !4442, file: !4442, line: 24, type: !8549, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8557)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{!8216, !8217, !8551, !185, !559, !106, !106, !106, !107, !152, !8553}
!8551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8552, size: 32)
!8552 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8553 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8554)
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8555)
!8555 = !{!8556}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8554, file: !565, line: 66, baseType: !564, size: 64)
!8557 = !{!8558, !8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567}
!8558 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8548, file: !4442, line: 24, type: !8217)
!8559 = !DILocalVariable(name: "stack", arg: 2, scope: !8548, file: !4442, line: 24, type: !8551)
!8560 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8548, file: !4442, line: 24, type: !185)
!8561 = !DILocalVariable(name: "entry", arg: 4, scope: !8548, file: !4442, line: 24, type: !559)
!8562 = !DILocalVariable(name: "p1", arg: 5, scope: !8548, file: !4442, line: 24, type: !106)
!8563 = !DILocalVariable(name: "p2", arg: 6, scope: !8548, file: !4442, line: 24, type: !106)
!8564 = !DILocalVariable(name: "p3", arg: 7, scope: !8548, file: !4442, line: 24, type: !106)
!8565 = !DILocalVariable(name: "prio", arg: 8, scope: !8548, file: !4442, line: 24, type: !107)
!8566 = !DILocalVariable(name: "options", arg: 9, scope: !8548, file: !4442, line: 24, type: !152)
!8567 = !DILocalVariable(name: "delay", arg: 10, scope: !8548, file: !4442, line: 24, type: !8553)
!8568 = !DILocation(line: 0, scope: !8548)
!8569 = !DILocation(line: 49, column: 2, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8548, file: !4442, line: 49, column: 2)
!8571 = !{i64 2154182743}
!8572 = !DILocation(line: 50, column: 9, scope: !8548)
!8573 = !DILocation(line: 50, column: 2, scope: !8548)
!8574 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8575, file: !8575, line: 24, type: !8576, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8578)
!8575 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!8576 = !DISubroutineType(types: !8577)
!8577 = !{null, !13, !8217}
!8578 = !{!8579, !8580}
!8579 = !DILocalVariable(name: "object", arg: 1, scope: !8574, file: !8575, line: 24, type: !13)
!8580 = !DILocalVariable(name: "thread", arg: 2, scope: !8574, file: !8575, line: 24, type: !8217)
!8581 = !DILocation(line: 0, scope: !8574)
!8582 = !DILocation(line: 34, column: 2, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8574, file: !8575, line: 34, column: 2)
!8584 = !{i64 2153699163}
!8585 = !DILocation(line: 36, column: 1, scope: !8574)
!8586 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4442, file: !4442, line: 391, type: !8587, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!107, !8216, !118}
!8589 = !{!8590, !8591}
!8590 = !DILocalVariable(name: "thread", arg: 1, scope: !8586, file: !4442, line: 391, type: !8216)
!8591 = !DILocalVariable(name: "str", arg: 2, scope: !8586, file: !4442, line: 391, type: !118)
!8592 = !DILocation(line: 0, scope: !8586)
!8593 = !DILocation(line: 400, column: 2, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8586, file: !4442, line: 400, column: 2)
!8595 = !{i64 2154184171}
!8596 = !DILocation(line: 401, column: 9, scope: !8586)
!8597 = !DILocation(line: 401, column: 2, scope: !8586)
!8598 = distinct !DISubprogram(name: "k_thread_start", scope: !4442, file: !4442, line: 205, type: !8214, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8599)
!8599 = !{!8600}
!8600 = !DILocalVariable(name: "thread", arg: 1, scope: !8598, file: !4442, line: 205, type: !8216)
!8601 = !DILocation(line: 0, scope: !8598)
!8602 = !DILocation(line: 214, column: 2, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8598, file: !4442, line: 214, column: 2)
!8604 = !{i64 2154183423}
!8605 = !DILocation(line: 215, column: 2, scope: !8598)
!8606 = !DILocation(line: 216, column: 1, scope: !8598)
!8607 = distinct !DISubprogram(name: "k_thread_join", scope: !4442, file: !4442, line: 74, type: !8608, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8610)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!107, !8217, !8553}
!8610 = !{!8611, !8612}
!8611 = !DILocalVariable(name: "thread", arg: 1, scope: !8607, file: !4442, line: 74, type: !8217)
!8612 = !DILocalVariable(name: "timeout", arg: 2, scope: !8607, file: !4442, line: 74, type: !8553)
!8613 = !DILocation(line: 0, scope: !8607)
!8614 = !DILocation(line: 83, column: 2, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8607, file: !4442, line: 83, column: 2)
!8616 = !{i64 2154182879}
!8617 = !DILocation(line: 84, column: 9, scope: !8607)
!8618 = !DILocation(line: 84, column: 2, scope: !8607)
!8619 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8620, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{null, !145, !8292, !106}
!8622 = !{!8623, !8624, !8625, !8626}
!8623 = !DILocalVariable(name: "is_before", arg: 1, scope: !8619, file: !533, line: 207, type: !145)
!8624 = !DILocalVariable(name: "test", arg: 2, scope: !8619, file: !533, line: 207, type: !8292)
!8625 = !DILocalVariable(name: "data", arg: 3, scope: !8619, file: !533, line: 207, type: !106)
!8626 = !DILocalVariable(name: "rule", scope: !8627, file: !533, line: 209, type: !8628)
!8627 = distinct !DILexicalBlock(scope: !8619, file: !533, line: 209, column: 2)
!8628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8629, size: 32)
!8629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8630)
!8630 = !{!8631, !8638}
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8629, file: !114, line: 438, baseType: !8632, size: 32)
!8632 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8633)
!8633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8634, size: 32)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{null, !8636, !106}
!8636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8637, size: 32)
!8637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8293)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8629, file: !114, line: 439, baseType: !8632, size: 32, offset: 32)
!8639 = !DILocation(line: 0, scope: !8619)
!8640 = !DILocation(line: 0, scope: !8627)
!8641 = !DILocation(line: 209, column: 2, scope: !8627)
!8642 = !DILocation(line: 217, column: 1, scope: !8619)
!8643 = !DILocation(line: 211, column: 17, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !533, line: 211, column: 7)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !533, line: 210, column: 49)
!8646 = distinct !DILexicalBlock(scope: !8627, file: !533, line: 209, column: 2)
!8647 = !DILocation(line: 211, column: 26, scope: !8644)
!8648 = !DILocation(line: 211, column: 20, scope: !8644)
!8649 = !DILocation(line: 211, column: 7, scope: !8645)
!8650 = !DILocation(line: 213, column: 34, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8644, file: !533, line: 213, column: 14)
!8652 = !DILocation(line: 213, column: 28, scope: !8651)
!8653 = !DILocation(line: 213, column: 14, scope: !8644)
!8654 = !DILocation(line: 0, scope: !8644)
!8655 = !DILocation(line: 210, column: 41, scope: !8646)
!8656 = !DILocation(line: 210, column: 12, scope: !8646)
!8657 = distinct !{!8657, !8641, !8658}
!8658 = !DILocation(line: 216, column: 2, scope: !8627)
!8659 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3111, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8660)
!8660 = !{!8661}
!8661 = !DILocalVariable(name: "spend_cycle", scope: !8659, file: !690, line: 105, type: !152)
!8662 = !DILocation(line: 105, column: 25, scope: !8659)
!8663 = !DILocation(line: 105, column: 44, scope: !8659)
!8664 = !DILocation(line: 105, column: 42, scope: !8659)
!8665 = !DILocation(line: 0, scope: !8659)
!8666 = !DILocation(line: 107, column: 18, scope: !8659)
!8667 = !DILocation(line: 107, column: 16, scope: !8659)
!8668 = !DILocation(line: 108, column: 1, scope: !8659)
!8669 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8670, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8672)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!107, !8292}
!8672 = !{!8673, !8674, !8675}
!8673 = !DILocalVariable(name: "test", arg: 1, scope: !8669, file: !533, line: 76, type: !8292)
!8674 = !DILocalVariable(name: "ret", scope: !8669, file: !533, line: 78, type: !107)
!8675 = !DILocalVariable(name: "mock_status", scope: !8669, file: !533, line: 79, type: !107)
!8676 = !DILocation(line: 0, scope: !8669)
!8677 = !DILocation(line: 89, column: 3, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !533, line: 88, column: 41)
!8679 = distinct !DILexicalBlock(scope: !8669, file: !533, line: 88, column: 6)
!8680 = !DILocation(line: 103, column: 2, scope: !8669)
!8681 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8682, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!107, !8636, !107}
!8684 = !{!8685, !8686, !8687, !8688}
!8685 = !DILocalVariable(name: "test", arg: 1, scope: !8681, file: !533, line: 236, type: !8636)
!8686 = !DILocalVariable(name: "ret", arg: 2, scope: !8681, file: !533, line: 236, type: !107)
!8687 = !DILocalVariable(name: "expected_result", scope: !8681, file: !533, line: 238, type: !554)
!8688 = !DILocalVariable(name: "expectation", scope: !8689, file: !533, line: 240, type: !8690)
!8689 = distinct !DILexicalBlock(scope: !8681, file: !533, line: 240, column: 2)
!8690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8691, size: 32)
!8691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8692)
!8692 = !{!8693, !8694, !8695}
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8691, file: !114, line: 48, baseType: !118, size: 32)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8691, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8691, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8696 = !DILocation(line: 0, scope: !8681)
!8697 = !DILocation(line: 0, scope: !8689)
!8698 = !DILocation(line: 240, column: 2, scope: !8689)
!8699 = !DILocation(line: 243, column: 27, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !533, line: 243, column: 7)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !533, line: 242, column: 75)
!8702 = distinct !DILexicalBlock(scope: !8689, file: !533, line: 240, column: 2)
!8703 = !DILocation(line: 243, column: 44, scope: !8700)
!8704 = !DILocation(line: 243, column: 7, scope: !8700)
!8705 = !DILocation(line: 243, column: 50, scope: !8700)
!8706 = !DILocation(line: 243, column: 55, scope: !8700)
!8707 = !DILocation(line: 244, column: 27, scope: !8700)
!8708 = !DILocation(line: 244, column: 50, scope: !8700)
!8709 = !DILocation(line: 244, column: 7, scope: !8700)
!8710 = !DILocation(line: 244, column: 67, scope: !8700)
!8711 = !DILocation(line: 243, column: 7, scope: !8701)
!8712 = !DILocation(line: 242, column: 60, scope: !8702)
!8713 = !DILocation(line: 242, column: 19, scope: !8702)
!8714 = distinct !{!8714, !8698, !8715}
!8715 = !DILocation(line: 248, column: 2, scope: !8689)
!8716 = !DILocation(line: 245, column: 35, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8700, file: !533, line: 244, column: 73)
!8718 = !DILocation(line: 250, column: 6, scope: !8681)
!8719 = !DILocation(line: 255, column: 15, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !533, line: 250, column: 53)
!8721 = distinct !DILexicalBlock(scope: !8681, file: !533, line: 250, column: 6)
!8722 = !DILocation(line: 255, column: 10, scope: !8720)
!8723 = !DILocation(line: 255, column: 3, scope: !8720)
!8724 = !DILocation(line: 262, column: 15, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !533, line: 257, column: 53)
!8726 = distinct !DILexicalBlock(scope: !8681, file: !533, line: 257, column: 6)
!8727 = !DILocation(line: 262, column: 10, scope: !8725)
!8728 = !DILocation(line: 262, column: 3, scope: !8725)
!8729 = !DILocation(line: 266, column: 1, scope: !8681)
!8730 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8731, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8733)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!118, !107}
!8733 = !{!8734}
!8734 = !DILocalVariable(name: "result", arg: 1, scope: !8730, file: !690, line: 81, type: !107)
!8735 = !DILocation(line: 0, scope: !8730)
!8736 = !DILocation(line: 83, column: 2, scope: !8730)
!8737 = !DILocation(line: 0, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8730, file: !690, line: 83, column: 18)
!8739 = !DILocation(line: 93, column: 1, scope: !8730)
!8740 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6363, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8741 = !DILocation(line: 1677, column: 9, scope: !8740)
!8742 = !DILocation(line: 1677, column: 2, scope: !8740)
!8743 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8744, file: !8744, line: 809, type: !7563, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8745)
!8744 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8745 = !{!8746}
!8746 = !DILocalVariable(name: "t", arg: 1, scope: !8743, file: !8744, line: 809, type: !152)
!8747 = !DILocation(line: 0, scope: !8743)
!8748 = !DILocation(line: 812, column: 17, scope: !8743)
!8749 = !DILocalVariable(name: "t", arg: 1, scope: !8750, file: !8744, line: 102, type: !566)
!8750 = distinct !DISubprogram(name: "z_tmcvt", scope: !8744, file: !8744, line: 102, type: !8751, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8753 = !{!8749, !8754, !8755, !8756, !8757, !8758, !8759, !8760, !8761, !8762, !8763}
!8754 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8750, file: !8744, line: 102, type: !152)
!8755 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8750, file: !8744, line: 103, type: !152)
!8756 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8750, file: !8744, line: 103, type: !145)
!8757 = !DILocalVariable(name: "result32", arg: 5, scope: !8750, file: !8744, line: 104, type: !145)
!8758 = !DILocalVariable(name: "round_up", arg: 6, scope: !8750, file: !8744, line: 104, type: !145)
!8759 = !DILocalVariable(name: "round_off", arg: 7, scope: !8750, file: !8744, line: 105, type: !145)
!8760 = !DILocalVariable(name: "mul_ratio", scope: !8750, file: !8744, line: 107, type: !145)
!8761 = !DILocalVariable(name: "div_ratio", scope: !8750, file: !8744, line: 109, type: !145)
!8762 = !DILocalVariable(name: "off", scope: !8750, file: !8744, line: 116, type: !566)
!8763 = !DILocalVariable(name: "rdivisor", scope: !8764, file: !8744, line: 119, type: !152)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !8744, line: 118, column: 18)
!8765 = distinct !DILexicalBlock(scope: !8750, file: !8744, line: 118, column: 6)
!8766 = !DILocation(line: 0, scope: !8750, inlinedAt: !8767)
!8767 = distinct !DILocation(line: 812, column: 9, scope: !8743)
!8768 = !DILocation(line: 135, column: 5, scope: !8769, inlinedAt: !8767)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !8744, line: 134, column: 17)
!8770 = distinct !DILexicalBlock(scope: !8750, file: !8744, line: 134, column: 6)
!8771 = !DILocation(line: 136, column: 16, scope: !8772, inlinedAt: !8767)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !8744, line: 136, column: 7)
!8773 = !DILocation(line: 812, column: 9, scope: !8743)
!8774 = !DILocation(line: 812, column: 2, scope: !8743)
!8775 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8776, file: !8776, line: 24, type: !6363, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8776 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8777 = !DILocation(line: 26, column: 9, scope: !8775)
!8778 = !DILocation(line: 26, column: 2, scope: !8775)
!8779 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8780)
!8780 = !{!8781, !8782, !8783, !8784, !8785}
!8781 = !DILocalVariable(name: "a", arg: 1, scope: !8779, file: !533, line: 507, type: !106)
!8782 = !DILocalVariable(name: "b", arg: 2, scope: !8779, file: !533, line: 507, type: !106)
!8783 = !DILocalVariable(name: "c", arg: 3, scope: !8779, file: !533, line: 507, type: !106)
!8784 = !DILocalVariable(name: "suite", scope: !8779, file: !533, line: 509, type: !8340)
!8785 = !DILocalVariable(name: "test", scope: !8779, file: !533, line: 510, type: !8292)
!8786 = !DILocation(line: 0, scope: !8779)
!8787 = !DILocation(line: 510, column: 33, scope: !8779)
!8788 = !DILocation(line: 512, column: 14, scope: !8779)
!8789 = !DILocation(line: 513, column: 2, scope: !8779)
!8790 = !DILocation(line: 514, column: 13, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8779, file: !533, line: 514, column: 6)
!8792 = !DILocation(line: 514, column: 6, scope: !8791)
!8793 = !DILocation(line: 514, column: 6, scope: !8779)
!8794 = !DILocation(line: 515, column: 3, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8791, file: !533, line: 514, column: 21)
!8796 = !DILocation(line: 516, column: 2, scope: !8795)
!8797 = !DILocation(line: 517, column: 2, scope: !8779)
!8798 = !DILocation(line: 518, column: 14, scope: !8779)
!8799 = !DILocation(line: 519, column: 1, scope: !8779)
!8800 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8801, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8803)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{null, !8340, !8292, !106}
!8803 = !{!8804, !8805, !8806}
!8804 = !DILocalVariable(name: "suite", arg: 1, scope: !8800, file: !533, line: 219, type: !8340)
!8805 = !DILocalVariable(name: "test", arg: 2, scope: !8800, file: !533, line: 219, type: !8292)
!8806 = !DILocalVariable(name: "data", arg: 3, scope: !8800, file: !533, line: 220, type: !106)
!8807 = !DILocation(line: 0, scope: !8800)
!8808 = !DILocation(line: 222, column: 8, scope: !8800)
!8809 = !DILocation(line: 223, column: 8, scope: !8800)
!8810 = !DILocation(line: 223, column: 2, scope: !8800)
!8811 = !DILocation(line: 224, column: 1, scope: !8800)
!8812 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8813, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8815)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{!107, !13}
!8815 = !{!8816, !8817, !8818}
!8816 = !DILocalVariable(name: "state", arg: 1, scope: !8812, file: !533, line: 929, type: !13)
!8817 = !DILocalVariable(name: "count", scope: !8812, file: !533, line: 931, type: !107)
!8818 = !DILocalVariable(name: "ptr", scope: !8819, file: !533, line: 954, type: !8340)
!8819 = distinct !DILexicalBlock(scope: !8812, file: !533, line: 954, column: 2)
!8820 = !DILocation(line: 0, scope: !8812)
!8821 = !DILocation(line: 933, column: 6, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8812, file: !533, line: 933, column: 6)
!8823 = !DILocation(line: 933, column: 18, scope: !8822)
!8824 = !DILocation(line: 933, column: 6, scope: !8812)
!8825 = !DILocation(line: 0, scope: !8819)
!8826 = !DILocation(line: 954, column: 2, scope: !8819)
!8827 = !DILocation(line: 956, column: 12, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !533, line: 955, column: 48)
!8829 = distinct !DILexicalBlock(scope: !8819, file: !533, line: 954, column: 2)
!8830 = !DILocation(line: 956, column: 9, scope: !8828)
!8831 = !DILocation(line: 960, column: 7, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8828, file: !533, line: 960, column: 7)
!8833 = !DILocation(line: 960, column: 19, scope: !8832)
!8834 = !DILocation(line: 955, column: 41, scope: !8829)
!8835 = !DILocation(line: 960, column: 50, scope: !8832)
!8836 = distinct !{!8836, !8826, !8837}
!8837 = !DILocation(line: 964, column: 2, scope: !8819)
!8838 = !DILocation(line: 967, column: 2, scope: !8812)
!8839 = !DILocation(line: 969, column: 2, scope: !8812)
!8840 = !DILocation(line: 970, column: 1, scope: !8812)
!8841 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8842, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8844)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!107, !8340, !13}
!8844 = !{!8845, !8846, !8847, !8848, !8849, !8851}
!8845 = !DILocalVariable(name: "ptr", arg: 1, scope: !8841, file: !533, line: 907, type: !8340)
!8846 = !DILocalVariable(name: "state", arg: 2, scope: !8841, file: !533, line: 907, type: !13)
!8847 = !DILocalVariable(name: "stats", scope: !8841, file: !533, line: 909, type: !8351)
!8848 = !DILocalVariable(name: "count", scope: !8841, file: !533, line: 910, type: !107)
!8849 = !DILocalVariable(name: "i", scope: !8850, file: !533, line: 914, type: !107)
!8850 = distinct !DILexicalBlock(scope: !8841, file: !533, line: 914, column: 2)
!8851 = !DILocalVariable(name: "fail", scope: !8852, file: !533, line: 916, type: !107)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !533, line: 915, column: 47)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !533, line: 915, column: 7)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !533, line: 914, column: 47)
!8855 = distinct !DILexicalBlock(scope: !8850, file: !533, line: 914, column: 2)
!8856 = !DILocation(line: 0, scope: !8841)
!8857 = !DILocation(line: 909, column: 41, scope: !8841)
!8858 = !DILocation(line: 912, column: 2, scope: !8841)
!8859 = !DILocation(line: 0, scope: !8850)
!8860 = !DILocation(line: 915, column: 7, scope: !8853)
!8861 = !DILocation(line: 915, column: 7, scope: !8854)
!8862 = !DILocation(line: 916, column: 15, scope: !8852)
!8863 = !DILocation(line: 0, scope: !8852)
!8864 = !DILocation(line: 919, column: 20, scope: !8852)
!8865 = !DILocation(line: 920, column: 31, scope: !8852)
!8866 = !DILocation(line: 920, column: 25, scope: !8852)
!8867 = !DILocation(line: 921, column: 3, scope: !8852)
!8868 = !DILocation(line: 0, scope: !8853)
!8869 = !DILocation(line: 926, column: 2, scope: !8841)
!8870 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3111, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8871)
!8871 = !{!8872}
!8872 = !DILocalVariable(name: "ptr", scope: !8873, file: !533, line: 894, type: !8340)
!8873 = distinct !DILexicalBlock(scope: !8870, file: !533, line: 894, column: 2)
!8874 = !DILocation(line: 892, column: 2, scope: !8870)
!8875 = !DILocation(line: 0, scope: !8873)
!8876 = !DILocation(line: 894, column: 2, scope: !8873)
!8877 = !DILocation(line: 903, column: 2, scope: !8870)
!8878 = !DILocation(line: 905, column: 1, scope: !8870)
!8879 = !DILocation(line: 898, column: 3, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !533, line: 895, column: 48)
!8881 = distinct !DILexicalBlock(scope: !8873, file: !533, line: 894, column: 2)
!8882 = !DILocation(line: 895, column: 41, scope: !8881)
!8883 = !DILocation(line: 895, column: 11, scope: !8881)
!8884 = distinct !{!8884, !8876, !8885}
!8885 = !DILocation(line: 902, column: 2, scope: !8873)
!8886 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8887, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8889)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{null, !8340}
!8889 = !{!8890, !8891, !8892, !8893}
!8890 = !DILocalVariable(name: "suite", arg: 1, scope: !8886, file: !533, line: 852, type: !8340)
!8891 = !DILocalVariable(name: "test", scope: !8886, file: !533, line: 854, type: !8292)
!8892 = !DILocalVariable(name: "tc_result", scope: !8886, file: !533, line: 855, type: !107)
!8893 = !DILocalVariable(name: "flush_frequency", scope: !8886, file: !533, line: 856, type: !107)
!8894 = !DILocation(line: 0, scope: !8886)
!8895 = !DILocation(line: 858, column: 2, scope: !8886)
!8896 = !DILocation(line: 860, column: 47, scope: !8886)
!8897 = !DILocation(line: 860, column: 18, scope: !8886)
!8898 = !DILocation(line: 860, column: 60, scope: !8886)
!8899 = !DILocation(line: 860, column: 2, scope: !8886)
!8900 = !DILocation(line: 861, column: 13, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !533, line: 861, column: 7)
!8902 = distinct !DILexicalBlock(scope: !8886, file: !533, line: 860, column: 70)
!8903 = !DILocation(line: 861, column: 20, scope: !8901)
!8904 = !DILocation(line: 861, column: 47, scope: !8901)
!8905 = !DILocation(line: 861, column: 31, scope: !8901)
!8906 = !DILocation(line: 861, column: 7, scope: !8902)
!8907 = !DILocation(line: 863, column: 27, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8901, file: !533, line: 863, column: 14)
!8909 = !DILocation(line: 863, column: 38, scope: !8908)
!8910 = !DILocation(line: 0, scope: !8901)
!8911 = !DILocation(line: 869, column: 3, scope: !8902)
!8912 = distinct !{!8912, !8899, !8913}
!8913 = !DILocation(line: 880, column: 2, scope: !8886)
!8914 = !DILocation(line: 881, column: 2, scope: !8886)
!8915 = !DILocation(line: 883, column: 1, scope: !8886)
!8916 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8887, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8917)
!8917 = !{!8918, !8919, !8920, !8921, !8922, !8923, !8924, !8925, !8926, !8927, !8928, !8929, !8930, !8931}
!8918 = !DILocalVariable(name: "suite", arg: 1, scope: !8916, file: !533, line: 801, type: !8340)
!8919 = !DILocalVariable(name: "distinct_pass", scope: !8916, file: !533, line: 803, type: !107)
!8920 = !DILocalVariable(name: "distinct_fail", scope: !8916, file: !533, line: 803, type: !107)
!8921 = !DILocalVariable(name: "distinct_skip", scope: !8916, file: !533, line: 803, type: !107)
!8922 = !DILocalVariable(name: "distinct_total", scope: !8916, file: !533, line: 803, type: !107)
!8923 = !DILocalVariable(name: "effective_total", scope: !8916, file: !533, line: 804, type: !107)
!8924 = !DILocalVariable(name: "expanded_pass", scope: !8916, file: !533, line: 805, type: !107)
!8925 = !DILocalVariable(name: "expanded_passrate", scope: !8916, file: !533, line: 805, type: !107)
!8926 = !DILocalVariable(name: "passrate_major", scope: !8916, file: !533, line: 806, type: !107)
!8927 = !DILocalVariable(name: "passrate_minor", scope: !8916, file: !533, line: 806, type: !107)
!8928 = !DILocalVariable(name: "passrate_tail", scope: !8916, file: !533, line: 806, type: !107)
!8929 = !DILocalVariable(name: "suite_result", scope: !8916, file: !533, line: 807, type: !107)
!8930 = !DILocalVariable(name: "test", scope: !8916, file: !533, line: 809, type: !8292)
!8931 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8916, file: !533, line: 810, type: !32)
!8932 = !DILocation(line: 0, scope: !8916)
!8933 = !DILocation(line: 813, column: 47, scope: !8916)
!8934 = !DILocation(line: 813, column: 18, scope: !8916)
!8935 = !DILocation(line: 813, column: 60, scope: !8916)
!8936 = !DILocation(line: 813, column: 2, scope: !8916)
!8937 = !DILocation(line: 814, column: 17, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8916, file: !533, line: 813, column: 70)
!8939 = !DILocation(line: 815, column: 36, scope: !8938)
!8940 = !DILocation(line: 815, column: 43, scope: !8938)
!8941 = !DILocation(line: 815, column: 27, scope: !8938)
!8942 = !DILocation(line: 816, column: 20, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8938, file: !533, line: 816, column: 7)
!8944 = !DILocation(line: 816, column: 47, scope: !8943)
!8945 = !DILocation(line: 816, column: 31, scope: !8943)
!8946 = !DILocation(line: 816, column: 7, scope: !8938)
!8947 = !DILocation(line: 817, column: 17, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8943, file: !533, line: 816, column: 58)
!8949 = !DILocation(line: 818, column: 3, scope: !8948)
!8950 = !DILocation(line: 818, column: 27, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8943, file: !533, line: 818, column: 14)
!8952 = !DILocation(line: 818, column: 38, scope: !8951)
!8953 = !DILocation(line: 818, column: 14, scope: !8943)
!8954 = !DILocation(line: 819, column: 17, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !533, line: 818, column: 65)
!8956 = !DILocation(line: 820, column: 3, scope: !8955)
!8957 = !DILocation(line: 821, column: 17, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8951, file: !533, line: 820, column: 10)
!8959 = distinct !{!8959, !8936, !8960}
!8960 = !DILocation(line: 823, column: 2, scope: !8916)
!8961 = !DILocation(line: 825, column: 20, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8916, file: !533, line: 825, column: 6)
!8963 = !DILocation(line: 825, column: 6, scope: !8916)
!8964 = !DILocation(line: 829, column: 33, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8962, file: !533, line: 828, column: 9)
!8966 = !DILocation(line: 829, column: 18, scope: !8965)
!8967 = !DILocation(line: 830, column: 36, scope: !8965)
!8968 = !DILocation(line: 831, column: 33, scope: !8965)
!8969 = !DILocation(line: 832, column: 37, scope: !8965)
!8970 = !DILocation(line: 833, column: 38, scope: !8965)
!8971 = !DILocation(line: 834, column: 56, scope: !8965)
!8972 = !DILocation(line: 834, column: 39, scope: !8965)
!8973 = !DILocation(line: 834, column: 64, scope: !8965)
!8974 = !DILocation(line: 835, column: 78, scope: !8965)
!8975 = !DILocation(line: 835, column: 61, scope: !8965)
!8976 = !DILocation(line: 836, column: 21, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8965, file: !533, line: 836, column: 7)
!8978 = !DILocation(line: 836, column: 7, scope: !8965)
!8979 = !DILocation(line: 0, scope: !8962)
!8980 = !DILocation(line: 841, column: 2, scope: !8916)
!8981 = !DILocation(line: 849, column: 1, scope: !8916)
!8982 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8887, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8983)
!8983 = !{!8984, !8985}
!8984 = !DILocalVariable(name: "suite", arg: 1, scope: !8982, file: !533, line: 773, type: !8340)
!8985 = !DILocalVariable(name: "test", scope: !8982, file: !533, line: 775, type: !8292)
!8986 = !DILocation(line: 0, scope: !8982)
!8987 = !DILocation(line: 777, column: 47, scope: !8982)
!8988 = !DILocation(line: 777, column: 18, scope: !8982)
!8989 = !DILocation(line: 777, column: 60, scope: !8982)
!8990 = !DILocation(line: 777, column: 2, scope: !8982)
!8991 = !DILocation(line: 778, column: 9, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8982, file: !533, line: 777, column: 70)
!8993 = !DILocation(line: 778, column: 16, scope: !8992)
!8994 = !DILocation(line: 778, column: 26, scope: !8992)
!8995 = !DILocation(line: 779, column: 9, scope: !8992)
!8996 = !DILocation(line: 779, column: 16, scope: !8992)
!8997 = !DILocation(line: 779, column: 27, scope: !8992)
!8998 = !DILocation(line: 780, column: 9, scope: !8992)
!8999 = !DILocation(line: 780, column: 16, scope: !8992)
!9000 = !DILocation(line: 780, column: 27, scope: !8992)
!9001 = !DILocation(line: 781, column: 9, scope: !8992)
!9002 = !DILocation(line: 781, column: 16, scope: !8992)
!9003 = !DILocation(line: 781, column: 27, scope: !8992)
!9004 = !DILocation(line: 782, column: 9, scope: !8992)
!9005 = !DILocation(line: 782, column: 16, scope: !8992)
!9006 = !DILocation(line: 782, column: 34, scope: !8992)
!9007 = distinct !{!9007, !8990, !9008}
!9008 = !DILocation(line: 783, column: 2, scope: !8982)
!9009 = !DILocation(line: 784, column: 1, scope: !8982)
!9010 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3111, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9011)
!9011 = !{!9012, !9013, !9014}
!9012 = !DILocalVariable(name: "all_tests_run", scope: !9010, file: !533, line: 974, type: !145)
!9013 = !DILocalVariable(name: "suite", scope: !9010, file: !533, line: 975, type: !8340)
!9014 = !DILocalVariable(name: "test", scope: !9010, file: !533, line: 976, type: !8292)
!9015 = !DILocation(line: 0, scope: !9010)
!9016 = !DILocation(line: 979, column: 3, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !533, line: 979, column: 3)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !533, line: 978, column: 47)
!9019 = distinct !DILexicalBlock(scope: !9010, file: !533, line: 978, column: 6)
!9020 = !DILocation(line: 987, column: 3, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !533, line: 987, column: 3)
!9022 = !DILocation(line: 981, column: 15, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !533, line: 981, column: 8)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !533, line: 980, column: 17)
!9025 = distinct !DILexicalBlock(scope: !9017, file: !533, line: 979, column: 3)
!9026 = !DILocation(line: 981, column: 22, scope: !9023)
!9027 = !DILocation(line: 981, column: 32, scope: !9023)
!9028 = !DILocation(line: 981, column: 8, scope: !9024)
!9029 = !DILocation(line: 982, column: 59, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9023, file: !533, line: 981, column: 37)
!9031 = !DILocation(line: 982, column: 5, scope: !9030)
!9032 = !DILocation(line: 984, column: 4, scope: !9030)
!9033 = !DILocation(line: 980, column: 8, scope: !9025)
!9034 = !DILocation(line: 979, column: 52, scope: !9025)
!9035 = distinct !{!9035, !9016, !9036}
!9036 = !DILocation(line: 985, column: 3, scope: !9017)
!9037 = !DILocation(line: 988, column: 40, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !533, line: 987, column: 86)
!9039 = distinct !DILexicalBlock(scope: !9021, file: !533, line: 987, column: 3)
!9040 = !DILocation(line: 988, column: 12, scope: !9038)
!9041 = !DILocation(line: 989, column: 14, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9038, file: !533, line: 989, column: 8)
!9043 = !DILocation(line: 989, column: 8, scope: !9038)
!9044 = !DILocation(line: 992, column: 17, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9042, file: !533, line: 989, column: 23)
!9046 = !DILocation(line: 992, column: 29, scope: !9045)
!9047 = !DILocation(line: 990, column: 5, scope: !9045)
!9048 = !DILocation(line: 994, column: 4, scope: !9045)
!9049 = !DILocation(line: 987, column: 78, scope: !9039)
!9050 = !DILocation(line: 987, column: 49, scope: !9039)
!9051 = distinct !{!9051, !9020, !9052}
!9052 = !DILocation(line: 995, column: 3, scope: !9021)
!9053 = !DILocation(line: 997, column: 7, scope: !9018)
!9054 = !DILocation(line: 998, column: 16, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !533, line: 997, column: 23)
!9056 = distinct !DILexicalBlock(scope: !9018, file: !533, line: 997, column: 7)
!9057 = !DILocation(line: 999, column: 3, scope: !9055)
!9058 = !DILocation(line: 1002, column: 2, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9010, file: !533, line: 1002, column: 2)
!9060 = !DILocation(line: 1003, column: 13, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !533, line: 1003, column: 7)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !533, line: 1002, column: 85)
!9063 = distinct !DILexicalBlock(scope: !9059, file: !533, line: 1002, column: 2)
!9064 = !DILocation(line: 1003, column: 20, scope: !9061)
!9065 = !DILocation(line: 1003, column: 46, scope: !9061)
!9066 = !DILocation(line: 1003, column: 31, scope: !9061)
!9067 = !DILocation(line: 1003, column: 72, scope: !9061)
!9068 = !DILocation(line: 1003, column: 57, scope: !9061)
!9069 = !DILocation(line: 1004, column: 20, scope: !9061)
!9070 = !DILocation(line: 1003, column: 83, scope: !9061)
!9071 = !DILocation(line: 1003, column: 7, scope: !9062)
!9072 = !DILocation(line: 1005, column: 41, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9061, file: !533, line: 1004, column: 31)
!9074 = !DILocation(line: 1005, column: 64, scope: !9073)
!9075 = !DILocation(line: 1005, column: 4, scope: !9073)
!9076 = !DILocation(line: 1006, column: 16, scope: !9073)
!9077 = !DILocation(line: 1007, column: 3, scope: !9073)
!9078 = !DILocation(line: 1002, column: 77, scope: !9063)
!9079 = !DILocation(line: 1002, column: 48, scope: !9063)
!9080 = distinct !{!9080, !9058, !9081}
!9081 = !DILocation(line: 1008, column: 2, scope: !9059)
!9082 = !DILocation(line: 1009, column: 1, scope: !9010)
!9083 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9084)
!9084 = !{!9085}
!9085 = !DILocalVariable(name: "state", arg: 1, scope: !9083, file: !533, line: 1011, type: !13)
!9086 = !DILocation(line: 0, scope: !9083)
!9087 = !DILocation(line: 1011, column: 51, scope: !9083)
!9088 = !DILocation(line: 1011, column: 41, scope: !9083)
!9089 = !DILocation(line: 1011, column: 67, scope: !9083)
!9090 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3111, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!9091 = !DILocation(line: 1015, column: 2, scope: !9090)
!9092 = !DILocation(line: 1017, column: 2, scope: !9090)
!9093 = !DILocation(line: 1018, column: 1, scope: !9090)
!9094 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3111, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!9095 = !DILocation(line: 1046, column: 2, scope: !9094)
!9096 = !DILocation(line: 1047, column: 2, scope: !9094)
!9097 = !DILocation(line: 1071, column: 1, scope: !9094)
!9098 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9099)
!9099 = !{!9100}
!9100 = !DILocalVariable(name: "state", arg: 1, scope: !9098, file: !699, line: 30, type: !13)
!9101 = !DILocation(line: 0, scope: !9098)
!9102 = !DILocation(line: 32, column: 2, scope: !9098)
!9103 = !DILocation(line: 33, column: 1, scope: !9098)
!9104 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9105)
!9105 = !{!9106, !9107, !9108}
!9106 = !DILocalVariable(name: "state", arg: 1, scope: !9104, file: !699, line: 45, type: !13)
!9107 = !DILocalVariable(name: "suite", arg: 2, scope: !9104, file: !699, line: 45, type: !708)
!9108 = !DILocalVariable(name: "run_suite", scope: !9104, file: !699, line: 47, type: !145)
!9109 = !DILocation(line: 0, scope: !9104)
!9110 = !DILocation(line: 49, column: 13, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9104, file: !699, line: 49, column: 6)
!9112 = !DILocation(line: 49, column: 23, scope: !9111)
!9113 = !DILocation(line: 49, column: 6, scope: !9104)
!9114 = !DILocation(line: 50, column: 15, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !699, line: 49, column: 32)
!9116 = !DILocation(line: 51, column: 2, scope: !9115)
!9117 = !DILocation(line: 53, column: 2, scope: !9104)
!9118 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9119)
!9119 = !{!9120, !9121}
!9120 = !DILocalVariable(name: "suite", arg: 1, scope: !9118, file: !699, line: 65, type: !118)
!9121 = !DILocalVariable(name: "test", arg: 2, scope: !9118, file: !699, line: 65, type: !118)
!9122 = !DILocation(line: 0, scope: !9118)
!9123 = !DILocation(line: 67, column: 2, scope: !9118)
!9124 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9125, file: !9125, line: 24, type: !8813, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9126)
!9125 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!9126 = !{!9127}
!9127 = !DILocalVariable(name: "state", arg: 1, scope: !9124, file: !9125, line: 24, type: !13)
!9128 = !DILocation(line: 0, scope: !9124)
!9129 = !DILocation(line: 32, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9124, file: !9125, line: 32, column: 2)
!9131 = !{i64 2154278494}
!9132 = !DILocation(line: 33, column: 9, scope: !9124)
!9133 = !DILocation(line: 33, column: 2, scope: !9124)
!9134 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9135, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9137)
!9135 = !DISubroutineType(types: !9136)
!9136 = !{!118, !118}
!9137 = !{!9138}
!9138 = !DILocalVariable(name: "file", arg: 1, scope: !9134, file: !699, line: 20, type: !118)
!9139 = !DILocation(line: 0, scope: !9134)
!9140 = !DILocation(line: 22, column: 2, scope: !9134)
!9141 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !814, file: !814, line: 368, type: !867, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9142)
!9142 = !{!9143}
!9143 = !DILocalVariable(name: "dev", arg: 1, scope: !9141, file: !814, line: 368, type: !843)
!9144 = !DILocation(line: 0, scope: !9141)
!9145 = !DILocation(line: 370, column: 2, scope: !9141)
!9146 = !DILocation(line: 371, column: 1, scope: !9141)
!9147 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !814, file: !814, line: 243, type: !9148, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9150)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{null, !107, !107, !843}
!9150 = !{!9151, !9152, !9153, !9154, !9156}
!9151 = !DILocalVariable(name: "min", arg: 1, scope: !9147, file: !814, line: 243, type: !107)
!9152 = !DILocalVariable(name: "max", arg: 2, scope: !9147, file: !814, line: 243, type: !107)
!9153 = !DILocalVariable(name: "dev", arg: 3, scope: !9147, file: !814, line: 243, type: !843)
!9154 = !DILocalVariable(name: "data", scope: !9147, file: !814, line: 245, type: !9155)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!9156 = !DILocalVariable(name: "line", scope: !9147, file: !814, line: 246, type: !107)
!9157 = !DILocation(line: 0, scope: !9147)
!9158 = !DILocation(line: 245, column: 38, scope: !9147)
!9159 = !DILocation(line: 249, column: 24, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !814, line: 249, column: 2)
!9161 = distinct !DILexicalBlock(scope: !9147, file: !814, line: 249, column: 2)
!9162 = !DILocation(line: 249, column: 2, scope: !9161)
!9163 = !DILocation(line: 251, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !814, line: 251, column: 7)
!9165 = distinct !DILexicalBlock(scope: !9160, file: !814, line: 249, column: 39)
!9166 = !DILocation(line: 251, column: 7, scope: !9165)
!9167 = !DILocation(line: 253, column: 4, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !814, line: 251, column: 36)
!9169 = !DILocation(line: 256, column: 24, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9168, file: !814, line: 256, column: 8)
!9171 = !DILocation(line: 256, column: 9, scope: !9170)
!9172 = !DILocation(line: 256, column: 8, scope: !9168)
!9173 = !DILocation(line: 260, column: 43, scope: !9168)
!9174 = !DILocation(line: 260, column: 4, scope: !9168)
!9175 = !DILocation(line: 261, column: 3, scope: !9168)
!9176 = !DILocation(line: 249, column: 35, scope: !9160)
!9177 = distinct !{!9177, !9162, !9178}
!9178 = !DILocation(line: 262, column: 2, scope: !9161)
!9179 = !DILocation(line: 263, column: 1, scope: !9147)
!9180 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !814, file: !814, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9181)
!9181 = !{!9182}
!9182 = !DILocalVariable(name: "line", arg: 1, scope: !9180, file: !814, line: 158, type: !107)
!9183 = !DILocation(line: 0, scope: !9180)
!9184 = !DILocation(line: 170, column: 38, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !814, line: 160, column: 17)
!9186 = distinct !DILexicalBlock(scope: !9180, file: !814, line: 160, column: 6)
!9187 = !DILocation(line: 170, column: 10, scope: !9185)
!9188 = !DILocation(line: 176, column: 1, scope: !9180)
!9189 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !814, file: !814, line: 183, type: !9190, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9192)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{null, !107}
!9192 = !{!9193}
!9193 = !DILocalVariable(name: "line", arg: 1, scope: !9189, file: !814, line: 183, type: !107)
!9194 = !DILocation(line: 0, scope: !9189)
!9195 = !DILocation(line: 195, column: 28, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !814, line: 185, column: 17)
!9197 = distinct !DILexicalBlock(scope: !9189, file: !814, line: 185, column: 6)
!9198 = !DILocation(line: 195, column: 3, scope: !9196)
!9199 = !DILocation(line: 200, column: 1, scope: !9189)
!9200 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9201, file: !9201, line: 910, type: !6373, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9202)
!9201 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9200, file: !9201, line: 910, type: !152)
!9204 = !DILocation(line: 0, scope: !9200)
!9205 = !DILocation(line: 912, column: 3, scope: !9200)
!9206 = !DILocation(line: 913, column: 1, scope: !9200)
!9207 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9201, file: !9201, line: 834, type: !7563, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9208)
!9208 = !{!9209}
!9209 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9207, file: !9201, line: 834, type: !152)
!9210 = !DILocation(line: 0, scope: !9207)
!9211 = !DILocation(line: 836, column: 11, scope: !9207)
!9212 = !DILocation(line: 836, column: 40, scope: !9207)
!9213 = !DILocation(line: 836, column: 3, scope: !9207)
!9214 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !814, file: !814, line: 304, type: !867, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9215)
!9215 = !{!9216}
!9216 = !DILocalVariable(name: "dev", arg: 1, scope: !9214, file: !814, line: 304, type: !843)
!9217 = !DILocation(line: 0, scope: !9214)
!9218 = !DILocation(line: 306, column: 2, scope: !9214)
!9219 = !DILocation(line: 307, column: 1, scope: !9214)
!9220 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !814, file: !814, line: 299, type: !867, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9221)
!9221 = !{!9222}
!9222 = !DILocalVariable(name: "dev", arg: 1, scope: !9220, file: !814, line: 299, type: !843)
!9223 = !DILocation(line: 0, scope: !9220)
!9224 = !DILocation(line: 301, column: 2, scope: !9220)
!9225 = !DILocation(line: 302, column: 1, scope: !9220)
!9226 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !814, file: !814, line: 294, type: !867, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9227)
!9227 = !{!9228}
!9228 = !DILocalVariable(name: "dev", arg: 1, scope: !9226, file: !814, line: 294, type: !843)
!9229 = !DILocation(line: 0, scope: !9226)
!9230 = !DILocation(line: 296, column: 2, scope: !9226)
!9231 = !DILocation(line: 297, column: 1, scope: !9226)
!9232 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !814, file: !814, line: 397, type: !867, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9233)
!9233 = !{!9234}
!9234 = !DILocalVariable(name: "dev", arg: 1, scope: !9232, file: !814, line: 397, type: !843)
!9235 = !DILocation(line: 0, scope: !9232)
!9236 = !DILocation(line: 399, column: 2, scope: !9232)
!9237 = !DILocation(line: 400, column: 1, scope: !9232)
!9238 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !814, file: !814, line: 392, type: !867, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9239)
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "dev", arg: 1, scope: !9238, file: !814, line: 392, type: !843)
!9241 = !DILocation(line: 0, scope: !9238)
!9242 = !DILocation(line: 394, column: 2, scope: !9238)
!9243 = !DILocation(line: 395, column: 1, scope: !9238)
!9244 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !814, file: !814, line: 289, type: !867, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9245)
!9245 = !{!9246}
!9246 = !DILocalVariable(name: "dev", arg: 1, scope: !9244, file: !814, line: 289, type: !843)
!9247 = !DILocation(line: 0, scope: !9244)
!9248 = !DILocation(line: 291, column: 2, scope: !9244)
!9249 = !DILocation(line: 292, column: 1, scope: !9244)
!9250 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !814, file: !814, line: 387, type: !867, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9251)
!9251 = !{!9252}
!9252 = !DILocalVariable(name: "dev", arg: 1, scope: !9250, file: !814, line: 387, type: !843)
!9253 = !DILocation(line: 0, scope: !9250)
!9254 = !DILocation(line: 389, column: 2, scope: !9250)
!9255 = !DILocation(line: 390, column: 1, scope: !9250)
!9256 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !814, file: !814, line: 382, type: !867, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9257)
!9257 = !{!9258}
!9258 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !814, line: 382, type: !843)
!9259 = !DILocation(line: 0, scope: !9256)
!9260 = !DILocation(line: 384, column: 2, scope: !9256)
!9261 = !DILocation(line: 385, column: 1, scope: !9256)
!9262 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !814, file: !814, line: 373, type: !867, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9263)
!9263 = !{!9264}
!9264 = !DILocalVariable(name: "dev", arg: 1, scope: !9262, file: !814, line: 373, type: !843)
!9265 = !DILocation(line: 0, scope: !9262)
!9266 = !DILocation(line: 375, column: 2, scope: !9262)
!9267 = !DILocation(line: 376, column: 1, scope: !9262)
!9268 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !814, file: !814, line: 284, type: !867, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9269)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "dev", arg: 1, scope: !9268, file: !814, line: 284, type: !843)
!9271 = !DILocation(line: 0, scope: !9268)
!9272 = !DILocation(line: 286, column: 2, scope: !9268)
!9273 = !DILocation(line: 287, column: 1, scope: !9268)
!9274 = distinct !DISubprogram(name: "stm32_exti_init", scope: !814, file: !814, line: 416, type: !841, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9275)
!9275 = !{!9276}
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9274, file: !814, line: 416, type: !843)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 418, column: 2, scope: !9274)
!9279 = !DILocation(line: 420, column: 2, scope: !9274)
!9280 = !DILocation(line: 0, scope: !866)
!9281 = !DILocation(line: 493, column: 2, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !866, file: !814, line: 493, column: 2)
!9283 = !DILocation(line: 497, column: 2, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !866, file: !814, line: 497, column: 2)
!9285 = !DILocation(line: 507, column: 2, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !866, file: !814, line: 507, column: 2)
!9287 = !DILocation(line: 512, column: 2, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !866, file: !814, line: 512, column: 2)
!9289 = !DILocation(line: 516, column: 2, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !866, file: !814, line: 516, column: 2)
!9291 = !DILocation(line: 523, column: 2, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !866, file: !814, line: 523, column: 2)
!9293 = !DILocation(line: 527, column: 2, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !866, file: !814, line: 527, column: 2)
!9295 = !DILocation(line: 581, column: 2, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !866, file: !814, line: 581, column: 2)
!9297 = !DILocation(line: 586, column: 2, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !866, file: !814, line: 586, column: 2)
!9299 = !DILocation(line: 591, column: 2, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !866, file: !814, line: 591, column: 2)
!9301 = !DILocation(line: 595, column: 2, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !866, file: !814, line: 595, column: 2)
!9303 = !DILocation(line: 607, column: 1, scope: !866)
!9304 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !814, file: !814, line: 112, type: !9190, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9305)
!9305 = !{!9306, !9307}
!9306 = !DILocalVariable(name: "line", arg: 1, scope: !9304, file: !814, line: 112, type: !107)
!9307 = !DILocalVariable(name: "irqnum", scope: !9304, file: !814, line: 114, type: !107)
!9308 = !DILocation(line: 0, scope: !9304)
!9309 = !DILocation(line: 122, column: 13, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9304, file: !814, line: 122, column: 6)
!9311 = !DILocation(line: 122, column: 6, scope: !9304)
!9312 = !DILocation(line: 123, column: 3, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !814, line: 123, column: 3)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !814, line: 123, column: 3)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !814, line: 123, column: 3)
!9316 = distinct !DILexicalBlock(scope: !9310, file: !814, line: 122, column: 22)
!9317 = !DILocation(line: 121, column: 11, scope: !9304)
!9318 = !DILocation(line: 130, column: 26, scope: !9304)
!9319 = !DILocation(line: 130, column: 2, scope: !9304)
!9320 = !DILocation(line: 134, column: 2, scope: !9304)
!9321 = !DILocation(line: 135, column: 1, scope: !9304)
!9322 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9201, file: !9201, line: 268, type: !6373, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9323)
!9323 = !{!9324}
!9324 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9322, file: !9201, line: 268, type: !152)
!9325 = !DILocation(line: 0, scope: !9322)
!9326 = !DILocation(line: 270, column: 3, scope: !9322)
!9327 = !DILocation(line: 271, column: 1, scope: !9322)
!9328 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !814, file: !814, line: 137, type: !9190, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9329)
!9329 = !{!9330}
!9330 = !DILocalVariable(name: "line", arg: 1, scope: !9328, file: !814, line: 137, type: !107)
!9331 = !DILocation(line: 0, scope: !9328)
!9332 = !DILocation(line: 141, column: 11, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9328, file: !814, line: 141, column: 6)
!9334 = !DILocation(line: 141, column: 6, scope: !9328)
!9335 = !DILocation(line: 145, column: 28, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !814, line: 141, column: 17)
!9337 = !DILocation(line: 145, column: 3, scope: !9336)
!9338 = !DILocation(line: 147, column: 2, scope: !9336)
!9339 = !DILocation(line: 151, column: 1, scope: !9328)
!9340 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9201, file: !9201, line: 309, type: !6373, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9341)
!9341 = !{!9342}
!9342 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9340, file: !9201, line: 309, type: !152)
!9343 = !DILocation(line: 0, scope: !9340)
!9344 = !DILocation(line: 311, column: 3, scope: !9340)
!9345 = !DILocation(line: 312, column: 1, scope: !9340)
!9346 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !814, file: !814, line: 202, type: !9347, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9349)
!9347 = !DISubroutineType(types: !9348)
!9348 = !{null, !107, !107}
!9349 = !{!9350, !9351}
!9350 = !DILocalVariable(name: "line", arg: 1, scope: !9346, file: !814, line: 202, type: !107)
!9351 = !DILocalVariable(name: "trigger", arg: 2, scope: !9346, file: !814, line: 202, type: !107)
!9352 = !DILocation(line: 0, scope: !9346)
!9353 = !DILocation(line: 211, column: 2, scope: !9346)
!9354 = !DILocation(line: 213, column: 36, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9346, file: !814, line: 211, column: 19)
!9356 = !DILocation(line: 213, column: 3, scope: !9355)
!9357 = !DILocation(line: 214, column: 3, scope: !9355)
!9358 = !DILocation(line: 215, column: 3, scope: !9355)
!9359 = !DILocation(line: 217, column: 35, scope: !9355)
!9360 = !DILocation(line: 217, column: 3, scope: !9355)
!9361 = !DILocation(line: 218, column: 3, scope: !9355)
!9362 = !DILocation(line: 219, column: 3, scope: !9355)
!9363 = !DILocation(line: 221, column: 36, scope: !9355)
!9364 = !DILocation(line: 221, column: 3, scope: !9355)
!9365 = !DILocation(line: 222, column: 3, scope: !9355)
!9366 = !DILocation(line: 223, column: 3, scope: !9355)
!9367 = !DILocation(line: 225, column: 35, scope: !9355)
!9368 = !DILocation(line: 225, column: 3, scope: !9355)
!9369 = !DILocation(line: 226, column: 3, scope: !9355)
!9370 = !DILocation(line: 227, column: 3, scope: !9355)
!9371 = !DILocation(line: 232, column: 1, scope: !9346)
!9372 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9201, file: !9201, line: 573, type: !6373, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9373)
!9373 = !{!9374}
!9374 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9372, file: !9201, line: 573, type: !152)
!9375 = !DILocation(line: 0, scope: !9372)
!9376 = !DILocation(line: 575, column: 3, scope: !9372)
!9377 = !DILocation(line: 577, column: 1, scope: !9372)
!9378 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9201, file: !9201, line: 703, type: !6373, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9379)
!9379 = !{!9380}
!9380 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9378, file: !9201, line: 703, type: !152)
!9381 = !DILocation(line: 0, scope: !9378)
!9382 = !DILocation(line: 705, column: 3, scope: !9378)
!9383 = !DILocation(line: 706, column: 1, scope: !9378)
!9384 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9201, file: !9201, line: 529, type: !6373, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9385)
!9385 = !{!9386}
!9386 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9384, file: !9201, line: 529, type: !152)
!9387 = !DILocation(line: 0, scope: !9384)
!9388 = !DILocation(line: 531, column: 3, scope: !9384)
!9389 = !DILocation(line: 533, column: 1, scope: !9384)
!9390 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9201, file: !9201, line: 661, type: !6373, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9391)
!9391 = !{!9392}
!9392 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9390, file: !9201, line: 661, type: !152)
!9393 = !DILocation(line: 0, scope: !9390)
!9394 = !DILocation(line: 663, column: 3, scope: !9390)
!9395 = !DILocation(line: 664, column: 1, scope: !9390)
!9396 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !814, file: !814, line: 433, type: !9397, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9399)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!107, !107, !854, !106}
!9399 = !{!9400, !9401, !9402, !9403, !9405}
!9400 = !DILocalVariable(name: "line", arg: 1, scope: !9396, file: !814, line: 433, type: !107)
!9401 = !DILocalVariable(name: "cb", arg: 2, scope: !9396, file: !814, line: 433, type: !854)
!9402 = !DILocalVariable(name: "arg", arg: 3, scope: !9396, file: !814, line: 433, type: !106)
!9403 = !DILocalVariable(name: "dev", scope: !9396, file: !814, line: 435, type: !9404)
!9404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!9405 = !DILocalVariable(name: "data", scope: !9396, file: !814, line: 436, type: !9155)
!9406 = !DILocation(line: 0, scope: !9396)
!9407 = !DILocation(line: 438, column: 21, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9396, file: !814, line: 438, column: 6)
!9409 = !DILocation(line: 438, column: 6, scope: !9408)
!9410 = !DILocation(line: 438, column: 6, scope: !9396)
!9411 = !DILocation(line: 442, column: 20, scope: !9396)
!9412 = !DILocation(line: 443, column: 17, scope: !9396)
!9413 = !DILocation(line: 443, column: 22, scope: !9396)
!9414 = !DILocation(line: 445, column: 2, scope: !9396)
!9415 = !DILocation(line: 446, column: 1, scope: !9396)
!9416 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !814, file: !814, line: 448, type: !9190, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9417)
!9417 = !{!9418, !9419, !9420}
!9418 = !DILocalVariable(name: "line", arg: 1, scope: !9416, file: !814, line: 448, type: !107)
!9419 = !DILocalVariable(name: "dev", scope: !9416, file: !814, line: 450, type: !9404)
!9420 = !DILocalVariable(name: "data", scope: !9416, file: !814, line: 451, type: !9155)
!9421 = !DILocation(line: 0, scope: !9416)
!9422 = !DILocation(line: 453, column: 17, scope: !9416)
!9423 = !DILocation(line: 453, column: 20, scope: !9416)
!9424 = !DILocation(line: 454, column: 17, scope: !9416)
!9425 = !DILocation(line: 454, column: 22, scope: !9416)
!9426 = !DILocation(line: 455, column: 1, scope: !9416)
!9427 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1003, file: !1003, line: 183, type: !1041, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9428)
!9428 = !{!9429, !9430, !9431, !9432, !9433}
!9429 = !DILocalVariable(name: "dev", arg: 1, scope: !9427, file: !1003, line: 183, type: !1032)
!9430 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9427, file: !1003, line: 184, type: !1043)
!9431 = !DILocalVariable(name: "pclken", scope: !9427, file: !1003, line: 186, type: !993)
!9432 = !DILocalVariable(name: "reg", scope: !9427, file: !1003, line: 187, type: !1584)
!9433 = !DILocalVariable(name: "reg_val", scope: !9427, file: !1003, line: 188, type: !152)
!9434 = !DILocation(line: 0, scope: !9427)
!9435 = !DILocation(line: 192, column: 6, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9427, file: !1003, line: 192, column: 6)
!9437 = !DILocation(line: 192, column: 6, scope: !9427)
!9438 = !DILocation(line: 197, column: 52, scope: !9427)
!9439 = !DILocation(line: 197, column: 8, scope: !9427)
!9440 = !DILocation(line: 198, column: 12, scope: !9427)
!9441 = !DILocation(line: 199, column: 21, scope: !9427)
!9442 = !DILocation(line: 199, column: 10, scope: !9427)
!9443 = !DILocation(line: 200, column: 7, scope: !9427)
!9444 = !DILocation(line: 202, column: 2, scope: !9427)
!9445 = !DILocation(line: 203, column: 1, scope: !9427)
!9446 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1003, file: !1003, line: 205, type: !1041, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9447)
!9447 = !{!9448, !9449, !9450, !9451, !9452}
!9448 = !DILocalVariable(name: "dev", arg: 1, scope: !9446, file: !1003, line: 205, type: !1032)
!9449 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9446, file: !1003, line: 206, type: !1043)
!9450 = !DILocalVariable(name: "pclken", scope: !9446, file: !1003, line: 208, type: !993)
!9451 = !DILocalVariable(name: "reg", scope: !9446, file: !1003, line: 209, type: !1584)
!9452 = !DILocalVariable(name: "reg_val", scope: !9446, file: !1003, line: 210, type: !152)
!9453 = !DILocation(line: 0, scope: !9446)
!9454 = !DILocation(line: 214, column: 6, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9446, file: !1003, line: 214, column: 6)
!9456 = !DILocation(line: 214, column: 6, scope: !9446)
!9457 = !DILocation(line: 219, column: 52, scope: !9446)
!9458 = !DILocation(line: 219, column: 8, scope: !9446)
!9459 = !DILocation(line: 220, column: 12, scope: !9446)
!9460 = !DILocation(line: 221, column: 22, scope: !9446)
!9461 = !DILocation(line: 221, column: 13, scope: !9446)
!9462 = !DILocation(line: 221, column: 10, scope: !9446)
!9463 = !DILocation(line: 222, column: 7, scope: !9446)
!9464 = !DILocation(line: 224, column: 2, scope: !9446)
!9465 = !DILocation(line: 225, column: 1, scope: !9446)
!9466 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1003, file: !1003, line: 262, type: !1057, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9467)
!9467 = !{!9468, !9469, !9470, !9471, !9472, !9473, !9474, !9475}
!9468 = !DILocalVariable(name: "clock", arg: 1, scope: !9466, file: !1003, line: 262, type: !1032)
!9469 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9466, file: !1003, line: 263, type: !1043)
!9470 = !DILocalVariable(name: "rate", arg: 3, scope: !9466, file: !1003, line: 264, type: !999)
!9471 = !DILocalVariable(name: "pclken", scope: !9466, file: !1003, line: 266, type: !993)
!9472 = !DILocalVariable(name: "ahb_clock", scope: !9466, file: !1003, line: 273, type: !152)
!9473 = !DILocalVariable(name: "apb1_clock", scope: !9466, file: !1003, line: 274, type: !152)
!9474 = !DILocalVariable(name: "apb2_clock", scope: !9466, file: !1003, line: 276, type: !152)
!9475 = !DILocalVariable(name: "ahb3_clock", scope: !9466, file: !1003, line: 286, type: !152)
!9476 = !DILocation(line: 0, scope: !9466)
!9477 = !DILocation(line: 273, column: 23, scope: !9466)
!9478 = !DILocation(line: 299, column: 18, scope: !9466)
!9479 = !DILocation(line: 299, column: 2, scope: !9466)
!9480 = !DILocation(line: 274, column: 24, scope: !9466)
!9481 = !DILocation(line: 319, column: 3, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9466, file: !1003, line: 299, column: 23)
!9483 = !DILocation(line: 276, column: 24, scope: !9466)
!9484 = !DILocation(line: 323, column: 3, scope: !9482)
!9485 = !DILocation(line: 346, column: 33, scope: !9482)
!9486 = !DILocation(line: 346, column: 11, scope: !9482)
!9487 = !DILocation(line: 350, column: 3, scope: !9482)
!9488 = !DILocation(line: 354, column: 33, scope: !9482)
!9489 = !DILocation(line: 354, column: 11, scope: !9482)
!9490 = !DILocation(line: 358, column: 3, scope: !9482)
!9491 = !DILocation(line: 374, column: 3, scope: !9482)
!9492 = !DILocation(line: 379, column: 3, scope: !9482)
!9493 = !DILocation(line: 0, scope: !9482)
!9494 = !DILocation(line: 396, column: 1, scope: !9466)
!9495 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1003, file: !1003, line: 227, type: !1073, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9496)
!9496 = !{!9497, !9498, !9499, !9500, !9501, !9502, !9503, !9504}
!9497 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !1003, line: 227, type: !1032)
!9498 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9495, file: !1003, line: 228, type: !1043)
!9499 = !DILocalVariable(name: "data", arg: 3, scope: !9495, file: !1003, line: 229, type: !106)
!9500 = !DILocalVariable(name: "pclken", scope: !9495, file: !1003, line: 233, type: !993)
!9501 = !DILocalVariable(name: "reg", scope: !9495, file: !1003, line: 234, type: !1584)
!9502 = !DILocalVariable(name: "reg_val", scope: !9495, file: !1003, line: 235, type: !152)
!9503 = !DILocalVariable(name: "dt_val", scope: !9495, file: !1003, line: 235, type: !152)
!9504 = !DILocalVariable(name: "err", scope: !9495, file: !1003, line: 236, type: !107)
!9505 = !DILocation(line: 0, scope: !9495)
!9506 = !DILocation(line: 241, column: 30, scope: !9495)
!9507 = !DILocation(line: 241, column: 8, scope: !9495)
!9508 = !DILocation(line: 242, column: 10, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9495, file: !1003, line: 242, column: 6)
!9510 = !DILocation(line: 242, column: 6, scope: !9495)
!9511 = !DILocation(line: 247, column: 11, scope: !9495)
!9512 = !DILocation(line: 248, column: 6, scope: !9495)
!9513 = !DILocation(line: 247, column: 44, scope: !9495)
!9514 = !DILocation(line: 250, column: 6, scope: !9495)
!9515 = !DILocation(line: 249, column: 52, scope: !9495)
!9516 = !DILocation(line: 249, column: 8, scope: !9495)
!9517 = !DILocation(line: 251, column: 12, scope: !9495)
!9518 = !DILocation(line: 252, column: 10, scope: !9495)
!9519 = !DILocation(line: 253, column: 7, scope: !9495)
!9520 = !DILocation(line: 255, column: 2, scope: !9495)
!9521 = !DILocation(line: 260, column: 1, scope: !9495)
!9522 = distinct !DISubprogram(name: "enabled_clock", scope: !1003, file: !1003, line: 100, type: !9523, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!107, !152}
!9525 = !{!9526, !9527}
!9526 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9522, file: !1003, line: 100, type: !152)
!9527 = !DILocalVariable(name: "r", scope: !9522, file: !1003, line: 102, type: !107)
!9528 = !DILocation(line: 0, scope: !9522)
!9529 = !DILocation(line: 104, column: 2, scope: !9522)
!9530 = !DILocation(line: 180, column: 2, scope: !9522)
!9531 = !DILocation(line: 181, column: 1, scope: !9522)
!9532 = distinct !DISubprogram(name: "get_bus_clock", scope: !1003, file: !1003, line: 79, type: !9533, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9535)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{!152, !152, !152}
!9535 = !{!9536, !9537}
!9536 = !DILocalVariable(name: "clock", arg: 1, scope: !9532, file: !1003, line: 79, type: !152)
!9537 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9532, file: !1003, line: 79, type: !152)
!9538 = !DILocation(line: 0, scope: !9532)
!9539 = !DILocation(line: 81, column: 15, scope: !9532)
!9540 = !DILocation(line: 81, column: 2, scope: !9532)
!9541 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1003, file: !1003, line: 68, type: !9542, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9544)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!152, !152, !107, !107, !107}
!9544 = !{!9545, !9546, !9547, !9548}
!9545 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9541, file: !1003, line: 68, type: !152)
!9546 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9541, file: !1003, line: 69, type: !107)
!9547 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9541, file: !1003, line: 70, type: !107)
!9548 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9541, file: !1003, line: 71, type: !107)
!9549 = !DILocation(line: 0, scope: !9541)
!9550 = !DILocation(line: 75, column: 22, scope: !9541)
!9551 = !DILocation(line: 76, column: 13, scope: !9541)
!9552 = !DILocation(line: 75, column: 34, scope: !9541)
!9553 = !DILocation(line: 75, column: 2, scope: !9541)
!9554 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1003, file: !1003, line: 641, type: !1030, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9555)
!9555 = !{!9556, !9557, !9558}
!9556 = !DILocalVariable(name: "dev", arg: 1, scope: !9554, file: !1003, line: 641, type: !1032)
!9557 = !DILocalVariable(name: "old_flash_freq", scope: !9554, file: !1003, line: 664, type: !152)
!9558 = !DILocalVariable(name: "new_flash_freq", scope: !9554, file: !1003, line: 665, type: !152)
!9559 = !DILocation(line: 0, scope: !9554)
!9560 = !DILocation(line: 646, column: 2, scope: !9554)
!9561 = !DILocation(line: 667, column: 19, scope: !9554)
!9562 = !DILocation(line: 674, column: 21, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9554, file: !1003, line: 674, column: 6)
!9564 = !DILocation(line: 674, column: 6, scope: !9554)
!9565 = !DILocation(line: 675, column: 3, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !1003, line: 674, column: 59)
!9567 = !DILocation(line: 676, column: 2, scope: !9566)
!9568 = !DILocation(line: 680, column: 2, scope: !9554)
!9569 = !DILocation(line: 683, column: 2, scope: !9554)
!9570 = !DILocation(line: 690, column: 3, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !1003, line: 689, column: 9)
!9572 = distinct !DILexicalBlock(scope: !9554, file: !1003, line: 685, column: 6)
!9573 = !DILocation(line: 695, column: 2, scope: !9554)
!9574 = !DILocation(line: 696, column: 2, scope: !9554)
!9575 = !DILocation(line: 696, column: 9, scope: !9554)
!9576 = !DILocation(line: 696, column: 34, scope: !9554)
!9577 = distinct !{!9577, !9574, !9578}
!9578 = !DILocation(line: 697, column: 2, scope: !9554)
!9579 = !DILocation(line: 720, column: 21, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9554, file: !1003, line: 720, column: 6)
!9581 = !DILocation(line: 720, column: 6, scope: !9554)
!9582 = !DILocation(line: 721, column: 3, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9580, file: !1003, line: 720, column: 60)
!9584 = !DILocation(line: 722, column: 2, scope: !9583)
!9585 = !DILocation(line: 725, column: 18, scope: !9554)
!9586 = !DILocation(line: 728, column: 2, scope: !9554)
!9587 = !DILocation(line: 730, column: 2, scope: !9554)
!9588 = !DILocation(line: 745, column: 2, scope: !9554)
!9589 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9590, file: !9590, line: 3275, type: !6363, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9590 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9591 = !DILocation(line: 3277, column: 21, scope: !9589)
!9592 = !DILocation(line: 3277, column: 3, scope: !9589)
!9593 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1003, file: !1003, line: 507, type: !3111, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9594 = !DILocation(line: 516, column: 4, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !1003, line: 515, column: 10)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !1003, line: 513, column: 7)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !1003, line: 510, column: 37)
!9598 = distinct !DILexicalBlock(scope: !9593, file: !1003, line: 510, column: 6)
!9599 = !DILocation(line: 526, column: 3, scope: !9597)
!9600 = !DILocation(line: 527, column: 3, scope: !9597)
!9601 = !DILocation(line: 527, column: 10, scope: !9597)
!9602 = !DILocation(line: 527, column: 31, scope: !9597)
!9603 = distinct !{!9603, !9600, !9604}
!9604 = !DILocation(line: 529, column: 3, scope: !9597)
!9605 = !DILocation(line: 583, column: 3, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !1003, line: 577, column: 37)
!9607 = distinct !DILexicalBlock(scope: !9593, file: !1003, line: 577, column: 6)
!9608 = !DILocation(line: 584, column: 3, scope: !9606)
!9609 = !DILocation(line: 584, column: 10, scope: !9606)
!9610 = !DILocation(line: 584, column: 31, scope: !9606)
!9611 = distinct !{!9611, !9608, !9612}
!9612 = !DILocation(line: 585, column: 3, scope: !9606)
!9613 = !DILocation(line: 627, column: 1, scope: !9593)
!9614 = distinct !DISubprogram(name: "set_up_plls", scope: !1003, file: !1003, line: 448, type: !3111, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9615 = !DILocation(line: 460, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9614, file: !1003, line: 460, column: 6)
!9617 = !DILocation(line: 460, column: 31, scope: !9616)
!9618 = !DILocation(line: 460, column: 6, scope: !9614)
!9619 = !DILocation(line: 461, column: 3, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9616, file: !1003, line: 460, column: 67)
!9621 = !DILocation(line: 462, column: 3, scope: !9620)
!9622 = !DILocation(line: 463, column: 2, scope: !9620)
!9623 = !DILocation(line: 464, column: 2, scope: !9614)
!9624 = !DILocation(line: 488, column: 2, scope: !9614)
!9625 = !DILocation(line: 492, column: 2, scope: !9614)
!9626 = !DILocation(line: 496, column: 2, scope: !9614)
!9627 = !DILocation(line: 499, column: 2, scope: !9614)
!9628 = !DILocation(line: 500, column: 2, scope: !9614)
!9629 = !DILocation(line: 500, column: 9, scope: !9614)
!9630 = !DILocation(line: 500, column: 30, scope: !9614)
!9631 = distinct !{!9631, !9628, !9632}
!9632 = !DILocation(line: 502, column: 2, scope: !9614)
!9633 = !DILocation(line: 505, column: 1, scope: !9614)
!9634 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9590, file: !9590, line: 3224, type: !6373, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9635)
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9634, file: !9590, line: 3224, type: !152)
!9637 = !DILocation(line: 0, scope: !9634)
!9638 = !DILocation(line: 3226, column: 3, scope: !9634)
!9639 = !DILocation(line: 3227, column: 1, scope: !9634)
!9640 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9590, file: !9590, line: 3188, type: !6373, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9641)
!9641 = !{!9642}
!9642 = !DILocalVariable(name: "Source", arg: 1, scope: !9640, file: !9590, line: 3188, type: !152)
!9643 = !DILocation(line: 0, scope: !9640)
!9644 = !DILocation(line: 3190, column: 3, scope: !9640)
!9645 = !DILocation(line: 3191, column: 1, scope: !9640)
!9646 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9590, file: !9590, line: 3204, type: !6363, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9647 = !DILocation(line: 3206, column: 21, scope: !9646)
!9648 = !DILocation(line: 3206, column: 3, scope: !9646)
!9649 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9590, file: !9590, line: 3240, type: !6373, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9650)
!9650 = !{!9651}
!9651 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9649, file: !9590, line: 3240, type: !152)
!9652 = !DILocation(line: 0, scope: !9649)
!9653 = !DILocation(line: 3242, column: 3, scope: !9649)
!9654 = !DILocation(line: 3243, column: 1, scope: !9649)
!9655 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9590, file: !9590, line: 3256, type: !6373, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9656)
!9656 = !{!9657}
!9657 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9655, file: !9590, line: 3256, type: !152)
!9658 = !DILocation(line: 0, scope: !9655)
!9659 = !DILocation(line: 3258, column: 3, scope: !9655)
!9660 = !DILocation(line: 3259, column: 1, scope: !9655)
!9661 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1003, file: !1003, line: 409, type: !3111, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9662 = !DILocation(line: 412, column: 6, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9661, file: !1003, line: 412, column: 6)
!9664 = !DILocation(line: 412, column: 27, scope: !9663)
!9665 = !DILocation(line: 412, column: 6, scope: !9661)
!9666 = !DILocation(line: 414, column: 3, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9663, file: !1003, line: 412, column: 33)
!9668 = !DILocation(line: 415, column: 3, scope: !9667)
!9669 = !DILocation(line: 415, column: 10, scope: !9667)
!9670 = !DILocation(line: 415, column: 31, scope: !9667)
!9671 = distinct !{!9671, !9668, !9672}
!9672 = !DILocation(line: 417, column: 3, scope: !9667)
!9673 = !DILocation(line: 421, column: 2, scope: !9661)
!9674 = !DILocation(line: 422, column: 2, scope: !9661)
!9675 = !DILocation(line: 422, column: 9, scope: !9661)
!9676 = !DILocation(line: 422, column: 34, scope: !9661)
!9677 = distinct !{!9677, !9674, !9678}
!9678 = !DILocation(line: 423, column: 2, scope: !9661)
!9679 = !DILocation(line: 424, column: 1, scope: !9661)
!9680 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9590, file: !9590, line: 4195, type: !3111, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9681 = !DILocation(line: 4197, column: 3, scope: !9680)
!9682 = !DILocation(line: 4198, column: 1, scope: !9680)
!9683 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9590, file: !9590, line: 4184, type: !3111, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9684 = !DILocation(line: 4186, column: 3, scope: !9683)
!9685 = !DILocation(line: 4187, column: 1, scope: !9683)
!9686 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9590, file: !9590, line: 4205, type: !6363, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9687 = !DILocation(line: 4207, column: 11, scope: !9686)
!9688 = !DILocation(line: 4207, column: 44, scope: !9686)
!9689 = !DILocation(line: 4207, column: 3, scope: !9686)
!9690 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9590, file: !9590, line: 3007, type: !6363, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9691 = !DILocation(line: 3009, column: 11, scope: !9690)
!9692 = !DILocation(line: 3009, column: 44, scope: !9690)
!9693 = !DILocation(line: 3009, column: 3, scope: !9690)
!9694 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9590, file: !9590, line: 2987, type: !3111, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9695 = !DILocation(line: 2989, column: 3, scope: !9694)
!9696 = !DILocation(line: 2990, column: 1, scope: !9694)
!9697 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9590, file: !9590, line: 2939, type: !3111, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9698 = !DILocation(line: 2941, column: 3, scope: !9697)
!9699 = !DILocation(line: 2942, column: 1, scope: !9697)
!9700 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9590, file: !9590, line: 2949, type: !3111, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9701 = !DILocation(line: 2951, column: 3, scope: !9700)
!9702 = !DILocation(line: 2952, column: 1, scope: !9700)
!9703 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9590, file: !9590, line: 2969, type: !6363, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9704 = !DILocation(line: 2971, column: 11, scope: !9703)
!9705 = !DILocation(line: 2971, column: 44, scope: !9703)
!9706 = !DILocation(line: 2971, column: 3, scope: !9703)
!9707 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9590, file: !9590, line: 3143, type: !3111, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9708 = !DILocation(line: 3145, column: 3, scope: !9707)
!9709 = !DILocation(line: 3146, column: 1, scope: !9707)
!9710 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9590, file: !9590, line: 3163, type: !6363, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9711 = !DILocation(line: 3165, column: 11, scope: !9710)
!9712 = !DILocation(line: 3165, column: 46, scope: !9710)
!9713 = !DILocation(line: 3165, column: 3, scope: !9710)
!9714 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9715, file: !9715, line: 40, type: !6363, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9715 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9716 = !DILocation(line: 45, column: 3, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9718, file: !9715, line: 44, column: 44)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !9715, line: 44, column: 13)
!9719 = distinct !DILexicalBlock(scope: !9714, file: !9715, line: 42, column: 6)
!9720 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9715, file: !9715, line: 56, type: !3111, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9721 = !DILocation(line: 58, column: 2, scope: !9720)
!9722 = !DILocation(line: 62, column: 1, scope: !9720)
!9723 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9590, file: !9590, line: 4304, type: !9724, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !9726)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{null, !152, !152, !152, !152}
!9726 = !{!9727, !9728, !9729, !9730}
!9727 = !DILocalVariable(name: "Source", arg: 1, scope: !9723, file: !9590, line: 4304, type: !152)
!9728 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9723, file: !9590, line: 4304, type: !152)
!9729 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9723, file: !9590, line: 4304, type: !152)
!9730 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9723, file: !9590, line: 4304, type: !152)
!9731 = !DILocation(line: 0, scope: !9723)
!9732 = !DILocation(line: 4306, column: 3, scope: !9723)
!9733 = !DILocation(line: 4308, column: 3, scope: !9723)
!9734 = !DILocation(line: 4312, column: 1, scope: !9723)
!9735 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9715, file: !9715, line: 69, type: !3111, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9736 = !DILocation(line: 72, column: 2, scope: !9735)
!9737 = !DILocation(line: 73, column: 1, scope: !9735)
!9738 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9739, file: !9739, line: 1185, type: !6373, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !9740)
!9739 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9740 = !{!9741, !9742}
!9741 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9738, file: !9739, line: 1185, type: !152)
!9742 = !DILocalVariable(name: "tmpreg", scope: !9738, file: !9739, line: 1187, type: !227)
!9743 = !DILocation(line: 0, scope: !9738)
!9744 = !DILocation(line: 1187, column: 3, scope: !9738)
!9745 = !DILocation(line: 1187, column: 17, scope: !9738)
!9746 = !DILocation(line: 1188, column: 3, scope: !9738)
!9747 = !DILocation(line: 1190, column: 12, scope: !9738)
!9748 = !DILocation(line: 1190, column: 10, scope: !9738)
!9749 = !DILocation(line: 1191, column: 9, scope: !9738)
!9750 = !DILocation(line: 1192, column: 1, scope: !9738)
!9751 = distinct !DISubprogram(name: "uart_console_init", scope: !1134, file: !1134, line: 588, type: !1111, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9752)
!9752 = !{!9753}
!9753 = !DILocalVariable(name: "arg", arg: 1, scope: !9751, file: !1134, line: 588, type: !1089)
!9754 = !DILocation(line: 0, scope: !9751)
!9755 = !DILocation(line: 593, column: 7, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9751, file: !1134, line: 593, column: 6)
!9757 = !DILocation(line: 593, column: 6, scope: !9751)
!9758 = !DILocation(line: 597, column: 2, scope: !9751)
!9759 = !DILocation(line: 599, column: 2, scope: !9751)
!9760 = !DILocation(line: 600, column: 1, scope: !9751)
!9761 = distinct !DISubprogram(name: "device_is_ready", scope: !9762, file: !9762, line: 47, type: !9763, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9765)
!9762 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!145, !1089}
!9765 = !{!9766}
!9766 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !9762, line: 47, type: !1089)
!9767 = !DILocation(line: 0, scope: !9761)
!9768 = !DILocation(line: 55, column: 2, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9761, file: !9762, line: 55, column: 2)
!9770 = !{i64 2154376819}
!9771 = !DILocation(line: 56, column: 9, scope: !9761)
!9772 = !DILocation(line: 56, column: 2, scope: !9761)
!9773 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1134, file: !1134, line: 573, type: !3111, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !2182)
!9774 = !DILocation(line: 576, column: 2, scope: !9773)
!9775 = !DILocation(line: 579, column: 2, scope: !9773)
!9776 = !DILocation(line: 581, column: 1, scope: !9773)
!9777 = distinct !DISubprogram(name: "console_out", scope: !1134, file: !1134, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9778)
!9778 = !{!9779}
!9779 = !DILocalVariable(name: "c", arg: 1, scope: !9777, file: !1134, line: 77, type: !107)
!9780 = !DILocation(line: 0, scope: !9777)
!9781 = !DILocation(line: 89, column: 11, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9777, file: !1134, line: 89, column: 6)
!9783 = !DILocation(line: 89, column: 6, scope: !9777)
!9784 = !DILocation(line: 90, column: 3, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9782, file: !1134, line: 89, column: 17)
!9786 = !DILocation(line: 91, column: 2, scope: !9785)
!9787 = !DILocation(line: 92, column: 34, scope: !9777)
!9788 = !DILocation(line: 92, column: 2, scope: !9777)
!9789 = !DILocation(line: 94, column: 2, scope: !9777)
!9790 = distinct !DISubprogram(name: "uart_poll_out", scope: !9791, file: !9791, line: 95, type: !1107, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9792)
!9791 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pytest")
!9792 = !{!9793, !9794}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9790, file: !9791, line: 95, type: !1089)
!9794 = !DILocalVariable(name: "out_char", arg: 2, scope: !9790, file: !9791, line: 95, type: !196)
!9795 = !DILocation(line: 0, scope: !9790)
!9796 = !DILocation(line: 105, column: 2, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9790, file: !9791, line: 105, column: 2)
!9798 = !{i64 2154460210}
!9799 = !DILocation(line: 106, column: 2, scope: !9790)
!9800 = !DILocation(line: 107, column: 1, scope: !9790)
!9801 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1083, file: !1083, line: 574, type: !1107, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9802)
!9802 = !{!9803, !9804, !9805}
!9803 = !DILocalVariable(name: "dev", arg: 1, scope: !9801, file: !1083, line: 574, type: !1089)
!9804 = !DILocalVariable(name: "out_char", arg: 2, scope: !9801, file: !1083, line: 575, type: !196)
!9805 = !DILocalVariable(name: "api", scope: !9801, file: !1083, line: 577, type: !1080)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 578, column: 40, scope: !9801)
!9808 = !DILocation(line: 580, column: 7, scope: !9801)
!9809 = !DILocation(line: 580, column: 2, scope: !9801)
!9810 = !DILocation(line: 581, column: 1, scope: !9801)
!9811 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9763, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9812)
!9812 = !{!9813}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !247, line: 730, type: !1089)
!9814 = !DILocation(line: 0, scope: !9811)
!9815 = !DILocation(line: 732, column: 9, scope: !9811)
!9816 = !DILocation(line: 732, column: 2, scope: !9811)
!9817 = distinct !DISubprogram(name: "uart_register_input", scope: !1134, file: !1134, line: 560, type: !9818, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9865)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{null, !9820, !9820, !9862}
!9820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9821, size: 32)
!9821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9822)
!9822 = !{!9823}
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9821, file: !406, line: 2209, baseType: !9824, size: 160)
!9824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9825)
!9825 = !{!9826, !9839, !9843}
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9824, file: !406, line: 1710, baseType: !9827, size: 64)
!9827 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9828, line: 46, baseType: !9829)
!9828 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9828, line: 41, size: 64, elements: !9830)
!9830 = !{!9831, !9838}
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9829, file: !9828, line: 42, baseType: !9832, size: 32)
!9832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9833, size: 32)
!9833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9828, line: 39, baseType: !9834)
!9834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9828, line: 35, size: 32, elements: !9835)
!9835 = !{!9836}
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9834, file: !9828, line: 36, baseType: !9837, size: 32)
!9837 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9828, line: 32, baseType: !152)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9829, file: !9828, line: 43, baseType: !9832, size: 32, offset: 32)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9824, file: !406, line: 1711, baseType: !9840, size: 32, offset: 64)
!9840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9841)
!9841 = !{!9842}
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9840, file: !420, line: 52, baseType: !22, size: 32)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9824, file: !406, line: 1712, baseType: !9844, size: 64, offset: 96)
!9844 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9845)
!9845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9846)
!9846 = !{!9847}
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9845, file: !345, line: 232, baseType: !9848, size: 64)
!9848 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9849)
!9849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9850)
!9850 = !{!9851, !9857}
!9851 = !DIDerivedType(tag: DW_TAG_member, scope: !9849, file: !319, line: 38, baseType: !9852, size: 32)
!9852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9849, file: !319, line: 38, size: 32, elements: !9853)
!9853 = !{!9854, !9856}
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9852, file: !319, line: 39, baseType: !9855, size: 32)
!9855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9849, size: 32)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9852, file: !319, line: 40, baseType: !9855, size: 32)
!9857 = !DIDerivedType(tag: DW_TAG_member, scope: !9849, file: !319, line: 42, baseType: !9858, size: 32, offset: 32)
!9858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9849, file: !319, line: 42, size: 32, elements: !9859)
!9859 = !{!9860, !9861}
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9858, file: !319, line: 43, baseType: !9855, size: 32)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9858, file: !319, line: 44, baseType: !9855, size: 32)
!9862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9863, size: 32)
!9863 = !DISubroutineType(types: !9864)
!9864 = !{!195, !193, !195}
!9865 = !{!9866, !9867, !9868}
!9866 = !DILocalVariable(name: "avail", arg: 1, scope: !9817, file: !1134, line: 560, type: !9820)
!9867 = !DILocalVariable(name: "lines", arg: 2, scope: !9817, file: !1134, line: 560, type: !9820)
!9868 = !DILocalVariable(name: "completion", arg: 3, scope: !9817, file: !1134, line: 561, type: !9862)
!9869 = !DILocation(line: 0, scope: !9817)
!9870 = !DILocation(line: 566, column: 1, scope: !9817)
!9871 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1312, file: !1312, line: 523, type: !1170, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9872)
!9872 = !{!9873, !9874, !9875, !9876, !9877}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !1312, line: 523, type: !1172)
!9874 = !DILocalVariable(name: "pin", arg: 2, scope: !9871, file: !1312, line: 524, type: !1187)
!9875 = !DILocalVariable(name: "flags", arg: 3, scope: !9871, file: !1312, line: 524, type: !1188)
!9876 = !DILocalVariable(name: "err", scope: !9871, file: !1312, line: 526, type: !107)
!9877 = !DILocalVariable(name: "pincfg", scope: !9871, file: !1312, line: 527, type: !107)
!9878 = !DILocation(line: 0, scope: !9871)
!9879 = !DILocation(line: 527, column: 2, scope: !9871)
!9880 = !DILocation(line: 532, column: 8, scope: !9871)
!9881 = !DILocation(line: 533, column: 10, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9871, file: !1312, line: 533, column: 6)
!9883 = !DILocation(line: 533, column: 6, scope: !9871)
!9884 = !DILocation(line: 543, column: 13, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9871, file: !1312, line: 543, column: 6)
!9886 = !DILocation(line: 543, column: 28, scope: !9885)
!9887 = !DILocation(line: 543, column: 6, scope: !9871)
!9888 = !DILocation(line: 544, column: 14, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !1312, line: 544, column: 7)
!9890 = distinct !DILexicalBlock(scope: !9885, file: !1312, line: 543, column: 34)
!9891 = !DILocation(line: 544, column: 39, scope: !9889)
!9892 = !DILocation(line: 544, column: 7, scope: !9890)
!9893 = !DILocation(line: 545, column: 38, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9889, file: !1312, line: 544, column: 45)
!9895 = !DILocation(line: 545, column: 4, scope: !9894)
!9896 = !DILocation(line: 546, column: 3, scope: !9894)
!9897 = !DILocation(line: 546, column: 21, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9889, file: !1312, line: 546, column: 14)
!9899 = !DILocation(line: 546, column: 45, scope: !9898)
!9900 = !DILocation(line: 546, column: 14, scope: !9889)
!9901 = !DILocation(line: 547, column: 40, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9898, file: !1312, line: 546, column: 51)
!9903 = !DILocation(line: 547, column: 4, scope: !9902)
!9904 = !DILocation(line: 548, column: 3, scope: !9902)
!9905 = !DILocation(line: 551, column: 32, scope: !9871)
!9906 = !DILocation(line: 551, column: 37, scope: !9871)
!9907 = !DILocation(line: 551, column: 2, scope: !9871)
!9908 = !DILocation(line: 554, column: 6, scope: !9871)
!9909 = !DILocation(line: 562, column: 1, scope: !9871)
!9910 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1312, file: !1312, line: 410, type: !9911, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9913)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{!107, !1172, !999}
!9913 = !{!9914, !9915, !9916, !9918}
!9914 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1312, line: 410, type: !1172)
!9915 = !DILocalVariable(name: "value", arg: 2, scope: !9910, file: !1312, line: 410, type: !999)
!9916 = !DILocalVariable(name: "cfg", scope: !9910, file: !1312, line: 412, type: !9917)
!9917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!9918 = !DILocalVariable(name: "gpio", scope: !9910, file: !1312, line: 413, type: !1245)
!9919 = !DILocation(line: 0, scope: !9910)
!9920 = !DILocation(line: 412, column: 45, scope: !9910)
!9921 = !DILocation(line: 413, column: 44, scope: !9910)
!9922 = !DILocation(line: 415, column: 11, scope: !9910)
!9923 = !DILocation(line: 415, column: 9, scope: !9910)
!9924 = !DILocation(line: 417, column: 2, scope: !9910)
!9925 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1312, file: !1312, line: 420, type: !1197, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9926)
!9926 = !{!9927, !9928, !9929, !9930, !9931, !9932}
!9927 = !DILocalVariable(name: "dev", arg: 1, scope: !9925, file: !1312, line: 420, type: !1172)
!9928 = !DILocalVariable(name: "mask", arg: 2, scope: !9925, file: !1312, line: 421, type: !1199)
!9929 = !DILocalVariable(name: "value", arg: 3, scope: !9925, file: !1312, line: 422, type: !1194)
!9930 = !DILocalVariable(name: "cfg", scope: !9925, file: !1312, line: 424, type: !9917)
!9931 = !DILocalVariable(name: "gpio", scope: !9925, file: !1312, line: 425, type: !1245)
!9932 = !DILocalVariable(name: "port_value", scope: !9925, file: !1312, line: 426, type: !152)
!9933 = !DILocation(line: 0, scope: !9925)
!9934 = !DILocation(line: 424, column: 45, scope: !9925)
!9935 = !DILocation(line: 425, column: 44, scope: !9925)
!9936 = !DILocation(line: 430, column: 15, scope: !9925)
!9937 = !DILocation(line: 431, column: 46, scope: !9925)
!9938 = !DILocation(line: 431, column: 44, scope: !9925)
!9939 = !DILocation(line: 431, column: 61, scope: !9925)
!9940 = !DILocation(line: 431, column: 53, scope: !9925)
!9941 = !DILocation(line: 431, column: 2, scope: !9925)
!9942 = !DILocation(line: 435, column: 2, scope: !9925)
!9943 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1312, file: !1312, line: 438, type: !1202, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9944)
!9944 = !{!9945, !9946, !9947, !9948}
!9945 = !DILocalVariable(name: "dev", arg: 1, scope: !9943, file: !1312, line: 438, type: !1172)
!9946 = !DILocalVariable(name: "pins", arg: 2, scope: !9943, file: !1312, line: 439, type: !1199)
!9947 = !DILocalVariable(name: "cfg", scope: !9943, file: !1312, line: 441, type: !9917)
!9948 = !DILocalVariable(name: "gpio", scope: !9943, file: !1312, line: 442, type: !1245)
!9949 = !DILocation(line: 0, scope: !9943)
!9950 = !DILocation(line: 441, column: 45, scope: !9943)
!9951 = !DILocation(line: 442, column: 44, scope: !9943)
!9952 = !DILocation(line: 448, column: 2, scope: !9943)
!9953 = !DILocation(line: 450, column: 2, scope: !9943)
!9954 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1312, file: !1312, line: 453, type: !1202, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9955)
!9955 = !{!9956, !9957, !9958, !9959}
!9956 = !DILocalVariable(name: "dev", arg: 1, scope: !9954, file: !1312, line: 453, type: !1172)
!9957 = !DILocalVariable(name: "pins", arg: 2, scope: !9954, file: !1312, line: 454, type: !1199)
!9958 = !DILocalVariable(name: "cfg", scope: !9954, file: !1312, line: 456, type: !9917)
!9959 = !DILocalVariable(name: "gpio", scope: !9954, file: !1312, line: 457, type: !1245)
!9960 = !DILocation(line: 0, scope: !9954)
!9961 = !DILocation(line: 456, column: 45, scope: !9954)
!9962 = !DILocation(line: 457, column: 44, scope: !9954)
!9963 = !DILocation(line: 467, column: 2, scope: !9954)
!9964 = !DILocation(line: 470, column: 2, scope: !9954)
!9965 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1312, file: !1312, line: 473, type: !1202, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9966)
!9966 = !{!9967, !9968, !9969, !9970}
!9967 = !DILocalVariable(name: "dev", arg: 1, scope: !9965, file: !1312, line: 473, type: !1172)
!9968 = !DILocalVariable(name: "pins", arg: 2, scope: !9965, file: !1312, line: 474, type: !1199)
!9969 = !DILocalVariable(name: "cfg", scope: !9965, file: !1312, line: 476, type: !9917)
!9970 = !DILocalVariable(name: "gpio", scope: !9965, file: !1312, line: 477, type: !1245)
!9971 = !DILocation(line: 0, scope: !9965)
!9972 = !DILocation(line: 476, column: 45, scope: !9965)
!9973 = !DILocation(line: 477, column: 44, scope: !9965)
!9974 = !DILocation(line: 484, column: 2, scope: !9965)
!9975 = !DILocation(line: 487, column: 2, scope: !9965)
!9976 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1312, file: !1312, line: 594, type: !1208, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9982, !9983, !9985, !9986, !9987}
!9978 = !DILocalVariable(name: "dev", arg: 1, scope: !9976, file: !1312, line: 594, type: !1172)
!9979 = !DILocalVariable(name: "pin", arg: 2, scope: !9976, file: !1312, line: 595, type: !1187)
!9980 = !DILocalVariable(name: "mode", arg: 3, scope: !9976, file: !1312, line: 596, type: !1146)
!9981 = !DILocalVariable(name: "trig", arg: 4, scope: !9976, file: !1312, line: 597, type: !1152)
!9982 = !DILocalVariable(name: "cfg", scope: !9976, file: !1312, line: 599, type: !9917)
!9983 = !DILocalVariable(name: "data", scope: !9976, file: !1312, line: 600, type: !9984)
!9984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9985 = !DILocalVariable(name: "edge", scope: !9976, file: !1312, line: 601, type: !107)
!9986 = !DILocalVariable(name: "err", scope: !9976, file: !1312, line: 602, type: !107)
!9987 = !DILabel(scope: !9976, name: "exit", file: !1312, line: 643)
!9988 = !DILocation(line: 0, scope: !9976)
!9989 = !DILocation(line: 599, column: 45, scope: !9976)
!9990 = !DILocation(line: 604, column: 6, scope: !9976)
!9991 = !DILocation(line: 605, column: 34, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1312, line: 605, column: 7)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !1312, line: 604, column: 38)
!9994 = distinct !DILexicalBlock(scope: !9976, file: !1312, line: 604, column: 6)
!9995 = !DILocation(line: 605, column: 7, scope: !9992)
!9996 = !DILocation(line: 605, column: 47, scope: !9992)
!9997 = !DILocation(line: 605, column: 39, scope: !9992)
!9998 = !DILocation(line: 605, column: 7, scope: !9993)
!9999 = !DILocation(line: 606, column: 4, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9992, file: !1312, line: 605, column: 53)
!10001 = !DILocation(line: 607, column: 4, scope: !10000)
!10002 = !DILocation(line: 608, column: 4, scope: !10000)
!10003 = !DILocation(line: 609, column: 3, scope: !10000)
!10004 = !DILocation(line: 600, column: 38, scope: !9976)
!10005 = !DILocation(line: 620, column: 30, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9976, file: !1312, line: 620, column: 6)
!10007 = !DILocation(line: 620, column: 6, scope: !10006)
!10008 = !DILocation(line: 620, column: 57, scope: !10006)
!10009 = !DILocation(line: 620, column: 6, scope: !9976)
!10010 = !DILocation(line: 625, column: 29, scope: !9976)
!10011 = !DILocation(line: 625, column: 2, scope: !9976)
!10012 = !DILocation(line: 627, column: 2, scope: !9976)
!10013 = !DILocation(line: 630, column: 3, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9976, file: !1312, line: 627, column: 16)
!10015 = !DILocation(line: 633, column: 3, scope: !10014)
!10016 = !DILocation(line: 636, column: 3, scope: !10014)
!10017 = !DILocation(line: 639, column: 2, scope: !9976)
!10018 = !DILocation(line: 641, column: 2, scope: !9976)
!10019 = !DILocation(line: 643, column: 1, scope: !9976)
!10020 = !DILocation(line: 644, column: 2, scope: !9976)
!10021 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1312, file: !1312, line: 647, type: !1212, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10022)
!10022 = !{!10023, !10024, !10025, !10026}
!10023 = !DILocalVariable(name: "dev", arg: 1, scope: !10021, file: !1312, line: 647, type: !1172)
!10024 = !DILocalVariable(name: "callback", arg: 2, scope: !10021, file: !1312, line: 648, type: !1214)
!10025 = !DILocalVariable(name: "set", arg: 3, scope: !10021, file: !1312, line: 649, type: !145)
!10026 = !DILocalVariable(name: "data", scope: !10021, file: !1312, line: 651, type: !9984)
!10027 = !DILocation(line: 0, scope: !10021)
!10028 = !DILocation(line: 651, column: 38, scope: !10021)
!10029 = !DILocation(line: 653, column: 37, scope: !10021)
!10030 = !DILocation(line: 653, column: 9, scope: !10021)
!10031 = !DILocation(line: 653, column: 2, scope: !10021)
!10032 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10033, file: !10033, line: 38, type: !10034, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10037)
!10033 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!107, !10036, !1214, !145}
!10036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!10037 = !{!10038, !10039, !10040}
!10038 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10032, file: !10033, line: 38, type: !10036)
!10039 = !DILocalVariable(name: "callback", arg: 2, scope: !10032, file: !10033, line: 39, type: !1214)
!10040 = !DILocalVariable(name: "set", arg: 3, scope: !10032, file: !10033, line: 40, type: !145)
!10041 = !DILocation(line: 0, scope: !10032)
!10042 = !DILocation(line: 42, column: 2, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !10033, line: 42, column: 2)
!10044 = distinct !DILexicalBlock(scope: !10032, file: !10033, line: 42, column: 2)
!10045 = !DILocation(line: 42, column: 2, scope: !10044)
!10046 = !DILocation(line: 42, column: 2, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10043, file: !10033, line: 42, column: 2)
!10048 = !DILocation(line: 43, column: 2, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !10033, line: 43, column: 2)
!10050 = distinct !DILexicalBlock(scope: !10032, file: !10033, line: 43, column: 2)
!10051 = !DILocation(line: 43, column: 2, scope: !10050)
!10052 = !DILocation(line: 43, column: 2, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10049, file: !10033, line: 43, column: 2)
!10054 = !DILocation(line: 45, column: 7, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10032, file: !10033, line: 45, column: 6)
!10056 = !DILocation(line: 45, column: 6, scope: !10032)
!10057 = !DILocation(line: 46, column: 56, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !10033, line: 46, column: 7)
!10059 = distinct !DILexicalBlock(scope: !10055, file: !10033, line: 45, column: 38)
!10060 = !DILocation(line: 46, column: 8, scope: !10058)
!10061 = !DILocation(line: 46, column: 7, scope: !10059)
!10062 = !DILocation(line: 51, column: 13, scope: !10055)
!10063 = !DILocation(line: 56, column: 43, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10065, file: !10033, line: 55, column: 11)
!10065 = distinct !DILexicalBlock(scope: !10032, file: !10033, line: 55, column: 6)
!10066 = !DILocation(line: 56, column: 3, scope: !10064)
!10067 = !DILocation(line: 57, column: 2, scope: !10064)
!10068 = !DILocation(line: 60, column: 1, scope: !10032)
!10069 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1219, file: !1219, line: 261, type: !10070, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10072)
!10070 = !DISubroutineType(types: !10071)
!10071 = !{!145, !10036}
!10072 = !{!10073}
!10073 = !DILocalVariable(name: "list", arg: 1, scope: !10069, file: !1219, line: 261, type: !10036)
!10074 = !DILocation(line: 0, scope: !10069)
!10075 = !DILocation(line: 261, column: 1, scope: !10069)
!10076 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1219, file: !1219, line: 417, type: !10077, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!145, !10036, !1388}
!10079 = !{!10080, !10081, !10082, !10083}
!10080 = !DILocalVariable(name: "list", arg: 1, scope: !10076, file: !1219, line: 417, type: !10036)
!10081 = !DILocalVariable(name: "node", arg: 2, scope: !10076, file: !1219, line: 417, type: !1388)
!10082 = !DILocalVariable(name: "prev", scope: !10076, file: !1219, line: 417, type: !1388)
!10083 = !DILocalVariable(name: "test", scope: !10076, file: !1219, line: 417, type: !1388)
!10084 = !DILocation(line: 0, scope: !10076)
!10085 = !DILocation(line: 417, column: 1, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10076, file: !1219, line: 417, column: 1)
!10087 = !DILocation(line: 417, column: 1, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10086, file: !1219, line: 417, column: 1)
!10089 = !DILocation(line: 417, column: 1, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !1219, line: 417, column: 1)
!10091 = distinct !DILexicalBlock(scope: !10088, file: !1219, line: 417, column: 1)
!10092 = !DILocation(line: 417, column: 1, scope: !10091)
!10093 = distinct !{!10093, !10085, !10085}
!10094 = !DILocation(line: 417, column: 1, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !1219, line: 417, column: 1)
!10096 = !DILocation(line: 417, column: 1, scope: !10076)
!10097 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1219, file: !1219, line: 298, type: !10098, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10100)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{null, !10036, !1388}
!10100 = !{!10101, !10102}
!10101 = !DILocalVariable(name: "list", arg: 1, scope: !10097, file: !1219, line: 298, type: !10036)
!10102 = !DILocalVariable(name: "node", arg: 2, scope: !10097, file: !1219, line: 298, type: !1388)
!10103 = !DILocation(line: 0, scope: !10097)
!10104 = !DILocation(line: 298, column: 1, scope: !10097)
!10105 = !DILocation(line: 298, column: 1, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10097, file: !1219, line: 298, column: 1)
!10107 = !DILocation(line: 298, column: 1, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !1219, line: 298, column: 1)
!10109 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1219, file: !1219, line: 231, type: !10110, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1388, !10036}
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "list", arg: 1, scope: !10109, file: !1219, line: 231, type: !10036)
!10114 = !DILocation(line: 0, scope: !10109)
!10115 = !DILocation(line: 233, column: 15, scope: !10109)
!10116 = !DILocation(line: 233, column: 2, scope: !10109)
!10117 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1219, file: !1219, line: 209, type: !10118, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10120)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{null, !1388, !1388}
!10120 = !{!10121, !10122}
!10121 = !DILocalVariable(name: "parent", arg: 1, scope: !10117, file: !1219, line: 209, type: !1388)
!10122 = !DILocalVariable(name: "child", arg: 2, scope: !10117, file: !1219, line: 209, type: !1388)
!10123 = !DILocation(line: 0, scope: !10117)
!10124 = !DILocation(line: 211, column: 10, scope: !10117)
!10125 = !DILocation(line: 211, column: 15, scope: !10117)
!10126 = !DILocation(line: 212, column: 1, scope: !10117)
!10127 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1219, file: !1219, line: 214, type: !10098, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10128)
!10128 = !{!10129, !10130}
!10129 = !DILocalVariable(name: "list", arg: 1, scope: !10127, file: !1219, line: 214, type: !10036)
!10130 = !DILocalVariable(name: "node", arg: 2, scope: !10127, file: !1219, line: 214, type: !1388)
!10131 = !DILocation(line: 0, scope: !10127)
!10132 = !DILocation(line: 216, column: 8, scope: !10127)
!10133 = !DILocation(line: 216, column: 13, scope: !10127)
!10134 = !DILocation(line: 217, column: 1, scope: !10127)
!10135 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1219, file: !1219, line: 243, type: !10110, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10136)
!10136 = !{!10137}
!10137 = !DILocalVariable(name: "list", arg: 1, scope: !10135, file: !1219, line: 243, type: !10036)
!10138 = !DILocation(line: 0, scope: !10135)
!10139 = !DILocation(line: 245, column: 15, scope: !10135)
!10140 = !DILocation(line: 245, column: 2, scope: !10135)
!10141 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1219, file: !1219, line: 219, type: !10098, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "list", arg: 1, scope: !10141, file: !1219, line: 219, type: !10036)
!10144 = !DILocalVariable(name: "node", arg: 2, scope: !10141, file: !1219, line: 219, type: !1388)
!10145 = !DILocation(line: 0, scope: !10141)
!10146 = !DILocation(line: 221, column: 8, scope: !10141)
!10147 = !DILocation(line: 221, column: 13, scope: !10141)
!10148 = !DILocation(line: 222, column: 1, scope: !10141)
!10149 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1219, file: !1219, line: 401, type: !10150, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !10036, !1388, !1388}
!10152 = !{!10153, !10154, !10155}
!10153 = !DILocalVariable(name: "list", arg: 1, scope: !10149, file: !1219, line: 401, type: !10036)
!10154 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10149, file: !1219, line: 401, type: !1388)
!10155 = !DILocalVariable(name: "node", arg: 3, scope: !10149, file: !1219, line: 401, type: !1388)
!10156 = !DILocation(line: 0, scope: !10149)
!10157 = !DILocation(line: 401, column: 1, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10149, file: !1219, line: 401, column: 1)
!10159 = !DILocation(line: 0, scope: !10158)
!10160 = !DILocation(line: 401, column: 1, scope: !10149)
!10161 = !DILocation(line: 401, column: 1, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10158, file: !1219, line: 401, column: 1)
!10163 = !DILocation(line: 401, column: 1, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10162, file: !1219, line: 401, column: 1)
!10165 = !DILocation(line: 401, column: 1, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10164, file: !1219, line: 401, column: 1)
!10167 = !DILocation(line: 401, column: 1, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10158, file: !1219, line: 401, column: 1)
!10169 = !DILocation(line: 401, column: 1, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10168, file: !1219, line: 401, column: 1)
!10171 = !DILocation(line: 401, column: 1, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10170, file: !1219, line: 401, column: 1)
!10173 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1219, file: !1219, line: 285, type: !10174, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10176)
!10174 = !DISubroutineType(types: !10175)
!10175 = !{!1388, !1388}
!10176 = !{!10177}
!10177 = !DILocalVariable(name: "node", arg: 1, scope: !10173, file: !1219, line: 285, type: !1388)
!10178 = !DILocation(line: 0, scope: !10173)
!10179 = !DILocation(line: 285, column: 1, scope: !10173)
!10180 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1219, file: !1219, line: 274, type: !10174, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10181)
!10181 = !{!10182}
!10182 = !DILocalVariable(name: "node", arg: 1, scope: !10180, file: !1219, line: 274, type: !1388)
!10183 = !DILocation(line: 0, scope: !10180)
!10184 = !DILocation(line: 274, column: 1, scope: !10180)
!10185 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1219, file: !1219, line: 204, type: !10174, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10186)
!10186 = !{!10187}
!10187 = !DILocalVariable(name: "node", arg: 1, scope: !10185, file: !1219, line: 204, type: !1388)
!10188 = !DILocation(line: 0, scope: !10185)
!10189 = !DILocation(line: 206, column: 15, scope: !10185)
!10190 = !DILocation(line: 206, column: 2, scope: !10185)
!10191 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1312, file: !1312, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10192)
!10192 = !{!10193, !10194, !10195}
!10193 = !DILocalVariable(name: "pin", arg: 1, scope: !10191, file: !1312, line: 342, type: !107)
!10194 = !DILocalVariable(name: "line", scope: !10191, file: !1312, line: 344, type: !152)
!10195 = !DILocalVariable(name: "port", scope: !10191, file: !1312, line: 345, type: !107)
!10196 = !DILocation(line: 0, scope: !10191)
!10197 = !DILocation(line: 344, column: 18, scope: !10191)
!10198 = !{i32 983040, i32 0}
!10199 = !DILocation(line: 356, column: 9, scope: !10191)
!10200 = !DILocation(line: 370, column: 2, scope: !10191)
!10201 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1312, file: !1312, line: 37, type: !857, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10202)
!10202 = !{!10203, !10204, !10205}
!10203 = !DILocalVariable(name: "line", arg: 1, scope: !10201, file: !1312, line: 37, type: !107)
!10204 = !DILocalVariable(name: "arg", arg: 2, scope: !10201, file: !1312, line: 37, type: !106)
!10205 = !DILocalVariable(name: "data", scope: !10201, file: !1312, line: 39, type: !9984)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 41, column: 29, scope: !10201)
!10208 = !DILocation(line: 41, column: 39, scope: !10201)
!10209 = !DILocation(line: 41, column: 44, scope: !10201)
!10210 = !DILocation(line: 41, column: 2, scope: !10201)
!10211 = !DILocation(line: 42, column: 1, scope: !10201)
!10212 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1312, file: !1312, line: 376, type: !10213, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!107, !107, !107}
!10215 = !{!10216, !10217, !10218, !10220, !10221}
!10216 = !DILocalVariable(name: "port", arg: 1, scope: !10212, file: !1312, line: 376, type: !107)
!10217 = !DILocalVariable(name: "pin", arg: 2, scope: !10212, file: !1312, line: 376, type: !107)
!10218 = !DILocalVariable(name: "clk", scope: !10212, file: !1312, line: 386, type: !10219)
!10219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!10220 = !DILocalVariable(name: "pclken", scope: !10212, file: !1312, line: 387, type: !1431)
!10221 = !DILocalVariable(name: "ret", scope: !10212, file: !1312, line: 396, type: !107)
!10222 = !DILocation(line: 0, scope: !10212)
!10223 = !DILocation(line: 387, column: 2, scope: !10212)
!10224 = !DILocation(line: 387, column: 22, scope: !10212)
!10225 = !DILocation(line: 399, column: 8, scope: !10212)
!10226 = !DILocation(line: 400, column: 10, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10212, file: !1312, line: 400, column: 6)
!10228 = !DILocation(line: 400, column: 6, scope: !10212)
!10229 = !DILocation(line: 405, column: 2, scope: !10212)
!10230 = !DILocation(line: 407, column: 2, scope: !10212)
!10231 = !DILocation(line: 408, column: 1, scope: !10212)
!10232 = distinct !DISubprogram(name: "clock_control_on", scope: !948, file: !948, line: 123, type: !1277, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10233)
!10233 = !{!10234, !10235, !10236}
!10234 = !DILocalVariable(name: "dev", arg: 1, scope: !10232, file: !948, line: 123, type: !1172)
!10235 = !DILocalVariable(name: "sys", arg: 2, scope: !10232, file: !948, line: 124, type: !1043)
!10236 = !DILocalVariable(name: "api", scope: !10232, file: !948, line: 126, type: !1270)
!10237 = !DILocation(line: 0, scope: !10232)
!10238 = !DILocation(line: 127, column: 49, scope: !10232)
!10239 = !DILocation(line: 129, column: 14, scope: !10232)
!10240 = !DILocation(line: 129, column: 9, scope: !10232)
!10241 = !DILocation(line: 129, column: 2, scope: !10232)
!10242 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1312, file: !1312, line: 311, type: !9347, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10243)
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "port", arg: 1, scope: !10242, file: !1312, line: 311, type: !107)
!10245 = !DILocalVariable(name: "pin", arg: 2, scope: !10242, file: !1312, line: 311, type: !107)
!10246 = !DILocalVariable(name: "line", scope: !10242, file: !1312, line: 313, type: !152)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 313, column: 18, scope: !10242)
!10249 = !DILocation(line: 337, column: 2, scope: !10242)
!10250 = !DILocation(line: 340, column: 1, scope: !10242)
!10251 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1312, file: !1312, line: 295, type: !10252, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{!152, !107}
!10254 = !{!10255}
!10255 = !DILocalVariable(name: "pin", arg: 1, scope: !10251, file: !1312, line: 295, type: !107)
!10256 = !DILocation(line: 0, scope: !10251)
!10257 = !DILocation(line: 307, column: 46, scope: !10251)
!10258 = !DILocation(line: 307, column: 27, scope: !10251)
!10259 = !DILocation(line: 307, column: 32, scope: !10251)
!10260 = !DILocation(line: 307, column: 14, scope: !10251)
!10261 = !DILocation(line: 307, column: 39, scope: !10251)
!10262 = !DILocation(line: 307, column: 2, scope: !10251)
!10263 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5978, file: !5978, line: 671, type: !10264, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10266)
!10264 = !DISubroutineType(types: !10265)
!10265 = !{null, !152, !152}
!10266 = !{!10267, !10268}
!10267 = !DILocalVariable(name: "Port", arg: 1, scope: !10263, file: !5978, line: 671, type: !152)
!10268 = !DILocalVariable(name: "Line", arg: 2, scope: !10263, file: !5978, line: 671, type: !152)
!10269 = !DILocation(line: 0, scope: !10263)
!10270 = !DILocation(line: 673, column: 3, scope: !10263)
!10271 = !DILocalVariable(name: "value", arg: 1, scope: !10272, file: !6276, line: 373, type: !152)
!10272 = distinct !DISubprogram(name: "__RBIT", scope: !6276, file: !6276, line: 373, type: !7563, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10273)
!10273 = !{!10271, !10274}
!10274 = !DILocalVariable(name: "result", scope: !10272, file: !6276, line: 375, type: !152)
!10275 = !DILocation(line: 0, scope: !10272, inlinedAt: !10276)
!10276 = distinct !DILocation(line: 673, column: 3, scope: !10263)
!10277 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10276)
!10278 = !{i64 2922118}
!10279 = !DILocalVariable(name: "value", arg: 1, scope: !10280, file: !6276, line: 403, type: !152)
!10280 = distinct !DISubprogram(name: "__CLZ", scope: !6276, file: !6276, line: 403, type: !10281, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10283)
!10281 = !DISubroutineType(types: !10282)
!10282 = !{!195, !152}
!10283 = !{!10279}
!10284 = !DILocation(line: 0, scope: !10280, inlinedAt: !10285)
!10285 = distinct !DILocation(line: 673, column: 3, scope: !10263)
!10286 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10285)
!10287 = !DILocation(line: 674, column: 1, scope: !10263)
!10288 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10033, file: !10033, line: 69, type: !10289, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10291)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{null, !10036, !1172, !152}
!10291 = !{!10292, !10293, !10294, !10295, !10296}
!10292 = !DILocalVariable(name: "list", arg: 1, scope: !10288, file: !10033, line: 69, type: !10036)
!10293 = !DILocalVariable(name: "port", arg: 2, scope: !10288, file: !10033, line: 70, type: !1172)
!10294 = !DILocalVariable(name: "pins", arg: 3, scope: !10288, file: !10033, line: 71, type: !152)
!10295 = !DILocalVariable(name: "cb", scope: !10288, file: !10033, line: 73, type: !1214)
!10296 = !DILocalVariable(name: "tmp", scope: !10288, file: !10033, line: 73, type: !1214)
!10297 = !DILocation(line: 0, scope: !10288)
!10298 = !DILocation(line: 75, column: 2, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10288, file: !10033, line: 75, column: 2)
!10300 = !DILocation(line: 0, scope: !10299)
!10301 = !DILocation(line: 76, column: 11, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10303, file: !10033, line: 76, column: 7)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !10033, line: 75, column: 57)
!10304 = distinct !DILexicalBlock(scope: !10299, file: !10033, line: 75, column: 2)
!10305 = !DILocation(line: 76, column: 20, scope: !10302)
!10306 = !DILocation(line: 76, column: 7, scope: !10303)
!10307 = !DILocation(line: 77, column: 4, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !10033, line: 77, column: 4)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !10033, line: 77, column: 4)
!10310 = distinct !DILexicalBlock(scope: !10302, file: !10033, line: 76, column: 28)
!10311 = !DILocation(line: 77, column: 4, scope: !10309)
!10312 = !DILocation(line: 77, column: 4, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10308, file: !10033, line: 77, column: 4)
!10314 = !DILocation(line: 78, column: 4, scope: !10310)
!10315 = !DILocation(line: 79, column: 3, scope: !10310)
!10316 = !DILocation(line: 75, column: 2, scope: !10304)
!10317 = !DILocation(line: 81, column: 1, scope: !10288)
!10318 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5978, file: !5978, line: 710, type: !7563, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10319)
!10319 = !{!10320}
!10320 = !DILocalVariable(name: "Line", arg: 1, scope: !10318, file: !5978, line: 710, type: !152)
!10321 = !DILocation(line: 0, scope: !10318)
!10322 = !DILocation(line: 712, column: 21, scope: !10318)
!10323 = !DILocation(line: 0, scope: !10272, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 712, column: 76, scope: !10318)
!10325 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10324)
!10326 = !DILocation(line: 0, scope: !10280, inlinedAt: !10327)
!10327 = distinct !DILocation(line: 712, column: 76, scope: !10318)
!10328 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10327)
!10329 = !DILocation(line: 712, column: 73, scope: !10318)
!10330 = !DILocation(line: 712, column: 3, scope: !10318)
!10331 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10332, file: !10332, line: 910, type: !10333, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10335)
!10332 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10333 = !DISubroutineType(types: !10334)
!10334 = !{null, !1245, !152}
!10335 = !{!10336, !10337}
!10336 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10331, file: !10332, line: 910, type: !1245)
!10337 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10331, file: !10332, line: 910, type: !152)
!10338 = !DILocation(line: 0, scope: !10331)
!10339 = !DILocation(line: 912, column: 3, scope: !10331)
!10340 = !DILocation(line: 913, column: 1, scope: !10331)
!10341 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10332, file: !10332, line: 823, type: !10342, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10344)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!152, !1245}
!10344 = !{!10345}
!10345 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10341, file: !10332, line: 823, type: !1245)
!10346 = !DILocation(line: 0, scope: !10341)
!10347 = !DILocation(line: 825, column: 21, scope: !10341)
!10348 = !DILocation(line: 825, column: 3, scope: !10341)
!10349 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10332, file: !10332, line: 812, type: !10333, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10350)
!10350 = !{!10351, !10352}
!10351 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10349, file: !10332, line: 812, type: !1245)
!10352 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10349, file: !10332, line: 812, type: !152)
!10353 = !DILocation(line: 0, scope: !10349)
!10354 = !DILocation(line: 814, column: 3, scope: !10349)
!10355 = !DILocation(line: 815, column: 1, scope: !10349)
!10356 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10332, file: !10332, line: 771, type: !10342, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10356, file: !10332, line: 771, type: !1245)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 773, column: 21, scope: !10356)
!10361 = !DILocation(line: 773, column: 3, scope: !10356)
!10362 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1312, file: !1312, line: 47, type: !10363, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10365)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{!107, !1188, !187}
!10365 = !{!10366, !10367}
!10366 = !DILocalVariable(name: "flags", arg: 1, scope: !10362, file: !1312, line: 47, type: !1188)
!10367 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10362, file: !1312, line: 47, type: !187)
!10368 = !DILocation(line: 0, scope: !10362)
!10369 = !DILocation(line: 50, column: 13, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10362, file: !1312, line: 50, column: 6)
!10371 = !DILocation(line: 50, column: 28, scope: !10370)
!10372 = !DILocation(line: 50, column: 6, scope: !10362)
!10373 = !DILocation(line: 53, column: 11, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !1312, line: 50, column: 34)
!10375 = !DILocation(line: 55, column: 14, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !1312, line: 55, column: 7)
!10377 = !DILocation(line: 55, column: 35, scope: !10376)
!10378 = !DILocation(line: 55, column: 7, scope: !10374)
!10379 = !DILocation(line: 56, column: 14, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !1312, line: 56, column: 8)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !1312, line: 55, column: 41)
!10382 = !DILocation(line: 56, column: 8, scope: !10381)
!10383 = !DILocation(line: 0, scope: !10376)
!10384 = !DILocation(line: 66, column: 14, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10374, file: !1312, line: 66, column: 7)
!10386 = !DILocation(line: 66, column: 30, scope: !10385)
!10387 = !DILocation(line: 66, column: 7, scope: !10374)
!10388 = !DILocation(line: 67, column: 12, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10385, file: !1312, line: 66, column: 36)
!10390 = !DILocation(line: 68, column: 3, scope: !10389)
!10391 = !DILocation(line: 68, column: 21, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10385, file: !1312, line: 68, column: 14)
!10393 = !DILocation(line: 68, column: 39, scope: !10392)
!10394 = !DILocation(line: 68, column: 14, scope: !10385)
!10395 = !DILocation(line: 69, column: 12, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10392, file: !1312, line: 68, column: 45)
!10397 = !DILocation(line: 70, column: 3, scope: !10396)
!10398 = !DILocation(line: 72, column: 21, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10370, file: !1312, line: 72, column: 14)
!10400 = !DILocation(line: 72, column: 35, scope: !10399)
!10401 = !DILocation(line: 72, column: 14, scope: !10370)
!10402 = !DILocation(line: 77, column: 14, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !1312, line: 77, column: 7)
!10404 = distinct !DILexicalBlock(scope: !10399, file: !1312, line: 72, column: 41)
!10405 = !DILocation(line: 77, column: 30, scope: !10403)
!10406 = !DILocation(line: 77, column: 7, scope: !10404)
!10407 = !DILocation(line: 0, scope: !10370)
!10408 = !DILocation(line: 90, column: 1, scope: !10362)
!10409 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1312, file: !1312, line: 157, type: !10410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{null, !1172, !107, !107, !107}
!10412 = !{!10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420, !10421, !10422, !10423}
!10413 = !DILocalVariable(name: "dev", arg: 1, scope: !10409, file: !1312, line: 157, type: !1172)
!10414 = !DILocalVariable(name: "pin", arg: 2, scope: !10409, file: !1312, line: 157, type: !107)
!10415 = !DILocalVariable(name: "conf", arg: 3, scope: !10409, file: !1312, line: 158, type: !107)
!10416 = !DILocalVariable(name: "func", arg: 4, scope: !10409, file: !1312, line: 158, type: !107)
!10417 = !DILocalVariable(name: "cfg", scope: !10409, file: !1312, line: 160, type: !9917)
!10418 = !DILocalVariable(name: "gpio", scope: !10409, file: !1312, line: 161, type: !1245)
!10419 = !DILocalVariable(name: "pin_ll", scope: !10409, file: !1312, line: 163, type: !107)
!10420 = !DILocalVariable(name: "mode", scope: !10409, file: !1312, line: 227, type: !32)
!10421 = !DILocalVariable(name: "otype", scope: !10409, file: !1312, line: 227, type: !32)
!10422 = !DILocalVariable(name: "ospeed", scope: !10409, file: !1312, line: 227, type: !32)
!10423 = !DILocalVariable(name: "pupd", scope: !10409, file: !1312, line: 227, type: !32)
!10424 = !DILocation(line: 0, scope: !10409)
!10425 = !DILocation(line: 160, column: 45, scope: !10409)
!10426 = !DILocation(line: 161, column: 44, scope: !10409)
!10427 = !DILocation(line: 163, column: 15, scope: !10409)
!10428 = !DILocation(line: 229, column: 14, scope: !10409)
!10429 = !DILocation(line: 246, column: 47, scope: !10409)
!10430 = !DILocation(line: 246, column: 2, scope: !10409)
!10431 = !DILocation(line: 248, column: 43, scope: !10409)
!10432 = !DILocation(line: 248, column: 2, scope: !10409)
!10433 = !DILocation(line: 250, column: 40, scope: !10409)
!10434 = !DILocation(line: 250, column: 2, scope: !10409)
!10435 = !DILocation(line: 252, column: 11, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10409, file: !1312, line: 252, column: 6)
!10437 = !DILocation(line: 252, column: 6, scope: !10409)
!10438 = !DILocation(line: 253, column: 11, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !1312, line: 253, column: 7)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !1312, line: 252, column: 36)
!10441 = !DILocation(line: 253, column: 7, scope: !10440)
!10442 = !DILocation(line: 254, column: 4, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !1312, line: 253, column: 16)
!10444 = !DILocation(line: 255, column: 3, scope: !10443)
!10445 = !DILocation(line: 256, column: 4, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10439, file: !1312, line: 255, column: 10)
!10447 = !DILocation(line: 260, column: 40, scope: !10409)
!10448 = !DILocation(line: 260, column: 2, scope: !10409)
!10449 = !DILocation(line: 265, column: 1, scope: !10409)
!10450 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1312, file: !1312, line: 137, type: !10252, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10451)
!10451 = !{!10452, !10453}
!10452 = !DILocalVariable(name: "pin", arg: 1, scope: !10450, file: !1312, line: 137, type: !107)
!10453 = !DILocalVariable(name: "pinval", scope: !10450, file: !1312, line: 139, type: !152)
!10454 = !DILocation(line: 0, scope: !10450)
!10455 = !DILocation(line: 149, column: 13, scope: !10450)
!10456 = !DILocation(line: 151, column: 2, scope: !10450)
!10457 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10332, file: !10332, line: 342, type: !10458, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10460)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{null, !1245, !152, !152}
!10460 = !{!10461, !10462, !10463}
!10461 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10457, file: !10332, line: 342, type: !1245)
!10462 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10457, file: !10332, line: 342, type: !152)
!10463 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10457, file: !10332, line: 342, type: !152)
!10464 = !DILocation(line: 0, scope: !10457)
!10465 = !DILocation(line: 344, column: 3, scope: !10457)
!10466 = !DILocation(line: 345, column: 1, scope: !10457)
!10467 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10332, file: !10332, line: 413, type: !10458, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10468)
!10468 = !{!10469, !10470, !10471}
!10469 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10467, file: !10332, line: 413, type: !1245)
!10470 = !DILocalVariable(name: "Pin", arg: 2, scope: !10467, file: !10332, line: 413, type: !152)
!10471 = !DILocalVariable(name: "Speed", arg: 3, scope: !10467, file: !10332, line: 413, type: !152)
!10472 = !DILocation(line: 0, scope: !10467)
!10473 = !DILocation(line: 415, column: 3, scope: !10467)
!10474 = !DILocation(line: 0, scope: !10272, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 415, column: 3, scope: !10467)
!10476 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10475)
!10477 = !DILocation(line: 0, scope: !10280, inlinedAt: !10478)
!10478 = distinct !DILocation(line: 415, column: 3, scope: !10467)
!10479 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10478)
!10480 = !DILocation(line: 0, scope: !10272, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 415, column: 3, scope: !10467)
!10482 = !DILocation(line: 0, scope: !10280, inlinedAt: !10483)
!10483 = distinct !DILocation(line: 415, column: 3, scope: !10467)
!10484 = !DILocation(line: 417, column: 1, scope: !10467)
!10485 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10332, file: !10332, line: 484, type: !10458, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10486)
!10486 = !{!10487, !10488, !10489}
!10487 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10485, file: !10332, line: 484, type: !1245)
!10488 = !DILocalVariable(name: "Pin", arg: 2, scope: !10485, file: !10332, line: 484, type: !152)
!10489 = !DILocalVariable(name: "Pull", arg: 3, scope: !10485, file: !10332, line: 484, type: !152)
!10490 = !DILocation(line: 0, scope: !10485)
!10491 = !DILocation(line: 486, column: 3, scope: !10485)
!10492 = !DILocation(line: 0, scope: !10272, inlinedAt: !10493)
!10493 = distinct !DILocation(line: 486, column: 3, scope: !10485)
!10494 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10493)
!10495 = !DILocation(line: 0, scope: !10280, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 486, column: 3, scope: !10485)
!10497 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10496)
!10498 = !DILocation(line: 0, scope: !10272, inlinedAt: !10499)
!10499 = distinct !DILocation(line: 486, column: 3, scope: !10485)
!10500 = !DILocation(line: 0, scope: !10280, inlinedAt: !10501)
!10501 = distinct !DILocation(line: 486, column: 3, scope: !10485)
!10502 = !DILocation(line: 487, column: 1, scope: !10485)
!10503 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10332, file: !10332, line: 556, type: !10458, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10504)
!10504 = !{!10505, !10506, !10507}
!10505 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10503, file: !10332, line: 556, type: !1245)
!10506 = !DILocalVariable(name: "Pin", arg: 2, scope: !10503, file: !10332, line: 556, type: !152)
!10507 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10503, file: !10332, line: 556, type: !152)
!10508 = !DILocation(line: 0, scope: !10503)
!10509 = !DILocation(line: 558, column: 3, scope: !10503)
!10510 = !DILocation(line: 0, scope: !10272, inlinedAt: !10511)
!10511 = distinct !DILocation(line: 558, column: 3, scope: !10503)
!10512 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10511)
!10513 = !DILocation(line: 0, scope: !10280, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 558, column: 3, scope: !10503)
!10515 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10514)
!10516 = !DILocation(line: 0, scope: !10272, inlinedAt: !10517)
!10517 = distinct !DILocation(line: 558, column: 3, scope: !10503)
!10518 = !DILocation(line: 0, scope: !10280, inlinedAt: !10519)
!10519 = distinct !DILocation(line: 558, column: 3, scope: !10503)
!10520 = !DILocation(line: 560, column: 1, scope: !10503)
!10521 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10332, file: !10332, line: 633, type: !10458, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10522)
!10522 = !{!10523, !10524, !10525}
!10523 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10521, file: !10332, line: 633, type: !1245)
!10524 = !DILocalVariable(name: "Pin", arg: 2, scope: !10521, file: !10332, line: 633, type: !152)
!10525 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10521, file: !10332, line: 633, type: !152)
!10526 = !DILocation(line: 0, scope: !10521)
!10527 = !DILocation(line: 635, column: 3, scope: !10521)
!10528 = !DILocation(line: 0, scope: !10272, inlinedAt: !10529)
!10529 = distinct !DILocation(line: 635, column: 3, scope: !10521)
!10530 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10529)
!10531 = !DILocation(line: 0, scope: !10280, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 635, column: 3, scope: !10521)
!10533 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10532)
!10534 = !DILocation(line: 0, scope: !10272, inlinedAt: !10535)
!10535 = distinct !DILocation(line: 635, column: 3, scope: !10521)
!10536 = !DILocation(line: 0, scope: !10280, inlinedAt: !10537)
!10537 = distinct !DILocation(line: 635, column: 3, scope: !10521)
!10538 = !DILocation(line: 637, column: 1, scope: !10521)
!10539 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10332, file: !10332, line: 273, type: !10458, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10540)
!10540 = !{!10541, !10542, !10543}
!10541 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10539, file: !10332, line: 273, type: !1245)
!10542 = !DILocalVariable(name: "Pin", arg: 2, scope: !10539, file: !10332, line: 273, type: !152)
!10543 = !DILocalVariable(name: "Mode", arg: 3, scope: !10539, file: !10332, line: 273, type: !152)
!10544 = !DILocation(line: 0, scope: !10539)
!10545 = !DILocation(line: 275, column: 3, scope: !10539)
!10546 = !DILocation(line: 0, scope: !10272, inlinedAt: !10547)
!10547 = distinct !DILocation(line: 275, column: 3, scope: !10539)
!10548 = !DILocation(line: 380, column: 4, scope: !10272, inlinedAt: !10547)
!10549 = !DILocation(line: 0, scope: !10280, inlinedAt: !10550)
!10550 = distinct !DILocation(line: 275, column: 3, scope: !10539)
!10551 = !DILocation(line: 414, column: 7, scope: !10280, inlinedAt: !10550)
!10552 = !DILocation(line: 0, scope: !10272, inlinedAt: !10553)
!10553 = distinct !DILocation(line: 275, column: 3, scope: !10539)
!10554 = !DILocation(line: 0, scope: !10280, inlinedAt: !10555)
!10555 = distinct !DILocation(line: 275, column: 3, scope: !10539)
!10556 = !DILocation(line: 276, column: 1, scope: !10539)
!10557 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1312, file: !1312, line: 698, type: !1325, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10558)
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "dev", arg: 1, scope: !10557, file: !1312, line: 698, type: !1172)
!10560 = !DILocalVariable(name: "data", scope: !10557, file: !1312, line: 700, type: !9984)
!10561 = !DILocalVariable(name: "ret", scope: !10557, file: !1312, line: 701, type: !107)
!10562 = !DILocation(line: 0, scope: !10557)
!10563 = !DILocation(line: 700, column: 38, scope: !10557)
!10564 = !DILocation(line: 703, column: 8, scope: !10557)
!10565 = !DILocation(line: 703, column: 12, scope: !10557)
!10566 = !DILocation(line: 705, column: 7, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10557, file: !1312, line: 705, column: 6)
!10568 = !DILocation(line: 705, column: 6, scope: !10557)
!10569 = !DILocation(line: 722, column: 8, scope: !10557)
!10570 = !DILocation(line: 723, column: 10, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10557, file: !1312, line: 723, column: 6)
!10572 = !DILocation(line: 723, column: 6, scope: !10557)
!10573 = !DILocation(line: 731, column: 1, scope: !10557)
!10574 = distinct !DISubprogram(name: "device_is_ready", scope: !9762, file: !9762, line: 47, type: !10575, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10577)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!145, !1172}
!10577 = !{!10578}
!10578 = !DILocalVariable(name: "dev", arg: 1, scope: !10574, file: !9762, line: 47, type: !1172)
!10579 = !DILocation(line: 0, scope: !10574)
!10580 = !DILocation(line: 55, column: 2, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10574, file: !9762, line: 55, column: 2)
!10582 = !{i64 2154368026}
!10583 = !DILocation(line: 56, column: 9, scope: !10574)
!10584 = !DILocation(line: 56, column: 2, scope: !10574)
!10585 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1312, file: !1312, line: 270, type: !10586, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!107, !1172, !145}
!10588 = !{!10589, !10590, !10591, !10592, !10593}
!10589 = !DILocalVariable(name: "dev", arg: 1, scope: !10585, file: !1312, line: 270, type: !1172)
!10590 = !DILocalVariable(name: "on", arg: 2, scope: !10585, file: !1312, line: 270, type: !145)
!10591 = !DILocalVariable(name: "cfg", scope: !10585, file: !1312, line: 272, type: !9917)
!10592 = !DILocalVariable(name: "ret", scope: !10585, file: !1312, line: 273, type: !107)
!10593 = !DILocalVariable(name: "clk", scope: !10585, file: !1312, line: 278, type: !10219)
!10594 = !DILocation(line: 0, scope: !10585)
!10595 = !DILocation(line: 272, column: 45, scope: !10585)
!10596 = !DILocation(line: 282, column: 38, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !1312, line: 280, column: 10)
!10598 = distinct !DILexicalBlock(scope: !10585, file: !1312, line: 280, column: 6)
!10599 = !DILocation(line: 282, column: 6, scope: !10597)
!10600 = !DILocation(line: 281, column: 9, scope: !10597)
!10601 = !DILocation(line: 293, column: 1, scope: !10585)
!10602 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10575, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10603)
!10603 = !{!10604}
!10604 = !DILocalVariable(name: "dev", arg: 1, scope: !10602, file: !247, line: 730, type: !1172)
!10605 = !DILocation(line: 0, scope: !10602)
!10606 = !DILocation(line: 732, column: 9, scope: !10602)
!10607 = !DILocation(line: 732, column: 2, scope: !10602)
!10608 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1312, file: !1312, line: 496, type: !10609, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10611)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!107, !1172, !107, !107, !107}
!10611 = !{!10612, !10613, !10614, !10615, !10616, !10617}
!10612 = !DILocalVariable(name: "dev", arg: 1, scope: !10608, file: !1312, line: 496, type: !1172)
!10613 = !DILocalVariable(name: "pin", arg: 2, scope: !10608, file: !1312, line: 496, type: !107)
!10614 = !DILocalVariable(name: "conf", arg: 3, scope: !10608, file: !1312, line: 496, type: !107)
!10615 = !DILocalVariable(name: "func", arg: 4, scope: !10608, file: !1312, line: 496, type: !107)
!10616 = !DILocalVariable(name: "ret", scope: !10608, file: !1312, line: 498, type: !107)
!10617 = !DILocalVariable(name: "gpio_out", scope: !10618, file: !1312, line: 508, type: !152)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !1312, line: 507, column: 27)
!10619 = distinct !DILexicalBlock(scope: !10608, file: !1312, line: 507, column: 6)
!10620 = !DILocation(line: 0, scope: !10608)
!10621 = !DILocation(line: 505, column: 2, scope: !10608)
!10622 = !DILocation(line: 507, column: 11, scope: !10619)
!10623 = !DILocation(line: 507, column: 6, scope: !10608)
!10624 = !DILocation(line: 508, column: 28, scope: !10618)
!10625 = !DILocation(line: 0, scope: !10618)
!10626 = !DILocation(line: 510, column: 16, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !1312, line: 510, column: 7)
!10628 = !DILocation(line: 0, scope: !10627)
!10629 = !DILocation(line: 510, column: 7, scope: !10618)
!10630 = !DILocation(line: 511, column: 4, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10627, file: !1312, line: 510, column: 32)
!10632 = !DILocation(line: 512, column: 3, scope: !10631)
!10633 = !DILocation(line: 513, column: 4, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10635, file: !1312, line: 512, column: 39)
!10635 = distinct !DILexicalBlock(scope: !10627, file: !1312, line: 512, column: 14)
!10636 = !DILocation(line: 514, column: 3, scope: !10634)
!10637 = !DILocation(line: 518, column: 1, scope: !10608)
!10638 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1588, file: !1588, line: 526, type: !1491, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10639)
!10639 = !{!10640, !10641, !10642}
!10640 = !DILocalVariable(name: "dev", arg: 1, scope: !10638, file: !1588, line: 526, type: !1493)
!10641 = !DILocalVariable(name: "c", arg: 2, scope: !10638, file: !1588, line: 526, type: !1104)
!10642 = !DILocalVariable(name: "config", scope: !10638, file: !1588, line: 528, type: !10643)
!10643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!10644 = !DILocation(line: 0, scope: !10638)
!10645 = !DILocation(line: 528, column: 48, scope: !10638)
!10646 = !DILocation(line: 531, column: 40, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10638, file: !1588, line: 531, column: 6)
!10648 = !DILocation(line: 531, column: 6, scope: !10647)
!10649 = !DILocation(line: 531, column: 6, scope: !10638)
!10650 = !DILocation(line: 532, column: 34, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10647, file: !1588, line: 531, column: 48)
!10652 = !DILocation(line: 532, column: 3, scope: !10651)
!10653 = !DILocation(line: 533, column: 2, scope: !10651)
!10654 = !DILocation(line: 539, column: 42, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10638, file: !1588, line: 539, column: 6)
!10656 = !DILocation(line: 539, column: 7, scope: !10655)
!10657 = !DILocation(line: 539, column: 6, scope: !10638)
!10658 = !DILocation(line: 543, column: 52, scope: !10638)
!10659 = !DILocation(line: 543, column: 22, scope: !10638)
!10660 = !DILocation(line: 543, column: 5, scope: !10638)
!10661 = !DILocation(line: 545, column: 2, scope: !10638)
!10662 = !DILocation(line: 546, column: 1, scope: !10638)
!10663 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1588, file: !1588, line: 548, type: !1510, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667, !10668}
!10665 = !DILocalVariable(name: "dev", arg: 1, scope: !10663, file: !1588, line: 548, type: !1493)
!10666 = !DILocalVariable(name: "c", arg: 2, scope: !10663, file: !1588, line: 549, type: !196)
!10667 = !DILocalVariable(name: "config", scope: !10663, file: !1588, line: 551, type: !10643)
!10668 = !DILocalVariable(name: "key", scope: !10663, file: !1588, line: 555, type: !32)
!10669 = !DILocation(line: 0, scope: !10663)
!10670 = !DILocation(line: 551, column: 48, scope: !10663)
!10671 = !DILocation(line: 562, column: 2, scope: !10663)
!10672 = !DILocation(line: 563, column: 41, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10674, file: !1588, line: 563, column: 7)
!10674 = distinct !DILexicalBlock(scope: !10663, file: !1588, line: 562, column: 12)
!10675 = !DILocation(line: 563, column: 7, scope: !10673)
!10676 = !DILocation(line: 563, column: 7, scope: !10674)
!10677 = !DILocation(line: 55, column: 2, scope: !10678, inlinedAt: !10682)
!10678 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10679)
!10679 = !{!10680, !10681}
!10680 = !DILocalVariable(name: "key", scope: !10678, file: !5957, line: 44, type: !32)
!10681 = !DILocalVariable(name: "tmp", scope: !10678, file: !5957, line: 53, type: !32)
!10682 = distinct !DILocation(line: 564, column: 10, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10673, file: !1588, line: 563, column: 49)
!10684 = !{i64 2090827}
!10685 = !DILocation(line: 0, scope: !10678, inlinedAt: !10682)
!10686 = !DILocation(line: 565, column: 42, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10683, file: !1588, line: 565, column: 8)
!10688 = !DILocation(line: 565, column: 8, scope: !10687)
!10689 = !DILocation(line: 565, column: 8, scope: !10683)
!10690 = !DILocalVariable(name: "key", arg: 1, scope: !10691, file: !5957, line: 84, type: !32)
!10691 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10692)
!10692 = !{!10690}
!10693 = !DILocation(line: 0, scope: !10691, inlinedAt: !10694)
!10694 = distinct !DILocation(line: 568, column: 4, scope: !10683)
!10695 = !DILocation(line: 95, column: 2, scope: !10691, inlinedAt: !10694)
!10696 = !{i64 2091644}
!10697 = !DILocation(line: 569, column: 3, scope: !10683)
!10698 = distinct !{!10698, !10671, !10699}
!10699 = !DILocation(line: 570, column: 2, scope: !10663)
!10700 = !DILocation(line: 592, column: 33, scope: !10663)
!10701 = !DILocation(line: 592, column: 2, scope: !10663)
!10702 = !DILocation(line: 0, scope: !10691, inlinedAt: !10703)
!10703 = distinct !DILocation(line: 593, column: 2, scope: !10663)
!10704 = !DILocation(line: 95, column: 2, scope: !10691, inlinedAt: !10703)
!10705 = !DILocation(line: 594, column: 1, scope: !10663)
!10706 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1588, file: !1588, line: 596, type: !1514, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10707)
!10707 = !{!10708, !10709, !10710}
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !1588, line: 596, type: !1493)
!10709 = !DILocalVariable(name: "config", scope: !10706, file: !1588, line: 598, type: !10643)
!10710 = !DILocalVariable(name: "err", scope: !10706, file: !1588, line: 599, type: !152)
!10711 = !DILocation(line: 0, scope: !10706)
!10712 = !DILocation(line: 598, column: 48, scope: !10706)
!10713 = !DILocation(line: 606, column: 40, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 606, column: 6)
!10715 = !DILocation(line: 606, column: 6, scope: !10714)
!10716 = !DILocation(line: 606, column: 6, scope: !10706)
!10717 = !DILocation(line: 610, column: 39, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 610, column: 6)
!10719 = !DILocation(line: 610, column: 6, scope: !10718)
!10720 = !DILocation(line: 610, column: 6, scope: !10706)
!10721 = !DILocation(line: 614, column: 39, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 614, column: 6)
!10723 = !DILocation(line: 614, column: 6, scope: !10722)
!10724 = !DILocation(line: 614, column: 6, scope: !10706)
!10725 = !DILocation(line: 619, column: 40, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 619, column: 6)
!10727 = !DILocation(line: 619, column: 6, scope: !10726)
!10728 = !DILocation(line: 619, column: 6, scope: !10706)
!10729 = !DILocation(line: 623, column: 10, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 623, column: 6)
!10731 = !DILocation(line: 623, column: 6, scope: !10706)
!10732 = !DILocation(line: 624, column: 34, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10730, file: !1588, line: 623, column: 24)
!10734 = !DILocation(line: 624, column: 3, scope: !10733)
!10735 = !DILocation(line: 625, column: 2, scope: !10733)
!10736 = !DILocation(line: 632, column: 10, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 632, column: 6)
!10738 = !DILocation(line: 632, column: 6, scope: !10706)
!10739 = !DILocation(line: 633, column: 34, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !1588, line: 632, column: 32)
!10741 = !DILocation(line: 633, column: 3, scope: !10740)
!10742 = !DILocation(line: 634, column: 2, scope: !10740)
!10743 = !DILocation(line: 636, column: 10, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 636, column: 6)
!10745 = !DILocation(line: 636, column: 6, scope: !10706)
!10746 = !DILocation(line: 637, column: 33, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !1588, line: 636, column: 31)
!10748 = !DILocation(line: 637, column: 3, scope: !10747)
!10749 = !DILocation(line: 638, column: 2, scope: !10747)
!10750 = !DILocation(line: 640, column: 10, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10706, file: !1588, line: 640, column: 6)
!10752 = !DILocation(line: 640, column: 6, scope: !10706)
!10753 = !DILocation(line: 641, column: 33, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10751, file: !1588, line: 640, column: 32)
!10755 = !DILocation(line: 641, column: 3, scope: !10754)
!10756 = !DILocation(line: 642, column: 2, scope: !10754)
!10757 = !DILocation(line: 646, column: 32, scope: !10706)
!10758 = !DILocation(line: 646, column: 2, scope: !10706)
!10759 = !DILocation(line: 648, column: 2, scope: !10706)
!10760 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1588, file: !1588, line: 419, type: !1518, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10761)
!10761 = !{!10762, !10763, !10764, !10765, !10767, !10768, !10769, !10770}
!10762 = !DILocalVariable(name: "dev", arg: 1, scope: !10760, file: !1588, line: 419, type: !1493)
!10763 = !DILocalVariable(name: "cfg", arg: 2, scope: !10760, file: !1588, line: 420, type: !1520)
!10764 = !DILocalVariable(name: "config", scope: !10760, file: !1588, line: 422, type: !10643)
!10765 = !DILocalVariable(name: "data", scope: !10760, file: !1588, line: 423, type: !10766)
!10766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!10767 = !DILocalVariable(name: "parity", scope: !10760, file: !1588, line: 424, type: !6553)
!10768 = !DILocalVariable(name: "stopbits", scope: !10760, file: !1588, line: 425, type: !6553)
!10769 = !DILocalVariable(name: "databits", scope: !10760, file: !1588, line: 426, type: !6553)
!10770 = !DILocalVariable(name: "flowctrl", scope: !10760, file: !1588, line: 428, type: !6553)
!10771 = !DILocation(line: 0, scope: !10760)
!10772 = !DILocation(line: 422, column: 48, scope: !10760)
!10773 = !DILocation(line: 423, column: 38, scope: !10760)
!10774 = !DILocation(line: 424, column: 56, scope: !10760)
!10775 = !DILocation(line: 424, column: 51, scope: !10760)
!10776 = !DILocation(line: 424, column: 26, scope: !10760)
!10777 = !DILocation(line: 425, column: 60, scope: !10760)
!10778 = !DILocation(line: 425, column: 55, scope: !10760)
!10779 = !DILocation(line: 425, column: 28, scope: !10760)
!10780 = !DILocation(line: 426, column: 60, scope: !10760)
!10781 = !DILocation(line: 426, column: 55, scope: !10760)
!10782 = !DILocation(line: 426, column: 28, scope: !10760)
!10783 = !DILocation(line: 428, column: 58, scope: !10760)
!10784 = !DILocation(line: 428, column: 53, scope: !10760)
!10785 = !DILocation(line: 428, column: 28, scope: !10760)
!10786 = !DILocation(line: 431, column: 44, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 431, column: 6)
!10788 = !DILocation(line: 438, column: 22, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 437, column: 6)
!10790 = !DILocation(line: 437, column: 6, scope: !10760)
!10791 = !DILocation(line: 448, column: 6, scope: !10760)
!10792 = !DILocation(line: 465, column: 47, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 465, column: 6)
!10794 = !DILocation(line: 475, column: 21, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 475, column: 6)
!10796 = !DILocation(line: 475, column: 6, scope: !10760)
!10797 = !DILocation(line: 476, column: 8, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10799, file: !1588, line: 476, column: 7)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !1588, line: 475, column: 49)
!10800 = !DILocation(line: 477, column: 34, scope: !10798)
!10801 = !DILocation(line: 476, column: 7, scope: !10799)
!10802 = !DILocation(line: 482, column: 27, scope: !10760)
!10803 = !DILocation(line: 482, column: 2, scope: !10760)
!10804 = !DILocation(line: 484, column: 16, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 484, column: 6)
!10806 = !DILocation(line: 484, column: 13, scope: !10805)
!10807 = !DILocation(line: 484, column: 6, scope: !10760)
!10808 = !DILocation(line: 485, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !1588, line: 484, column: 44)
!10810 = !DILocation(line: 486, column: 2, scope: !10809)
!10811 = !DILocation(line: 488, column: 18, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 488, column: 6)
!10813 = !DILocation(line: 488, column: 15, scope: !10812)
!10814 = !DILocation(line: 488, column: 6, scope: !10760)
!10815 = !DILocation(line: 489, column: 3, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10812, file: !1588, line: 488, column: 48)
!10817 = !DILocation(line: 490, column: 2, scope: !10816)
!10818 = !DILocation(line: 492, column: 18, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 492, column: 6)
!10820 = !DILocation(line: 492, column: 15, scope: !10819)
!10821 = !DILocation(line: 492, column: 6, scope: !10760)
!10822 = !DILocation(line: 493, column: 3, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10819, file: !1588, line: 492, column: 48)
!10824 = !DILocation(line: 494, column: 2, scope: !10823)
!10825 = !DILocation(line: 496, column: 18, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 496, column: 6)
!10827 = !DILocation(line: 496, column: 15, scope: !10826)
!10828 = !DILocation(line: 496, column: 6, scope: !10760)
!10829 = !DILocation(line: 497, column: 3, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10826, file: !1588, line: 496, column: 46)
!10831 = !DILocation(line: 498, column: 2, scope: !10830)
!10832 = !DILocation(line: 500, column: 11, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10760, file: !1588, line: 500, column: 6)
!10834 = !DILocation(line: 500, column: 29, scope: !10833)
!10835 = !DILocation(line: 500, column: 20, scope: !10833)
!10836 = !DILocation(line: 500, column: 6, scope: !10760)
!10837 = !DILocation(line: 501, column: 3, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !1588, line: 500, column: 40)
!10839 = !DILocation(line: 502, column: 26, scope: !10838)
!10840 = !DILocation(line: 502, column: 19, scope: !10838)
!10841 = !DILocation(line: 503, column: 2, scope: !10838)
!10842 = !DILocation(line: 505, column: 26, scope: !10760)
!10843 = !DILocation(line: 505, column: 2, scope: !10760)
!10844 = !DILocation(line: 506, column: 2, scope: !10760)
!10845 = !DILocation(line: 507, column: 1, scope: !10760)
!10846 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1588, file: !1588, line: 509, type: !1531, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10847)
!10847 = !{!10848, !10849, !10850}
!10848 = !DILocalVariable(name: "dev", arg: 1, scope: !10846, file: !1588, line: 509, type: !1493)
!10849 = !DILocalVariable(name: "cfg", arg: 2, scope: !10846, file: !1588, line: 510, type: !1533)
!10850 = !DILocalVariable(name: "data", scope: !10846, file: !1588, line: 512, type: !10766)
!10851 = !DILocation(line: 0, scope: !10846)
!10852 = !DILocation(line: 512, column: 38, scope: !10846)
!10853 = !DILocation(line: 514, column: 24, scope: !10846)
!10854 = !DILocation(line: 514, column: 7, scope: !10846)
!10855 = !DILocation(line: 514, column: 16, scope: !10846)
!10856 = !DILocation(line: 515, column: 41, scope: !10846)
!10857 = !{i32 0, i32 1537}
!10858 = !DILocation(line: 515, column: 16, scope: !10846)
!10859 = !DILocation(line: 515, column: 7, scope: !10846)
!10860 = !DILocation(line: 515, column: 14, scope: !10846)
!10861 = !DILocation(line: 517, column: 3, scope: !10846)
!10862 = !{i32 0, i32 12289}
!10863 = !DILocation(line: 516, column: 19, scope: !10846)
!10864 = !DILocation(line: 516, column: 7, scope: !10846)
!10865 = !DILocation(line: 516, column: 17, scope: !10846)
!10866 = !DILocation(line: 519, column: 3, scope: !10846)
!10867 = !DILocation(line: 519, column: 33, scope: !10846)
!10868 = !DILocation(line: 518, column: 19, scope: !10846)
!10869 = !DILocation(line: 518, column: 7, scope: !10846)
!10870 = !DILocation(line: 518, column: 17, scope: !10846)
!10871 = !DILocation(line: 521, column: 3, scope: !10846)
!10872 = !{i32 0, i32 769}
!10873 = !DILocation(line: 520, column: 19, scope: !10846)
!10874 = !DILocation(line: 520, column: 7, scope: !10846)
!10875 = !DILocation(line: 520, column: 17, scope: !10846)
!10876 = !DILocation(line: 522, column: 2, scope: !10846)
!10877 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1588, file: !1588, line: 205, type: !10878, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10880)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{!152, !1493}
!10880 = !{!10881, !10882}
!10881 = !DILocalVariable(name: "dev", arg: 1, scope: !10877, file: !1588, line: 205, type: !1493)
!10882 = !DILocalVariable(name: "config", scope: !10877, file: !1588, line: 207, type: !10643)
!10883 = !DILocation(line: 0, scope: !10877)
!10884 = !DILocation(line: 207, column: 48, scope: !10877)
!10885 = !DILocation(line: 209, column: 36, scope: !10877)
!10886 = !DILocation(line: 209, column: 9, scope: !10877)
!10887 = !DILocation(line: 209, column: 2, scope: !10877)
!10888 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1588, file: !1588, line: 270, type: !10889, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10891)
!10889 = !DISubroutineType(types: !10890)
!10890 = !{!1459, !152}
!10891 = !{!10892}
!10892 = !DILocalVariable(name: "parity", arg: 1, scope: !10888, file: !1588, line: 270, type: !152)
!10893 = !DILocation(line: 0, scope: !10888)
!10894 = !DILocation(line: 272, column: 2, scope: !10888)
!10895 = !DILocation(line: 281, column: 1, scope: !10888)
!10896 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1588, file: !1588, line: 220, type: !10878, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10897)
!10897 = !{!10898, !10899}
!10898 = !DILocalVariable(name: "dev", arg: 1, scope: !10896, file: !1588, line: 220, type: !1493)
!10899 = !DILocalVariable(name: "config", scope: !10896, file: !1588, line: 222, type: !10643)
!10900 = !DILocation(line: 0, scope: !10896)
!10901 = !DILocation(line: 222, column: 48, scope: !10896)
!10902 = !DILocation(line: 224, column: 44, scope: !10896)
!10903 = !DILocation(line: 224, column: 9, scope: !10896)
!10904 = !DILocation(line: 224, column: 2, scope: !10896)
!10905 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1588, file: !1588, line: 304, type: !10906, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10908)
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!1473, !152}
!10908 = !{!10909}
!10909 = !DILocalVariable(name: "sb", arg: 1, scope: !10905, file: !1588, line: 304, type: !152)
!10910 = !DILocation(line: 0, scope: !10905)
!10911 = !DILocation(line: 306, column: 2, scope: !10905)
!10912 = !DILocation(line: 0, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10905, file: !1588, line: 306, column: 14)
!10914 = !DILocation(line: 323, column: 1, scope: !10905)
!10915 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1588, file: !1588, line: 235, type: !10878, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10916)
!10916 = !{!10917, !10918}
!10917 = !DILocalVariable(name: "dev", arg: 1, scope: !10915, file: !1588, line: 235, type: !1493)
!10918 = !DILocalVariable(name: "config", scope: !10915, file: !1588, line: 237, type: !10643)
!10919 = !DILocation(line: 0, scope: !10915)
!10920 = !DILocation(line: 237, column: 48, scope: !10915)
!10921 = !DILocation(line: 239, column: 39, scope: !10915)
!10922 = !DILocation(line: 239, column: 9, scope: !10915)
!10923 = !DILocation(line: 239, column: 2, scope: !10915)
!10924 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1588, file: !1588, line: 355, type: !10925, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10927)
!10925 = !DISubroutineType(types: !10926)
!10926 = !{!1466, !152, !152}
!10927 = !{!10928, !10929}
!10928 = !DILocalVariable(name: "db", arg: 1, scope: !10924, file: !1588, line: 355, type: !152)
!10929 = !DILocalVariable(name: "p", arg: 2, scope: !10924, file: !1588, line: 356, type: !152)
!10930 = !DILocation(line: 0, scope: !10924)
!10931 = !DILocation(line: 358, column: 2, scope: !10924)
!10932 = !DILocation(line: 384, column: 1, scope: !10924)
!10933 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1588, file: !1588, line: 250, type: !10878, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10934)
!10934 = !{!10935, !10936}
!10935 = !DILocalVariable(name: "dev", arg: 1, scope: !10933, file: !1588, line: 250, type: !1493)
!10936 = !DILocalVariable(name: "config", scope: !10933, file: !1588, line: 252, type: !10643)
!10937 = !DILocation(line: 0, scope: !10933)
!10938 = !DILocation(line: 252, column: 48, scope: !10933)
!10939 = !DILocation(line: 254, column: 40, scope: !10933)
!10940 = !DILocation(line: 254, column: 9, scope: !10933)
!10941 = !DILocation(line: 254, column: 2, scope: !10933)
!10942 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1588, file: !1588, line: 409, type: !10943, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10945)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!1479, !152}
!10945 = !{!10946}
!10946 = !DILocalVariable(name: "fc", arg: 1, scope: !10942, file: !1588, line: 409, type: !152)
!10947 = !DILocation(line: 0, scope: !10942)
!10948 = !DILocation(line: 411, column: 9, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10942, file: !1588, line: 411, column: 6)
!10950 = !DILocation(line: 416, column: 1, scope: !10942)
!10951 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10952, file: !10952, line: 967, type: !10953, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10955)
!10952 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10953 = !DISubroutineType(types: !10954)
!10954 = !{!152, !1534}
!10955 = !{!10956}
!10956 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10951, file: !10952, line: 967, type: !1534)
!10957 = !DILocation(line: 0, scope: !10951)
!10958 = !DILocation(line: 969, column: 21, scope: !10951)
!10959 = !DILocation(line: 969, column: 3, scope: !10951)
!10960 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10952, file: !10952, line: 601, type: !10953, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10961)
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10960, file: !10952, line: 601, type: !1534)
!10963 = !DILocation(line: 0, scope: !10960)
!10964 = !DILocation(line: 603, column: 21, scope: !10960)
!10965 = !DILocation(line: 603, column: 3, scope: !10960)
!10966 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10952, file: !10952, line: 820, type: !10953, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10967)
!10967 = !{!10968}
!10968 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10966, file: !10952, line: 820, type: !1534)
!10969 = !DILocation(line: 0, scope: !10966)
!10970 = !DILocation(line: 822, column: 21, scope: !10966)
!10971 = !DILocation(line: 822, column: 3, scope: !10966)
!10972 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10952, file: !10952, line: 547, type: !10953, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10973)
!10973 = !{!10974}
!10974 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10972, file: !10952, line: 547, type: !1534)
!10975 = !DILocation(line: 0, scope: !10972)
!10976 = !DILocation(line: 549, column: 21, scope: !10972)
!10977 = !DILocation(line: 549, column: 3, scope: !10972)
!10978 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1588, file: !1588, line: 257, type: !10979, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10981)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!152, !1459}
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "parity", arg: 1, scope: !10978, file: !1588, line: 257, type: !1459)
!10983 = !DILocation(line: 0, scope: !10978)
!10984 = !DILocation(line: 259, column: 2, scope: !10978)
!10985 = !DILocation(line: 268, column: 1, scope: !10978)
!10986 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1588, file: !1588, line: 283, type: !10987, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10989)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{!152, !1473}
!10989 = !{!10990}
!10990 = !DILocalVariable(name: "sb", arg: 1, scope: !10986, file: !1588, line: 283, type: !1473)
!10991 = !DILocation(line: 0, scope: !10986)
!10992 = !DILocation(line: 285, column: 2, scope: !10986)
!10993 = !DILocation(line: 0, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10986, file: !1588, line: 285, column: 14)
!10995 = !DILocation(line: 302, column: 1, scope: !10986)
!10996 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1588, file: !1588, line: 325, type: !10997, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!152, !1466, !1459}
!10999 = !{!11000, !11001}
!11000 = !DILocalVariable(name: "db", arg: 1, scope: !10996, file: !1588, line: 325, type: !1466)
!11001 = !DILocalVariable(name: "p", arg: 2, scope: !10996, file: !1588, line: 326, type: !1459)
!11002 = !DILocation(line: 0, scope: !10996)
!11003 = !DILocation(line: 328, column: 2, scope: !10996)
!11004 = !DILocation(line: 353, column: 1, scope: !10996)
!11005 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1588, file: !1588, line: 393, type: !11006, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11008)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!152, !1479}
!11008 = !{!11009}
!11009 = !DILocalVariable(name: "fc", arg: 1, scope: !11005, file: !1588, line: 393, type: !1479)
!11010 = !DILocation(line: 0, scope: !11005)
!11011 = !DILocation(line: 395, column: 9, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11005, file: !1588, line: 395, column: 6)
!11013 = !DILocation(line: 400, column: 1, scope: !11005)
!11014 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10952, file: !10952, line: 424, type: !11015, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11017)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{null, !1534}
!11017 = !{!11018}
!11018 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11014, file: !10952, line: 424, type: !1534)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 426, column: 3, scope: !11014)
!11021 = !DILocation(line: 427, column: 1, scope: !11014)
!11022 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1588, file: !1588, line: 197, type: !11023, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11025)
!11023 = !DISubroutineType(types: !11024)
!11024 = !{null, !1493, !152}
!11025 = !{!11026, !11027, !11028}
!11026 = !DILocalVariable(name: "dev", arg: 1, scope: !11022, file: !1588, line: 197, type: !1493)
!11027 = !DILocalVariable(name: "parity", arg: 2, scope: !11022, file: !1588, line: 198, type: !152)
!11028 = !DILocalVariable(name: "config", scope: !11022, file: !1588, line: 200, type: !10643)
!11029 = !DILocation(line: 0, scope: !11022)
!11030 = !DILocation(line: 200, column: 48, scope: !11022)
!11031 = !DILocation(line: 202, column: 29, scope: !11022)
!11032 = !DILocation(line: 202, column: 2, scope: !11022)
!11033 = !DILocation(line: 203, column: 1, scope: !11022)
!11034 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1588, file: !1588, line: 212, type: !11023, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11035)
!11035 = !{!11036, !11037, !11038}
!11036 = !DILocalVariable(name: "dev", arg: 1, scope: !11034, file: !1588, line: 212, type: !1493)
!11037 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11034, file: !1588, line: 213, type: !152)
!11038 = !DILocalVariable(name: "config", scope: !11034, file: !1588, line: 215, type: !10643)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 215, column: 48, scope: !11034)
!11041 = !DILocation(line: 217, column: 37, scope: !11034)
!11042 = !DILocation(line: 217, column: 2, scope: !11034)
!11043 = !DILocation(line: 218, column: 1, scope: !11034)
!11044 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1588, file: !1588, line: 227, type: !11023, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048}
!11046 = !DILocalVariable(name: "dev", arg: 1, scope: !11044, file: !1588, line: 227, type: !1493)
!11047 = !DILocalVariable(name: "databits", arg: 2, scope: !11044, file: !1588, line: 228, type: !152)
!11048 = !DILocalVariable(name: "config", scope: !11044, file: !1588, line: 230, type: !10643)
!11049 = !DILocation(line: 0, scope: !11044)
!11050 = !DILocation(line: 230, column: 48, scope: !11044)
!11051 = !DILocation(line: 232, column: 32, scope: !11044)
!11052 = !DILocation(line: 232, column: 2, scope: !11044)
!11053 = !DILocation(line: 233, column: 1, scope: !11044)
!11054 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1588, file: !1588, line: 242, type: !11023, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11055)
!11055 = !{!11056, !11057, !11058}
!11056 = !DILocalVariable(name: "dev", arg: 1, scope: !11054, file: !1588, line: 242, type: !1493)
!11057 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11054, file: !1588, line: 243, type: !152)
!11058 = !DILocalVariable(name: "config", scope: !11054, file: !1588, line: 245, type: !10643)
!11059 = !DILocation(line: 0, scope: !11054)
!11060 = !DILocation(line: 245, column: 48, scope: !11054)
!11061 = !DILocation(line: 247, column: 33, scope: !11054)
!11062 = !DILocation(line: 247, column: 2, scope: !11054)
!11063 = !DILocation(line: 248, column: 1, scope: !11054)
!11064 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1588, file: !1588, line: 107, type: !11023, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11065)
!11065 = !{!11066, !11067, !11068, !11069, !11070}
!11066 = !DILocalVariable(name: "dev", arg: 1, scope: !11064, file: !1588, line: 107, type: !1493)
!11067 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11064, file: !1588, line: 107, type: !152)
!11068 = !DILocalVariable(name: "config", scope: !11064, file: !1588, line: 109, type: !10643)
!11069 = !DILocalVariable(name: "data", scope: !11064, file: !1588, line: 110, type: !10766)
!11070 = !DILocalVariable(name: "clock_rate", scope: !11064, file: !1588, line: 112, type: !152)
!11071 = !DILocation(line: 0, scope: !11064)
!11072 = !DILocation(line: 109, column: 48, scope: !11064)
!11073 = !DILocation(line: 110, column: 38, scope: !11064)
!11074 = !DILocation(line: 112, column: 2, scope: !11064)
!11075 = !DILocation(line: 123, column: 36, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !1588, line: 123, column: 7)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !1588, line: 122, column: 9)
!11078 = distinct !DILexicalBlock(scope: !11064, file: !1588, line: 115, column: 6)
!11079 = !DILocation(line: 124, column: 42, scope: !11076)
!11080 = !DILocation(line: 123, column: 7, scope: !11076)
!11081 = !DILocation(line: 125, column: 22, scope: !11076)
!11082 = !DILocation(line: 123, column: 7, scope: !11077)
!11083 = !DILocation(line: 126, column: 4, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !1588, line: 126, column: 4)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !1588, line: 126, column: 4)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !1588, line: 126, column: 4)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !1588, line: 126, column: 4)
!11088 = distinct !DILexicalBlock(scope: !11076, file: !1588, line: 125, column: 27)
!11089 = !DILocation(line: 127, column: 4, scope: !11088)
!11090 = !DILocation(line: 176, column: 36, scope: !11064)
!11091 = !DILocation(line: 176, column: 3, scope: !11064)
!11092 = !DILocation(line: 179, column: 32, scope: !11064)
!11093 = !DILocation(line: 180, column: 10, scope: !11064)
!11094 = !DILocation(line: 179, column: 3, scope: !11064)
!11095 = !DILocation(line: 189, column: 3, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !1588, line: 189, column: 3)
!11097 = distinct !DILexicalBlock(scope: !11064, file: !1588, line: 189, column: 3)
!11098 = !DILocation(line: 189, column: 3, scope: !11097)
!11099 = !DILocation(line: 189, column: 3, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11096, file: !1588, line: 189, column: 3)
!11101 = !DILocation(line: 195, column: 1, scope: !11064)
!11102 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10952, file: !10952, line: 410, type: !11015, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11103)
!11103 = !{!11104}
!11104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11102, file: !10952, line: 410, type: !1534)
!11105 = !DILocation(line: 0, scope: !11102)
!11106 = !DILocation(line: 412, column: 3, scope: !11102)
!11107 = !DILocation(line: 413, column: 1, scope: !11102)
!11108 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !948, file: !948, line: 216, type: !1567, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11109)
!11109 = !{!11110, !11111, !11112, !11113}
!11110 = !DILocalVariable(name: "dev", arg: 1, scope: !11108, file: !948, line: 216, type: !1493)
!11111 = !DILocalVariable(name: "sys", arg: 2, scope: !11108, file: !948, line: 217, type: !1043)
!11112 = !DILocalVariable(name: "rate", arg: 3, scope: !11108, file: !948, line: 218, type: !999)
!11113 = !DILocalVariable(name: "api", scope: !11108, file: !948, line: 220, type: !1545)
!11114 = !DILocation(line: 0, scope: !11108)
!11115 = !DILocation(line: 221, column: 49, scope: !11108)
!11116 = !DILocation(line: 223, column: 11, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11108, file: !948, line: 223, column: 6)
!11118 = !DILocation(line: 223, column: 20, scope: !11117)
!11119 = !DILocation(line: 223, column: 6, scope: !11108)
!11120 = !DILocation(line: 227, column: 9, scope: !11108)
!11121 = !DILocation(line: 227, column: 2, scope: !11108)
!11122 = !DILocation(line: 228, column: 1, scope: !11108)
!11123 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6035, file: !6035, line: 175, type: !6036, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11124)
!11124 = !{!11125}
!11125 = !DILocalVariable(name: "level", arg: 1, scope: !11123, file: !6035, line: 175, type: !107)
!11126 = !DILocation(line: 0, scope: !11123)
!11127 = !DILocation(line: 177, column: 2, scope: !11123)
!11128 = !DILocation(line: 189, column: 1, scope: !11123)
!11129 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10952, file: !10952, line: 615, type: !11130, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11132)
!11130 = !DISubroutineType(types: !11131)
!11131 = !{null, !1534, !152}
!11132 = !{!11133, !11134}
!11133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !10952, line: 615, type: !1534)
!11134 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11129, file: !10952, line: 615, type: !152)
!11135 = !DILocation(line: 0, scope: !11129)
!11136 = !DILocation(line: 617, column: 3, scope: !11129)
!11137 = !DILocation(line: 618, column: 1, scope: !11129)
!11138 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10952, file: !10952, line: 1020, type: !11139, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11141)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{null, !1534, !152, !152, !152}
!11141 = !{!11142, !11143, !11144, !11145}
!11142 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11138, file: !10952, line: 1020, type: !1534)
!11143 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11138, file: !10952, line: 1020, type: !152)
!11144 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11138, file: !10952, line: 1020, type: !152)
!11145 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11138, file: !10952, line: 1021, type: !152)
!11146 = !DILocation(line: 0, scope: !11138)
!11147 = !DILocation(line: 1029, column: 30, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !10952, line: 1028, column: 3)
!11149 = distinct !DILexicalBlock(scope: !11138, file: !10952, line: 1023, column: 7)
!11150 = !DILocation(line: 1029, column: 19, scope: !11148)
!11151 = !DILocation(line: 1029, column: 13, scope: !11148)
!11152 = !DILocation(line: 1029, column: 17, scope: !11148)
!11153 = !DILocation(line: 1031, column: 1, scope: !11138)
!11154 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10952, file: !10952, line: 949, type: !11130, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11155)
!11155 = !{!11156, !11157}
!11156 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11154, file: !10952, line: 949, type: !1534)
!11157 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11154, file: !10952, line: 949, type: !152)
!11158 = !DILocation(line: 0, scope: !11154)
!11159 = !DILocation(line: 951, column: 3, scope: !11154)
!11160 = !DILocation(line: 952, column: 1, scope: !11154)
!11161 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10952, file: !10952, line: 588, type: !11130, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11162)
!11162 = !{!11163, !11164}
!11163 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11161, file: !10952, line: 588, type: !1534)
!11164 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11161, file: !10952, line: 588, type: !152)
!11165 = !DILocation(line: 0, scope: !11161)
!11166 = !DILocation(line: 590, column: 3, scope: !11161)
!11167 = !DILocation(line: 591, column: 1, scope: !11161)
!11168 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10952, file: !10952, line: 805, type: !11130, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11169)
!11169 = !{!11170, !11171}
!11170 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11168, file: !10952, line: 805, type: !1534)
!11171 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11168, file: !10952, line: 805, type: !152)
!11172 = !DILocation(line: 0, scope: !11168)
!11173 = !DILocation(line: 807, column: 3, scope: !11168)
!11174 = !DILocation(line: 808, column: 1, scope: !11168)
!11175 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10952, file: !10952, line: 532, type: !11130, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11176)
!11176 = !{!11177, !11178}
!11177 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11175, file: !10952, line: 532, type: !1534)
!11178 = !DILocalVariable(name: "Parity", arg: 2, scope: !11175, file: !10952, line: 532, type: !152)
!11179 = !DILocation(line: 0, scope: !11175)
!11180 = !DILocation(line: 534, column: 3, scope: !11175)
!11181 = !DILocation(line: 535, column: 1, scope: !11175)
!11182 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10952, file: !10952, line: 1770, type: !10953, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11183)
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11182, file: !10952, line: 1770, type: !1534)
!11185 = !DILocation(line: 0, scope: !11182)
!11186 = !DILocation(line: 1772, column: 11, scope: !11182)
!11187 = !DILocation(line: 1772, column: 46, scope: !11182)
!11188 = !DILocation(line: 1772, column: 3, scope: !11182)
!11189 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10952, file: !10952, line: 1737, type: !10953, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11190)
!11190 = !{!11191}
!11191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11189, file: !10952, line: 1737, type: !1534)
!11192 = !DILocation(line: 0, scope: !11189)
!11193 = !DILocation(line: 1739, column: 11, scope: !11189)
!11194 = !DILocation(line: 1739, column: 3, scope: !11189)
!11195 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10952, file: !10952, line: 1748, type: !10953, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11196)
!11196 = !{!11197}
!11197 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11195, file: !10952, line: 1748, type: !1534)
!11198 = !DILocation(line: 0, scope: !11195)
!11199 = !DILocation(line: 1750, column: 11, scope: !11195)
!11200 = !DILocation(line: 1750, column: 45, scope: !11195)
!11201 = !DILocation(line: 1750, column: 3, scope: !11195)
!11202 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10952, file: !10952, line: 1827, type: !10953, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11203)
!11203 = !{!11204}
!11204 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11202, file: !10952, line: 1827, type: !1534)
!11205 = !DILocation(line: 0, scope: !11202)
!11206 = !DILocation(line: 1829, column: 11, scope: !11202)
!11207 = !DILocation(line: 1829, column: 46, scope: !11202)
!11208 = !DILocation(line: 1829, column: 3, scope: !11202)
!11209 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10952, file: !10952, line: 1992, type: !11015, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11210)
!11210 = !{!11211}
!11211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11209, file: !10952, line: 1992, type: !1534)
!11212 = !DILocation(line: 0, scope: !11209)
!11213 = !DILocation(line: 1994, column: 3, scope: !11209)
!11214 = !DILocation(line: 1995, column: 1, scope: !11209)
!11215 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10952, file: !10952, line: 1934, type: !11015, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11216)
!11216 = !{!11217, !11218}
!11217 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11215, file: !10952, line: 1934, type: !1534)
!11218 = !DILocalVariable(name: "tmpreg", scope: !11215, file: !10952, line: 1936, type: !227)
!11219 = !DILocation(line: 0, scope: !11215)
!11220 = !DILocation(line: 1936, column: 3, scope: !11215)
!11221 = !DILocation(line: 1936, column: 17, scope: !11215)
!11222 = !DILocation(line: 1937, column: 20, scope: !11215)
!11223 = !DILocation(line: 1937, column: 10, scope: !11215)
!11224 = !DILocation(line: 1938, column: 10, scope: !11215)
!11225 = !DILocation(line: 1939, column: 20, scope: !11215)
!11226 = !DILocation(line: 1939, column: 10, scope: !11215)
!11227 = !DILocation(line: 1940, column: 10, scope: !11215)
!11228 = !DILocation(line: 1941, column: 1, scope: !11215)
!11229 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10952, file: !10952, line: 1877, type: !11015, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11230)
!11230 = !{!11231, !11232}
!11231 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11229, file: !10952, line: 1877, type: !1534)
!11232 = !DILocalVariable(name: "tmpreg", scope: !11229, file: !10952, line: 1879, type: !227)
!11233 = !DILocation(line: 0, scope: !11229)
!11234 = !DILocation(line: 1879, column: 3, scope: !11229)
!11235 = !DILocation(line: 1879, column: 17, scope: !11229)
!11236 = !DILocation(line: 1880, column: 20, scope: !11229)
!11237 = !DILocation(line: 1880, column: 10, scope: !11229)
!11238 = !DILocation(line: 1881, column: 10, scope: !11229)
!11239 = !DILocation(line: 1882, column: 20, scope: !11229)
!11240 = !DILocation(line: 1882, column: 10, scope: !11229)
!11241 = !DILocation(line: 1883, column: 10, scope: !11229)
!11242 = !DILocation(line: 1884, column: 1, scope: !11229)
!11243 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10952, file: !10952, line: 1896, type: !11015, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11244)
!11244 = !{!11245, !11246}
!11245 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11243, file: !10952, line: 1896, type: !1534)
!11246 = !DILocalVariable(name: "tmpreg", scope: !11243, file: !10952, line: 1898, type: !227)
!11247 = !DILocation(line: 0, scope: !11243)
!11248 = !DILocation(line: 1898, column: 3, scope: !11243)
!11249 = !DILocation(line: 1898, column: 17, scope: !11243)
!11250 = !DILocation(line: 1899, column: 20, scope: !11243)
!11251 = !DILocation(line: 1899, column: 10, scope: !11243)
!11252 = !DILocation(line: 1900, column: 10, scope: !11243)
!11253 = !DILocation(line: 1901, column: 20, scope: !11243)
!11254 = !DILocation(line: 1901, column: 10, scope: !11243)
!11255 = !DILocation(line: 1902, column: 10, scope: !11243)
!11256 = !DILocation(line: 1903, column: 1, scope: !11243)
!11257 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10952, file: !10952, line: 1915, type: !11015, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11258)
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11257, file: !10952, line: 1915, type: !1534)
!11260 = !DILocalVariable(name: "tmpreg", scope: !11257, file: !10952, line: 1917, type: !227)
!11261 = !DILocation(line: 0, scope: !11257)
!11262 = !DILocation(line: 1917, column: 3, scope: !11257)
!11263 = !DILocation(line: 1917, column: 17, scope: !11257)
!11264 = !DILocation(line: 1918, column: 20, scope: !11257)
!11265 = !DILocation(line: 1918, column: 10, scope: !11257)
!11266 = !DILocation(line: 1919, column: 10, scope: !11257)
!11267 = !DILocation(line: 1920, column: 20, scope: !11257)
!11268 = !DILocation(line: 1920, column: 10, scope: !11257)
!11269 = !DILocation(line: 1921, column: 10, scope: !11257)
!11270 = !DILocation(line: 1922, column: 1, scope: !11257)
!11271 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10952, file: !10952, line: 1814, type: !10953, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11272)
!11272 = !{!11273}
!11273 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11271, file: !10952, line: 1814, type: !1534)
!11274 = !DILocation(line: 0, scope: !11271)
!11275 = !DILocation(line: 1816, column: 11, scope: !11271)
!11276 = !DILocation(line: 1816, column: 46, scope: !11271)
!11277 = !DILocation(line: 1816, column: 3, scope: !11271)
!11278 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10952, file: !10952, line: 2426, type: !11279, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11281)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{null, !1534, !195}
!11281 = !{!11282, !11283}
!11282 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11278, file: !10952, line: 2426, type: !1534)
!11283 = !DILocalVariable(name: "Value", arg: 2, scope: !11278, file: !10952, line: 2426, type: !195)
!11284 = !DILocation(line: 0, scope: !11278)
!11285 = !DILocation(line: 2428, column: 16, scope: !11278)
!11286 = !DILocation(line: 2428, column: 11, scope: !11278)
!11287 = !DILocation(line: 2428, column: 14, scope: !11278)
!11288 = !DILocation(line: 2429, column: 1, scope: !11278)
!11289 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10952, file: !10952, line: 1792, type: !10953, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11290)
!11290 = !{!11291}
!11291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11289, file: !10952, line: 1792, type: !1534)
!11292 = !DILocation(line: 0, scope: !11289)
!11293 = !DILocation(line: 1794, column: 11, scope: !11289)
!11294 = !DILocation(line: 1794, column: 47, scope: !11289)
!11295 = !DILocation(line: 1794, column: 3, scope: !11289)
!11296 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10952, file: !10952, line: 2403, type: !11297, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11299)
!11297 = !DISubroutineType(types: !11298)
!11298 = !{!195, !1534}
!11299 = !{!11300}
!11300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11296, file: !10952, line: 2403, type: !1534)
!11301 = !DILocation(line: 0, scope: !11296)
!11302 = !DILocation(line: 2405, column: 20, scope: !11296)
!11303 = !DILocation(line: 2405, column: 10, scope: !11296)
!11304 = !DILocation(line: 2405, column: 3, scope: !11296)
!11305 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1588, file: !1588, line: 1583, type: !1514, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11306)
!11306 = !{!11307, !11308, !11309, !11310, !11311, !11312}
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11305, file: !1588, line: 1583, type: !1493)
!11308 = !DILocalVariable(name: "config", scope: !11305, file: !1588, line: 1585, type: !10643)
!11309 = !DILocalVariable(name: "data", scope: !11305, file: !1588, line: 1586, type: !10766)
!11310 = !DILocalVariable(name: "ll_parity", scope: !11305, file: !1588, line: 1587, type: !152)
!11311 = !DILocalVariable(name: "ll_datawidth", scope: !11305, file: !1588, line: 1588, type: !152)
!11312 = !DILocalVariable(name: "err", scope: !11305, file: !1588, line: 1589, type: !107)
!11313 = !DILocation(line: 0, scope: !11305)
!11314 = !DILocation(line: 1585, column: 48, scope: !11305)
!11315 = !DILocation(line: 1586, column: 38, scope: !11305)
!11316 = !DILocation(line: 1591, column: 2, scope: !11305)
!11317 = !DILocation(line: 1593, column: 29, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1593, column: 6)
!11319 = !DILocation(line: 1593, column: 7, scope: !11318)
!11320 = !DILocation(line: 1593, column: 6, scope: !11305)
!11321 = !DILocation(line: 1594, column: 3, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !1588, line: 1594, column: 3)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !1588, line: 1594, column: 3)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !1588, line: 1594, column: 3)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !1588, line: 1594, column: 3)
!11326 = distinct !DILexicalBlock(scope: !11318, file: !1588, line: 1593, column: 37)
!11327 = !DILocation(line: 1595, column: 3, scope: !11326)
!11328 = !DILocation(line: 1599, column: 31, scope: !11305)
!11329 = !DILocation(line: 1599, column: 71, scope: !11305)
!11330 = !DILocation(line: 1599, column: 8, scope: !11305)
!11331 = !DILocation(line: 1600, column: 10, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1600, column: 6)
!11333 = !DILocation(line: 1600, column: 6, scope: !11305)
!11334 = !DILocation(line: 1601, column: 3, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1588, line: 1601, column: 3)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1588, line: 1601, column: 3)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1588, line: 1601, column: 3)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !1588, line: 1601, column: 3)
!11339 = distinct !DILexicalBlock(scope: !11332, file: !1588, line: 1600, column: 16)
!11340 = !DILocation(line: 1602, column: 3, scope: !11339)
!11341 = !DILocation(line: 1616, column: 36, scope: !11305)
!11342 = !DILocation(line: 1616, column: 8, scope: !11305)
!11343 = !DILocation(line: 1617, column: 10, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1617, column: 6)
!11345 = !DILocation(line: 1617, column: 6, scope: !11305)
!11346 = !DILocation(line: 1621, column: 27, scope: !11305)
!11347 = !DILocation(line: 1621, column: 2, scope: !11305)
!11348 = !DILocation(line: 1624, column: 40, scope: !11305)
!11349 = !DILocation(line: 1624, column: 2, scope: !11305)
!11350 = !DILocation(line: 1630, column: 14, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1630, column: 6)
!11352 = !DILocation(line: 1630, column: 6, scope: !11305)
!11353 = !DILocation(line: 1640, column: 4, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !1588, line: 1640, column: 4)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !1588, line: 1640, column: 4)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !1588, line: 1640, column: 4)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !1588, line: 1640, column: 4)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !1588, line: 1639, column: 28)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !1588, line: 1639, column: 7)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !1588, line: 1638, column: 9)
!11361 = distinct !DILexicalBlock(scope: !11351, file: !1588, line: 1634, column: 13)
!11362 = !DILocation(line: 0, scope: !11351)
!11363 = !DILocation(line: 1649, column: 35, scope: !11305)
!11364 = !DILocation(line: 1649, column: 2, scope: !11305)
!11365 = !DILocation(line: 1654, column: 14, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1654, column: 6)
!11367 = !DILocation(line: 1654, column: 6, scope: !11305)
!11368 = !DILocation(line: 1655, column: 3, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11366, file: !1588, line: 1654, column: 31)
!11370 = !DILocation(line: 1656, column: 2, scope: !11369)
!11371 = !DILocation(line: 1659, column: 37, scope: !11305)
!11372 = !DILocation(line: 1659, column: 2, scope: !11305)
!11373 = !DILocation(line: 1662, column: 14, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11305, file: !1588, line: 1662, column: 6)
!11375 = !DILocation(line: 1662, column: 6, scope: !11305)
!11376 = !DILocation(line: 1663, column: 37, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11374, file: !1588, line: 1662, column: 27)
!11378 = !DILocation(line: 1663, column: 3, scope: !11377)
!11379 = !DILocation(line: 1664, column: 2, scope: !11377)
!11380 = !DILocation(line: 1684, column: 26, scope: !11305)
!11381 = !DILocation(line: 1684, column: 2, scope: !11305)
!11382 = !DILocation(line: 1722, column: 2, scope: !11305)
!11383 = !DILocation(line: 1724, column: 1, scope: !11305)
!11384 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1588, file: !1588, line: 651, type: !11385, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11387)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{null, !1493}
!11387 = !{!11388, !11389, !11390}
!11388 = !DILocalVariable(name: "dev", arg: 1, scope: !11384, file: !1588, line: 651, type: !1493)
!11389 = !DILocalVariable(name: "data", scope: !11384, file: !1588, line: 653, type: !10766)
!11390 = !DILocalVariable(name: "clk", scope: !11384, file: !1588, line: 654, type: !11391)
!11391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!11392 = !DILocation(line: 0, scope: !11384)
!11393 = !DILocation(line: 653, column: 38, scope: !11384)
!11394 = !DILocation(line: 656, column: 8, scope: !11384)
!11395 = !DILocation(line: 656, column: 14, scope: !11384)
!11396 = !DILocation(line: 657, column: 1, scope: !11384)
!11397 = distinct !DISubprogram(name: "device_is_ready", scope: !9762, file: !9762, line: 47, type: !11398, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11400)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{!145, !1493}
!11400 = !{!11401}
!11401 = !DILocalVariable(name: "dev", arg: 1, scope: !11397, file: !9762, line: 47, type: !1493)
!11402 = !DILocation(line: 0, scope: !11397)
!11403 = !DILocation(line: 55, column: 2, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11397, file: !9762, line: 55, column: 2)
!11405 = !{i64 2154459189}
!11406 = !DILocation(line: 56, column: 9, scope: !11397)
!11407 = !DILocation(line: 56, column: 2, scope: !11397)
!11408 = distinct !DISubprogram(name: "clock_control_on", scope: !948, file: !948, line: 123, type: !1552, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11409)
!11409 = !{!11410, !11411, !11412}
!11410 = !DILocalVariable(name: "dev", arg: 1, scope: !11408, file: !948, line: 123, type: !1493)
!11411 = !DILocalVariable(name: "sys", arg: 2, scope: !11408, file: !948, line: 124, type: !1043)
!11412 = !DILocalVariable(name: "api", scope: !11408, file: !948, line: 126, type: !1545)
!11413 = !DILocation(line: 0, scope: !11408)
!11414 = !DILocation(line: 127, column: 49, scope: !11408)
!11415 = !DILocation(line: 129, column: 14, scope: !11408)
!11416 = !DILocation(line: 129, column: 9, scope: !11408)
!11417 = !DILocation(line: 129, column: 2, scope: !11408)
!11418 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1644, file: !1644, line: 342, type: !11419, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11421)
!11419 = !DISubroutineType(types: !11420)
!11420 = !{!107, !1641, !195}
!11421 = !{!11422, !11423, !11424, !11425}
!11422 = !DILocalVariable(name: "config", arg: 1, scope: !11418, file: !1644, line: 342, type: !1641)
!11423 = !DILocalVariable(name: "id", arg: 2, scope: !11418, file: !1644, line: 343, type: !195)
!11424 = !DILocalVariable(name: "ret", scope: !11418, file: !1644, line: 345, type: !107)
!11425 = !DILocalVariable(name: "state", scope: !11418, file: !1644, line: 346, type: !1647)
!11426 = !DILocation(line: 0, scope: !11418)
!11427 = !DILocation(line: 346, column: 2, scope: !11418)
!11428 = !DILocation(line: 348, column: 8, scope: !11418)
!11429 = !DILocation(line: 349, column: 10, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11418, file: !1644, line: 349, column: 6)
!11431 = !DILocation(line: 349, column: 6, scope: !11418)
!11432 = !DILocation(line: 353, column: 44, scope: !11418)
!11433 = !DILocation(line: 353, column: 9, scope: !11418)
!11434 = !DILocation(line: 353, column: 2, scope: !11418)
!11435 = !DILocation(line: 354, column: 1, scope: !11418)
!11436 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10952, file: !10952, line: 497, type: !11130, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11437)
!11437 = !{!11438, !11439, !11440}
!11438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11436, file: !10952, line: 497, type: !1534)
!11439 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11436, file: !10952, line: 497, type: !152)
!11440 = !DILocalVariable(name: "val", scope: !11441, file: !10952, line: 499, type: !152)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !10952, line: 499, column: 3)
!11442 = !DILocation(line: 0, scope: !11436)
!11443 = !DILocation(line: 499, column: 3, scope: !11441)
!11444 = !DILocalVariable(name: "addr", arg: 1, scope: !11445, file: !6276, line: 476, type: !1584)
!11445 = distinct !DISubprogram(name: "__LDREXW", scope: !6276, file: !6276, line: 476, type: !11446, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11448)
!11446 = !DISubroutineType(types: !11447)
!11447 = !{!152, !1584}
!11448 = !{!11444, !11449}
!11449 = !DILocalVariable(name: "result", scope: !11445, file: !6276, line: 478, type: !152)
!11450 = !DILocation(line: 0, scope: !11445, inlinedAt: !11451)
!11451 = distinct !DILocation(line: 499, column: 3, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11441, file: !10952, line: 499, column: 3)
!11453 = !DILocation(line: 480, column: 4, scope: !11445, inlinedAt: !11451)
!11454 = !{i64 2949725}
!11455 = !DILocation(line: 499, column: 3, scope: !11452)
!11456 = !DILocation(line: 0, scope: !11441)
!11457 = !DILocalVariable(name: "value", arg: 1, scope: !11458, file: !6276, line: 527, type: !152)
!11458 = distinct !DISubprogram(name: "__STREXW", scope: !6276, file: !6276, line: 527, type: !11459, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11461)
!11459 = !DISubroutineType(types: !11460)
!11460 = !{!152, !152, !1584}
!11461 = !{!11457, !11462, !11463}
!11462 = !DILocalVariable(name: "addr", arg: 2, scope: !11458, file: !6276, line: 527, type: !1584)
!11463 = !DILocalVariable(name: "result", scope: !11458, file: !6276, line: 529, type: !152)
!11464 = !DILocation(line: 0, scope: !11458, inlinedAt: !11465)
!11465 = distinct !DILocation(line: 499, column: 3, scope: !11441)
!11466 = !DILocation(line: 531, column: 4, scope: !11458, inlinedAt: !11465)
!11467 = !{i64 2951161}
!11468 = distinct !{!11468, !11443, !11443}
!11469 = !DILocation(line: 500, column: 1, scope: !11436)
!11470 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10952, file: !10952, line: 850, type: !11139, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11471)
!11471 = !{!11472, !11473, !11474, !11475}
!11472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11470, file: !10952, line: 850, type: !1534)
!11473 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11470, file: !10952, line: 850, type: !152)
!11474 = !DILocalVariable(name: "Parity", arg: 3, scope: !11470, file: !10952, line: 850, type: !152)
!11475 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11470, file: !10952, line: 851, type: !152)
!11476 = !DILocation(line: 0, scope: !11470)
!11477 = !DILocation(line: 853, column: 3, scope: !11470)
!11478 = !DILocation(line: 854, column: 3, scope: !11470)
!11479 = !DILocation(line: 855, column: 1, scope: !11470)
!11480 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10952, file: !10952, line: 1337, type: !11015, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11481)
!11481 = !{!11482}
!11482 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11480, file: !10952, line: 1337, type: !1534)
!11483 = !DILocation(line: 0, scope: !11480)
!11484 = !DILocation(line: 1339, column: 3, scope: !11480)
!11485 = !DILocation(line: 1340, column: 1, scope: !11480)
!11486 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1644, file: !1644, line: 316, type: !11487, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11489)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!107, !1641, !1647}
!11489 = !{!11490, !11491, !11492}
!11490 = !DILocalVariable(name: "config", arg: 1, scope: !11486, file: !1644, line: 317, type: !1641)
!11491 = !DILocalVariable(name: "state", arg: 2, scope: !11486, file: !1644, line: 318, type: !1647)
!11492 = !DILocalVariable(name: "reg", scope: !11486, file: !1644, line: 320, type: !22)
!11493 = !DILocation(line: 0, scope: !11486)
!11494 = !DILocation(line: 329, column: 39, scope: !11486)
!11495 = !DILocation(line: 329, column: 52, scope: !11486)
!11496 = !DILocation(line: 329, column: 9, scope: !11486)
!11497 = !DILocation(line: 329, column: 2, scope: !11486)
!11498 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11398, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11499)
!11499 = !{!11500}
!11500 = !DILocalVariable(name: "dev", arg: 1, scope: !11498, file: !247, line: 730, type: !1493)
!11501 = !DILocation(line: 0, scope: !11498)
!11502 = !DILocation(line: 732, column: 9, scope: !11498)
!11503 = !DILocation(line: 732, column: 2, scope: !11498)
!11504 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1791, file: !1791, line: 270, type: !1797, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11505)
!11505 = !{!11506}
!11506 = !DILocalVariable(name: "dev", arg: 1, scope: !11504, file: !1791, line: 270, type: !1799)
!11507 = !DILocation(line: 0, scope: !11504)
!11508 = !DILocation(line: 274, column: 2, scope: !11504)
!11509 = !DILocation(line: 275, column: 12, scope: !11504)
!11510 = !DILocation(line: 276, column: 15, scope: !11504)
!11511 = !DILocation(line: 277, column: 16, scope: !11504)
!11512 = !DILocation(line: 278, column: 15, scope: !11504)
!11513 = !DILocation(line: 279, column: 16, scope: !11504)
!11514 = !DILocation(line: 282, column: 2, scope: !11504)
!11515 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6316, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11516)
!11516 = !{!11517, !11518}
!11517 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11515, file: !463, line: 1814, type: !900)
!11518 = !DILocalVariable(name: "priority", arg: 2, scope: !11515, file: !463, line: 1814, type: !152)
!11519 = !DILocation(line: 0, scope: !11515)
!11520 = !DILocation(line: 1822, column: 46, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !463, line: 1821, column: 3)
!11522 = distinct !DILexicalBlock(scope: !11515, file: !463, line: 1816, column: 7)
!11523 = !DILocation(line: 1824, column: 1, scope: !11515)
!11524 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1791, file: !1791, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11525)
!11525 = !{!11526, !11527}
!11526 = !DILocalVariable(name: "arg", arg: 1, scope: !11524, file: !1791, line: 118, type: !106)
!11527 = !DILocalVariable(name: "dticks", scope: !11524, file: !1791, line: 121, type: !152)
!11528 = !DILocation(line: 0, scope: !11524)
!11529 = !DILocation(line: 124, column: 2, scope: !11524)
!11530 = !DILocation(line: 129, column: 17, scope: !11524)
!11531 = !DILocation(line: 129, column: 14, scope: !11524)
!11532 = !DILocation(line: 130, column: 15, scope: !11524)
!11533 = !DILocation(line: 145, column: 27, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !1791, line: 132, column: 16)
!11535 = distinct !DILexicalBlock(scope: !11524, file: !1791, line: 132, column: 6)
!11536 = !DILocation(line: 145, column: 25, scope: !11534)
!11537 = !DILocation(line: 145, column: 45, scope: !11534)
!11538 = !DILocation(line: 146, column: 30, scope: !11534)
!11539 = !DILocation(line: 146, column: 20, scope: !11534)
!11540 = !DILocation(line: 147, column: 3, scope: !11534)
!11541 = !DILocation(line: 151, column: 2, scope: !11524)
!11542 = !DILocation(line: 152, column: 1, scope: !11524)
!11543 = distinct !DISubprogram(name: "elapsed", scope: !1791, file: !1791, line: 85, type: !6363, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11544)
!11544 = !{!11545, !11546, !11547}
!11545 = !DILocalVariable(name: "val1", scope: !11543, file: !1791, line: 87, type: !152)
!11546 = !DILocalVariable(name: "ctrl", scope: !11543, file: !1791, line: 88, type: !152)
!11547 = !DILocalVariable(name: "val2", scope: !11543, file: !1791, line: 89, type: !152)
!11548 = !DILocation(line: 87, column: 27, scope: !11543)
!11549 = !DILocation(line: 0, scope: !11543)
!11550 = !DILocation(line: 88, column: 27, scope: !11543)
!11551 = !DILocation(line: 89, column: 27, scope: !11543)
!11552 = !DILocation(line: 105, column: 12, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11543, file: !1791, line: 105, column: 6)
!11554 = !DILocation(line: 106, column: 6, scope: !11553)
!11555 = !DILocation(line: 107, column: 16, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !1791, line: 106, column: 24)
!11557 = !DILocation(line: 111, column: 18, scope: !11556)
!11558 = !DILocation(line: 112, column: 2, scope: !11556)
!11559 = !DILocation(line: 114, column: 20, scope: !11543)
!11560 = !DILocation(line: 114, column: 30, scope: !11543)
!11561 = !DILocation(line: 114, column: 28, scope: !11543)
!11562 = !DILocation(line: 114, column: 2, scope: !11543)
!11563 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1791, file: !1791, line: 154, type: !11564, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11566)
!11564 = !DISubroutineType(types: !11565)
!11565 = !{null, !874, !145}
!11566 = !{!11567, !11568, !11569, !11570, !11571, !11572, !11573, !11578, !11579}
!11567 = !DILocalVariable(name: "ticks", arg: 1, scope: !11563, file: !1791, line: 154, type: !874)
!11568 = !DILocalVariable(name: "idle", arg: 2, scope: !11563, file: !1791, line: 154, type: !145)
!11569 = !DILocalVariable(name: "delay", scope: !11563, file: !1791, line: 169, type: !152)
!11570 = !DILocalVariable(name: "val1", scope: !11563, file: !1791, line: 170, type: !152)
!11571 = !DILocalVariable(name: "val2", scope: !11563, file: !1791, line: 170, type: !152)
!11572 = !DILocalVariable(name: "last_load_", scope: !11563, file: !1791, line: 171, type: !152)
!11573 = !DILocalVariable(name: "key", scope: !11563, file: !1791, line: 176, type: !11574)
!11574 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11575)
!11575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11576)
!11576 = !{!11577}
!11577 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11575, file: !420, line: 33, baseType: !107, size: 32)
!11578 = !DILocalVariable(name: "pending", scope: !11563, file: !1791, line: 178, type: !152)
!11579 = !DILocalVariable(name: "unannounced", scope: !11563, file: !1791, line: 185, type: !152)
!11580 = !DILocation(line: 0, scope: !11563)
!11581 = !DILocation(line: 162, column: 49, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11563, file: !1791, line: 162, column: 6)
!11583 = !DILocation(line: 163, column: 17, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11582, file: !1791, line: 162, column: 78)
!11585 = !DILocation(line: 164, column: 13, scope: !11584)
!11586 = !DILocation(line: 165, column: 3, scope: !11584)
!11587 = !DILocation(line: 171, column: 24, scope: !11563)
!11588 = !DILocation(line: 173, column: 10, scope: !11563)
!11589 = !DILocation(line: 174, column: 10, scope: !11563)
!11590 = !DILocalVariable(name: "l", arg: 1, scope: !11591, file: !420, line: 136, type: !11594)
!11591 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11592, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11595)
!11592 = !DISubroutineType(types: !11593)
!11593 = !{!11574, !11594}
!11594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!11595 = !{!11590, !11596}
!11596 = !DILocalVariable(name: "k", scope: !11591, file: !420, line: 139, type: !11574)
!11597 = !DILocation(line: 0, scope: !11591, inlinedAt: !11598)
!11598 = distinct !DILocation(line: 176, column: 25, scope: !11563)
!11599 = !DILocation(line: 55, column: 2, scope: !11600, inlinedAt: !11604)
!11600 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11601)
!11601 = !{!11602, !11603}
!11602 = !DILocalVariable(name: "key", scope: !11600, file: !5957, line: 44, type: !32)
!11603 = !DILocalVariable(name: "tmp", scope: !11600, file: !5957, line: 53, type: !32)
!11604 = distinct !DILocation(line: 145, column: 10, scope: !11591, inlinedAt: !11598)
!11605 = !{i64 2032368}
!11606 = !DILocation(line: 0, scope: !11600, inlinedAt: !11604)
!11607 = !DILocation(line: 148, column: 2, scope: !11608, inlinedAt: !11598)
!11608 = distinct !DILexicalBlock(scope: !11609, file: !420, line: 148, column: 2)
!11609 = distinct !DILexicalBlock(scope: !11591, file: !420, line: 148, column: 2)
!11610 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11598)
!11611 = !DILocation(line: 148, column: 2, scope: !11612, inlinedAt: !11598)
!11612 = distinct !DILexicalBlock(scope: !11608, file: !420, line: 148, column: 2)
!11613 = !DILocation(line: 160, column: 2, scope: !11591, inlinedAt: !11598)
!11614 = !DILocation(line: 178, column: 21, scope: !11563)
!11615 = !DILocation(line: 180, column: 18, scope: !11563)
!11616 = !DILocation(line: 182, column: 14, scope: !11563)
!11617 = !DILocation(line: 183, column: 15, scope: !11563)
!11618 = !DILocation(line: 185, column: 39, scope: !11563)
!11619 = !DILocation(line: 185, column: 37, scope: !11563)
!11620 = !DILocation(line: 187, column: 27, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11563, file: !1791, line: 187, column: 6)
!11622 = !DILocation(line: 187, column: 6, scope: !11563)
!11623 = !DILocation(line: 202, column: 27, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11621, file: !1791, line: 195, column: 9)
!11625 = !DILocation(line: 202, column: 48, scope: !11624)
!11626 = !DILocation(line: 203, column: 9, scope: !11624)
!11627 = !DILocation(line: 204, column: 11, scope: !11624)
!11628 = !DILocation(line: 205, column: 13, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !1791, line: 205, column: 7)
!11630 = !DILocation(line: 205, column: 7, scope: !11624)
!11631 = !DILocation(line: 0, scope: !11621)
!11632 = !DILocation(line: 212, column: 18, scope: !11563)
!11633 = !DILocation(line: 214, column: 28, scope: !11563)
!11634 = !DILocation(line: 214, column: 16, scope: !11563)
!11635 = !DILocation(line: 215, column: 15, scope: !11563)
!11636 = !DILocation(line: 227, column: 11, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11563, file: !1791, line: 227, column: 6)
!11638 = !DILocation(line: 227, column: 6, scope: !11563)
!11639 = !DILocation(line: 228, column: 15, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11637, file: !1791, line: 227, column: 19)
!11641 = !DILocation(line: 228, column: 38, scope: !11640)
!11642 = !DILocation(line: 228, column: 24, scope: !11640)
!11643 = !DILocation(line: 229, column: 2, scope: !11640)
!11644 = !DILocation(line: 230, column: 24, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11637, file: !1791, line: 229, column: 9)
!11646 = !DILocation(line: 230, column: 15, scope: !11645)
!11647 = !DILocation(line: 0, scope: !11637)
!11648 = !DILocalVariable(name: "key", arg: 2, scope: !11649, file: !420, line: 190, type: !11574)
!11649 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11650, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11652)
!11650 = !DISubroutineType(types: !11651)
!11651 = !{null, !11594, !11574}
!11652 = !{!11653, !11648}
!11653 = !DILocalVariable(name: "l", arg: 1, scope: !11649, file: !420, line: 189, type: !11594)
!11654 = !DILocation(line: 0, scope: !11649, inlinedAt: !11655)
!11655 = distinct !DILocation(line: 232, column: 2, scope: !11563)
!11656 = !DILocation(line: 194, column: 2, scope: !11657, inlinedAt: !11655)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !420, line: 194, column: 2)
!11658 = distinct !DILexicalBlock(scope: !11649, file: !420, line: 194, column: 2)
!11659 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11655)
!11660 = !DILocation(line: 194, column: 2, scope: !11661, inlinedAt: !11655)
!11661 = distinct !DILexicalBlock(scope: !11657, file: !420, line: 194, column: 2)
!11662 = !DILocalVariable(name: "key", arg: 1, scope: !11663, file: !5957, line: 84, type: !32)
!11663 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11664)
!11664 = !{!11662}
!11665 = !DILocation(line: 0, scope: !11663, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 215, column: 2, scope: !11649, inlinedAt: !11655)
!11667 = !DILocation(line: 95, column: 2, scope: !11663, inlinedAt: !11666)
!11668 = !{i64 2033185}
!11669 = !DILocation(line: 234, column: 1, scope: !11563)
!11670 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1791, file: !1791, line: 236, type: !6363, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11671)
!11671 = !{!11672, !11673}
!11672 = !DILocalVariable(name: "key", scope: !11670, file: !1791, line: 242, type: !11574)
!11673 = !DILocalVariable(name: "cyc", scope: !11670, file: !1791, line: 243, type: !152)
!11674 = !DILocation(line: 0, scope: !11591, inlinedAt: !11675)
!11675 = distinct !DILocation(line: 242, column: 25, scope: !11670)
!11676 = !DILocation(line: 55, column: 2, scope: !11600, inlinedAt: !11677)
!11677 = distinct !DILocation(line: 145, column: 10, scope: !11591, inlinedAt: !11675)
!11678 = !DILocation(line: 0, scope: !11600, inlinedAt: !11677)
!11679 = !DILocation(line: 148, column: 2, scope: !11608, inlinedAt: !11675)
!11680 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11675)
!11681 = !DILocation(line: 148, column: 2, scope: !11612, inlinedAt: !11675)
!11682 = !DILocation(line: 160, column: 2, scope: !11591, inlinedAt: !11675)
!11683 = !DILocation(line: 0, scope: !11670)
!11684 = !DILocation(line: 243, column: 17, scope: !11670)
!11685 = !DILocation(line: 243, column: 29, scope: !11670)
!11686 = !DILocation(line: 243, column: 43, scope: !11670)
!11687 = !DILocation(line: 0, scope: !11649, inlinedAt: !11688)
!11688 = distinct !DILocation(line: 245, column: 2, scope: !11670)
!11689 = !DILocation(line: 194, column: 2, scope: !11657, inlinedAt: !11688)
!11690 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11688)
!11691 = !DILocation(line: 194, column: 2, scope: !11661, inlinedAt: !11688)
!11692 = !DILocation(line: 243, column: 27, scope: !11670)
!11693 = !DILocation(line: 243, column: 41, scope: !11670)
!11694 = !DILocation(line: 0, scope: !11663, inlinedAt: !11695)
!11695 = distinct !DILocation(line: 215, column: 2, scope: !11649, inlinedAt: !11688)
!11696 = !DILocation(line: 95, column: 2, scope: !11663, inlinedAt: !11695)
!11697 = !DILocation(line: 246, column: 13, scope: !11670)
!11698 = !DILocation(line: 246, column: 2, scope: !11670)
!11699 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1791, file: !1791, line: 249, type: !6363, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11700)
!11700 = !{!11701, !11702}
!11701 = !DILocalVariable(name: "key", scope: !11699, file: !1791, line: 251, type: !11574)
!11702 = !DILocalVariable(name: "ret", scope: !11699, file: !1791, line: 252, type: !152)
!11703 = !DILocation(line: 0, scope: !11591, inlinedAt: !11704)
!11704 = distinct !DILocation(line: 251, column: 25, scope: !11699)
!11705 = !DILocation(line: 55, column: 2, scope: !11600, inlinedAt: !11706)
!11706 = distinct !DILocation(line: 145, column: 10, scope: !11591, inlinedAt: !11704)
!11707 = !DILocation(line: 0, scope: !11600, inlinedAt: !11706)
!11708 = !DILocation(line: 148, column: 2, scope: !11608, inlinedAt: !11704)
!11709 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11704)
!11710 = !DILocation(line: 148, column: 2, scope: !11612, inlinedAt: !11704)
!11711 = !DILocation(line: 160, column: 2, scope: !11591, inlinedAt: !11704)
!11712 = !DILocation(line: 0, scope: !11699)
!11713 = !DILocation(line: 252, column: 17, scope: !11699)
!11714 = !DILocation(line: 252, column: 29, scope: !11699)
!11715 = !DILocation(line: 0, scope: !11649, inlinedAt: !11716)
!11716 = distinct !DILocation(line: 254, column: 2, scope: !11699)
!11717 = !DILocation(line: 194, column: 2, scope: !11657, inlinedAt: !11716)
!11718 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11716)
!11719 = !DILocation(line: 194, column: 2, scope: !11661, inlinedAt: !11716)
!11720 = !DILocation(line: 252, column: 27, scope: !11699)
!11721 = !DILocation(line: 0, scope: !11663, inlinedAt: !11722)
!11722 = distinct !DILocation(line: 215, column: 2, scope: !11649, inlinedAt: !11716)
!11723 = !DILocation(line: 95, column: 2, scope: !11663, inlinedAt: !11722)
!11724 = !DILocation(line: 255, column: 2, scope: !11699)
!11725 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1791, file: !1791, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !2182)
!11726 = !DILocation(line: 260, column: 6, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11725, file: !1791, line: 260, column: 6)
!11728 = !DILocation(line: 260, column: 16, scope: !11727)
!11729 = !DILocation(line: 260, column: 6, scope: !11725)
!11730 = !DILocation(line: 261, column: 17, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11727, file: !1791, line: 260, column: 34)
!11732 = !DILocation(line: 262, column: 2, scope: !11731)
!11733 = !DILocation(line: 263, column: 1, scope: !11725)
!11734 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1791, file: !1791, line: 265, type: !3111, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !2182)
!11735 = !DILocation(line: 267, column: 16, scope: !11734)
!11736 = !DILocation(line: 268, column: 1, scope: !11734)
!11737 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11738, file: !11738, line: 9, type: !11739, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !11762)
!11738 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11739 = !DISubroutineType(types: !11740)
!11740 = !{!107, !11741, !195, !11761}
!11741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11742, size: 32)
!11742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11743)
!11743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1644, line: 60, size: 64, elements: !11744)
!11744 = !{!11745, !11760}
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11743, file: !1644, line: 69, baseType: !11746, size: 32)
!11746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11747, size: 32)
!11747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11748)
!11748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1644, line: 50, size: 64, elements: !11749)
!11749 = !{!11750, !11758, !11759}
!11750 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11748, file: !1644, line: 52, baseType: !11751, size: 32)
!11751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11752, size: 32)
!11752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11753)
!11753 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !11754)
!11754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !11755)
!11755 = !{!11756, !11757}
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11754, file: !1655, line: 34, baseType: !152, size: 32)
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11754, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!11758 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11748, file: !1644, line: 54, baseType: !195, size: 8, offset: 32)
!11759 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11748, file: !1644, line: 56, baseType: !195, size: 8, offset: 40)
!11760 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11743, file: !1644, line: 71, baseType: !195, size: 8, offset: 32)
!11761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11746, size: 32)
!11762 = !{!11763, !11764, !11765}
!11763 = !DILocalVariable(name: "config", arg: 1, scope: !11737, file: !11738, line: 9, type: !11741)
!11764 = !DILocalVariable(name: "id", arg: 2, scope: !11737, file: !11738, line: 9, type: !195)
!11765 = !DILocalVariable(name: "state", arg: 3, scope: !11737, file: !11738, line: 10, type: !11761)
!11766 = !DILocation(line: 0, scope: !11737)
!11767 = !DILocation(line: 12, column: 20, scope: !11737)
!11768 = !DILocation(line: 13, column: 27, scope: !11737)
!11769 = !DILocation(line: 13, column: 42, scope: !11737)
!11770 = !DILocation(line: 13, column: 19, scope: !11737)
!11771 = !DILocation(line: 13, column: 16, scope: !11737)
!11772 = !DILocation(line: 13, column: 2, scope: !11737)
!11773 = distinct !{!11773, !11772, !11774}
!11774 = !DILocation(line: 19, column: 2, scope: !11737)
!11775 = !DILocation(line: 14, column: 23, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !11738, line: 14, column: 7)
!11777 = distinct !DILexicalBlock(scope: !11737, file: !11738, line: 13, column: 54)
!11778 = !DILocation(line: 14, column: 10, scope: !11776)
!11779 = !DILocation(line: 18, column: 11, scope: !11777)
!11780 = !DILocation(line: 14, column: 7, scope: !11777)
!11781 = !DILocation(line: 22, column: 1, scope: !11737)
!11782 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1910, file: !1910, line: 193, type: !11783, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11792)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!107, !11785, !195, !22}
!11785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11786, size: 32)
!11786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11787)
!11787 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !11788)
!11788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !11789)
!11789 = !{!11790, !11791}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11788, file: !1655, line: 34, baseType: !152, size: 32)
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11788, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!11792 = !{!11793, !11794, !11795, !11796, !11797, !11798, !11799, !11800, !11802}
!11793 = !DILocalVariable(name: "pins", arg: 1, scope: !11782, file: !1910, line: 193, type: !11785)
!11794 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11782, file: !1910, line: 193, type: !195)
!11795 = !DILocalVariable(name: "reg", arg: 3, scope: !11782, file: !1910, line: 194, type: !22)
!11796 = !DILocalVariable(name: "pin", scope: !11782, file: !1910, line: 196, type: !152)
!11797 = !DILocalVariable(name: "mux", scope: !11782, file: !1910, line: 196, type: !152)
!11798 = !DILocalVariable(name: "pin_cgf", scope: !11782, file: !1910, line: 197, type: !152)
!11799 = !DILocalVariable(name: "ret", scope: !11782, file: !1910, line: 198, type: !107)
!11800 = !DILocalVariable(name: "i", scope: !11801, file: !1910, line: 209, type: !195)
!11801 = distinct !DILexicalBlock(scope: !11782, file: !1910, line: 209, column: 2)
!11802 = !DILocalVariable(name: "gpio_out", scope: !11803, file: !1910, line: 239, type: !152)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !1910, line: 238, column: 55)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !1910, line: 238, column: 14)
!11805 = distinct !DILexicalBlock(scope: !11806, file: !1910, line: 236, column: 14)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !1910, line: 234, column: 7)
!11807 = distinct !DILexicalBlock(scope: !11808, file: !1910, line: 209, column: 41)
!11808 = distinct !DILexicalBlock(scope: !11801, file: !1910, line: 209, column: 2)
!11809 = !DILocation(line: 0, scope: !11782)
!11810 = !DILocation(line: 0, scope: !11801)
!11811 = !DILocation(line: 209, column: 25, scope: !11808)
!11812 = !DILocation(line: 209, column: 2, scope: !11801)
!11813 = distinct !{!11813, !11812, !11814}
!11814 = !DILocation(line: 259, column: 2, scope: !11801)
!11815 = !DILocation(line: 210, column: 17, scope: !11807)
!11816 = !DILocation(line: 234, column: 7, scope: !11806)
!11817 = !DILocation(line: 234, column: 33, scope: !11806)
!11818 = !DILocation(line: 234, column: 7, scope: !11807)
!11819 = !DILocation(line: 235, column: 22, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11806, file: !1910, line: 234, column: 49)
!11821 = !DILocation(line: 235, column: 29, scope: !11820)
!11822 = !DILocation(line: 236, column: 3, scope: !11820)
!11823 = !DILocation(line: 236, column: 14, scope: !11806)
!11824 = !DILocation(line: 239, column: 32, scope: !11803)
!11825 = !DILocation(line: 0, scope: !11803)
!11826 = !DILocation(line: 241, column: 8, scope: !11803)
!11827 = !DILocation(line: 246, column: 3, scope: !11803)
!11828 = !DILocation(line: 252, column: 9, scope: !11807)
!11829 = !DILocation(line: 255, column: 9, scope: !11807)
!11830 = !DILocation(line: 256, column: 11, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11807, file: !1910, line: 256, column: 7)
!11832 = !DILocation(line: 209, column: 37, scope: !11808)
!11833 = !DILocation(line: 256, column: 7, scope: !11807)
!11834 = !DILocation(line: 262, column: 1, scope: !11782)
!11835 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1910, file: !1910, line: 176, type: !11836, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11838)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!107, !152, !152, !152}
!11838 = !{!11839, !11840, !11841, !11842}
!11839 = !DILocalVariable(name: "pin", arg: 1, scope: !11835, file: !1910, line: 176, type: !152)
!11840 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11835, file: !1910, line: 176, type: !152)
!11841 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11835, file: !1910, line: 176, type: !152)
!11842 = !DILocalVariable(name: "port_device", scope: !11835, file: !1910, line: 178, type: !1840)
!11843 = !DILocation(line: 0, scope: !11835)
!11844 = !DILocation(line: 180, column: 22, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11835, file: !1910, line: 180, column: 6)
!11846 = !DILocation(line: 180, column: 6, scope: !11835)
!11847 = !DILocation(line: 180, column: 6, scope: !11845)
!11848 = !DILocation(line: 184, column: 16, scope: !11835)
!11849 = !DILocation(line: 186, column: 19, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11835, file: !1910, line: 186, column: 6)
!11851 = !DILocation(line: 186, column: 28, scope: !11850)
!11852 = !DILocation(line: 186, column: 33, scope: !11850)
!11853 = !DILocation(line: 186, column: 6, scope: !11835)
!11854 = !DILocation(line: 190, column: 43, scope: !11835)
!11855 = !DILocation(line: 190, column: 9, scope: !11835)
!11856 = !DILocation(line: 190, column: 2, scope: !11835)
!11857 = !DILocation(line: 191, column: 1, scope: !11835)
!11858 = distinct !DISubprogram(name: "device_is_ready", scope: !9762, file: !9762, line: 47, type: !11859, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!145, !1840}
!11861 = !{!11862}
!11862 = !DILocalVariable(name: "dev", arg: 1, scope: !11858, file: !9762, line: 47, type: !1840)
!11863 = !DILocation(line: 0, scope: !11858)
!11864 = !DILocation(line: 55, column: 2, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11858, file: !9762, line: 55, column: 2)
!11866 = !{i64 2149266377}
!11867 = !DILocation(line: 56, column: 9, scope: !11858)
!11868 = !DILocation(line: 56, column: 2, scope: !11858)
!11869 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11859, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11870)
!11870 = !{!11871}
!11871 = !DILocalVariable(name: "dev", arg: 1, scope: !11869, file: !247, line: 730, type: !1840)
!11872 = !DILocation(line: 0, scope: !11869)
!11873 = !DILocation(line: 732, column: 9, scope: !11869)
!11874 = !DILocation(line: 732, column: 2, scope: !11869)
!11875 = distinct !DISubprogram(name: "SystemInit", scope: !1960, file: !1960, line: 167, type: !3111, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2182)
!11876 = !DILocation(line: 182, column: 1, scope: !11875)
!11877 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1960, file: !1960, line: 220, type: !3111, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !11878)
!11878 = !{!11879, !11880, !11881, !11882, !11883}
!11879 = !DILocalVariable(name: "tmp", scope: !11877, file: !1960, line: 222, type: !152)
!11880 = !DILocalVariable(name: "pllvco", scope: !11877, file: !1960, line: 222, type: !152)
!11881 = !DILocalVariable(name: "pllp", scope: !11877, file: !1960, line: 222, type: !152)
!11882 = !DILocalVariable(name: "pllsource", scope: !11877, file: !1960, line: 222, type: !152)
!11883 = !DILocalVariable(name: "pllm", scope: !11877, file: !1960, line: 222, type: !152)
!11884 = !DILocation(line: 0, scope: !11877)
!11885 = !DILocation(line: 225, column: 14, scope: !11877)
!11886 = !DILocation(line: 225, column: 19, scope: !11877)
!11887 = !DILocation(line: 227, column: 3, scope: !11877)
!11888 = !DILocation(line: 240, column: 25, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11877, file: !1960, line: 228, column: 3)
!11890 = !DILocation(line: 241, column: 19, scope: !11889)
!11891 = !DILocation(line: 241, column: 27, scope: !11889)
!11892 = !DILocation(line: 0, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11889, file: !1960, line: 243, column: 11)
!11894 = !DILocation(line: 254, column: 22, scope: !11889)
!11895 = !DILocation(line: 254, column: 62, scope: !11889)
!11896 = !DILocation(line: 255, column: 31, scope: !11889)
!11897 = !DILocation(line: 256, column: 7, scope: !11889)
!11898 = !DILocation(line: 0, scope: !11889)
!11899 = !DILocation(line: 263, column: 30, scope: !11877)
!11900 = !DILocation(line: 263, column: 52, scope: !11877)
!11901 = !DILocation(line: 263, column: 9, scope: !11877)
!11902 = !DILocation(line: 265, column: 19, scope: !11877)
!11903 = !DILocation(line: 266, column: 1, scope: !11877)
!11904 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11905, file: !11905, line: 200, type: !11906, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!11905 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11906 = !DISubroutineType(types: !11907)
!11907 = !{!11908}
!11908 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2924, line: 44, baseType: !2923)
!11909 = !DILocation(line: 202, column: 3, scope: !11904)
!11910 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11905, file: !11905, line: 219, type: !11911, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !11935)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!11908, !11913}
!11913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11914, size: 32)
!11914 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11915, line: 70, baseType: !11916)
!11915 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11915, line: 49, size: 384, elements: !11917)
!11917 = !{!11918, !11919, !11920, !11921, !11922, !11923, !11924}
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11916, file: !11915, line: 51, baseType: !152, size: 32)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11916, file: !11915, line: 54, baseType: !152, size: 32, offset: 32)
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11916, file: !11915, line: 57, baseType: !152, size: 32, offset: 64)
!11921 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11916, file: !11915, line: 60, baseType: !152, size: 32, offset: 96)
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11916, file: !11915, line: 63, baseType: !152, size: 32, offset: 128)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11916, file: !11915, line: 66, baseType: !152, size: 32, offset: 160)
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11916, file: !11915, line: 69, baseType: !11925, size: 192, offset: 192)
!11925 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11926, line: 73, baseType: !11927)
!11926 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11926, line: 45, size: 192, elements: !11928)
!11928 = !{!11929, !11930, !11931, !11932, !11933, !11934}
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11927, file: !11926, line: 47, baseType: !152, size: 32)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11927, file: !11926, line: 50, baseType: !152, size: 32, offset: 32)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11927, file: !11926, line: 53, baseType: !152, size: 32, offset: 64)
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11927, file: !11926, line: 56, baseType: !152, size: 32, offset: 96)
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11927, file: !11926, line: 60, baseType: !152, size: 32, offset: 128)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11927, file: !11926, line: 63, baseType: !152, size: 32, offset: 160)
!11935 = !{!11936, !11937, !11938, !11939, !11943}
!11936 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11910, file: !11905, line: 219, type: !11913)
!11937 = !DILocalVariable(name: "tickstart", scope: !11910, file: !11905, line: 221, type: !152)
!11938 = !DILocalVariable(name: "pll_config", scope: !11910, file: !11905, line: 221, type: !152)
!11939 = !DILocalVariable(name: "pwrclkchanged", scope: !11940, file: !11905, line: 391, type: !11942)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !11905, line: 390, column: 3)
!11941 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 389, column: 6)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !943, line: 188, baseType: !2930)
!11943 = !DILocalVariable(name: "tmpreg", scope: !11944, file: !11905, line: 400, type: !227)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !11905, line: 400, column: 7)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !11905, line: 399, column: 5)
!11946 = distinct !DILexicalBlock(scope: !11940, file: !11905, line: 398, column: 8)
!11947 = !DILocation(line: 0, scope: !11910)
!11948 = !DILocation(line: 224, column: 24, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 224, column: 6)
!11950 = !DILocation(line: 224, column: 6, scope: !11910)
!11951 = !DILocation(line: 232, column: 27, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 232, column: 6)
!11953 = !DILocation(line: 232, column: 43, scope: !11952)
!11954 = !DILocation(line: 232, column: 69, scope: !11952)
!11955 = !DILocation(line: 232, column: 6, scope: !11910)
!11956 = !DILocation(line: 237, column: 9, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !11905, line: 237, column: 8)
!11958 = distinct !DILexicalBlock(scope: !11952, file: !11905, line: 233, column: 3)
!11959 = !DILocation(line: 237, column: 39, scope: !11957)
!11960 = !DILocation(line: 237, column: 60, scope: !11957)
!11961 = !DILocation(line: 238, column: 9, scope: !11957)
!11962 = !DILocation(line: 238, column: 39, scope: !11957)
!11963 = !DILocation(line: 238, column: 60, scope: !11957)
!11964 = !DILocation(line: 238, column: 70, scope: !11957)
!11965 = !DILocation(line: 238, column: 78, scope: !11957)
!11966 = !DILocation(line: 238, column: 100, scope: !11957)
!11967 = !DILocation(line: 237, column: 8, scope: !11958)
!11968 = !DILocation(line: 240, column: 11, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !11905, line: 240, column: 10)
!11970 = distinct !DILexicalBlock(scope: !11957, file: !11905, line: 239, column: 5)
!11971 = !DILocation(line: 240, column: 57, scope: !11969)
!11972 = !DILocation(line: 240, column: 80, scope: !11969)
!11973 = !DILocation(line: 240, column: 89, scope: !11969)
!11974 = !DILocation(line: 240, column: 10, scope: !11970)
!11975 = !DILocation(line: 248, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !11905, line: 248, column: 7)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !11905, line: 248, column: 7)
!11978 = distinct !DILexicalBlock(scope: !11957, file: !11905, line: 246, column: 5)
!11979 = !DILocation(line: 248, column: 7, scope: !11977)
!11980 = !DILocation(line: 248, column: 7, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11976, file: !11905, line: 248, column: 7)
!11982 = !DILocation(line: 248, column: 7, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !11905, line: 248, column: 7)
!11984 = distinct !DILexicalBlock(scope: !11976, file: !11905, line: 248, column: 7)
!11985 = !DILocation(line: 248, column: 7, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11984, file: !11905, line: 248, column: 7)
!11987 = !DILocation(line: 0, scope: !11976)
!11988 = !DILocation(line: 251, column: 30, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11978, file: !11905, line: 251, column: 10)
!11990 = !DILocation(line: 251, column: 40, scope: !11989)
!11991 = !DILocation(line: 0, scope: !11989)
!11992 = !DILocation(line: 251, column: 10, scope: !11978)
!11993 = !DILocation(line: 257, column: 15, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !11905, line: 252, column: 7)
!11995 = !DILocation(line: 257, column: 51, scope: !11994)
!11996 = !DILocation(line: 257, column: 9, scope: !11994)
!11997 = !DILocation(line: 259, column: 15, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !11905, line: 259, column: 14)
!11999 = distinct !DILexicalBlock(scope: !11994, file: !11905, line: 258, column: 9)
!12000 = !DILocation(line: 259, column: 29, scope: !11998)
!12001 = !DILocation(line: 259, column: 43, scope: !11998)
!12002 = !DILocation(line: 259, column: 14, scope: !11999)
!12003 = distinct !{!12003, !11996, !12004}
!12004 = !DILocation(line: 263, column: 9, scope: !11994)
!12005 = !DILocation(line: 271, column: 15, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11989, file: !11905, line: 266, column: 7)
!12007 = !DILocation(line: 271, column: 9, scope: !12006)
!12008 = !DILocation(line: 273, column: 15, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12010, file: !11905, line: 273, column: 14)
!12010 = distinct !DILexicalBlock(scope: !12006, file: !11905, line: 272, column: 9)
!12011 = !DILocation(line: 273, column: 29, scope: !12009)
!12012 = !DILocation(line: 273, column: 43, scope: !12009)
!12013 = !DILocation(line: 273, column: 14, scope: !12010)
!12014 = distinct !{!12014, !12007, !12015}
!12015 = !DILocation(line: 277, column: 9, scope: !12006)
!12016 = !DILocation(line: 282, column: 27, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 282, column: 6)
!12018 = !DILocation(line: 282, column: 43, scope: !12017)
!12019 = !DILocation(line: 282, column: 69, scope: !12017)
!12020 = !DILocation(line: 282, column: 6, scope: !11910)
!12021 = !DILocation(line: 289, column: 9, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !11905, line: 289, column: 8)
!12023 = distinct !DILexicalBlock(scope: !12017, file: !11905, line: 283, column: 3)
!12024 = !DILocation(line: 289, column: 39, scope: !12022)
!12025 = !DILocation(line: 289, column: 60, scope: !12022)
!12026 = !DILocation(line: 290, column: 9, scope: !12022)
!12027 = !DILocation(line: 290, column: 39, scope: !12022)
!12028 = !DILocation(line: 290, column: 60, scope: !12022)
!12029 = !DILocation(line: 290, column: 70, scope: !12022)
!12030 = !DILocation(line: 290, column: 78, scope: !12022)
!12031 = !DILocation(line: 290, column: 100, scope: !12022)
!12032 = !DILocation(line: 289, column: 8, scope: !12023)
!12033 = !DILocation(line: 293, column: 11, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !11905, line: 293, column: 10)
!12035 = distinct !DILexicalBlock(scope: !12022, file: !11905, line: 291, column: 5)
!12036 = !DILocation(line: 293, column: 57, scope: !12034)
!12037 = !DILocation(line: 293, column: 80, scope: !12034)
!12038 = !DILocation(line: 293, column: 89, scope: !12034)
!12039 = !DILocation(line: 293, column: 10, scope: !12035)
!12040 = !DILocation(line: 307, column: 30, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !11905, line: 307, column: 10)
!12042 = distinct !DILexicalBlock(scope: !12022, file: !11905, line: 305, column: 5)
!12043 = !DILocation(line: 307, column: 39, scope: !12041)
!12044 = !DILocation(line: 307, column: 10, scope: !12042)
!12045 = !DILocation(line: 310, column: 9, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12041, file: !11905, line: 308, column: 7)
!12047 = !DILocation(line: 313, column: 21, scope: !12046)
!12048 = !DILocation(line: 316, column: 9, scope: !12046)
!12049 = !DILocation(line: 316, column: 15, scope: !12046)
!12050 = !DILocation(line: 316, column: 51, scope: !12046)
!12051 = !DILocation(line: 318, column: 15, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !11905, line: 318, column: 14)
!12053 = distinct !DILexicalBlock(scope: !12046, file: !11905, line: 317, column: 9)
!12054 = !DILocation(line: 318, column: 29, scope: !12052)
!12055 = !DILocation(line: 318, column: 43, scope: !12052)
!12056 = !DILocation(line: 318, column: 14, scope: !12053)
!12057 = distinct !{!12057, !12048, !12058}
!12058 = !DILocation(line: 322, column: 9, scope: !12046)
!12059 = !DILocation(line: 330, column: 9, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12041, file: !11905, line: 328, column: 7)
!12061 = !DILocation(line: 333, column: 21, scope: !12060)
!12062 = !DILocation(line: 336, column: 9, scope: !12060)
!12063 = !DILocation(line: 336, column: 15, scope: !12060)
!12064 = !DILocation(line: 338, column: 15, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12066, file: !11905, line: 338, column: 14)
!12066 = distinct !DILexicalBlock(scope: !12060, file: !11905, line: 337, column: 9)
!12067 = !DILocation(line: 338, column: 29, scope: !12065)
!12068 = !DILocation(line: 338, column: 43, scope: !12065)
!12069 = !DILocation(line: 338, column: 14, scope: !12066)
!12070 = distinct !{!12070, !12062, !12071}
!12071 = !DILocation(line: 342, column: 9, scope: !12060)
!12072 = !DILocation(line: 0, scope: !12022)
!12073 = !DILocation(line: 347, column: 27, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 347, column: 6)
!12075 = !DILocation(line: 347, column: 43, scope: !12074)
!12076 = !DILocation(line: 347, column: 69, scope: !12074)
!12077 = !DILocation(line: 347, column: 6, scope: !11910)
!12078 = !DILocation(line: 353, column: 28, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !11905, line: 353, column: 8)
!12080 = distinct !DILexicalBlock(scope: !12074, file: !11905, line: 348, column: 3)
!12081 = !DILocation(line: 353, column: 37, scope: !12079)
!12082 = !DILocation(line: 353, column: 8, scope: !12080)
!12083 = !DILocation(line: 356, column: 7, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !11905, line: 354, column: 5)
!12085 = !DILocation(line: 359, column: 19, scope: !12084)
!12086 = !DILocation(line: 362, column: 7, scope: !12084)
!12087 = !DILocation(line: 362, column: 13, scope: !12084)
!12088 = !DILocation(line: 362, column: 49, scope: !12084)
!12089 = !DILocation(line: 364, column: 13, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !11905, line: 364, column: 12)
!12091 = distinct !DILexicalBlock(scope: !12084, file: !11905, line: 363, column: 7)
!12092 = !DILocation(line: 364, column: 27, scope: !12090)
!12093 = !DILocation(line: 364, column: 41, scope: !12090)
!12094 = !DILocation(line: 364, column: 12, scope: !12091)
!12095 = distinct !{!12095, !12086, !12096}
!12096 = !DILocation(line: 368, column: 7, scope: !12084)
!12097 = !DILocation(line: 373, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12079, file: !11905, line: 371, column: 5)
!12099 = !DILocation(line: 376, column: 19, scope: !12098)
!12100 = !DILocation(line: 379, column: 7, scope: !12098)
!12101 = !DILocation(line: 379, column: 13, scope: !12098)
!12102 = !DILocation(line: 381, column: 13, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !11905, line: 381, column: 12)
!12104 = distinct !DILexicalBlock(scope: !12098, file: !11905, line: 380, column: 7)
!12105 = !DILocation(line: 381, column: 27, scope: !12103)
!12106 = !DILocation(line: 381, column: 41, scope: !12103)
!12107 = !DILocation(line: 381, column: 12, scope: !12104)
!12108 = distinct !{!12108, !12100, !12109}
!12109 = !DILocation(line: 385, column: 7, scope: !12098)
!12110 = !DILocation(line: 389, column: 27, scope: !11941)
!12111 = !DILocation(line: 389, column: 43, scope: !11941)
!12112 = !DILocation(line: 389, column: 69, scope: !11941)
!12113 = !DILocation(line: 389, column: 6, scope: !11910)
!12114 = !DILocation(line: 0, scope: !11940)
!12115 = !DILocation(line: 398, column: 8, scope: !11946)
!12116 = !DILocation(line: 398, column: 8, scope: !11940)
!12117 = !DILocation(line: 400, column: 7, scope: !11944)
!12118 = !DILocation(line: 400, column: 7, scope: !11945)
!12119 = !DILocation(line: 402, column: 5, scope: !11945)
!12120 = !DILocation(line: 404, column: 8, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !11940, file: !11905, line: 404, column: 8)
!12122 = !DILocation(line: 404, column: 8, scope: !11940)
!12123 = !DILocation(line: 407, column: 7, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !11905, line: 405, column: 5)
!12125 = !DILocation(line: 410, column: 19, scope: !12124)
!12126 = !DILocation(line: 412, column: 7, scope: !12124)
!12127 = !DILocation(line: 412, column: 13, scope: !12124)
!12128 = !DILocation(line: 414, column: 13, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !11905, line: 414, column: 12)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !11905, line: 413, column: 7)
!12131 = !DILocation(line: 414, column: 27, scope: !12129)
!12132 = !DILocation(line: 414, column: 40, scope: !12129)
!12133 = !DILocation(line: 414, column: 12, scope: !12130)
!12134 = distinct !{!12134, !12126, !12135}
!12135 = !DILocation(line: 418, column: 7, scope: !12124)
!12136 = !DILocation(line: 422, column: 5, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !11905, line: 422, column: 5)
!12138 = distinct !DILexicalBlock(scope: !11940, file: !11905, line: 422, column: 5)
!12139 = !DILocation(line: 422, column: 5, scope: !12138)
!12140 = !DILocation(line: 422, column: 5, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12137, file: !11905, line: 422, column: 5)
!12142 = !DILocation(line: 422, column: 5, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12144, file: !11905, line: 422, column: 5)
!12144 = distinct !DILexicalBlock(scope: !12137, file: !11905, line: 422, column: 5)
!12145 = !DILocation(line: 422, column: 5, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12144, file: !11905, line: 422, column: 5)
!12147 = !DILocation(line: 0, scope: !12137)
!12148 = !DILocation(line: 424, column: 28, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !11940, file: !11905, line: 424, column: 8)
!12150 = !DILocation(line: 424, column: 38, scope: !12149)
!12151 = !DILocation(line: 0, scope: !12149)
!12152 = !DILocation(line: 424, column: 8, scope: !11940)
!12153 = !DILocation(line: 430, column: 13, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12149, file: !11905, line: 425, column: 5)
!12155 = !DILocation(line: 430, column: 49, scope: !12154)
!12156 = !DILocation(line: 430, column: 7, scope: !12154)
!12157 = !DILocation(line: 432, column: 13, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !11905, line: 432, column: 12)
!12159 = distinct !DILexicalBlock(scope: !12154, file: !11905, line: 431, column: 7)
!12160 = !DILocation(line: 432, column: 27, scope: !12158)
!12161 = !DILocation(line: 432, column: 41, scope: !12158)
!12162 = !DILocation(line: 432, column: 12, scope: !12159)
!12163 = distinct !{!12163, !12156, !12164}
!12164 = !DILocation(line: 436, column: 7, scope: !12154)
!12165 = !DILocation(line: 444, column: 13, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12149, file: !11905, line: 439, column: 5)
!12167 = !DILocation(line: 444, column: 7, scope: !12166)
!12168 = !DILocation(line: 446, column: 13, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !11905, line: 446, column: 12)
!12170 = distinct !DILexicalBlock(scope: !12166, file: !11905, line: 445, column: 7)
!12171 = !DILocation(line: 446, column: 27, scope: !12169)
!12172 = !DILocation(line: 446, column: 41, scope: !12169)
!12173 = !DILocation(line: 446, column: 12, scope: !12170)
!12174 = distinct !{!12174, !12167, !12175}
!12175 = !DILocation(line: 450, column: 7, scope: !12166)
!12176 = !DILocation(line: 454, column: 8, scope: !11940)
!12177 = !DILocation(line: 456, column: 7, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !11905, line: 455, column: 5)
!12179 = distinct !DILexicalBlock(scope: !11940, file: !11905, line: 454, column: 8)
!12180 = !DILocation(line: 457, column: 5, scope: !12178)
!12181 = !DILocation(line: 462, column: 31, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !11910, file: !11905, line: 462, column: 7)
!12183 = !DILocation(line: 462, column: 41, scope: !12182)
!12184 = !DILocation(line: 462, column: 7, scope: !11910)
!12185 = !DILocation(line: 465, column: 8, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !11905, line: 465, column: 8)
!12187 = distinct !DILexicalBlock(scope: !12182, file: !11905, line: 463, column: 3)
!12188 = !DILocation(line: 465, column: 38, scope: !12186)
!12189 = !DILocation(line: 465, column: 8, scope: !12187)
!12190 = !DILocation(line: 467, column: 44, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !11905, line: 467, column: 10)
!12192 = distinct !DILexicalBlock(scope: !12186, file: !11905, line: 466, column: 5)
!12193 = !DILocation(line: 0, scope: !12191)
!12194 = !DILocation(line: 467, column: 10, scope: !12192)
!12195 = !DILocation(line: 483, column: 15, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !11905, line: 468, column: 7)
!12197 = !DILocation(line: 483, column: 9, scope: !12196)
!12198 = !DILocation(line: 485, column: 15, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !11905, line: 485, column: 14)
!12200 = distinct !DILexicalBlock(scope: !12196, file: !11905, line: 484, column: 9)
!12201 = !DILocation(line: 485, column: 29, scope: !12199)
!12202 = !DILocation(line: 485, column: 43, scope: !12199)
!12203 = !DILocation(line: 485, column: 14, scope: !12200)
!12204 = distinct !{!12204, !12197, !12205}
!12205 = !DILocation(line: 489, column: 9, scope: !12196)
!12206 = !DILocation(line: 492, column: 9, scope: !12196)
!12207 = !DILocation(line: 498, column: 9, scope: !12196)
!12208 = !DILocation(line: 501, column: 21, scope: !12196)
!12209 = !DILocation(line: 504, column: 9, scope: !12196)
!12210 = !DILocation(line: 504, column: 15, scope: !12196)
!12211 = !DILocation(line: 504, column: 51, scope: !12196)
!12212 = !DILocation(line: 506, column: 15, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !11905, line: 506, column: 14)
!12214 = distinct !DILexicalBlock(scope: !12196, file: !11905, line: 505, column: 9)
!12215 = !DILocation(line: 506, column: 29, scope: !12213)
!12216 = !DILocation(line: 506, column: 43, scope: !12213)
!12217 = !DILocation(line: 506, column: 14, scope: !12214)
!12218 = distinct !{!12218, !12209, !12219}
!12219 = !DILocation(line: 510, column: 9, scope: !12196)
!12220 = !DILocation(line: 521, column: 15, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12191, file: !11905, line: 513, column: 7)
!12222 = !DILocation(line: 521, column: 9, scope: !12221)
!12223 = !DILocation(line: 523, column: 15, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !11905, line: 523, column: 14)
!12225 = distinct !DILexicalBlock(scope: !12221, file: !11905, line: 522, column: 9)
!12226 = !DILocation(line: 523, column: 29, scope: !12224)
!12227 = !DILocation(line: 523, column: 43, scope: !12224)
!12228 = !DILocation(line: 523, column: 14, scope: !12225)
!12229 = distinct !{!12229, !12222, !12230}
!12230 = !DILocation(line: 527, column: 9, scope: !12221)
!12231 = !DILocation(line: 533, column: 44, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !11905, line: 533, column: 10)
!12233 = distinct !DILexicalBlock(scope: !12186, file: !11905, line: 531, column: 5)
!12234 = !DILocation(line: 533, column: 10, scope: !12233)
!12235 = !DILocation(line: 540, column: 27, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !11905, line: 538, column: 7)
!12237 = !DILocation(line: 551, column: 14, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12236, file: !11905, line: 550, column: 13)
!12239 = !DILocation(line: 551, column: 81, scope: !12238)
!12240 = !DILocation(line: 551, column: 55, scope: !12238)
!12241 = !DILocation(line: 551, column: 92, scope: !12238)
!12242 = !DILocation(line: 552, column: 14, scope: !12238)
!12243 = !DILocation(line: 552, column: 80, scope: !12238)
!12244 = !DILocation(line: 552, column: 53, scope: !12238)
!12245 = !DILocation(line: 552, column: 111, scope: !12238)
!12246 = !DILocation(line: 553, column: 14, scope: !12238)
!12247 = !DILocation(line: 553, column: 80, scope: !12238)
!12248 = !DILocation(line: 553, column: 86, scope: !12238)
!12249 = !DILocation(line: 553, column: 53, scope: !12238)
!12250 = !DILocation(line: 553, column: 111, scope: !12238)
!12251 = !DILocation(line: 554, column: 14, scope: !12238)
!12252 = !DILocation(line: 554, column: 82, scope: !12238)
!12253 = !DILocation(line: 554, column: 101, scope: !12238)
!12254 = !DILocation(line: 554, column: 53, scope: !12238)
!12255 = !DILocation(line: 554, column: 126, scope: !12238)
!12256 = !DILocation(line: 555, column: 14, scope: !12238)
!12257 = !DILocation(line: 555, column: 80, scope: !12238)
!12258 = !DILocation(line: 555, column: 85, scope: !12238)
!12259 = !DILocation(line: 555, column: 53, scope: !12238)
!12260 = !DILocation(line: 550, column: 13, scope: !12236)
!12261 = !DILocation(line: 563, column: 3, scope: !11910)
!12262 = !DILocation(line: 564, column: 1, scope: !11910)
!12263 = !DISubprogram(name: "HAL_GetTick", scope: !12264, file: !12264, line: 234, type: !6363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12264 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12265 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11905, file: !11905, line: 591, type: !12266, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12277)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{!11908, !12268, !152}
!12268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12269, size: 32)
!12269 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11915, line: 92, baseType: !12270)
!12270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11915, line: 75, size: 160, elements: !12271)
!12271 = !{!12272, !12273, !12274, !12275, !12276}
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12270, file: !11915, line: 77, baseType: !152, size: 32)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12270, file: !11915, line: 80, baseType: !152, size: 32, offset: 32)
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12270, file: !11915, line: 83, baseType: !152, size: 32, offset: 64)
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12270, file: !11915, line: 86, baseType: !152, size: 32, offset: 96)
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12270, file: !11915, line: 89, baseType: !152, size: 32, offset: 128)
!12277 = !{!12278, !12279, !12280}
!12278 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12265, file: !11905, line: 591, type: !12268)
!12279 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12265, file: !11905, line: 591, type: !152)
!12280 = !DILocalVariable(name: "tickstart", scope: !12265, file: !11905, line: 593, type: !152)
!12281 = !DILocation(line: 0, scope: !12265)
!12282 = !DILocation(line: 596, column: 24, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 596, column: 6)
!12284 = !DILocation(line: 596, column: 6, scope: !12265)
!12285 = !DILocation(line: 610, column: 17, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 610, column: 6)
!12287 = !DILocation(line: 610, column: 15, scope: !12286)
!12288 = !DILocation(line: 610, column: 6, scope: !12265)
!12289 = !DILocation(line: 613, column: 5, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12286, file: !11905, line: 611, column: 3)
!12291 = !DILocation(line: 617, column: 8, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12290, file: !11905, line: 617, column: 8)
!12293 = !DILocation(line: 617, column: 34, scope: !12292)
!12294 = !DILocation(line: 617, column: 8, scope: !12290)
!12295 = !DILocation(line: 624, column: 27, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 624, column: 6)
!12297 = !DILocation(line: 624, column: 38, scope: !12296)
!12298 = !DILocation(line: 624, column: 60, scope: !12296)
!12299 = !DILocation(line: 624, column: 6, scope: !12265)
!12300 = !DILocation(line: 628, column: 40, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !11905, line: 628, column: 8)
!12302 = distinct !DILexicalBlock(scope: !12296, file: !11905, line: 625, column: 3)
!12303 = !DILocation(line: 628, column: 63, scope: !12301)
!12304 = !DILocation(line: 628, column: 8, scope: !12302)
!12305 = !DILocation(line: 630, column: 7, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12301, file: !11905, line: 629, column: 5)
!12307 = !DILocation(line: 633, column: 29, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12302, file: !11905, line: 633, column: 8)
!12309 = !DILocation(line: 631, column: 5, scope: !12306)
!12310 = !DILocation(line: 633, column: 40, scope: !12308)
!12311 = !DILocation(line: 633, column: 63, scope: !12308)
!12312 = !DILocation(line: 633, column: 8, scope: !12302)
!12313 = !DILocation(line: 635, column: 7, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12308, file: !11905, line: 634, column: 5)
!12315 = !DILocation(line: 636, column: 5, scope: !12314)
!12316 = !DILocation(line: 639, column: 5, scope: !12302)
!12317 = !DILocation(line: 643, column: 27, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 643, column: 6)
!12319 = !DILocation(line: 640, column: 3, scope: !12302)
!12320 = !DILocation(line: 643, column: 38, scope: !12318)
!12321 = !DILocation(line: 643, column: 62, scope: !12318)
!12322 = !DILocation(line: 643, column: 6, scope: !12265)
!12323 = !DILocation(line: 648, column: 27, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12325, file: !11905, line: 648, column: 8)
!12325 = distinct !DILexicalBlock(scope: !12318, file: !11905, line: 644, column: 3)
!12326 = !DILocation(line: 648, column: 8, scope: !12325)
!12327 = !DILocation(line: 651, column: 10, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !11905, line: 651, column: 10)
!12329 = distinct !DILexicalBlock(scope: !12324, file: !11905, line: 649, column: 5)
!12330 = !DILocation(line: 651, column: 46, scope: !12328)
!12331 = !DILocation(line: 651, column: 10, scope: !12329)
!12332 = !DILocation(line: 661, column: 10, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !11905, line: 661, column: 10)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !11905, line: 659, column: 5)
!12335 = distinct !DILexicalBlock(scope: !12324, file: !11905, line: 657, column: 13)
!12336 = !DILocation(line: 661, column: 46, scope: !12333)
!12337 = !DILocation(line: 661, column: 10, scope: !12334)
!12338 = !DILocation(line: 670, column: 10, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !11905, line: 670, column: 10)
!12340 = distinct !DILexicalBlock(scope: !12335, file: !11905, line: 668, column: 5)
!12341 = !DILocation(line: 670, column: 46, scope: !12339)
!12342 = !DILocation(line: 670, column: 10, scope: !12340)
!12343 = !DILocation(line: 676, column: 5, scope: !12325)
!12344 = !DILocation(line: 679, column: 17, scope: !12325)
!12345 = !DILocation(line: 681, column: 5, scope: !12325)
!12346 = !DILocation(line: 681, column: 12, scope: !12325)
!12347 = !DILocation(line: 681, column: 65, scope: !12325)
!12348 = !DILocation(line: 681, column: 78, scope: !12325)
!12349 = !DILocation(line: 681, column: 42, scope: !12325)
!12350 = !DILocation(line: 683, column: 12, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12352, file: !11905, line: 683, column: 11)
!12352 = distinct !DILexicalBlock(scope: !12325, file: !11905, line: 682, column: 5)
!12353 = !DILocation(line: 683, column: 26, scope: !12351)
!12354 = !DILocation(line: 683, column: 39, scope: !12351)
!12355 = !DILocation(line: 683, column: 11, scope: !12352)
!12356 = distinct !{!12356, !12345, !12357}
!12357 = !DILocation(line: 687, column: 5, scope: !12325)
!12358 = !DILocation(line: 691, column: 17, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 691, column: 6)
!12360 = !DILocation(line: 691, column: 15, scope: !12359)
!12361 = !DILocation(line: 691, column: 6, scope: !12265)
!12362 = !DILocation(line: 694, column: 5, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12359, file: !11905, line: 692, column: 3)
!12364 = !DILocation(line: 698, column: 8, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12363, file: !11905, line: 698, column: 8)
!12366 = !DILocation(line: 698, column: 34, scope: !12365)
!12367 = !DILocation(line: 698, column: 8, scope: !12363)
!12368 = !DILocation(line: 705, column: 27, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 705, column: 6)
!12370 = !DILocation(line: 705, column: 38, scope: !12369)
!12371 = !DILocation(line: 705, column: 61, scope: !12369)
!12372 = !DILocation(line: 705, column: 6, scope: !12265)
!12373 = !DILocation(line: 708, column: 5, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12369, file: !11905, line: 706, column: 3)
!12375 = !DILocation(line: 712, column: 27, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12265, file: !11905, line: 712, column: 6)
!12377 = !DILocation(line: 709, column: 3, scope: !12374)
!12378 = !DILocation(line: 712, column: 38, scope: !12376)
!12379 = !DILocation(line: 712, column: 61, scope: !12376)
!12380 = !DILocation(line: 712, column: 6, scope: !12265)
!12381 = !DILocation(line: 715, column: 5, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12376, file: !11905, line: 713, column: 3)
!12383 = !DILocation(line: 716, column: 3, scope: !12382)
!12384 = !DILocation(line: 719, column: 21, scope: !12265)
!12385 = !DILocation(line: 719, column: 70, scope: !12265)
!12386 = !DILocation(line: 719, column: 91, scope: !12265)
!12387 = !DILocation(line: 719, column: 50, scope: !12265)
!12388 = !DILocation(line: 719, column: 47, scope: !12265)
!12389 = !DILocation(line: 719, column: 19, scope: !12265)
!12390 = !DILocation(line: 722, column: 17, scope: !12265)
!12391 = !DILocation(line: 722, column: 3, scope: !12265)
!12392 = !DILocation(line: 724, column: 3, scope: !12265)
!12393 = !DILocation(line: 725, column: 1, scope: !12265)
!12394 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11905, file: !11905, line: 885, type: !6363, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12395)
!12395 = !{!12396, !12397, !12398, !12399}
!12396 = !DILocalVariable(name: "pllm", scope: !12394, file: !11905, line: 887, type: !152)
!12397 = !DILocalVariable(name: "pllvco", scope: !12394, file: !11905, line: 887, type: !152)
!12398 = !DILocalVariable(name: "pllp", scope: !12394, file: !11905, line: 887, type: !152)
!12399 = !DILocalVariable(name: "sysclockfreq", scope: !12394, file: !11905, line: 888, type: !152)
!12400 = !DILocation(line: 0, scope: !12394)
!12401 = !DILocation(line: 891, column: 16, scope: !12394)
!12402 = !DILocation(line: 891, column: 21, scope: !12394)
!12403 = !DILocation(line: 891, column: 3, scope: !12394)
!12404 = !DILocation(line: 907, column: 19, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !11905, line: 904, column: 5)
!12406 = distinct !DILexicalBlock(scope: !12394, file: !11905, line: 892, column: 3)
!12407 = !DILocation(line: 907, column: 27, scope: !12405)
!12408 = !DILocation(line: 908, column: 10, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12405, file: !11905, line: 908, column: 10)
!12410 = !DILocation(line: 0, scope: !12409)
!12411 = !DILocation(line: 918, column: 23, scope: !12405)
!12412 = !DILocation(line: 918, column: 82, scope: !12405)
!12413 = !DILocation(line: 920, column: 28, scope: !12405)
!12414 = !DILocation(line: 921, column: 7, scope: !12405)
!12415 = !DILocation(line: 0, scope: !12406)
!12416 = !DILocation(line: 929, column: 3, scope: !12394)
!12417 = !DISubprogram(name: "HAL_InitTick", scope: !12264, file: !12264, line: 223, type: !12418, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12418 = !DISubroutineType(types: !12419)
!12419 = !{!11908, !152}
!12420 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11905, file: !11905, line: 775, type: !12421, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12423)
!12421 = !DISubroutineType(types: !12422)
!12422 = !{null, !152, !152, !152}
!12423 = !{!12424, !12425, !12426, !12427, !12437, !12441}
!12424 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12420, file: !11905, line: 775, type: !152)
!12425 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12420, file: !11905, line: 775, type: !152)
!12426 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12420, file: !11905, line: 775, type: !152)
!12427 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12420, file: !11905, line: 777, type: !12428)
!12428 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12429, line: 62, baseType: !12430)
!12429 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12429, line: 46, size: 160, elements: !12431)
!12431 = !{!12432, !12433, !12434, !12435, !12436}
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12430, file: !12429, line: 48, baseType: !152, size: 32)
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12430, file: !12429, line: 51, baseType: !152, size: 32, offset: 32)
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12430, file: !12429, line: 54, baseType: !152, size: 32, offset: 64)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12430, file: !12429, line: 57, baseType: !152, size: 32, offset: 96)
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12430, file: !12429, line: 60, baseType: !152, size: 32, offset: 128)
!12437 = !DILocalVariable(name: "tmpreg", scope: !12438, file: !11905, line: 787, type: !227)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !11905, line: 787, column: 5)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !11905, line: 783, column: 3)
!12440 = distinct !DILexicalBlock(scope: !12420, file: !11905, line: 782, column: 6)
!12441 = !DILocalVariable(name: "tmpreg", scope: !12442, file: !11905, line: 811, type: !227)
!12442 = distinct !DILexicalBlock(scope: !12443, file: !11905, line: 811, column: 5)
!12443 = distinct !DILexicalBlock(scope: !12440, file: !11905, line: 807, column: 3)
!12444 = !DILocation(line: 0, scope: !12420)
!12445 = !DILocation(line: 777, column: 3, scope: !12420)
!12446 = !DILocation(line: 777, column: 20, scope: !12420)
!12447 = !DILocation(line: 782, column: 15, scope: !12440)
!12448 = !DILocation(line: 782, column: 6, scope: !12420)
!12449 = !DILocation(line: 787, column: 5, scope: !12438)
!12450 = !DILocation(line: 787, column: 5, scope: !12439)
!12451 = !DILocation(line: 790, column: 21, scope: !12439)
!12452 = !DILocation(line: 790, column: 25, scope: !12439)
!12453 = !DILocation(line: 791, column: 21, scope: !12439)
!12454 = !DILocation(line: 791, column: 26, scope: !12439)
!12455 = !DILocation(line: 792, column: 21, scope: !12439)
!12456 = !DILocation(line: 792, column: 27, scope: !12439)
!12457 = !DILocation(line: 793, column: 21, scope: !12439)
!12458 = !DILocation(line: 793, column: 26, scope: !12439)
!12459 = !DILocation(line: 794, column: 21, scope: !12439)
!12460 = !DILocation(line: 794, column: 31, scope: !12439)
!12461 = !DILocation(line: 795, column: 5, scope: !12439)
!12462 = !DILocation(line: 798, column: 5, scope: !12439)
!12463 = !DILocation(line: 804, column: 3, scope: !12439)
!12464 = !DILocation(line: 811, column: 5, scope: !12442)
!12465 = !DILocation(line: 811, column: 5, scope: !12443)
!12466 = !DILocation(line: 814, column: 21, scope: !12443)
!12467 = !DILocation(line: 814, column: 25, scope: !12443)
!12468 = !DILocation(line: 815, column: 21, scope: !12443)
!12469 = !DILocation(line: 815, column: 26, scope: !12443)
!12470 = !DILocation(line: 816, column: 21, scope: !12443)
!12471 = !DILocation(line: 816, column: 27, scope: !12443)
!12472 = !DILocation(line: 817, column: 21, scope: !12443)
!12473 = !DILocation(line: 817, column: 26, scope: !12443)
!12474 = !DILocation(line: 818, column: 21, scope: !12443)
!12475 = !DILocation(line: 818, column: 31, scope: !12443)
!12476 = !DILocation(line: 819, column: 5, scope: !12443)
!12477 = !DILocation(line: 822, column: 5, scope: !12443)
!12478 = !DILocation(line: 0, scope: !12440)
!12479 = !DILocation(line: 830, column: 1, scope: !12420)
!12480 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12429, file: !12429, line: 224, type: !12481, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12481 = !DISubroutineType(types: !12482)
!12482 = !{null, !2993, !12483}
!12483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12428, size: 32)
!12484 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11905, file: !11905, line: 841, type: !3111, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12485 = !DILocation(line: 843, column: 38, scope: !12484)
!12486 = !DILocation(line: 844, column: 1, scope: !12484)
!12487 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11905, file: !11905, line: 850, type: !3111, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12488 = !DILocation(line: 852, column: 38, scope: !12487)
!12489 = !DILocation(line: 853, column: 1, scope: !12487)
!12490 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11905, file: !11905, line: 941, type: !6363, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12491 = !DILocation(line: 943, column: 10, scope: !12490)
!12492 = !DILocation(line: 943, column: 3, scope: !12490)
!12493 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11905, file: !11905, line: 952, type: !6363, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12494 = !DILocation(line: 955, column: 11, scope: !12493)
!12495 = !DILocation(line: 955, column: 56, scope: !12493)
!12496 = !DILocation(line: 955, column: 78, scope: !12493)
!12497 = !DILocation(line: 955, column: 36, scope: !12493)
!12498 = !DILocation(line: 955, column: 33, scope: !12493)
!12499 = !DILocation(line: 955, column: 3, scope: !12493)
!12500 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11905, file: !11905, line: 964, type: !6363, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12501 = !DILocation(line: 967, column: 11, scope: !12500)
!12502 = !DILocation(line: 967, column: 55, scope: !12500)
!12503 = !DILocation(line: 967, column: 77, scope: !12500)
!12504 = !DILocation(line: 967, column: 35, scope: !12500)
!12505 = !DILocation(line: 967, column: 32, scope: !12500)
!12506 = !DILocation(line: 967, column: 3, scope: !12500)
!12507 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11905, file: !11905, line: 977, type: !12508, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12510)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{null, !11913}
!12510 = !{!12511}
!12511 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12507, file: !11905, line: 977, type: !11913)
!12512 = !DILocation(line: 0, scope: !12507)
!12513 = !DILocation(line: 980, column: 22, scope: !12507)
!12514 = !DILocation(line: 980, column: 37, scope: !12507)
!12515 = !DILocation(line: 983, column: 12, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12507, file: !11905, line: 983, column: 6)
!12517 = !DILocation(line: 983, column: 15, scope: !12516)
!12518 = !DILocation(line: 983, column: 31, scope: !12516)
!12519 = !DILocation(line: 983, column: 6, scope: !12507)
!12520 = !DILocation(line: 985, column: 24, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12516, file: !11905, line: 984, column: 3)
!12522 = !DILocation(line: 985, column: 33, scope: !12521)
!12523 = !DILocation(line: 986, column: 3, scope: !12521)
!12524 = !DILocation(line: 987, column: 17, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12516, file: !11905, line: 987, column: 11)
!12526 = !DILocation(line: 987, column: 20, scope: !12525)
!12527 = !DILocation(line: 987, column: 35, scope: !12525)
!12528 = !DILocation(line: 0, scope: !12525)
!12529 = !DILocation(line: 987, column: 11, scope: !12516)
!12530 = !DILocation(line: 989, column: 33, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !11905, line: 988, column: 3)
!12532 = !DILocation(line: 990, column: 3, scope: !12531)
!12533 = !DILocation(line: 993, column: 33, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12525, file: !11905, line: 992, column: 3)
!12535 = !DILocation(line: 997, column: 12, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12507, file: !11905, line: 997, column: 6)
!12537 = !DILocation(line: 997, column: 15, scope: !12536)
!12538 = !DILocation(line: 1003, column: 24, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12536, file: !11905, line: 1002, column: 3)
!12540 = !DILocation(line: 1003, column: 33, scope: !12539)
!12541 = !DILocation(line: 1006, column: 61, scope: !12507)
!12542 = !DILocation(line: 1006, column: 81, scope: !12507)
!12543 = !DILocation(line: 1006, column: 22, scope: !12507)
!12544 = !DILocation(line: 1006, column: 42, scope: !12507)
!12545 = !DILocation(line: 1009, column: 12, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12507, file: !11905, line: 1009, column: 6)
!12547 = !DILocation(line: 1009, column: 17, scope: !12546)
!12548 = !DILocation(line: 1009, column: 35, scope: !12546)
!12549 = !DILocation(line: 1009, column: 6, scope: !12507)
!12550 = !DILocation(line: 1011, column: 24, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12546, file: !11905, line: 1010, column: 3)
!12552 = !DILocation(line: 1011, column: 33, scope: !12551)
!12553 = !DILocation(line: 1012, column: 3, scope: !12551)
!12554 = !DILocation(line: 1013, column: 17, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12546, file: !11905, line: 1013, column: 11)
!12556 = !DILocation(line: 1013, column: 22, scope: !12555)
!12557 = !DILocation(line: 1013, column: 39, scope: !12555)
!12558 = !DILocation(line: 0, scope: !12555)
!12559 = !DILocation(line: 1013, column: 11, scope: !12546)
!12560 = !DILocation(line: 1015, column: 33, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12555, file: !11905, line: 1014, column: 3)
!12562 = !DILocation(line: 1016, column: 3, scope: !12561)
!12563 = !DILocation(line: 1019, column: 33, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12555, file: !11905, line: 1018, column: 3)
!12565 = !DILocation(line: 1023, column: 12, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12507, file: !11905, line: 1023, column: 6)
!12567 = !DILocation(line: 1023, column: 16, scope: !12566)
!12568 = !DILocation(line: 1029, column: 24, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12566, file: !11905, line: 1028, column: 3)
!12570 = !DILocation(line: 1029, column: 33, scope: !12569)
!12571 = !DILocation(line: 1033, column: 12, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12507, file: !11905, line: 1033, column: 6)
!12573 = !DILocation(line: 1033, column: 15, scope: !12572)
!12574 = !DILocation(line: 1033, column: 30, scope: !12572)
!12575 = !DILocation(line: 1033, column: 6, scope: !12507)
!12576 = !DILocation(line: 1039, column: 28, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12572, file: !11905, line: 1038, column: 3)
!12578 = !DILocation(line: 1039, column: 37, scope: !12577)
!12579 = !DILocation(line: 1041, column: 54, scope: !12507)
!12580 = !DILocation(line: 1041, column: 62, scope: !12507)
!12581 = !DILocation(line: 1041, column: 26, scope: !12507)
!12582 = !DILocation(line: 1041, column: 36, scope: !12507)
!12583 = !DILocation(line: 1042, column: 49, scope: !12507)
!12584 = !DILocation(line: 1042, column: 57, scope: !12507)
!12585 = !DILocation(line: 1042, column: 26, scope: !12507)
!12586 = !DILocation(line: 1042, column: 31, scope: !12507)
!12587 = !DILocation(line: 1043, column: 50, scope: !12507)
!12588 = !DILocation(line: 1043, column: 78, scope: !12507)
!12589 = !DILocation(line: 1043, column: 26, scope: !12507)
!12590 = !DILocation(line: 1043, column: 31, scope: !12507)
!12591 = !DILocation(line: 1044, column: 52, scope: !12507)
!12592 = !DILocation(line: 1044, column: 102, scope: !12507)
!12593 = !DILocation(line: 1044, column: 109, scope: !12507)
!12594 = !DILocation(line: 1044, column: 26, scope: !12507)
!12595 = !DILocation(line: 1044, column: 31, scope: !12507)
!12596 = !DILocation(line: 1045, column: 50, scope: !12507)
!12597 = !DILocation(line: 1045, column: 78, scope: !12507)
!12598 = !DILocation(line: 1045, column: 26, scope: !12507)
!12599 = !DILocation(line: 1045, column: 31, scope: !12507)
!12600 = !DILocation(line: 1046, column: 1, scope: !12507)
!12601 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11905, file: !11905, line: 1056, type: !12602, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12604)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{null, !12268, !999}
!12604 = !{!12605, !12606}
!12605 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12601, file: !11905, line: 1056, type: !12268)
!12606 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12601, file: !11905, line: 1056, type: !999)
!12607 = !DILocation(line: 0, scope: !12601)
!12608 = !DILocation(line: 1059, column: 22, scope: !12601)
!12609 = !DILocation(line: 1059, column: 32, scope: !12601)
!12610 = !DILocation(line: 1062, column: 53, scope: !12601)
!12611 = !DILocation(line: 1062, column: 58, scope: !12601)
!12612 = !DILocation(line: 1062, column: 22, scope: !12601)
!12613 = !DILocation(line: 1062, column: 35, scope: !12601)
!12614 = !DILocation(line: 1065, column: 54, scope: !12601)
!12615 = !DILocation(line: 1065, column: 59, scope: !12601)
!12616 = !DILocation(line: 1065, column: 22, scope: !12601)
!12617 = !DILocation(line: 1065, column: 36, scope: !12601)
!12618 = !DILocation(line: 1068, column: 55, scope: !12601)
!12619 = !DILocation(line: 1068, column: 60, scope: !12601)
!12620 = !DILocation(line: 1068, column: 22, scope: !12601)
!12621 = !DILocation(line: 1068, column: 37, scope: !12601)
!12622 = !DILocation(line: 1071, column: 56, scope: !12601)
!12623 = !DILocation(line: 1071, column: 79, scope: !12601)
!12624 = !DILocation(line: 1071, column: 22, scope: !12601)
!12625 = !DILocation(line: 1071, column: 37, scope: !12601)
!12626 = !DILocation(line: 1074, column: 34, scope: !12601)
!12627 = !DILocation(line: 1074, column: 38, scope: !12601)
!12628 = !DILocation(line: 1074, column: 14, scope: !12601)
!12629 = !DILocation(line: 1075, column: 1, scope: !12601)
!12630 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11905, file: !11905, line: 1082, type: !3111, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12631 = !DILocation(line: 1085, column: 6, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12630, file: !11905, line: 1085, column: 6)
!12633 = !DILocation(line: 1085, column: 6, scope: !12630)
!12634 = !DILocation(line: 1088, column: 5, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12632, file: !11905, line: 1086, column: 3)
!12636 = !DILocation(line: 1091, column: 5, scope: !12635)
!12637 = !DILocation(line: 1092, column: 3, scope: !12635)
!12638 = !DILocation(line: 1093, column: 1, scope: !12630)
!12639 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11905, file: !11905, line: 1099, type: !3111, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12640 = !DILocation(line: 1104, column: 1, scope: !12639)
!12641 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12642, file: !12642, line: 257, type: !6373, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12643)
!12642 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12643 = !{!12644}
!12644 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12641, file: !12642, line: 257, type: !152)
!12645 = !DILocation(line: 0, scope: !12641)
!12646 = !DILocation(line: 260, column: 3, scope: !12641)
!12647 = !DILocation(line: 261, column: 1, scope: !12641)
!12648 = distinct !DISubprogram(name: "LL_InitTick", scope: !12649, file: !12649, line: 260, type: !10264, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12650)
!12649 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12650 = !{!12651, !12652}
!12651 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12648, file: !12649, line: 260, type: !152)
!12652 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12648, file: !12649, line: 260, type: !152)
!12653 = !DILocation(line: 0, scope: !12648)
!12654 = !DILocation(line: 263, column: 46, scope: !12648)
!12655 = !DILocation(line: 263, column: 55, scope: !12648)
!12656 = !DILocation(line: 263, column: 18, scope: !12648)
!12657 = !DILocation(line: 264, column: 18, scope: !12648)
!12658 = !DILocation(line: 265, column: 18, scope: !12648)
!12659 = !DILocation(line: 267, column: 1, scope: !12648)
!12660 = distinct !DISubprogram(name: "LL_mDelay", scope: !12642, file: !12642, line: 273, type: !6373, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12661)
!12661 = !{!12662, !12663}
!12662 = !DILocalVariable(name: "Delay", arg: 1, scope: !12660, file: !12642, line: 273, type: !152)
!12663 = !DILocalVariable(name: "tmp", scope: !12660, file: !12642, line: 275, type: !227)
!12664 = !DILocation(line: 0, scope: !12660)
!12665 = !DILocation(line: 275, column: 3, scope: !12660)
!12666 = !DILocation(line: 275, column: 18, scope: !12660)
!12667 = !DILocation(line: 275, column: 33, scope: !12660)
!12668 = !DILocation(line: 277, column: 10, scope: !12660)
!12669 = !DILocation(line: 280, column: 12, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12660, file: !12642, line: 280, column: 6)
!12671 = !DILocation(line: 285, column: 3, scope: !12660)
!12672 = !DILocation(line: 287, column: 18, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !12642, line: 287, column: 8)
!12674 = distinct !DILexicalBlock(scope: !12660, file: !12642, line: 286, column: 3)
!12675 = !DILocation(line: 292, column: 1, scope: !12660)
!12676 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12642, file: !12642, line: 323, type: !6373, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12677)
!12677 = !{!12678}
!12678 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12676, file: !12642, line: 323, type: !152)
!12679 = !DILocation(line: 0, scope: !12676)
!12680 = !DILocation(line: 326, column: 19, scope: !12676)
!12681 = !DILocation(line: 327, column: 1, scope: !12676)
!12682 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12642, file: !12642, line: 338, type: !12683, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12686)
!12683 = !DISubroutineType(types: !12684)
!12684 = !{!12685, !152}
!12685 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !943, line: 201, baseType: !942)
!12686 = !{!12687, !12688, !12689, !12690, !12691}
!12687 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12682, file: !12642, line: 338, type: !152)
!12688 = !DILocalVariable(name: "timeout", scope: !12682, file: !12642, line: 340, type: !152)
!12689 = !DILocalVariable(name: "getlatency", scope: !12682, file: !12642, line: 341, type: !152)
!12690 = !DILocalVariable(name: "latency", scope: !12682, file: !12642, line: 342, type: !152)
!12691 = !DILocalVariable(name: "status", scope: !12682, file: !12642, line: 343, type: !12685)
!12692 = !DILocation(line: 0, scope: !12682)
!12693 = !DILocation(line: 347, column: 21, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12682, file: !12642, line: 347, column: 6)
!12695 = !DILocation(line: 347, column: 6, scope: !12682)
!12696 = !DILocation(line: 353, column: 8, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12698, file: !12642, line: 353, column: 8)
!12698 = distinct !DILexicalBlock(scope: !12694, file: !12642, line: 352, column: 3)
!12699 = !DILocation(line: 387, column: 8, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12698, file: !12642, line: 387, column: 8)
!12701 = !DILocation(line: 387, column: 40, scope: !12700)
!12702 = !DILocation(line: 387, column: 8, scope: !12698)
!12703 = !DILocation(line: 407, column: 26, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !12642, line: 407, column: 10)
!12705 = distinct !DILexicalBlock(scope: !12700, file: !12642, line: 388, column: 5)
!12706 = !DILocation(line: 407, column: 55, scope: !12704)
!12707 = !DILocation(line: 413, column: 28, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12642, line: 413, column: 12)
!12709 = distinct !DILexicalBlock(scope: !12704, file: !12642, line: 412, column: 7)
!12710 = !DILocation(line: 413, column: 57, scope: !12708)
!12711 = !DILocation(line: 420, column: 8, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12698, file: !12642, line: 420, column: 8)
!12713 = !DILocation(line: 420, column: 40, scope: !12712)
!12714 = !DILocation(line: 420, column: 8, scope: !12698)
!12715 = !DILocation(line: 429, column: 26, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12642, line: 429, column: 10)
!12717 = distinct !DILexicalBlock(scope: !12712, file: !12642, line: 421, column: 5)
!12718 = !DILocation(line: 429, column: 55, scope: !12716)
!12719 = !DILocation(line: 435, column: 28, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12721, file: !12642, line: 435, column: 12)
!12721 = distinct !DILexicalBlock(scope: !12716, file: !12642, line: 434, column: 7)
!12722 = !DILocation(line: 435, column: 57, scope: !12720)
!12723 = !DILocation(line: 0, scope: !12698)
!12724 = !DILocation(line: 444, column: 5, scope: !12698)
!12725 = !DILocation(line: 448, column: 5, scope: !12698)
!12726 = !DILocation(line: 451, column: 18, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12698, file: !12642, line: 449, column: 5)
!12728 = !DILocation(line: 452, column: 12, scope: !12727)
!12729 = !DILocation(line: 453, column: 26, scope: !12698)
!12730 = !DILocation(line: 453, column: 38, scope: !12698)
!12731 = !DILocation(line: 453, column: 5, scope: !12727)
!12732 = distinct !{!12732, !12725, !12733}
!12733 = !DILocation(line: 453, column: 54, scope: !12698)
!12734 = !DILocation(line: 0, scope: !12694)
!12735 = !DILocation(line: 464, column: 3, scope: !12682)
!12736 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12737, file: !12737, line: 519, type: !6363, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12737 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12738 = !DILocation(line: 521, column: 21, scope: !12736)
!12739 = !DILocation(line: 521, column: 3, scope: !12736)
!12740 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5978, file: !5978, line: 1543, type: !6373, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12741)
!12741 = !{!12742}
!12742 = !DILocalVariable(name: "Latency", arg: 1, scope: !12740, file: !5978, line: 1543, type: !152)
!12743 = !DILocation(line: 0, scope: !12740)
!12744 = !DILocation(line: 1545, column: 3, scope: !12740)
!12745 = !DILocation(line: 1546, column: 1, scope: !12740)
!12746 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5978, file: !5978, line: 1569, type: !6363, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12747 = !DILocation(line: 1571, column: 21, scope: !12746)
!12748 = !DILocation(line: 1571, column: 3, scope: !12746)
!12749 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12642, file: !12642, line: 483, type: !12750, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12766)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{!12685, !12752, !12759}
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12753, size: 32)
!12753 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12649, line: 114, baseType: !12754)
!12754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12649, line: 94, size: 96, elements: !12755)
!12755 = !{!12756, !12757, !12758}
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12754, file: !12649, line: 96, baseType: !152, size: 32)
!12757 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12754, file: !12649, line: 102, baseType: !152, size: 32, offset: 32)
!12758 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12754, file: !12649, line: 109, baseType: !152, size: 32, offset: 64)
!12759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12760, size: 32)
!12760 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12649, line: 139, baseType: !12761)
!12761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12649, line: 119, size: 96, elements: !12762)
!12762 = !{!12763, !12764, !12765}
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12761, file: !12649, line: 121, baseType: !152, size: 32)
!12764 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12761, file: !12649, line: 127, baseType: !152, size: 32, offset: 32)
!12765 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12761, file: !12649, line: 133, baseType: !152, size: 32, offset: 64)
!12766 = !{!12767, !12768, !12769, !12770}
!12767 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12749, file: !12642, line: 483, type: !12752)
!12768 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12749, file: !12642, line: 484, type: !12759)
!12769 = !DILocalVariable(name: "status", scope: !12749, file: !12642, line: 486, type: !12685)
!12770 = !DILocalVariable(name: "pllfreq", scope: !12749, file: !12642, line: 487, type: !152)
!12771 = !DILocation(line: 0, scope: !12749)
!12772 = !DILocation(line: 490, column: 6, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12749, file: !12642, line: 490, column: 6)
!12774 = !DILocation(line: 490, column: 25, scope: !12773)
!12775 = !DILocation(line: 490, column: 6, scope: !12749)
!12776 = !DILocation(line: 493, column: 15, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12773, file: !12642, line: 491, column: 3)
!12778 = !DILocation(line: 496, column: 8, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12777, file: !12642, line: 496, column: 8)
!12780 = !DILocation(line: 496, column: 29, scope: !12779)
!12781 = !DILocation(line: 496, column: 8, scope: !12777)
!12782 = !DILocation(line: 498, column: 7, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12779, file: !12642, line: 497, column: 5)
!12784 = !DILocation(line: 499, column: 7, scope: !12783)
!12785 = !DILocation(line: 499, column: 14, scope: !12783)
!12786 = !DILocation(line: 499, column: 35, scope: !12783)
!12787 = distinct !{!12787, !12784, !12788}
!12788 = !DILocation(line: 502, column: 7, scope: !12783)
!12789 = !DILocation(line: 506, column: 76, scope: !12777)
!12790 = !DILocation(line: 506, column: 103, scope: !12777)
!12791 = !DILocation(line: 507, column: 54, scope: !12777)
!12792 = !DILocation(line: 506, column: 5, scope: !12777)
!12793 = !DILocation(line: 510, column: 14, scope: !12777)
!12794 = !DILocation(line: 511, column: 3, scope: !12777)
!12795 = !DILocation(line: 0, scope: !12773)
!12796 = !DILocation(line: 518, column: 3, scope: !12749)
!12797 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12642, file: !12642, line: 642, type: !12798, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12800)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!12685}
!12800 = !{!12801}
!12801 = !DILocalVariable(name: "status", scope: !12797, file: !12642, line: 644, type: !12685)
!12802 = !DILocation(line: 0, scope: !12797)
!12803 = !DILocation(line: 647, column: 6, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12797, file: !12642, line: 647, column: 6)
!12805 = !DILocation(line: 647, column: 27, scope: !12804)
!12806 = !DILocation(line: 663, column: 6, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12797, file: !12642, line: 663, column: 6)
!12808 = !DILocation(line: 663, column: 30, scope: !12807)
!12809 = !DILocation(line: 663, column: 6, scope: !12797)
!12810 = !DILocation(line: 669, column: 3, scope: !12797)
!12811 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12642, file: !12642, line: 611, type: !12812, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12814)
!12812 = !DISubroutineType(types: !12813)
!12813 = !{!152, !152, !12752}
!12814 = !{!12815, !12816, !12817}
!12815 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12811, file: !12642, line: 611, type: !152)
!12816 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12811, file: !12642, line: 611, type: !12752)
!12817 = !DILocalVariable(name: "pllfreq", scope: !12811, file: !12642, line: 613, type: !152)
!12818 = !DILocation(line: 0, scope: !12811)
!12819 = !DILocation(line: 622, column: 56, scope: !12811)
!12820 = !DILocation(line: 622, column: 61, scope: !12811)
!12821 = !DILocation(line: 622, column: 32, scope: !12811)
!12822 = !DILocation(line: 626, column: 45, scope: !12811)
!12823 = !DILocation(line: 626, column: 50, scope: !12811)
!12824 = !DILocation(line: 626, column: 21, scope: !12811)
!12825 = !DILocation(line: 630, column: 47, scope: !12811)
!12826 = !DILocation(line: 630, column: 82, scope: !12811)
!12827 = !DILocation(line: 630, column: 21, scope: !12811)
!12828 = !DILocation(line: 633, column: 3, scope: !12811)
!12829 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9590, file: !9590, line: 3007, type: !6363, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12830 = !DILocation(line: 3009, column: 11, scope: !12829)
!12831 = !DILocation(line: 3009, column: 44, scope: !12829)
!12832 = !DILocation(line: 3009, column: 3, scope: !12829)
!12833 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9590, file: !9590, line: 2987, type: !3111, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12834 = !DILocation(line: 2989, column: 3, scope: !12833)
!12835 = !DILocation(line: 2990, column: 1, scope: !12833)
!12836 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9590, file: !9590, line: 4304, type: !9724, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12837)
!12837 = !{!12838, !12839, !12840, !12841}
!12838 = !DILocalVariable(name: "Source", arg: 1, scope: !12836, file: !9590, line: 4304, type: !152)
!12839 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12836, file: !9590, line: 4304, type: !152)
!12840 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12836, file: !9590, line: 4304, type: !152)
!12841 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12836, file: !9590, line: 4304, type: !152)
!12842 = !DILocation(line: 0, scope: !12836)
!12843 = !DILocation(line: 4306, column: 3, scope: !12836)
!12844 = !DILocation(line: 4308, column: 3, scope: !12836)
!12845 = !DILocation(line: 4312, column: 1, scope: !12836)
!12846 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12642, file: !12642, line: 681, type: !12847, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12849)
!12847 = !DISubroutineType(types: !12848)
!12848 = !{!12685, !152, !12759}
!12849 = !{!12850, !12851, !12852, !12853}
!12850 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12846, file: !12642, line: 681, type: !152)
!12851 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12846, file: !12642, line: 681, type: !12759)
!12852 = !DILocalVariable(name: "status", scope: !12846, file: !12642, line: 683, type: !12685)
!12853 = !DILocalVariable(name: "hclk_frequency", scope: !12846, file: !12642, line: 684, type: !152)
!12854 = !DILocation(line: 0, scope: !12846)
!12855 = !DILocation(line: 691, column: 20, scope: !12846)
!12856 = !DILocation(line: 694, column: 6, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12846, file: !12642, line: 694, column: 6)
!12858 = !DILocation(line: 694, column: 22, scope: !12857)
!12859 = !DILocation(line: 694, column: 6, scope: !12846)
!12860 = !DILocation(line: 697, column: 14, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12857, file: !12642, line: 695, column: 3)
!12862 = !DILocation(line: 701, column: 13, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12846, file: !12642, line: 701, column: 6)
!12864 = !DILocation(line: 701, column: 6, scope: !12846)
!12865 = !DILocation(line: 704, column: 5, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12863, file: !12642, line: 702, column: 3)
!12867 = !DILocation(line: 705, column: 5, scope: !12866)
!12868 = !DILocation(line: 705, column: 12, scope: !12866)
!12869 = !DILocation(line: 705, column: 33, scope: !12866)
!12870 = distinct !{!12870, !12867, !12871}
!12871 = !DILocation(line: 708, column: 5, scope: !12866)
!12872 = !DILocation(line: 711, column: 49, scope: !12866)
!12873 = !DILocation(line: 711, column: 5, scope: !12866)
!12874 = !DILocation(line: 712, column: 5, scope: !12866)
!12875 = !DILocation(line: 713, column: 5, scope: !12866)
!12876 = !DILocation(line: 713, column: 12, scope: !12866)
!12877 = !DILocation(line: 713, column: 37, scope: !12866)
!12878 = distinct !{!12878, !12875, !12879}
!12879 = !DILocation(line: 716, column: 5, scope: !12866)
!12880 = !DILocation(line: 719, column: 50, scope: !12866)
!12881 = !DILocation(line: 719, column: 5, scope: !12866)
!12882 = !DILocation(line: 720, column: 50, scope: !12866)
!12883 = !DILocation(line: 720, column: 5, scope: !12866)
!12884 = !DILocation(line: 721, column: 3, scope: !12866)
!12885 = !DILocation(line: 724, column: 6, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12846, file: !12642, line: 724, column: 6)
!12887 = !DILocation(line: 724, column: 22, scope: !12886)
!12888 = !DILocation(line: 724, column: 6, scope: !12846)
!12889 = !DILocation(line: 727, column: 14, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12886, file: !12642, line: 725, column: 3)
!12891 = !DILocation(line: 728, column: 3, scope: !12890)
!12892 = !DILocation(line: 731, column: 13, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12846, file: !12642, line: 731, column: 6)
!12894 = !DILocation(line: 731, column: 6, scope: !12846)
!12895 = !DILocation(line: 733, column: 5, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12893, file: !12642, line: 732, column: 3)
!12897 = !DILocation(line: 734, column: 3, scope: !12896)
!12898 = !DILocation(line: 736, column: 3, scope: !12846)
!12899 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9590, file: !9590, line: 4184, type: !3111, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12900 = !DILocation(line: 4186, column: 3, scope: !12899)
!12901 = !DILocation(line: 4187, column: 1, scope: !12899)
!12902 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9590, file: !9590, line: 4205, type: !6363, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12903 = !DILocation(line: 4207, column: 11, scope: !12902)
!12904 = !DILocation(line: 4207, column: 44, scope: !12902)
!12905 = !DILocation(line: 4207, column: 3, scope: !12902)
!12906 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9590, file: !9590, line: 3224, type: !6373, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12907)
!12907 = !{!12908}
!12908 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12906, file: !9590, line: 3224, type: !152)
!12909 = !DILocation(line: 0, scope: !12906)
!12910 = !DILocation(line: 3226, column: 3, scope: !12906)
!12911 = !DILocation(line: 3227, column: 1, scope: !12906)
!12912 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9590, file: !9590, line: 3188, type: !6373, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12913)
!12913 = !{!12914}
!12914 = !DILocalVariable(name: "Source", arg: 1, scope: !12912, file: !9590, line: 3188, type: !152)
!12915 = !DILocation(line: 0, scope: !12912)
!12916 = !DILocation(line: 3190, column: 3, scope: !12912)
!12917 = !DILocation(line: 3191, column: 1, scope: !12912)
!12918 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9590, file: !9590, line: 3204, type: !6363, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12919 = !DILocation(line: 3206, column: 21, scope: !12918)
!12920 = !DILocation(line: 3206, column: 3, scope: !12918)
!12921 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9590, file: !9590, line: 3240, type: !6373, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12922)
!12922 = !{!12923}
!12923 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12921, file: !9590, line: 3240, type: !152)
!12924 = !DILocation(line: 0, scope: !12921)
!12925 = !DILocation(line: 3242, column: 3, scope: !12921)
!12926 = !DILocation(line: 3243, column: 1, scope: !12921)
!12927 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9590, file: !9590, line: 3256, type: !6373, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12928)
!12928 = !{!12929}
!12929 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12927, file: !9590, line: 3256, type: !152)
!12930 = !DILocation(line: 0, scope: !12927)
!12931 = !DILocation(line: 3258, column: 3, scope: !12927)
!12932 = !DILocation(line: 3259, column: 1, scope: !12927)
!12933 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9590, file: !9590, line: 5153, type: !6363, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12934 = !DILocation(line: 5155, column: 11, scope: !12933)
!12935 = !DILocation(line: 5155, column: 47, scope: !12933)
!12936 = !DILocation(line: 5155, column: 3, scope: !12933)
!12937 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12642, file: !12642, line: 540, type: !12938, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12940)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!12685, !152, !152, !12752, !12759}
!12940 = !{!12941, !12942, !12943, !12944, !12945, !12946}
!12941 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12937, file: !12642, line: 540, type: !152)
!12942 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12937, file: !12642, line: 540, type: !152)
!12943 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12937, file: !12642, line: 541, type: !12752)
!12944 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12937, file: !12642, line: 541, type: !12759)
!12945 = !DILocalVariable(name: "status", scope: !12937, file: !12642, line: 543, type: !12685)
!12946 = !DILocalVariable(name: "pllfreq", scope: !12937, file: !12642, line: 544, type: !152)
!12947 = !DILocation(line: 0, scope: !12937)
!12948 = !DILocation(line: 551, column: 6, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12937, file: !12642, line: 551, column: 6)
!12950 = !DILocation(line: 551, column: 25, scope: !12949)
!12951 = !DILocation(line: 551, column: 6, scope: !12937)
!12952 = !DILocation(line: 554, column: 15, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12949, file: !12642, line: 552, column: 3)
!12954 = !DILocation(line: 557, column: 8, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12953, file: !12642, line: 557, column: 8)
!12956 = !DILocation(line: 557, column: 29, scope: !12955)
!12957 = !DILocation(line: 557, column: 8, scope: !12953)
!12958 = !DILocation(line: 560, column: 20, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !12642, line: 560, column: 10)
!12960 = distinct !DILexicalBlock(scope: !12955, file: !12642, line: 558, column: 5)
!12961 = !DILocation(line: 560, column: 10, scope: !12960)
!12962 = !DILocation(line: 562, column: 9, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12959, file: !12642, line: 561, column: 7)
!12964 = !DILocation(line: 563, column: 7, scope: !12963)
!12965 = !DILocation(line: 566, column: 9, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12959, file: !12642, line: 565, column: 7)
!12967 = !DILocation(line: 570, column: 7, scope: !12960)
!12968 = !DILocation(line: 571, column: 7, scope: !12960)
!12969 = !DILocation(line: 571, column: 14, scope: !12960)
!12970 = !DILocation(line: 571, column: 35, scope: !12960)
!12971 = distinct !{!12971, !12968, !12972}
!12972 = !DILocation(line: 574, column: 7, scope: !12960)
!12973 = !DILocation(line: 578, column: 76, scope: !12953)
!12974 = !DILocation(line: 578, column: 103, scope: !12953)
!12975 = !DILocation(line: 579, column: 54, scope: !12953)
!12976 = !DILocation(line: 578, column: 5, scope: !12953)
!12977 = !DILocation(line: 582, column: 14, scope: !12953)
!12978 = !DILocation(line: 583, column: 3, scope: !12953)
!12979 = !DILocation(line: 0, scope: !12949)
!12980 = !DILocation(line: 590, column: 3, scope: !12937)
!12981 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9590, file: !9590, line: 2969, type: !6363, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12982 = !DILocation(line: 2971, column: 11, scope: !12981)
!12983 = !DILocation(line: 2971, column: 44, scope: !12981)
!12984 = !DILocation(line: 2971, column: 3, scope: !12981)
!12985 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9590, file: !9590, line: 2929, type: !3111, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12986 = !DILocation(line: 2931, column: 3, scope: !12985)
!12987 = !DILocation(line: 2932, column: 1, scope: !12985)
!12988 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9590, file: !9590, line: 2939, type: !3111, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12989 = !DILocation(line: 2941, column: 3, scope: !12988)
!12990 = !DILocation(line: 2942, column: 1, scope: !12988)
!12991 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9590, file: !9590, line: 2949, type: !3111, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12992 = !DILocation(line: 2951, column: 3, scope: !12991)
!12993 = !DILocation(line: 2952, column: 1, scope: !12991)
!12994 = distinct !DISubprogram(name: "z_device_state_init", scope: !12995, file: !12995, line: 23, type: !3111, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12996)
!12995 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12996 = !{!12997}
!12997 = !DILocalVariable(name: "dev", scope: !12994, file: !12995, line: 25, type: !12998)
!12998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12999, size: 32)
!12999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13000)
!13000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !13001)
!13001 = !{!13002, !13003, !13004, !13005, !13011, !13012}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13000, file: !247, line: 380, baseType: !118, size: 32)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13000, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13000, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13000, file: !247, line: 386, baseType: !13006, size: 32, offset: 96)
!13006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13007, size: 32)
!13007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13008)
!13008 = !{!13009, !13010}
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13007, file: !247, line: 359, baseType: !195, size: 8)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13007, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13000, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13000, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13013 = !DILocation(line: 0, scope: !12994)
!13014 = !DILocation(line: 31, column: 1, scope: !12994)
!13015 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12995, file: !12995, line: 33, type: !13016, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13018)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{!12998, !118}
!13018 = !{!13019, !13020}
!13019 = !DILocalVariable(name: "name", arg: 1, scope: !13015, file: !12995, line: 33, type: !118)
!13020 = !DILocalVariable(name: "dev", scope: !13015, file: !12995, line: 35, type: !12998)
!13021 = !DILocation(line: 0, scope: !13015)
!13022 = !DILocation(line: 40, column: 12, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13015, file: !12995, line: 40, column: 6)
!13024 = !DILocation(line: 40, column: 21, scope: !13023)
!13025 = !DILocation(line: 40, column: 25, scope: !13023)
!13026 = !DILocation(line: 40, column: 33, scope: !13023)
!13027 = !DILocation(line: 40, column: 6, scope: !13015)
!13028 = !DILocation(line: 55, column: 2, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13015, file: !12995, line: 55, column: 2)
!13030 = !DILocation(line: 50, column: 7, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !12995, line: 50, column: 7)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !12995, line: 49, column: 57)
!13033 = distinct !DILexicalBlock(scope: !13034, file: !12995, line: 49, column: 2)
!13034 = distinct !DILexicalBlock(scope: !13015, file: !12995, line: 49, column: 2)
!13035 = !DILocation(line: 50, column: 30, scope: !13031)
!13036 = !DILocation(line: 50, column: 39, scope: !13031)
!13037 = !DILocation(line: 50, column: 44, scope: !13031)
!13038 = !DILocation(line: 50, column: 7, scope: !13032)
!13039 = !DILocation(line: 49, column: 53, scope: !13033)
!13040 = !DILocation(line: 49, column: 33, scope: !13033)
!13041 = !DILocation(line: 49, column: 2, scope: !13034)
!13042 = distinct !{!13042, !13041, !13043}
!13043 = !DILocation(line: 53, column: 2, scope: !13034)
!13044 = !DILocation(line: 56, column: 7, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13046, file: !12995, line: 56, column: 7)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !12995, line: 55, column: 57)
!13047 = distinct !DILexicalBlock(scope: !13029, file: !12995, line: 55, column: 2)
!13048 = !DILocation(line: 56, column: 30, scope: !13045)
!13049 = !DILocation(line: 56, column: 52, scope: !13045)
!13050 = !DILocation(line: 56, column: 34, scope: !13045)
!13051 = !DILocation(line: 56, column: 58, scope: !13045)
!13052 = !DILocation(line: 56, column: 7, scope: !13046)
!13053 = !DILocation(line: 55, column: 53, scope: !13047)
!13054 = !DILocation(line: 55, column: 33, scope: !13047)
!13055 = distinct !{!13055, !13028, !13056}
!13056 = !DILocation(line: 59, column: 2, scope: !13029)
!13057 = !DILocation(line: 62, column: 1, scope: !13015)
!13058 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12995, file: !12995, line: 93, type: !13059, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13061)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{!145, !12998}
!13061 = !{!13062}
!13062 = !DILocalVariable(name: "dev", arg: 1, scope: !13058, file: !12995, line: 93, type: !12998)
!13063 = !DILocation(line: 0, scope: !13058)
!13064 = !DILocation(line: 99, column: 10, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13058, file: !12995, line: 99, column: 6)
!13066 = !DILocation(line: 99, column: 6, scope: !13058)
!13067 = !DILocation(line: 103, column: 14, scope: !13058)
!13068 = !DILocation(line: 103, column: 21, scope: !13058)
!13069 = !DILocation(line: 103, column: 33, scope: !13058)
!13070 = !DILocation(line: 103, column: 49, scope: !13058)
!13071 = !DILocation(line: 103, column: 58, scope: !13058)
!13072 = !DILocation(line: 104, column: 1, scope: !13058)
!13073 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12995, file: !12995, line: 87, type: !13074, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13077)
!13074 = !DISubroutineType(types: !13075)
!13075 = !{!185, !13076}
!13076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12998, size: 32)
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "devices", arg: 1, scope: !13073, file: !12995, line: 87, type: !13076)
!13079 = !DILocation(line: 0, scope: !13073)
!13080 = !DILocation(line: 89, column: 11, scope: !13073)
!13081 = !DILocation(line: 90, column: 2, scope: !13073)
!13082 = distinct !DISubprogram(name: "device_required_foreach", scope: !12995, file: !12995, line: 125, type: !13083, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13089)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!107, !12998, !13085, !106}
!13085 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13086)
!13086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13087, size: 32)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{!107, !12998, !106}
!13089 = !{!13090, !13091, !13092, !13093, !13094}
!13090 = !DILocalVariable(name: "dev", arg: 1, scope: !13082, file: !12995, line: 125, type: !12998)
!13091 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13082, file: !12995, line: 126, type: !13085)
!13092 = !DILocalVariable(name: "context", arg: 3, scope: !13082, file: !12995, line: 127, type: !106)
!13093 = !DILocalVariable(name: "handle_count", scope: !13082, file: !12995, line: 129, type: !185)
!13094 = !DILocalVariable(name: "handles", scope: !13082, file: !12995, line: 130, type: !260)
!13095 = !DILocation(line: 0, scope: !13082)
!13096 = !DILocation(line: 129, column: 2, scope: !13082)
!13097 = !DILocation(line: 129, column: 9, scope: !13082)
!13098 = !DILocation(line: 130, column: 35, scope: !13082)
!13099 = !DILocation(line: 132, column: 33, scope: !13082)
!13100 = !DILocation(line: 132, column: 9, scope: !13082)
!13101 = !DILocation(line: 133, column: 1, scope: !13082)
!13102 = !DILocation(line: 132, column: 2, scope: !13082)
!13103 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13104, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13106)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{!260, !12998, !2561}
!13106 = !{!13107, !13108, !13109, !13110}
!13107 = !DILocalVariable(name: "dev", arg: 1, scope: !13103, file: !247, line: 493, type: !12998)
!13108 = !DILocalVariable(name: "count", arg: 2, scope: !13103, file: !247, line: 493, type: !2561)
!13109 = !DILocalVariable(name: "rv", scope: !13103, file: !247, line: 495, type: !260)
!13110 = !DILocalVariable(name: "i", scope: !13111, file: !247, line: 498, type: !185)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !247, line: 497, column: 18)
!13112 = distinct !DILexicalBlock(scope: !13103, file: !247, line: 497, column: 6)
!13113 = !DILocation(line: 0, scope: !13103)
!13114 = !DILocation(line: 495, column: 35, scope: !13103)
!13115 = !DILocation(line: 497, column: 9, scope: !13112)
!13116 = !DILocation(line: 497, column: 6, scope: !13103)
!13117 = !DILocation(line: 0, scope: !13111)
!13118 = !DILocation(line: 500, column: 11, scope: !13111)
!13119 = !DILocation(line: 500, column: 40, scope: !13111)
!13120 = !DILocation(line: 502, column: 4, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13111, file: !247, line: 501, column: 40)
!13122 = distinct !{!13122, !13123, !13124}
!13123 = !DILocation(line: 500, column: 3, scope: !13111)
!13124 = !DILocation(line: 503, column: 3, scope: !13111)
!13125 = !DILocation(line: 504, column: 10, scope: !13111)
!13126 = !DILocation(line: 505, column: 2, scope: !13111)
!13127 = !DILocation(line: 507, column: 2, scope: !13103)
!13128 = distinct !DISubprogram(name: "device_visitor", scope: !12995, file: !12995, line: 106, type: !13129, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13131)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{!107, !260, !185, !13085, !106}
!13131 = !{!13132, !13133, !13134, !13135, !13136, !13138, !13141, !13142}
!13132 = !DILocalVariable(name: "handles", arg: 1, scope: !13128, file: !12995, line: 106, type: !260)
!13133 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13128, file: !12995, line: 107, type: !185)
!13134 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13128, file: !12995, line: 108, type: !13085)
!13135 = !DILocalVariable(name: "context", arg: 4, scope: !13128, file: !12995, line: 109, type: !106)
!13136 = !DILocalVariable(name: "i", scope: !13137, file: !12995, line: 112, type: !185)
!13137 = distinct !DILexicalBlock(scope: !13128, file: !12995, line: 112, column: 2)
!13138 = !DILocalVariable(name: "dh", scope: !13139, file: !12995, line: 113, type: !262)
!13139 = distinct !DILexicalBlock(scope: !13140, file: !12995, line: 112, column: 44)
!13140 = distinct !DILexicalBlock(scope: !13137, file: !12995, line: 112, column: 2)
!13141 = !DILocalVariable(name: "rdev", scope: !13139, file: !12995, line: 114, type: !12998)
!13142 = !DILocalVariable(name: "rc", scope: !13139, file: !12995, line: 115, type: !107)
!13143 = !DILocation(line: 0, scope: !13128)
!13144 = !DILocation(line: 0, scope: !13137)
!13145 = !DILocation(line: 112, column: 23, scope: !13140)
!13146 = !DILocation(line: 112, column: 2, scope: !13137)
!13147 = distinct !{!13147, !13146, !13148}
!13148 = !DILocation(line: 120, column: 2, scope: !13137)
!13149 = !DILocation(line: 113, column: 24, scope: !13139)
!13150 = !DILocation(line: 0, scope: !13139)
!13151 = !DILocation(line: 114, column: 31, scope: !13139)
!13152 = !DILocation(line: 115, column: 12, scope: !13139)
!13153 = !DILocation(line: 117, column: 10, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13139, file: !12995, line: 117, column: 7)
!13155 = !DILocation(line: 112, column: 39, scope: !13140)
!13156 = !DILocation(line: 123, column: 1, scope: !13128)
!13157 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13158, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13160)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!12998, !262}
!13160 = !{!13161, !13162, !13163}
!13161 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13157, file: !247, line: 439, type: !262)
!13162 = !DILocalVariable(name: "dev", scope: !13157, file: !247, line: 443, type: !12998)
!13163 = !DILocalVariable(name: "numdev", scope: !13157, file: !247, line: 444, type: !185)
!13164 = !DILocation(line: 0, scope: !13157)
!13165 = !DILocation(line: 446, column: 7, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13157, file: !247, line: 446, column: 6)
!13167 = !DILocation(line: 446, column: 18, scope: !13166)
!13168 = !DILocation(line: 446, column: 23, scope: !13166)
!13169 = !DILocation(line: 450, column: 2, scope: !13157)
!13170 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12995, file: !12995, line: 135, type: !13083, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13171)
!13171 = !{!13172, !13173, !13174, !13175, !13176}
!13172 = !DILocalVariable(name: "dev", arg: 1, scope: !13170, file: !12995, line: 135, type: !12998)
!13173 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13170, file: !12995, line: 136, type: !13085)
!13174 = !DILocalVariable(name: "context", arg: 3, scope: !13170, file: !12995, line: 137, type: !106)
!13175 = !DILocalVariable(name: "handle_count", scope: !13170, file: !12995, line: 139, type: !185)
!13176 = !DILocalVariable(name: "handles", scope: !13170, file: !12995, line: 140, type: !260)
!13177 = !DILocation(line: 0, scope: !13170)
!13178 = !DILocation(line: 139, column: 2, scope: !13170)
!13179 = !DILocation(line: 139, column: 9, scope: !13170)
!13180 = !DILocation(line: 140, column: 35, scope: !13170)
!13181 = !DILocation(line: 142, column: 33, scope: !13170)
!13182 = !DILocation(line: 142, column: 9, scope: !13170)
!13183 = !DILocation(line: 143, column: 1, scope: !13170)
!13184 = !DILocation(line: 142, column: 2, scope: !13170)
!13185 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13104, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13186)
!13186 = !{!13187, !13188, !13189, !13190, !13191}
!13187 = !DILocalVariable(name: "dev", arg: 1, scope: !13185, file: !247, line: 573, type: !12998)
!13188 = !DILocalVariable(name: "count", arg: 2, scope: !13185, file: !247, line: 573, type: !2561)
!13189 = !DILocalVariable(name: "rv", scope: !13185, file: !247, line: 575, type: !260)
!13190 = !DILocalVariable(name: "region", scope: !13185, file: !247, line: 576, type: !185)
!13191 = !DILocalVariable(name: "i", scope: !13185, file: !247, line: 577, type: !185)
!13192 = !DILocation(line: 0, scope: !13185)
!13193 = !DILocation(line: 575, column: 35, scope: !13185)
!13194 = !DILocation(line: 579, column: 9, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13185, file: !247, line: 579, column: 6)
!13196 = !DILocation(line: 579, column: 6, scope: !13185)
!13197 = !DILocation(line: 582, column: 8, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !247, line: 582, column: 8)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !247, line: 581, column: 23)
!13200 = distinct !DILexicalBlock(scope: !13195, file: !247, line: 579, column: 18)
!13201 = !DILocation(line: 582, column: 12, scope: !13198)
!13202 = !DILocation(line: 585, column: 6, scope: !13199)
!13203 = !DILocation(line: 0, scope: !13200)
!13204 = !DILocation(line: 581, column: 17, scope: !13200)
!13205 = !DILocation(line: 581, column: 3, scope: !13200)
!13206 = !DILocation(line: 588, column: 10, scope: !13200)
!13207 = !DILocation(line: 588, column: 16, scope: !13200)
!13208 = !DILocation(line: 589, column: 4, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13200, file: !247, line: 588, column: 39)
!13210 = !DILocation(line: 588, column: 3, scope: !13200)
!13211 = distinct !{!13211, !13210, !13212}
!13212 = !DILocation(line: 590, column: 3, scope: !13200)
!13213 = !DILocation(line: 591, column: 10, scope: !13200)
!13214 = !DILocation(line: 592, column: 2, scope: !13200)
!13215 = !DILocation(line: 575, column: 25, scope: !13185)
!13216 = !DILocation(line: 594, column: 2, scope: !13185)
!13217 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1973, file: !1973, line: 49, type: !13218, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2182)
!13218 = !DISubroutineType(types: !13219)
!13219 = !{!187}
!13220 = !DILocation(line: 51, column: 10, scope: !13217)
!13221 = !DILocation(line: 51, column: 20, scope: !13217)
!13222 = !DILocation(line: 51, column: 2, scope: !13217)
!13223 = distinct !DISubprogram(name: "coredump", scope: !3078, file: !3078, line: 209, type: !13224, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13373)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{null, !32, !13226, !13270}
!13226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13227, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !13229)
!13229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !13230)
!13230 = !{!13231}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13229, file: !2691, line: 107, baseType: !13232, size: 256)
!13232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !13233)
!13233 = !{!13234, !13239, !13244, !13249, !13254, !13259, !13264, !13269}
!13234 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 99, baseType: !13235, size: 32)
!13235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 99, size: 32, elements: !13236)
!13236 = !{!13237, !13238}
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13235, file: !2691, line: 99, baseType: !152, size: 32)
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13235, file: !2691, line: 99, baseType: !152, size: 32)
!13239 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 100, baseType: !13240, size: 32, offset: 32)
!13240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 100, size: 32, elements: !13241)
!13241 = !{!13242, !13243}
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13240, file: !2691, line: 100, baseType: !152, size: 32)
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13240, file: !2691, line: 100, baseType: !152, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 101, baseType: !13245, size: 32, offset: 64)
!13245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 101, size: 32, elements: !13246)
!13246 = !{!13247, !13248}
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13245, file: !2691, line: 101, baseType: !152, size: 32)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13245, file: !2691, line: 101, baseType: !152, size: 32)
!13249 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 102, baseType: !13250, size: 32, offset: 96)
!13250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 102, size: 32, elements: !13251)
!13251 = !{!13252, !13253}
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13250, file: !2691, line: 102, baseType: !152, size: 32)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13250, file: !2691, line: 102, baseType: !152, size: 32)
!13254 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 103, baseType: !13255, size: 32, offset: 128)
!13255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 103, size: 32, elements: !13256)
!13256 = !{!13257, !13258}
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13255, file: !2691, line: 103, baseType: !152, size: 32)
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13255, file: !2691, line: 103, baseType: !152, size: 32)
!13259 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 104, baseType: !13260, size: 32, offset: 160)
!13260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 104, size: 32, elements: !13261)
!13261 = !{!13262, !13263}
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13260, file: !2691, line: 104, baseType: !152, size: 32)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13260, file: !2691, line: 104, baseType: !152, size: 32)
!13264 = !DIDerivedType(tag: DW_TAG_member, scope: !13232, file: !2691, line: 105, baseType: !13265, size: 32, offset: 192)
!13265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13232, file: !2691, line: 105, size: 32, elements: !13266)
!13266 = !{!13267, !13268}
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13265, file: !2691, line: 105, baseType: !152, size: 32)
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13265, file: !2691, line: 105, baseType: !152, size: 32)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13232, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!13270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13271, size: 32)
!13271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13272)
!13272 = !{!13273, !13331, !13343, !13344, !13345, !13346, !13347, !13353, !13368}
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13271, file: !309, line: 247, baseType: !13274, size: 384)
!13274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13275)
!13275 = !{!13276, !13300, !13307, !13308, !13309, !13318, !13319, !13320}
!13276 = !DIDerivedType(tag: DW_TAG_member, scope: !13274, file: !309, line: 60, baseType: !13277, size: 64)
!13277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13274, file: !309, line: 60, size: 64, elements: !13278)
!13278 = !{!13279, !13294}
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13277, file: !309, line: 61, baseType: !13280, size: 64)
!13280 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13281)
!13281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13282)
!13282 = !{!13283, !13289}
!13283 = !DIDerivedType(tag: DW_TAG_member, scope: !13281, file: !319, line: 38, baseType: !13284, size: 32)
!13284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13281, file: !319, line: 38, size: 32, elements: !13285)
!13285 = !{!13286, !13288}
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13284, file: !319, line: 39, baseType: !13287, size: 32)
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13281, size: 32)
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13284, file: !319, line: 40, baseType: !13287, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_member, scope: !13281, file: !319, line: 42, baseType: !13290, size: 32, offset: 32)
!13290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13281, file: !319, line: 42, size: 32, elements: !13291)
!13291 = !{!13292, !13293}
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13290, file: !319, line: 43, baseType: !13287, size: 32)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13290, file: !319, line: 44, baseType: !13287, size: 32)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13277, file: !309, line: 62, baseType: !13295, size: 64)
!13295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13296)
!13296 = !{!13297}
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13295, file: !335, line: 50, baseType: !13298, size: 64)
!13298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13299, size: 64, elements: !340)
!13299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13295, size: 32)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13274, file: !309, line: 68, baseType: !13301, size: 32, offset: 64)
!13301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13302, size: 32)
!13302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13303)
!13303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13304)
!13304 = !{!13305}
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13303, file: !345, line: 232, baseType: !13306, size: 64)
!13306 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13281)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13274, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13274, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13309 = !DIDerivedType(tag: DW_TAG_member, scope: !13274, file: !309, line: 90, baseType: !13310, size: 16, offset: 112)
!13310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13274, file: !309, line: 90, size: 16, elements: !13311)
!13311 = !{!13312, !13317}
!13312 = !DIDerivedType(tag: DW_TAG_member, scope: !13310, file: !309, line: 91, baseType: !13313, size: 16)
!13313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13310, file: !309, line: 91, size: 16, elements: !13314)
!13314 = !{!13315, !13316}
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13313, file: !309, line: 96, baseType: !359, size: 8)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13313, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13310, file: !309, line: 100, baseType: !197, size: 16)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13274, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13274, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13274, file: !309, line: 131, baseType: !13321, size: 192, offset: 192)
!13321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13322)
!13322 = !{!13323, !13324, !13330}
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13321, file: !345, line: 245, baseType: !13280, size: 64)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13321, file: !345, line: 246, baseType: !13325, size: 32, offset: 64)
!13325 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13326)
!13326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13327, size: 32)
!13327 = !DISubroutineType(types: !13328)
!13328 = !{null, !13329}
!13329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13321, size: 32)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13321, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13271, file: !309, line: 250, baseType: !13332, size: 288, offset: 384)
!13332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13333)
!13333 = !{!13334, !13335, !13336, !13337, !13338, !13339, !13340, !13341, !13342}
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13332, file: !379, line: 26, baseType: !152, size: 32)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13332, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13332, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13332, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13332, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13332, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13332, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13332, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13332, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13271, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13271, file: !309, line: 256, baseType: !13302, size: 64, offset: 704)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13271, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13271, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13271, file: !309, line: 300, baseType: !13348, size: 96, offset: 1056)
!13348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13349)
!13349 = !{!13350, !13351, !13352}
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13348, file: !309, line: 153, baseType: !22, size: 32)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13348, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13348, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13271, file: !309, line: 325, baseType: !13354, size: 32, offset: 1152)
!13354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13355, size: 32)
!13355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13356)
!13356 = !{!13357, !13363, !13364}
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13355, file: !406, line: 5074, baseType: !13358, size: 96)
!13358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13359)
!13359 = !{!13360, !13361, !13362}
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13358, file: !410, line: 57, baseType: !413, size: 32)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13358, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13358, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13355, file: !406, line: 5075, baseType: !13302, size: 64, offset: 96)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13355, file: !406, line: 5076, baseType: !13365, size: 32, offset: 160)
!13365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13366)
!13366 = !{!13367}
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13365, file: !420, line: 52, baseType: !22, size: 32)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13271, file: !309, line: 343, baseType: !13369, size: 64, offset: 1184)
!13369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13370)
!13370 = !{!13371, !13372}
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13369, file: !379, line: 63, baseType: !152, size: 32)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13369, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13373 = !{!13374, !13375, !13376}
!13374 = !DILocalVariable(name: "reason", arg: 1, scope: !13223, file: !3078, line: 209, type: !32)
!13375 = !DILocalVariable(name: "esf", arg: 2, scope: !13223, file: !3078, line: 209, type: !13226)
!13376 = !DILocalVariable(name: "thread", arg: 3, scope: !13223, file: !3078, line: 210, type: !13270)
!13377 = !DILocation(line: 0, scope: !13223)
!13378 = !DILocation(line: 212, column: 1, scope: !13223)
!13379 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3078, file: !3078, line: 214, type: !13380, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13382)
!13380 = !DISubroutineType(types: !13381)
!13381 = !{null, !22, !22}
!13382 = !{!13383, !13384}
!13383 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13379, file: !3078, line: 214, type: !22)
!13384 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13379, file: !3078, line: 214, type: !22)
!13385 = !DILocation(line: 0, scope: !13379)
!13386 = !DILocation(line: 216, column: 1, scope: !13379)
!13387 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3078, file: !3078, line: 218, type: !13388, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13390)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{null, !194, !185}
!13390 = !{!13391, !13392}
!13391 = !DILocalVariable(name: "buf", arg: 1, scope: !13387, file: !3078, line: 218, type: !194)
!13392 = !DILocalVariable(name: "buflen", arg: 2, scope: !13387, file: !3078, line: 218, type: !185)
!13393 = !DILocation(line: 0, scope: !13387)
!13394 = !DILocation(line: 220, column: 1, scope: !13387)
!13395 = distinct !DISubprogram(name: "coredump_query", scope: !3078, file: !3078, line: 222, type: !13396, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13398)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{!107, !3077, !106}
!13398 = !{!13399, !13400}
!13399 = !DILocalVariable(name: "query_id", arg: 1, scope: !13395, file: !3078, line: 222, type: !3077)
!13400 = !DILocalVariable(name: "arg", arg: 2, scope: !13395, file: !3078, line: 222, type: !106)
!13401 = !DILocation(line: 0, scope: !13395)
!13402 = !DILocation(line: 224, column: 2, scope: !13395)
!13403 = distinct !DISubprogram(name: "coredump_cmd", scope: !3078, file: !3078, line: 227, type: !13404, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13406)
!13404 = !DISubroutineType(types: !13405)
!13405 = !{!107, !3084, !106}
!13406 = !{!13407, !13408}
!13407 = !DILocalVariable(name: "query_id", arg: 1, scope: !13403, file: !3078, line: 227, type: !3084)
!13408 = !DILocalVariable(name: "arg", arg: 2, scope: !13403, file: !3078, line: 227, type: !106)
!13409 = !DILocation(line: 0, scope: !13403)
!13410 = !DILocation(line: 229, column: 2, scope: !13403)
!13411 = distinct !DISubprogram(name: "arch_system_halt", scope: !13412, file: !13412, line: 23, type: !5968, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13413)
!13412 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13413 = !{!13414}
!13414 = !DILocalVariable(name: "reason", arg: 1, scope: !13411, file: !13412, line: 23, type: !32)
!13415 = !DILocation(line: 0, scope: !13411)
!13416 = !DILocation(line: 55, column: 2, scope: !13417, inlinedAt: !13421)
!13417 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13418)
!13418 = !{!13419, !13420}
!13419 = !DILocalVariable(name: "key", scope: !13417, file: !5957, line: 44, type: !32)
!13420 = !DILocalVariable(name: "tmp", scope: !13417, file: !5957, line: 53, type: !32)
!13421 = distinct !DILocation(line: 31, column: 8, scope: !13411)
!13422 = !{i64 2043387}
!13423 = !DILocation(line: 0, scope: !13417, inlinedAt: !13421)
!13424 = !DILocation(line: 32, column: 2, scope: !13411)
!13425 = !DILocation(line: 32, column: 2, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !13412, line: 32, column: 2)
!13427 = distinct !DILexicalBlock(scope: !13411, file: !13412, line: 32, column: 2)
!13428 = distinct !{!13428, !13429, !13430}
!13429 = !DILocation(line: 32, column: 2, scope: !13427)
!13430 = !DILocation(line: 34, column: 2, scope: !13427)
!13431 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13412, file: !13412, line: 39, type: !13432, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13434)
!13432 = !DISubroutineType(types: !13433)
!13433 = !{null, !32, !13226}
!13434 = !{!13435, !13436}
!13435 = !DILocalVariable(name: "reason", arg: 1, scope: !13431, file: !13412, line: 39, type: !32)
!13436 = !DILocalVariable(name: "esf", arg: 2, scope: !13431, file: !13412, line: 40, type: !13226)
!13437 = !DILocation(line: 0, scope: !13431)
!13438 = !DILocation(line: 45, column: 2, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !13412, line: 45, column: 2)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !13412, line: 45, column: 2)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !13412, line: 45, column: 2)
!13442 = distinct !DILexicalBlock(scope: !13431, file: !13412, line: 45, column: 2)
!13443 = !DILocation(line: 46, column: 2, scope: !13431)
!13444 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13412, file: !13412, line: 81, type: !5968, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13445)
!13445 = !{!13446}
!13446 = !DILocalVariable(name: "reason", arg: 1, scope: !13444, file: !13412, line: 81, type: !32)
!13447 = !DILocation(line: 0, scope: !13444)
!13448 = !DILocation(line: 83, column: 2, scope: !13444)
!13449 = distinct !DISubprogram(name: "z_fatal_error", scope: !13412, file: !13412, line: 96, type: !13432, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13450)
!13450 = !{!13451, !13452, !13453, !13454}
!13451 = !DILocalVariable(name: "reason", arg: 1, scope: !13449, file: !13412, line: 96, type: !32)
!13452 = !DILocalVariable(name: "esf", arg: 2, scope: !13449, file: !13412, line: 96, type: !13226)
!13453 = !DILocalVariable(name: "key", scope: !13449, file: !13412, line: 102, type: !32)
!13454 = !DILocalVariable(name: "thread", scope: !13449, file: !13412, line: 103, type: !13270)
!13455 = !DILocation(line: 0, scope: !13449)
!13456 = !DILocation(line: 55, column: 2, scope: !13417, inlinedAt: !13457)
!13457 = distinct !DILocation(line: 102, column: 21, scope: !13449)
!13458 = !DILocation(line: 0, scope: !13417, inlinedAt: !13457)
!13459 = !DILocation(line: 104, column: 4, scope: !13449)
!13460 = !DILocation(line: 109, column: 2, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13462, file: !13412, line: 109, column: 2)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !13412, line: 109, column: 2)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !13412, line: 109, column: 2)
!13464 = distinct !DILexicalBlock(scope: !13449, file: !13412, line: 109, column: 2)
!13465 = !DILocation(line: 119, column: 11, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13449, file: !13412, line: 119, column: 6)
!13467 = !DILocation(line: 119, column: 20, scope: !13466)
!13468 = !DILocalVariable(name: "esf", arg: 1, scope: !13469, file: !7328, line: 71, type: !13226)
!13469 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7328, file: !7328, line: 71, type: !13470, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13472)
!13470 = !DISubroutineType(types: !13471)
!13471 = !{!145, !13226}
!13472 = !{!13468}
!13473 = !DILocation(line: 0, scope: !13469, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 119, column: 23, scope: !13466)
!13475 = !DILocation(line: 73, column: 21, scope: !13469, inlinedAt: !13474)
!13476 = !DILocation(line: 73, column: 26, scope: !13469, inlinedAt: !13474)
!13477 = !DILocation(line: 73, column: 9, scope: !13469, inlinedAt: !13474)
!13478 = !DILocation(line: 119, column: 6, scope: !13449)
!13479 = !DILocation(line: 120, column: 3, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !13412, line: 120, column: 3)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !13412, line: 120, column: 3)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !13412, line: 120, column: 3)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !13412, line: 120, column: 3)
!13484 = distinct !DILexicalBlock(scope: !13466, file: !13412, line: 119, column: 57)
!13485 = !DILocation(line: 121, column: 2, scope: !13484)
!13486 = !DILocation(line: 124, column: 2, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !13412, line: 124, column: 2)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !13412, line: 124, column: 2)
!13489 = distinct !DILexicalBlock(scope: !13490, file: !13412, line: 124, column: 2)
!13490 = distinct !DILexicalBlock(scope: !13449, file: !13412, line: 124, column: 2)
!13491 = !DILocation(line: 131, column: 2, scope: !13449)
!13492 = !DILocation(line: 0, scope: !13469, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 163, column: 24, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !13412, line: 163, column: 7)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !13412, line: 160, column: 9)
!13496 = distinct !DILexicalBlock(scope: !13449, file: !13412, line: 146, column: 6)
!13497 = !DILocation(line: 73, column: 21, scope: !13469, inlinedAt: !13493)
!13498 = !DILocation(line: 73, column: 26, scope: !13469, inlinedAt: !13493)
!13499 = !DILocation(line: 73, column: 9, scope: !13469, inlinedAt: !13493)
!13500 = !DILocation(line: 163, column: 7, scope: !13495)
!13501 = !DILocalVariable(name: "key", arg: 1, scope: !13502, file: !5957, line: 84, type: !32)
!13502 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13503)
!13503 = !{!13501}
!13504 = !DILocation(line: 0, scope: !13502, inlinedAt: !13505)
!13505 = distinct !DILocation(line: 171, column: 4, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13494, file: !13412, line: 163, column: 58)
!13507 = !DILocation(line: 95, column: 2, scope: !13502, inlinedAt: !13505)
!13508 = !{i64 2044204}
!13509 = !DILocation(line: 172, column: 4, scope: !13506)
!13510 = !DILocation(line: 163, column: 21, scope: !13494)
!13511 = !DILocation(line: 178, column: 15, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !13412, line: 178, column: 8)
!13513 = distinct !DILexicalBlock(scope: !13494, file: !13412, line: 174, column: 10)
!13514 = !DILocation(line: 0, scope: !13502, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 179, column: 5, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13512, file: !13412, line: 178, column: 38)
!13517 = !DILocation(line: 0, scope: !13502, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 186, column: 2, scope: !13449)
!13519 = !DILocation(line: 178, column: 8, scope: !13513)
!13520 = !DILocation(line: 189, column: 3, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !13412, line: 188, column: 41)
!13522 = distinct !DILexicalBlock(scope: !13449, file: !13412, line: 188, column: 6)
!13523 = !DILocation(line: 191, column: 1, scope: !13449)
!13524 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13525, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !2182)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{!13527}
!13527 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13270)
!13528 = !DILocation(line: 535, column: 9, scope: !13524)
!13529 = !DILocation(line: 535, column: 2, scope: !13524)
!13530 = distinct !DISubprogram(name: "reason_to_str", scope: !13412, file: !13412, line: 62, type: !13531, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!118, !32}
!13533 = !{!13534}
!13534 = !DILocalVariable(name: "reason", arg: 1, scope: !13530, file: !13412, line: 62, type: !32)
!13535 = !DILocation(line: 0, scope: !13530)
!13536 = !DILocation(line: 64, column: 2, scope: !13530)
!13537 = !DILocation(line: 0, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13530, file: !13412, line: 64, column: 18)
!13539 = !DILocation(line: 78, column: 1, scope: !13530)
!13540 = distinct !DISubprogram(name: "thread_name_get", scope: !13412, file: !13412, line: 51, type: !13541, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13543)
!13541 = !DISubroutineType(types: !13542)
!13542 = !{!118, !13270}
!13543 = !{!13544, !13545}
!13544 = !DILocalVariable(name: "thread", arg: 1, scope: !13540, file: !13412, line: 51, type: !13270)
!13545 = !DILocalVariable(name: "thread_name", scope: !13540, file: !13412, line: 53, type: !118)
!13546 = !DILocation(line: 0, scope: !13540)
!13547 = !DILocation(line: 53, column: 36, scope: !13540)
!13548 = !DILocation(line: 53, column: 28, scope: !13540)
!13549 = !DILocation(line: 53, column: 47, scope: !13540)
!13550 = !DILocation(line: 55, column: 19, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13540, file: !13412, line: 55, column: 6)
!13552 = !DILocation(line: 55, column: 28, scope: !13551)
!13553 = !DILocation(line: 55, column: 32, scope: !13551)
!13554 = !DILocation(line: 55, column: 47, scope: !13551)
!13555 = !DILocation(line: 55, column: 6, scope: !13540)
!13556 = !DILocation(line: 57, column: 2, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13551, file: !13412, line: 55, column: 57)
!13558 = !DILocation(line: 59, column: 2, scope: !13540)
!13559 = distinct !DISubprogram(name: "k_thread_abort", scope: !4442, file: !4442, line: 188, type: !13560, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13562)
!13560 = !DISubroutineType(types: !13561)
!13561 = !{null, !13527}
!13562 = !{!13563}
!13563 = !DILocalVariable(name: "thread", arg: 1, scope: !13559, file: !4442, line: 188, type: !13527)
!13564 = !DILocation(line: 0, scope: !13559)
!13565 = !DILocation(line: 197, column: 2, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13559, file: !4442, line: 197, column: 2)
!13567 = !{i64 2154159708}
!13568 = !DILocation(line: 198, column: 2, scope: !13559)
!13569 = !DILocation(line: 199, column: 1, scope: !13559)
!13570 = distinct !DISubprogram(name: "z_current_get", scope: !4442, file: !4442, line: 173, type: !13525, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !2182)
!13571 = !DILocation(line: 180, column: 2, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13570, file: !4442, line: 180, column: 2)
!13573 = !{i64 2154159640}
!13574 = !DILocation(line: 181, column: 9, scope: !13570)
!13575 = !DILocation(line: 181, column: 2, scope: !13570)
!13576 = distinct !DISubprogram(name: "z_early_memset", scope: !1981, file: !1981, line: 108, type: !13577, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13579)
!13577 = !DISubroutineType(types: !13578)
!13578 = !{null, !106, !107, !185}
!13579 = !{!13580, !13581, !13582}
!13580 = !DILocalVariable(name: "dst", arg: 1, scope: !13576, file: !1981, line: 108, type: !106)
!13581 = !DILocalVariable(name: "c", arg: 2, scope: !13576, file: !1981, line: 108, type: !107)
!13582 = !DILocalVariable(name: "n", arg: 3, scope: !13576, file: !1981, line: 108, type: !185)
!13583 = !DILocation(line: 0, scope: !13576)
!13584 = !DILocation(line: 110, column: 9, scope: !13576)
!13585 = !DILocation(line: 111, column: 1, scope: !13576)
!13586 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1981, file: !1981, line: 121, type: !13587, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{null, !106, !13, !185}
!13589 = !{!13590, !13591, !13592}
!13590 = !DILocalVariable(name: "dst", arg: 1, scope: !13586, file: !1981, line: 121, type: !106)
!13591 = !DILocalVariable(name: "src", arg: 2, scope: !13586, file: !1981, line: 121, type: !13)
!13592 = !DILocalVariable(name: "n", arg: 3, scope: !13586, file: !1981, line: 121, type: !185)
!13593 = !DILocation(line: 0, scope: !13586)
!13594 = !DILocation(line: 123, column: 9, scope: !13586)
!13595 = !DILocation(line: 124, column: 1, scope: !13586)
!13596 = distinct !DISubprogram(name: "z_bss_zero", scope: !1981, file: !1981, line: 132, type: !3111, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13597 = !DILocation(line: 143, column: 2, scope: !13596)
!13598 = !DILocation(line: 168, column: 1, scope: !13596)
!13599 = distinct !DISubprogram(name: "z_init_cpu", scope: !1981, file: !1981, line: 372, type: !9190, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13600)
!13600 = !{!13601}
!13601 = !DILocalVariable(name: "id", arg: 1, scope: !13599, file: !1981, line: 372, type: !107)
!13602 = !DILocation(line: 0, scope: !13599)
!13603 = !DILocation(line: 374, column: 2, scope: !13599)
!13604 = !DILocation(line: 375, column: 34, scope: !13599)
!13605 = !DILocation(line: 375, column: 19, scope: !13599)
!13606 = !DILocation(line: 375, column: 31, scope: !13599)
!13607 = !DILocation(line: 376, column: 24, scope: !13599)
!13608 = !DILocation(line: 376, column: 19, scope: !13599)
!13609 = !DILocation(line: 376, column: 22, scope: !13599)
!13610 = !DILocation(line: 378, column: 26, scope: !13599)
!13611 = !DILocation(line: 378, column: 4, scope: !13599)
!13612 = !DILocation(line: 378, column: 50, scope: !13599)
!13613 = !DILocation(line: 377, column: 19, scope: !13599)
!13614 = !DILocation(line: 377, column: 29, scope: !13599)
!13615 = !DILocation(line: 384, column: 1, scope: !13599)
!13616 = distinct !DISubprogram(name: "init_idle_thread", scope: !1981, file: !1981, line: 343, type: !9190, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13617)
!13617 = !{!13618, !13619, !13620, !13623}
!13618 = !DILocalVariable(name: "i", arg: 1, scope: !13616, file: !1981, line: 343, type: !107)
!13619 = !DILocalVariable(name: "thread", scope: !13616, file: !1981, line: 345, type: !2073)
!13620 = !DILocalVariable(name: "stack", scope: !13616, file: !1981, line: 346, type: !13621)
!13621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13622, size: 32)
!13622 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2191)
!13623 = !DILocalVariable(name: "tname", scope: !13616, file: !1981, line: 354, type: !193)
!13624 = !DILocation(line: 0, scope: !13616)
!13625 = !DILocation(line: 345, column: 29, scope: !13616)
!13626 = !DILocation(line: 346, column: 28, scope: !13616)
!13627 = !DILocation(line: 362, column: 37, scope: !13616)
!13628 = !DILocation(line: 362, column: 36, scope: !13616)
!13629 = !DILocation(line: 361, column: 2, scope: !13616)
!13630 = !DILocation(line: 365, column: 2, scope: !13616)
!13631 = !DILocation(line: 370, column: 1, scope: !13616)
!13632 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13633, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13635)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!193, !13621}
!13635 = !{!13636}
!13636 = !DILocalVariable(name: "sym", arg: 1, scope: !13632, file: !577, line: 331, type: !13621)
!13637 = !DILocation(line: 0, scope: !13632)
!13638 = !DILocation(line: 333, column: 21, scope: !13632)
!13639 = !DILocation(line: 333, column: 2, scope: !13632)
!13640 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13641, file: !13641, line: 155, type: !13642, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13644)
!13641 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13642 = !DISubroutineType(types: !13643)
!13643 = !{null, !2073}
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "thread", arg: 1, scope: !13640, file: !13641, line: 155, type: !2073)
!13646 = !DILocation(line: 0, scope: !13640)
!13647 = !DILocation(line: 157, column: 15, scope: !13640)
!13648 = !DILocation(line: 157, column: 28, scope: !13640)
!13649 = !DILocation(line: 158, column: 1, scope: !13640)
!13650 = distinct !DISubprogram(name: "z_cstart", scope: !1981, file: !1981, line: 501, type: !3111, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13651)
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "dummy_thread", scope: !13650, file: !1981, line: 518, type: !2074)
!13653 = !DILocation(line: 507, column: 2, scope: !13650)
!13654 = !DILocation(line: 43, column: 14, scope: !13655, inlinedAt: !13659)
!13655 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13656, file: !13656, line: 40, type: !3111, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13657)
!13656 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13657 = !{!13658}
!13658 = !DILocalVariable(name: "msp", scope: !13655, file: !13656, line: 42, type: !152)
!13659 = distinct !DILocation(line: 44, column: 2, scope: !13660, inlinedAt: !13662)
!13660 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13661, file: !13661, line: 42, type: !3111, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13661 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13662 = distinct !DILocation(line: 510, column: 2, scope: !13650)
!13663 = !DILocation(line: 43, column: 3, scope: !13655, inlinedAt: !13659)
!13664 = !DILocation(line: 43, column: 60, scope: !13655, inlinedAt: !13659)
!13665 = !DILocation(line: 0, scope: !13655, inlinedAt: !13659)
!13666 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13667, file: !6276, line: 1153, type: !152)
!13667 = distinct !DISubprogram(name: "__set_MSP", scope: !6276, file: !6276, line: 1153, type: !6373, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13668)
!13668 = !{!13666}
!13669 = !DILocation(line: 0, scope: !13667, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 46, column: 2, scope: !13655, inlinedAt: !13659)
!13671 = !DILocation(line: 1155, column: 3, scope: !13667, inlinedAt: !13670)
!13672 = !{i64 2937467}
!13673 = !DILocation(line: 62, column: 11, scope: !13655, inlinedAt: !13659)
!13674 = !DILocation(line: 102, column: 2, scope: !13675, inlinedAt: !13676)
!13675 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7328, file: !7328, line: 97, type: !3111, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13676 = distinct !DILocation(line: 45, column: 2, scope: !13660, inlinedAt: !13662)
!13677 = !DILocation(line: 108, column: 2, scope: !13675, inlinedAt: !13676)
!13678 = !DILocation(line: 112, column: 2, scope: !13675, inlinedAt: !13676)
!13679 = !DILocation(line: 113, column: 2, scope: !13675, inlinedAt: !13676)
!13680 = !DILocation(line: 114, column: 2, scope: !13675, inlinedAt: !13676)
!13681 = !DILocation(line: 116, column: 2, scope: !13675, inlinedAt: !13676)
!13682 = !DILocation(line: 123, column: 13, scope: !13675, inlinedAt: !13676)
!13683 = !DILocation(line: 46, column: 2, scope: !13660, inlinedAt: !13662)
!13684 = !DILocation(line: 47, column: 2, scope: !13660, inlinedAt: !13662)
!13685 = !DILocation(line: 174, column: 12, scope: !13686, inlinedAt: !13687)
!13686 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7328, file: !7328, line: 169, type: !3111, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13687 = distinct !DILocation(line: 48, column: 2, scope: !13660, inlinedAt: !13662)
!13688 = !DILocation(line: 179, column: 12, scope: !13686, inlinedAt: !13687)
!13689 = !DILocation(line: 50, column: 2, scope: !13660, inlinedAt: !13662)
!13690 = !DILocation(line: 57, column: 2, scope: !13660, inlinedAt: !13662)
!13691 = !DILocation(line: 518, column: 2, scope: !13650)
!13692 = !DILocation(line: 518, column: 18, scope: !13650)
!13693 = !DILocation(line: 520, column: 2, scope: !13650)
!13694 = !DILocation(line: 523, column: 2, scope: !13650)
!13695 = !DILocation(line: 526, column: 2, scope: !13650)
!13696 = !DILocation(line: 527, column: 2, scope: !13650)
!13697 = !DILocation(line: 543, column: 24, scope: !13650)
!13698 = !DILocation(line: 543, column: 2, scope: !13650)
!13699 = !DILocation(line: 0, scope: !2213)
!13700 = !DILocation(line: 246, column: 15, scope: !2231)
!13701 = !DILocation(line: 246, column: 36, scope: !2230)
!13702 = !DILocation(line: 246, column: 2, scope: !2231)
!13703 = !DILocation(line: 247, column: 37, scope: !2229)
!13704 = !DILocation(line: 0, scope: !2229)
!13705 = !DILocation(line: 248, column: 19, scope: !2229)
!13706 = !DILocation(line: 248, column: 12, scope: !2229)
!13707 = !DILocation(line: 250, column: 11, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !2229, file: !1981, line: 250, column: 7)
!13709 = !DILocation(line: 250, column: 7, scope: !2229)
!13710 = !DILocation(line: 254, column: 11, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !1981, line: 254, column: 8)
!13712 = distinct !DILexicalBlock(scope: !13708, file: !1981, line: 250, column: 20)
!13713 = !DILocation(line: 254, column: 8, scope: !13712)
!13714 = !DILocation(line: 255, column: 9, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13711, file: !1981, line: 254, column: 17)
!13716 = !DILocation(line: 258, column: 9, scope: !13715)
!13717 = !DILocation(line: 261, column: 28, scope: !13715)
!13718 = !DILocation(line: 261, column: 10, scope: !13715)
!13719 = !DILocation(line: 261, column: 17, scope: !13715)
!13720 = !DILocation(line: 261, column: 26, scope: !13715)
!13721 = !DILocation(line: 262, column: 4, scope: !13715)
!13722 = !DILocation(line: 263, column: 9, scope: !13712)
!13723 = !DILocation(line: 263, column: 16, scope: !13712)
!13724 = !DILocation(line: 263, column: 28, scope: !13712)
!13725 = !DILocation(line: 264, column: 3, scope: !13712)
!13726 = !DILocation(line: 246, column: 60, scope: !2230)
!13727 = distinct !{!13727, !13702, !13728}
!13728 = !DILocation(line: 265, column: 2, scope: !2231)
!13729 = !DILocation(line: 266, column: 1, scope: !2213)
!13730 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6316, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13731)
!13731 = !{!13732, !13733}
!13732 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13730, file: !463, line: 1814, type: !900)
!13733 = !DILocalVariable(name: "priority", arg: 2, scope: !13730, file: !463, line: 1814, type: !152)
!13734 = !DILocation(line: 0, scope: !13730)
!13735 = !DILocation(line: 1822, column: 48, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !463, line: 1821, column: 3)
!13737 = distinct !DILexicalBlock(scope: !13730, file: !463, line: 1816, column: 7)
!13738 = !DILocation(line: 1822, column: 32, scope: !13736)
!13739 = !DILocation(line: 1822, column: 40, scope: !13736)
!13740 = !DILocation(line: 1822, column: 5, scope: !13736)
!13741 = !DILocation(line: 1822, column: 46, scope: !13736)
!13742 = !DILocation(line: 1824, column: 1, scope: !13730)
!13743 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13661, file: !13661, line: 32, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!13744 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13745, file: !13745, line: 215, type: !13642, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13746)
!13745 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13746 = !{!13747}
!13747 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13744, file: !13745, line: 215, type: !2073)
!13748 = !DILocation(line: 0, scope: !13744)
!13749 = !DILocation(line: 217, column: 21, scope: !13744)
!13750 = !DILocation(line: 217, column: 34, scope: !13744)
!13751 = !DILocation(line: 221, column: 21, scope: !13744)
!13752 = !DILocation(line: 221, column: 34, scope: !13744)
!13753 = !DILocation(line: 223, column: 27, scope: !13744)
!13754 = !DILocation(line: 223, column: 33, scope: !13744)
!13755 = !DILocation(line: 224, column: 27, scope: !13744)
!13756 = !DILocation(line: 224, column: 32, scope: !13744)
!13757 = !DILocation(line: 232, column: 16, scope: !13744)
!13758 = !DILocation(line: 232, column: 30, scope: !13744)
!13759 = !DILocation(line: 239, column: 24, scope: !13744)
!13760 = !DILocation(line: 240, column: 1, scope: !13744)
!13761 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1981, file: !1981, line: 399, type: !13762, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13764)
!13762 = !DISubroutineType(types: !13763)
!13763 = !{!193}
!13764 = !{!13765}
!13765 = !DILocalVariable(name: "stack_ptr", scope: !13761, file: !1981, line: 401, type: !193)
!13766 = !DILocation(line: 404, column: 2, scope: !13761)
!13767 = !DILocation(line: 416, column: 24, scope: !13761)
!13768 = !DILocation(line: 418, column: 14, scope: !13761)
!13769 = !DILocation(line: 0, scope: !13761)
!13770 = !DILocation(line: 423, column: 2, scope: !13761)
!13771 = !DILocation(line: 424, column: 2, scope: !13761)
!13772 = !DILocation(line: 426, column: 2, scope: !13761)
!13773 = !DILocation(line: 428, column: 2, scope: !13761)
!13774 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1981, file: !1981, line: 432, type: !13775, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13777)
!13775 = !DISubroutineType(types: !13776)
!13776 = !{null, !193}
!13777 = !{!13778}
!13778 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13774, file: !1981, line: 432, type: !193)
!13779 = !DILocation(line: 0, scope: !13774)
!13780 = !DILocation(line: 435, column: 2, scope: !13774)
!13781 = !DILocation(line: 445, column: 2, scope: !13774)
!13782 = distinct !DISubprogram(name: "bg_thread_main", scope: !1981, file: !1981, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13783)
!13783 = !{!13784, !13785, !13786}
!13784 = !DILocalVariable(name: "unused1", arg: 1, scope: !13782, file: !1981, line: 277, type: !106)
!13785 = !DILocalVariable(name: "unused2", arg: 2, scope: !13782, file: !1981, line: 277, type: !106)
!13786 = !DILocalVariable(name: "unused3", arg: 3, scope: !13782, file: !1981, line: 277, type: !106)
!13787 = !DILocation(line: 0, scope: !13782)
!13788 = !DILocation(line: 291, column: 20, scope: !13782)
!13789 = !DILocation(line: 293, column: 2, scope: !13782)
!13790 = !DILocation(line: 297, column: 2, scope: !13782)
!13791 = !DILocation(line: 305, column: 2, scope: !13782)
!13792 = !DILocation(line: 307, column: 2, scope: !13782)
!13793 = !DILocation(line: 330, column: 8, scope: !13782)
!13794 = !DILocation(line: 333, column: 34, scope: !13782)
!13795 = !DILocation(line: 339, column: 1, scope: !13782)
!13796 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2242, file: !2242, line: 45, type: !13797, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13805)
!13797 = !DISubroutineType(types: !13798)
!13798 = !{null, !13799, !106}
!13799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13800)
!13800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13801, size: 32)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{null, !13803, !106}
!13803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13804, size: 32)
!13804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!13805 = !{!13806, !13807}
!13806 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13796, file: !2242, line: 45, type: !13799)
!13807 = !DILocalVariable(name: "user_data", arg: 2, scope: !13796, file: !2242, line: 45, type: !106)
!13808 = !DILocation(line: 0, scope: !13796)
!13809 = !DILocation(line: 71, column: 1, scope: !13796)
!13810 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2242, file: !2242, line: 73, type: !13797, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13811)
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13810, file: !2242, line: 73, type: !13799)
!13813 = !DILocalVariable(name: "user_data", arg: 2, scope: !13810, file: !2242, line: 73, type: !106)
!13814 = !DILocation(line: 0, scope: !13810)
!13815 = !DILocation(line: 95, column: 1, scope: !13810)
!13816 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2242, file: !2242, line: 97, type: !7329, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13817 = !DILocation(line: 1031, column: 3, scope: !13818, inlinedAt: !13821)
!13818 = distinct !DISubprogram(name: "__get_IPSR", scope: !6276, file: !6276, line: 1027, type: !6363, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13819)
!13819 = !{!13820}
!13820 = !DILocalVariable(name: "result", scope: !13818, file: !6276, line: 1029, type: !152)
!13821 = distinct !DILocation(line: 48, column: 10, scope: !13822, inlinedAt: !13823)
!13822 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7328, file: !7328, line: 46, type: !7329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13823 = distinct !DILocation(line: 99, column: 9, scope: !13816)
!13824 = !{i64 2943118}
!13825 = !DILocation(line: 0, scope: !13818, inlinedAt: !13821)
!13826 = !DILocation(line: 48, column: 9, scope: !13822, inlinedAt: !13823)
!13827 = !DILocation(line: 99, column: 2, scope: !13816)
!13828 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2242, file: !2242, line: 106, type: !3111, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13829 = !DILocation(line: 108, column: 2, scope: !13828)
!13830 = !DILocation(line: 108, column: 17, scope: !13828)
!13831 = !DILocation(line: 108, column: 30, scope: !13828)
!13832 = !DILocation(line: 109, column: 1, scope: !13828)
!13833 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2242, file: !2242, line: 116, type: !3111, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13834 = !DILocation(line: 118, column: 2, scope: !13833)
!13835 = !DILocation(line: 118, column: 17, scope: !13833)
!13836 = !DILocation(line: 118, column: 30, scope: !13833)
!13837 = !DILocation(line: 119, column: 1, scope: !13833)
!13838 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2242, file: !2242, line: 126, type: !7329, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13839 = !DILocation(line: 128, column: 10, scope: !13838)
!13840 = !DILocation(line: 128, column: 25, scope: !13838)
!13841 = !DILocation(line: 128, column: 38, scope: !13838)
!13842 = !DILocation(line: 128, column: 53, scope: !13838)
!13843 = !DILocation(line: 128, column: 2, scope: !13838)
!13844 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2242, file: !2242, line: 187, type: !13845, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!107, !2246, !118}
!13847 = !{!13848, !13849}
!13848 = !DILocalVariable(name: "thread", arg: 1, scope: !13844, file: !2242, line: 187, type: !2246)
!13849 = !DILocalVariable(name: "value", arg: 2, scope: !13844, file: !2242, line: 187, type: !118)
!13850 = !DILocation(line: 0, scope: !13844)
!13851 = !DILocation(line: 190, column: 13, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13844, file: !2242, line: 190, column: 6)
!13853 = !DILocation(line: 190, column: 6, scope: !13844)
!13854 = !DILocation(line: 194, column: 10, scope: !13844)
!13855 = !DILocation(line: 194, column: 2, scope: !13844)
!13856 = !DILocation(line: 195, column: 2, scope: !13844)
!13857 = !DILocation(line: 195, column: 47, scope: !13844)
!13858 = !DILocation(line: 199, column: 2, scope: !13844)
!13859 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2242, file: !2242, line: 238, type: !13860, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13862)
!13860 = !DISubroutineType(types: !13861)
!13861 = !{!118, !2246}
!13862 = !{!13863}
!13863 = !DILocalVariable(name: "thread", arg: 1, scope: !13859, file: !2242, line: 238, type: !2246)
!13864 = !DILocation(line: 0, scope: !13859)
!13865 = !DILocation(line: 241, column: 23, scope: !13859)
!13866 = !DILocation(line: 241, column: 2, scope: !13859)
!13867 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2242, file: !2242, line: 248, type: !13868, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13870)
!13868 = !DISubroutineType(types: !13869)
!13869 = !{!107, !2245, !193, !185}
!13870 = !{!13871, !13872, !13873}
!13871 = !DILocalVariable(name: "thread", arg: 1, scope: !13867, file: !2242, line: 248, type: !2245)
!13872 = !DILocalVariable(name: "buf", arg: 2, scope: !13867, file: !2242, line: 248, type: !193)
!13873 = !DILocalVariable(name: "size", arg: 3, scope: !13867, file: !2242, line: 248, type: !185)
!13874 = !DILocation(line: 0, scope: !13867)
!13875 = !DILocation(line: 251, column: 15, scope: !13867)
!13876 = !DILocation(line: 251, column: 2, scope: !13867)
!13877 = !DILocation(line: 252, column: 2, scope: !13867)
!13878 = !DILocation(line: 0, scope: !2241)
!13879 = !DILocation(line: 281, column: 11, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !2241, file: !2242, line: 281, column: 6)
!13881 = !DILocation(line: 281, column: 20, scope: !13880)
!13882 = !DILocation(line: 275, column: 45, scope: !2241)
!13883 = !DILocation(line: 285, column: 10, scope: !2241)
!13884 = !DILocation(line: 0, scope: !2365)
!13885 = !DILocation(line: 293, column: 39, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !2365, file: !2242, line: 293, column: 2)
!13887 = !DILocation(line: 293, column: 2, scope: !2365)
!13888 = !DILocation(line: 273, column: 14, scope: !2241)
!13889 = !DILocation(line: 309, column: 2, scope: !2241)
!13890 = !DILocation(line: 309, column: 11, scope: !2241)
!13891 = !DILocation(line: 311, column: 2, scope: !2241)
!13892 = !DILocation(line: 293, column: 26, scope: !13886)
!13893 = !DILocation(line: 294, column: 9, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13886, file: !2242, line: 293, column: 54)
!13895 = !DILocation(line: 295, column: 21, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13894, file: !2242, line: 295, column: 7)
!13897 = !DILocation(line: 295, column: 28, scope: !13896)
!13898 = !DILocation(line: 295, column: 7, scope: !13894)
!13899 = !DILocation(line: 299, column: 25, scope: !13894)
!13900 = !DILocation(line: 299, column: 41, scope: !13894)
!13901 = !DILocation(line: 300, column: 7, scope: !13894)
!13902 = !DILocation(line: 300, column: 26, scope: !13894)
!13903 = !DILocation(line: 299, column: 10, scope: !13894)
!13904 = !DILocation(line: 299, column: 7, scope: !13894)
!13905 = !DILocation(line: 302, column: 16, scope: !13894)
!13906 = !DILocation(line: 304, column: 20, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13894, file: !2242, line: 304, column: 7)
!13908 = !DILocation(line: 304, column: 7, scope: !13894)
!13909 = !DILocation(line: 305, column: 26, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13907, file: !2242, line: 304, column: 26)
!13911 = !DILocation(line: 305, column: 42, scope: !13910)
!13912 = !DILocation(line: 305, column: 11, scope: !13910)
!13913 = !DILocation(line: 305, column: 8, scope: !13910)
!13914 = !DILocation(line: 306, column: 3, scope: !13910)
!13915 = !DILocation(line: 293, column: 50, scope: !13886)
!13916 = !DILocation(line: 312, column: 1, scope: !2241)
!13917 = distinct !DISubprogram(name: "copy_bytes", scope: !2242, file: !2242, line: 261, type: !13918, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!185, !193, !185, !118, !185}
!13920 = !{!13921, !13922, !13923, !13924, !13925}
!13921 = !DILocalVariable(name: "dest", arg: 1, scope: !13917, file: !2242, line: 261, type: !193)
!13922 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13917, file: !2242, line: 261, type: !185)
!13923 = !DILocalVariable(name: "src", arg: 3, scope: !13917, file: !2242, line: 261, type: !118)
!13924 = !DILocalVariable(name: "src_size", arg: 4, scope: !13917, file: !2242, line: 261, type: !185)
!13925 = !DILocalVariable(name: "bytes_to_copy", scope: !13917, file: !2242, line: 263, type: !185)
!13926 = !DILocation(line: 0, scope: !13917)
!13927 = !DILocation(line: 265, column: 18, scope: !13917)
!13928 = !DILocation(line: 266, column: 2, scope: !13917)
!13929 = !DILocation(line: 268, column: 2, scope: !13917)
!13930 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2242, file: !2242, line: 383, type: !13931, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{null, !2246}
!13933 = !{!13934}
!13934 = !DILocalVariable(name: "thread", arg: 1, scope: !13930, file: !2242, line: 383, type: !2246)
!13935 = !DILocation(line: 0, scope: !13930)
!13936 = !DILocation(line: 387, column: 2, scope: !13930)
!13937 = !DILocation(line: 388, column: 1, scope: !13930)
!13938 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2242, file: !2242, line: 528, type: !13939, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13946)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{!193, !2246, !13941, !185, !559, !106, !106, !106, !107, !152, !118}
!13941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13942, size: 32)
!13942 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13943)
!13943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13944)
!13944 = !{!13945}
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13943, file: !577, line: 48, baseType: !120, size: 8)
!13946 = !{!13947, !13948, !13949, !13950, !13951, !13952, !13953, !13954, !13955, !13956, !13957}
!13947 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13938, file: !2242, line: 528, type: !2246)
!13948 = !DILocalVariable(name: "stack", arg: 2, scope: !13938, file: !2242, line: 529, type: !13941)
!13949 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13938, file: !2242, line: 529, type: !185)
!13950 = !DILocalVariable(name: "entry", arg: 4, scope: !13938, file: !2242, line: 530, type: !559)
!13951 = !DILocalVariable(name: "p1", arg: 5, scope: !13938, file: !2242, line: 531, type: !106)
!13952 = !DILocalVariable(name: "p2", arg: 6, scope: !13938, file: !2242, line: 531, type: !106)
!13953 = !DILocalVariable(name: "p3", arg: 7, scope: !13938, file: !2242, line: 531, type: !106)
!13954 = !DILocalVariable(name: "prio", arg: 8, scope: !13938, file: !2242, line: 532, type: !107)
!13955 = !DILocalVariable(name: "options", arg: 9, scope: !13938, file: !2242, line: 532, type: !152)
!13956 = !DILocalVariable(name: "name", arg: 10, scope: !13938, file: !2242, line: 532, type: !118)
!13957 = !DILocalVariable(name: "stack_ptr", scope: !13938, file: !2242, line: 534, type: !193)
!13958 = !DILocation(line: 0, scope: !13938)
!13959 = !DILocation(line: 536, column: 2, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !2242, line: 536, column: 2)
!13961 = distinct !DILexicalBlock(scope: !13962, file: !2242, line: 536, column: 2)
!13962 = distinct !DILexicalBlock(scope: !13938, file: !2242, line: 536, column: 2)
!13963 = !DILocation(line: 536, column: 2, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13960, file: !2242, line: 536, column: 2)
!13965 = !DILocation(line: 550, column: 28, scope: !13938)
!13966 = !DILocation(line: 550, column: 2, scope: !13938)
!13967 = !DILocation(line: 553, column: 34, scope: !13938)
!13968 = !DILocation(line: 553, column: 2, scope: !13938)
!13969 = !DILocation(line: 554, column: 14, scope: !13938)
!13970 = !DILocation(line: 564, column: 2, scope: !13938)
!13971 = !DILocation(line: 567, column: 14, scope: !13938)
!13972 = !DILocation(line: 567, column: 24, scope: !13938)
!13973 = !DILocation(line: 594, column: 11, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13938, file: !2242, line: 594, column: 6)
!13975 = !DILocation(line: 0, scope: !13974)
!13976 = !DILocation(line: 594, column: 6, scope: !13938)
!13977 = !DILocation(line: 595, column: 3, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13974, file: !2242, line: 594, column: 20)
!13979 = !DILocation(line: 598, column: 3, scope: !13978)
!13980 = !DILocation(line: 598, column: 52, scope: !13978)
!13981 = !DILocation(line: 599, column: 2, scope: !13978)
!13982 = !DILocation(line: 600, column: 23, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13974, file: !2242, line: 599, column: 9)
!13984 = !DILocation(line: 612, column: 7, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13938, file: !2242, line: 612, column: 6)
!13986 = !DILocation(line: 612, column: 6, scope: !13938)
!13987 = !DILocation(line: 627, column: 40, scope: !13938)
!13988 = !DILocation(line: 637, column: 2, scope: !13938)
!13989 = !DILocation(line: 613, column: 15, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13985, file: !2242, line: 612, column: 17)
!13991 = !DILocation(line: 613, column: 29, scope: !13990)
!13992 = !DILocation(line: 638, column: 1, scope: !13938)
!13993 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13641, file: !13641, line: 78, type: !13994, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!145, !106}
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13993, file: !13641, line: 78, type: !106)
!13998 = !DILocation(line: 0, scope: !13993)
!13999 = !DILocation(line: 80, column: 21, scope: !13993)
!14000 = !DILocation(line: 80, column: 2, scope: !13993)
!14001 = distinct !DISubprogram(name: "z_waitq_init", scope: !14002, file: !14002, line: 47, type: !14003, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14005)
!14002 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14003 = !DISubroutineType(types: !14004)
!14004 = !{null, !2277}
!14005 = !{!14006}
!14006 = !DILocalVariable(name: "w", arg: 1, scope: !14001, file: !14002, line: 47, type: !2277)
!14007 = !DILocation(line: 0, scope: !14001)
!14008 = !DILocation(line: 49, column: 21, scope: !14001)
!14009 = !DILocation(line: 49, column: 2, scope: !14001)
!14010 = !DILocation(line: 50, column: 1, scope: !14001)
!14011 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2242, file: !2242, line: 791, type: !14012, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14015)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{null, !14014, !107, !152, !32}
!14014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!14015 = !{!14016, !14017, !14018, !14019}
!14016 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14011, file: !2242, line: 791, type: !14014)
!14017 = !DILocalVariable(name: "priority", arg: 2, scope: !14011, file: !2242, line: 791, type: !107)
!14018 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14011, file: !2242, line: 792, type: !152)
!14019 = !DILocalVariable(name: "options", arg: 4, scope: !14011, file: !2242, line: 792, type: !32)
!14020 = !DILocation(line: 0, scope: !14011)
!14021 = !DILocation(line: 795, column: 15, scope: !14011)
!14022 = !DILocation(line: 795, column: 25, scope: !14011)
!14023 = !DILocation(line: 796, column: 30, scope: !14011)
!14024 = !DILocation(line: 796, column: 15, scope: !14011)
!14025 = !DILocation(line: 796, column: 28, scope: !14011)
!14026 = !DILocation(line: 797, column: 30, scope: !14011)
!14027 = !DILocation(line: 797, column: 15, scope: !14011)
!14028 = !DILocation(line: 797, column: 28, scope: !14011)
!14029 = !DILocation(line: 799, column: 22, scope: !14011)
!14030 = !DILocation(line: 799, column: 15, scope: !14011)
!14031 = !DILocation(line: 799, column: 20, scope: !14011)
!14032 = !DILocation(line: 801, column: 15, scope: !14011)
!14033 = !DILocation(line: 801, column: 28, scope: !14011)
!14034 = !DILocation(line: 814, column: 2, scope: !14011)
!14035 = !DILocation(line: 815, column: 1, scope: !14011)
!14036 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2242, file: !2242, line: 449, type: !14037, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14039)
!14037 = !DISubroutineType(types: !14038)
!14038 = !{!193, !2246, !13941, !185}
!14039 = !{!14040, !14041, !14042, !14043, !14044, !14045, !14046, !14047}
!14040 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14036, file: !2242, line: 449, type: !2246)
!14041 = !DILocalVariable(name: "stack", arg: 2, scope: !14036, file: !2242, line: 450, type: !13941)
!14042 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14036, file: !2242, line: 450, type: !185)
!14043 = !DILocalVariable(name: "stack_obj_size", scope: !14036, file: !2242, line: 452, type: !185)
!14044 = !DILocalVariable(name: "stack_buf_size", scope: !14036, file: !2242, line: 452, type: !185)
!14045 = !DILocalVariable(name: "stack_ptr", scope: !14036, file: !2242, line: 453, type: !193)
!14046 = !DILocalVariable(name: "stack_buf_start", scope: !14036, file: !2242, line: 453, type: !193)
!14047 = !DILocalVariable(name: "delta", scope: !14036, file: !2242, line: 454, type: !185)
!14048 = !DILocation(line: 0, scope: !14036)
!14049 = !DILocation(line: 465, column: 20, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14036, file: !2242, line: 463, column: 2)
!14051 = !DILocation(line: 466, column: 21, scope: !14050)
!14052 = !DILocation(line: 473, column: 28, scope: !14036)
!14053 = !DILocation(line: 514, column: 33, scope: !14036)
!14054 = !DILocation(line: 514, column: 25, scope: !14036)
!14055 = !DILocation(line: 514, column: 31, scope: !14036)
!14056 = !DILocation(line: 515, column: 25, scope: !14036)
!14057 = !DILocation(line: 515, column: 30, scope: !14036)
!14058 = !DILocation(line: 516, column: 25, scope: !14036)
!14059 = !DILocation(line: 516, column: 31, scope: !14036)
!14060 = !DILocation(line: 520, column: 2, scope: !14036)
!14061 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14062, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14064)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{!193, !13941}
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "sym", arg: 1, scope: !14061, file: !577, line: 331, type: !13941)
!14066 = !DILocation(line: 0, scope: !14061)
!14067 = !DILocation(line: 333, column: 21, scope: !14061)
!14068 = !DILocation(line: 333, column: 2, scope: !14061)
!14069 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14070, file: !14070, line: 40, type: !14071, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14073)
!14070 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14071 = !DISubroutineType(types: !14072)
!14072 = !{null, !14014}
!14073 = !{!14074}
!14074 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14069, file: !14070, line: 40, type: !14014)
!14075 = !DILocation(line: 0, scope: !14069)
!14076 = !DILocation(line: 42, column: 31, scope: !14069)
!14077 = !DILocation(line: 42, column: 2, scope: !14069)
!14078 = !DILocation(line: 43, column: 1, scope: !14069)
!14079 = distinct !DISubprogram(name: "z_init_timeout", scope: !14070, file: !14070, line: 25, type: !2303, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14080)
!14080 = !{!14081}
!14081 = !DILocalVariable(name: "to", arg: 1, scope: !14079, file: !14070, line: 25, type: !2305)
!14082 = !DILocation(line: 0, scope: !14079)
!14083 = !DILocation(line: 27, column: 22, scope: !14079)
!14084 = !DILocation(line: 27, column: 2, scope: !14079)
!14085 = !DILocation(line: 28, column: 1, scope: !14079)
!14086 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14087, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14089)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{null, !2352}
!14089 = !{!14090}
!14090 = !DILocalVariable(name: "node", arg: 1, scope: !14086, file: !319, line: 211, type: !2352)
!14091 = !DILocation(line: 0, scope: !14086)
!14092 = !DILocation(line: 213, column: 8, scope: !14086)
!14093 = !DILocation(line: 213, column: 13, scope: !14086)
!14094 = !DILocation(line: 214, column: 8, scope: !14086)
!14095 = !DILocation(line: 214, column: 13, scope: !14086)
!14096 = !DILocation(line: 215, column: 1, scope: !14086)
!14097 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14098, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14101)
!14098 = !DISubroutineType(types: !14099)
!14099 = !{null, !14100}
!14100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!14101 = !{!14102}
!14102 = !DILocalVariable(name: "list", arg: 1, scope: !14097, file: !319, line: 197, type: !14100)
!14103 = !DILocation(line: 0, scope: !14097)
!14104 = !DILocation(line: 199, column: 8, scope: !14097)
!14105 = !DILocation(line: 199, column: 13, scope: !14097)
!14106 = !DILocation(line: 200, column: 8, scope: !14097)
!14107 = !DILocation(line: 200, column: 13, scope: !14097)
!14108 = !DILocation(line: 201, column: 1, scope: !14097)
!14109 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2242, file: !2242, line: 641, type: !14110, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14116)
!14110 = !DISubroutineType(types: !14111)
!14111 = !{!2245, !2246, !13941, !185, !559, !106, !106, !106, !107, !152, !14112}
!14112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14113)
!14113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14114)
!14114 = !{!14115}
!14115 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14113, file: !565, line: 66, baseType: !564, size: 64)
!14116 = !{!14117, !14118, !14119, !14120, !14121, !14122, !14123, !14124, !14125, !14126}
!14117 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14109, file: !2242, line: 641, type: !2246)
!14118 = !DILocalVariable(name: "stack", arg: 2, scope: !14109, file: !2242, line: 642, type: !13941)
!14119 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14109, file: !2242, line: 643, type: !185)
!14120 = !DILocalVariable(name: "entry", arg: 4, scope: !14109, file: !2242, line: 643, type: !559)
!14121 = !DILocalVariable(name: "p1", arg: 5, scope: !14109, file: !2242, line: 644, type: !106)
!14122 = !DILocalVariable(name: "p2", arg: 6, scope: !14109, file: !2242, line: 644, type: !106)
!14123 = !DILocalVariable(name: "p3", arg: 7, scope: !14109, file: !2242, line: 644, type: !106)
!14124 = !DILocalVariable(name: "prio", arg: 8, scope: !14109, file: !2242, line: 645, type: !107)
!14125 = !DILocalVariable(name: "options", arg: 9, scope: !14109, file: !2242, line: 645, type: !152)
!14126 = !DILocalVariable(name: "delay", arg: 10, scope: !14109, file: !2242, line: 645, type: !14112)
!14127 = !DILocation(line: 0, scope: !14109)
!14128 = !DILocation(line: 1031, column: 3, scope: !13818, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 48, column: 10, scope: !13822, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 647, column: 2, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !2242, line: 647, column: 2)
!14132 = distinct !DILexicalBlock(scope: !14109, file: !2242, line: 647, column: 2)
!14133 = !DILocation(line: 0, scope: !13818, inlinedAt: !14129)
!14134 = !DILocation(line: 48, column: 9, scope: !13822, inlinedAt: !14130)
!14135 = !DILocation(line: 647, column: 2, scope: !14132)
!14136 = !DILocation(line: 647, column: 2, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14131, file: !2242, line: 647, column: 2)
!14138 = !DILocation(line: 649, column: 2, scope: !14109)
!14139 = !DILocation(line: 652, column: 7, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14109, file: !2242, line: 652, column: 6)
!14141 = !DILocation(line: 652, column: 6, scope: !14109)
!14142 = !DILocation(line: 653, column: 3, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14140, file: !2242, line: 652, column: 39)
!14144 = !DILocation(line: 654, column: 2, scope: !14143)
!14145 = !DILocation(line: 656, column: 2, scope: !14109)
!14146 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2242, file: !2242, line: 401, type: !14147, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14149)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{null, !2246, !14112}
!14149 = !{!14150, !14151}
!14150 = !DILocalVariable(name: "thread", arg: 1, scope: !14146, file: !2242, line: 401, type: !2246)
!14151 = !DILocalVariable(name: "delay", arg: 2, scope: !14146, file: !2242, line: 401, type: !14112)
!14152 = !DILocation(line: 0, scope: !14146)
!14153 = !DILocation(line: 404, column: 6, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14146, file: !2242, line: 404, column: 6)
!14155 = !DILocation(line: 404, column: 6, scope: !14146)
!14156 = !DILocation(line: 405, column: 3, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14154, file: !2242, line: 404, column: 38)
!14158 = !DILocation(line: 406, column: 2, scope: !14157)
!14159 = !DILocation(line: 407, column: 3, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14154, file: !2242, line: 406, column: 9)
!14161 = !DILocation(line: 413, column: 1, scope: !14146)
!14162 = distinct !DISubprogram(name: "k_thread_start", scope: !4442, file: !4442, line: 205, type: !14163, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14165)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{null, !2245}
!14165 = !{!14166}
!14166 = !DILocalVariable(name: "thread", arg: 1, scope: !14162, file: !4442, line: 205, type: !2245)
!14167 = !DILocation(line: 0, scope: !14162)
!14168 = !DILocation(line: 214, column: 2, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14162, file: !4442, line: 214, column: 2)
!14170 = !{i64 2154184932}
!14171 = !DILocation(line: 215, column: 2, scope: !14162)
!14172 = !DILocation(line: 216, column: 1, scope: !14162)
!14173 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14070, file: !14070, line: 47, type: !14147, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14174)
!14174 = !{!14175, !14176}
!14175 = !DILocalVariable(name: "thread", arg: 1, scope: !14173, file: !14070, line: 47, type: !2246)
!14176 = !DILocalVariable(name: "ticks", arg: 2, scope: !14173, file: !14070, line: 47, type: !14112)
!14177 = !DILocation(line: 0, scope: !14173)
!14178 = !DILocation(line: 49, column: 30, scope: !14173)
!14179 = !DILocation(line: 49, column: 2, scope: !14173)
!14180 = !DILocation(line: 50, column: 1, scope: !14173)
!14181 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2242, file: !2242, line: 748, type: !3111, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14182)
!14182 = !{!14183, !14201}
!14183 = !DILocalVariable(name: "thread_data", scope: !14184, file: !2242, line: 750, type: !14185)
!14184 = distinct !DILexicalBlock(scope: !14181, file: !2242, line: 750, column: 2)
!14185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14186, size: 32)
!14186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14187)
!14187 = !{!14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195, !14196, !14197, !14198, !14200}
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14186, file: !406, line: 621, baseType: !2246, size: 32)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14186, file: !406, line: 622, baseType: !13941, size: 32, offset: 32)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14186, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14186, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14186, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14186, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14186, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14186, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14196 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14186, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14186, file: !406, line: 630, baseType: !874, size: 32, offset: 288)
!14198 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14186, file: !406, line: 631, baseType: !14199, size: 32, offset: 320)
!14199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 32)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14186, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14201 = !DILocalVariable(name: "thread_data", scope: !14202, file: !2242, line: 781, type: !14185)
!14202 = distinct !DILexicalBlock(scope: !14181, file: !2242, line: 781, column: 2)
!14203 = !DILocation(line: 0, scope: !14184)
!14204 = !DILocation(line: 750, column: 2, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14206, file: !2242, line: 750, column: 2)
!14206 = distinct !DILexicalBlock(scope: !14207, file: !2242, line: 750, column: 2)
!14207 = distinct !DILexicalBlock(scope: !14184, file: !2242, line: 750, column: 2)
!14208 = !DILocation(line: 750, column: 2, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14210, file: !2242, line: 750, column: 2)
!14210 = distinct !DILexicalBlock(scope: !14205, file: !2242, line: 750, column: 2)
!14211 = !DILocation(line: 750, column: 2, scope: !14206)
!14212 = !DILocation(line: 750, column: 2, scope: !14184)
!14213 = !DILocation(line: 780, column: 2, scope: !14181)
!14214 = !DILocation(line: 0, scope: !14202)
!14215 = !DILocation(line: 781, column: 2, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !2242, line: 781, column: 2)
!14217 = distinct !DILexicalBlock(scope: !14218, file: !2242, line: 781, column: 2)
!14218 = distinct !DILexicalBlock(scope: !14202, file: !2242, line: 781, column: 2)
!14219 = !DILocation(line: 752, column: 17, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14207, file: !2242, line: 750, column: 38)
!14221 = !DILocation(line: 753, column: 17, scope: !14220)
!14222 = !DILocation(line: 754, column: 17, scope: !14220)
!14223 = !DILocation(line: 755, column: 17, scope: !14220)
!14224 = !DILocation(line: 756, column: 17, scope: !14220)
!14225 = !DILocation(line: 757, column: 17, scope: !14220)
!14226 = !DILocation(line: 758, column: 17, scope: !14220)
!14227 = !DILocation(line: 759, column: 17, scope: !14220)
!14228 = !DILocation(line: 760, column: 17, scope: !14220)
!14229 = !DILocation(line: 761, column: 17, scope: !14220)
!14230 = !DILocation(line: 751, column: 3, scope: !14220)
!14231 = !DILocation(line: 763, column: 16, scope: !14220)
!14232 = !DILocation(line: 763, column: 29, scope: !14220)
!14233 = !DILocation(line: 763, column: 39, scope: !14220)
!14234 = !DILocation(line: 750, column: 2, scope: !14207)
!14235 = !DILocation(line: 750, column: 2, scope: !14210)
!14236 = distinct !{!14236, !14212, !14237}
!14237 = !DILocation(line: 764, column: 2, scope: !14184)
!14238 = !DILocation(line: 781, column: 2, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !2242, line: 781, column: 2)
!14240 = distinct !DILexicalBlock(scope: !14216, file: !2242, line: 781, column: 2)
!14241 = !DILocation(line: 781, column: 2, scope: !14217)
!14242 = !DILocation(line: 781, column: 2, scope: !14202)
!14243 = !DILocation(line: 787, column: 2, scope: !14181)
!14244 = !DILocation(line: 788, column: 1, scope: !14181)
!14245 = !DILocation(line: 782, column: 20, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !2242, line: 782, column: 7)
!14247 = distinct !DILexicalBlock(scope: !14218, file: !2242, line: 781, column: 38)
!14248 = !DILocation(line: 782, column: 31, scope: !14246)
!14249 = !DILocation(line: 782, column: 7, scope: !14247)
!14250 = !DILocation(line: 783, column: 37, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14246, file: !2242, line: 782, column: 51)
!14252 = !DILocation(line: 784, column: 10, scope: !14251)
!14253 = !DILocation(line: 783, column: 4, scope: !14251)
!14254 = !DILocation(line: 785, column: 3, scope: !14251)
!14255 = !DILocation(line: 781, column: 2, scope: !14218)
!14256 = !DILocation(line: 781, column: 2, scope: !14240)
!14257 = distinct !{!14257, !14242, !14258}
!14258 = !DILocation(line: 786, column: 2, scope: !14202)
!14259 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8744, file: !8744, line: 403, type: !14260, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14262)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{!566, !566}
!14262 = !{!14263}
!14263 = !DILocalVariable(name: "t", arg: 1, scope: !14259, file: !8744, line: 403, type: !566)
!14264 = !DILocation(line: 0, scope: !14259)
!14265 = !DILocalVariable(name: "t", arg: 1, scope: !14266, file: !8744, line: 102, type: !566)
!14266 = distinct !DISubprogram(name: "z_tmcvt", scope: !8744, file: !8744, line: 102, type: !8751, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14267)
!14267 = !{!14265, !14268, !14269, !14270, !14271, !14272, !14273, !14274, !14275, !14276, !14277}
!14268 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14266, file: !8744, line: 102, type: !152)
!14269 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14266, file: !8744, line: 103, type: !152)
!14270 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14266, file: !8744, line: 103, type: !145)
!14271 = !DILocalVariable(name: "result32", arg: 5, scope: !14266, file: !8744, line: 104, type: !145)
!14272 = !DILocalVariable(name: "round_up", arg: 6, scope: !14266, file: !8744, line: 104, type: !145)
!14273 = !DILocalVariable(name: "round_off", arg: 7, scope: !14266, file: !8744, line: 105, type: !145)
!14274 = !DILocalVariable(name: "mul_ratio", scope: !14266, file: !8744, line: 107, type: !145)
!14275 = !DILocalVariable(name: "div_ratio", scope: !14266, file: !8744, line: 109, type: !145)
!14276 = !DILocalVariable(name: "off", scope: !14266, file: !8744, line: 116, type: !566)
!14277 = !DILocalVariable(name: "rdivisor", scope: !14278, file: !8744, line: 119, type: !152)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !8744, line: 118, column: 18)
!14279 = distinct !DILexicalBlock(scope: !14266, file: !8744, line: 118, column: 6)
!14280 = !DILocation(line: 0, scope: !14266, inlinedAt: !14281)
!14281 = distinct !DILocation(line: 406, column: 9, scope: !14259)
!14282 = !DILocation(line: 145, column: 13, scope: !14283, inlinedAt: !14281)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !8744, line: 144, column: 10)
!14284 = distinct !DILexicalBlock(scope: !14285, file: !8744, line: 142, column: 7)
!14285 = distinct !DILexicalBlock(scope: !14286, file: !8744, line: 141, column: 24)
!14286 = distinct !DILexicalBlock(scope: !14287, file: !8744, line: 141, column: 13)
!14287 = distinct !DILexicalBlock(scope: !14266, file: !8744, line: 134, column: 6)
!14288 = !DILocation(line: 406, column: 2, scope: !14259)
!14289 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2242, file: !2242, line: 817, type: !4320, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14290)
!14290 = !{!14291, !14292, !14293, !14294}
!14291 = !DILocalVariable(name: "entry", arg: 1, scope: !14289, file: !2242, line: 817, type: !559)
!14292 = !DILocalVariable(name: "p1", arg: 2, scope: !14289, file: !2242, line: 818, type: !106)
!14293 = !DILocalVariable(name: "p2", arg: 3, scope: !14289, file: !2242, line: 818, type: !106)
!14294 = !DILocalVariable(name: "p3", arg: 4, scope: !14289, file: !2242, line: 818, type: !106)
!14295 = !DILocation(line: 0, scope: !14289)
!14296 = !DILocation(line: 822, column: 2, scope: !14289)
!14297 = !DILocation(line: 822, column: 17, scope: !14289)
!14298 = !DILocation(line: 822, column: 30, scope: !14289)
!14299 = !DILocation(line: 823, column: 2, scope: !14289)
!14300 = !DILocation(line: 845, column: 2, scope: !14289)
!14301 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2242, file: !2242, line: 853, type: !14302, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14305)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!145, !14304}
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!14305 = !{!14306, !14307}
!14306 = !DILocalVariable(name: "l", arg: 1, scope: !14301, file: !2242, line: 853, type: !14304)
!14307 = !DILocalVariable(name: "thread_cpu", scope: !14301, file: !2242, line: 855, type: !22)
!14308 = !DILocation(line: 0, scope: !14301)
!14309 = !DILocation(line: 855, column: 28, scope: !14301)
!14310 = !DILocation(line: 857, column: 17, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14301, file: !2242, line: 857, column: 6)
!14312 = !DILocation(line: 857, column: 6, scope: !14301)
!14313 = !DILocation(line: 858, column: 19, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2242, line: 858, column: 7)
!14315 = distinct !DILexicalBlock(scope: !14311, file: !2242, line: 857, column: 24)
!14316 = !DILocation(line: 858, column: 42, scope: !14314)
!14317 = !DILocation(line: 858, column: 28, scope: !14314)
!14318 = !DILocation(line: 858, column: 25, scope: !14314)
!14319 = !DILocation(line: 858, column: 7, scope: !14315)
!14320 = !DILocation(line: 862, column: 2, scope: !14301)
!14321 = !DILocation(line: 863, column: 1, scope: !14301)
!14322 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2242, file: !2242, line: 865, type: !14302, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14323)
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "l", arg: 1, scope: !14322, file: !2242, line: 865, type: !14304)
!14325 = !DILocation(line: 0, scope: !14322)
!14326 = !DILocation(line: 867, column: 9, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14322, file: !2242, line: 867, column: 6)
!14328 = !DILocation(line: 867, column: 38, scope: !14327)
!14329 = !DILocation(line: 867, column: 24, scope: !14327)
!14330 = !DILocation(line: 867, column: 54, scope: !14327)
!14331 = !DILocation(line: 867, column: 43, scope: !14327)
!14332 = !DILocation(line: 867, column: 41, scope: !14327)
!14333 = !DILocation(line: 867, column: 20, scope: !14327)
!14334 = !DILocation(line: 867, column: 6, scope: !14322)
!14335 = !DILocation(line: 870, column: 16, scope: !14322)
!14336 = !DILocation(line: 871, column: 2, scope: !14322)
!14337 = !DILocation(line: 872, column: 1, scope: !14322)
!14338 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2242, file: !2242, line: 874, type: !14339, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14341)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{null, !14304}
!14341 = !{!14342}
!14342 = !DILocalVariable(name: "l", arg: 1, scope: !14338, file: !2242, line: 874, type: !14304)
!14343 = !DILocation(line: 0, scope: !14338)
!14344 = !DILocation(line: 876, column: 32, scope: !14338)
!14345 = !DILocation(line: 876, column: 18, scope: !14338)
!14346 = !DILocation(line: 876, column: 48, scope: !14338)
!14347 = !DILocation(line: 876, column: 37, scope: !14338)
!14348 = !DILocation(line: 876, column: 35, scope: !14338)
!14349 = !DILocation(line: 876, column: 5, scope: !14338)
!14350 = !DILocation(line: 876, column: 16, scope: !14338)
!14351 = !DILocation(line: 877, column: 1, scope: !14338)
!14352 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2242, file: !2242, line: 888, type: !14353, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14355)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{!107, !2246}
!14355 = !{!14356}
!14356 = !DILocalVariable(name: "thread", arg: 1, scope: !14352, file: !2242, line: 888, type: !2246)
!14357 = !DILocation(line: 0, scope: !14352)
!14358 = !DILocation(line: 893, column: 2, scope: !14352)
!14359 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2242, file: !2242, line: 897, type: !14360, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!107, !2246, !32}
!14362 = !{!14363, !14364}
!14363 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2242, line: 897, type: !2246)
!14364 = !DILocalVariable(name: "options", arg: 2, scope: !14359, file: !2242, line: 897, type: !32)
!14365 = !DILocation(line: 0, scope: !14359)
!14366 = !DILocation(line: 902, column: 2, scope: !14359)
!14367 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2242, file: !2242, line: 1072, type: !14368, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14373)
!14368 = !DISubroutineType(types: !14369)
!14369 = !{!107, !2245, !14370}
!14370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14371, size: 32)
!14371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14372)
!14372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2182)
!14373 = !{!14374, !14375}
!14374 = !DILocalVariable(name: "thread", arg: 1, scope: !14367, file: !2242, line: 1072, type: !2245)
!14375 = !DILocalVariable(name: "stats", arg: 2, scope: !14367, file: !2242, line: 1073, type: !14370)
!14376 = !DILocation(line: 0, scope: !14367)
!14377 = !DILocation(line: 1075, column: 14, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14367, file: !2242, line: 1075, column: 6)
!14379 = !DILocation(line: 1075, column: 23, scope: !14378)
!14380 = !DILocation(line: 1086, column: 1, scope: !14367)
!14381 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2242, file: !2242, line: 1088, type: !14382, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14384)
!14382 = !DISubroutineType(types: !14383)
!14383 = !{!107, !14370}
!14384 = !{!14385}
!14385 = !DILocalVariable(name: "stats", arg: 1, scope: !14381, file: !2242, line: 1088, type: !14370)
!14386 = !DILocation(line: 0, scope: !14381)
!14387 = !DILocation(line: 1094, column: 12, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14381, file: !2242, line: 1094, column: 6)
!14389 = !DILocation(line: 1120, column: 1, scope: !14381)
!14390 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14391, file: !14391, line: 20, type: !3111, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !2182)
!14391 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14392 = !DILocation(line: 30, column: 2, scope: !14390)
!14393 = !DILocation(line: 31, column: 1, scope: !14390)
!14394 = distinct !DISubprogram(name: "idle", scope: !14391, file: !14391, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !14395)
!14395 = !{!14396, !14397, !14398}
!14396 = !DILocalVariable(name: "unused1", arg: 1, scope: !14394, file: !14391, line: 33, type: !106)
!14397 = !DILocalVariable(name: "unused2", arg: 2, scope: !14394, file: !14391, line: 33, type: !106)
!14398 = !DILocalVariable(name: "unused3", arg: 3, scope: !14394, file: !14391, line: 33, type: !106)
!14399 = !DILocation(line: 0, scope: !14394)
!14400 = !DILocation(line: 39, column: 2, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !14391, line: 39, column: 2)
!14402 = distinct !DILexicalBlock(scope: !14394, file: !14391, line: 39, column: 2)
!14403 = !DILocation(line: 39, column: 2, scope: !14402)
!14404 = !DILocation(line: 39, column: 2, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14401, file: !14391, line: 39, column: 2)
!14406 = !DILocation(line: 55, column: 2, scope: !14407, inlinedAt: !14411)
!14407 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !14408)
!14408 = !{!14409, !14410}
!14409 = !DILocalVariable(name: "key", scope: !14407, file: !5957, line: 44, type: !32)
!14410 = !DILocalVariable(name: "tmp", scope: !14407, file: !5957, line: 53, type: !32)
!14411 = distinct !DILocation(line: 62, column: 10, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14394, file: !14391, line: 41, column: 15)
!14413 = !{i64 2041729}
!14414 = !DILocation(line: 0, scope: !14407, inlinedAt: !14411)
!14415 = !DILocation(line: 86, column: 3, scope: !14412)
!14416 = !DILocation(line: 41, column: 2, scope: !14394)
!14417 = distinct !{!14417, !14416, !14418}
!14418 = !DILocation(line: 105, column: 2, scope: !14394)
!14419 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3111, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !2182)
!14420 = !DILocation(line: 5629, column: 2, scope: !14419)
!14421 = !DILocation(line: 5630, column: 1, scope: !14419)
!14422 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!14423 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2480, file: !2480, line: 93, type: !14424, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{!874, !2372, !2372}
!14426 = !{!14427, !14428, !14429, !14430}
!14427 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14423, file: !2480, line: 93, type: !2372)
!14428 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14423, file: !2480, line: 94, type: !2372)
!14429 = !DILocalVariable(name: "b1", scope: !14423, file: !2480, line: 97, type: !874)
!14430 = !DILocalVariable(name: "b2", scope: !14423, file: !2480, line: 98, type: !874)
!14431 = !DILocation(line: 0, scope: !14423)
!14432 = !DILocation(line: 97, column: 30, scope: !14423)
!14433 = !DILocation(line: 98, column: 30, scope: !14423)
!14434 = !DILocation(line: 100, column: 9, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14423, file: !2480, line: 100, column: 6)
!14436 = !DILocation(line: 100, column: 6, scope: !14423)
!14437 = !DILocation(line: 125, column: 1, scope: !14423)
!14438 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2480, file: !2480, line: 428, type: !14439, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14441)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{null, !2372}
!14441 = !{!14442}
!14442 = !DILocalVariable(name: "curr", arg: 1, scope: !14438, file: !2480, line: 428, type: !2372)
!14443 = !DILocation(line: 0, scope: !14438)
!14444 = !DILocation(line: 434, column: 6, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14438, file: !2480, line: 434, column: 6)
!14446 = !DILocation(line: 434, column: 23, scope: !14445)
!14447 = !DILocation(line: 434, column: 6, scope: !14438)
!14448 = !DILocation(line: 435, column: 50, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14445, file: !2480, line: 434, column: 29)
!14450 = !DILocation(line: 435, column: 48, scope: !14449)
!14451 = !DILocation(line: 435, column: 29, scope: !14449)
!14452 = !DILocation(line: 436, column: 24, scope: !14449)
!14453 = !DILocation(line: 436, column: 3, scope: !14449)
!14454 = !DILocation(line: 437, column: 2, scope: !14449)
!14455 = !DILocation(line: 438, column: 1, scope: !14438)
!14456 = distinct !DISubprogram(name: "slice_time", scope: !2480, file: !2480, line: 407, type: !14457, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14459)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{!107, !2372}
!14459 = !{!14460, !14461}
!14460 = !DILocalVariable(name: "curr", arg: 1, scope: !14456, file: !2480, line: 407, type: !2372)
!14461 = !DILocalVariable(name: "ret", scope: !14456, file: !2480, line: 409, type: !107)
!14462 = !DILocation(line: 0, scope: !14456)
!14463 = !DILocation(line: 409, column: 12, scope: !14456)
!14464 = !DILocation(line: 416, column: 2, scope: !14456)
!14465 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2480, file: !2480, line: 440, type: !14466, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14468)
!14466 = !DISubroutineType(types: !14467)
!14467 = !{null, !874, !107}
!14468 = !{!14469, !14470, !14471, !14477}
!14469 = !DILocalVariable(name: "slice", arg: 1, scope: !14465, file: !2480, line: 440, type: !874)
!14470 = !DILocalVariable(name: "prio", arg: 2, scope: !14465, file: !2480, line: 440, type: !107)
!14471 = !DILocalVariable(name: "__i", scope: !14472, file: !2480, line: 442, type: !14473)
!14472 = distinct !DILexicalBlock(scope: !14465, file: !2480, line: 442, column: 2)
!14473 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14474)
!14474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14475)
!14475 = !{!14476}
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14474, file: !420, line: 33, baseType: !107, size: 32)
!14477 = !DILocalVariable(name: "__key", scope: !14472, file: !2480, line: 442, type: !14473)
!14478 = !DILocation(line: 0, scope: !14465)
!14479 = !DILocation(line: 0, scope: !14472)
!14480 = !DILocalVariable(name: "l", arg: 1, scope: !14481, file: !420, line: 136, type: !14484)
!14481 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14482, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14485)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{!14473, !14484}
!14484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!14485 = !{!14480, !14486}
!14486 = !DILocalVariable(name: "k", scope: !14481, file: !420, line: 139, type: !14473)
!14487 = !DILocation(line: 0, scope: !14481, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 442, column: 2, scope: !14472)
!14489 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !14494)
!14490 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14491)
!14491 = !{!14492, !14493}
!14492 = !DILocalVariable(name: "key", scope: !14490, file: !5957, line: 44, type: !32)
!14493 = !DILocalVariable(name: "tmp", scope: !14490, file: !5957, line: 53, type: !32)
!14494 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !14488)
!14495 = !{i64 2085700}
!14496 = !DILocation(line: 0, scope: !14490, inlinedAt: !14494)
!14497 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !14488)
!14498 = distinct !DILexicalBlock(scope: !14499, file: !420, line: 148, column: 2)
!14499 = distinct !DILexicalBlock(scope: !14481, file: !420, line: 148, column: 2)
!14500 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14488)
!14501 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !14488)
!14502 = distinct !DILexicalBlock(scope: !14498, file: !420, line: 148, column: 2)
!14503 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !14488)
!14504 = !DILocation(line: 443, column: 29, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14506, file: !2480, line: 442, column: 26)
!14506 = distinct !DILexicalBlock(scope: !14472, file: !2480, line: 442, column: 2)
!14507 = !DILocation(line: 444, column: 17, scope: !14505)
!14508 = !DILocation(line: 445, column: 51, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14505, file: !2480, line: 445, column: 7)
!14510 = !DILocation(line: 445, column: 7, scope: !14505)
!14511 = !DILocation(line: 0, scope: !14505)
!14512 = !DILocation(line: 451, column: 18, scope: !14505)
!14513 = !DILocation(line: 452, column: 3, scope: !14505)
!14514 = !DILocalVariable(name: "key", arg: 2, scope: !14515, file: !420, line: 190, type: !14473)
!14515 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14516, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14518)
!14516 = !DISubroutineType(types: !14517)
!14517 = !{null, !14484, !14473}
!14518 = !{!14519, !14514}
!14519 = !DILocalVariable(name: "l", arg: 1, scope: !14515, file: !420, line: 189, type: !14484)
!14520 = !DILocation(line: 0, scope: !14515, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 442, column: 2, scope: !14506)
!14522 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !14521)
!14523 = distinct !DILexicalBlock(scope: !14524, file: !420, line: 194, column: 2)
!14524 = distinct !DILexicalBlock(scope: !14515, file: !420, line: 194, column: 2)
!14525 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14521)
!14526 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !14521)
!14527 = distinct !DILexicalBlock(scope: !14523, file: !420, line: 194, column: 2)
!14528 = !DILocalVariable(name: "key", arg: 1, scope: !14529, file: !5957, line: 84, type: !32)
!14529 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14530)
!14530 = !{!14528}
!14531 = !DILocation(line: 0, scope: !14529, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !14521)
!14533 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !14532)
!14534 = !{i64 2086517}
!14535 = !DILocation(line: 454, column: 1, scope: !14465)
!14536 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8744, file: !8744, line: 389, type: !7563, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14537)
!14537 = !{!14538}
!14538 = !DILocalVariable(name: "t", arg: 1, scope: !14536, file: !8744, line: 389, type: !152)
!14539 = !DILocation(line: 0, scope: !14536)
!14540 = !DILocalVariable(name: "t", arg: 1, scope: !14541, file: !8744, line: 102, type: !566)
!14541 = distinct !DISubprogram(name: "z_tmcvt", scope: !8744, file: !8744, line: 102, type: !8751, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14542)
!14542 = !{!14540, !14543, !14544, !14545, !14546, !14547, !14548, !14549, !14550, !14551, !14552}
!14543 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14541, file: !8744, line: 102, type: !152)
!14544 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14541, file: !8744, line: 103, type: !152)
!14545 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14541, file: !8744, line: 103, type: !145)
!14546 = !DILocalVariable(name: "result32", arg: 5, scope: !14541, file: !8744, line: 104, type: !145)
!14547 = !DILocalVariable(name: "round_up", arg: 6, scope: !14541, file: !8744, line: 104, type: !145)
!14548 = !DILocalVariable(name: "round_off", arg: 7, scope: !14541, file: !8744, line: 105, type: !145)
!14549 = !DILocalVariable(name: "mul_ratio", scope: !14541, file: !8744, line: 107, type: !145)
!14550 = !DILocalVariable(name: "div_ratio", scope: !14541, file: !8744, line: 109, type: !145)
!14551 = !DILocalVariable(name: "off", scope: !14541, file: !8744, line: 116, type: !566)
!14552 = !DILocalVariable(name: "rdivisor", scope: !14553, file: !8744, line: 119, type: !152)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !8744, line: 118, column: 18)
!14554 = distinct !DILexicalBlock(scope: !14541, file: !8744, line: 118, column: 6)
!14555 = !DILocation(line: 0, scope: !14541, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 392, column: 9, scope: !14536)
!14557 = !DILocation(line: 143, column: 25, scope: !14558, inlinedAt: !14556)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !8744, line: 142, column: 17)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !8744, line: 142, column: 7)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !8744, line: 141, column: 24)
!14561 = distinct !DILexicalBlock(scope: !14562, file: !8744, line: 141, column: 13)
!14562 = distinct !DILexicalBlock(scope: !14541, file: !8744, line: 134, column: 6)
!14563 = !DILocation(line: 392, column: 2, scope: !14536)
!14564 = distinct !DISubprogram(name: "z_time_slice", scope: !2480, file: !2480, line: 502, type: !9190, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14565)
!14565 = !{!14566, !14567}
!14566 = !DILocalVariable(name: "ticks", arg: 1, scope: !14564, file: !2480, line: 502, type: !107)
!14567 = !DILocalVariable(name: "key", scope: !14564, file: !2480, line: 511, type: !14473)
!14568 = !DILocation(line: 0, scope: !14564)
!14569 = !DILocation(line: 0, scope: !14481, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 511, column: 25, scope: !14564)
!14571 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !14570)
!14573 = !DILocation(line: 0, scope: !14490, inlinedAt: !14572)
!14574 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !14570)
!14575 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14570)
!14576 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !14570)
!14577 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !14570)
!14578 = !DILocation(line: 514, column: 6, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14564, file: !2480, line: 514, column: 6)
!14580 = !DILocation(line: 514, column: 25, scope: !14579)
!14581 = !DILocation(line: 514, column: 22, scope: !14579)
!14582 = !DILocation(line: 514, column: 6, scope: !14564)
!14583 = !DILocation(line: 515, column: 3, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14579, file: !2480, line: 514, column: 35)
!14585 = !DILocation(line: 0, scope: !14515, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 516, column: 3, scope: !14584)
!14587 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !14586)
!14588 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14586)
!14589 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !14586)
!14590 = !DILocation(line: 0, scope: !14529, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !14586)
!14592 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !14591)
!14593 = !DILocation(line: 517, column: 3, scope: !14584)
!14594 = !DILocation(line: 519, column: 18, scope: !14564)
!14595 = !DILocation(line: 522, column: 6, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14564, file: !2480, line: 522, column: 6)
!14597 = !DILocation(line: 522, column: 27, scope: !14596)
!14598 = !DILocation(line: 522, column: 30, scope: !14596)
!14599 = !DILocation(line: 522, column: 6, scope: !14564)
!14600 = !DILocation(line: 523, column: 30, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !2480, line: 523, column: 7)
!14602 = distinct !DILexicalBlock(scope: !14596, file: !2480, line: 522, column: 51)
!14603 = !DILocation(line: 523, column: 13, scope: !14601)
!14604 = !DILocation(line: 523, column: 7, scope: !14602)
!14605 = !DILocation(line: 530, column: 10, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14601, file: !2480, line: 523, column: 43)
!14607 = !DILocation(line: 531, column: 3, scope: !14606)
!14608 = !DILocation(line: 532, column: 30, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14601, file: !2480, line: 531, column: 10)
!14610 = !DILocation(line: 535, column: 29, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14596, file: !2480, line: 534, column: 9)
!14612 = !DILocation(line: 0, scope: !14515, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 537, column: 2, scope: !14564)
!14614 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !14613)
!14615 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14613)
!14616 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !14613)
!14617 = !DILocation(line: 0, scope: !14529, inlinedAt: !14618)
!14618 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !14613)
!14619 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !14618)
!14620 = !DILocation(line: 538, column: 1, scope: !14564)
!14621 = distinct !DISubprogram(name: "sliceable", scope: !2480, file: !2480, line: 468, type: !14622, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14624)
!14622 = !DISubroutineType(types: !14623)
!14623 = !{!145, !2372}
!14624 = !{!14625, !14626}
!14625 = !DILocalVariable(name: "thread", arg: 1, scope: !14621, file: !2480, line: 468, type: !2372)
!14626 = !DILocalVariable(name: "ret", scope: !14621, file: !2480, line: 470, type: !145)
!14627 = !DILocation(line: 0, scope: !14621)
!14628 = !DILocation(line: 470, column: 13, scope: !14621)
!14629 = !DILocation(line: 471, column: 3, scope: !14621)
!14630 = !DILocation(line: 471, column: 7, scope: !14621)
!14631 = !DILocation(line: 472, column: 3, scope: !14621)
!14632 = !DILocation(line: 472, column: 37, scope: !14621)
!14633 = !DILocation(line: 472, column: 24, scope: !14621)
!14634 = !DILocation(line: 472, column: 43, scope: !14621)
!14635 = !DILocation(line: 472, column: 7, scope: !14621)
!14636 = !DILocation(line: 473, column: 3, scope: !14621)
!14637 = !DILocation(line: 473, column: 7, scope: !14621)
!14638 = !DILocation(line: 473, column: 6, scope: !14621)
!14639 = !DILocation(line: 479, column: 2, scope: !14621)
!14640 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2480, file: !2480, line: 482, type: !14641, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!14473, !14473}
!14643 = !{!14644, !14645}
!14644 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14640, file: !2480, line: 482, type: !14473)
!14645 = !DILocalVariable(name: "curr", scope: !14640, file: !2480, line: 484, type: !2372)
!14646 = !DILocation(line: 0, scope: !14640)
!14647 = !DILocation(line: 484, column: 26, scope: !14640)
!14648 = !DILocation(line: 493, column: 7, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14640, file: !2480, line: 493, column: 6)
!14650 = !DILocation(line: 493, column: 6, scope: !14640)
!14651 = !DILocation(line: 494, column: 3, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14649, file: !2480, line: 493, column: 49)
!14653 = !DILocation(line: 495, column: 2, scope: !14652)
!14654 = !DILocation(line: 496, column: 2, scope: !14640)
!14655 = !DILocation(line: 499, column: 1, scope: !14640)
!14656 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13641, file: !13641, line: 106, type: !14622, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14657)
!14657 = !{!14658, !14659}
!14658 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !13641, line: 106, type: !2372)
!14659 = !DILocalVariable(name: "state", scope: !14656, file: !13641, line: 108, type: !195)
!14660 = !DILocation(line: 0, scope: !14656)
!14661 = !DILocation(line: 108, column: 31, scope: !14656)
!14662 = !DILocation(line: 110, column: 16, scope: !14656)
!14663 = !DILocation(line: 111, column: 41, scope: !14656)
!14664 = !DILocation(line: 110, column: 2, scope: !14656)
!14665 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 393, type: !14439, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14666)
!14666 = !{!14667}
!14667 = !DILocalVariable(name: "thread", arg: 1, scope: !14665, file: !2480, line: 393, type: !2372)
!14668 = !DILocation(line: 0, scope: !14665)
!14669 = !DILocation(line: 395, column: 6, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14665, file: !2480, line: 395, column: 6)
!14671 = !DILocation(line: 395, column: 6, scope: !14665)
!14672 = !DILocalVariable(name: "thread", arg: 1, scope: !14673, file: !2480, line: 264, type: !2372)
!14673 = distinct !DISubprogram(name: "dequeue_thread", scope: !2480, file: !2480, line: 264, type: !14439, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14674)
!14674 = !{!14672}
!14675 = !DILocation(line: 0, scope: !14673, inlinedAt: !14676)
!14676 = distinct !DILocation(line: 396, column: 3, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14670, file: !2480, line: 395, column: 34)
!14678 = !DILocation(line: 266, column: 15, scope: !14673, inlinedAt: !14676)
!14679 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !14676)
!14680 = !DILocalVariable(name: "thread", arg: 1, scope: !14681, file: !2480, line: 232, type: !2372)
!14681 = distinct !DISubprogram(name: "runq_remove", scope: !2480, file: !2480, line: 232, type: !14439, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14682)
!14682 = !{!14680}
!14683 = !DILocation(line: 0, scope: !14681, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !14676)
!14685 = distinct !DILexicalBlock(scope: !14686, file: !2480, line: 267, column: 35)
!14686 = distinct !DILexicalBlock(scope: !14673, file: !2480, line: 267, column: 6)
!14687 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !14684)
!14688 = !DILocation(line: 397, column: 2, scope: !14677)
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14690, file: !2480, line: 250, type: !2372)
!14690 = distinct !DISubprogram(name: "queue_thread", scope: !2480, file: !2480, line: 250, type: !14439, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14691)
!14691 = !{!14689}
!14692 = !DILocation(line: 0, scope: !14690, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 398, column: 2, scope: !14665)
!14694 = !DILocation(line: 252, column: 15, scope: !14690, inlinedAt: !14693)
!14695 = !DILocation(line: 252, column: 28, scope: !14690, inlinedAt: !14693)
!14696 = !DILocalVariable(name: "thread", arg: 1, scope: !14697, file: !2480, line: 227, type: !2372)
!14697 = distinct !DISubprogram(name: "runq_add", scope: !2480, file: !2480, line: 227, type: !14439, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14698)
!14698 = !{!14696}
!14699 = !DILocation(line: 0, scope: !14697, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 254, column: 3, scope: !14701, inlinedAt: !14693)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2480, line: 253, column: 35)
!14702 = distinct !DILexicalBlock(scope: !14690, file: !2480, line: 253, column: 6)
!14703 = !DILocalVariable(name: "pq", arg: 1, scope: !14704, file: !2480, line: 181, type: !14707)
!14704 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2480, file: !2480, line: 181, type: !14705, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14708)
!14705 = !DISubroutineType(types: !14706)
!14706 = !{null, !14707, !2372}
!14707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!14708 = !{!14703, !14709, !14710}
!14709 = !DILocalVariable(name: "thread", arg: 2, scope: !14704, file: !2480, line: 182, type: !2372)
!14710 = !DILocalVariable(name: "t", scope: !14704, file: !2480, line: 184, type: !2372)
!14711 = !DILocation(line: 0, scope: !14704, inlinedAt: !14712)
!14712 = distinct !DILocation(line: 229, column: 2, scope: !14697, inlinedAt: !14700)
!14713 = !DILocation(line: 186, column: 2, scope: !14714, inlinedAt: !14712)
!14714 = distinct !DILexicalBlock(scope: !14715, file: !2480, line: 186, column: 2)
!14715 = distinct !DILexicalBlock(scope: !14704, file: !2480, line: 186, column: 2)
!14716 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !14712)
!14717 = !DILocation(line: 186, column: 2, scope: !14718, inlinedAt: !14712)
!14718 = distinct !DILexicalBlock(scope: !14714, file: !2480, line: 186, column: 2)
!14719 = !DILocation(line: 188, column: 2, scope: !14720, inlinedAt: !14712)
!14720 = distinct !DILexicalBlock(scope: !14704, file: !2480, line: 188, column: 2)
!14721 = !DILocation(line: 188, column: 2, scope: !14722, inlinedAt: !14712)
!14722 = distinct !DILexicalBlock(scope: !14720, file: !2480, line: 188, column: 2)
!14723 = !DILocation(line: 0, scope: !14720, inlinedAt: !14712)
!14724 = !DILocation(line: 189, column: 7, scope: !14725, inlinedAt: !14712)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !2480, line: 189, column: 7)
!14726 = distinct !DILexicalBlock(scope: !14722, file: !2480, line: 188, column: 56)
!14727 = !DILocation(line: 189, column: 35, scope: !14725, inlinedAt: !14712)
!14728 = !DILocation(line: 189, column: 7, scope: !14726, inlinedAt: !14712)
!14729 = !DILocation(line: 191, column: 21, scope: !14730, inlinedAt: !14712)
!14730 = distinct !DILexicalBlock(scope: !14725, file: !2480, line: 189, column: 40)
!14731 = !DILocation(line: 190, column: 4, scope: !14730, inlinedAt: !14712)
!14732 = !DILocation(line: 192, column: 4, scope: !14730, inlinedAt: !14712)
!14733 = distinct !{!14733, !14719, !14734}
!14734 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !14712)
!14735 = !DILocation(line: 196, column: 37, scope: !14704, inlinedAt: !14712)
!14736 = !DILocation(line: 196, column: 2, scope: !14704, inlinedAt: !14712)
!14737 = !DILocation(line: 197, column: 1, scope: !14704, inlinedAt: !14712)
!14738 = !DILocation(line: 399, column: 25, scope: !14665)
!14739 = !DILocation(line: 399, column: 22, scope: !14665)
!14740 = !DILocation(line: 399, column: 2, scope: !14665)
!14741 = !DILocation(line: 400, column: 1, scope: !14665)
!14742 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13641, file: !13641, line: 136, type: !14622, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14743)
!14743 = !{!14744}
!14744 = !DILocalVariable(name: "thread", arg: 1, scope: !14742, file: !13641, line: 136, type: !2372)
!14745 = !DILocation(line: 0, scope: !14742)
!14746 = !DILocation(line: 138, column: 9, scope: !14742)
!14747 = !DILocation(line: 138, column: 2, scope: !14742)
!14748 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2480, file: !2480, line: 1137, type: !14705, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14749)
!14749 = !{!14750, !14751}
!14750 = !DILocalVariable(name: "pq", arg: 1, scope: !14748, file: !2480, line: 1137, type: !14707)
!14751 = !DILocalVariable(name: "thread", arg: 2, scope: !14748, file: !2480, line: 1137, type: !2372)
!14752 = !DILocation(line: 0, scope: !14748)
!14753 = !DILocation(line: 1139, column: 2, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14755, file: !2480, line: 1139, column: 2)
!14755 = distinct !DILexicalBlock(scope: !14748, file: !2480, line: 1139, column: 2)
!14756 = !DILocation(line: 1139, column: 2, scope: !14755)
!14757 = !DILocation(line: 1139, column: 2, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !2480, line: 1139, column: 2)
!14759 = !DILocation(line: 1141, column: 33, scope: !14748)
!14760 = !DILocation(line: 1141, column: 2, scope: !14748)
!14761 = !DILocation(line: 1142, column: 1, scope: !14748)
!14762 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13641, file: !13641, line: 83, type: !14622, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14763)
!14763 = !{!14764}
!14764 = !DILocalVariable(name: "thread", arg: 1, scope: !14762, file: !13641, line: 83, type: !2372)
!14765 = !DILocation(line: 0, scope: !14762)
!14766 = !DILocation(line: 89, column: 16, scope: !14762)
!14767 = !DILocation(line: 89, column: 2, scope: !14762)
!14768 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14769, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14771)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!2476, !14707}
!14771 = !{!14772}
!14772 = !DILocalVariable(name: "list", arg: 1, scope: !14768, file: !319, line: 294, type: !14707)
!14773 = !DILocation(line: 0, scope: !14768)
!14774 = !DILocation(line: 296, column: 9, scope: !14768)
!14775 = !DILocation(line: 296, column: 49, scope: !14768)
!14776 = !DILocation(line: 296, column: 2, scope: !14768)
!14777 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14778, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14780)
!14778 = !DISubroutineType(types: !14779)
!14779 = !{null, !2476, !2476}
!14780 = !{!14781, !14782, !14783}
!14781 = !DILocalVariable(name: "successor", arg: 1, scope: !14777, file: !319, line: 443, type: !2476)
!14782 = !DILocalVariable(name: "node", arg: 2, scope: !14777, file: !319, line: 443, type: !2476)
!14783 = !DILocalVariable(name: "prev", scope: !14777, file: !319, line: 445, type: !14784)
!14784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2476)
!14785 = !DILocation(line: 0, scope: !14777)
!14786 = !DILocation(line: 445, column: 39, scope: !14777)
!14787 = !DILocation(line: 447, column: 8, scope: !14777)
!14788 = !DILocation(line: 447, column: 13, scope: !14777)
!14789 = !DILocation(line: 448, column: 8, scope: !14777)
!14790 = !DILocation(line: 448, column: 13, scope: !14777)
!14791 = !DILocation(line: 449, column: 8, scope: !14777)
!14792 = !DILocation(line: 449, column: 13, scope: !14777)
!14793 = !DILocation(line: 450, column: 18, scope: !14777)
!14794 = !DILocation(line: 451, column: 1, scope: !14777)
!14795 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14796, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14798)
!14796 = !DISubroutineType(types: !14797)
!14797 = !{!2476, !14707, !2476}
!14798 = !{!14799, !14800}
!14799 = !DILocalVariable(name: "list", arg: 1, scope: !14795, file: !319, line: 341, type: !14707)
!14800 = !DILocalVariable(name: "node", arg: 2, scope: !14795, file: !319, line: 342, type: !2476)
!14801 = !DILocation(line: 0, scope: !14795)
!14802 = !DILocation(line: 344, column: 15, scope: !14795)
!14803 = !DILocation(line: 344, column: 9, scope: !14795)
!14804 = !DILocation(line: 344, column: 26, scope: !14795)
!14805 = !DILocation(line: 344, column: 2, scope: !14795)
!14806 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14807, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14809)
!14807 = !DISubroutineType(types: !14808)
!14808 = !{null, !14707, !2476}
!14809 = !{!14810, !14811, !14812}
!14810 = !DILocalVariable(name: "list", arg: 1, scope: !14806, file: !319, line: 404, type: !14707)
!14811 = !DILocalVariable(name: "node", arg: 2, scope: !14806, file: !319, line: 404, type: !2476)
!14812 = !DILocalVariable(name: "tail", scope: !14806, file: !319, line: 406, type: !14784)
!14813 = !DILocation(line: 0, scope: !14806)
!14814 = !DILocation(line: 406, column: 34, scope: !14806)
!14815 = !DILocation(line: 408, column: 8, scope: !14806)
!14816 = !DILocation(line: 408, column: 13, scope: !14806)
!14817 = !DILocation(line: 409, column: 8, scope: !14806)
!14818 = !DILocation(line: 409, column: 13, scope: !14806)
!14819 = !DILocation(line: 411, column: 8, scope: !14806)
!14820 = !DILocation(line: 411, column: 13, scope: !14806)
!14821 = !DILocation(line: 412, column: 13, scope: !14806)
!14822 = !DILocation(line: 413, column: 1, scope: !14806)
!14823 = distinct !DISubprogram(name: "update_cache", scope: !2480, file: !2480, line: 559, type: !9190, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14824)
!14824 = !{!14825, !14826}
!14825 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14823, file: !2480, line: 559, type: !107)
!14826 = !DILocalVariable(name: "thread", scope: !14823, file: !2480, line: 562, type: !2372)
!14827 = !DILocation(line: 0, scope: !14823)
!14828 = !DILocation(line: 239, column: 9, scope: !14829, inlinedAt: !14832)
!14829 = distinct !DISubprogram(name: "runq_best", scope: !2480, file: !2480, line: 237, type: !14830, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!14830 = !DISubroutineType(types: !14831)
!14831 = !{!2372}
!14832 = distinct !DILocation(line: 314, column: 28, scope: !14833, inlinedAt: !14836)
!14833 = distinct !DISubprogram(name: "next_up", scope: !2480, file: !2480, line: 312, type: !14830, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14834)
!14834 = !{!14835}
!14835 = !DILocalVariable(name: "thread", scope: !14833, file: !2480, line: 314, type: !2372)
!14836 = distinct !DILocation(line: 562, column: 28, scope: !14823)
!14837 = !DILocation(line: 0, scope: !14833, inlinedAt: !14836)
!14838 = !DILocation(line: 340, column: 17, scope: !14833, inlinedAt: !14836)
!14839 = !DILocation(line: 340, column: 9, scope: !14833, inlinedAt: !14836)
!14840 = !DILocalVariable(name: "thread", arg: 1, scope: !14841, file: !2480, line: 127, type: !2372)
!14841 = distinct !DISubprogram(name: "should_preempt", scope: !2480, file: !2480, line: 127, type: !14842, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14844)
!14842 = !DISubroutineType(types: !14843)
!14843 = !{!145, !2372, !107}
!14844 = !{!14840, !14845}
!14845 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14841, file: !2480, line: 128, type: !107)
!14846 = !DILocation(line: 0, scope: !14841, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 564, column: 6, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14823, file: !2480, line: 564, column: 6)
!14849 = !DILocation(line: 133, column: 17, scope: !14850, inlinedAt: !14847)
!14850 = distinct !DILexicalBlock(scope: !14841, file: !2480, line: 133, column: 6)
!14851 = !DILocation(line: 0, scope: !14848)
!14852 = !DILocation(line: 133, column: 6, scope: !14841, inlinedAt: !14847)
!14853 = !DILocation(line: 137, column: 2, scope: !14854, inlinedAt: !14847)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !2480, line: 137, column: 2)
!14855 = distinct !DILexicalBlock(scope: !14841, file: !2480, line: 137, column: 2)
!14856 = !DILocation(line: 137, column: 2, scope: !14855, inlinedAt: !14847)
!14857 = !DILocation(line: 137, column: 2, scope: !14858, inlinedAt: !14847)
!14858 = distinct !DILexicalBlock(scope: !14854, file: !2480, line: 137, column: 2)
!14859 = !DILocation(line: 140, column: 6, scope: !14860, inlinedAt: !14847)
!14860 = distinct !DILexicalBlock(scope: !14841, file: !2480, line: 140, column: 6)
!14861 = !DILocation(line: 140, column: 6, scope: !14841, inlinedAt: !14847)
!14862 = !DILocation(line: 150, column: 9, scope: !14863, inlinedAt: !14847)
!14863 = distinct !DILexicalBlock(scope: !14841, file: !2480, line: 149, column: 6)
!14864 = !DILocation(line: 149, column: 6, scope: !14841, inlinedAt: !14847)
!14865 = !DILocation(line: 157, column: 6, scope: !14866, inlinedAt: !14847)
!14866 = distinct !DILexicalBlock(scope: !14841, file: !2480, line: 157, column: 6)
!14867 = !DILocation(line: 564, column: 6, scope: !14823)
!14868 = !DILocation(line: 566, column: 14, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !2480, line: 566, column: 7)
!14870 = distinct !DILexicalBlock(scope: !14848, file: !2480, line: 564, column: 42)
!14871 = !DILocation(line: 566, column: 7, scope: !14870)
!14872 = !DILocation(line: 567, column: 4, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14869, file: !2480, line: 566, column: 27)
!14874 = !DILocation(line: 568, column: 3, scope: !14873)
!14875 = !DILocation(line: 585, column: 1, scope: !14823)
!14876 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2480, file: !2480, line: 1144, type: !14877, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14879)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!2372, !14707}
!14879 = !{!14880, !14881, !14882}
!14880 = !DILocalVariable(name: "pq", arg: 1, scope: !14876, file: !2480, line: 1144, type: !14707)
!14881 = !DILocalVariable(name: "thread", scope: !14876, file: !2480, line: 1146, type: !2372)
!14882 = !DILocalVariable(name: "n", scope: !14876, file: !2480, line: 1147, type: !2476)
!14883 = !DILocation(line: 0, scope: !14876)
!14884 = !DILocation(line: 1147, column: 19, scope: !14876)
!14885 = !DILocation(line: 1152, column: 2, scope: !14876)
!14886 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13641, file: !13641, line: 115, type: !14622, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14887)
!14887 = !{!14888}
!14888 = !DILocalVariable(name: "thread", arg: 1, scope: !14886, file: !13641, line: 115, type: !2372)
!14889 = !DILocation(line: 0, scope: !14886)
!14890 = !DILocation(line: 117, column: 46, scope: !14886)
!14891 = !DILocation(line: 117, column: 10, scope: !14886)
!14892 = !DILocation(line: 117, column: 9, scope: !14886)
!14893 = !DILocation(line: 117, column: 2, scope: !14886)
!14894 = distinct !DISubprogram(name: "is_preempt", scope: !2480, file: !2480, line: 62, type: !14457, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14895)
!14895 = !{!14896}
!14896 = !DILocalVariable(name: "thread", arg: 1, scope: !14894, file: !2480, line: 62, type: !2372)
!14897 = !DILocation(line: 0, scope: !14894)
!14898 = !DILocation(line: 65, column: 22, scope: !14894)
!14899 = !DILocation(line: 65, column: 30, scope: !14894)
!14900 = !DILocation(line: 65, column: 2, scope: !14894)
!14901 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14070, file: !14070, line: 35, type: !14902, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14906)
!14902 = !DISubroutineType(types: !14903)
!14903 = !{!145, !14904}
!14904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14905, size: 32)
!14905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2423)
!14906 = !{!14907}
!14907 = !DILocalVariable(name: "to", arg: 1, scope: !14901, file: !14070, line: 35, type: !14904)
!14908 = !DILocation(line: 0, scope: !14901)
!14909 = !DILocation(line: 37, column: 35, scope: !14901)
!14910 = !DILocation(line: 37, column: 10, scope: !14901)
!14911 = !DILocation(line: 37, column: 9, scope: !14901)
!14912 = !DILocation(line: 37, column: 2, scope: !14901)
!14913 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14914, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14918)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!145, !14916}
!14916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14917, size: 32)
!14917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "node", arg: 1, scope: !14913, file: !319, line: 225, type: !14916)
!14920 = !DILocation(line: 0, scope: !14913)
!14921 = !DILocation(line: 227, column: 15, scope: !14913)
!14922 = !DILocation(line: 227, column: 20, scope: !14913)
!14923 = !DILocation(line: 227, column: 2, scope: !14913)
!14924 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14796, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14925)
!14925 = !{!14926, !14927}
!14926 = !DILocalVariable(name: "list", arg: 1, scope: !14924, file: !319, line: 325, type: !14707)
!14927 = !DILocalVariable(name: "node", arg: 2, scope: !14924, file: !319, line: 326, type: !2476)
!14928 = !DILocation(line: 0, scope: !14924)
!14929 = !DILocation(line: 328, column: 24, scope: !14924)
!14930 = !DILocation(line: 328, column: 15, scope: !14924)
!14931 = !DILocation(line: 328, column: 9, scope: !14924)
!14932 = !DILocation(line: 328, column: 45, scope: !14924)
!14933 = !DILocation(line: 328, column: 2, scope: !14924)
!14934 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14935, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14937)
!14935 = !DISubroutineType(types: !14936)
!14936 = !{!145, !14707}
!14937 = !{!14938}
!14938 = !DILocalVariable(name: "list", arg: 1, scope: !14934, file: !319, line: 266, type: !14707)
!14939 = !DILocation(line: 0, scope: !14934)
!14940 = !DILocation(line: 268, column: 15, scope: !14934)
!14941 = !DILocation(line: 268, column: 20, scope: !14934)
!14942 = !DILocation(line: 268, column: 2, scope: !14934)
!14943 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14944, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14946)
!14944 = !DISubroutineType(types: !14945)
!14945 = !{null, !2476}
!14946 = !{!14947, !14948, !14949}
!14947 = !DILocalVariable(name: "node", arg: 1, scope: !14943, file: !319, line: 496, type: !2476)
!14948 = !DILocalVariable(name: "prev", scope: !14943, file: !319, line: 498, type: !14784)
!14949 = !DILocalVariable(name: "next", scope: !14943, file: !319, line: 499, type: !14784)
!14950 = !DILocation(line: 0, scope: !14943)
!14951 = !DILocation(line: 498, column: 34, scope: !14943)
!14952 = !DILocation(line: 499, column: 34, scope: !14943)
!14953 = !DILocation(line: 501, column: 8, scope: !14943)
!14954 = !DILocation(line: 501, column: 13, scope: !14943)
!14955 = !DILocation(line: 502, column: 8, scope: !14943)
!14956 = !DILocation(line: 502, column: 13, scope: !14943)
!14957 = !DILocation(line: 503, column: 2, scope: !14943)
!14958 = !DILocation(line: 504, column: 1, scope: !14943)
!14959 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14944, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14960)
!14960 = !{!14961}
!14961 = !DILocalVariable(name: "node", arg: 1, scope: !14959, file: !319, line: 211, type: !2476)
!14962 = !DILocation(line: 0, scope: !14959)
!14963 = !DILocation(line: 213, column: 8, scope: !14959)
!14964 = !DILocation(line: 213, column: 13, scope: !14959)
!14965 = !DILocation(line: 214, column: 8, scope: !14959)
!14966 = !DILocation(line: 214, column: 13, scope: !14959)
!14967 = !DILocation(line: 215, column: 1, scope: !14959)
!14968 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13641, file: !13641, line: 131, type: !14969, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14971)
!14969 = !DISubroutineType(types: !14970)
!14970 = !{!145, !2372, !152}
!14971 = !{!14972, !14973}
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14968, file: !13641, line: 131, type: !2372)
!14973 = !DILocalVariable(name: "state", arg: 2, scope: !14968, file: !13641, line: 131, type: !152)
!14974 = !DILocation(line: 0, scope: !14968)
!14975 = !DILocation(line: 133, column: 23, scope: !14968)
!14976 = !DILocation(line: 133, column: 10, scope: !14968)
!14977 = !DILocation(line: 133, column: 36, scope: !14968)
!14978 = !DILocation(line: 133, column: 45, scope: !14968)
!14979 = !DILocation(line: 133, column: 2, scope: !14968)
!14980 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13641, file: !13641, line: 211, type: !14981, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14983)
!14981 = !DISubroutineType(types: !14982)
!14982 = !{!145, !107, !107}
!14983 = !{!14984, !14985}
!14984 = !DILocalVariable(name: "prio", arg: 1, scope: !14980, file: !13641, line: 211, type: !107)
!14985 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14980, file: !13641, line: 211, type: !107)
!14986 = !DILocation(line: 0, scope: !14980)
!14987 = !DILocation(line: 213, column: 9, scope: !14980)
!14988 = !DILocation(line: 213, column: 2, scope: !14980)
!14989 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13641, file: !13641, line: 206, type: !14981, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14990)
!14990 = !{!14991, !14992}
!14991 = !DILocalVariable(name: "prio1", arg: 1, scope: !14989, file: !13641, line: 206, type: !107)
!14992 = !DILocalVariable(name: "prio2", arg: 2, scope: !14989, file: !13641, line: 206, type: !107)
!14993 = !DILocation(line: 0, scope: !14989)
!14994 = !DILocation(line: 208, column: 15, scope: !14989)
!14995 = !DILocation(line: 208, column: 2, scope: !14989)
!14996 = distinct !DISubprogram(name: "z_ready_thread", scope: !2480, file: !2480, line: 635, type: !14439, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14997)
!14997 = !{!14998, !14999, !15001}
!14998 = !DILocalVariable(name: "thread", arg: 1, scope: !14996, file: !2480, line: 635, type: !2372)
!14999 = !DILocalVariable(name: "__i", scope: !15000, file: !2480, line: 637, type: !14473)
!15000 = distinct !DILexicalBlock(scope: !14996, file: !2480, line: 637, column: 2)
!15001 = !DILocalVariable(name: "__key", scope: !15000, file: !2480, line: 637, type: !14473)
!15002 = !DILocation(line: 0, scope: !14996)
!15003 = !DILocation(line: 0, scope: !15000)
!15004 = !DILocation(line: 0, scope: !14481, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 637, column: 2, scope: !15000)
!15006 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15005)
!15008 = !DILocation(line: 0, scope: !14490, inlinedAt: !15007)
!15009 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15005)
!15010 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15005)
!15011 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15005)
!15012 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15005)
!15013 = !DILocation(line: 639, column: 4, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !2480, line: 638, column: 41)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !2480, line: 638, column: 7)
!15016 = distinct !DILexicalBlock(scope: !15017, file: !2480, line: 637, column: 26)
!15017 = distinct !DILexicalBlock(scope: !15000, file: !2480, line: 637, column: 2)
!15018 = !DILocation(line: 0, scope: !14515, inlinedAt: !15019)
!15019 = distinct !DILocation(line: 637, column: 2, scope: !15017)
!15020 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15019)
!15021 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15019)
!15022 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15019)
!15023 = !DILocation(line: 0, scope: !14529, inlinedAt: !15024)
!15024 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15019)
!15025 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15024)
!15026 = !DILocation(line: 642, column: 1, scope: !14996)
!15027 = distinct !DISubprogram(name: "ready_thread", scope: !2480, file: !2480, line: 617, type: !14439, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15028)
!15028 = !{!15029}
!15029 = !DILocalVariable(name: "thread", arg: 1, scope: !15027, file: !2480, line: 617, type: !2372)
!15030 = !DILocation(line: 0, scope: !15027)
!15031 = !DILocation(line: 626, column: 7, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15027, file: !2480, line: 626, column: 6)
!15033 = !DILocation(line: 626, column: 34, scope: !15032)
!15034 = !DILocation(line: 626, column: 37, scope: !15032)
!15035 = !DILocation(line: 626, column: 6, scope: !15027)
!15036 = !DILocation(line: 0, scope: !14690, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 629, column: 3, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15032, file: !2480, line: 626, column: 64)
!15039 = !DILocation(line: 252, column: 15, scope: !14690, inlinedAt: !15037)
!15040 = !DILocation(line: 252, column: 28, scope: !14690, inlinedAt: !15037)
!15041 = !DILocation(line: 0, scope: !14697, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 254, column: 3, scope: !14701, inlinedAt: !15037)
!15043 = !DILocation(line: 0, scope: !14704, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 229, column: 2, scope: !14697, inlinedAt: !15042)
!15045 = !DILocation(line: 186, column: 2, scope: !14714, inlinedAt: !15044)
!15046 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15044)
!15047 = !DILocation(line: 186, column: 2, scope: !14718, inlinedAt: !15044)
!15048 = !DILocation(line: 188, column: 2, scope: !14720, inlinedAt: !15044)
!15049 = !DILocation(line: 188, column: 2, scope: !14722, inlinedAt: !15044)
!15050 = !DILocation(line: 0, scope: !14720, inlinedAt: !15044)
!15051 = !DILocation(line: 189, column: 7, scope: !14725, inlinedAt: !15044)
!15052 = !DILocation(line: 189, column: 35, scope: !14725, inlinedAt: !15044)
!15053 = !DILocation(line: 189, column: 7, scope: !14726, inlinedAt: !15044)
!15054 = !DILocation(line: 191, column: 21, scope: !14730, inlinedAt: !15044)
!15055 = !DILocation(line: 190, column: 4, scope: !14730, inlinedAt: !15044)
!15056 = !DILocation(line: 192, column: 4, scope: !14730, inlinedAt: !15044)
!15057 = distinct !{!15057, !15048, !15058}
!15058 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15044)
!15059 = !DILocation(line: 196, column: 37, scope: !14704, inlinedAt: !15044)
!15060 = !DILocation(line: 196, column: 2, scope: !14704, inlinedAt: !15044)
!15061 = !DILocation(line: 197, column: 1, scope: !14704, inlinedAt: !15044)
!15062 = !DILocation(line: 630, column: 3, scope: !15038)
!15063 = !DILocation(line: 632, column: 2, scope: !15038)
!15064 = !DILocation(line: 633, column: 1, scope: !15027)
!15065 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13641, file: !13641, line: 120, type: !14622, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15066)
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "thread", arg: 1, scope: !15065, file: !13641, line: 120, type: !2372)
!15068 = !DILocation(line: 0, scope: !15065)
!15069 = !DILocation(line: 122, column: 12, scope: !15065)
!15070 = !DILocation(line: 122, column: 62, scope: !15065)
!15071 = !DILocation(line: 123, column: 4, scope: !15065)
!15072 = !DILocation(line: 122, column: 2, scope: !15065)
!15073 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 644, type: !14439, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15074)
!15074 = !{!15075, !15076, !15078}
!15075 = !DILocalVariable(name: "thread", arg: 1, scope: !15073, file: !2480, line: 644, type: !2372)
!15076 = !DILocalVariable(name: "__i", scope: !15077, file: !2480, line: 646, type: !14473)
!15077 = distinct !DILexicalBlock(scope: !15073, file: !2480, line: 646, column: 2)
!15078 = !DILocalVariable(name: "__key", scope: !15077, file: !2480, line: 646, type: !14473)
!15079 = !DILocation(line: 0, scope: !15073)
!15080 = !DILocation(line: 0, scope: !15077)
!15081 = !DILocation(line: 0, scope: !14481, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 646, column: 2, scope: !15077)
!15083 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15082)
!15085 = !DILocation(line: 0, scope: !14490, inlinedAt: !15084)
!15086 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15082)
!15087 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15082)
!15088 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15082)
!15089 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15082)
!15090 = !DILocation(line: 647, column: 3, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15092, file: !2480, line: 646, column: 26)
!15092 = distinct !DILexicalBlock(scope: !15077, file: !2480, line: 646, column: 2)
!15093 = !DILocation(line: 0, scope: !14515, inlinedAt: !15094)
!15094 = distinct !DILocation(line: 646, column: 2, scope: !15092)
!15095 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15094)
!15096 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15094)
!15097 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15094)
!15098 = !DILocation(line: 0, scope: !14529, inlinedAt: !15099)
!15099 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15094)
!15100 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15099)
!15101 = !DILocation(line: 649, column: 1, scope: !15073)
!15102 = distinct !DISubprogram(name: "z_sched_start", scope: !2480, file: !2480, line: 651, type: !14439, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15103)
!15103 = !{!15104, !15105}
!15104 = !DILocalVariable(name: "thread", arg: 1, scope: !15102, file: !2480, line: 651, type: !2372)
!15105 = !DILocalVariable(name: "key", scope: !15102, file: !2480, line: 653, type: !14473)
!15106 = !DILocation(line: 0, scope: !15102)
!15107 = !DILocation(line: 0, scope: !14481, inlinedAt: !15108)
!15108 = distinct !DILocation(line: 653, column: 25, scope: !15102)
!15109 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15110)
!15110 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15108)
!15111 = !DILocation(line: 0, scope: !14490, inlinedAt: !15110)
!15112 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15108)
!15113 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15108)
!15114 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15108)
!15115 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15108)
!15116 = !DILocation(line: 655, column: 6, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15102, file: !2480, line: 655, column: 6)
!15118 = !DILocation(line: 655, column: 6, scope: !15102)
!15119 = !DILocation(line: 0, scope: !14515, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 656, column: 3, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15117, file: !2480, line: 655, column: 36)
!15122 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15120)
!15123 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15120)
!15124 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15120)
!15125 = !DILocation(line: 0, scope: !14529, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15120)
!15127 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15126)
!15128 = !DILocation(line: 657, column: 3, scope: !15121)
!15129 = !DILocation(line: 660, column: 2, scope: !15102)
!15130 = !DILocation(line: 661, column: 2, scope: !15102)
!15131 = !DILocation(line: 662, column: 2, scope: !15102)
!15132 = !DILocation(line: 663, column: 1, scope: !15102)
!15133 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13641, file: !13641, line: 126, type: !14622, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15134)
!15134 = !{!15135}
!15135 = !DILocalVariable(name: "thread", arg: 1, scope: !15133, file: !13641, line: 126, type: !2372)
!15136 = !DILocation(line: 0, scope: !15133)
!15137 = !DILocation(line: 128, column: 23, scope: !15133)
!15138 = !DILocation(line: 128, column: 36, scope: !15133)
!15139 = !DILocation(line: 128, column: 56, scope: !15133)
!15140 = !DILocation(line: 128, column: 2, scope: !15133)
!15141 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13641, file: !13641, line: 155, type: !14439, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15142)
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "thread", arg: 1, scope: !15141, file: !13641, line: 155, type: !2372)
!15144 = !DILocation(line: 0, scope: !15141)
!15145 = !DILocation(line: 157, column: 15, scope: !15141)
!15146 = !DILocation(line: 157, column: 28, scope: !15141)
!15147 = !DILocation(line: 158, column: 1, scope: !15141)
!15148 = distinct !DISubprogram(name: "z_reschedule", scope: !2480, file: !2480, line: 967, type: !14516, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15149)
!15149 = !{!15150, !15151}
!15150 = !DILocalVariable(name: "lock", arg: 1, scope: !15148, file: !2480, line: 967, type: !14484)
!15151 = !DILocalVariable(name: "key", arg: 2, scope: !15148, file: !2480, line: 967, type: !14473)
!15152 = !DILocation(line: 0, scope: !15148)
!15153 = !DILocation(line: 969, column: 6, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15148, file: !2480, line: 969, column: 6)
!15155 = !DILocation(line: 969, column: 23, scope: !15154)
!15156 = !DILocation(line: 969, column: 26, scope: !15154)
!15157 = !DILocation(line: 969, column: 6, scope: !15148)
!15158 = !DILocalVariable(name: "key", arg: 2, scope: !15159, file: !13745, line: 193, type: !14473)
!15159 = distinct !DISubprogram(name: "z_swap", scope: !13745, file: !13745, line: 193, type: !15160, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{!107, !14484, !14473}
!15162 = !{!15163, !15158}
!15163 = !DILocalVariable(name: "lock", arg: 1, scope: !15159, file: !13745, line: 193, type: !14484)
!15164 = !DILocation(line: 0, scope: !15159, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 970, column: 3, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15154, file: !2480, line: 969, column: 39)
!15167 = !DILocalVariable(name: "l", arg: 1, scope: !15168, file: !420, line: 221, type: !14484)
!15168 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15169, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{null, !14484}
!15171 = !{!15167}
!15172 = !DILocation(line: 0, scope: !15168, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !15165)
!15174 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !15173)
!15175 = distinct !DILexicalBlock(scope: !15176, file: !420, line: 225, column: 2)
!15176 = distinct !DILexicalBlock(scope: !15168, file: !420, line: 225, column: 2)
!15177 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15173)
!15178 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !15173)
!15179 = distinct !DILexicalBlock(scope: !15175, file: !420, line: 225, column: 2)
!15180 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !15165)
!15181 = !DILocation(line: 971, column: 2, scope: !15166)
!15182 = !DILocation(line: 0, scope: !14515, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 972, column: 3, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15154, file: !2480, line: 971, column: 9)
!15185 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15183)
!15186 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15183)
!15187 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15183)
!15188 = !DILocation(line: 0, scope: !14529, inlinedAt: !15189)
!15189 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15183)
!15190 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15189)
!15191 = !DILocation(line: 975, column: 1, scope: !15148)
!15192 = distinct !DISubprogram(name: "resched", scope: !2480, file: !2480, line: 940, type: !15193, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15195)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{!145, !152}
!15195 = !{!15196}
!15196 = !DILocalVariable(name: "key", arg: 1, scope: !15192, file: !2480, line: 940, type: !152)
!15197 = !DILocation(line: 0, scope: !15192)
!15198 = !DILocalVariable(name: "key", arg: 1, scope: !15199, file: !5957, line: 112, type: !32)
!15199 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5957, file: !5957, line: 112, type: !15200, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15202)
!15200 = !DISubroutineType(types: !15201)
!15201 = !{!145, !32}
!15202 = !{!15198}
!15203 = !DILocation(line: 0, scope: !15199, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 946, column: 9, scope: !15192)
!15205 = !DILocation(line: 115, column: 13, scope: !15199, inlinedAt: !15204)
!15206 = !DILocation(line: 946, column: 32, scope: !15192)
!15207 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !15211)
!15208 = distinct !DISubprogram(name: "__get_IPSR", scope: !6276, file: !6276, line: 1027, type: !6363, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15209)
!15209 = !{!15210}
!15210 = !DILocalVariable(name: "result", scope: !15208, file: !6276, line: 1029, type: !152)
!15211 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !15213)
!15212 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7328, file: !7328, line: 46, type: !7329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15213 = distinct !DILocation(line: 946, column: 36, scope: !15192)
!15214 = !{i64 2960275}
!15215 = !DILocation(line: 0, scope: !15208, inlinedAt: !15211)
!15216 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !15213)
!15217 = !DILocation(line: 946, column: 2, scope: !15192)
!15218 = distinct !DISubprogram(name: "need_swap", scope: !2480, file: !2480, line: 953, type: !7329, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15219)
!15219 = !{!15220}
!15220 = !DILocalVariable(name: "new_thread", scope: !15218, file: !2480, line: 959, type: !2372)
!15221 = !DILocation(line: 962, column: 31, scope: !15218)
!15222 = !DILocation(line: 0, scope: !15218)
!15223 = !DILocation(line: 963, column: 23, scope: !15218)
!15224 = !DILocation(line: 963, column: 20, scope: !15218)
!15225 = !DILocation(line: 963, column: 2, scope: !15218)
!15226 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13745, file: !13745, line: 181, type: !6286, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15227)
!15227 = !{!15228, !15229}
!15228 = !DILocalVariable(name: "key", arg: 1, scope: !15226, file: !13745, line: 181, type: !32)
!15229 = !DILocalVariable(name: "ret", scope: !15226, file: !13745, line: 183, type: !107)
!15230 = !DILocation(line: 0, scope: !15226)
!15231 = !DILocation(line: 185, column: 8, scope: !15226)
!15232 = !DILocation(line: 186, column: 2, scope: !15226)
!15233 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2480, file: !2480, line: 665, type: !14439, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15234)
!15234 = !{!15235, !15236, !15238}
!15235 = !DILocalVariable(name: "thread", arg: 1, scope: !15233, file: !2480, line: 665, type: !2372)
!15236 = !DILocalVariable(name: "__i", scope: !15237, file: !2480, line: 671, type: !14473)
!15237 = distinct !DILexicalBlock(scope: !15233, file: !2480, line: 671, column: 2)
!15238 = !DILocalVariable(name: "__key", scope: !15237, file: !2480, line: 671, type: !14473)
!15239 = !DILocation(line: 0, scope: !15233)
!15240 = !DILocation(line: 669, column: 8, scope: !15233)
!15241 = !DILocation(line: 0, scope: !15237)
!15242 = !DILocation(line: 0, scope: !14481, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 671, column: 2, scope: !15237)
!15244 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15243)
!15246 = !DILocation(line: 0, scope: !14490, inlinedAt: !15245)
!15247 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15243)
!15248 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15243)
!15249 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15243)
!15250 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15243)
!15251 = !DILocation(line: 672, column: 7, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15253, file: !2480, line: 672, column: 7)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2480, line: 671, column: 26)
!15254 = distinct !DILexicalBlock(scope: !15237, file: !2480, line: 671, column: 2)
!15255 = !DILocation(line: 672, column: 7, scope: !15253)
!15256 = !DILocation(line: 0, scope: !14673, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 673, column: 4, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15252, file: !2480, line: 672, column: 35)
!15259 = !DILocation(line: 266, column: 15, scope: !14673, inlinedAt: !15257)
!15260 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !15257)
!15261 = !DILocation(line: 0, scope: !14681, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !15257)
!15263 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !15262)
!15264 = !DILocation(line: 674, column: 3, scope: !15258)
!15265 = !DILocation(line: 675, column: 3, scope: !15253)
!15266 = !DILocation(line: 676, column: 26, scope: !15253)
!15267 = !DILocation(line: 676, column: 23, scope: !15253)
!15268 = !DILocation(line: 676, column: 3, scope: !15253)
!15269 = !DILocation(line: 0, scope: !14515, inlinedAt: !15270)
!15270 = distinct !DILocation(line: 671, column: 2, scope: !15254)
!15271 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15270)
!15272 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15270)
!15273 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15270)
!15274 = !DILocation(line: 0, scope: !14529, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15270)
!15276 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15275)
!15277 = !DILocation(line: 679, column: 16, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15233, file: !2480, line: 679, column: 6)
!15279 = !DILocation(line: 679, column: 13, scope: !15278)
!15280 = !DILocation(line: 679, column: 6, scope: !15233)
!15281 = !DILocation(line: 680, column: 3, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15278, file: !2480, line: 679, column: 26)
!15283 = !DILocation(line: 681, column: 2, scope: !15282)
!15284 = !DILocation(line: 684, column: 1, scope: !15233)
!15285 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14070, file: !14070, line: 52, type: !14457, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15286)
!15286 = !{!15287}
!15287 = !DILocalVariable(name: "thread", arg: 1, scope: !15285, file: !14070, line: 52, type: !2372)
!15288 = !DILocation(line: 0, scope: !15285)
!15289 = !DILocation(line: 54, column: 39, scope: !15285)
!15290 = !DILocation(line: 54, column: 9, scope: !15285)
!15291 = !DILocation(line: 54, column: 2, scope: !15285)
!15292 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13641, file: !13641, line: 141, type: !14439, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15293)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !13641, line: 141, type: !2372)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 143, column: 15, scope: !15292)
!15297 = !DILocation(line: 143, column: 28, scope: !15292)
!15298 = !DILocation(line: 146, column: 1, scope: !15292)
!15299 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13641, file: !13641, line: 73, type: !3111, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15300 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15301)
!15301 = distinct !DILocation(line: 75, column: 30, scope: !15299)
!15302 = !DILocation(line: 0, scope: !14490, inlinedAt: !15301)
!15303 = !DILocation(line: 75, column: 9, scope: !15299)
!15304 = !DILocation(line: 76, column: 1, scope: !15299)
!15305 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2480, file: !2480, line: 977, type: !6373, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15306)
!15306 = !{!15307}
!15307 = !DILocalVariable(name: "key", arg: 1, scope: !15305, file: !2480, line: 977, type: !152)
!15308 = !DILocation(line: 0, scope: !15305)
!15309 = !DILocation(line: 979, column: 6, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15305, file: !2480, line: 979, column: 6)
!15311 = !DILocation(line: 979, column: 6, scope: !15305)
!15312 = !DILocation(line: 980, column: 3, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15310, file: !2480, line: 979, column: 20)
!15314 = !DILocation(line: 981, column: 2, scope: !15313)
!15315 = !DILocation(line: 0, scope: !14529, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 982, column: 3, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15310, file: !2480, line: 981, column: 9)
!15318 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15316)
!15319 = !DILocation(line: 985, column: 1, scope: !15305)
!15320 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2480, file: !2480, line: 695, type: !14439, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15321)
!15321 = !{!15322, !15323}
!15322 = !DILocalVariable(name: "thread", arg: 1, scope: !15320, file: !2480, line: 695, type: !2372)
!15323 = !DILocalVariable(name: "key", scope: !15320, file: !2480, line: 699, type: !14473)
!15324 = !DILocation(line: 0, scope: !15320)
!15325 = !DILocation(line: 0, scope: !14481, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 699, column: 25, scope: !15320)
!15327 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15326)
!15329 = !DILocation(line: 0, scope: !14490, inlinedAt: !15328)
!15330 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15326)
!15331 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15326)
!15332 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15326)
!15333 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15326)
!15334 = !DILocation(line: 702, column: 7, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15320, file: !2480, line: 702, column: 6)
!15336 = !DILocation(line: 702, column: 6, scope: !15320)
!15337 = !DILocation(line: 0, scope: !14515, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 703, column: 3, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15335, file: !2480, line: 702, column: 38)
!15340 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15338)
!15341 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15338)
!15342 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15338)
!15343 = !DILocation(line: 0, scope: !14529, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15338)
!15345 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15344)
!15346 = !DILocation(line: 704, column: 3, scope: !15339)
!15347 = !DILocation(line: 707, column: 2, scope: !15320)
!15348 = !DILocation(line: 708, column: 2, scope: !15320)
!15349 = !DILocation(line: 710, column: 2, scope: !15320)
!15350 = !DILocation(line: 713, column: 1, scope: !15320)
!15351 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13641, file: !13641, line: 96, type: !14622, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15352)
!15352 = !{!15353}
!15353 = !DILocalVariable(name: "thread", arg: 1, scope: !15351, file: !13641, line: 96, type: !2372)
!15354 = !DILocation(line: 0, scope: !15351)
!15355 = !DILocation(line: 98, column: 23, scope: !15351)
!15356 = !DILocation(line: 98, column: 36, scope: !15351)
!15357 = !DILocation(line: 98, column: 57, scope: !15351)
!15358 = !DILocation(line: 98, column: 2, scope: !15351)
!15359 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13641, file: !13641, line: 148, type: !14439, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15360)
!15360 = !{!15361}
!15361 = !DILocalVariable(name: "thread", arg: 1, scope: !15359, file: !13641, line: 148, type: !2372)
!15362 = !DILocation(line: 0, scope: !15359)
!15363 = !DILocation(line: 150, column: 15, scope: !15359)
!15364 = !DILocation(line: 150, column: 28, scope: !15359)
!15365 = !DILocation(line: 153, column: 1, scope: !15359)
!15366 = distinct !DISubprogram(name: "z_pend_thread", scope: !2480, file: !2480, line: 770, type: !15367, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15373)
!15367 = !DISubroutineType(types: !15368)
!15368 = !{null, !2372, !2403, !15369}
!15369 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15370)
!15370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15371)
!15371 = !{!15372}
!15372 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15370, file: !565, line: 66, baseType: !564, size: 64)
!15373 = !{!15374, !15375, !15376, !15377, !15379}
!15374 = !DILocalVariable(name: "thread", arg: 1, scope: !15366, file: !2480, line: 770, type: !2372)
!15375 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15366, file: !2480, line: 770, type: !2403)
!15376 = !DILocalVariable(name: "timeout", arg: 3, scope: !15366, file: !2480, line: 771, type: !15369)
!15377 = !DILocalVariable(name: "__i", scope: !15378, file: !2480, line: 774, type: !14473)
!15378 = distinct !DILexicalBlock(scope: !15366, file: !2480, line: 774, column: 2)
!15379 = !DILocalVariable(name: "__key", scope: !15378, file: !2480, line: 774, type: !14473)
!15380 = !DILocation(line: 0, scope: !15366)
!15381 = !DILocation(line: 773, column: 2, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15383, file: !2480, line: 773, column: 2)
!15383 = distinct !DILexicalBlock(scope: !15366, file: !2480, line: 773, column: 2)
!15384 = !DILocation(line: 773, column: 2, scope: !15383)
!15385 = !DILocation(line: 773, column: 2, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15382, file: !2480, line: 773, column: 2)
!15387 = !DILocation(line: 0, scope: !15378)
!15388 = !DILocation(line: 0, scope: !14481, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 774, column: 2, scope: !15378)
!15390 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15389)
!15392 = !DILocation(line: 0, scope: !14490, inlinedAt: !15391)
!15393 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15389)
!15394 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15389)
!15395 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15389)
!15396 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15389)
!15397 = !DILocation(line: 775, column: 3, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !2480, line: 774, column: 26)
!15399 = distinct !DILexicalBlock(scope: !15378, file: !2480, line: 774, column: 2)
!15400 = !DILocation(line: 0, scope: !14515, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 774, column: 2, scope: !15399)
!15402 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15401)
!15403 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15401)
!15404 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15401)
!15405 = !DILocation(line: 0, scope: !14529, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15401)
!15407 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15406)
!15408 = !DILocation(line: 777, column: 1, scope: !15366)
!15409 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2480, file: !2480, line: 79, type: !14622, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15410)
!15410 = !{!15411}
!15411 = !DILocalVariable(name: "thread", arg: 1, scope: !15409, file: !2480, line: 79, type: !2372)
!15412 = !DILocation(line: 0, scope: !15409)
!15413 = !DILocation(line: 81, column: 23, scope: !15409)
!15414 = !DILocation(line: 81, column: 36, scope: !15409)
!15415 = !DILocation(line: 81, column: 53, scope: !15409)
!15416 = !DILocation(line: 81, column: 2, scope: !15409)
!15417 = distinct !DISubprogram(name: "pend_locked", scope: !2480, file: !2480, line: 760, type: !15367, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15418)
!15418 = !{!15419, !15420, !15421}
!15419 = !DILocalVariable(name: "thread", arg: 1, scope: !15417, file: !2480, line: 760, type: !2372)
!15420 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15417, file: !2480, line: 760, type: !2403)
!15421 = !DILocalVariable(name: "timeout", arg: 3, scope: !15417, file: !2480, line: 761, type: !15369)
!15422 = !DILocation(line: 0, scope: !15417)
!15423 = !DILocation(line: 766, column: 2, scope: !15417)
!15424 = !DILocation(line: 767, column: 2, scope: !15417)
!15425 = !DILocation(line: 768, column: 1, scope: !15417)
!15426 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2480, file: !2480, line: 740, type: !15427, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15429)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{null, !2372, !2403}
!15429 = !{!15430, !15431}
!15430 = !DILocalVariable(name: "thread", arg: 1, scope: !15426, file: !2480, line: 740, type: !2372)
!15431 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15426, file: !2480, line: 740, type: !2403)
!15432 = !DILocation(line: 0, scope: !15426)
!15433 = !DILocation(line: 742, column: 2, scope: !15426)
!15434 = !DILocation(line: 743, column: 2, scope: !15426)
!15435 = !DILocation(line: 747, column: 13, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15426, file: !2480, line: 747, column: 6)
!15437 = !DILocation(line: 747, column: 6, scope: !15426)
!15438 = !DILocation(line: 748, column: 16, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15436, file: !2480, line: 747, column: 22)
!15440 = !DILocation(line: 748, column: 26, scope: !15439)
!15441 = !DILocation(line: 749, column: 28, scope: !15439)
!15442 = !DILocation(line: 0, scope: !14704, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 749, column: 3, scope: !15439)
!15444 = !DILocation(line: 186, column: 2, scope: !14714, inlinedAt: !15443)
!15445 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15443)
!15446 = !DILocation(line: 186, column: 2, scope: !14718, inlinedAt: !15443)
!15447 = !DILocation(line: 188, column: 2, scope: !14720, inlinedAt: !15443)
!15448 = !DILocation(line: 188, column: 2, scope: !14722, inlinedAt: !15443)
!15449 = !DILocation(line: 0, scope: !14720, inlinedAt: !15443)
!15450 = !DILocation(line: 189, column: 7, scope: !14725, inlinedAt: !15443)
!15451 = !DILocation(line: 189, column: 35, scope: !14725, inlinedAt: !15443)
!15452 = !DILocation(line: 189, column: 7, scope: !14726, inlinedAt: !15443)
!15453 = !DILocation(line: 191, column: 21, scope: !14730, inlinedAt: !15443)
!15454 = !DILocation(line: 190, column: 4, scope: !14730, inlinedAt: !15443)
!15455 = !DILocation(line: 192, column: 4, scope: !14730, inlinedAt: !15443)
!15456 = distinct !{!15456, !15447, !15457}
!15457 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15443)
!15458 = !DILocation(line: 196, column: 37, scope: !14704, inlinedAt: !15443)
!15459 = !DILocation(line: 196, column: 2, scope: !14704, inlinedAt: !15443)
!15460 = !DILocation(line: 197, column: 1, scope: !14704, inlinedAt: !15443)
!15461 = !DILocation(line: 751, column: 1, scope: !15426)
!15462 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2480, file: !2480, line: 753, type: !15463, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15465)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{null, !2372, !15369}
!15465 = !{!15466, !15467}
!15466 = !DILocalVariable(name: "thread", arg: 1, scope: !15462, file: !2480, line: 753, type: !2372)
!15467 = !DILocalVariable(name: "timeout", arg: 2, scope: !15462, file: !2480, line: 753, type: !15369)
!15468 = !DILocation(line: 0, scope: !15462)
!15469 = !DILocation(line: 755, column: 7, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15462, file: !2480, line: 755, column: 6)
!15471 = !DILocation(line: 755, column: 6, scope: !15462)
!15472 = !DILocation(line: 756, column: 3, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15470, file: !2480, line: 755, column: 41)
!15474 = !DILocation(line: 757, column: 2, scope: !15473)
!15475 = !DILocation(line: 758, column: 1, scope: !15462)
!15476 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14070, file: !14070, line: 47, type: !15463, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15477)
!15477 = !{!15478, !15479}
!15478 = !DILocalVariable(name: "thread", arg: 1, scope: !15476, file: !14070, line: 47, type: !2372)
!15479 = !DILocalVariable(name: "ticks", arg: 2, scope: !15476, file: !14070, line: 47, type: !15369)
!15480 = !DILocation(line: 0, scope: !15476)
!15481 = !DILocation(line: 49, column: 30, scope: !15476)
!15482 = !DILocation(line: 49, column: 2, scope: !15476)
!15483 = !DILocation(line: 50, column: 1, scope: !15476)
!15484 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2480, file: !2480, line: 795, type: !2429, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15485)
!15485 = !{!15486, !15487, !15488, !15490, !15491}
!15486 = !DILocalVariable(name: "timeout", arg: 1, scope: !15484, file: !2480, line: 795, type: !2431)
!15487 = !DILocalVariable(name: "thread", scope: !15484, file: !2480, line: 797, type: !2372)
!15488 = !DILocalVariable(name: "__i", scope: !15489, file: !2480, line: 800, type: !14473)
!15489 = distinct !DILexicalBlock(scope: !15484, file: !2480, line: 800, column: 2)
!15490 = !DILocalVariable(name: "__key", scope: !15489, file: !2480, line: 800, type: !14473)
!15491 = !DILocalVariable(name: "killed", scope: !15492, file: !2480, line: 801, type: !145)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !2480, line: 800, column: 26)
!15493 = distinct !DILexicalBlock(scope: !15489, file: !2480, line: 800, column: 2)
!15494 = !DILocation(line: 0, scope: !15484)
!15495 = !DILocation(line: 797, column: 28, scope: !15484)
!15496 = !DILocation(line: 0, scope: !15489)
!15497 = !DILocation(line: 0, scope: !14481, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 800, column: 2, scope: !15489)
!15499 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15498)
!15501 = !DILocation(line: 0, scope: !14490, inlinedAt: !15500)
!15502 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15498)
!15503 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15498)
!15504 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15498)
!15505 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15498)
!15506 = !DILocation(line: 801, column: 27, scope: !15492)
!15507 = !DILocation(line: 801, column: 32, scope: !15492)
!15508 = !DILocation(line: 801, column: 61, scope: !15492)
!15509 = !DILocation(line: 0, scope: !15492)
!15510 = !DILocation(line: 804, column: 7, scope: !15492)
!15511 = !DILocation(line: 805, column: 21, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2480, line: 805, column: 8)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2480, line: 804, column: 16)
!15514 = distinct !DILexicalBlock(scope: !15492, file: !2480, line: 804, column: 7)
!15515 = !DILocation(line: 805, column: 31, scope: !15512)
!15516 = !DILocation(line: 805, column: 8, scope: !15513)
!15517 = !DILocation(line: 806, column: 5, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15512, file: !2480, line: 805, column: 40)
!15519 = !DILocation(line: 807, column: 4, scope: !15518)
!15520 = !DILocation(line: 808, column: 4, scope: !15513)
!15521 = !DILocation(line: 809, column: 4, scope: !15513)
!15522 = !DILocation(line: 810, column: 4, scope: !15513)
!15523 = !DILocation(line: 811, column: 3, scope: !15513)
!15524 = !DILocation(line: 0, scope: !14515, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 800, column: 2, scope: !15493)
!15526 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15525)
!15527 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15525)
!15528 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15525)
!15529 = !DILocation(line: 0, scope: !14529, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15525)
!15531 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15530)
!15532 = !DILocation(line: 813, column: 1, scope: !15484)
!15533 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2480, file: !2480, line: 779, type: !14439, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15534)
!15534 = !{!15535}
!15535 = !DILocalVariable(name: "thread", arg: 1, scope: !15533, file: !2480, line: 779, type: !2372)
!15536 = !DILocation(line: 0, scope: !15533)
!15537 = !DILocation(line: 781, column: 21, scope: !15533)
!15538 = !DILocation(line: 781, column: 2, scope: !15533)
!15539 = !DILocation(line: 782, column: 2, scope: !15533)
!15540 = !DILocation(line: 783, column: 15, scope: !15533)
!15541 = !DILocation(line: 783, column: 25, scope: !15533)
!15542 = !DILocation(line: 784, column: 1, scope: !15533)
!15543 = distinct !DISubprogram(name: "pended_on_thread", scope: !2480, file: !2480, line: 724, type: !15544, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15546)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{!2403, !2372}
!15546 = !{!15547}
!15547 = !DILocalVariable(name: "thread", arg: 1, scope: !15543, file: !2480, line: 724, type: !2372)
!15548 = !DILocation(line: 0, scope: !15543)
!15549 = !DILocation(line: 726, column: 2, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15551, file: !2480, line: 726, column: 2)
!15551 = distinct !DILexicalBlock(scope: !15543, file: !2480, line: 726, column: 2)
!15552 = !DILocation(line: 726, column: 2, scope: !15551)
!15553 = !DILocation(line: 726, column: 2, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15550, file: !2480, line: 726, column: 2)
!15555 = !DILocation(line: 728, column: 2, scope: !15543)
!15556 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13641, file: !13641, line: 165, type: !14439, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15557)
!15557 = !{!15558}
!15558 = !DILocalVariable(name: "thread", arg: 1, scope: !15556, file: !13641, line: 165, type: !2372)
!15559 = !DILocation(line: 0, scope: !15556)
!15560 = !DILocation(line: 167, column: 15, scope: !15556)
!15561 = !DILocation(line: 167, column: 28, scope: !15556)
!15562 = !DILocation(line: 168, column: 1, scope: !15556)
!15563 = distinct !DISubprogram(name: "unready_thread", scope: !2480, file: !2480, line: 731, type: !14439, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15564)
!15564 = !{!15565}
!15565 = !DILocalVariable(name: "thread", arg: 1, scope: !15563, file: !2480, line: 731, type: !2372)
!15566 = !DILocation(line: 0, scope: !15563)
!15567 = !DILocation(line: 733, column: 6, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15563, file: !2480, line: 733, column: 6)
!15569 = !DILocation(line: 733, column: 6, scope: !15563)
!15570 = !DILocation(line: 0, scope: !14673, inlinedAt: !15571)
!15571 = distinct !DILocation(line: 734, column: 3, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15568, file: !2480, line: 733, column: 34)
!15573 = !DILocation(line: 266, column: 15, scope: !14673, inlinedAt: !15571)
!15574 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !15571)
!15575 = !DILocation(line: 0, scope: !14681, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !15571)
!15577 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !15576)
!15578 = !DILocation(line: 735, column: 2, scope: !15572)
!15579 = !DILocation(line: 736, column: 25, scope: !15563)
!15580 = !DILocation(line: 736, column: 22, scope: !15563)
!15581 = !DILocation(line: 736, column: 2, scope: !15563)
!15582 = !DILocation(line: 737, column: 1, scope: !15563)
!15583 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13641, file: !13641, line: 160, type: !14439, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15584)
!15584 = !{!15585}
!15585 = !DILocalVariable(name: "thread", arg: 1, scope: !15583, file: !13641, line: 160, type: !2372)
!15586 = !DILocation(line: 0, scope: !15583)
!15587 = !DILocation(line: 162, column: 15, scope: !15583)
!15588 = !DILocation(line: 162, column: 28, scope: !15583)
!15589 = !DILocation(line: 163, column: 1, scope: !15583)
!15590 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2480, file: !2480, line: 786, type: !14439, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15591)
!15591 = !{!15592, !15593, !15595}
!15592 = !DILocalVariable(name: "thread", arg: 1, scope: !15590, file: !2480, line: 786, type: !2372)
!15593 = !DILocalVariable(name: "__i", scope: !15594, file: !2480, line: 788, type: !14473)
!15594 = distinct !DILexicalBlock(scope: !15590, file: !2480, line: 788, column: 2)
!15595 = !DILocalVariable(name: "__key", scope: !15594, file: !2480, line: 788, type: !14473)
!15596 = !DILocation(line: 0, scope: !15590)
!15597 = !DILocation(line: 0, scope: !15594)
!15598 = !DILocation(line: 0, scope: !14481, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 788, column: 2, scope: !15594)
!15600 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15599)
!15602 = !DILocation(line: 0, scope: !14490, inlinedAt: !15601)
!15603 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15599)
!15604 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15599)
!15605 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15599)
!15606 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15599)
!15607 = !DILocation(line: 789, column: 3, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15609, file: !2480, line: 788, column: 26)
!15609 = distinct !DILexicalBlock(scope: !15594, file: !2480, line: 788, column: 2)
!15610 = !DILocation(line: 0, scope: !14515, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 788, column: 2, scope: !15609)
!15612 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15611)
!15613 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15611)
!15614 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15611)
!15615 = !DILocation(line: 0, scope: !14529, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15611)
!15617 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15616)
!15618 = !DILocation(line: 791, column: 1, scope: !15590)
!15619 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2480, file: !2480, line: 816, type: !15620, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15622)
!15620 = !DISubroutineType(types: !15621)
!15621 = !{!107, !152, !2403, !15369}
!15622 = !{!15623, !15624, !15625, !15626, !15627, !15629}
!15623 = !DILocalVariable(name: "key", arg: 1, scope: !15619, file: !2480, line: 816, type: !152)
!15624 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15619, file: !2480, line: 816, type: !2403)
!15625 = !DILocalVariable(name: "timeout", arg: 3, scope: !15619, file: !2480, line: 816, type: !15369)
!15626 = !DILocalVariable(name: "ret", scope: !15619, file: !2480, line: 828, type: !107)
!15627 = !DILocalVariable(name: "__i", scope: !15628, file: !2480, line: 829, type: !14473)
!15628 = distinct !DILexicalBlock(scope: !15619, file: !2480, line: 829, column: 2)
!15629 = !DILocalVariable(name: "__key", scope: !15628, file: !2480, line: 829, type: !14473)
!15630 = !DILocation(line: 0, scope: !15619)
!15631 = !DILocation(line: 823, column: 14, scope: !15619)
!15632 = !DILocation(line: 823, column: 2, scope: !15619)
!15633 = !DILocation(line: 826, column: 20, scope: !15619)
!15634 = !DILocation(line: 826, column: 18, scope: !15619)
!15635 = !DILocation(line: 828, column: 12, scope: !15619)
!15636 = !DILocation(line: 0, scope: !15628)
!15637 = !DILocation(line: 0, scope: !14481, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 829, column: 2, scope: !15628)
!15639 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15638)
!15641 = !DILocation(line: 0, scope: !14490, inlinedAt: !15640)
!15642 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15638)
!15643 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15638)
!15644 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15638)
!15645 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15638)
!15646 = !DILocation(line: 830, column: 7, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2480, line: 830, column: 7)
!15648 = distinct !DILexicalBlock(scope: !15649, file: !2480, line: 829, column: 26)
!15649 = distinct !DILexicalBlock(scope: !15628, file: !2480, line: 829, column: 2)
!15650 = !DILocation(line: 830, column: 26, scope: !15647)
!15651 = !DILocation(line: 830, column: 23, scope: !15647)
!15652 = !DILocation(line: 830, column: 7, scope: !15648)
!15653 = !DILocation(line: 831, column: 20, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15647, file: !2480, line: 830, column: 36)
!15655 = !DILocation(line: 832, column: 3, scope: !15654)
!15656 = !DILocation(line: 0, scope: !14515, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 829, column: 2, scope: !15649)
!15658 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15657)
!15659 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15657)
!15660 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15657)
!15661 = !DILocation(line: 0, scope: !14529, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15657)
!15663 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15662)
!15664 = !DILocation(line: 834, column: 2, scope: !15619)
!15665 = distinct !DISubprogram(name: "z_pend_curr", scope: !2480, file: !2480, line: 840, type: !15666, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15668)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{!107, !14484, !14473, !2403, !15369}
!15668 = !{!15669, !15670, !15671, !15672}
!15669 = !DILocalVariable(name: "lock", arg: 1, scope: !15665, file: !2480, line: 840, type: !14484)
!15670 = !DILocalVariable(name: "key", arg: 2, scope: !15665, file: !2480, line: 840, type: !14473)
!15671 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15665, file: !2480, line: 841, type: !2403)
!15672 = !DILocalVariable(name: "timeout", arg: 4, scope: !15665, file: !2480, line: 841, type: !15369)
!15673 = !DILocation(line: 0, scope: !15665)
!15674 = !DILocation(line: 844, column: 20, scope: !15665)
!15675 = !DILocation(line: 844, column: 18, scope: !15665)
!15676 = !DILocation(line: 846, column: 2, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15678, file: !2480, line: 846, column: 2)
!15678 = distinct !DILexicalBlock(scope: !15665, file: !2480, line: 846, column: 2)
!15679 = !DILocation(line: 846, column: 2, scope: !15678)
!15680 = !DILocation(line: 846, column: 2, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15677, file: !2480, line: 846, column: 2)
!15682 = !DILocation(line: 0, scope: !14481, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 856, column: 9, scope: !15665)
!15684 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15685)
!15685 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15683)
!15686 = !DILocation(line: 0, scope: !14490, inlinedAt: !15685)
!15687 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15683)
!15688 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15683)
!15689 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15683)
!15690 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15683)
!15691 = !DILocation(line: 857, column: 14, scope: !15665)
!15692 = !DILocation(line: 857, column: 2, scope: !15665)
!15693 = !DILocation(line: 0, scope: !15168, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 858, column: 2, scope: !15665)
!15695 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !15694)
!15696 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15694)
!15697 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !15694)
!15698 = !DILocation(line: 0, scope: !15159, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 859, column: 9, scope: !15665)
!15700 = !DILocation(line: 0, scope: !15168, inlinedAt: !15701)
!15701 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !15699)
!15702 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !15701)
!15703 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15701)
!15704 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !15701)
!15705 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !15699)
!15706 = !DILocation(line: 859, column: 2, scope: !15665)
!15707 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2480, file: !2480, line: 862, type: !15708, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15710)
!15708 = !DISubroutineType(types: !15709)
!15709 = !{!2372, !2403}
!15710 = !{!15711, !15712, !15713, !15715}
!15711 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15707, file: !2480, line: 862, type: !2403)
!15712 = !DILocalVariable(name: "thread", scope: !15707, file: !2480, line: 864, type: !2372)
!15713 = !DILocalVariable(name: "__i", scope: !15714, file: !2480, line: 866, type: !14473)
!15714 = distinct !DILexicalBlock(scope: !15707, file: !2480, line: 866, column: 2)
!15715 = !DILocalVariable(name: "__key", scope: !15714, file: !2480, line: 866, type: !14473)
!15716 = !DILocation(line: 0, scope: !15707)
!15717 = !DILocation(line: 0, scope: !15714)
!15718 = !DILocation(line: 0, scope: !14481, inlinedAt: !15719)
!15719 = distinct !DILocation(line: 866, column: 2, scope: !15714)
!15720 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15719)
!15722 = !DILocation(line: 0, scope: !14490, inlinedAt: !15721)
!15723 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15719)
!15724 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15719)
!15725 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15719)
!15726 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15719)
!15727 = !DILocation(line: 867, column: 12, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15729, file: !2480, line: 866, column: 26)
!15729 = distinct !DILexicalBlock(scope: !15714, file: !2480, line: 866, column: 2)
!15730 = !DILocation(line: 869, column: 14, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15728, file: !2480, line: 869, column: 7)
!15732 = !DILocation(line: 869, column: 7, scope: !15728)
!15733 = !DILocation(line: 870, column: 4, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15731, file: !2480, line: 869, column: 23)
!15735 = !DILocation(line: 871, column: 3, scope: !15734)
!15736 = !DILocation(line: 0, scope: !14515, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 866, column: 2, scope: !15729)
!15738 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15737)
!15739 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15737)
!15740 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15737)
!15741 = !DILocation(line: 0, scope: !14529, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15737)
!15743 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15742)
!15744 = !DILocation(line: 874, column: 2, scope: !15707)
!15745 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2480, file: !2480, line: 877, type: !15708, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15746)
!15746 = !{!15747, !15748, !15749, !15751}
!15747 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15745, file: !2480, line: 877, type: !2403)
!15748 = !DILocalVariable(name: "thread", scope: !15745, file: !2480, line: 879, type: !2372)
!15749 = !DILocalVariable(name: "__i", scope: !15750, file: !2480, line: 881, type: !14473)
!15750 = distinct !DILexicalBlock(scope: !15745, file: !2480, line: 881, column: 2)
!15751 = !DILocalVariable(name: "__key", scope: !15750, file: !2480, line: 881, type: !14473)
!15752 = !DILocation(line: 0, scope: !15745)
!15753 = !DILocation(line: 0, scope: !15750)
!15754 = !DILocation(line: 0, scope: !14481, inlinedAt: !15755)
!15755 = distinct !DILocation(line: 881, column: 2, scope: !15750)
!15756 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15757)
!15757 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15755)
!15758 = !DILocation(line: 0, scope: !14490, inlinedAt: !15757)
!15759 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15755)
!15760 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15755)
!15761 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15755)
!15762 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15755)
!15763 = !DILocation(line: 882, column: 12, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15765, file: !2480, line: 881, column: 26)
!15765 = distinct !DILexicalBlock(scope: !15750, file: !2480, line: 881, column: 2)
!15766 = !DILocation(line: 884, column: 14, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15764, file: !2480, line: 884, column: 7)
!15768 = !DILocation(line: 884, column: 7, scope: !15764)
!15769 = !DILocation(line: 885, column: 4, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15767, file: !2480, line: 884, column: 23)
!15771 = !DILocation(line: 886, column: 10, scope: !15770)
!15772 = !DILocation(line: 887, column: 3, scope: !15770)
!15773 = !DILocation(line: 0, scope: !14515, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 881, column: 2, scope: !15765)
!15775 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15774)
!15776 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15774)
!15777 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15774)
!15778 = !DILocation(line: 0, scope: !14529, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15774)
!15780 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15779)
!15781 = !DILocation(line: 890, column: 2, scope: !15745)
!15782 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2480, file: !2480, line: 893, type: !14439, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15783)
!15783 = !{!15784}
!15784 = !DILocalVariable(name: "thread", arg: 1, scope: !15782, file: !2480, line: 893, type: !2372)
!15785 = !DILocation(line: 0, scope: !15782)
!15786 = !DILocation(line: 0, scope: !15590, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 895, column: 2, scope: !15782)
!15788 = !DILocation(line: 0, scope: !15594, inlinedAt: !15787)
!15789 = !DILocation(line: 0, scope: !14481, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 788, column: 2, scope: !15594, inlinedAt: !15787)
!15791 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15790)
!15793 = !DILocation(line: 0, scope: !14490, inlinedAt: !15792)
!15794 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15790)
!15795 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15790)
!15796 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15790)
!15797 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15790)
!15798 = !DILocation(line: 789, column: 3, scope: !15608, inlinedAt: !15787)
!15799 = !DILocation(line: 0, scope: !14515, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 788, column: 2, scope: !15609, inlinedAt: !15787)
!15801 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15800)
!15802 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15800)
!15803 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15800)
!15804 = !DILocation(line: 0, scope: !14529, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15800)
!15806 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15805)
!15807 = !DILocation(line: 896, column: 8, scope: !15782)
!15808 = !DILocation(line: 897, column: 1, scope: !15782)
!15809 = distinct !DISubprogram(name: "z_set_prio", scope: !2480, file: !2480, line: 902, type: !14842, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15810)
!15810 = !{!15811, !15812, !15813, !15814, !15816}
!15811 = !DILocalVariable(name: "thread", arg: 1, scope: !15809, file: !2480, line: 902, type: !2372)
!15812 = !DILocalVariable(name: "prio", arg: 2, scope: !15809, file: !2480, line: 902, type: !107)
!15813 = !DILocalVariable(name: "need_sched", scope: !15809, file: !2480, line: 904, type: !145)
!15814 = !DILocalVariable(name: "__i", scope: !15815, file: !2480, line: 906, type: !14473)
!15815 = distinct !DILexicalBlock(scope: !15809, file: !2480, line: 906, column: 2)
!15816 = !DILocalVariable(name: "__key", scope: !15815, file: !2480, line: 906, type: !14473)
!15817 = !DILocation(line: 0, scope: !15809)
!15818 = !DILocation(line: 0, scope: !15815)
!15819 = !DILocation(line: 0, scope: !14481, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 906, column: 2, scope: !15815)
!15821 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15820)
!15823 = !DILocation(line: 0, scope: !14490, inlinedAt: !15822)
!15824 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15820)
!15825 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15820)
!15826 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15820)
!15827 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15820)
!15828 = !DILocation(line: 907, column: 16, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15830, file: !2480, line: 906, column: 26)
!15830 = distinct !DILexicalBlock(scope: !15815, file: !2480, line: 906, column: 2)
!15831 = !DILocation(line: 909, column: 7, scope: !15829)
!15832 = !DILocation(line: 0, scope: !14673, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 912, column: 5, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2480, line: 911, column: 63)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !2480, line: 911, column: 8)
!15836 = distinct !DILexicalBlock(scope: !15837, file: !2480, line: 909, column: 19)
!15837 = distinct !DILexicalBlock(scope: !15829, file: !2480, line: 909, column: 7)
!15838 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !15833)
!15839 = !DILocation(line: 0, scope: !14681, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !15833)
!15841 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !15840)
!15842 = !DILocation(line: 913, column: 23, scope: !15834)
!15843 = !DILocation(line: 0, scope: !14690, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 914, column: 5, scope: !15834)
!15845 = !DILocation(line: 252, column: 28, scope: !14690, inlinedAt: !15844)
!15846 = !DILocation(line: 0, scope: !14697, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 254, column: 3, scope: !14701, inlinedAt: !15844)
!15848 = !DILocation(line: 0, scope: !14704, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 229, column: 2, scope: !14697, inlinedAt: !15847)
!15850 = !DILocation(line: 186, column: 2, scope: !14714, inlinedAt: !15849)
!15851 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15849)
!15852 = !DILocation(line: 186, column: 2, scope: !14718, inlinedAt: !15849)
!15853 = !DILocation(line: 188, column: 2, scope: !14720, inlinedAt: !15849)
!15854 = !DILocation(line: 188, column: 2, scope: !14722, inlinedAt: !15849)
!15855 = !DILocation(line: 0, scope: !14720, inlinedAt: !15849)
!15856 = !DILocation(line: 189, column: 7, scope: !14725, inlinedAt: !15849)
!15857 = !DILocation(line: 189, column: 35, scope: !14725, inlinedAt: !15849)
!15858 = !DILocation(line: 189, column: 7, scope: !14726, inlinedAt: !15849)
!15859 = !DILocation(line: 190, column: 4, scope: !14730, inlinedAt: !15849)
!15860 = !DILocation(line: 192, column: 4, scope: !14730, inlinedAt: !15849)
!15861 = distinct !{!15861, !15853, !15862}
!15862 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15849)
!15863 = !DILocation(line: 196, column: 2, scope: !14704, inlinedAt: !15849)
!15864 = !DILocation(line: 197, column: 1, scope: !14704, inlinedAt: !15849)
!15865 = !DILocation(line: 918, column: 4, scope: !15836)
!15866 = !DILocation(line: 919, column: 3, scope: !15836)
!15867 = !DILocation(line: 920, column: 22, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15837, file: !2480, line: 919, column: 10)
!15869 = !DILocation(line: 0, scope: !14515, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 906, column: 2, scope: !15830)
!15871 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15870)
!15872 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15870)
!15873 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15870)
!15874 = !DILocation(line: 0, scope: !14529, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15870)
!15876 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15875)
!15877 = !DILocation(line: 926, column: 2, scope: !15809)
!15878 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2480, file: !2480, line: 929, type: !15879, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15881)
!15879 = !DISubroutineType(types: !15880)
!15880 = !{null, !2372, !107}
!15881 = !{!15882, !15883, !15884}
!15882 = !DILocalVariable(name: "thread", arg: 1, scope: !15878, file: !2480, line: 929, type: !2372)
!15883 = !DILocalVariable(name: "prio", arg: 2, scope: !15878, file: !2480, line: 929, type: !107)
!15884 = !DILocalVariable(name: "need_sched", scope: !15878, file: !2480, line: 931, type: !145)
!15885 = !DILocation(line: 0, scope: !15878)
!15886 = !DILocation(line: 931, column: 20, scope: !15878)
!15887 = !DILocation(line: 935, column: 17, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15878, file: !2480, line: 935, column: 6)
!15889 = !DILocation(line: 935, column: 20, scope: !15888)
!15890 = !DILocation(line: 935, column: 35, scope: !15888)
!15891 = !DILocation(line: 935, column: 48, scope: !15888)
!15892 = !DILocation(line: 935, column: 6, scope: !15878)
!15893 = !DILocation(line: 936, column: 3, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15888, file: !2480, line: 935, column: 55)
!15895 = !DILocation(line: 937, column: 2, scope: !15894)
!15896 = !DILocation(line: 938, column: 1, scope: !15878)
!15897 = distinct !DISubprogram(name: "k_sched_lock", scope: !2480, file: !2480, line: 987, type: !3111, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15898)
!15898 = !{!15899, !15901}
!15899 = !DILocalVariable(name: "__i", scope: !15900, file: !2480, line: 989, type: !14473)
!15900 = distinct !DILexicalBlock(scope: !15897, file: !2480, line: 989, column: 2)
!15901 = !DILocalVariable(name: "__key", scope: !15900, file: !2480, line: 989, type: !14473)
!15902 = !DILocation(line: 0, scope: !15900)
!15903 = !DILocation(line: 0, scope: !14481, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 989, column: 2, scope: !15900)
!15905 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15904)
!15907 = !DILocation(line: 0, scope: !14490, inlinedAt: !15906)
!15908 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15904)
!15909 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15904)
!15910 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15904)
!15911 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15904)
!15912 = !DILocation(line: 992, column: 3, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !2480, line: 989, column: 26)
!15914 = distinct !DILexicalBlock(scope: !15900, file: !2480, line: 989, column: 2)
!15915 = !DILocation(line: 0, scope: !14515, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 989, column: 2, scope: !15914)
!15917 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15916)
!15918 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15916)
!15919 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15916)
!15920 = !DILocation(line: 0, scope: !14529, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15916)
!15922 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15921)
!15923 = !DILocation(line: 994, column: 1, scope: !15897)
!15924 = distinct !DISubprogram(name: "z_sched_lock", scope: !13641, file: !13641, line: 251, type: !3111, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15925 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 253, column: 2, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15929, file: !13641, line: 253, column: 2)
!15929 = distinct !DILexicalBlock(scope: !15924, file: !13641, line: 253, column: 2)
!15930 = !DILocation(line: 0, scope: !15208, inlinedAt: !15926)
!15931 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !15927)
!15932 = !DILocation(line: 253, column: 2, scope: !15929)
!15933 = !DILocation(line: 253, column: 2, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15928, file: !13641, line: 253, column: 2)
!15935 = !DILocation(line: 254, column: 2, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15937, file: !13641, line: 254, column: 2)
!15937 = distinct !DILexicalBlock(scope: !15924, file: !13641, line: 254, column: 2)
!15938 = !DILocation(line: 254, column: 2, scope: !15937)
!15939 = !DILocation(line: 254, column: 2, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15936, file: !13641, line: 254, column: 2)
!15941 = !DILocation(line: 256, column: 2, scope: !15924)
!15942 = !DILocation(line: 258, column: 2, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15924, file: !13641, line: 258, column: 2)
!15944 = !{i64 2154286339}
!15945 = !DILocation(line: 259, column: 1, scope: !15924)
!15946 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2480, file: !2480, line: 996, type: !3111, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15947)
!15947 = !{!15948, !15950}
!15948 = !DILocalVariable(name: "__i", scope: !15949, file: !2480, line: 998, type: !14473)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !2480, line: 998, column: 2)
!15950 = !DILocalVariable(name: "__key", scope: !15949, file: !2480, line: 998, type: !14473)
!15951 = !DILocation(line: 0, scope: !15949)
!15952 = !DILocation(line: 0, scope: !14481, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 998, column: 2, scope: !15949)
!15954 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !15953)
!15956 = !DILocation(line: 0, scope: !14490, inlinedAt: !15955)
!15957 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !15953)
!15958 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15953)
!15959 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !15953)
!15960 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !15953)
!15961 = !DILocation(line: 999, column: 3, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15963, file: !2480, line: 999, column: 3)
!15963 = distinct !DILexicalBlock(scope: !15964, file: !2480, line: 999, column: 3)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !2480, line: 998, column: 26)
!15965 = distinct !DILexicalBlock(scope: !15949, file: !2480, line: 998, column: 2)
!15966 = !DILocation(line: 999, column: 3, scope: !15963)
!15967 = !DILocation(line: 999, column: 3, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15962, file: !2480, line: 999, column: 3)
!15969 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 1000, column: 3, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15973, file: !2480, line: 1000, column: 3)
!15973 = distinct !DILexicalBlock(scope: !15964, file: !2480, line: 1000, column: 3)
!15974 = !DILocation(line: 0, scope: !15208, inlinedAt: !15970)
!15975 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !15971)
!15976 = !DILocation(line: 1000, column: 3, scope: !15973)
!15977 = !DILocation(line: 1000, column: 3, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15972, file: !2480, line: 1000, column: 3)
!15979 = !DILocation(line: 1002, column: 5, scope: !15964)
!15980 = !DILocation(line: 1002, column: 20, scope: !15964)
!15981 = !DILocation(line: 1002, column: 3, scope: !15964)
!15982 = !DILocation(line: 1003, column: 3, scope: !15964)
!15983 = !DILocation(line: 0, scope: !14515, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 998, column: 2, scope: !15965)
!15985 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !15984)
!15986 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15984)
!15987 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !15984)
!15988 = !DILocation(line: 0, scope: !14529, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !15984)
!15990 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !15989)
!15991 = !DILocation(line: 1011, column: 2, scope: !15946)
!15992 = !DILocation(line: 1012, column: 1, scope: !15946)
!15993 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2480, file: !2480, line: 1014, type: !14830, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15994 = !DILocation(line: 1028, column: 25, scope: !15993)
!15995 = !DILocation(line: 1028, column: 2, scope: !15993)
!15996 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2480, file: !2480, line: 1155, type: !15997, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15999)
!15997 = !DISubroutineType(types: !15998)
!15998 = !{!145, !2401, !2401}
!15999 = !{!16000, !16001, !16002, !16003, !16004}
!16000 = !DILocalVariable(name: "a", arg: 1, scope: !15996, file: !2480, line: 1155, type: !2401)
!16001 = !DILocalVariable(name: "b", arg: 2, scope: !15996, file: !2480, line: 1155, type: !2401)
!16002 = !DILocalVariable(name: "thread_a", scope: !15996, file: !2480, line: 1157, type: !2372)
!16003 = !DILocalVariable(name: "thread_b", scope: !15996, file: !2480, line: 1157, type: !2372)
!16004 = !DILocalVariable(name: "cmp", scope: !15996, file: !2480, line: 1158, type: !874)
!16005 = !DILocation(line: 0, scope: !15996)
!16006 = !DILocation(line: 1160, column: 13, scope: !15996)
!16007 = !DILocation(line: 1161, column: 13, scope: !15996)
!16008 = !DILocation(line: 1163, column: 8, scope: !15996)
!16009 = !DILocation(line: 1165, column: 10, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15996, file: !2480, line: 1165, column: 6)
!16011 = !DILocation(line: 1165, column: 6, scope: !15996)
!16012 = !DILocation(line: 1167, column: 17, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16010, file: !2480, line: 1167, column: 13)
!16014 = !DILocation(line: 1167, column: 13, scope: !16010)
!16015 = !DILocation(line: 1170, column: 25, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16013, file: !2480, line: 1169, column: 9)
!16017 = !DILocation(line: 1170, column: 52, scope: !16016)
!16018 = !DILocation(line: 1170, column: 35, scope: !16016)
!16019 = !DILocation(line: 1170, column: 3, scope: !16016)
!16020 = !DILocation(line: 0, scope: !16010)
!16021 = !DILocation(line: 1173, column: 1, scope: !15996)
!16022 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2480, file: !2480, line: 1175, type: !16023, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16038)
!16023 = !DISubroutineType(types: !16024)
!16024 = !{null, !16025, !2372}
!16025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16026, size: 32)
!16026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16027, line: 37, size: 128, elements: !16028)
!16027 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16028 = !{!16029, !16037}
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16026, file: !16027, line: 38, baseType: !16030, size: 96)
!16030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16031)
!16031 = !{!16032, !16033, !16036}
!16032 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16030, file: !335, line: 84, baseType: !2401, size: 32)
!16033 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16030, file: !335, line: 85, baseType: !16034, size: 32, offset: 32)
!16034 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16035)
!16035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15997, size: 32)
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16030, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16037 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16026, file: !16027, line: 39, baseType: !107, size: 32, offset: 96)
!16038 = !{!16039, !16040, !16041, !16042, !16051}
!16039 = !DILocalVariable(name: "pq", arg: 1, scope: !16022, file: !2480, line: 1175, type: !16025)
!16040 = !DILocalVariable(name: "thread", arg: 2, scope: !16022, file: !2480, line: 1175, type: !2372)
!16041 = !DILocalVariable(name: "t", scope: !16022, file: !2480, line: 1177, type: !2372)
!16042 = !DILocalVariable(name: "__f", scope: !16043, file: !2480, line: 1190, type: !16046)
!16043 = distinct !DILexicalBlock(scope: !16044, file: !2480, line: 1190, column: 3)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2480, line: 1189, column: 27)
!16045 = distinct !DILexicalBlock(scope: !16022, file: !2480, line: 1189, column: 6)
!16046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16047)
!16047 = !{!16048, !16049, !16050}
!16048 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16046, file: !335, line: 156, baseType: !2475, size: 32)
!16049 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16046, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16050 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16046, file: !335, line: 158, baseType: !874, size: 32, offset: 64)
!16051 = !DILocalVariable(name: "n", scope: !16052, file: !2480, line: 1190, type: !2401)
!16052 = distinct !DILexicalBlock(scope: !16053, file: !2480, line: 1190, column: 3)
!16053 = distinct !DILexicalBlock(scope: !16043, file: !2480, line: 1190, column: 3)
!16054 = !DILocation(line: 0, scope: !16022)
!16055 = !DILocation(line: 1179, column: 2, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16057, file: !2480, line: 1179, column: 2)
!16057 = distinct !DILexicalBlock(scope: !16022, file: !2480, line: 1179, column: 2)
!16058 = !DILocation(line: 1179, column: 2, scope: !16057)
!16059 = !DILocation(line: 1179, column: 2, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16056, file: !2480, line: 1179, column: 2)
!16061 = !DILocation(line: 1181, column: 31, scope: !16022)
!16062 = !DILocation(line: 1181, column: 45, scope: !16022)
!16063 = !DILocation(line: 1181, column: 15, scope: !16022)
!16064 = !DILocation(line: 1181, column: 25, scope: !16022)
!16065 = !DILocation(line: 1189, column: 11, scope: !16045)
!16066 = !DILocation(line: 1189, column: 7, scope: !16045)
!16067 = !DILocation(line: 1189, column: 6, scope: !16022)
!16068 = !DILocation(line: 1190, column: 3, scope: !16043)
!16069 = !DILocation(line: 1190, column: 3, scope: !16052)
!16070 = !DILocation(line: 0, scope: !16052)
!16071 = !DILocation(line: 1190, column: 3, scope: !16053)
!16072 = !DILocation(line: 1193, column: 2, scope: !16044)
!16073 = !DILocation(line: 1191, column: 42, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16053, file: !2480, line: 1190, column: 54)
!16075 = !DILocation(line: 1191, column: 12, scope: !16074)
!16076 = !DILocation(line: 1191, column: 22, scope: !16074)
!16077 = distinct !{!16077, !16068, !16078}
!16078 = !DILocation(line: 1192, column: 3, scope: !16043)
!16079 = !DILocation(line: 1195, column: 17, scope: !16022)
!16080 = !DILocation(line: 1195, column: 37, scope: !16022)
!16081 = !DILocation(line: 1195, column: 2, scope: !16022)
!16082 = !DILocation(line: 1196, column: 1, scope: !16022)
!16083 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16084, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16084 = !DISubroutineType(types: !16085)
!16085 = !{!2401, !16086, !16087}
!16086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16030, size: 32)
!16087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16046, size: 32)
!16088 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16089 = !DISubroutineType(types: !16090)
!16090 = !{null, !16086, !2401}
!16091 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2480, file: !2480, line: 1198, type: !16023, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16092)
!16092 = !{!16093, !16094}
!16093 = !DILocalVariable(name: "pq", arg: 1, scope: !16091, file: !2480, line: 1198, type: !16025)
!16094 = !DILocalVariable(name: "thread", arg: 2, scope: !16091, file: !2480, line: 1198, type: !2372)
!16095 = !DILocation(line: 0, scope: !16091)
!16096 = !DILocation(line: 1200, column: 2, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16098, file: !2480, line: 1200, column: 2)
!16098 = distinct !DILexicalBlock(scope: !16091, file: !2480, line: 1200, column: 2)
!16099 = !DILocation(line: 1200, column: 2, scope: !16098)
!16100 = !DILocation(line: 1200, column: 2, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16097, file: !2480, line: 1200, column: 2)
!16102 = !DILocation(line: 1202, column: 17, scope: !16091)
!16103 = !DILocation(line: 1202, column: 37, scope: !16091)
!16104 = !DILocation(line: 1202, column: 2, scope: !16091)
!16105 = !DILocation(line: 1204, column: 16, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16091, file: !2480, line: 1204, column: 6)
!16107 = !DILocation(line: 1204, column: 7, scope: !16106)
!16108 = !DILocation(line: 1204, column: 6, scope: !16091)
!16109 = !DILocation(line: 1205, column: 7, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16106, file: !2480, line: 1204, column: 22)
!16111 = !DILocation(line: 1205, column: 22, scope: !16110)
!16112 = !DILocation(line: 1206, column: 2, scope: !16110)
!16113 = !DILocation(line: 1207, column: 1, scope: !16091)
!16114 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16115 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2480, file: !2480, line: 1209, type: !16116, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16118)
!16116 = !DISubroutineType(types: !16117)
!16117 = !{!2372, !16025}
!16118 = !{!16119, !16120, !16121}
!16119 = !DILocalVariable(name: "pq", arg: 1, scope: !16115, file: !2480, line: 1209, type: !16025)
!16120 = !DILocalVariable(name: "thread", scope: !16115, file: !2480, line: 1211, type: !2372)
!16121 = !DILocalVariable(name: "n", scope: !16115, file: !2480, line: 1212, type: !2401)
!16122 = !DILocation(line: 0, scope: !16115)
!16123 = !DILocation(line: 1212, column: 37, scope: !16115)
!16124 = !DILocation(line: 1212, column: 21, scope: !16115)
!16125 = !DILocation(line: 1217, column: 2, scope: !16115)
!16126 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16127, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16129)
!16127 = !DISubroutineType(types: !16128)
!16128 = !{!2401, !16086}
!16129 = !{!16130}
!16130 = !DILocalVariable(name: "tree", arg: 1, scope: !16126, file: !335, line: 115, type: !16086)
!16131 = !DILocation(line: 0, scope: !16126)
!16132 = !DILocation(line: 117, column: 9, scope: !16126)
!16133 = !DILocation(line: 117, column: 2, scope: !16126)
!16134 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!2401, !16086, !195}
!16137 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2480, file: !2480, line: 1246, type: !16138, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16146)
!16138 = !DISubroutineType(types: !16139)
!16139 = !{!2372, !16140}
!16140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16141, size: 32)
!16141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16027, line: 53, size: 2080, elements: !16142)
!16142 = !{!16143, !16145}
!16143 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16141, file: !16027, line: 54, baseType: !16144, size: 2048)
!16144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 2048, elements: !394)
!16145 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16141, file: !16027, line: 55, baseType: !32, size: 32, offset: 2048)
!16146 = !{!16147, !16148, !16149, !16150}
!16147 = !DILocalVariable(name: "pq", arg: 1, scope: !16137, file: !2480, line: 1246, type: !16140)
!16148 = !DILocalVariable(name: "thread", scope: !16137, file: !2480, line: 1252, type: !2372)
!16149 = !DILocalVariable(name: "l", scope: !16137, file: !2480, line: 1253, type: !14707)
!16150 = !DILocalVariable(name: "n", scope: !16137, file: !2480, line: 1254, type: !2476)
!16151 = !DILocation(line: 0, scope: !16137)
!16152 = !DILocation(line: 1248, column: 11, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16137, file: !2480, line: 1248, column: 6)
!16154 = !DILocation(line: 1248, column: 7, scope: !16153)
!16155 = !DILocation(line: 1248, column: 6, scope: !16137)
!16156 = !DILocation(line: 1253, column: 31, scope: !16137)
!16157 = !DILocation(line: 1253, column: 20, scope: !16137)
!16158 = !DILocation(line: 1254, column: 19, scope: !16137)
!16159 = !DILocation(line: 1260, column: 1, scope: !16137)
!16160 = distinct !DISubprogram(name: "z_unpend_all", scope: !2480, file: !2480, line: 1262, type: !16161, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16163)
!16161 = !DISubroutineType(types: !16162)
!16162 = !{!107, !2403}
!16163 = !{!16164, !16165, !16166}
!16164 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16160, file: !2480, line: 1262, type: !2403)
!16165 = !DILocalVariable(name: "need_sched", scope: !16160, file: !2480, line: 1264, type: !107)
!16166 = !DILocalVariable(name: "thread", scope: !16160, file: !2480, line: 1265, type: !2372)
!16167 = !DILocation(line: 0, scope: !16160)
!16168 = !DILocation(line: 1267, column: 19, scope: !16160)
!16169 = !DILocation(line: 1267, column: 41, scope: !16160)
!16170 = !DILocation(line: 1267, column: 2, scope: !16160)
!16171 = !DILocation(line: 1268, column: 3, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16160, file: !2480, line: 1267, column: 50)
!16173 = !DILocation(line: 1269, column: 3, scope: !16172)
!16174 = distinct !{!16174, !16170, !16175}
!16175 = !DILocation(line: 1271, column: 2, scope: !16160)
!16176 = !DILocation(line: 1273, column: 2, scope: !16160)
!16177 = distinct !DISubprogram(name: "z_waitq_head", scope: !14002, file: !14002, line: 52, type: !15708, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16178)
!16178 = !{!16179}
!16179 = !DILocalVariable(name: "w", arg: 1, scope: !16177, file: !14002, line: 52, type: !2403)
!16180 = !DILocation(line: 0, scope: !16177)
!16181 = !DILocation(line: 54, column: 52, scope: !16177)
!16182 = !DILocation(line: 54, column: 28, scope: !16177)
!16183 = !DILocation(line: 54, column: 9, scope: !16177)
!16184 = !DILocation(line: 54, column: 2, scope: !16177)
!16185 = distinct !DISubprogram(name: "init_ready_q", scope: !2480, file: !2480, line: 1276, type: !16186, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16193)
!16186 = !DISubroutineType(types: !16187)
!16187 = !{null, !16188}
!16188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16189, size: 32)
!16189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16190)
!16190 = !{!16191, !16192}
!16191 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16189, file: !345, line: 86, baseType: !2372, size: 32)
!16192 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16189, file: !345, line: 90, baseType: !2408, size: 64, offset: 32)
!16193 = !{!16194}
!16194 = !DILocalVariable(name: "rq", arg: 1, scope: !16185, file: !2480, line: 1276, type: !16188)
!16195 = !DILocation(line: 0, scope: !16185)
!16196 = !DILocation(line: 1289, column: 22, scope: !16185)
!16197 = !DILocation(line: 1289, column: 2, scope: !16185)
!16198 = !DILocation(line: 1291, column: 1, scope: !16185)
!16199 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16200, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16202)
!16200 = !DISubroutineType(types: !16201)
!16201 = !{null, !14707}
!16202 = !{!16203}
!16203 = !DILocalVariable(name: "list", arg: 1, scope: !16199, file: !319, line: 197, type: !14707)
!16204 = !DILocation(line: 0, scope: !16199)
!16205 = !DILocation(line: 199, column: 8, scope: !16199)
!16206 = !DILocation(line: 199, column: 13, scope: !16199)
!16207 = !DILocation(line: 200, column: 8, scope: !16199)
!16208 = !DILocation(line: 200, column: 13, scope: !16199)
!16209 = !DILocation(line: 201, column: 1, scope: !16199)
!16210 = distinct !DISubprogram(name: "z_sched_init", scope: !2480, file: !2480, line: 1293, type: !3111, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16211 = !DILocation(line: 1302, column: 2, scope: !16210)
!16212 = !DILocation(line: 1306, column: 2, scope: !16210)
!16213 = !DILocation(line: 1309, column: 1, scope: !16210)
!16214 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2480, file: !2480, line: 1311, type: !16215, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16218)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{!107, !16217}
!16217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2372)
!16218 = !{!16219}
!16219 = !DILocalVariable(name: "thread", arg: 1, scope: !16214, file: !2480, line: 1311, type: !16217)
!16220 = !DILocation(line: 0, scope: !16214)
!16221 = !DILocation(line: 1313, column: 22, scope: !16214)
!16222 = !DILocation(line: 1313, column: 9, scope: !16214)
!16223 = !DILocation(line: 1313, column: 2, scope: !16214)
!16224 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2480, file: !2480, line: 1325, type: !16225, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16227)
!16225 = !DISubroutineType(types: !16226)
!16226 = !{null, !16217, !107}
!16227 = !{!16228, !16229, !16230}
!16228 = !DILocalVariable(name: "thread", arg: 1, scope: !16224, file: !2480, line: 1325, type: !16217)
!16229 = !DILocalVariable(name: "prio", arg: 2, scope: !16224, file: !2480, line: 1325, type: !107)
!16230 = !DILocalVariable(name: "th", scope: !16224, file: !2480, line: 1334, type: !2372)
!16231 = !DILocation(line: 0, scope: !16224)
!16232 = !DILocation(line: 1331, column: 2, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2480, line: 1331, column: 2)
!16234 = distinct !DILexicalBlock(scope: !16235, file: !2480, line: 1331, column: 2)
!16235 = distinct !DILexicalBlock(scope: !16224, file: !2480, line: 1331, column: 2)
!16236 = !DILocation(line: 1331, column: 2, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16233, file: !2480, line: 1331, column: 2)
!16238 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 1332, column: 2, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16242, file: !2480, line: 1332, column: 2)
!16242 = distinct !DILexicalBlock(scope: !16224, file: !2480, line: 1332, column: 2)
!16243 = !DILocation(line: 0, scope: !15208, inlinedAt: !16239)
!16244 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16240)
!16245 = !DILocation(line: 1332, column: 2, scope: !16242)
!16246 = !DILocation(line: 1332, column: 2, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16241, file: !2480, line: 1332, column: 2)
!16248 = !DILocation(line: 1336, column: 2, scope: !16224)
!16249 = !DILocation(line: 1337, column: 1, scope: !16224)
!16250 = distinct !DISubprogram(name: "k_can_yield", scope: !2480, file: !2480, line: 1384, type: !7329, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16251 = !DILocation(line: 1386, column: 11, scope: !16250)
!16252 = !DILocation(line: 1386, column: 29, scope: !16250)
!16253 = !DILocation(line: 1386, column: 32, scope: !16250)
!16254 = !DILocation(line: 1386, column: 46, scope: !16250)
!16255 = !DILocation(line: 1387, column: 28, scope: !16250)
!16256 = !DILocation(line: 1387, column: 4, scope: !16250)
!16257 = !DILocation(line: 1386, column: 2, scope: !16250)
!16258 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7329, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16259 = !DILocation(line: 993, column: 10, scope: !16258)
!16260 = !DILocation(line: 993, column: 2, scope: !16258)
!16261 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2480, file: !2480, line: 1390, type: !3111, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16262)
!16262 = !{!16263}
!16263 = !DILocalVariable(name: "key", scope: !16261, file: !2480, line: 1396, type: !14473)
!16264 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 1392, column: 2, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16268, file: !2480, line: 1392, column: 2)
!16268 = distinct !DILexicalBlock(scope: !16261, file: !2480, line: 1392, column: 2)
!16269 = !DILocation(line: 0, scope: !15208, inlinedAt: !16265)
!16270 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16266)
!16271 = !DILocation(line: 1392, column: 2, scope: !16268)
!16272 = !DILocation(line: 1392, column: 2, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16267, file: !2480, line: 1392, column: 2)
!16274 = !DILocation(line: 0, scope: !14481, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 1396, column: 25, scope: !16261)
!16276 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !16277)
!16277 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !16275)
!16278 = !DILocation(line: 0, scope: !14490, inlinedAt: !16277)
!16279 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !16275)
!16280 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16275)
!16281 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !16275)
!16282 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !16275)
!16283 = !DILocation(line: 0, scope: !16261)
!16284 = !DILocation(line: 1400, column: 18, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16286, file: !2480, line: 1399, column: 36)
!16286 = distinct !DILexicalBlock(scope: !16261, file: !2480, line: 1398, column: 6)
!16287 = !DILocation(line: 0, scope: !14673, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 1400, column: 3, scope: !16285)
!16289 = !DILocation(line: 266, column: 15, scope: !14673, inlinedAt: !16288)
!16290 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !16288)
!16291 = !DILocation(line: 0, scope: !14681, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !16288)
!16293 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !16292)
!16294 = !DILocation(line: 1402, column: 15, scope: !16261)
!16295 = !DILocation(line: 0, scope: !14690, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 1402, column: 2, scope: !16261)
!16297 = !DILocation(line: 252, column: 15, scope: !14690, inlinedAt: !16296)
!16298 = !DILocation(line: 252, column: 28, scope: !14690, inlinedAt: !16296)
!16299 = !DILocation(line: 0, scope: !14697, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 254, column: 3, scope: !14701, inlinedAt: !16296)
!16301 = !DILocation(line: 0, scope: !14704, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 229, column: 2, scope: !14697, inlinedAt: !16300)
!16303 = !DILocation(line: 186, column: 2, scope: !14714, inlinedAt: !16302)
!16304 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !16302)
!16305 = !DILocation(line: 186, column: 2, scope: !14718, inlinedAt: !16302)
!16306 = !DILocation(line: 188, column: 2, scope: !14720, inlinedAt: !16302)
!16307 = !DILocation(line: 188, column: 2, scope: !14722, inlinedAt: !16302)
!16308 = !DILocation(line: 0, scope: !14720, inlinedAt: !16302)
!16309 = !DILocation(line: 189, column: 7, scope: !14725, inlinedAt: !16302)
!16310 = !DILocation(line: 189, column: 35, scope: !14725, inlinedAt: !16302)
!16311 = !DILocation(line: 189, column: 7, scope: !14726, inlinedAt: !16302)
!16312 = !DILocation(line: 191, column: 21, scope: !14730, inlinedAt: !16302)
!16313 = !DILocation(line: 190, column: 4, scope: !14730, inlinedAt: !16302)
!16314 = !DILocation(line: 192, column: 4, scope: !14730, inlinedAt: !16302)
!16315 = distinct !{!16315, !16306, !16316}
!16316 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16302)
!16317 = !DILocation(line: 196, column: 37, scope: !14704, inlinedAt: !16302)
!16318 = !DILocation(line: 196, column: 2, scope: !14704, inlinedAt: !16302)
!16319 = !DILocation(line: 197, column: 1, scope: !14704, inlinedAt: !16302)
!16320 = !DILocation(line: 1403, column: 2, scope: !16261)
!16321 = !DILocation(line: 0, scope: !15159, inlinedAt: !16322)
!16322 = distinct !DILocation(line: 1404, column: 2, scope: !16261)
!16323 = !DILocation(line: 0, scope: !15168, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !16322)
!16325 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !16324)
!16326 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16324)
!16327 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !16324)
!16328 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !16322)
!16329 = !DILocation(line: 1405, column: 1, scope: !16261)
!16330 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2480, file: !2480, line: 1459, type: !16331, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!874, !15369}
!16333 = !{!16334, !16335, !16336}
!16334 = !DILocalVariable(name: "timeout", arg: 1, scope: !16330, file: !2480, line: 1459, type: !15369)
!16335 = !DILocalVariable(name: "ticks", scope: !16330, file: !2480, line: 1461, type: !564)
!16336 = !DILocalVariable(name: "ret", scope: !16330, file: !2480, line: 1480, type: !874)
!16337 = !DILocation(line: 0, scope: !16330)
!16338 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16340)
!16340 = distinct !DILocation(line: 1463, column: 2, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16342, file: !2480, line: 1463, column: 2)
!16342 = distinct !DILexicalBlock(scope: !16330, file: !2480, line: 1463, column: 2)
!16343 = !DILocation(line: 0, scope: !15208, inlinedAt: !16339)
!16344 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16340)
!16345 = !DILocation(line: 1463, column: 2, scope: !16342)
!16346 = !DILocation(line: 1463, column: 2, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16341, file: !2480, line: 1463, column: 2)
!16348 = !DILocation(line: 1468, column: 6, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16330, file: !2480, line: 1468, column: 6)
!16350 = !DILocation(line: 1468, column: 6, scope: !16330)
!16351 = !DILocation(line: 1469, column: 20, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !2480, line: 1468, column: 40)
!16353 = !DILocation(line: 1469, column: 3, scope: !16352)
!16354 = !DILocation(line: 1473, column: 3, scope: !16352)
!16355 = !DILocation(line: 1478, column: 10, scope: !16330)
!16356 = !DILocation(line: 1480, column: 16, scope: !16330)
!16357 = !DILocation(line: 1485, column: 1, scope: !16330)
!16358 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4442, file: !4442, line: 310, type: !16359, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16361)
!16359 = !DISubroutineType(types: !16360)
!16360 = !{null, !16217}
!16361 = !{!16362}
!16362 = !DILocalVariable(name: "thread", arg: 1, scope: !16358, file: !4442, line: 310, type: !16217)
!16363 = !DILocation(line: 0, scope: !16358)
!16364 = !DILocation(line: 319, column: 2, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16358, file: !4442, line: 319, column: 2)
!16366 = !{i64 2154202497}
!16367 = !DILocation(line: 320, column: 2, scope: !16358)
!16368 = !DILocation(line: 321, column: 1, scope: !16358)
!16369 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2480, file: !2480, line: 1415, type: !16370, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16372)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!874, !564}
!16372 = !{!16373, !16374, !16375, !16376}
!16373 = !DILocalVariable(name: "ticks", arg: 1, scope: !16369, file: !2480, line: 1415, type: !564)
!16374 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16369, file: !2480, line: 1418, type: !152)
!16375 = !DILocalVariable(name: "timeout", scope: !16369, file: !2480, line: 1430, type: !15369)
!16376 = !DILocalVariable(name: "key", scope: !16369, file: !2480, line: 1437, type: !14473)
!16377 = !DILocation(line: 0, scope: !16369)
!16378 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 1420, column: 2, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !2480, line: 1420, column: 2)
!16382 = distinct !DILexicalBlock(scope: !16369, file: !2480, line: 1420, column: 2)
!16383 = !DILocation(line: 0, scope: !15208, inlinedAt: !16379)
!16384 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16380)
!16385 = !DILocation(line: 1420, column: 2, scope: !16382)
!16386 = !DILocation(line: 1420, column: 2, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16381, file: !2480, line: 1420, column: 2)
!16388 = !DILocation(line: 1425, column: 12, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16369, file: !2480, line: 1425, column: 6)
!16390 = !DILocation(line: 1425, column: 6, scope: !16369)
!16391 = !DILocation(line: 1426, column: 3, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16389, file: !2480, line: 1425, column: 18)
!16393 = !DILocation(line: 1427, column: 3, scope: !16392)
!16394 = !DILocation(line: 1431, column: 24, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16369, file: !2480, line: 1431, column: 6)
!16396 = !DILocation(line: 1431, column: 6, scope: !16369)
!16397 = !DILocation(line: 1432, column: 35, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16395, file: !2480, line: 1431, column: 30)
!16399 = !DILocation(line: 1432, column: 27, scope: !16398)
!16400 = !DILocation(line: 1433, column: 2, scope: !16398)
!16401 = !DILocation(line: 1434, column: 27, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16395, file: !2480, line: 1433, column: 9)
!16403 = !DILocation(line: 0, scope: !16395)
!16404 = !DILocation(line: 0, scope: !14481, inlinedAt: !16405)
!16405 = distinct !DILocation(line: 1437, column: 25, scope: !16369)
!16406 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !16405)
!16408 = !DILocation(line: 0, scope: !14490, inlinedAt: !16407)
!16409 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !16405)
!16410 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16405)
!16411 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !16405)
!16412 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !16405)
!16413 = !DILocation(line: 1440, column: 20, scope: !16369)
!16414 = !DILocation(line: 1440, column: 18, scope: !16369)
!16415 = !DILocation(line: 1442, column: 2, scope: !16369)
!16416 = !DILocation(line: 1443, column: 23, scope: !16369)
!16417 = !DILocation(line: 1443, column: 2, scope: !16369)
!16418 = !DILocation(line: 1444, column: 29, scope: !16369)
!16419 = !DILocation(line: 1444, column: 2, scope: !16369)
!16420 = !DILocation(line: 0, scope: !15159, inlinedAt: !16421)
!16421 = distinct !DILocation(line: 1446, column: 8, scope: !16369)
!16422 = !DILocation(line: 0, scope: !15168, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !16421)
!16424 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !16423)
!16425 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16423)
!16426 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !16423)
!16427 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !16421)
!16428 = !DILocation(line: 1448, column: 2, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16430, file: !2480, line: 1448, column: 2)
!16430 = distinct !DILexicalBlock(scope: !16369, file: !2480, line: 1448, column: 2)
!16431 = !DILocation(line: 1448, column: 2, scope: !16430)
!16432 = !DILocation(line: 1448, column: 2, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16429, file: !2480, line: 1448, column: 2)
!16434 = !DILocation(line: 1450, column: 10, scope: !16369)
!16435 = !DILocation(line: 1450, column: 45, scope: !16369)
!16436 = !DILocation(line: 1450, column: 43, scope: !16369)
!16437 = !DILocation(line: 1451, column: 6, scope: !16369)
!16438 = !DILocation(line: 1457, column: 1, scope: !16369)
!16439 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8744, file: !8744, line: 1103, type: !14260, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16440)
!16440 = !{!16441}
!16441 = !DILocalVariable(name: "t", arg: 1, scope: !16439, file: !8744, line: 1103, type: !566)
!16442 = !DILocation(line: 0, scope: !16439)
!16443 = !DILocation(line: 0, scope: !14541, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 1106, column: 9, scope: !16439)
!16445 = !DILocation(line: 139, column: 13, scope: !16446, inlinedAt: !16444)
!16446 = distinct !DILexicalBlock(scope: !16447, file: !8744, line: 138, column: 10)
!16447 = distinct !DILexicalBlock(scope: !16448, file: !8744, line: 136, column: 7)
!16448 = distinct !DILexicalBlock(scope: !14562, file: !8744, line: 134, column: 17)
!16449 = !DILocation(line: 1106, column: 2, scope: !16439)
!16450 = distinct !DISubprogram(name: "k_yield", scope: !4442, file: !4442, line: 140, type: !3111, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16451 = !DILocation(line: 148, column: 2, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16450, file: !4442, line: 148, column: 2)
!16453 = !{i64 2154201817}
!16454 = !DILocation(line: 149, column: 2, scope: !16450)
!16455 = !DILocation(line: 150, column: 1, scope: !16450)
!16456 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2480, file: !2480, line: 1495, type: !16457, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16459)
!16457 = !DISubroutineType(types: !16458)
!16458 = !{!874, !107}
!16459 = !{!16460, !16461}
!16460 = !DILocalVariable(name: "us", arg: 1, scope: !16456, file: !2480, line: 1495, type: !107)
!16461 = !DILocalVariable(name: "ticks", scope: !16456, file: !2480, line: 1497, type: !874)
!16462 = !DILocation(line: 0, scope: !16456)
!16463 = !DILocation(line: 1501, column: 31, scope: !16456)
!16464 = !DILocation(line: 1501, column: 10, scope: !16456)
!16465 = !DILocation(line: 1502, column: 23, scope: !16456)
!16466 = !DILocation(line: 1502, column: 10, scope: !16456)
!16467 = !DILocation(line: 1506, column: 31, scope: !16456)
!16468 = !DILocation(line: 1506, column: 9, scope: !16456)
!16469 = !DILocation(line: 1506, column: 2, scope: !16456)
!16470 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8744, file: !8744, line: 571, type: !14260, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16471)
!16471 = !{!16472}
!16472 = !DILocalVariable(name: "t", arg: 1, scope: !16470, file: !8744, line: 571, type: !566)
!16473 = !DILocation(line: 0, scope: !16470)
!16474 = !DILocation(line: 0, scope: !14541, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 574, column: 9, scope: !16470)
!16476 = !DILocation(line: 135, column: 5, scope: !16448, inlinedAt: !16475)
!16477 = !DILocation(line: 139, column: 13, scope: !16446, inlinedAt: !16475)
!16478 = !DILocation(line: 574, column: 2, scope: !16470)
!16479 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8744, file: !8744, line: 1187, type: !14260, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16480)
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "t", arg: 1, scope: !16479, file: !8744, line: 1187, type: !566)
!16482 = !DILocation(line: 0, scope: !16479)
!16483 = !DILocation(line: 0, scope: !14541, inlinedAt: !16484)
!16484 = distinct !DILocation(line: 1190, column: 9, scope: !16479)
!16485 = !DILocation(line: 145, column: 13, scope: !16486, inlinedAt: !16484)
!16486 = distinct !DILexicalBlock(scope: !14559, file: !8744, line: 144, column: 10)
!16487 = !DILocation(line: 1190, column: 2, scope: !16479)
!16488 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2480, file: !2480, line: 1517, type: !16359, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16489)
!16489 = !{!16490}
!16490 = !DILocalVariable(name: "thread", arg: 1, scope: !16488, file: !2480, line: 1517, type: !16217)
!16491 = !DILocation(line: 0, scope: !16488)
!16492 = !DILocation(line: 1521, column: 6, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16488, file: !2480, line: 1521, column: 6)
!16494 = !DILocation(line: 1521, column: 6, scope: !16488)
!16495 = !DILocation(line: 1525, column: 6, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16488, file: !2480, line: 1525, column: 6)
!16497 = !DILocation(line: 1525, column: 37, scope: !16496)
!16498 = !DILocation(line: 1525, column: 6, scope: !16488)
!16499 = !DILocation(line: 1527, column: 20, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !2480, line: 1527, column: 7)
!16501 = distinct !DILexicalBlock(scope: !16496, file: !2480, line: 1525, column: 42)
!16502 = !DILocation(line: 1527, column: 33, scope: !16500)
!16503 = !DILocation(line: 1527, column: 7, scope: !16501)
!16504 = !DILocation(line: 1532, column: 2, scope: !16488)
!16505 = !DILocation(line: 1533, column: 2, scope: !16488)
!16506 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 1537, column: 7, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16488, file: !2480, line: 1537, column: 6)
!16510 = !DILocation(line: 0, scope: !15208, inlinedAt: !16507)
!16511 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16508)
!16512 = !DILocation(line: 1537, column: 6, scope: !16488)
!16513 = !DILocation(line: 1538, column: 3, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16509, file: !2480, line: 1537, column: 25)
!16515 = !DILocation(line: 1539, column: 2, scope: !16514)
!16516 = !DILocation(line: 1540, column: 1, scope: !16488)
!16517 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13641, file: !13641, line: 101, type: !14622, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16518)
!16518 = !{!16519}
!16519 = !DILocalVariable(name: "thread", arg: 1, scope: !16517, file: !13641, line: 101, type: !2372)
!16520 = !DILocation(line: 0, scope: !16517)
!16521 = !DILocation(line: 103, column: 23, scope: !16517)
!16522 = !DILocation(line: 103, column: 36, scope: !16517)
!16523 = !DILocation(line: 103, column: 55, scope: !16517)
!16524 = !DILocation(line: 103, column: 2, scope: !16517)
!16525 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2480, file: !2480, line: 1567, type: !16526, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16528)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{!16217}
!16528 = !{!16529}
!16529 = !DILocalVariable(name: "ret", scope: !16525, file: !2480, line: 1577, type: !16217)
!16530 = !DILocation(line: 1577, column: 30, scope: !16525)
!16531 = !DILocation(line: 0, scope: !16525)
!16532 = !DILocation(line: 1582, column: 2, scope: !16525)
!16533 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2480, file: !2480, line: 1593, type: !7632, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16534 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 1595, column: 10, scope: !16533)
!16537 = !DILocation(line: 0, scope: !15208, inlinedAt: !16535)
!16538 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16536)
!16539 = !DILocation(line: 1595, column: 27, scope: !16533)
!16540 = !DILocation(line: 1595, column: 41, scope: !16533)
!16541 = !DILocation(line: 1595, column: 30, scope: !16533)
!16542 = !DILocation(line: 1595, column: 2, scope: !16533)
!16543 = distinct !DISubprogram(name: "z_thread_abort", scope: !2480, file: !2480, line: 1725, type: !14439, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16544)
!16544 = !{!16545, !16546}
!16545 = !DILocalVariable(name: "thread", arg: 1, scope: !16543, file: !2480, line: 1725, type: !2372)
!16546 = !DILocalVariable(name: "key", scope: !16543, file: !2480, line: 1727, type: !14473)
!16547 = !DILocation(line: 0, scope: !16543)
!16548 = !DILocation(line: 0, scope: !14481, inlinedAt: !16549)
!16549 = distinct !DILocation(line: 1727, column: 25, scope: !16543)
!16550 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !16549)
!16552 = !DILocation(line: 0, scope: !14490, inlinedAt: !16551)
!16553 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !16549)
!16554 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16549)
!16555 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !16549)
!16556 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !16549)
!16557 = !DILocation(line: 1729, column: 20, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16543, file: !2480, line: 1729, column: 6)
!16559 = !DILocation(line: 1729, column: 33, scope: !16558)
!16560 = !DILocation(line: 1729, column: 48, scope: !16558)
!16561 = !DILocation(line: 1729, column: 6, scope: !16543)
!16562 = !DILocation(line: 0, scope: !14515, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 1730, column: 3, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16558, file: !2480, line: 1729, column: 54)
!16565 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !16563)
!16566 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16563)
!16567 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !16563)
!16568 = !DILocation(line: 0, scope: !14529, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !16563)
!16570 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !16569)
!16571 = !DILocation(line: 1731, column: 3, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16573, file: !2480, line: 1731, column: 3)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !2480, line: 1731, column: 3)
!16574 = distinct !DILexicalBlock(scope: !16564, file: !2480, line: 1731, column: 3)
!16575 = !DILocation(line: 1736, column: 20, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16543, file: !2480, line: 1736, column: 6)
!16577 = !DILocation(line: 1736, column: 33, scope: !16576)
!16578 = !DILocation(line: 1736, column: 49, scope: !16576)
!16579 = !DILocation(line: 1736, column: 6, scope: !16543)
!16580 = !DILocation(line: 0, scope: !14515, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 1737, column: 3, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16576, file: !2480, line: 1736, column: 56)
!16583 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !16581)
!16584 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16581)
!16585 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !16581)
!16586 = !DILocation(line: 0, scope: !14529, inlinedAt: !16587)
!16587 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !16581)
!16588 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !16587)
!16589 = !DILocation(line: 1738, column: 3, scope: !16582)
!16590 = !DILocation(line: 1775, column: 2, scope: !16543)
!16591 = !DILocation(line: 1776, column: 16, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16543, file: !2480, line: 1776, column: 6)
!16593 = !DILocation(line: 1776, column: 13, scope: !16592)
!16594 = !DILocation(line: 1776, column: 25, scope: !16592)
!16595 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 1776, column: 29, scope: !16592)
!16598 = !DILocation(line: 0, scope: !15208, inlinedAt: !16596)
!16599 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16597)
!16600 = !DILocation(line: 1776, column: 6, scope: !16543)
!16601 = !DILocation(line: 0, scope: !15159, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 1777, column: 3, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16592, file: !2480, line: 1776, column: 47)
!16604 = !DILocation(line: 0, scope: !15168, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !16602)
!16606 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !16605)
!16607 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16605)
!16608 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !16605)
!16609 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !16602)
!16610 = !DILocation(line: 1778, column: 3, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16612, file: !2480, line: 1778, column: 3)
!16612 = distinct !DILexicalBlock(scope: !16613, file: !2480, line: 1778, column: 3)
!16613 = distinct !DILexicalBlock(scope: !16603, file: !2480, line: 1778, column: 3)
!16614 = !DILocation(line: 0, scope: !14515, inlinedAt: !16615)
!16615 = distinct !DILocation(line: 1780, column: 2, scope: !16543)
!16616 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !16615)
!16617 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16615)
!16618 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !16615)
!16619 = !DILocation(line: 0, scope: !14529, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !16615)
!16621 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !16620)
!16622 = !DILocation(line: 1781, column: 1, scope: !16543)
!16623 = distinct !DISubprogram(name: "end_thread", scope: !2480, file: !2480, line: 1690, type: !14439, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16624)
!16624 = !{!16625}
!16625 = !DILocalVariable(name: "thread", arg: 1, scope: !16623, file: !2480, line: 1690, type: !2372)
!16626 = !DILocation(line: 0, scope: !16623)
!16627 = !DILocation(line: 1695, column: 20, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16623, file: !2480, line: 1695, column: 6)
!16629 = !DILocation(line: 1695, column: 33, scope: !16628)
!16630 = !DILocation(line: 1695, column: 49, scope: !16628)
!16631 = !DILocation(line: 1695, column: 6, scope: !16623)
!16632 = !DILocation(line: 1697, column: 29, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16628, file: !2480, line: 1695, column: 56)
!16634 = !DILocation(line: 1698, column: 7, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16633, file: !2480, line: 1698, column: 7)
!16636 = !DILocation(line: 1698, column: 7, scope: !16633)
!16637 = !DILocation(line: 0, scope: !14673, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 1699, column: 4, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16635, file: !2480, line: 1698, column: 35)
!16640 = !DILocation(line: 266, column: 28, scope: !14673, inlinedAt: !16638)
!16641 = !DILocation(line: 0, scope: !14681, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 268, column: 3, scope: !14685, inlinedAt: !16638)
!16643 = !DILocation(line: 234, column: 2, scope: !14681, inlinedAt: !16642)
!16644 = !DILocation(line: 1700, column: 3, scope: !16639)
!16645 = !DILocation(line: 1701, column: 20, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16633, file: !2480, line: 1701, column: 7)
!16647 = !DILocation(line: 1701, column: 30, scope: !16646)
!16648 = !DILocation(line: 1701, column: 7, scope: !16633)
!16649 = !DILocation(line: 1702, column: 4, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16646, file: !2480, line: 1701, column: 39)
!16651 = !DILocation(line: 1703, column: 3, scope: !16650)
!16652 = !DILocation(line: 1704, column: 9, scope: !16633)
!16653 = !DILocation(line: 1705, column: 23, scope: !16633)
!16654 = !DILocation(line: 1705, column: 3, scope: !16633)
!16655 = !DILocation(line: 1706, column: 3, scope: !16633)
!16656 = !DILocation(line: 1722, column: 2, scope: !16633)
!16657 = !DILocation(line: 1723, column: 1, scope: !16623)
!16658 = distinct !DISubprogram(name: "unpend_all", scope: !2480, file: !2480, line: 1674, type: !16659, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16661)
!16659 = !DISubroutineType(types: !16660)
!16660 = !{null, !2403}
!16661 = !{!16662, !16663}
!16662 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16658, file: !2480, line: 1674, type: !2403)
!16663 = !DILocalVariable(name: "thread", scope: !16658, file: !2480, line: 1676, type: !2372)
!16664 = !DILocation(line: 0, scope: !16658)
!16665 = !DILocation(line: 1678, column: 19, scope: !16658)
!16666 = !DILocation(line: 1678, column: 41, scope: !16658)
!16667 = !DILocation(line: 1678, column: 2, scope: !16658)
!16668 = !DILocation(line: 1679, column: 3, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16658, file: !2480, line: 1678, column: 50)
!16670 = !DILocation(line: 1680, column: 9, scope: !16669)
!16671 = !DILocalVariable(name: "thread", arg: 1, scope: !16672, file: !13661, line: 65, type: !2372)
!16672 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13661, file: !13661, line: 65, type: !16673, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16675)
!16673 = !DISubroutineType(types: !16674)
!16674 = !{null, !2372, !32}
!16675 = !{!16671, !16676}
!16676 = !DILocalVariable(name: "value", arg: 2, scope: !16672, file: !13661, line: 65, type: !32)
!16677 = !DILocation(line: 0, scope: !16672, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 1681, column: 3, scope: !16669)
!16679 = !DILocation(line: 67, column: 15, scope: !16672, inlinedAt: !16678)
!16680 = !DILocation(line: 67, column: 33, scope: !16672, inlinedAt: !16678)
!16681 = !DILocation(line: 1682, column: 3, scope: !16669)
!16682 = distinct !{!16682, !16667, !16683}
!16683 = !DILocation(line: 1683, column: 2, scope: !16658)
!16684 = !DILocation(line: 1684, column: 1, scope: !16658)
!16685 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2480, file: !2480, line: 1794, type: !16686, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16688)
!16686 = !DISubroutineType(types: !16687)
!16687 = !{!107, !2372, !15369}
!16688 = !{!16689, !16690, !16691, !16692}
!16689 = !DILocalVariable(name: "thread", arg: 1, scope: !16685, file: !2480, line: 1794, type: !2372)
!16690 = !DILocalVariable(name: "timeout", arg: 2, scope: !16685, file: !2480, line: 1794, type: !15369)
!16691 = !DILocalVariable(name: "key", scope: !16685, file: !2480, line: 1796, type: !14473)
!16692 = !DILocalVariable(name: "ret", scope: !16685, file: !2480, line: 1797, type: !107)
!16693 = !DILocation(line: 0, scope: !16685)
!16694 = !DILocation(line: 0, scope: !14481, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 1796, column: 25, scope: !16685)
!16696 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !16695)
!16698 = !DILocation(line: 0, scope: !14490, inlinedAt: !16697)
!16699 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !16695)
!16700 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16695)
!16701 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !16695)
!16702 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !16695)
!16703 = !DILocation(line: 1801, column: 20, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16685, file: !2480, line: 1801, column: 6)
!16705 = !DILocation(line: 1801, column: 33, scope: !16704)
!16706 = !DILocation(line: 1801, column: 49, scope: !16704)
!16707 = !DILocation(line: 1801, column: 6, scope: !16685)
!16708 = !DILocation(line: 1803, column: 13, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16704, file: !2480, line: 1803, column: 13)
!16710 = !DILocation(line: 1803, column: 13, scope: !16704)
!16711 = !DILocation(line: 1805, column: 24, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16709, file: !2480, line: 1805, column: 13)
!16713 = !DILocation(line: 1805, column: 21, scope: !16712)
!16714 = !DILocation(line: 1805, column: 34, scope: !16712)
!16715 = !DILocation(line: 1806, column: 20, scope: !16712)
!16716 = !DILocation(line: 1806, column: 44, scope: !16712)
!16717 = !DILocation(line: 1806, column: 30, scope: !16712)
!16718 = !DILocation(line: 1805, column: 13, scope: !16709)
!16719 = !DILocation(line: 1031, column: 3, scope: !15208, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 48, column: 10, scope: !15212, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 1809, column: 3, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16723, file: !2480, line: 1809, column: 3)
!16723 = distinct !DILexicalBlock(scope: !16724, file: !2480, line: 1809, column: 3)
!16724 = distinct !DILexicalBlock(scope: !16712, file: !2480, line: 1808, column: 9)
!16725 = !DILocation(line: 0, scope: !15208, inlinedAt: !16720)
!16726 = !DILocation(line: 48, column: 9, scope: !15212, inlinedAt: !16721)
!16727 = !DILocation(line: 1809, column: 3, scope: !16723)
!16728 = !DILocation(line: 1809, column: 3, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16722, file: !2480, line: 1809, column: 3)
!16730 = !DILocation(line: 1810, column: 23, scope: !16724)
!16731 = !DILocation(line: 1810, column: 42, scope: !16724)
!16732 = !DILocation(line: 1810, column: 3, scope: !16724)
!16733 = !DILocation(line: 1811, column: 22, scope: !16724)
!16734 = !DILocation(line: 1811, column: 3, scope: !16724)
!16735 = !DILocation(line: 0, scope: !15159, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 1814, column: 9, scope: !16724)
!16737 = !DILocation(line: 0, scope: !15168, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 195, column: 2, scope: !15159, inlinedAt: !16736)
!16739 = !DILocation(line: 225, column: 2, scope: !15175, inlinedAt: !16738)
!16740 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16738)
!16741 = !DILocation(line: 225, column: 2, scope: !15179, inlinedAt: !16738)
!16742 = !DILocation(line: 196, column: 9, scope: !15159, inlinedAt: !16736)
!16743 = !DILocation(line: 1817, column: 3, scope: !16724)
!16744 = !DILocation(line: 0, scope: !16704)
!16745 = !DILocation(line: 0, scope: !14515, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 1822, column: 2, scope: !16685)
!16747 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !16746)
!16748 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16746)
!16749 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !16746)
!16750 = !DILocation(line: 0, scope: !14529, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !16746)
!16752 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !16751)
!16753 = !DILocation(line: 1823, column: 2, scope: !16685)
!16754 = !DILocation(line: 1824, column: 1, scope: !16685)
!16755 = distinct !DISubprogram(name: "z_sched_wake", scope: !2480, file: !2480, line: 1882, type: !16756, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16758)
!16756 = !DISubroutineType(types: !16757)
!16757 = !{!145, !2403, !107, !106}
!16758 = !{!16759, !16760, !16761, !16762, !16763, !16764, !16766}
!16759 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16755, file: !2480, line: 1882, type: !2403)
!16760 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16755, file: !2480, line: 1882, type: !107)
!16761 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16755, file: !2480, line: 1882, type: !106)
!16762 = !DILocalVariable(name: "thread", scope: !16755, file: !2480, line: 1884, type: !2372)
!16763 = !DILocalVariable(name: "ret", scope: !16755, file: !2480, line: 1885, type: !145)
!16764 = !DILocalVariable(name: "__i", scope: !16765, file: !2480, line: 1887, type: !14473)
!16765 = distinct !DILexicalBlock(scope: !16755, file: !2480, line: 1887, column: 2)
!16766 = !DILocalVariable(name: "__key", scope: !16765, file: !2480, line: 1887, type: !14473)
!16767 = !DILocation(line: 0, scope: !16755)
!16768 = !DILocation(line: 0, scope: !16765)
!16769 = !DILocation(line: 0, scope: !14481, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 1887, column: 2, scope: !16765)
!16771 = !DILocation(line: 55, column: 2, scope: !14490, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 145, column: 10, scope: !14481, inlinedAt: !16770)
!16773 = !DILocation(line: 0, scope: !14490, inlinedAt: !16772)
!16774 = !DILocation(line: 148, column: 2, scope: !14498, inlinedAt: !16770)
!16775 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16770)
!16776 = !DILocation(line: 148, column: 2, scope: !14502, inlinedAt: !16770)
!16777 = !DILocation(line: 160, column: 2, scope: !14481, inlinedAt: !16770)
!16778 = !DILocation(line: 1888, column: 12, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2480, line: 1887, column: 26)
!16780 = distinct !DILexicalBlock(scope: !16765, file: !2480, line: 1887, column: 2)
!16781 = !DILocation(line: 1890, column: 14, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16779, file: !2480, line: 1890, column: 7)
!16783 = !DILocation(line: 1890, column: 7, scope: !16779)
!16784 = !DILocalVariable(name: "thread", arg: 1, scope: !16785, file: !16786, line: 134, type: !2372)
!16785 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16786, file: !16786, line: 134, type: !16787, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16789)
!16786 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16787 = !DISubroutineType(types: !16788)
!16788 = !{null, !2372, !32, !106}
!16789 = !{!16784, !16790, !16791}
!16790 = !DILocalVariable(name: "value", arg: 2, scope: !16785, file: !16786, line: 135, type: !32)
!16791 = !DILocalVariable(name: "data", arg: 3, scope: !16785, file: !16786, line: 136, type: !106)
!16792 = !DILocation(line: 0, scope: !16785, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 1891, column: 4, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16782, file: !2480, line: 1890, column: 23)
!16795 = !DILocation(line: 0, scope: !16672, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 138, column: 2, scope: !16785, inlinedAt: !16793)
!16797 = !DILocation(line: 67, column: 15, scope: !16672, inlinedAt: !16796)
!16798 = !DILocation(line: 67, column: 33, scope: !16672, inlinedAt: !16796)
!16799 = !DILocation(line: 139, column: 15, scope: !16785, inlinedAt: !16793)
!16800 = !DILocation(line: 139, column: 25, scope: !16785, inlinedAt: !16793)
!16801 = !DILocation(line: 1894, column: 4, scope: !16794)
!16802 = !DILocation(line: 1895, column: 10, scope: !16794)
!16803 = !DILocation(line: 1896, column: 4, scope: !16794)
!16804 = !DILocation(line: 1898, column: 3, scope: !16794)
!16805 = !DILocation(line: 0, scope: !14515, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 1887, column: 2, scope: !16780)
!16807 = !DILocation(line: 194, column: 2, scope: !14523, inlinedAt: !16806)
!16808 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16806)
!16809 = !DILocation(line: 194, column: 2, scope: !14527, inlinedAt: !16806)
!16810 = !DILocation(line: 0, scope: !14529, inlinedAt: !16811)
!16811 = distinct !DILocation(line: 215, column: 2, scope: !14515, inlinedAt: !16806)
!16812 = !DILocation(line: 95, column: 2, scope: !14529, inlinedAt: !16811)
!16813 = !DILocation(line: 1901, column: 2, scope: !16755)
!16814 = distinct !DISubprogram(name: "z_sched_wait", scope: !2480, file: !2480, line: 1904, type: !16815, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16818)
!16815 = !DISubroutineType(types: !16816)
!16816 = !{!107, !14484, !14473, !2403, !15369, !16817}
!16817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16818 = !{!16819, !16820, !16821, !16822, !16823, !16824}
!16819 = !DILocalVariable(name: "lock", arg: 1, scope: !16814, file: !2480, line: 1904, type: !14484)
!16820 = !DILocalVariable(name: "key", arg: 2, scope: !16814, file: !2480, line: 1904, type: !14473)
!16821 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16814, file: !2480, line: 1905, type: !2403)
!16822 = !DILocalVariable(name: "timeout", arg: 4, scope: !16814, file: !2480, line: 1905, type: !15369)
!16823 = !DILocalVariable(name: "data", arg: 5, scope: !16814, file: !2480, line: 1905, type: !16817)
!16824 = !DILocalVariable(name: "ret", scope: !16814, file: !2480, line: 1907, type: !107)
!16825 = !DILocation(line: 0, scope: !16814)
!16826 = !DILocation(line: 1907, column: 12, scope: !16814)
!16827 = !DILocation(line: 1909, column: 11, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16814, file: !2480, line: 1909, column: 6)
!16829 = !DILocation(line: 1909, column: 6, scope: !16814)
!16830 = !DILocation(line: 1910, column: 11, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16828, file: !2480, line: 1909, column: 20)
!16832 = !DILocation(line: 1910, column: 26, scope: !16831)
!16833 = !DILocation(line: 1910, column: 9, scope: !16831)
!16834 = !DILocation(line: 1911, column: 2, scope: !16831)
!16835 = !DILocation(line: 1912, column: 2, scope: !16814)
!16836 = distinct !DISubprogram(name: "z_data_copy", scope: !16837, file: !16837, line: 22, type: !3111, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !2182)
!16837 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16838 = !DILocation(line: 24, column: 2, scope: !16836)
!16839 = !DILocation(line: 27, column: 2, scope: !16836)
!16840 = !DILocation(line: 71, column: 1, scope: !16836)
!16841 = distinct !DISubprogram(name: "z_add_timeout", scope: !2517, file: !2517, line: 88, type: !16842, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16848)
!16842 = !DISubroutineType(types: !16843)
!16843 = !{null, !2490, !2509, !16844}
!16844 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16845)
!16845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16846)
!16846 = !{!16847}
!16847 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16845, file: !565, line: 66, baseType: !564, size: 64)
!16848 = !{!16849, !16850, !16851, !16852, !16858, !16859, !16862, !16865}
!16849 = !DILocalVariable(name: "to", arg: 1, scope: !16841, file: !2517, line: 88, type: !2490)
!16850 = !DILocalVariable(name: "fn", arg: 2, scope: !16841, file: !2517, line: 88, type: !2509)
!16851 = !DILocalVariable(name: "timeout", arg: 3, scope: !16841, file: !2517, line: 89, type: !16844)
!16852 = !DILocalVariable(name: "__i", scope: !16853, file: !2517, line: 102, type: !16854)
!16853 = distinct !DILexicalBlock(scope: !16841, file: !2517, line: 102, column: 2)
!16854 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16855)
!16855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16856)
!16856 = !{!16857}
!16857 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16855, file: !420, line: 33, baseType: !107, size: 32)
!16858 = !DILocalVariable(name: "__key", scope: !16853, file: !2517, line: 102, type: !16854)
!16859 = !DILocalVariable(name: "t", scope: !16860, file: !2517, line: 103, type: !2490)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !2517, line: 102, column: 24)
!16861 = distinct !DILexicalBlock(scope: !16853, file: !2517, line: 102, column: 2)
!16862 = !DILocalVariable(name: "ticks", scope: !16863, file: !2517, line: 107, type: !564)
!16863 = distinct !DILexicalBlock(scope: !16864, file: !2517, line: 106, column: 39)
!16864 = distinct !DILexicalBlock(scope: !16860, file: !2517, line: 105, column: 7)
!16865 = !DILocalVariable(name: "next_time", scope: !16866, file: !2517, line: 137, type: !874)
!16866 = distinct !DILexicalBlock(scope: !16867, file: !2517, line: 127, column: 22)
!16867 = distinct !DILexicalBlock(scope: !16860, file: !2517, line: 127, column: 7)
!16868 = !DILocation(line: 0, scope: !16841)
!16869 = !DILocation(line: 91, column: 6, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16841, file: !2517, line: 91, column: 6)
!16871 = !DILocation(line: 91, column: 6, scope: !16841)
!16872 = !DILocation(line: 99, column: 2, scope: !16873)
!16873 = distinct !DILexicalBlock(scope: !16874, file: !2517, line: 99, column: 2)
!16874 = distinct !DILexicalBlock(scope: !16841, file: !2517, line: 99, column: 2)
!16875 = !DILocation(line: 99, column: 2, scope: !16874)
!16876 = !DILocation(line: 99, column: 2, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16873, file: !2517, line: 99, column: 2)
!16878 = !DILocation(line: 100, column: 6, scope: !16841)
!16879 = !DILocation(line: 100, column: 9, scope: !16841)
!16880 = !DILocation(line: 0, scope: !16853)
!16881 = !DILocalVariable(name: "l", arg: 1, scope: !16882, file: !420, line: 136, type: !16885)
!16882 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16883, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16886)
!16883 = !DISubroutineType(types: !16884)
!16884 = !{!16854, !16885}
!16885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!16886 = !{!16881, !16887}
!16887 = !DILocalVariable(name: "k", scope: !16882, file: !420, line: 139, type: !16854)
!16888 = !DILocation(line: 0, scope: !16882, inlinedAt: !16889)
!16889 = distinct !DILocation(line: 102, column: 2, scope: !16853)
!16890 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !16895)
!16891 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5957, file: !5957, line: 42, type: !5958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16892)
!16892 = !{!16893, !16894}
!16893 = !DILocalVariable(name: "key", scope: !16891, file: !5957, line: 44, type: !32)
!16894 = !DILocalVariable(name: "tmp", scope: !16891, file: !5957, line: 53, type: !32)
!16895 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !16889)
!16896 = !{i64 2047242}
!16897 = !DILocation(line: 0, scope: !16891, inlinedAt: !16895)
!16898 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !16889)
!16899 = distinct !DILexicalBlock(scope: !16900, file: !420, line: 148, column: 2)
!16900 = distinct !DILexicalBlock(scope: !16882, file: !420, line: 148, column: 2)
!16901 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !16889)
!16902 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !16889)
!16903 = distinct !DILexicalBlock(scope: !16899, file: !420, line: 148, column: 2)
!16904 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !16889)
!16905 = !DILocation(line: 106, column: 33, scope: !16864)
!16906 = !DILocation(line: 105, column: 7, scope: !16860)
!16907 = !DILocation(line: 107, column: 50, scope: !16863)
!16908 = !DILocation(line: 107, column: 48, scope: !16863)
!16909 = !DILocation(line: 0, scope: !16863)
!16910 = !DILocation(line: 109, column: 17, scope: !16863)
!16911 = !DILocation(line: 110, column: 3, scope: !16863)
!16912 = !DILocation(line: 111, column: 31, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16864, file: !2517, line: 110, column: 10)
!16914 = !DILocation(line: 111, column: 37, scope: !16913)
!16915 = !DILocation(line: 111, column: 35, scope: !16913)
!16916 = !DILocation(line: 0, scope: !16864)
!16917 = !DILocation(line: 109, column: 8, scope: !16863)
!16918 = !DILocation(line: 109, column: 15, scope: !16863)
!16919 = !DILocation(line: 114, column: 12, scope: !16920)
!16920 = distinct !DILexicalBlock(scope: !16860, file: !2517, line: 114, column: 3)
!16921 = !DILocation(line: 0, scope: !16860)
!16922 = !DILocation(line: 114, column: 3, scope: !16920)
!16923 = !DILocation(line: 115, column: 24, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16925, file: !2517, line: 115, column: 8)
!16925 = distinct !DILexicalBlock(scope: !16926, file: !2517, line: 114, column: 45)
!16926 = distinct !DILexicalBlock(scope: !16920, file: !2517, line: 114, column: 3)
!16927 = !DILocation(line: 115, column: 11, scope: !16924)
!16928 = !DILocation(line: 115, column: 18, scope: !16924)
!16929 = !DILocation(line: 115, column: 8, scope: !16925)
!16930 = !DILocation(line: 116, column: 15, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16924, file: !2517, line: 115, column: 32)
!16932 = !DILocation(line: 117, column: 26, scope: !16931)
!16933 = !DILocation(line: 117, column: 5, scope: !16931)
!16934 = !DILocation(line: 123, column: 7, scope: !16860)
!16935 = !DILocation(line: 120, column: 15, scope: !16925)
!16936 = !DILocation(line: 114, column: 36, scope: !16926)
!16937 = distinct !{!16937, !16922, !16938}
!16938 = !DILocation(line: 121, column: 3, scope: !16920)
!16939 = !DILocation(line: 124, column: 4, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16941, file: !2517, line: 123, column: 18)
!16941 = distinct !DILexicalBlock(scope: !16860, file: !2517, line: 123, column: 7)
!16942 = !DILocation(line: 125, column: 3, scope: !16940)
!16943 = !DILocation(line: 127, column: 13, scope: !16867)
!16944 = !DILocation(line: 127, column: 10, scope: !16867)
!16945 = !DILocation(line: 127, column: 7, scope: !16860)
!16946 = !DILocation(line: 137, column: 24, scope: !16866)
!16947 = !DILocation(line: 0, scope: !16866)
!16948 = !DILocation(line: 139, column: 18, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16866, file: !2517, line: 139, column: 8)
!16950 = !DILocation(line: 139, column: 23, scope: !16949)
!16951 = !DILocation(line: 141, column: 5, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16949, file: !2517, line: 140, column: 48)
!16953 = !DILocation(line: 142, column: 4, scope: !16952)
!16954 = !DILocalVariable(name: "key", arg: 2, scope: !16955, file: !420, line: 190, type: !16854)
!16955 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16956, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16958)
!16956 = !DISubroutineType(types: !16957)
!16957 = !{null, !16885, !16854}
!16958 = !{!16959, !16954}
!16959 = !DILocalVariable(name: "l", arg: 1, scope: !16955, file: !420, line: 189, type: !16885)
!16960 = !DILocation(line: 0, scope: !16955, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 102, column: 2, scope: !16861)
!16962 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !16961)
!16963 = distinct !DILexicalBlock(scope: !16964, file: !420, line: 194, column: 2)
!16964 = distinct !DILexicalBlock(scope: !16955, file: !420, line: 194, column: 2)
!16965 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !16961)
!16966 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !16961)
!16967 = distinct !DILexicalBlock(scope: !16963, file: !420, line: 194, column: 2)
!16968 = !DILocalVariable(name: "key", arg: 1, scope: !16969, file: !5957, line: 84, type: !32)
!16969 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5957, file: !5957, line: 84, type: !5968, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16970)
!16970 = !{!16968}
!16971 = !DILocation(line: 0, scope: !16969, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !16961)
!16973 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !16972)
!16974 = !{i64 2048059}
!16975 = !DILocation(line: 148, column: 1, scope: !16841)
!16976 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16977, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16981)
!16977 = !DISubroutineType(types: !16978)
!16978 = !{!145, !16979}
!16979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16980, size: 32)
!16980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!16981 = !{!16982}
!16982 = !DILocalVariable(name: "node", arg: 1, scope: !16976, file: !319, line: 225, type: !16979)
!16983 = !DILocation(line: 0, scope: !16976)
!16984 = !DILocation(line: 227, column: 15, scope: !16976)
!16985 = !DILocation(line: 227, column: 20, scope: !16976)
!16986 = !DILocation(line: 227, column: 2, scope: !16976)
!16987 = distinct !DISubprogram(name: "elapsed", scope: !2517, file: !2517, line: 62, type: !16988, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!16988 = !DISubroutineType(types: !16989)
!16989 = !{!874}
!16990 = !DILocation(line: 64, column: 9, scope: !16987)
!16991 = !DILocation(line: 64, column: 28, scope: !16987)
!16992 = !DILocation(line: 64, column: 35, scope: !16987)
!16993 = !DILocation(line: 64, column: 2, scope: !16987)
!16994 = distinct !DISubprogram(name: "first", scope: !2517, file: !2517, line: 39, type: !16995, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16997)
!16995 = !DISubroutineType(types: !16996)
!16996 = !{!2490}
!16997 = !{!16998}
!16998 = !DILocalVariable(name: "t", scope: !16994, file: !2517, line: 41, type: !16999)
!16999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!17000 = !DILocation(line: 41, column: 19, scope: !16994)
!17001 = !DILocation(line: 0, scope: !16994)
!17002 = !DILocation(line: 43, column: 9, scope: !16994)
!17003 = !DILocation(line: 43, column: 2, scope: !16994)
!17004 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17005, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17007)
!17005 = !DISubroutineType(types: !17006)
!17006 = !{null, !16999, !16999}
!17007 = !{!17008, !17009, !17010}
!17008 = !DILocalVariable(name: "successor", arg: 1, scope: !17004, file: !319, line: 443, type: !16999)
!17009 = !DILocalVariable(name: "node", arg: 2, scope: !17004, file: !319, line: 443, type: !16999)
!17010 = !DILocalVariable(name: "prev", scope: !17004, file: !319, line: 445, type: !17011)
!17011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16999)
!17012 = !DILocation(line: 0, scope: !17004)
!17013 = !DILocation(line: 445, column: 39, scope: !17004)
!17014 = !DILocation(line: 447, column: 8, scope: !17004)
!17015 = !DILocation(line: 447, column: 13, scope: !17004)
!17016 = !DILocation(line: 448, column: 8, scope: !17004)
!17017 = !DILocation(line: 448, column: 13, scope: !17004)
!17018 = !DILocation(line: 449, column: 8, scope: !17004)
!17019 = !DILocation(line: 449, column: 13, scope: !17004)
!17020 = !DILocation(line: 450, column: 18, scope: !17004)
!17021 = !DILocation(line: 451, column: 1, scope: !17004)
!17022 = distinct !DISubprogram(name: "next", scope: !2517, file: !2517, line: 46, type: !17023, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17025)
!17023 = !DISubroutineType(types: !17024)
!17024 = !{!2490, !2490}
!17025 = !{!17026, !17027}
!17026 = !DILocalVariable(name: "t", arg: 1, scope: !17022, file: !2517, line: 46, type: !2490)
!17027 = !DILocalVariable(name: "n", scope: !17022, file: !2517, line: 48, type: !16999)
!17028 = !DILocation(line: 0, scope: !17022)
!17029 = !DILocation(line: 48, column: 58, scope: !17022)
!17030 = !DILocation(line: 48, column: 19, scope: !17022)
!17031 = !DILocation(line: 50, column: 9, scope: !17022)
!17032 = !DILocation(line: 50, column: 2, scope: !17022)
!17033 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17034, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17037)
!17034 = !DISubroutineType(types: !17035)
!17035 = !{null, !17036, !16999}
!17036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!17037 = !{!17038, !17039, !17040}
!17038 = !DILocalVariable(name: "list", arg: 1, scope: !17033, file: !319, line: 404, type: !17036)
!17039 = !DILocalVariable(name: "node", arg: 2, scope: !17033, file: !319, line: 404, type: !16999)
!17040 = !DILocalVariable(name: "tail", scope: !17033, file: !319, line: 406, type: !17011)
!17041 = !DILocation(line: 0, scope: !17033)
!17042 = !DILocation(line: 406, column: 34, scope: !17033)
!17043 = !DILocation(line: 408, column: 8, scope: !17033)
!17044 = !DILocation(line: 408, column: 13, scope: !17033)
!17045 = !DILocation(line: 409, column: 8, scope: !17033)
!17046 = !DILocation(line: 409, column: 13, scope: !17033)
!17047 = !DILocation(line: 411, column: 8, scope: !17033)
!17048 = !DILocation(line: 411, column: 13, scope: !17033)
!17049 = !DILocation(line: 412, column: 13, scope: !17033)
!17050 = !DILocation(line: 413, column: 1, scope: !17033)
!17051 = distinct !DISubprogram(name: "next_timeout", scope: !2517, file: !2517, line: 67, type: !16988, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17052)
!17052 = !{!17053, !17054, !17055}
!17053 = !DILocalVariable(name: "to", scope: !17051, file: !2517, line: 69, type: !2490)
!17054 = !DILocalVariable(name: "ticks_elapsed", scope: !17051, file: !2517, line: 70, type: !874)
!17055 = !DILocalVariable(name: "ret", scope: !17051, file: !2517, line: 71, type: !874)
!17056 = !DILocation(line: 69, column: 24, scope: !17051)
!17057 = !DILocation(line: 0, scope: !17051)
!17058 = !DILocation(line: 70, column: 26, scope: !17051)
!17059 = !DILocation(line: 73, column: 10, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17051, file: !2517, line: 73, column: 6)
!17061 = !DILocation(line: 73, column: 19, scope: !17060)
!17062 = !DILocation(line: 74, column: 21, scope: !17060)
!17063 = !DILocation(line: 74, column: 30, scope: !17060)
!17064 = !DILocation(line: 74, column: 28, scope: !17060)
!17065 = !DILocation(line: 74, column: 45, scope: !17060)
!17066 = !DILocation(line: 73, column: 6, scope: !17051)
!17067 = !DILocation(line: 77, column: 9, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17060, file: !2517, line: 76, column: 9)
!17069 = !DILocation(line: 0, scope: !17060)
!17070 = !DILocation(line: 81, column: 20, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17051, file: !2517, line: 81, column: 6)
!17072 = !DILocation(line: 81, column: 6, scope: !17071)
!17073 = !DILocation(line: 81, column: 32, scope: !17071)
!17074 = !DILocation(line: 85, column: 2, scope: !17051)
!17075 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17076, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17078)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{!16999, !17036, !16999}
!17078 = !{!17079, !17080}
!17079 = !DILocalVariable(name: "list", arg: 1, scope: !17075, file: !319, line: 341, type: !17036)
!17080 = !DILocalVariable(name: "node", arg: 2, scope: !17075, file: !319, line: 342, type: !16999)
!17081 = !DILocation(line: 0, scope: !17075)
!17082 = !DILocation(line: 344, column: 15, scope: !17075)
!17083 = !DILocation(line: 344, column: 9, scope: !17075)
!17084 = !DILocation(line: 344, column: 26, scope: !17075)
!17085 = !DILocation(line: 344, column: 2, scope: !17075)
!17086 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17076, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17087)
!17087 = !{!17088, !17089}
!17088 = !DILocalVariable(name: "list", arg: 1, scope: !17086, file: !319, line: 325, type: !17036)
!17089 = !DILocalVariable(name: "node", arg: 2, scope: !17086, file: !319, line: 326, type: !16999)
!17090 = !DILocation(line: 0, scope: !17086)
!17091 = !DILocation(line: 328, column: 24, scope: !17086)
!17092 = !DILocation(line: 328, column: 15, scope: !17086)
!17093 = !DILocation(line: 328, column: 9, scope: !17086)
!17094 = !DILocation(line: 328, column: 45, scope: !17086)
!17095 = !DILocation(line: 328, column: 2, scope: !17086)
!17096 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17097, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17099)
!17097 = !DISubroutineType(types: !17098)
!17098 = !{!16999, !17036}
!17099 = !{!17100}
!17100 = !DILocalVariable(name: "list", arg: 1, scope: !17096, file: !319, line: 294, type: !17036)
!17101 = !DILocation(line: 0, scope: !17096)
!17102 = !DILocation(line: 296, column: 9, scope: !17096)
!17103 = !DILocation(line: 296, column: 2, scope: !17096)
!17104 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17105, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17107)
!17105 = !DISubroutineType(types: !17106)
!17106 = !{!145, !17036}
!17107 = !{!17108}
!17108 = !DILocalVariable(name: "list", arg: 1, scope: !17104, file: !319, line: 266, type: !17036)
!17109 = !DILocation(line: 0, scope: !17104)
!17110 = !DILocation(line: 268, column: 15, scope: !17104)
!17111 = !DILocation(line: 268, column: 20, scope: !17104)
!17112 = !DILocation(line: 268, column: 2, scope: !17104)
!17113 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2517, file: !2517, line: 150, type: !17114, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17116)
!17114 = !DISubroutineType(types: !17115)
!17115 = !{!107, !2490}
!17116 = !{!17117, !17118, !17119, !17121}
!17117 = !DILocalVariable(name: "to", arg: 1, scope: !17113, file: !2517, line: 150, type: !2490)
!17118 = !DILocalVariable(name: "ret", scope: !17113, file: !2517, line: 152, type: !107)
!17119 = !DILocalVariable(name: "__i", scope: !17120, file: !2517, line: 154, type: !16854)
!17120 = distinct !DILexicalBlock(scope: !17113, file: !2517, line: 154, column: 2)
!17121 = !DILocalVariable(name: "__key", scope: !17120, file: !2517, line: 154, type: !16854)
!17122 = !DILocation(line: 0, scope: !17113)
!17123 = !DILocation(line: 0, scope: !17120)
!17124 = !DILocation(line: 0, scope: !16882, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 154, column: 2, scope: !17120)
!17126 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17125)
!17128 = !DILocation(line: 0, scope: !16891, inlinedAt: !17127)
!17129 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17125)
!17130 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17125)
!17131 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17125)
!17132 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17125)
!17133 = !DILocation(line: 155, column: 7, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17135, file: !2517, line: 155, column: 7)
!17135 = distinct !DILexicalBlock(scope: !17136, file: !2517, line: 154, column: 24)
!17136 = distinct !DILexicalBlock(scope: !17120, file: !2517, line: 154, column: 2)
!17137 = !DILocation(line: 155, column: 7, scope: !17135)
!17138 = !DILocation(line: 156, column: 4, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17134, file: !2517, line: 155, column: 39)
!17140 = !DILocation(line: 158, column: 3, scope: !17139)
!17141 = !DILocation(line: 0, scope: !16955, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 154, column: 2, scope: !17136)
!17143 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17142)
!17144 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17142)
!17145 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17142)
!17146 = !DILocation(line: 0, scope: !16969, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17142)
!17148 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17147)
!17149 = !DILocation(line: 161, column: 2, scope: !17113)
!17150 = distinct !DISubprogram(name: "remove_timeout", scope: !2517, file: !2517, line: 53, type: !2511, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17151)
!17151 = !{!17152}
!17152 = !DILocalVariable(name: "t", arg: 1, scope: !17150, file: !2517, line: 53, type: !2490)
!17153 = !DILocation(line: 0, scope: !17150)
!17154 = !DILocation(line: 55, column: 6, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17150, file: !2517, line: 55, column: 6)
!17156 = !DILocation(line: 55, column: 14, scope: !17155)
!17157 = !DILocation(line: 55, column: 6, scope: !17150)
!17158 = !DILocation(line: 56, column: 25, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17155, file: !2517, line: 55, column: 23)
!17160 = !DILocation(line: 56, column: 12, scope: !17159)
!17161 = !DILocation(line: 56, column: 19, scope: !17159)
!17162 = !DILocation(line: 57, column: 2, scope: !17159)
!17163 = !DILocation(line: 59, column: 23, scope: !17150)
!17164 = !DILocation(line: 59, column: 2, scope: !17150)
!17165 = !DILocation(line: 60, column: 1, scope: !17150)
!17166 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17167, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17169)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{null, !16999}
!17169 = !{!17170, !17171, !17172}
!17170 = !DILocalVariable(name: "node", arg: 1, scope: !17166, file: !319, line: 496, type: !16999)
!17171 = !DILocalVariable(name: "prev", scope: !17166, file: !319, line: 498, type: !17011)
!17172 = !DILocalVariable(name: "next", scope: !17166, file: !319, line: 499, type: !17011)
!17173 = !DILocation(line: 0, scope: !17166)
!17174 = !DILocation(line: 498, column: 34, scope: !17166)
!17175 = !DILocation(line: 499, column: 34, scope: !17166)
!17176 = !DILocation(line: 501, column: 8, scope: !17166)
!17177 = !DILocation(line: 501, column: 13, scope: !17166)
!17178 = !DILocation(line: 502, column: 8, scope: !17166)
!17179 = !DILocation(line: 502, column: 13, scope: !17166)
!17180 = !DILocation(line: 503, column: 2, scope: !17166)
!17181 = !DILocation(line: 504, column: 1, scope: !17166)
!17182 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17167, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17183)
!17183 = !{!17184}
!17184 = !DILocalVariable(name: "node", arg: 1, scope: !17182, file: !319, line: 211, type: !16999)
!17185 = !DILocation(line: 0, scope: !17182)
!17186 = !DILocation(line: 213, column: 8, scope: !17182)
!17187 = !DILocation(line: 213, column: 13, scope: !17182)
!17188 = !DILocation(line: 214, column: 8, scope: !17182)
!17189 = !DILocation(line: 214, column: 13, scope: !17182)
!17190 = !DILocation(line: 215, column: 1, scope: !17182)
!17191 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2517, file: !2517, line: 183, type: !17192, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17196)
!17192 = !DISubroutineType(types: !17193)
!17193 = !{!564, !17194}
!17194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17195, size: 32)
!17195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2491)
!17196 = !{!17197, !17198, !17199, !17201}
!17197 = !DILocalVariable(name: "timeout", arg: 1, scope: !17191, file: !2517, line: 183, type: !17194)
!17198 = !DILocalVariable(name: "ticks", scope: !17191, file: !2517, line: 185, type: !564)
!17199 = !DILocalVariable(name: "__i", scope: !17200, file: !2517, line: 187, type: !16854)
!17200 = distinct !DILexicalBlock(scope: !17191, file: !2517, line: 187, column: 2)
!17201 = !DILocalVariable(name: "__key", scope: !17200, file: !2517, line: 187, type: !16854)
!17202 = !DILocation(line: 0, scope: !17191)
!17203 = !DILocation(line: 0, scope: !17200)
!17204 = !DILocation(line: 0, scope: !16882, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 187, column: 2, scope: !17200)
!17206 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17205)
!17208 = !DILocation(line: 0, scope: !16891, inlinedAt: !17207)
!17209 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17205)
!17210 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17205)
!17211 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17205)
!17212 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17205)
!17213 = !DILocation(line: 188, column: 11, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17215, file: !2517, line: 187, column: 24)
!17215 = distinct !DILexicalBlock(scope: !17200, file: !2517, line: 187, column: 2)
!17216 = !DILocation(line: 0, scope: !16955, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 187, column: 2, scope: !17215)
!17218 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17217)
!17219 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17217)
!17220 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17217)
!17221 = !DILocation(line: 0, scope: !16969, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17217)
!17223 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17222)
!17224 = !DILocation(line: 191, column: 2, scope: !17191)
!17225 = distinct !DISubprogram(name: "timeout_rem", scope: !2517, file: !2517, line: 165, type: !17192, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17226)
!17226 = !{!17227, !17228, !17229}
!17227 = !DILocalVariable(name: "timeout", arg: 1, scope: !17225, file: !2517, line: 165, type: !17194)
!17228 = !DILocalVariable(name: "ticks", scope: !17225, file: !2517, line: 167, type: !564)
!17229 = !DILocalVariable(name: "t", scope: !17230, file: !2517, line: 173, type: !2490)
!17230 = distinct !DILexicalBlock(scope: !17225, file: !2517, line: 173, column: 2)
!17231 = !DILocation(line: 0, scope: !17225)
!17232 = !DILocation(line: 169, column: 6, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17225, file: !2517, line: 169, column: 6)
!17234 = !DILocation(line: 169, column: 6, scope: !17225)
!17235 = !DILocation(line: 173, column: 28, scope: !17230)
!17236 = !DILocation(line: 0, scope: !17230)
!17237 = !DILocation(line: 173, column: 39, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17230, file: !2517, line: 173, column: 2)
!17239 = !DILocation(line: 173, column: 2, scope: !17230)
!17240 = !DILocation(line: 174, column: 15, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17238, file: !2517, line: 173, column: 61)
!17242 = !DILocation(line: 174, column: 9, scope: !17241)
!17243 = !DILocation(line: 175, column: 15, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17241, file: !2517, line: 175, column: 7)
!17245 = !DILocation(line: 175, column: 7, scope: !17241)
!17246 = !DILocation(line: 173, column: 52, scope: !17238)
!17247 = distinct !{!17247, !17239, !17248}
!17248 = !DILocation(line: 178, column: 2, scope: !17230)
!17249 = !DILocation(line: 180, column: 17, scope: !17225)
!17250 = !DILocation(line: 180, column: 15, scope: !17225)
!17251 = !DILocation(line: 180, column: 2, scope: !17225)
!17252 = !DILocation(line: 181, column: 1, scope: !17225)
!17253 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14070, file: !14070, line: 35, type: !17254, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17256)
!17254 = !DISubroutineType(types: !17255)
!17255 = !{!145, !17194}
!17256 = !{!17257}
!17257 = !DILocalVariable(name: "to", arg: 1, scope: !17253, file: !14070, line: 35, type: !17194)
!17258 = !DILocation(line: 0, scope: !17253)
!17259 = !DILocation(line: 37, column: 35, scope: !17253)
!17260 = !DILocation(line: 37, column: 10, scope: !17253)
!17261 = !DILocation(line: 37, column: 9, scope: !17253)
!17262 = !DILocation(line: 37, column: 2, scope: !17253)
!17263 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2517, file: !2517, line: 194, type: !17192, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17264)
!17264 = !{!17265, !17266, !17267, !17269}
!17265 = !DILocalVariable(name: "timeout", arg: 1, scope: !17263, file: !2517, line: 194, type: !17194)
!17266 = !DILocalVariable(name: "ticks", scope: !17263, file: !2517, line: 196, type: !564)
!17267 = !DILocalVariable(name: "__i", scope: !17268, file: !2517, line: 198, type: !16854)
!17268 = distinct !DILexicalBlock(scope: !17263, file: !2517, line: 198, column: 2)
!17269 = !DILocalVariable(name: "__key", scope: !17268, file: !2517, line: 198, type: !16854)
!17270 = !DILocation(line: 0, scope: !17263)
!17271 = !DILocation(line: 0, scope: !17268)
!17272 = !DILocation(line: 0, scope: !16882, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 198, column: 2, scope: !17268)
!17274 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17273)
!17276 = !DILocation(line: 0, scope: !16891, inlinedAt: !17275)
!17277 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17273)
!17278 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17273)
!17279 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17273)
!17280 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17273)
!17281 = !DILocation(line: 199, column: 11, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17283, file: !2517, line: 198, column: 24)
!17283 = distinct !DILexicalBlock(scope: !17268, file: !2517, line: 198, column: 2)
!17284 = !DILocation(line: 199, column: 23, scope: !17282)
!17285 = !DILocation(line: 0, scope: !16955, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 198, column: 2, scope: !17283)
!17287 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17286)
!17288 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17286)
!17289 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17286)
!17290 = !DILocation(line: 0, scope: !16969, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17286)
!17292 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17291)
!17293 = !DILocation(line: 199, column: 21, scope: !17282)
!17294 = !DILocation(line: 202, column: 2, scope: !17263)
!17295 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2517, file: !2517, line: 205, type: !16988, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17296)
!17296 = !{!17297, !17298, !17300}
!17297 = !DILocalVariable(name: "ret", scope: !17295, file: !2517, line: 207, type: !874)
!17298 = !DILocalVariable(name: "__i", scope: !17299, file: !2517, line: 209, type: !16854)
!17299 = distinct !DILexicalBlock(scope: !17295, file: !2517, line: 209, column: 2)
!17300 = !DILocalVariable(name: "__key", scope: !17299, file: !2517, line: 209, type: !16854)
!17301 = !DILocation(line: 0, scope: !17295)
!17302 = !DILocation(line: 0, scope: !17299)
!17303 = !DILocation(line: 0, scope: !16882, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 209, column: 2, scope: !17299)
!17305 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17304)
!17307 = !DILocation(line: 0, scope: !16891, inlinedAt: !17306)
!17308 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17304)
!17309 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17304)
!17310 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17304)
!17311 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17304)
!17312 = !DILocation(line: 210, column: 9, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17314, file: !2517, line: 209, column: 24)
!17314 = distinct !DILexicalBlock(scope: !17299, file: !2517, line: 209, column: 2)
!17315 = !DILocation(line: 0, scope: !16955, inlinedAt: !17316)
!17316 = distinct !DILocation(line: 209, column: 2, scope: !17314)
!17317 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17316)
!17318 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17316)
!17319 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17316)
!17320 = !DILocation(line: 0, scope: !16969, inlinedAt: !17321)
!17321 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17316)
!17322 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17321)
!17323 = !DILocation(line: 212, column: 2, scope: !17295)
!17324 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2517, file: !2517, line: 215, type: !11564, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17325)
!17325 = !{!17326, !17327, !17328, !17330, !17331, !17334, !17335}
!17326 = !DILocalVariable(name: "ticks", arg: 1, scope: !17324, file: !2517, line: 215, type: !874)
!17327 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17324, file: !2517, line: 215, type: !145)
!17328 = !DILocalVariable(name: "__i", scope: !17329, file: !2517, line: 217, type: !16854)
!17329 = distinct !DILexicalBlock(scope: !17324, file: !2517, line: 217, column: 2)
!17330 = !DILocalVariable(name: "__key", scope: !17329, file: !2517, line: 217, type: !16854)
!17331 = !DILocalVariable(name: "next_to", scope: !17332, file: !2517, line: 218, type: !107)
!17332 = distinct !DILexicalBlock(scope: !17333, file: !2517, line: 217, column: 24)
!17333 = distinct !DILexicalBlock(scope: !17329, file: !2517, line: 217, column: 2)
!17334 = !DILocalVariable(name: "sooner", scope: !17332, file: !2517, line: 219, type: !145)
!17335 = !DILocalVariable(name: "imminent", scope: !17332, file: !2517, line: 221, type: !145)
!17336 = !DILocation(line: 0, scope: !17324)
!17337 = !DILocation(line: 0, scope: !17329)
!17338 = !DILocation(line: 0, scope: !16882, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 217, column: 2, scope: !17329)
!17340 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17341)
!17341 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17339)
!17342 = !DILocation(line: 0, scope: !16891, inlinedAt: !17341)
!17343 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17339)
!17344 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17339)
!17345 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17339)
!17346 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17339)
!17347 = !DILocation(line: 218, column: 17, scope: !17332)
!17348 = !DILocation(line: 0, scope: !17332)
!17349 = !DILocation(line: 221, column: 27, scope: !17332)
!17350 = !DILocation(line: 233, column: 17, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17332, file: !2517, line: 233, column: 7)
!17352 = !DILocation(line: 234, column: 26, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17351, file: !2517, line: 233, column: 56)
!17354 = !DILocation(line: 234, column: 4, scope: !17353)
!17355 = !DILocation(line: 235, column: 3, scope: !17353)
!17356 = !DILocation(line: 0, scope: !16955, inlinedAt: !17357)
!17357 = distinct !DILocation(line: 217, column: 2, scope: !17333)
!17358 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17357)
!17359 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17357)
!17360 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17357)
!17361 = !DILocation(line: 0, scope: !16969, inlinedAt: !17362)
!17362 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17357)
!17363 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17362)
!17364 = !DILocation(line: 237, column: 1, scope: !17324)
!17365 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2517, file: !2517, line: 239, type: !17366, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17368)
!17366 = !DISubroutineType(types: !17367)
!17367 = !{null, !874}
!17368 = !{!17369, !17370, !17371, !17373}
!17369 = !DILocalVariable(name: "ticks", arg: 1, scope: !17365, file: !2517, line: 239, type: !874)
!17370 = !DILocalVariable(name: "key", scope: !17365, file: !2517, line: 245, type: !16854)
!17371 = !DILocalVariable(name: "t", scope: !17372, file: !2517, line: 262, type: !2490)
!17372 = distinct !DILexicalBlock(scope: !17365, file: !2517, line: 261, column: 67)
!17373 = !DILocalVariable(name: "dt", scope: !17372, file: !2517, line: 263, type: !107)
!17374 = !DILocation(line: 0, scope: !17365)
!17375 = !DILocation(line: 242, column: 2, scope: !17365)
!17376 = !DILocation(line: 0, scope: !16882, inlinedAt: !17377)
!17377 = distinct !DILocation(line: 245, column: 25, scope: !17365)
!17378 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17379)
!17379 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17377)
!17380 = !DILocation(line: 0, scope: !16891, inlinedAt: !17379)
!17381 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17377)
!17382 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17377)
!17383 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17377)
!17384 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17377)
!17385 = !DILocation(line: 261, column: 9, scope: !17365)
!17386 = !DILocation(line: 261, column: 17, scope: !17365)
!17387 = !DILocation(line: 261, column: 25, scope: !17365)
!17388 = !DILocation(line: 261, column: 37, scope: !17365)
!17389 = !DILocation(line: 261, column: 47, scope: !17365)
!17390 = !DILocation(line: 261, column: 44, scope: !17365)
!17391 = !DILocation(line: 261, column: 2, scope: !17365)
!17392 = !DILocation(line: 0, scope: !17372)
!17393 = !DILocation(line: 263, column: 12, scope: !17372)
!17394 = !DILocation(line: 265, column: 16, scope: !17372)
!17395 = !DILocation(line: 265, column: 13, scope: !17372)
!17396 = !DILocation(line: 266, column: 13, scope: !17372)
!17397 = !DILocation(line: 267, column: 3, scope: !17372)
!17398 = !DILocation(line: 0, scope: !16955, inlinedAt: !17399)
!17399 = distinct !DILocation(line: 269, column: 3, scope: !17372)
!17400 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17399)
!17401 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17399)
!17402 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17399)
!17403 = !DILocation(line: 0, scope: !16969, inlinedAt: !17404)
!17404 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17399)
!17405 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17404)
!17406 = !DILocation(line: 270, column: 6, scope: !17372)
!17407 = !DILocation(line: 270, column: 3, scope: !17372)
!17408 = !DILocation(line: 0, scope: !16882, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 271, column: 9, scope: !17372)
!17410 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17409)
!17412 = !DILocation(line: 0, scope: !16891, inlinedAt: !17411)
!17413 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17409)
!17414 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17409)
!17415 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17409)
!17416 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17409)
!17417 = !DILocation(line: 272, column: 22, scope: !17372)
!17418 = distinct !{!17418, !17391, !17419}
!17419 = !DILocation(line: 273, column: 2, scope: !17365)
!17420 = !DILocation(line: 276, column: 19, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17422, file: !2517, line: 275, column: 23)
!17422 = distinct !DILexicalBlock(scope: !17365, file: !2517, line: 275, column: 6)
!17423 = !DILocation(line: 277, column: 2, scope: !17421)
!17424 = !DILocation(line: 279, column: 15, scope: !17365)
!17425 = !DILocation(line: 279, column: 12, scope: !17365)
!17426 = !DILocation(line: 280, column: 21, scope: !17365)
!17427 = !DILocation(line: 282, column: 24, scope: !17365)
!17428 = !DILocation(line: 282, column: 2, scope: !17365)
!17429 = !DILocation(line: 0, scope: !16955, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 284, column: 2, scope: !17365)
!17431 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17430)
!17432 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17430)
!17433 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17430)
!17434 = !DILocation(line: 0, scope: !16969, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17430)
!17436 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17435)
!17437 = !DILocation(line: 285, column: 1, scope: !17365)
!17438 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2517, file: !2517, line: 287, type: !17439, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17441)
!17439 = !DISubroutineType(types: !17440)
!17440 = !{!376}
!17441 = !{!17442, !17443, !17445}
!17442 = !DILocalVariable(name: "t", scope: !17438, file: !2517, line: 289, type: !566)
!17443 = !DILocalVariable(name: "__i", scope: !17444, file: !2517, line: 291, type: !16854)
!17444 = distinct !DILexicalBlock(scope: !17438, file: !2517, line: 291, column: 2)
!17445 = !DILocalVariable(name: "__key", scope: !17444, file: !2517, line: 291, type: !16854)
!17446 = !DILocation(line: 0, scope: !17438)
!17447 = !DILocation(line: 0, scope: !17444)
!17448 = !DILocation(line: 0, scope: !16882, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 291, column: 2, scope: !17444)
!17450 = !DILocation(line: 55, column: 2, scope: !16891, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 145, column: 10, scope: !16882, inlinedAt: !17449)
!17452 = !DILocation(line: 0, scope: !16891, inlinedAt: !17451)
!17453 = !DILocation(line: 148, column: 2, scope: !16899, inlinedAt: !17449)
!17454 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17449)
!17455 = !DILocation(line: 148, column: 2, scope: !16903, inlinedAt: !17449)
!17456 = !DILocation(line: 160, column: 2, scope: !16882, inlinedAt: !17449)
!17457 = !DILocation(line: 292, column: 7, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17459, file: !2517, line: 291, column: 24)
!17459 = distinct !DILexicalBlock(scope: !17444, file: !2517, line: 291, column: 2)
!17460 = !DILocation(line: 292, column: 19, scope: !17458)
!17461 = !DILocation(line: 0, scope: !16955, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 291, column: 2, scope: !17459)
!17463 = !DILocation(line: 194, column: 2, scope: !16963, inlinedAt: !17462)
!17464 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17462)
!17465 = !DILocation(line: 194, column: 2, scope: !16967, inlinedAt: !17462)
!17466 = !DILocation(line: 0, scope: !16969, inlinedAt: !17467)
!17467 = distinct !DILocation(line: 215, column: 2, scope: !16955, inlinedAt: !17462)
!17468 = !DILocation(line: 95, column: 2, scope: !16969, inlinedAt: !17467)
!17469 = !DILocation(line: 292, column: 17, scope: !17458)
!17470 = !DILocation(line: 294, column: 2, scope: !17438)
!17471 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2517, file: !2517, line: 297, type: !6363, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17472 = !DILocation(line: 300, column: 19, scope: !17471)
!17473 = !DILocation(line: 300, column: 9, scope: !17471)
!17474 = !DILocation(line: 300, column: 2, scope: !17471)
!17475 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2517, file: !2517, line: 306, type: !17439, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17476 = !DILocation(line: 308, column: 9, scope: !17475)
!17477 = !DILocation(line: 308, column: 2, scope: !17475)
!17478 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2517, file: !2517, line: 319, type: !6373, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17479)
!17479 = !{!17480, !17481, !17482, !17483}
!17480 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17478, file: !2517, line: 319, type: !152)
!17481 = !DILocalVariable(name: "start_cycles", scope: !17478, file: !2517, line: 328, type: !152)
!17482 = !DILocalVariable(name: "cycles_to_wait", scope: !17478, file: !2517, line: 331, type: !152)
!17483 = !DILocalVariable(name: "current_cycles", scope: !17484, file: !2517, line: 338, type: !152)
!17484 = distinct !DILexicalBlock(scope: !17485, file: !2517, line: 337, column: 11)
!17485 = distinct !DILexicalBlock(scope: !17486, file: !2517, line: 337, column: 2)
!17486 = distinct !DILexicalBlock(scope: !17478, file: !2517, line: 337, column: 2)
!17487 = !DILocation(line: 0, scope: !17478)
!17488 = !DILocation(line: 322, column: 19, scope: !17489)
!17489 = distinct !DILexicalBlock(scope: !17478, file: !2517, line: 322, column: 6)
!17490 = !DILocation(line: 322, column: 6, scope: !17478)
!17491 = !DILocation(line: 328, column: 26, scope: !17478)
!17492 = !DILocation(line: 333, column: 43, scope: !17478)
!17493 = !DILocation(line: 337, column: 2, scope: !17478)
!17494 = !DILocation(line: 338, column: 29, scope: !17484)
!17495 = !DILocation(line: 0, scope: !17484)
!17496 = !DILocation(line: 341, column: 23, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17484, file: !2517, line: 341, column: 7)
!17498 = !DILocation(line: 341, column: 39, scope: !17497)
!17499 = !DILocation(line: 349, column: 1, scope: !17478)
!17500 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6363, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17501 = !DILocation(line: 1677, column: 9, scope: !17500)
!17502 = !DILocation(line: 1677, column: 2, scope: !17500)
!17503 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8776, file: !8776, line: 24, type: !6363, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17504 = !DILocation(line: 26, column: 9, scope: !17503)
!17505 = !DILocation(line: 26, column: 2, scope: !17503)
!17506 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2517, file: !2517, line: 364, type: !17507, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17509)
!17507 = !DISubroutineType(types: !17508)
!17508 = !{!566, !16844}
!17509 = !{!17510, !17511}
!17510 = !DILocalVariable(name: "timeout", arg: 1, scope: !17506, file: !2517, line: 364, type: !16844)
!17511 = !DILocalVariable(name: "dt", scope: !17506, file: !2517, line: 366, type: !564)
!17512 = !DILocation(line: 0, scope: !17506)
!17513 = !DILocation(line: 368, column: 6, scope: !17506)
!17514 = !DILocation(line: 371, column: 10, scope: !17515)
!17515 = distinct !DILexicalBlock(scope: !17516, file: !2517, line: 370, column: 47)
!17516 = distinct !DILexicalBlock(scope: !17517, file: !2517, line: 370, column: 13)
!17517 = distinct !DILexicalBlock(scope: !17506, file: !2517, line: 368, column: 6)
!17518 = !DILocation(line: 371, column: 3, scope: !17515)
!17519 = !DILocation(line: 376, column: 58, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17521, file: !2517, line: 376, column: 7)
!17521 = distinct !DILexicalBlock(scope: !17516, file: !2517, line: 372, column: 9)
!17522 = !DILocation(line: 376, column: 7, scope: !17521)
!17523 = !DILocation(line: 376, column: 43, scope: !17520)
!17524 = !DILocation(line: 377, column: 4, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17520, file: !2517, line: 376, column: 64)
!17526 = !DILocation(line: 379, column: 10, scope: !17521)
!17527 = !DILocation(line: 379, column: 33, scope: !17521)
!17528 = !DILocation(line: 379, column: 31, scope: !17521)
!17529 = !DILocation(line: 379, column: 3, scope: !17521)
!17530 = !DILocation(line: 0, scope: !17517)
!17531 = !DILocation(line: 381, column: 1, scope: !17506)
!17532 = distinct !DISubprogram(name: "boot_banner", scope: !17533, file: !17533, line: 26, type: !3111, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !2182)
!17533 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17534 = !DILocation(line: 34, column: 2, scope: !17532)
!17535 = !DILocation(line: 36, column: 1, scope: !17532)
