; ModuleID = 'build/96b_carbon/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234923 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234903 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234893 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234993 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234983 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234973 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234963 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234953 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234943 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234933 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236264 to i8*), void (i8*)* inttoptr (i32 134234913 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !901
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !862
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !845
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !818
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !834
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !880
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !882
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !884
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !888
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !890
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !896
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !906
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !937
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1034
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1023
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1075
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1141
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1420
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1318
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1422
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1394
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1392
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1435
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1437
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1439
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !916
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1441
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1443
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1445
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1374
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1447
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1619
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1674
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1613
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1676
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1592
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1594
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.2.167 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1682
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1692
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.167, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1603
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1605
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.3.168 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1694
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1617
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1704
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.168, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1663
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1666
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1668
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1671
@.str.4.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.6.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.7.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.8.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.9.171 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.10.173 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.11.174 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1007
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1684
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1686
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1688
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1690
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1696
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1698
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1700
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1702
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.12 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1711
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1822
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1824
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1820
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1815
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1789
@.str.178 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.179 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.180 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.181 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.182 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.183 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1826
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1316
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1372
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1916
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1958
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1961
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1968
@.str.217 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.221 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.222 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.223 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.227 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.228 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.229 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.230 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.231 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.226 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.225 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.227, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.228, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.229, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.230, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.231, i32 0, i32 0)], align 4
@.str.233 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1975
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2199
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2188
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2194
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2206
@.str.5.239 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2211
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.243 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.255, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.256, i32 0, i32 0)], align 4, !dbg !2239
@.str.250 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.251 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.252 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.253 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.254 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.255 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.249 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.256 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2354
@.str.8.248 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.261 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.262 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.263 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.264 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.268 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.269 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.273 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.274 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.283 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.284 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.285 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2367
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2478
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2481
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2483
@.str.286 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.302 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.293 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.307 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.315 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.295 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.310 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.292 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.319 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.320 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.326 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.327 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.328 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.331 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.287 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.288 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.289 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.290 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.291 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.294 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.306 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.311 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.312 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2196
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2204
@.str.23.321 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.337 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.338 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.339 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.340 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2485
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2515
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2520
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2062
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2518
@.str.4.341 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.342 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.343 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.347 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.348 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.368 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3109 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3167, !srcloc !3170
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3217, !srcloc !3218
  ret void, !dbg !3219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3224, metadata !DIExpression()), !dbg !3225
  ret void, !dbg !3226
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3227 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %0, metadata !3238, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %1, metadata !3239, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %2, metadata !3240, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %3, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %0, metadata !3243, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %0, metadata !3244, metadata !DIExpression()), !dbg !3305
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3306
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3306
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3247, metadata !DIExpression()), !dbg !3307
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3308
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3249, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3250, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 0, metadata !3251, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 0, metadata !3252, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 -1, metadata !3253, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 0, metadata !3256, metadata !DIExpression()), !dbg !3305
  %12 = and i32 %2, 4, !dbg !3310
  %13 = icmp eq i32 %12, 0, !dbg !3311
  call void @llvm.dbg.value(metadata i1 %13, metadata !3257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3305
  %14 = lshr i32 %2, 3, !dbg !3312
  %15 = and i32 %14, 7, !dbg !3312
  %16 = add nuw nsw i32 %15, 1, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %16, metadata !3258, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %0, metadata !3260, metadata !DIExpression()), !dbg !3305
  %17 = ptrtoint i8* %0 to i32, !dbg !3314
  %18 = and i32 %17, 3, !dbg !3316
  %19 = icmp eq i32 %18, 0, !dbg !3316
  br i1 %19, label %20, label %320, !dbg !3317

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3318
  call void @llvm.dbg.value(metadata i8* %21, metadata !3244, metadata !DIExpression()), !dbg !3305
  %22 = icmp eq i8* %0, null, !dbg !3319
  %23 = and i32 %1, 7, !dbg !3321
  %24 = sub nuw nsw i32 8, %23, !dbg !3321
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3321
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3321
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3321
  call void @llvm.dbg.value(metadata i32 %27, metadata !3239, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %26, metadata !3244, metadata !DIExpression()), !dbg !3305
  br i1 %22, label %33, label %28, !dbg !3322

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3324
  %30 = sub i32 4, %17, !dbg !3324
  %31 = add i32 %30, %29, !dbg !3325
  %32 = icmp ugt i32 %31, %27, !dbg !3326
  br i1 %32, label %320, label %33, !dbg !3327

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3328
  call void @llvm.dbg.value(metadata i8* %34, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %3, metadata !3255, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 4, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 4, metadata !3245, metadata !DIExpression()), !dbg !3305
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3329

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %42, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %43, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %44, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %45, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %72, metadata !3253, metadata !DIExpression()), !dbg !3305
  br i1 %46, label %73, label %47, !dbg !3330

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3331
  %49 = zext i1 %48 to i32, !dbg !3335
  %50 = add nsw i32 %72, %49, !dbg !3335
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3335
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %52, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %51, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %50, metadata !3253, metadata !DIExpression()), !dbg !3305
  br label %53, !dbg !3336

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %40, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %58, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %57, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %56, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %54, metadata !3253, metadata !DIExpression()), !dbg !3305
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3337
  call void @llvm.dbg.value(metadata i8* %60, metadata !3241, metadata !DIExpression()), !dbg !3305
  %61 = load i8, i8* %60, align 1, !dbg !3339
  %62 = icmp eq i8 %61, 0, !dbg !3340
  br i1 %62, label %226, label %63, !dbg !3341, !llvm.loop !3342

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3330

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3345

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3256, metadata !DIExpression()), !dbg !3305
  %75 = add nsw i32 %72, -1, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %75, metadata !3253, metadata !DIExpression()), !dbg !3305
  br label %53, !dbg !3347

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3348

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 4, metadata !3245, metadata !DIExpression()), !dbg !3305
  br label %53, !dbg !3349

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 4, metadata !3245, metadata !DIExpression()), !dbg !3305
  br label %53, !dbg !3350

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3351
  %81 = icmp eq i8 %80, 108, !dbg !3353
  br i1 %81, label %82, label %109, !dbg !3354

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3355
  %84 = load i8, i8* %83, align 1, !dbg !3355
  %85 = icmp eq i8 %84, 108, !dbg !3358
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3359
  %89 = add i32 %88, 7, !dbg !3359
  %90 = and i32 %89, -8, !dbg !3359
  %91 = inttoptr i32 %90 to i8*, !dbg !3359
  %92 = inttoptr i32 %90 to double*, !dbg !3359
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3359
  %94 = load double, double* %92, align 8, !dbg !3359
  call void @llvm.dbg.value(metadata i8* %93, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 8, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 8, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata double %94, metadata !3273, metadata !DIExpression()), !dbg !3361
  %95 = ptrtoint i8* %43 to i32, !dbg !3362
  %96 = add i32 %95, 7, !dbg !3362
  %97 = and i32 %96, -8, !dbg !3362
  %98 = inttoptr i32 %97 to i8*, !dbg !3363
  call void @llvm.dbg.value(metadata i8* %98, metadata !3244, metadata !DIExpression()), !dbg !3305
  br i1 %22, label %104, label %99, !dbg !3364

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3365
  %101 = icmp ugt i32 %100, %196, !dbg !3369
  br i1 %101, label %320, label %102, !dbg !3370

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3371
  store double %94, double* %103, align 8, !dbg !3371
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %105, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3256, metadata !DIExpression()), !dbg !3305
  br label %53, !dbg !3375

107:                                              ; preds = %73, %73
  br label %109, !dbg !3376

108:                                              ; preds = %73
  br label %109, !dbg !3376

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3305
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3305
  call void @llvm.dbg.value(metadata i32 %113, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %112, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  %114 = ptrtoint i8* %43 to i32, !dbg !3376
  %115 = add i32 %114, -1, !dbg !3376
  %116 = add i32 %115, %112, !dbg !3376
  %117 = sub i32 0, %112, !dbg !3376
  %118 = and i32 %116, %117, !dbg !3376
  %119 = inttoptr i32 %118 to i8*, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %119, metadata !3244, metadata !DIExpression()), !dbg !3305
  br i1 %22, label %124, label %120, !dbg !3378

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3380
  %122 = add i32 %121, %118, !dbg !3381
  %123 = icmp ugt i32 %122, %196, !dbg !3382
  br i1 %123, label %320, label %124, !dbg !3383

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3384

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3377
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3385
  call void @llvm.dbg.value(metadata i8* %127, metadata !3242, metadata !DIExpression()), !dbg !3305
  %128 = bitcast i8* %41 to i8**, !dbg !3385
  %129 = load i8*, i8** %128, align 4, !dbg !3385
  call void @llvm.dbg.value(metadata i8* %129, metadata !3255, metadata !DIExpression()), !dbg !3305
  br label %130, !dbg !3386

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3305
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3387
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3305
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3388
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3305
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3305
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3305
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3305
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3305
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3305
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3389
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %142, metadata !3239, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %141, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %140, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %139, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %138, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %137, metadata !3250, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %136, metadata !3258, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %135, metadata !3251, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %133, metadata !3255, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %132, metadata !3253, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %131, metadata !3252, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.label(metadata !3304), !dbg !3391
  br i1 %22, label %146, label %144, !dbg !3392

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3393
  store i8* %133, i8** %145, align 4, !dbg !3396
  br label %146, !dbg !3397

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3398
  call void @llvm.dbg.value(metadata i32 %147, metadata !3258, metadata !DIExpression()), !dbg !3305
  %148 = icmp sgt i32 %136, 0, !dbg !3399
  br i1 %148, label %152, label %149, !dbg !3400

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3401
  %151 = zext i1 %150 to i32, !dbg !3401
  br label %152, !dbg !3400

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3400
  %154 = icmp eq i32 %153, 0, !dbg !3400
  call void @llvm.dbg.value(metadata i1 %154, metadata !3282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3402
  call void @llvm.dbg.value(metadata i1 %36, metadata !3285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3402
  %155 = or i1 %36, %154, !dbg !3403
  br i1 %155, label %156, label %192, !dbg !3403

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3404
  %158 = sub i32 %157, %17, !dbg !3404
  %159 = lshr i32 %158, 2, !dbg !3405
  call void @llvm.dbg.value(metadata i32 %159, metadata !3286, metadata !DIExpression()), !dbg !3406
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3407
  br i1 %161, label %162, label %163, !dbg !3407

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3409
  unreachable, !dbg !3409

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3414
  br i1 %164, label %165, label %166, !dbg !3416

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3417
  unreachable, !dbg !3417

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3422

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3423
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3426
  store i8 %168, i8* %169, align 1, !dbg !3427
  %170 = trunc i32 %132 to i8, !dbg !3428
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3429
  store i8 %170, i8* %171, align 1, !dbg !3430
  br i1 %154, label %175, label %172, !dbg !3431

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3432
  store i8 %173, i8* %169, align 1, !dbg !3432
  %174 = add i32 %131, 1, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %174, metadata !3252, metadata !DIExpression()), !dbg !3305
  br label %187, !dbg !3436

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %176, metadata !3251, metadata !DIExpression()), !dbg !3305
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3439

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %179, metadata !3239, metadata !DIExpression()), !dbg !3305
  br label %187, !dbg !3443

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3444

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %182, metadata !3239, metadata !DIExpression()), !dbg !3305
  br label %187, !dbg !3448

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3449
  %185 = add i32 %142, 2, !dbg !3451
  %186 = add i32 %185, %184, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %186, metadata !3239, metadata !DIExpression()), !dbg !3305
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3305
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3305
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3305
  call void @llvm.dbg.value(metadata i32 %190, metadata !3239, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %189, metadata !3251, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %188, metadata !3252, metadata !DIExpression()), !dbg !3305
  %191 = add nuw nsw i32 %137, 1, !dbg !3453
  call void @llvm.dbg.value(metadata i32 %191, metadata !3250, metadata !DIExpression()), !dbg !3305
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3305
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3388
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3305
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3389
  call void @llvm.dbg.value(metadata i32 %196, metadata !3239, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %195, metadata !3250, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %194, metadata !3251, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %193, metadata !3252, metadata !DIExpression()), !dbg !3305
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3454
  call void @llvm.dbg.value(metadata i8* %197, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %143, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %141, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %139, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %138, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %132, metadata !3253, metadata !DIExpression()), !dbg !3305
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3337
  call void @llvm.dbg.value(metadata i8* %198, metadata !3241, metadata !DIExpression()), !dbg !3305
  %199 = load i8, i8* %198, align 1, !dbg !3339
  %200 = icmp eq i8 %199, 0, !dbg !3340
  br i1 %200, label %226, label %63, !dbg !3341

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3455

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %203, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 undef, metadata !3289, metadata !DIExpression()), !dbg !3457
  br i1 %22, label %219, label %204, !dbg !3458

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3456
  %206 = load i32, i32* %205, align 4, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %206, metadata !3289, metadata !DIExpression()), !dbg !3457
  %207 = inttoptr i32 %118 to i32*, !dbg !3459
  store i32 %206, i32* %207, align 4, !dbg !3462
  br label %219, !dbg !3463

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3464
  %210 = add i32 %209, 7, !dbg !3464
  %211 = and i32 %210, -8, !dbg !3464
  %212 = inttoptr i32 %211 to i8*, !dbg !3464
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3464
  call void @llvm.dbg.value(metadata i8* %213, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i64 undef, metadata !3295, metadata !DIExpression()), !dbg !3465
  br i1 %22, label %219, label %214, !dbg !3466

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3464
  %216 = load i64, i64* %215, align 8, !dbg !3464
  call void @llvm.dbg.value(metadata i64 %216, metadata !3295, metadata !DIExpression()), !dbg !3465
  %217 = inttoptr i32 %118 to i64*, !dbg !3467
  store i64 %216, i64* %217, align 8, !dbg !3472
  br label %219, !dbg !3473

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3474
  unreachable, !dbg !3474

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3479
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3479
  call void @llvm.dbg.value(metadata i8* %221, metadata !3242, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %40, metadata !3241, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %222, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %113, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %112, metadata !3246, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3259, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8 poison, metadata !3256, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %72, metadata !3253, metadata !DIExpression()), !dbg !3305
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3337
  call void @llvm.dbg.value(metadata i8* %223, metadata !3241, metadata !DIExpression()), !dbg !3305
  %224 = load i8, i8* %223, align 1, !dbg !3339
  %225 = icmp eq i8 %224, 0, !dbg !3340
  br i1 %225, label %226, label %38, !dbg !3341

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3480
  %228 = ptrtoint i8* %227 to i32, !dbg !3481
  %229 = sub i32 %228, %17, !dbg !3481
  %230 = lshr i32 %229, 2, !dbg !3483
  %231 = icmp ugt i32 %229, 1023, !dbg !3484
  br i1 %231, label %232, label %233, !dbg !3485

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3486
  unreachable, !dbg !3486

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3491

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3492
  %236 = add i32 %235, %229, !dbg !3495
  br label %320, !dbg !3496

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3497
  store i8 %238, i8* %0, align 1, !dbg !3498
  %239 = trunc i32 %194 to i8, !dbg !3499
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3501
  store i8 %240, i8* %242, align 1, !dbg !3503
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3504
  store i8 %241, i8* %243, align 1, !dbg !3505
  %244 = trunc i32 %193 to i8, !dbg !3506
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3507
  store i8 %244, i8* %245, align 1, !dbg !3508
  %246 = icmp eq i32 %193, 0, !dbg !3509
  %247 = xor i1 %246, true, !dbg !3510
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3510
  call void @llvm.dbg.value(metadata i8* %227, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 0, metadata !3254, metadata !DIExpression()), !dbg !3305
  br i1 %249, label %250, label %269, !dbg !3510

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3511

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %254, metadata !3254, metadata !DIExpression()), !dbg !3305
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3512
  %256 = load i8, i8* %255, align 1, !dbg !3512
  %257 = icmp sgt i8 %256, -1, !dbg !3514
  br i1 %257, label %265, label %258, !dbg !3515

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3298, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3516
  %259 = ptrtoint i8* %253 to i32, !dbg !3517
  %260 = add i32 %251, %259, !dbg !3519
  %261 = icmp ugt i32 %260, %196, !dbg !3520
  br i1 %261, label %320, label %262, !dbg !3521

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3522
  call void @llvm.dbg.value(metadata i8 %263, metadata !3298, metadata !DIExpression()), !dbg !3516
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3523
  call void @llvm.dbg.value(metadata i8* %264, metadata !3244, metadata !DIExpression()), !dbg !3305
  store i8 %263, i8* %253, align 1, !dbg !3524
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3454
  call void @llvm.dbg.value(metadata i8* %266, metadata !3244, metadata !DIExpression()), !dbg !3305
  %267 = add nuw i32 %254, 1, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %267, metadata !3254, metadata !DIExpression()), !dbg !3305
  %268 = icmp eq i32 %267, %195, !dbg !3526
  br i1 %268, label %269, label %252, !dbg !3511, !llvm.loop !3527

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3454
  call void @llvm.dbg.value(metadata i8* %270, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 0, metadata !3254, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %133, metadata !3255, metadata !DIExpression()), !dbg !3305
  %271 = icmp eq i32 %195, 0, !dbg !3529
  br i1 %271, label %316, label %272, !dbg !3532

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3532

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %276, metadata !3255, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %277, metadata !3254, metadata !DIExpression()), !dbg !3305
  br i1 %246, label %282, label %278, !dbg !3533

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3536
  %280 = load i8, i8* %279, align 1, !dbg !3536
  %281 = icmp sgt i8 %280, -1, !dbg !3537
  br i1 %281, label %282, label %311, !dbg !3538

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3539

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3245, metadata !DIExpression()), !dbg !3305
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3540
  %285 = load i8, i8* %284, align 1, !dbg !3540
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %286, metadata !3244, metadata !DIExpression()), !dbg !3305
  store i8 %285, i8* %275, align 1, !dbg !3544
  br label %297, !dbg !3545

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3546
  %289 = load i8, i8* %288, align 1, !dbg !3546
  %290 = zext i8 %289 to i32, !dbg !3546
  %291 = shl nuw nsw i32 %290, 2, !dbg !3548
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3549
  %293 = bitcast i8* %292 to i8**, !dbg !3550
  %294 = load i8*, i8** %293, align 4, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %294, metadata !3255, metadata !DIExpression()), !dbg !3305
  store i8* null, i8** %293, align 4, !dbg !3551
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3552
  %296 = add i32 %295, 1, !dbg !3553
  call void @llvm.dbg.value(metadata i32 %296, metadata !3245, metadata !DIExpression()), !dbg !3305
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3305
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3554
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3305
  call void @llvm.dbg.value(metadata i8* %300, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 %299, metadata !3245, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %298, metadata !3255, metadata !DIExpression()), !dbg !3305
  %301 = ptrtoint i8* %300 to i32, !dbg !3555
  %302 = add i32 %273, %299, !dbg !3557
  %303 = add i32 %302, %301, !dbg !3558
  %304 = icmp ugt i32 %303, %196, !dbg !3559
  br i1 %304, label %320, label %305, !dbg !3560

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3561
  %307 = load i8, i8* %306, align 1, !dbg !3561
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3562
  call void @llvm.dbg.value(metadata i8* %308, metadata !3244, metadata !DIExpression()), !dbg !3305
  store i8 %307, i8* %300, align 1, !dbg !3563
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3564
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %310, metadata !3244, metadata !DIExpression()), !dbg !3305
  br label %311, !dbg !3566

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3567
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3305
  call void @llvm.dbg.value(metadata i8* %313, metadata !3244, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %312, metadata !3255, metadata !DIExpression()), !dbg !3305
  %314 = add nuw i32 %277, 1, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %314, metadata !3254, metadata !DIExpression()), !dbg !3305
  %315 = icmp eq i32 %314, %195, !dbg !3529
  br i1 %315, label %316, label %274, !dbg !3532, !llvm.loop !3569

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3454
  %318 = ptrtoint i8* %317 to i32, !dbg !3571
  %319 = sub i32 %318, %17, !dbg !3571
  br label %320, !dbg !3572

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3573
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3573
  ret i32 %321, !dbg !3573
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3578, metadata !DIExpression()), !dbg !3579
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3580
  ret i1 %2, !dbg !3581
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3585, metadata !DIExpression()), !dbg !3586
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3587
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3588
  %4 = and i1 %2, %3, !dbg !3588
  ret i1 %4, !dbg !3589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3590 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3594, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 %1, metadata !3595, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 %2, metadata !3596, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i8* %3, metadata !3597, metadata !DIExpression()), !dbg !3600
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3601
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3598, metadata !DIExpression()), !dbg !3602
  call void @llvm.va_start(i8* nonnull %6), !dbg !3603
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3604
  %8 = load i32, i32* %7, align 4, !dbg !3604
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3604
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %10, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.va_end(i8* nonnull %6), !dbg !3605
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3606
  ret i32 %10, !dbg !3607
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3608 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3620, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3621, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %2, metadata !3622, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %3, metadata !3623, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %3, metadata !3624, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %3, metadata !3625, metadata !DIExpression()), !dbg !3639
  %5 = icmp eq i8* %3, null, !dbg !3640
  br i1 %5, label %45, label %6, !dbg !3642

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3634, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3639
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3643
  %8 = load i8, i8* %7, align 1, !dbg !3643
  %9 = zext i8 %8 to i32, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %9, metadata !3635, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8 undef, metadata !3636, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata i8 undef, metadata !3637, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata i32 0, metadata !3633, metadata !DIExpression()), !dbg !3639
  %10 = icmp eq i8 %8, 0, !dbg !3645
  br i1 %10, label %39, label %11, !dbg !3648

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3649
  call void @llvm.dbg.value(metadata i8 %12, metadata !3634, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %13 = zext i8 %12 to i32, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %13, metadata !3634, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %14 = shl nuw nsw i32 %13, 2, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %14, metadata !3634, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3652
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3653
  %17 = load i8, i8* %16, align 1, !dbg !3653
  call void @llvm.dbg.value(metadata i8 %17, metadata !3636, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %18 = zext i8 %17 to i32, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %18, metadata !3636, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3655
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3656
  %21 = load i8, i8* %20, align 1, !dbg !3656
  call void @llvm.dbg.value(metadata i8 %21, metadata !3637, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %22 = zext i8 %21 to i32, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %22, metadata !3637, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %23 = shl nuw nsw i32 %22, 1, !dbg !3658
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3639
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3659
  call void @llvm.dbg.value(metadata i8* %24, metadata !3631, metadata !DIExpression()), !dbg !3639
  br label %25, !dbg !3648

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3631, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i32 %27, metadata !3633, metadata !DIExpression()), !dbg !3639
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3660
  call void @llvm.dbg.value(metadata i8* %28, metadata !3631, metadata !DIExpression()), !dbg !3639
  %29 = load i8, i8* %26, align 1, !dbg !3662
  %30 = zext i8 %29 to i32, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %30, metadata !3638, metadata !DIExpression()), !dbg !3639
  %31 = shl nuw nsw i32 %30, 2, !dbg !3663
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3664
  %33 = bitcast i8* %32 to i8**, !dbg !3665
  call void @llvm.dbg.value(metadata i8** %33, metadata !3632, metadata !DIExpression()), !dbg !3639
  store i8* %28, i8** %33, align 4, !dbg !3666
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3667
  %35 = add i32 %34, 1, !dbg !3668
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3669
  call void @llvm.dbg.value(metadata i8* %36, metadata !3631, metadata !DIExpression()), !dbg !3639
  %37 = add nuw nsw i32 %27, 1, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %37, metadata !3633, metadata !DIExpression()), !dbg !3639
  %38 = icmp eq i32 %37, %9, !dbg !3645
  br i1 %38, label %39, label %25, !dbg !3648, !llvm.loop !3671

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3673
  call void @llvm.dbg.value(metadata i8* %40, metadata !3624, metadata !DIExpression()), !dbg !3639
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3674
  %42 = bitcast i8* %41 to i8**, !dbg !3674
  %43 = load i8*, i8** %42, align 1, !dbg !3674
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3675
  br label %45, !dbg !3676

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3639
  ret i32 %46, !dbg !3677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3678 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3682, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3683, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i8* %2, metadata !3684, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i8* %3, metadata !3685, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i8* %4, metadata !3686, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i8* %4, metadata !3687, metadata !DIExpression()), !dbg !3692
  %6 = ptrtoint i8* %4 to i32, !dbg !3693
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3693
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3693
  ret i32 %8, !dbg !3694
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3699, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 %1, metadata !3700, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8 0, metadata !3702, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 0, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8 poison, metadata !3702, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8* %0, metadata !3699, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3704
  %3 = load i8, i8* %0, align 1, !dbg !3705
  call void @llvm.dbg.value(metadata i8 %3, metadata !3701, metadata !DIExpression()), !dbg !3704
  %4 = icmp eq i8 %3, 0, !dbg !3706
  br i1 %4, label %29, label %5, !dbg !3707

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %8, metadata !3703, metadata !DIExpression()), !dbg !3704
  br i1 %9, label %11, label %22, !dbg !3709

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3711
  br i1 %12, label %13, label %17, !dbg !3715

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3716
  br i1 %14, label %29, label %15, !dbg !3719

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3720
  br i1 %16, label %29, label %22, !dbg !3722

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3723
  %19 = xor i1 %18, true, !dbg !3725
  %20 = zext i1 %18 to i32, !dbg !3725
  %21 = add nsw i32 %8, %20, !dbg !3725
  br label %22, !dbg !3725

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3704
  call void @llvm.dbg.value(metadata i32 %24, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8 poison, metadata !3702, metadata !DIExpression()), !dbg !3704
  %25 = icmp eq i8 %6, 37, !dbg !3726
  %26 = xor i1 %25, %23, !dbg !3728
  call void @llvm.dbg.value(metadata i8* %10, metadata !3699, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8* %10, metadata !3699, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3704
  %27 = load i8, i8* %10, align 1, !dbg !3705
  call void @llvm.dbg.value(metadata i8 %27, metadata !3701, metadata !DIExpression()), !dbg !3704
  %28 = icmp eq i8 %27, 0, !dbg !3706
  br i1 %28, label %29, label %5, !dbg !3707, !llvm.loop !3729

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3704
  ret i1 %30, !dbg !3731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3732 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3736, metadata !DIExpression()), !dbg !3737
  %2 = add i8 %0, -64, !dbg !3738
  %3 = icmp ult i8 %2, 59, !dbg !3738
  ret i1 %3, !dbg !3739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3740 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3748, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %1, metadata !3749, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3750, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %3, metadata !3751, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %4, metadata !3752, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i16* %5, metadata !3753, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %6, metadata !3754, metadata !DIExpression()), !dbg !3817
  %11 = icmp eq i8* %0, null, !dbg !3818
  br i1 %11, label %12, label %13, !dbg !3821

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3822
  unreachable, !dbg !3822

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3755, metadata !DIExpression()), !dbg !3817
  %14 = bitcast i8* %0 to i32*, !dbg !3824
  call void @llvm.dbg.value(metadata i32* %14, metadata !3756, metadata !DIExpression()), !dbg !3817
  %15 = and i32 %4, 8, !dbg !3825
  %16 = icmp eq i32 %15, 0, !dbg !3826
  call void @llvm.dbg.value(metadata i1 %16, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %0, metadata !3763, metadata !DIExpression()), !dbg !3817
  %17 = icmp eq i32 %1, 0, !dbg !3827
  br i1 %17, label %18, label %20, !dbg !3828

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3829
  br label %20, !dbg !3828

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3828
  call void @llvm.dbg.value(metadata i32 %21, metadata !3749, metadata !DIExpression()), !dbg !3817
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3830
  %23 = load i8, i8* %22, align 1, !dbg !3830
  %24 = zext i8 %23 to i32, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %24, metadata !3758, metadata !DIExpression()), !dbg !3817
  %25 = icmp ne i8 %23, 0, !dbg !3832
  %26 = and i32 %4, 1, !dbg !3833
  %27 = icmp ne i32 %26, 0, !dbg !3833
  %28 = and i1 %27, %25, !dbg !3833
  call void @llvm.dbg.value(metadata i1 %28, metadata !3762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3817
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3834
  %30 = load i8, i8* %29, align 1, !dbg !3834
  %31 = zext i8 %30 to i32, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %31, metadata !3759, metadata !DIExpression()), !dbg !3817
  %32 = icmp ne i8 %30, 0, !dbg !3836
  %33 = and i32 %4, 2, !dbg !3837
  %34 = icmp ne i32 %33, 0, !dbg !3837
  %35 = and i1 %34, %32, !dbg !3837
  call void @llvm.dbg.value(metadata i1 %35, metadata !3761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3817
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3838
  br i1 %36, label %41, label %37, !dbg !3838

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3840
  br i1 %38, label %287, label %39, !dbg !3843

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3844
  br label %287, !dbg !3846

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3847
  %43 = zext i8 %42 to i32, !dbg !3848
  %44 = shl nuw nsw i32 %43, 2, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %44, metadata !3757, metadata !DIExpression()), !dbg !3817
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3850
  %46 = bitcast i8* %45 to i8**, !dbg !3851
  %47 = load i8*, i8** %46, align 4, !dbg !3851
  call void @llvm.dbg.value(metadata i8* %47, metadata !3766, metadata !DIExpression()), !dbg !3817
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3852
  call void @llvm.dbg.value(metadata i8* %48, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3768, metadata !DIExpression()), !dbg !3817
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3853
  br i1 %49, label %50, label %135, !dbg !3854

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3765, metadata !DIExpression()), !dbg !3817
  br i1 %28, label %51, label %76, !dbg !3855

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %48, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3768, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3769, metadata !DIExpression()), !dbg !3856
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3857

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %55, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %56, metadata !3768, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %57, metadata !3769, metadata !DIExpression()), !dbg !3856
  %58 = load i8, i8* %55, align 1, !dbg !3858
  %59 = zext i8 %58 to i32, !dbg !3859
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3859
  %61 = bitcast i32* %60 to i8**, !dbg !3860
  %62 = load i8*, i8** %61, align 4, !dbg !3860
  call void @llvm.dbg.value(metadata i8* %62, metadata !3775, metadata !DIExpression()), !dbg !3861
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %63, metadata !3778, metadata !DIExpression()), !dbg !3861
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3863
  br i1 %65, label %66, label %70, !dbg !3863

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3865
  %68 = add nuw i32 %56, 1, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %68, metadata !3768, metadata !DIExpression()), !dbg !3817
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3868
  store i16 %67, i16* %69, align 2, !dbg !3869
  br label %70, !dbg !3870

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3817
  call void @llvm.dbg.value(metadata i32 %71, metadata !3768, metadata !DIExpression()), !dbg !3817
  %72 = add nsw i32 %63, %54, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %72, metadata !3765, metadata !DIExpression()), !dbg !3817
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3872
  call void @llvm.dbg.value(metadata i8* %73, metadata !3767, metadata !DIExpression()), !dbg !3817
  %74 = add nuw nsw i32 %57, 1, !dbg !3873
  call void @llvm.dbg.value(metadata i32 %74, metadata !3769, metadata !DIExpression()), !dbg !3856
  %75 = icmp eq i32 %74, %24, !dbg !3874
  br i1 %75, label %82, label %53, !dbg !3857, !llvm.loop !3875

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3877
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3877
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3877
  br label %82, !dbg !3877

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3880
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3817
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3881
  call void @llvm.dbg.value(metadata i1 undef, metadata !3779, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3882
  call void @llvm.dbg.value(metadata i32 0, metadata !3780, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %85, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %84, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %83, metadata !3768, metadata !DIExpression()), !dbg !3817
  %86 = icmp eq i8 %30, 0, !dbg !3884
  br i1 %86, label %287, label %87, !dbg !3885

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3886
  %89 = icmp eq i32 %88, 0, !dbg !3887
  call void @llvm.dbg.value(metadata i1 %89, metadata !3779, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3882
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3885

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8* %96, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %97, metadata !3768, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %98, metadata !3780, metadata !DIExpression()), !dbg !3883
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3888
  call void @llvm.dbg.value(metadata i8* %99, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 undef, metadata !3782, metadata !DIExpression()), !dbg !3889
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %100, metadata !3767, metadata !DIExpression()), !dbg !3817
  %101 = load i8, i8* %99, align 1, !dbg !3891
  call void @llvm.dbg.value(metadata i8 %101, metadata !3785, metadata !DIExpression()), !dbg !3889
  %102 = zext i8 %101 to i32, !dbg !3892
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3892
  %104 = bitcast i32* %103 to i8**, !dbg !3893
  %105 = load i8*, i8** %104, align 4, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %105, metadata !3786, metadata !DIExpression()), !dbg !3889
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3894
  call void @llvm.dbg.value(metadata i1 %106, metadata !3787, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3889
  br i1 %16, label %113, label %107, !dbg !3895

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3897
  call void @llvm.dbg.value(metadata i8 %108, metadata !3782, metadata !DIExpression()), !dbg !3889
  %109 = zext i8 %108 to i32, !dbg !3898
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3899
  br i1 %110, label %111, label %113, !dbg !3900

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3901
  %112 = add nsw i32 %95, -2, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %112, metadata !3765, metadata !DIExpression()), !dbg !3817
  br label %130, !dbg !3908

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3909

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3910

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %116, metadata !3765, metadata !DIExpression()), !dbg !3817
  br label %130, !dbg !3915

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3916

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3813), !dbg !3917
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %119, metadata !3788, metadata !DIExpression()), !dbg !3889
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3919
  br i1 %121, label %122, label %126, !dbg !3919

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3921
  %124 = add nuw i32 %97, 1, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %124, metadata !3768, metadata !DIExpression()), !dbg !3817
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3924
  store i16 %123, i16* %125, align 2, !dbg !3925
  br label %126, !dbg !3926

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3817
  call void @llvm.dbg.value(metadata i32 %127, metadata !3768, metadata !DIExpression()), !dbg !3817
  %128 = add i32 %95, -1, !dbg !3927
  %129 = add i32 %128, %119, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %129, metadata !3765, metadata !DIExpression()), !dbg !3817
  br label %130, !dbg !3929

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3817
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3889
  call void @llvm.dbg.value(metadata i32 %132, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %131, metadata !3768, metadata !DIExpression()), !dbg !3817
  %133 = add nuw nsw i32 %98, 1, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %100, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %133, metadata !3780, metadata !DIExpression()), !dbg !3883
  %134 = icmp eq i32 %133, %31, !dbg !3884
  br i1 %134, label %287, label %94, !dbg !3885, !llvm.loop !3931

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3790, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3791, metadata !DIExpression()), !dbg !3934
  br i1 %28, label %136, label %138, !dbg !3935

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3792, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 0, metadata !3793, metadata !DIExpression()), !dbg !3817
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %137, metadata !3794, metadata !DIExpression()), !dbg !3817
  br label %143, !dbg !3939

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3940
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3940

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3794, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 undef, metadata !3793, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 0, metadata !3792, metadata !DIExpression()), !dbg !3817
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3942
  br label %148, !dbg !3945

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %151, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3796, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata i8 %149, metadata !3793, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 %150, metadata !3792, metadata !DIExpression()), !dbg !3817
  %152 = icmp eq i8 %30, 0, !dbg !3948
  br i1 %152, label %153, label %155, !dbg !3949

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3950
  br label %160, !dbg !3949

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3949

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3950
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3951
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3952
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3817
  call void @llvm.dbg.value(metadata i8 undef, metadata !3789, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3817
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3953
  %166 = load i8, i8* %165, align 1, !dbg !3953
  %167 = zext i8 %162 to i32, !dbg !3954
  %168 = add i8 %166, %162, !dbg !3955
  call void @llvm.dbg.value(metadata i8 %168, metadata !3789, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3817
  %169 = icmp eq i32 %33, 0, !dbg !3956
  %170 = lshr i8 %163, 1, !dbg !3957
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3957
  call void @llvm.dbg.value(metadata i8 %171, metadata !3789, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3817
  %172 = icmp eq i32 %26, 0, !dbg !3958
  %173 = icmp eq i32 %161, 0, !dbg !3950
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3950
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3950
  call void @llvm.dbg.value(metadata i8 %175, metadata !3789, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3817
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3804, metadata !DIExpression()), !dbg !3959
  %176 = load i32, i32* %14, align 1, !dbg !3960
  store i8 %168, i8* %165, align 1, !dbg !3961
  store i8 %175, i8* %22, align 1, !dbg !3961
  store i8 %171, i8* %29, align 1, !dbg !3961
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %177, metadata !3795, metadata !DIExpression()), !dbg !3817
  %178 = icmp slt i32 %177, 0, !dbg !3963
  br i1 %178, label %287, label %240, !dbg !3965

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %181, metadata !3796, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata i8 %182, metadata !3793, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 %183, metadata !3792, metadata !DIExpression()), !dbg !3817
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3966
  call void @llvm.dbg.value(metadata i8* %184, metadata !3767, metadata !DIExpression()), !dbg !3817
  %185 = load i8, i8* %180, align 1, !dbg !3967
  call void @llvm.dbg.value(metadata i8 %185, metadata !3798, metadata !DIExpression()), !dbg !3968
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %186, metadata !3767, metadata !DIExpression()), !dbg !3817
  %187 = load i8, i8* %184, align 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8 %187, metadata !3801, metadata !DIExpression()), !dbg !3968
  %188 = zext i8 %187 to i32, !dbg !3971
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3971
  %190 = bitcast i32* %189 to i8**, !dbg !3972
  %191 = load i8*, i8** %190, align 4, !dbg !3972
  call void @llvm.dbg.value(metadata i8* %191, metadata !3802, metadata !DIExpression()), !dbg !3968
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3973
  call void @llvm.dbg.value(metadata i1 %192, metadata !3803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3968
  br i1 %16, label %196, label %193, !dbg !3974

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3976
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3977
  br i1 %195, label %235, label %196, !dbg !3978

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3979

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3980

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3983
  br i1 %199, label %201, label %200, !dbg !3988

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3989
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3989
  unreachable, !dbg !3989

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3983
  %203 = add nuw nsw i8 %183, 1, !dbg !3991
  call void @llvm.dbg.value(metadata i8 %203, metadata !3792, metadata !DIExpression()), !dbg !3817
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3992
  br label %231, !dbg !3993

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3994

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3995
  br i1 %207, label %209, label %208, !dbg !4000

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4001
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4001
  unreachable, !dbg !4001

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3995
  %211 = add nuw nsw i8 %182, 1, !dbg !4003
  call void @llvm.dbg.value(metadata i8 %211, metadata !3793, metadata !DIExpression()), !dbg !3817
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4004
  br label %231, !dbg !4005

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4006

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4008
  br i1 %215, label %217, label %216, !dbg !4013

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4014
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4014
  unreachable, !dbg !4014

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4008
  %219 = add nuw nsw i8 %183, 1, !dbg !4016
  call void @llvm.dbg.value(metadata i8 %219, metadata !3792, metadata !DIExpression()), !dbg !3817
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4017
  br label %231, !dbg !4018

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4019
  br i1 %222, label %224, label %223, !dbg !4023

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4024
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4024
  unreachable, !dbg !4024

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4019
  %226 = add nuw nsw i8 %182, 1, !dbg !4026
  call void @llvm.dbg.value(metadata i8 %226, metadata !3793, metadata !DIExpression()), !dbg !3817
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4027
  store i8 %185, i8* %227, align 1, !dbg !4028
  %228 = add nuw nsw i8 %182, 2, !dbg !4029
  call void @llvm.dbg.value(metadata i8 %228, metadata !3793, metadata !DIExpression()), !dbg !3817
  %229 = zext i8 %226 to i32, !dbg !4030
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4030
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4031
  br label %235, !dbg !4032

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3817
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3952
  call void @llvm.dbg.value(metadata i8 %237, metadata !3793, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i8 %236, metadata !3792, metadata !DIExpression()), !dbg !3817
  %238 = add nuw nsw i32 %181, 1, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %186, metadata !3767, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %238, metadata !3796, metadata !DIExpression()), !dbg !3947
  %239 = icmp eq i32 %238, %31, !dbg !3948
  br i1 %239, label %160, label %179, !dbg !3949, !llvm.loop !4033

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %177, metadata !3765, metadata !DIExpression()), !dbg !3817
  store i32 %176, i32* %14, align 1, !dbg !4035
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4036
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %243, metadata !3795, metadata !DIExpression()), !dbg !3817
  %244 = icmp slt i32 %243, 0, !dbg !4038
  br i1 %244, label %287, label %245, !dbg !4040

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3765, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3817
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4041
  %248 = add nuw nsw i32 %44, %24, !dbg !4041
  %249 = sub i32 %247, %248, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %249, metadata !3805, metadata !DIExpression()), !dbg !3817
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %250, metadata !3795, metadata !DIExpression()), !dbg !3817
  %251 = icmp slt i32 %250, 0, !dbg !4043
  br i1 %251, label %287, label %252, !dbg !4045

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %253, metadata !3765, metadata !DIExpression()), !dbg !3817
  %254 = add nuw nsw i32 %253, %250, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %254, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3806, metadata !DIExpression()), !dbg !4048
  %255 = icmp eq i8 %162, 0, !dbg !4049
  br i1 %255, label %284, label %256, !dbg !4050

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4050

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3806, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %260, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4051
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4052
  %262 = load i8, i8* %261, align 1, !dbg !4052
  call void @llvm.dbg.value(metadata i8 %262, metadata !3808, metadata !DIExpression()), !dbg !4053
  store i8 %262, i8* %10, align 1, !dbg !4054
  %263 = zext i8 %262 to i32, !dbg !4055
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4055
  %265 = bitcast i32* %264 to i8**, !dbg !4056
  %266 = load i8*, i8** %265, align 4, !dbg !4056
  call void @llvm.dbg.value(metadata i8* %266, metadata !3811, metadata !DIExpression()), !dbg !4053
  br i1 %257, label %270, label %267, !dbg !4057

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4058
  %269 = load i16, i16* %268, align 2, !dbg !4058
  br label %270, !dbg !4057

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4057
  call void @llvm.dbg.value(metadata i32 undef, metadata !3812, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4053
  call void @llvm.dbg.value(metadata i8* %10, metadata !3808, metadata !DIExpression(DW_OP_deref)), !dbg !4053
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %272, metadata !3795, metadata !DIExpression()), !dbg !3817
  %273 = icmp slt i32 %272, 0, !dbg !4060
  br i1 %273, label %277, label %274, !dbg !4062

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3812, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3765, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3817
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %275, metadata !3795, metadata !DIExpression()), !dbg !3817
  %276 = icmp slt i32 %275, 0, !dbg !4064
  br i1 %276, label %277, label %279, !dbg !4066

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4067
  call void @llvm.dbg.value(metadata i32 undef, metadata !3765, metadata !DIExpression()), !dbg !3817
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %280, metadata !3765, metadata !DIExpression()), !dbg !3817
  %281 = add nsw i32 %280, %275, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %281, metadata !3765, metadata !DIExpression()), !dbg !3817
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4067
  %282 = add nuw nsw i32 %259, 1, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %282, metadata !3806, metadata !DIExpression()), !dbg !4048
  %283 = icmp eq i32 %282, %167, !dbg !4049
  br i1 %283, label %284, label %258, !dbg !4050, !llvm.loop !4071

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4047
  call void @llvm.dbg.value(metadata i32 %285, metadata !3765, metadata !DIExpression()), !dbg !3817
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4073
  br label %287, !dbg !4074

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3817
  ret i32 %288, !dbg !4075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4080, metadata !DIExpression()), !dbg !4088
  %2 = icmp eq i8* %0, null, !dbg !4089
  br i1 %2, label %3, label %4, !dbg !4092

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4093
  unreachable, !dbg !4093

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4081, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i8* %0, metadata !4082, metadata !DIExpression()), !dbg !4088
  %5 = load i8, i8* %0, align 1, !dbg !4095
  %6 = zext i8 %5 to i32, !dbg !4095
  %7 = shl nuw nsw i32 %6, 2, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %7, metadata !4083, metadata !DIExpression()), !dbg !4088
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4097
  %9 = load i8, i8* %8, align 1, !dbg !4097
  %10 = zext i8 %9 to i32, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %10, metadata !4084, metadata !DIExpression()), !dbg !4088
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4098
  %12 = load i8, i8* %11, align 1, !dbg !4098
  %13 = zext i8 %12 to i32, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %13, metadata !4085, metadata !DIExpression()), !dbg !4088
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4099
  call void @llvm.dbg.value(metadata i8* %14, metadata !4081, metadata !DIExpression()), !dbg !4088
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4100
  call void @llvm.dbg.value(metadata i8* %15, metadata !4081, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 0, metadata !4086, metadata !DIExpression()), !dbg !4101
  %16 = icmp eq i8 %9, 0, !dbg !4102
  br i1 %16, label %17, label %22, !dbg !4104

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4088
  %19 = ptrtoint i8* %18 to i32, !dbg !4105
  %20 = ptrtoint i8* %0 to i32, !dbg !4105
  %21 = sub i32 %19, %20, !dbg !4105
  ret i32 %21, !dbg !4106

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4086, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.value(metadata i8* %24, metadata !4081, metadata !DIExpression()), !dbg !4088
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4107
  call void @llvm.dbg.value(metadata i8* %25, metadata !4081, metadata !DIExpression()), !dbg !4088
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4109
  %27 = add i32 %26, 1, !dbg !4110
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4111
  call void @llvm.dbg.value(metadata i8* %28, metadata !4081, metadata !DIExpression()), !dbg !4088
  %29 = add nuw nsw i32 %23, 1, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %29, metadata !4086, metadata !DIExpression()), !dbg !4101
  %30 = icmp eq i32 %29, %10, !dbg !4102
  br i1 %30, label %17, label %22, !dbg !4104, !llvm.loop !4113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4115 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4119, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i8* %1, metadata !4120, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i8* %2, metadata !4121, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i16 %3, metadata !4122, metadata !DIExpression()), !dbg !4123
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4124
  br i1 %5, label %6, label %9, !dbg !4126

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4127
  %8 = add i32 %7, 1, !dbg !4129
  br label %20, !dbg !4130

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4131
  br i1 %10, label %13, label %11, !dbg !4132

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4132
  br label %16, !dbg !4132

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4133
  %15 = add i32 %14, 1, !dbg !4134
  br label %16, !dbg !4132

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4132
  %18 = and i32 %17, 65535, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %17, metadata !4122, metadata !DIExpression()), !dbg !4123
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4136
  br label %20, !dbg !4137

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4123
  ret i32 %21, !dbg !4138
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4141, metadata !DIExpression()), !dbg !4142
  ret i32 0, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4144 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4148, metadata !DIExpression()), !dbg !4149
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4150
  ret void, !dbg !4151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4152 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4153
  ret i8* %1, !dbg !4154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4166, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.value(metadata i8* %0, metadata !4165, metadata !DIExpression()), !dbg !4177
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4178
  ret void, !dbg !4180
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4185, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i8* %1, metadata !4186, metadata !DIExpression()), !dbg !4187
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4188
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4188
  ret i32 %4, !dbg !4189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4190 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4197, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4194, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %1, metadata !4195, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i8* %2, metadata !4196, metadata !DIExpression()), !dbg !4198
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4199
  ret void, !dbg !4200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4205, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %1, metadata !4206, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 0, metadata !4207, metadata !DIExpression()), !dbg !4208
  %3 = icmp eq i32 %1, 0, !dbg !4209
  br i1 %3, label %13, label %4, !dbg !4212

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4207, metadata !DIExpression()), !dbg !4208
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4213
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4215
  %8 = load i8, i8* %7, align 1, !dbg !4215
  %9 = zext i8 %8 to i32, !dbg !4215
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4213
  %11 = add nuw i32 %5, 1, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %11, metadata !4207, metadata !DIExpression()), !dbg !4208
  %12 = icmp eq i32 %11, %1, !dbg !4209
  br i1 %12, label %13, label %4, !dbg !4212, !llvm.loop !4217

13:                                               ; preds = %4, %2
  ret void, !dbg !4219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4220 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4224, metadata !DIExpression()), !dbg !4226
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4227
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4225, metadata !DIExpression()), !dbg !4228
  call void @llvm.va_start(i8* nonnull %3), !dbg !4229
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4230
  %5 = load i32, i32* %4, align 4, !dbg !4230
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4230
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4230
  call void @llvm.va_end(i8* nonnull %3), !dbg !4231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4232
  ret void, !dbg !4232
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4233 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4237, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %1, metadata !4238, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %2, metadata !4239, metadata !DIExpression()), !dbg !4242
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4243
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4243
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4240, metadata !DIExpression()), !dbg !4244
  call void @llvm.va_start(i8* nonnull %5), !dbg !4245
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4246
  %7 = load i32, i32* %6, align 4, !dbg !4246
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4246
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %9, metadata !4241, metadata !DIExpression()), !dbg !4242
  call void @llvm.va_end(i8* nonnull %5), !dbg !4247
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4248
  ret i32 %9, !dbg !4249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4250 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %0, metadata !4254, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %1, metadata !4255, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %2, metadata !4256, metadata !DIExpression()), !dbg !4264
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4265
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4265
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4258, metadata !DIExpression()), !dbg !4266
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4267
  store i8* %0, i8** %7, align 4, !dbg !4267
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4267
  store i32 %1, i32* %8, align 4, !dbg !4267
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4267
  store i32 0, i32* %9, align 4, !dbg !4267
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4268
  %10 = load i32, i32* %9, align 4, !dbg !4269
  %11 = load i32, i32* %8, align 4, !dbg !4271
  %12 = icmp slt i32 %10, %11, !dbg !4272
  br i1 %12, label %13, label %15, !dbg !4273

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4274
  store i8 0, i8* %14, align 1, !dbg !4276
  br label %15, !dbg !4277

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4278
  ret i32 %10, !dbg !4279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4285, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4286, metadata !DIExpression()), !dbg !4287
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4288
  %4 = load i8*, i8** %3, align 4, !dbg !4288
  %5 = icmp eq i8* %4, null, !dbg !4290
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4291
  br i1 %5, label %12, label %8, !dbg !4292

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4293
  %10 = load i32, i32* %9, align 4, !dbg !4293
  %11 = icmp slt i32 %7, %10, !dbg !4294
  br i1 %11, label %15, label %12, !dbg !4295

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4296
  %14 = add nsw i32 %7, 1, !dbg !4298
  store i32 %14, i32* %13, align 4, !dbg !4298
  br label %25, !dbg !4299

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4300
  %17 = icmp eq i32 %7, %16, !dbg !4302
  br i1 %17, label %18, label %21, !dbg !4303

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4304
  store i32 %19, i32* %6, align 4, !dbg !4304
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4306
  store i8 0, i8* %20, align 1, !dbg !4307
  br label %25, !dbg !4308

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4309
  %23 = add nsw i32 %7, 1, !dbg !4311
  store i32 %23, i32* %6, align 4, !dbg !4311
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4312
  store i8 %22, i8* %24, align 1, !dbg !4313
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4314
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4315 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4320, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i8* %1, metadata !4321, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i8* %2, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i8* %3, metadata !4323, metadata !DIExpression()), !dbg !4324
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4325
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4326
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4327
  unreachable, !dbg !4328
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4329 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4436
  ret %struct.k_thread* %1, !dbg !4437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4443, metadata !DIExpression()), !dbg !4444
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4445, !srcloc !4447
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4448
  ret void, !dbg !4449
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4450 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4451, !srcloc !4453
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4454
  ret %struct.k_thread* %1, !dbg !4455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4456 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4466, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %1, metadata !4467, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %2, metadata !4468, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %4, metadata !4470, metadata !DIExpression()), !dbg !4595
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4596
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4596
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4471, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i32 0, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i1 undef, metadata !4477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4595
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4598

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4598

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4599
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %30, metadata !4468, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %29, metadata !4475, metadata !DIExpression()), !dbg !4595
  %31 = load i8, i8* %30, align 1, !dbg !4600
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4598

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4600
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4601
  call void @llvm.dbg.value(metadata i8* %34, metadata !4468, metadata !DIExpression()), !dbg !4595
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %35, metadata !4479, metadata !DIExpression()), !dbg !4602
  %36 = icmp slt i32 %35, 0, !dbg !4603
  %37 = add i32 %29, 1, !dbg !4601
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %36, label %365, label %28, !llvm.loop !4605

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4607
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4484, metadata !DIExpression()), !dbg !4608
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4608
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4527, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4530, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %30, metadata !4533, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 -1, metadata !4534, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 -1, metadata !4535, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* null, metadata !4536, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %14, metadata !4537, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8 0, metadata !4538, metadata !DIExpression()), !dbg !4609
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %39, metadata !4468, metadata !DIExpression()), !dbg !4595
  %40 = load i24, i24* %15, align 8, !dbg !4611
  %41 = and i24 %40, 256, !dbg !4611
  %42 = icmp eq i24 %41, 0, !dbg !4611
  br i1 %42, label %51, label %43, !dbg !4613

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4614
  call void @llvm.dbg.value(metadata i8* %44, metadata !4469, metadata !DIExpression()), !dbg !4595
  %45 = bitcast i8* %27 to i32*, !dbg !4614
  %46 = load i32, i32* %45, align 4, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %46, metadata !4534, metadata !DIExpression()), !dbg !4609
  %47 = icmp slt i32 %46, 0, !dbg !4616
  br i1 %47, label %48, label %56, !dbg !4618

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4619
  store i24 %49, i24* %15, align 8, !dbg !4619
  %50 = sub nsw i32 0, %46, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %50, metadata !4534, metadata !DIExpression()), !dbg !4609
  br label %56, !dbg !4622

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4623
  %53 = icmp eq i24 %52, 0, !dbg !4623
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4625
  br label %56, !dbg !4625

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4626
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4609
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %58, metadata !4534, metadata !DIExpression()), !dbg !4609
  %60 = and i24 %57, 1024, !dbg !4626
  %61 = icmp eq i24 %60, 0, !dbg !4626
  br i1 %61, label %69, label %62, !dbg !4627

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %63, metadata !4469, metadata !DIExpression()), !dbg !4595
  %64 = bitcast i8* %59 to i32*, !dbg !4628
  %65 = load i32, i32* %64, align 4, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %65, metadata !4539, metadata !DIExpression()), !dbg !4629
  %66 = icmp slt i32 %65, 0, !dbg !4630
  br i1 %66, label %67, label %74, !dbg !4632

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4633
  store i24 %68, i24* %15, align 8, !dbg !4633
  br label %74, !dbg !4635

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4636
  %71 = icmp eq i24 %70, 0, !dbg !4636
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4638
  br label %74, !dbg !4638

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4639
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4609
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4609
  call void @llvm.dbg.value(metadata i8* %77, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %76, metadata !4535, metadata !DIExpression()), !dbg !4609
  store i32 0, i32* %16, align 4, !dbg !4640
  store i32 0, i32* %17, align 8, !dbg !4641
  %78 = lshr i24 %75, 16, !dbg !4639
  call void @llvm.dbg.value(metadata i24 %78, metadata !4542, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4609
  %79 = lshr i24 %75, 11, !dbg !4642
  %80 = and i24 %79, 15, !dbg !4642
  %81 = zext i24 %80 to i32, !dbg !4642
  call void @llvm.dbg.value(metadata i32 %81, metadata !4543, metadata !DIExpression()), !dbg !4609
  %82 = trunc i24 %78 to i3, !dbg !4643
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4643

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4644

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %85, metadata !4469, metadata !DIExpression()), !dbg !4595
  %86 = bitcast i8* %77 to i32*, !dbg !4647
  %87 = load i32, i32* %86, align 4, !dbg !4647
  %88 = sext i32 %87 to i64, !dbg !4647
  store i64 %88, i64* %20, align 8, !dbg !4649
  br label %115, !dbg !4650

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %90, metadata !4469, metadata !DIExpression()), !dbg !4595
  %91 = bitcast i8* %77 to i32*, !dbg !4651
  %92 = load i32, i32* %91, align 4, !dbg !4651
  %93 = sext i32 %92 to i64, !dbg !4651
  store i64 %93, i64* %20, align 8, !dbg !4654
  br label %115, !dbg !4655

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4656
  %96 = add i32 %95, 7, !dbg !4656
  %97 = and i32 %96, -8, !dbg !4656
  %98 = inttoptr i32 %97 to i8*, !dbg !4656
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %99, metadata !4469, metadata !DIExpression()), !dbg !4595
  %100 = inttoptr i32 %97 to i64*, !dbg !4656
  %101 = load i64, i64* %100, align 8, !dbg !4656
  store i64 %101, i64* %20, align 8, !dbg !4657
  br label %115, !dbg !4658

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4659
  %104 = add i32 %103, 7, !dbg !4659
  %105 = and i32 %104, -8, !dbg !4659
  %106 = inttoptr i32 %105 to i8*, !dbg !4659
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %107, metadata !4469, metadata !DIExpression()), !dbg !4595
  %108 = inttoptr i32 %105 to i64*, !dbg !4659
  %109 = load i64, i64* %108, align 8, !dbg !4659
  store i64 %109, i64* %20, align 8, !dbg !4660
  br label %115, !dbg !4661

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %111, metadata !4469, metadata !DIExpression()), !dbg !4595
  %112 = bitcast i8* %77 to i32*, !dbg !4662
  %113 = load i32, i32* %112, align 4, !dbg !4662
  %114 = sext i32 %113 to i64, !dbg !4663
  store i64 %114, i64* %20, align 8, !dbg !4664
  br label %115, !dbg !4665

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4666
  call void @llvm.dbg.value(metadata i8* %117, metadata !4469, metadata !DIExpression()), !dbg !4595
  %118 = trunc i24 %79 to i4, !dbg !4667
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4667

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4668
  %121 = ashr exact i64 %120, 56, !dbg !4668
  store i64 %121, i64* %20, align 8, !dbg !4671
  br label %177, !dbg !4672

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4673
  %124 = ashr exact i64 %123, 48, !dbg !4673
  store i64 %124, i64* %20, align 8, !dbg !4676
  br label %177, !dbg !4677

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4678

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4681
  call void @llvm.dbg.value(metadata i8* %127, metadata !4469, metadata !DIExpression()), !dbg !4595
  %128 = bitcast i8* %77 to i32*, !dbg !4681
  %129 = load i32, i32* %128, align 4, !dbg !4681
  %130 = zext i32 %129 to i64, !dbg !4681
  store i64 %130, i64* %20, align 8, !dbg !4683
  br label %157, !dbg !4684

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %132, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %132, metadata !4469, metadata !DIExpression()), !dbg !4595
  %133 = bitcast i8* %77 to i32*, !dbg !4685
  %134 = load i32, i32* %133, align 4, !dbg !4685
  %135 = zext i32 %134 to i64, !dbg !4685
  store i64 %135, i64* %20, align 8, !dbg !4685
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4687
  %138 = add i32 %137, 7, !dbg !4687
  %139 = and i32 %138, -8, !dbg !4687
  %140 = inttoptr i32 %139 to i8*, !dbg !4687
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %141, metadata !4469, metadata !DIExpression()), !dbg !4595
  %142 = inttoptr i32 %139 to i64*, !dbg !4687
  %143 = load i64, i64* %142, align 8, !dbg !4687
  store i64 %143, i64* %20, align 8, !dbg !4688
  br label %157, !dbg !4689

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4690
  %146 = add i32 %145, 7, !dbg !4690
  %147 = and i32 %146, -8, !dbg !4690
  %148 = inttoptr i32 %147 to i8*, !dbg !4690
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %149, metadata !4469, metadata !DIExpression()), !dbg !4595
  %150 = inttoptr i32 %147 to i64*, !dbg !4690
  %151 = load i64, i64* %150, align 8, !dbg !4690
  store i64 %151, i64* %20, align 8, !dbg !4691
  br label %157, !dbg !4692

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %153, metadata !4469, metadata !DIExpression()), !dbg !4595
  %154 = bitcast i8* %77 to i32*, !dbg !4693
  %155 = load i32, i32* %154, align 4, !dbg !4693
  %156 = zext i32 %155 to i64, !dbg !4694
  store i64 %156, i64* %20, align 8, !dbg !4695
  br label %157, !dbg !4696

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4697
  call void @llvm.dbg.value(metadata i8* %159, metadata !4469, metadata !DIExpression()), !dbg !4595
  %160 = trunc i24 %79 to i4, !dbg !4698
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4698

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4699
  store i64 %162, i64* %20, align 8, !dbg !4702
  br label %177, !dbg !4703

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4704
  store i64 %164, i64* %20, align 8, !dbg !4707
  br label %177, !dbg !4708

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4709
  %167 = add i32 %166, 7, !dbg !4709
  %168 = and i32 %167, -8, !dbg !4709
  %169 = inttoptr i32 %168 to i8*, !dbg !4709
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %170, metadata !4469, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %170, metadata !4469, metadata !DIExpression()), !dbg !4595
  %171 = inttoptr i32 %168 to double*, !dbg !4709
  %172 = load double, double* %171, align 8, !dbg !4709
  store double %172, double* %19, align 8, !dbg !4709
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4713
  call void @llvm.dbg.value(metadata i8* %174, metadata !4469, metadata !DIExpression()), !dbg !4595
  %175 = bitcast i8* %77 to i8**, !dbg !4713
  %176 = load i8*, i8** %175, align 4, !dbg !4713
  store i8* %176, i8** %18, align 8, !dbg !4716
  br label %177, !dbg !4717

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4609
  call void @llvm.dbg.value(metadata i8* %178, metadata !4469, metadata !DIExpression()), !dbg !4595
  %179 = and i24 %75, 3, !dbg !4718
  %180 = icmp eq i24 %179, 0, !dbg !4718
  br i1 %180, label %185, label %181, !dbg !4718

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %182, metadata !4544, metadata !DIExpression()), !dbg !4720
  %183 = icmp slt i32 %182, 0, !dbg !4721
  %184 = add i32 %182, %29, !dbg !4719
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4723
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4724

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %188, metadata !4548, metadata !DIExpression()), !dbg !4726
  %189 = icmp slt i32 %188, 0, !dbg !4727
  %190 = add i32 %29, 1, !dbg !4725
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %192, metadata !4536, metadata !DIExpression()), !dbg !4609
  %193 = icmp sgt i32 %76, -1, !dbg !4730
  br i1 %193, label %194, label %196, !dbg !4732

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %195, metadata !4551, metadata !DIExpression()), !dbg !4735
  br label %241, !dbg !4736

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %197, metadata !4551, metadata !DIExpression()), !dbg !4735
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4536, metadata !DIExpression()), !dbg !4609
  %199 = load i64, i64* %20, align 8, !dbg !4739
  %200 = trunc i64 %199 to i8, !dbg !4740
  store i8 %200, i8* %10, align 1, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %23, metadata !4537, metadata !DIExpression()), !dbg !4609
  br label %245, !dbg !4742

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4743
  %203 = icmp eq i24 %202, 0, !dbg !4743
  %204 = trunc i24 %75 to i8, !dbg !4745
  %205 = shl i8 %204, 1, !dbg !4745
  %206 = and i8 %205, 32, !dbg !4745
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4745
  call void @llvm.dbg.value(metadata i8 %207, metadata !4538, metadata !DIExpression()), !dbg !4609
  %208 = load i64, i64* %20, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata i64 %208, metadata !4476, metadata !DIExpression()), !dbg !4595
  %209 = icmp slt i64 %208, 0, !dbg !4747
  br i1 %209, label %210, label %212, !dbg !4749

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4538, metadata !DIExpression()), !dbg !4609
  %211 = sub nsw i64 0, %208, !dbg !4750
  store i64 %211, i64* %20, align 8, !dbg !4752
  br label %212, !dbg !4753

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4609
  call void @llvm.dbg.value(metadata i8 %213, metadata !4538, metadata !DIExpression()), !dbg !4609
  %214 = load i64, i64* %20, align 8, !dbg !4754
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4755
  call void @llvm.dbg.value(metadata i8* %215, metadata !4536, metadata !DIExpression()), !dbg !4609
  br label %216, !dbg !4756

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4757
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4758
  call void @llvm.dbg.value(metadata i8* %218, metadata !4536, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8 %217, metadata !4538, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.label(metadata !4594), !dbg !4759
  %219 = icmp sgt i32 %76, -1, !dbg !4760
  br i1 %219, label %222, label %220, !dbg !4761

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4762
  br label %245, !dbg !4761

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4764
  %224 = sub i32 %22, %223, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %224, metadata !4553, metadata !DIExpression()), !dbg !4765
  %225 = load i24, i24* %15, align 8, !dbg !4766
  %226 = and i24 %225, -65, !dbg !4766
  store i24 %226, i24* %15, align 8, !dbg !4766
  %227 = icmp ugt i32 %76, %224, !dbg !4767
  br i1 %227, label %228, label %245, !dbg !4769

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4770
  store i32 %229, i32* %16, align 4, !dbg !4772
  br label %245, !dbg !4773

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4774
  %232 = icmp eq i8* %231, null, !dbg !4776
  br i1 %232, label %245, label %233, !dbg !4777

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4778
  %235 = zext i32 %234 to i64, !dbg !4778
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %236, metadata !4536, metadata !DIExpression()), !dbg !4609
  %237 = load i24, i24* %15, align 8, !dbg !4781
  %238 = or i24 %237, 1048576, !dbg !4781
  store i24 %238, i24* %15, align 8, !dbg !4781
  store i8 120, i8* %21, align 1, !dbg !4782
  br label %216, !dbg !4783

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4784
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4787
  br label %363, !dbg !4788

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %242, metadata !4551, metadata !DIExpression()), !dbg !4735
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4790
  call void @llvm.dbg.value(metadata i32 -1, metadata !4535, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 %29, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %192, metadata !4536, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %243, metadata !4537, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8 0, metadata !4538, metadata !DIExpression()), !dbg !4609
  %244 = icmp eq i8* %192, null, !dbg !4791
  br i1 %244, label %363, label %245, !dbg !4793, !llvm.loop !4605

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4762
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata i32 0, metadata !4557, metadata !DIExpression()), !dbg !4609
  %250 = zext i8 %249 to i32, !dbg !4794
  %251 = icmp eq i8 %249, 0, !dbg !4796
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata i32 undef, metadata !4556, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata i32 undef, metadata !4556, metadata !DIExpression()), !dbg !4609
  %252 = icmp sgt i32 %58, 0, !dbg !4797
  br i1 %252, label %253, label %302, !dbg !4798

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4762
  %255 = icmp eq i24 %254, 0, !dbg !4762
  %256 = ptrtoint i8* %248 to i32, !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  %257 = ptrtoint i8* %247 to i32, !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  %258 = xor i1 %251, true, !dbg !4800
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  %259 = sext i1 %258 to i32, !dbg !4800
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  %260 = lshr i24 %246, 19, !dbg !4801
  %261 = and i24 %260, 1, !dbg !4801
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4801
  %263 = zext i24 %262 to i32, !dbg !4801
  %264 = add i32 %257, %259, !dbg !4801
  %265 = add i32 %256, %263, !dbg !4801
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  %266 = and i24 %246, 4194304, !dbg !4802
  %267 = icmp eq i24 %266, 0, !dbg !4802
  %268 = load i32, i32* %16, align 4, !dbg !4804
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4609
  call void @llvm.dbg.value(metadata i32 undef, metadata !4556, metadata !DIExpression()), !dbg !4609
  %269 = load i32, i32* %17, align 8, !dbg !4805
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4805
  call void @llvm.dbg.value(metadata i32 undef, metadata !4556, metadata !DIExpression()), !dbg !4609
  %271 = add i32 %264, %58, !dbg !4805
  %272 = add i32 %265, %268, !dbg !4805
  %273 = add i32 %272, %270, !dbg !4806
  %274 = sub i32 %271, %273, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %274, metadata !4534, metadata !DIExpression()), !dbg !4609
  %275 = and i24 %246, 4, !dbg !4807
  %276 = icmp eq i24 %275, 0, !dbg !4807
  br i1 %276, label %277, label %302, !dbg !4808

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4558, metadata !DIExpression()), !dbg !4809
  %278 = and i24 %246, 64, !dbg !4810
  %279 = icmp eq i24 %278, 0, !dbg !4810
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4811
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4811
  %282 = select i1 %279, i32 32, i32 48, !dbg !4811
  br i1 %280, label %287, label %283, !dbg !4811

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %284, metadata !4563, metadata !DIExpression()), !dbg !4813
  %285 = icmp slt i32 %284, 0, !dbg !4814
  %286 = add i32 %29, 1, !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4609
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %290, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8 undef, metadata !4558, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8 %288, metadata !4538, metadata !DIExpression()), !dbg !4609
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4816
  %292 = add i32 %291, -1, !dbg !4816
  br label %293, !dbg !4816

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4817
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %295, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %294, metadata !4534, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 %294, metadata !4534, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4609
  %296 = icmp sgt i32 %294, 0, !dbg !4818
  br i1 %296, label %297, label %302, !dbg !4816

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %298, metadata !4534, metadata !DIExpression()), !dbg !4609
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %299, metadata !4569, metadata !DIExpression()), !dbg !4821
  %300 = icmp slt i32 %299, 0, !dbg !4822
  %301 = add i32 %295, 1, !dbg !4820
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %300, label %361, label %293, !llvm.loop !4824

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4609
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4609
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %305, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %304, metadata !4534, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8 %303, metadata !4538, metadata !DIExpression()), !dbg !4609
  %306 = icmp eq i8 %303, 0, !dbg !4826
  br i1 %306, label %312, label %307, !dbg !4827

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4828
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %309, metadata !4572, metadata !DIExpression()), !dbg !4830
  %310 = icmp slt i32 %309, 0, !dbg !4831
  %311 = add i32 %305, 1, !dbg !4829
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %313, metadata !4475, metadata !DIExpression()), !dbg !4595
  %314 = lshr i24 %246, 20, !dbg !4833
  %315 = lshr i24 %246, 19, !dbg !4834
  %316 = or i24 %314, %315, !dbg !4835
  %317 = and i24 %316, 1, !dbg !4835
  %318 = icmp eq i24 %317, 0, !dbg !4835
  br i1 %318, label %323, label %319, !dbg !4836

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %320, metadata !4576, metadata !DIExpression()), !dbg !4838
  %321 = icmp slt i32 %320, 0, !dbg !4839
  %322 = add i32 %313, 1, !dbg !4837
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %324, metadata !4475, metadata !DIExpression()), !dbg !4595
  %325 = and i24 %246, 1048576, !dbg !4841
  %326 = icmp eq i24 %325, 0, !dbg !4841
  br i1 %326, label %333, label %327, !dbg !4842

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4843
  %329 = zext i8 %328 to i32, !dbg !4843
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %330, metadata !4582, metadata !DIExpression()), !dbg !4844
  %331 = icmp slt i32 %330, 0, !dbg !4845
  %332 = add i32 %324, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %334, metadata !4475, metadata !DIExpression()), !dbg !4595
  %335 = load i32, i32* %16, align 4, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %335, metadata !4557, metadata !DIExpression()), !dbg !4609
  br label %336, !dbg !4848

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4849
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %338, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %337, metadata !4557, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4609
  %339 = icmp sgt i32 %337, 0, !dbg !4850
  br i1 %339, label %340, label %345, !dbg !4848

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %341, metadata !4557, metadata !DIExpression()), !dbg !4609
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %342, metadata !4586, metadata !DIExpression()), !dbg !4853
  %343 = icmp slt i32 %342, 0, !dbg !4854
  %344 = add i32 %338, 1, !dbg !4852
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %343, label %361, label %336, !llvm.loop !4856

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %346, metadata !4589, metadata !DIExpression()), !dbg !4859
  %347 = icmp slt i32 %346, 0, !dbg !4860
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %349, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %304, metadata !4534, metadata !DIExpression()), !dbg !4609
  %350 = icmp sgt i32 %304, 0, !dbg !4862
  br i1 %350, label %351, label %363, !dbg !4863

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4863
  %353 = add i32 %352, %338, !dbg !4863
  br label %354, !dbg !4863

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %355, metadata !4534, metadata !DIExpression()), !dbg !4609
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %356, metadata !4591, metadata !DIExpression()), !dbg !4865
  %357 = icmp slt i32 %356, 0, !dbg !4866
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 undef, metadata !4475, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %359, metadata !4534, metadata !DIExpression()), !dbg !4609
  %360 = icmp sgt i32 %355, 1, !dbg !4862
  br i1 %360, label %354, label %363, !dbg !4863, !llvm.loop !4869

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4606
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %364, metadata !4475, metadata !DIExpression()), !dbg !4595
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4606
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4595
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4871
  ret i32 %366, !dbg !4871
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4872 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4876, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i8* %1, metadata !4877, metadata !DIExpression()), !dbg !4878
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4879
  store i24 0, i24* %3, align 4, !dbg !4879
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4879
  store i8 0, i8* %4, align 1, !dbg !4879
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4879
  store i32 0, i32* %5, align 4, !dbg !4879
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4879
  store i32 0, i32* %6, align 4, !dbg !4879
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4880
  call void @llvm.dbg.value(metadata i8* %7, metadata !4877, metadata !DIExpression()), !dbg !4878
  %8 = load i8, i8* %7, align 1, !dbg !4881
  %9 = icmp eq i8 %8, 37, !dbg !4883
  br i1 %9, label %10, label %12, !dbg !4884

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %11, metadata !4877, metadata !DIExpression()), !dbg !4878
  store i8 37, i8* %4, align 1, !dbg !4887
  br label %18, !dbg !4888

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %13, metadata !4877, metadata !DIExpression()), !dbg !4878
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %14, metadata !4877, metadata !DIExpression()), !dbg !4878
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4891
  call void @llvm.dbg.value(metadata i8* %15, metadata !4877, metadata !DIExpression()), !dbg !4878
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4892
  call void @llvm.dbg.value(metadata i8* %16, metadata !4877, metadata !DIExpression()), !dbg !4878
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %17, metadata !4877, metadata !DIExpression()), !dbg !4878
  br label %18, !dbg !4894

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4878
  ret i8* %19, !dbg !4895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4896 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4900, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8* %1, metadata !4901, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8* %2, metadata !4902, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8* %3, metadata !4903, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i32 0, metadata !4904, metadata !DIExpression()), !dbg !4907
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4908

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4909
  call void @llvm.dbg.value(metadata i32 %9, metadata !4904, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8* %8, metadata !4902, metadata !DIExpression()), !dbg !4907
  %10 = icmp ult i8* %8, %3, !dbg !4910
  br i1 %10, label %11, label %13, !dbg !4911

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4912
  br label %17, !dbg !4911

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4913

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4914
  %16 = icmp eq i8 %15, 0, !dbg !4913
  br i1 %16, label %24, label %17, !dbg !4908

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4912
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4915
  call void @llvm.dbg.value(metadata i8* %19, metadata !4902, metadata !DIExpression()), !dbg !4907
  %20 = zext i8 %18 to i32, !dbg !4916
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %21, metadata !4905, metadata !DIExpression()), !dbg !4918
  %22 = icmp slt i32 %21, 0, !dbg !4919
  %23 = add i32 %9, 1, !dbg !4921
  call void @llvm.dbg.value(metadata i32 undef, metadata !4904, metadata !DIExpression()), !dbg !4907
  br i1 %22, label %24, label %7, !llvm.loop !4922

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4907
  ret i32 %25, !dbg !4924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4925 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4929, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4930, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i8* %2, metadata !4931, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i8* %3, metadata !4932, metadata !DIExpression()), !dbg !4939
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4940
  %6 = load i8, i8* %5, align 1, !dbg !4940
  %7 = zext i8 %6 to i32, !dbg !4941
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4942
  %9 = icmp eq i32 %8, 0, !dbg !4942
  call void @llvm.dbg.value(metadata i1 %9, metadata !4933, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4939
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %10, metadata !4934, metadata !DIExpression()), !dbg !4939
  %11 = ptrtoint i8* %3 to i32, !dbg !4944
  %12 = ptrtoint i8* %2 to i32, !dbg !4944
  %13 = sub i32 %11, %12, !dbg !4944
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %14, metadata !4936, metadata !DIExpression()), !dbg !4939
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4946

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4939
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4929, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i8* %18, metadata !4936, metadata !DIExpression()), !dbg !4939
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4947
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %25, metadata !4937, metadata !DIExpression()), !dbg !4949
  %26 = icmp ult i32 %25, 10, !dbg !4950
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4951
  %28 = add i32 %27, %25, !dbg !4949
  %29 = trunc i32 %28 to i8, !dbg !4951
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4952
  call void @llvm.dbg.value(metadata i8* %30, metadata !4936, metadata !DIExpression()), !dbg !4939
  store i8 %29, i8* %30, align 1, !dbg !4953
  call void @llvm.dbg.value(metadata i64 %22, metadata !4929, metadata !DIExpression()), !dbg !4939
  %31 = icmp uge i64 %19, %15, !dbg !4954
  %32 = icmp ugt i8* %30, %2, !dbg !4955
  %33 = and i1 %31, %32, !dbg !4955
  br i1 %33, label %17, label %34, !dbg !4956, !llvm.loop !4957

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4959
  %36 = load i24, i24* %35, align 4, !dbg !4959
  %37 = and i24 %36, 32, !dbg !4959
  %38 = icmp eq i24 %37, 0, !dbg !4959
  br i1 %38, label %44, label %39, !dbg !4961

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4962

40:                                               ; preds = %39
  br label %41, !dbg !4964

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4968
  store i24 %43, i24* %35, align 4, !dbg !4968
  br label %44, !dbg !4969

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4970 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4976, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %1, metadata !4977, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 %2, metadata !4978, metadata !DIExpression()), !dbg !4979
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4980
  %5 = load i24, i24* %4, align 4, !dbg !4980
  %6 = lshr i24 %5, 11, !dbg !4980
  %7 = and i24 %6, 15, !dbg !4980
  %8 = zext i24 %7 to i32, !dbg !4980
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4981

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4982
  store i32 %2, i32* %10, align 4, !dbg !4984
  br label %28, !dbg !4985

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4986
  store i8 %12, i8* %1, align 1, !dbg !4987
  br label %28, !dbg !4988

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4989
  %15 = bitcast i8* %1 to i16*, !dbg !4990
  store i16 %14, i16* %15, align 2, !dbg !4991
  br label %28, !dbg !4992

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4993
  store i32 %2, i32* %17, align 4, !dbg !4994
  br label %28, !dbg !4995

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4996
  %20 = bitcast i8* %1 to i64*, !dbg !4997
  store i64 %19, i64* %20, align 8, !dbg !4998
  br label %28, !dbg !4999

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5000
  %23 = bitcast i8* %1 to i64*, !dbg !5001
  store i64 %22, i64* %23, align 8, !dbg !5002
  br label %28, !dbg !5003

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5004
  store i32 %2, i32* %25, align 4, !dbg !5005
  br label %28, !dbg !5006

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5007
  store i32 %2, i32* %27, align 4, !dbg !5008
  br label %28, !dbg !5009

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5010
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !5011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5014, metadata !DIExpression()), !dbg !5015
  %2 = add i32 %0, -65, !dbg !5016
  %3 = icmp ult i32 %2, 26, !dbg !5017
  %4 = zext i1 %3 to i32, !dbg !5017
  ret i32 %4, !dbg !5018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !5019 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5023, metadata !DIExpression()), !dbg !5024
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5025

2:                                                ; preds = %1
  br label %4, !dbg !5026

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5028

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5029
  ret i32 %5, !dbg !5030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5031 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5033, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8 1, metadata !5035, metadata !DIExpression()), !dbg !5036
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5037

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5035, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %5, metadata !5034, metadata !DIExpression()), !dbg !5036
  %6 = load i8, i8* %5, align 1, !dbg !5038
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5040

7:                                                ; preds = %4
  br label %11, !dbg !5041

8:                                                ; preds = %4
  br label %11, !dbg !5043

9:                                                ; preds = %4
  br label %11, !dbg !5044

10:                                               ; preds = %4
  br label %11, !dbg !5045

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5046
  %14 = or i24 %13, %12, !dbg !5046
  store i24 %14, i24* %3, align 4, !dbg !5046
  call void @llvm.dbg.value(metadata i8 poison, metadata !5035, metadata !DIExpression()), !dbg !5036
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5034, metadata !DIExpression()), !dbg !5036
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5035, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %15, metadata !5034, metadata !DIExpression()), !dbg !5036
  %17 = load i24, i24* %3, align 4, !dbg !5047
  %18 = and i24 %17, 68, !dbg !5049
  %19 = icmp eq i24 %18, 68, !dbg !5049
  br i1 %19, label %20, label %22, !dbg !5049

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5050
  store i24 %21, i24* %3, align 4, !dbg !5050
  br label %22, !dbg !5052

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5053
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5054 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5056, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8* %1, metadata !5057, metadata !DIExpression()), !dbg !5060
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5061
  %5 = load i24, i24* %4, align 4, !dbg !5062
  %6 = or i24 %5, 128, !dbg !5062
  store i24 %6, i24* %4, align 4, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %1, metadata !5057, metadata !DIExpression()), !dbg !5060
  %7 = load i8, i8* %1, align 1, !dbg !5063
  %8 = icmp eq i8 %7, 42, !dbg !5065
  br i1 %8, label %9, label %12, !dbg !5066

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5067
  store i24 %10, i24* %4, align 4, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %1, metadata !5057, metadata !DIExpression()), !dbg !5060
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %11, metadata !5057, metadata !DIExpression()), !dbg !5060
  store i8* %11, i8** %3, align 4, !dbg !5069
  br label %29, !dbg !5070

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8** %3, metadata !5057, metadata !DIExpression(DW_OP_deref)), !dbg !5060
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %13, metadata !5059, metadata !DIExpression()), !dbg !5060
  %14 = load i8*, i8** %3, align 4, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %14, metadata !5057, metadata !DIExpression()), !dbg !5060
  %15 = icmp eq i8* %14, %1, !dbg !5074
  br i1 %15, label %29, label %16, !dbg !5075

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5076
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5078
  store i32 %13, i32* %18, align 4, !dbg !5079
  %19 = lshr i32 %13, 31, !dbg !5080
  %20 = lshr i24 %17, 1, !dbg !5081
  %21 = and i24 %20, 1, !dbg !5081
  %22 = zext i24 %21 to i32, !dbg !5081
  %23 = or i32 %19, %22, !dbg !5081
  %24 = trunc i32 %23 to i24, !dbg !5081
  %25 = shl nuw nsw i24 %24, 1, !dbg !5081
  %26 = and i24 %17, -131, !dbg !5081
  %27 = or i24 %26, 128, !dbg !5081
  %28 = or i24 %25, %27, !dbg !5081
  store i24 %28, i24* %4, align 4, !dbg !5081
  br label %29, !dbg !5082

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5060
  ret i8* %30, !dbg !5083
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5084 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5086, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %1, metadata !5087, metadata !DIExpression()), !dbg !5089
  %4 = load i8, i8* %1, align 1, !dbg !5090
  %5 = icmp eq i8 %4, 46, !dbg !5091
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5092
  %7 = load i24, i24* %6, align 4, !dbg !5093
  %8 = select i1 %5, i24 512, i24 0, !dbg !5093
  %9 = and i24 %7, -513, !dbg !5093
  %10 = or i24 %9, %8, !dbg !5093
  store i24 %10, i24* %6, align 4, !dbg !5093
  br i1 %5, label %11, label %32, !dbg !5094

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5087, metadata !DIExpression()), !dbg !5089
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %12, metadata !5087, metadata !DIExpression()), !dbg !5089
  store i8* %12, i8** %3, align 4, !dbg !5095
  %13 = load i8, i8* %12, align 1, !dbg !5096
  %14 = icmp eq i8 %13, 42, !dbg !5098
  br i1 %14, label %15, label %18, !dbg !5099

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5100
  store i24 %16, i24* %6, align 4, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %12, metadata !5087, metadata !DIExpression()), !dbg !5089
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5102
  call void @llvm.dbg.value(metadata i8* %17, metadata !5087, metadata !DIExpression()), !dbg !5089
  store i8* %17, i8** %3, align 4, !dbg !5102
  br label %32, !dbg !5103

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5087, metadata !DIExpression(DW_OP_deref)), !dbg !5089
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %19, metadata !5088, metadata !DIExpression()), !dbg !5089
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5105
  store i32 %19, i32* %20, align 4, !dbg !5106
  %21 = lshr i32 %19, 31, !dbg !5107
  %22 = load i24, i24* %6, align 4, !dbg !5108
  %23 = lshr i24 %22, 1, !dbg !5108
  %24 = and i24 %23, 1, !dbg !5108
  %25 = zext i24 %24 to i32, !dbg !5108
  %26 = or i32 %21, %25, !dbg !5108
  %27 = trunc i32 %26 to i24, !dbg !5108
  %28 = shl nuw nsw i24 %27, 1, !dbg !5108
  %29 = and i24 %22, -3, !dbg !5108
  %30 = or i24 %28, %29, !dbg !5108
  store i24 %30, i24* %6, align 4, !dbg !5108
  %31 = load i8*, i8** %3, align 4, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %31, metadata !5087, metadata !DIExpression()), !dbg !5089
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5089
  ret i8* %33, !dbg !5110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5113, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = load i8, i8* %1, align 1, !dbg !5116
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5117

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %5, metadata !5114, metadata !DIExpression()), !dbg !5115
  %6 = load i8, i8* %5, align 1, !dbg !5121
  %7 = icmp eq i8 %6, 104, !dbg !5122
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5123
  %9 = load i24, i24* %8, align 4, !dbg !5123
  %10 = and i24 %9, -30721, !dbg !5123
  br i1 %7, label %11, label %14, !dbg !5124

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5125
  store i24 %12, i24* %8, align 4, !dbg !5125
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %13, metadata !5114, metadata !DIExpression()), !dbg !5115
  br label %56, !dbg !5128

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5129
  store i24 %15, i24* %8, align 4, !dbg !5129
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %17, metadata !5114, metadata !DIExpression()), !dbg !5115
  %18 = load i8, i8* %17, align 1, !dbg !5133
  %19 = icmp eq i8 %18, 108, !dbg !5134
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5135
  %21 = load i24, i24* %20, align 4, !dbg !5135
  %22 = and i24 %21, -30721, !dbg !5135
  br i1 %19, label %23, label %26, !dbg !5136

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5137
  store i24 %24, i24* %20, align 4, !dbg !5137
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5139
  call void @llvm.dbg.value(metadata i8* %25, metadata !5114, metadata !DIExpression()), !dbg !5115
  br label %56, !dbg !5140

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5141
  store i24 %27, i24* %20, align 4, !dbg !5141
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5143
  %30 = load i24, i24* %29, align 4, !dbg !5144
  %31 = and i24 %30, -30721, !dbg !5144
  %32 = or i24 %31, 10240, !dbg !5144
  store i24 %32, i24* %29, align 4, !dbg !5144
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5145
  call void @llvm.dbg.value(metadata i8* %33, metadata !5114, metadata !DIExpression()), !dbg !5115
  br label %56, !dbg !5146

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %36 = load i24, i24* %35, align 4, !dbg !5148
  %37 = and i24 %36, -30721, !dbg !5148
  %38 = or i24 %37, 12288, !dbg !5148
  store i24 %38, i24* %35, align 4, !dbg !5148
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %39, metadata !5114, metadata !DIExpression()), !dbg !5115
  br label %56, !dbg !5150

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %42 = load i24, i24* %41, align 4, !dbg !5152
  %43 = and i24 %42, -30721, !dbg !5152
  %44 = or i24 %43, 14336, !dbg !5152
  store i24 %44, i24* %41, align 4, !dbg !5152
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5153
  call void @llvm.dbg.value(metadata i8* %45, metadata !5114, metadata !DIExpression()), !dbg !5115
  br label %56, !dbg !5154

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5155
  %48 = load i24, i24* %47, align 4, !dbg !5156
  %49 = and i24 %48, -30723, !dbg !5156
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5157
  call void @llvm.dbg.value(metadata i8* %50, metadata !5114, metadata !DIExpression()), !dbg !5115
  %51 = or i24 %49, 16386, !dbg !5158
  store i24 %51, i24* %47, align 4, !dbg !5158
  br label %56, !dbg !5159

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5160
  %54 = load i24, i24* %53, align 4, !dbg !5161
  %55 = and i24 %54, -30721, !dbg !5161
  store i24 %55, i24* %53, align 4, !dbg !5161
  br label %56, !dbg !5162

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5114, metadata !DIExpression()), !dbg !5115
  ret i8* %57, !dbg !5163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5164 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5166, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8 0, metadata !5168, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5171
  %3 = load i8, i8* %1, align 1, !dbg !5172
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5173
  store i8 %3, i8* %4, align 1, !dbg !5174
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5175

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5176

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5177
  %9 = load i24, i24* %8, align 4, !dbg !5177
  %10 = and i24 %9, -458753, !dbg !5177
  %11 = or i24 %10, %7, !dbg !5177
  call void @llvm.dbg.label(metadata !5169), !dbg !5178
  %12 = and i24 %9, 30720, !dbg !5179
  %13 = icmp eq i24 %12, 16384, !dbg !5179
  %14 = zext i1 %13 to i24, !dbg !5181
  %15 = or i24 %11, %14, !dbg !5181
  %16 = icmp eq i8 %3, 99, !dbg !5182
  br i1 %16, label %17, label %43, !dbg !5184

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5185
  %19 = icmp ne i24 %18, 0, !dbg !5185
  call void @llvm.dbg.value(metadata i1 %19, metadata !5168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5171
  br label %43, !dbg !5187

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %22 = load i24, i24* %21, align 4, !dbg !5189
  %23 = and i24 %22, -458753, !dbg !5189
  %24 = or i24 %23, 262144, !dbg !5189
  call void @llvm.dbg.value(metadata i8 1, metadata !5168, metadata !DIExpression()), !dbg !5171
  br label %43, !dbg !5190

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5193
  %27 = load i24, i24* %26, align 4, !dbg !5194
  %28 = and i24 %27, -458753, !dbg !5194
  %29 = or i24 %28, 196608, !dbg !5194
  %30 = and i24 %27, 30720, !dbg !5195
  %31 = icmp eq i24 %30, 16384, !dbg !5195
  br label %43, !dbg !5197

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5198
  %34 = load i24, i24* %33, align 4, !dbg !5199
  %35 = and i24 %34, -458753, !dbg !5199
  %36 = or i24 %35, 196608, !dbg !5199
  %37 = and i24 %34, 30720, !dbg !5200
  %38 = icmp ne i24 %37, 0, !dbg !5200
  br label %43, !dbg !5202

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5203
  %41 = load i24, i24* %40, align 4, !dbg !5204
  %42 = or i24 %41, 1, !dbg !5204
  br label %43, !dbg !5205

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5206
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5207
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5208
  call void @llvm.dbg.value(metadata i8* %48, metadata !5167, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8 poison, metadata !5168, metadata !DIExpression()), !dbg !5171
  %49 = lshr i24 %44, 1, !dbg !5206
  %50 = and i24 %49, 1, !dbg !5206
  %51 = zext i24 %50 to i32, !dbg !5206
  %52 = or i32 %51, %47, !dbg !5206
  %53 = trunc i32 %52 to i24, !dbg !5206
  %54 = shl nuw nsw i24 %53, 1, !dbg !5206
  %55 = and i24 %44, -3, !dbg !5206
  %56 = or i24 %54, %55, !dbg !5206
  store i24 %56, i24* %46, align 4, !dbg !5206
  ret i8* %48, !dbg !5209
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5210 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5214, metadata !DIExpression()), !dbg !5217
  %2 = load i8*, i8** %0, align 4, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %2, metadata !5215, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 0, metadata !5216, metadata !DIExpression()), !dbg !5217
  %3 = load i8, i8* %2, align 1, !dbg !5219
  %4 = zext i8 %3 to i32, !dbg !5220
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5221
  %6 = icmp eq i32 %5, 0, !dbg !5222
  br i1 %6, label %19, label %7, !dbg !5222

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5216, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %10, metadata !5215, metadata !DIExpression()), !dbg !5217
  %11 = mul i32 %9, 10, !dbg !5223
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5225
  call void @llvm.dbg.value(metadata i8* %12, metadata !5215, metadata !DIExpression()), !dbg !5217
  %13 = add i32 %11, -48, !dbg !5226
  %14 = add i32 %13, %8, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %14, metadata !5216, metadata !DIExpression()), !dbg !5217
  %15 = load i8, i8* %12, align 1, !dbg !5219
  %16 = zext i8 %15 to i32, !dbg !5220
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5221
  %18 = icmp eq i32 %17, 0, !dbg !5222
  br i1 %18, label %19, label %7, !dbg !5222, !llvm.loop !5228

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5217
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5217
  store i8* %20, i8** %0, align 4, !dbg !5230
  ret i32 %21, !dbg !5231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5234, metadata !DIExpression()), !dbg !5235
  %2 = add i32 %0, -48, !dbg !5236
  %3 = icmp ult i32 %2, 10, !dbg !5237
  %4 = zext i1 %3 to i32, !dbg !5237
  ret i32 %4, !dbg !5238
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5244, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.value(metadata i32 %1, metadata !5245, metadata !DIExpression()), !dbg !5246
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5247, !srcloc !5249
  ret void, !dbg !5250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5251 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5253, metadata !DIExpression()), !dbg !5261
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5262
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5254, metadata !DIExpression()), !dbg !5263
  call void @llvm.va_start(i8* nonnull %3), !dbg !5264
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5265
  %5 = load i32, i32* %4, align 4, !dbg !5265
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5265
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5265
  call void @llvm.va_end(i8* nonnull %3), !dbg !5266
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5267
  ret void, !dbg !5267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5268 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5942, !srcloc !5943
  ret void, !dbg !5944
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5947, metadata !DIExpression()), !dbg !5949
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5950
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5951
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5952, !srcloc !5961
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %3, metadata !5958, metadata !DIExpression()) #23, !dbg !5962
  call void @llvm.dbg.value(metadata i32 undef, metadata !5959, metadata !DIExpression()) #23, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %3, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i32 %3, metadata !5963, metadata !DIExpression()) #23, !dbg !5968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5970, !srcloc !5971
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5972
  ret i32 0, !dbg !5973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5974 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5976
  %2 = or i32 %1, 512, !dbg !5976
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5976
  ret void, !dbg !5977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5979
  %2 = or i32 %1, 1024, !dbg !5979
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !5981 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5983, metadata !DIExpression()), !dbg !5984
  ret i32 0, !dbg !5985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5986 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5989, metadata !DIExpression()), !dbg !5997
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5998
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5990, metadata !DIExpression()), !dbg !5999
  call void @llvm.va_start(i8* nonnull %3), !dbg !6000
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6001
  %5 = load i32, i32* %4, align 4, !dbg !6001
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6001
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6001
  call void @llvm.va_end(i8* nonnull %3), !dbg !6002
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6003
  ret void, !dbg !6003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6004 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6009, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i8* %0, metadata !6008, metadata !DIExpression()), !dbg !6010
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6011
  ret void, !dbg !6012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6017, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %1, metadata !6018, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i32 %2, metadata !6019, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %1, metadata !6020, metadata !DIExpression()), !dbg !6021
  %4 = icmp eq i32 %2, 0, !dbg !6022
  br i1 %4, label %14, label %5, !dbg !6023

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6021
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6023

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6020, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i32 %10, metadata !6019, metadata !DIExpression()), !dbg !6021
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6024
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6026
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6027
  call void @llvm.dbg.value(metadata i32 %11, metadata !6019, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %12, metadata !6020, metadata !DIExpression()), !dbg !6021
  br i1 %13, label %14, label %8, !dbg !6027, !llvm.loop !6028

14:                                               ; preds = %8, %3
  ret void, !dbg !6030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !6031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6036, metadata !DIExpression()), !dbg !6037
  %2 = add i32 %0, -1, !dbg !6038
  %3 = icmp ult i32 %2, 4, !dbg !6038
  %4 = shl i32 %2, 3, !dbg !6038
  %5 = lshr i32 1145657157, %4, !dbg !6038
  %6 = trunc i32 %5 to i8, !dbg !6038
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6038
  ret i8 %7, !dbg !6039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6044, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 %1, metadata !6045, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 0, metadata !6046, metadata !DIExpression()), !dbg !6056
  br label %4, !dbg !6057

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6058
  call void @llvm.dbg.value(metadata i32 0, metadata !6048, metadata !DIExpression()), !dbg !6059
  br label %16, !dbg !6060

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6046, metadata !DIExpression()), !dbg !6056
  %6 = icmp ult i32 %5, %1, !dbg !6061
  br i1 %6, label %7, label %11, !dbg !6065

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6066
  %9 = load i8, i8* %8, align 1, !dbg !6066
  %10 = zext i8 %9 to i32, !dbg !6068
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6069
  br label %12, !dbg !6070

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6071
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %13, metadata !6046, metadata !DIExpression()), !dbg !6056
  %14 = icmp eq i32 %13, 8, !dbg !6074
  br i1 %14, label %3, label %4, !dbg !6057, !llvm.loop !6075

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6077
  ret void, !dbg !6078

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6048, metadata !DIExpression()), !dbg !6059
  %18 = icmp ult i32 %17, %1, !dbg !6079
  br i1 %18, label %19, label %26, !dbg !6080

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6081
  %21 = load i8, i8* %20, align 1, !dbg !6081
  call void @llvm.dbg.value(metadata i8 %21, metadata !6050, metadata !DIExpression()), !dbg !6082
  %22 = zext i8 %21 to i32, !dbg !6083
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6084
  %24 = icmp eq i32 %23, 0, !dbg !6085
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6084
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6086
  br label %27, !dbg !6087

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6088
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6090
  call void @llvm.dbg.value(metadata i32 %28, metadata !6048, metadata !DIExpression()), !dbg !6059
  %29 = icmp eq i32 %28, 8, !dbg !6091
  br i1 %29, label %15, label %16, !dbg !6060, !llvm.loop !6092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6096, metadata !DIExpression()), !dbg !6097
  %2 = add i32 %0, -32, !dbg !6098
  %3 = icmp ult i32 %2, 95, !dbg !6098
  %4 = zext i1 %3 to i32, !dbg !6098
  ret i32 %4, !dbg !6099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6149, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6150, metadata !DIExpression()), !dbg !6151
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6152
  br i1 %3, label %5, label %4, !dbg !6154

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6155
  br label %5, !dbg !6157

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6158
  ret void, !dbg !6159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6160 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6164, metadata !DIExpression()), !dbg !6165
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6166
  %3 = load i32, i32* %2, align 4, !dbg !6166
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6166
  %5 = load i32, i32* %4, align 4, !dbg !6166
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6166
  %7 = load i32, i32* %6, align 4, !dbg !6166
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6166
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6171
  %9 = load i32, i32* %8, align 4, !dbg !6171
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6171
  %11 = load i32, i32* %10, align 4, !dbg !6171
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6171
  %13 = load i32, i32* %12, align 4, !dbg !6171
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6171
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6176
  %15 = load i32, i32* %14, align 4, !dbg !6176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6176
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6181
  %17 = load i32, i32* %16, align 4, !dbg !6181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6181
  ret void, !dbg !6186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6187 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6204, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6205, metadata !DIExpression()), !dbg !6207
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6208
  %4 = load i32, i32* %3, align 4, !dbg !6208
  call void @llvm.dbg.value(metadata i32 %4, metadata !6206, metadata !DIExpression()), !dbg !6207
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6209
  ret void, !dbg !6210
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6211 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6213, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i8* %0, metadata !6214, metadata !DIExpression()), !dbg !6216
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6217
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6217
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6215, metadata !DIExpression()), !dbg !6218
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6218
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6219
  %5 = bitcast i8* %4 to i32*, !dbg !6219
  %6 = load i32, i32* %5, align 4, !dbg !6219
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6220
  store i32 %6, i32* %7, align 4, !dbg !6221
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6222
  unreachable, !dbg !6223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6227, metadata !DIExpression()), !dbg !6228
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6229
  ret void, !dbg !6230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6235, metadata !DIExpression()), !dbg !6236
  %2 = icmp sgt i32 %0, -1, !dbg !6237
  br i1 %2, label %3, label %8, !dbg !6239

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6240, !srcloc !6242
  %4 = and i32 %0, 31, !dbg !6243
  %5 = shl nuw i32 1, %4, !dbg !6244
  %6 = lshr i32 %0, 5, !dbg !6245
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6246
  store volatile i32 %5, i32* %7, align 4, !dbg !6247
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6248, !srcloc !6249
  br label %8, !dbg !6250

8:                                                ; preds = %3, %1
  ret void, !dbg !6251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6254, metadata !DIExpression()), !dbg !6255
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6260, metadata !DIExpression()), !dbg !6261
  %2 = icmp sgt i32 %0, -1, !dbg !6262
  br i1 %2, label %3, label %8, !dbg !6264

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6265
  %5 = shl nuw i32 1, %4, !dbg !6267
  %6 = lshr i32 %0, 5, !dbg !6268
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6269
  store volatile i32 %5, i32* %7, align 4, !dbg !6270
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6271, !srcloc !6275
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6276, !srcloc !6279
  br label %8, !dbg !6280

8:                                                ; preds = %3, %1
  ret void, !dbg !6281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6286, metadata !DIExpression()), !dbg !6287
  %2 = lshr i32 %0, 5, !dbg !6288
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6289
  %4 = load volatile i32, i32* %3, align 4, !dbg !6289
  %5 = and i32 %0, 31, !dbg !6290
  %6 = shl nuw i32 1, %5, !dbg !6290
  %7 = and i32 %4, %6, !dbg !6291
  ret i32 %7, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6297, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 %1, metadata !6298, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 %2, metadata !6299, metadata !DIExpression()), !dbg !6300
  %4 = add i32 %1, 1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %4, metadata !6298, metadata !DIExpression()), !dbg !6300
  %5 = icmp ult i32 %4, 16, !dbg !6304
  br i1 %5, label %7, label %6, !dbg !6307

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6308
  unreachable, !dbg !6308

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6310
  ret void, !dbg !6311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6316, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i32 %1, metadata !6317, metadata !DIExpression()), !dbg !6318
  %3 = trunc i32 %1 to i8, !dbg !6319
  %4 = shl i8 %3, 4, !dbg !6319
  %5 = and i32 %0, 15, !dbg !6321
  %6 = add nsw i32 %5, -4, !dbg !6321
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6321
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6321
  %9 = icmp slt i32 %0, 0, !dbg !6321
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6321
  store volatile i8 %4, i8* %10, align 1, !dbg !6319
  ret void, !dbg !6322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6325, metadata !DIExpression()), !dbg !6326
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6327
  ret void, !dbg !6328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6329 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6331
  tail call void @z_arm_int_exit() #25, !dbg !6332
  ret void, !dbg !6333
}

; Function Attrs: optsize
declare !dbg !6334 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6335 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6337 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6339
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6340
  tail call void @z_bss_zero() #25, !dbg !6341
  tail call void @z_data_copy() #25, !dbg !6342
  tail call void @z_arm_interrupt_init() #25, !dbg !6343
  tail call void @z_cstart() #27, !dbg !6344
  unreachable, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6345 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6346
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6347, !srcloc !6350
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6351, !srcloc !6354
  ret void, !dbg !6355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6356 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6357
  %2 = and i32 %1, -15728641, !dbg !6357
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6357
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6358, !srcloc !6365
  call void @llvm.dbg.value(metadata i32 %3, metadata !6363, metadata !DIExpression()) #23, !dbg !6366
  %4 = and i32 %3, -5, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %4, metadata !6368, metadata !DIExpression()) #23, !dbg !6373
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6377, !srcloc !6354
  ret void, !dbg !6379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6383, metadata !DIExpression()), !dbg !6384
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6385
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6386
  store i32 %0, i32* %3, align 4, !dbg !6387
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6388
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6389
  store i32 %4, i32* %5, align 4, !dbg !6390
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6391
  %7 = or i32 %6, 268435456, !dbg !6391
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6391
  call void @llvm.dbg.value(metadata i32 0, metadata !6392, metadata !DIExpression()) #23, !dbg !6395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6397, !srcloc !6398
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6399
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6400
  %10 = load i32, i32* %9, align 4, !dbg !6400
  ret i32 %10, !dbg !6401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6515, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6516, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %2, metadata !6517, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6518, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %4, metadata !6519, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %5, metadata !6520, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %6, metadata !6521, metadata !DIExpression()), !dbg !6523
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6524
  call void @llvm.dbg.value(metadata i8* %8, metadata !6522, metadata !DIExpression()), !dbg !6523
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6525
  %10 = bitcast i8* %9 to i32*, !dbg !6525
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6526
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6527
  %12 = bitcast i8* %8 to i32*, !dbg !6528
  store i32 %11, i32* %12, align 4, !dbg !6529
  %13 = ptrtoint i8* %4 to i32, !dbg !6530
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6531
  %15 = bitcast i8* %14 to i32*, !dbg !6531
  store i32 %13, i32* %15, align 4, !dbg !6532
  %16 = ptrtoint i8* %5 to i32, !dbg !6533
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6534
  %18 = bitcast i8* %17 to i32*, !dbg !6534
  store i32 %16, i32* %18, align 4, !dbg !6535
  %19 = ptrtoint i8* %6 to i32, !dbg !6536
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6537
  %21 = bitcast i8* %20 to i32*, !dbg !6537
  store i32 %19, i32* %21, align 4, !dbg !6538
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6539
  %23 = bitcast i8* %22 to i32*, !dbg !6539
  store i32 16777216, i32* %23, align 4, !dbg !6540
  %24 = ptrtoint i8* %8 to i32, !dbg !6541
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6542
  store i32 %24, i32* %25, align 8, !dbg !6543
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6544
  store i32 0, i32* %26, align 4, !dbg !6545
  ret void, !dbg !6546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6552, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.value(metadata i32 %1, metadata !6553, metadata !DIExpression()), !dbg !6558
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6559
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6554, metadata !DIExpression()), !dbg !6558
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6560
  br i1 %4, label %19, label %5, !dbg !6562

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6557, metadata !DIExpression()), !dbg !6558
  %6 = icmp eq i32 %0, -22, !dbg !6563
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6563
  %8 = load i32, i32* %7, align 4, !dbg !6563
  br i1 %6, label %16, label %9, !dbg !6565

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6563
  %11 = icmp ule i32 %10, %0, !dbg !6563
  %12 = icmp ugt i32 %8, %0, !dbg !6563
  %13 = and i1 %12, %11, !dbg !6563
  %14 = icmp ugt i32 %8, %1, !dbg !6563
  %15 = and i1 %14, %13, !dbg !6563
  br i1 %15, label %18, label %19, !dbg !6563

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6563
  br i1 %17, label %18, label %19, !dbg !6565

18:                                               ; preds = %9, %16
  br label %19, !dbg !6566

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6558
  ret i32 %20, !dbg !6568
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6573, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6575, metadata !DIExpression()), !dbg !6576
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6577
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6578
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6579, !srcloc !6580
  unreachable, !dbg !6581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6582 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6600, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %1, metadata !6601, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %2, metadata !6602, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6603, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 0, metadata !6604, metadata !DIExpression()), !dbg !6610
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6611
  call void @llvm.dbg.value(metadata i32 %8, metadata !6605, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6610
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6612
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6612
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6613
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6613
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6609, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i32 0, metadata !6615, metadata !DIExpression()) #23, !dbg !6618
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6620, !srcloc !6621
  call void @llvm.dbg.value(metadata i8* %6, metadata !6607, metadata !DIExpression(DW_OP_deref)), !dbg !6610
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6622
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6608, metadata !DIExpression()), !dbg !6610
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6623
  br i1 %11, label %12, label %13, !dbg !6626

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6627
  unreachable, !dbg !6627

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6629
  call void @llvm.dbg.value(metadata i32 %14, metadata !6605, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8* %5, metadata !6606, metadata !DIExpression(DW_OP_deref)), !dbg !6610
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6630
  call void @llvm.dbg.value(metadata i32 %15, metadata !6604, metadata !DIExpression()), !dbg !6610
  %16 = load i8, i8* %5, align 1, !dbg !6631, !range !6633
  call void @llvm.dbg.value(metadata i8 %16, metadata !6606, metadata !DIExpression()), !dbg !6610
  %17 = icmp eq i8 %16, 0, !dbg !6631
  br i1 %17, label %18, label %35, !dbg !6634

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6635
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6636
  %21 = load i8, i8* %6, align 1, !dbg !6637, !range !6633
  call void @llvm.dbg.value(metadata i8 %21, metadata !6607, metadata !DIExpression()), !dbg !6610
  %22 = icmp eq i8 %21, 0, !dbg !6637
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6639
  %24 = load i32, i32* %23, align 4, !dbg !6639
  br i1 %22, label %30, label %25, !dbg !6640

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6641
  %27 = icmp eq i32 %26, 0, !dbg !6644
  br i1 %27, label %28, label %34, !dbg !6645

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6646
  br label %32, !dbg !6648

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6649
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6639
  br label %34, !dbg !6651

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6651
  br label %35, !dbg !6652

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6652
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6652
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6652
  ret void, !dbg !6652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6658, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata i32 %1, metadata !6659, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata i32 %2, metadata !6660, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata i8* %3, metadata !6661, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata i8 0, metadata !6662, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6663, metadata !DIExpression()), !dbg !6664
  store i8 0, i8* %3, align 1, !dbg !6665
  %5 = icmp ugt i32 %2, -16777217, !dbg !6666
  br i1 %5, label %6, label %17, !dbg !6668

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6669
  %8 = icmp eq i32 %7, 8, !dbg !6669
  br i1 %8, label %9, label %10, !dbg !6669

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6671
  br label %17, !dbg !6677

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6678
  %12 = icmp eq i32 %11, 0, !dbg !6678
  br i1 %12, label %13, label %14, !dbg !6679

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6663, metadata !DIExpression()), !dbg !6664
  store i8 1, i8* %3, align 1, !dbg !6682
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6664
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %17, !dbg !6685

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6664
  ret %struct.__esf* %18, !dbg !6686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6687 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6691, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata i32 %1, metadata !6692, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata i8* %2, metadata !6693, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6695
  store i8 0, i8* %2, align 1, !dbg !6696
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6697

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %5, metadata !6694, metadata !DIExpression()), !dbg !6695
  br label %12, !dbg !6700

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %7, metadata !6694, metadata !DIExpression()), !dbg !6695
  br label %12, !dbg !6702

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6703
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6695
  br label %12, !dbg !6704

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6705
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6695
  br label %12, !dbg !6706

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6707
  br label %12, !dbg !6708

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6709
  br label %12, !dbg !6710

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6695
  call void @llvm.dbg.value(metadata i32 %13, metadata !6694, metadata !DIExpression()), !dbg !6695
  ret i32 %13, !dbg !6711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6712 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6716, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %1, metadata !6717, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6720
  store i8 0, i8* %1, align 1, !dbg !6725
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6726
  %4 = and i32 %3, 2, !dbg !6728
  %5 = icmp eq i32 %4, 0, !dbg !6729
  br i1 %5, label %7, label %6, !dbg !6730

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6731
  br label %38, !dbg !6737

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6738
  %9 = icmp sgt i32 %8, -1, !dbg !6740
  br i1 %9, label %11, label %10, !dbg !6741

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6742
  br label %38, !dbg !6748

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6749
  %13 = and i32 %12, 1073741824, !dbg !6751
  %14 = icmp eq i32 %13, 0, !dbg !6752
  br i1 %14, label %37, label %15, !dbg !6753

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6754
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6760
  br i1 %16, label %17, label %21, !dbg !6762

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6763
  %19 = load i32, i32* %18, align 4, !dbg !6763
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6763
  %20 = load i32, i32* %18, align 4, !dbg !6769
  call void @llvm.dbg.value(metadata i32 %20, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %38, !dbg !6770

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6771
  %23 = and i32 %22, 255, !dbg !6773
  %24 = icmp eq i32 %23, 0, !dbg !6774
  br i1 %24, label %27, label %25, !dbg !6775

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %26, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %38, !dbg !6778

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6779
  %29 = and i32 %28, 65280, !dbg !6781
  %30 = icmp eq i32 %29, 0, !dbg !6782
  br i1 %30, label %32, label %31, !dbg !6783

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6784
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %38, !dbg !6786

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6787
  %34 = icmp ult i32 %33, 65536, !dbg !6789
  br i1 %34, label %36, label %35, !dbg !6790

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6791
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6793
  unreachable, !dbg !6793

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6798
  unreachable, !dbg !6798

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6719
  call void @llvm.dbg.value(metadata i32 %39, metadata !6718, metadata !DIExpression()), !dbg !6719
  ret i32 %39, !dbg !6803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6804 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6806, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 %1, metadata !6807, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i8* %2, metadata !6808, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 0, metadata !6809, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 -22, metadata !6810, metadata !DIExpression()), !dbg !6819
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6820
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6825
  %5 = and i32 %4, 16, !dbg !6827
  %6 = icmp eq i32 %5, 0, !dbg !6828
  br i1 %6, label %8, label %7, !dbg !6829

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6830
  br label %8, !dbg !6836

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6837
  %10 = and i32 %9, 8, !dbg !6839
  %11 = icmp eq i32 %10, 0, !dbg !6840
  br i1 %11, label %13, label %12, !dbg !6841

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6842
  br label %13, !dbg !6848

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6849
  %15 = and i32 %14, 2, !dbg !6850
  %16 = icmp eq i32 %15, 0, !dbg !6851
  br i1 %16, label %27, label %17, !dbg !6852

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6853
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %18, metadata !6811, metadata !DIExpression()), !dbg !6859
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6860
  %20 = and i32 %19, 128, !dbg !6862
  %21 = icmp eq i32 %20, 0, !dbg !6863
  br i1 %21, label %27, label %22, !dbg !6864

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6810, metadata !DIExpression()), !dbg !6819
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6865
  %23 = icmp eq i32 %1, 0, !dbg !6871
  br i1 %23, label %27, label %24, !dbg !6873

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6874
  %26 = and i32 %25, -129, !dbg !6874
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6874
  br label %27, !dbg !6876

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6819
  call void @llvm.dbg.value(metadata i32 %28, metadata !6810, metadata !DIExpression()), !dbg !6819
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %30 = and i32 %29, 1, !dbg !6879
  %31 = icmp eq i32 %30, 0, !dbg !6880
  br i1 %31, label %33, label %32, !dbg !6881

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6882
  br label %33, !dbg !6888

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6889
  %35 = and i32 %34, 32, !dbg !6891
  %36 = icmp eq i32 %35, 0, !dbg !6892
  br i1 %36, label %38, label %37, !dbg !6893

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6894
  br label %38, !dbg !6900

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6901
  %40 = and i32 %39, 16, !dbg !6902
  %41 = icmp eq i32 %40, 0, !dbg !6902
  br i1 %41, label %42, label %46, !dbg !6903

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6904
  %44 = and i32 %43, 2, !dbg !6905
  %45 = icmp eq i32 %44, 0, !dbg !6905
  br i1 %45, label %60, label %46, !dbg !6906

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6907
  %48 = and i32 %47, 2048, !dbg !6908
  %49 = icmp eq i32 %48, 0, !dbg !6908
  br i1 %49, label %60, label %50, !dbg !6909

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6910
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %52, metadata !6814, metadata !DIExpression()), !dbg !6912
  %53 = icmp eq i32 %52, 0, !dbg !6913
  br i1 %53, label %55, label %54, !dbg !6915

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6916, metadata !DIExpression()) #23, !dbg !6919
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6922, !srcloc !6923
  call void @llvm.dbg.value(metadata i32 2, metadata !6809, metadata !DIExpression()), !dbg !6819
  br label %60, !dbg !6924

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6925
  %57 = and i32 %56, 16, !dbg !6925
  %58 = icmp eq i32 %57, 0, !dbg !6925
  br i1 %58, label %60, label %59, !dbg !6929

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6930
  unreachable, !dbg !6930

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6819
  call void @llvm.dbg.value(metadata i32 %61, metadata !6809, metadata !DIExpression()), !dbg !6819
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6932
  %63 = and i32 %62, 32, !dbg !6934
  %64 = icmp eq i32 %63, 0, !dbg !6935
  br i1 %64, label %68, label %65, !dbg !6936

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6937
  %67 = and i32 %66, -8193, !dbg !6937
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6937
  br label %68, !dbg !6939

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  %70 = or i32 %69, 255, !dbg !6940
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  store i8 0, i8* %2, align 1, !dbg !6941
  ret i32 %61, !dbg !6942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6943 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6947, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i32 %0, metadata !6948, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i8* %1, metadata !6949, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i32 0, metadata !6950, metadata !DIExpression()), !dbg !6954
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6955
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6960
  %4 = and i32 %3, 4096, !dbg !6962
  %5 = icmp eq i32 %4, 0, !dbg !6962
  br i1 %5, label %7, label %6, !dbg !6963

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6964
  br label %7, !dbg !6970

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6971
  %9 = and i32 %8, 2048, !dbg !6973
  %10 = icmp eq i32 %9, 0, !dbg !6973
  br i1 %10, label %12, label %11, !dbg !6974

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6975
  br label %12, !dbg !6981

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  %14 = and i32 %13, 512, !dbg !6983
  %15 = icmp eq i32 %14, 0, !dbg !6983
  br i1 %15, label %26, label %16, !dbg !6984

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6985
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6990
  call void @llvm.dbg.value(metadata i32 %17, metadata !6951, metadata !DIExpression()), !dbg !6991
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6992
  %19 = and i32 %18, 32768, !dbg !6994
  %20 = icmp eq i32 %19, 0, !dbg !6995
  br i1 %20, label %26, label %21, !dbg !6996

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6997
  %22 = icmp eq i32 %0, 0, !dbg !7003
  br i1 %22, label %26, label %23, !dbg !7005

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  %25 = and i32 %24, -32769, !dbg !7006
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  br label %26, !dbg !7008

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %28 = and i32 %27, 1024, !dbg !7011
  %29 = icmp eq i32 %28, 0, !dbg !7011
  br i1 %29, label %31, label %30, !dbg !7012

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7013
  br label %31, !dbg !7019

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7020
  %33 = and i32 %32, 256, !dbg !7022
  %34 = icmp eq i32 %33, 0, !dbg !7023
  br i1 %34, label %35, label %39, !dbg !7024

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  %37 = and i32 %36, 8192, !dbg !7027
  %38 = icmp eq i32 %37, 0, !dbg !7027
  br i1 %38, label %41, label %39, !dbg !7028

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7029
  br label %41, !dbg !7030

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %43 = or i32 %42, 65280, !dbg !7030
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  store i8 0, i8* %1, align 1, !dbg !7031
  ret void, !dbg !7032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7033 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7039, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.value(metadata i32 0, metadata !7040, metadata !DIExpression()), !dbg !7041
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7042
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7047
  %2 = and i32 %1, 33554432, !dbg !7049
  %3 = icmp eq i32 %2, 0, !dbg !7050
  br i1 %3, label %5, label %4, !dbg !7051

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7052
  br label %5, !dbg !7058

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7059
  %7 = and i32 %6, 16777216, !dbg !7061
  %8 = icmp eq i32 %7, 0, !dbg !7062
  br i1 %8, label %10, label %9, !dbg !7063

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7064
  br label %10, !dbg !7070

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7071
  %12 = and i32 %11, 524288, !dbg !7073
  %13 = icmp eq i32 %12, 0, !dbg !7074
  br i1 %13, label %15, label %14, !dbg !7075

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7076
  br label %15, !dbg !7082

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7083
  %17 = and i32 %16, 262144, !dbg !7085
  %18 = icmp eq i32 %17, 0, !dbg !7086
  br i1 %18, label %20, label %19, !dbg !7087

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7088
  br label %20, !dbg !7094

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7095
  %22 = and i32 %21, 131072, !dbg !7097
  %23 = icmp eq i32 %22, 0, !dbg !7098
  br i1 %23, label %25, label %24, !dbg !7099

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7100
  br label %25, !dbg !7106

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7107
  %27 = and i32 %26, 65536, !dbg !7109
  %28 = icmp eq i32 %27, 0, !dbg !7110
  br i1 %28, label %30, label %29, !dbg !7111

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7112
  br label %30, !dbg !7118

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  %32 = or i32 %31, -65536, !dbg !7119
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  ret void, !dbg !7120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7121 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7125, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.value(metadata i8* %0, metadata !7126, metadata !DIExpression()), !dbg !7127
  store i8 0, i8* %0, align 1, !dbg !7128
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7129
  ret void, !dbg !7134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7135 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7139, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i32 %0, metadata !7140, metadata !DIExpression()), !dbg !7141
  %2 = icmp slt i32 %0, 16, !dbg !7142
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7142
  %4 = add nsw i32 %0, -16, !dbg !7142
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7142
  ret void, !dbg !7147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7148 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7152, metadata !DIExpression()), !dbg !7155
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7156
  %3 = load i32, i32* %2, align 4, !dbg !7156
  %4 = inttoptr i32 %3 to i16*, !dbg !7157
  call void @llvm.dbg.value(metadata i16* %4, metadata !7153, metadata !DIExpression()), !dbg !7155
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7158
  %6 = or i32 %5, 256, !dbg !7158
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7158
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7159, !srcloc !7162
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7163, !srcloc !7166
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7167
  %8 = load i16, i16* %7, align 2, !dbg !7168
  call void @llvm.dbg.value(metadata i16 %8, metadata !7154, metadata !DIExpression()), !dbg !7155
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7169
  %10 = and i32 %9, -257, !dbg !7169
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7169
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7170, !srcloc !7162
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7172, !srcloc !7166
  %11 = icmp eq i16 %8, -8446, !dbg !7174
  ret i1 %11, !dbg !7176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7177 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7178
  %2 = or i32 %1, 16, !dbg !7178
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7178
  ret void, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7180 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7183, metadata !DIExpression()), !dbg !7184
  br label %1, !dbg !7185

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7183, metadata !DIExpression()), !dbg !7184
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7187
  %3 = add nuw nsw i32 %2, 1, !dbg !7190
  call void @llvm.dbg.value(metadata i32 %3, metadata !7183, metadata !DIExpression()), !dbg !7184
  %4 = icmp eq i32 %3, 85, !dbg !7191
  br i1 %4, label %5, label %1, !dbg !7185, !llvm.loop !7192

5:                                                ; preds = %1
  ret void, !dbg !7194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7197, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.value(metadata i32 1, metadata !7198, metadata !DIExpression()), !dbg !7199
  %2 = and i32 %0, 15, !dbg !7200
  %3 = add nsw i32 %2, -4, !dbg !7200
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7200
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7200
  %6 = icmp slt i32 %0, 0, !dbg !7200
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7200
  store volatile i8 16, i8* %7, align 1, !dbg !7201
  ret void, !dbg !7203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7313, metadata !DIExpression()), !dbg !7314
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7315
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7317
  br i1 %3, label %4, label %12, !dbg !7318

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7319, !srcloc !7331
  call void @llvm.dbg.value(metadata i32 %5, metadata !7322, metadata !DIExpression()) #23, !dbg !7332
  %6 = icmp eq i32 %5, 0, !dbg !7333
  br i1 %6, label %12, label %7, !dbg !7334

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7335
  %9 = or i32 %8, 268435456, !dbg !7335
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7335
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7337
  %11 = and i32 %10, -32769, !dbg !7337
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7337
  br label %12, !dbg !7338

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7339
  ret void, !dbg !7340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7341 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7342
  ret void, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7344
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7345
  %3 = load i32, i32* %2, align 4, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7344
  %4 = add i32 %3, -64, !dbg !7347
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7344
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7348
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7349
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7350
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7344
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7351
  ret void, !dbg !7352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7353 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7354
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7355, !srcloc !7358
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7359, !srcloc !7362
  ret void, !dbg !7363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7364 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7365, !srcloc !7368
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7369
  ret void, !dbg !7370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7371 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8 %1, metadata !7387, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %2, metadata !7388, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %3, metadata !7389, metadata !DIExpression()), !dbg !7390
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7391
  %6 = icmp eq i32 %5, -22, !dbg !7393
  br i1 %6, label %7, label %9, !dbg !7394

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7395
  %8 = zext i8 %1 to i32, !dbg !7395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7395
  unreachable, !dbg !7395

9:                                                ; preds = %4
  ret void, !dbg !7400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7401 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7406, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8 %1, metadata !7407, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 undef, metadata !7408, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 undef, metadata !7409, metadata !DIExpression()), !dbg !7411
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7412
  call void @llvm.dbg.value(metadata i8 %3, metadata !7410, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7411
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %4, metadata !7410, metadata !DIExpression()), !dbg !7411
  %5 = trunc i32 %4 to i8, !dbg !7414
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7415
  ret i32 %4, !dbg !7416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7417 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7421, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8 %1, metadata !7422, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8 %2, metadata !7423, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i1 %3, metadata !7424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7427
  %5 = zext i8 %2 to i32, !dbg !7428
  call void @llvm.dbg.value(metadata i32 %5, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 0, metadata !7425, metadata !DIExpression()), !dbg !7427
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 0, metadata !7425, metadata !DIExpression()), !dbg !7427
  %7 = icmp eq i8 %1, 0, !dbg !7429
  br i1 %7, label %30, label %8, !dbg !7432

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %10, metadata !7425, metadata !DIExpression()), !dbg !7427
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7433
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7436
  %13 = load i32, i32* %12, align 4, !dbg !7436
  %14 = icmp eq i32 %13, 0, !dbg !7437
  br i1 %14, label %26, label %15, !dbg !7438

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7439

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7441
  %18 = icmp eq i32 %17, 0, !dbg !7441
  br i1 %18, label %19, label %20, !dbg !7442

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7443
  br label %30, !dbg !7449

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7450
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7451
  call void @llvm.dbg.value(metadata i32 %22, metadata !7426, metadata !DIExpression()), !dbg !7427
  %23 = icmp eq i32 %22, -22, !dbg !7452
  br i1 %23, label %30, label %24, !dbg !7454

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %25, metadata !7426, metadata !DIExpression()), !dbg !7427
  br label %26, !dbg !7456

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7427
  call void @llvm.dbg.value(metadata i32 %27, metadata !7426, metadata !DIExpression()), !dbg !7427
  %28 = add nuw nsw i32 %10, 1, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %28, metadata !7425, metadata !DIExpression()), !dbg !7427
  %29 = icmp eq i32 %28, %6, !dbg !7429
  br i1 %29, label %30, label %8, !dbg !7432, !llvm.loop !7458

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7427
  ret i32 %31, !dbg !7460
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7461 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7465, metadata !DIExpression()), !dbg !7467
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7468
  %3 = load i32, i32* %2, align 4, !dbg !7468
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7469, !range !7470
  %5 = icmp ult i32 %4, 2, !dbg !7469
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7471
  br i1 %7, label %8, label %15, !dbg !7471

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7472
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7473
  %11 = load i32, i32* %10, align 4, !dbg !7473
  %12 = and i32 %11, %9, !dbg !7474
  %13 = icmp eq i32 %12, 0, !dbg !7475
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7466, metadata !DIExpression()), !dbg !7467
  ret i32 %16, !dbg !7476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7477 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7481, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7482, metadata !DIExpression()), !dbg !7484
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7485
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7485
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7483, metadata !DIExpression()), !dbg !7486
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7487
  %6 = load i32, i32* %5, align 4, !dbg !7487
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7488
  store i32 %6, i32* %7, align 4, !dbg !7489
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7490
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7491
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7492
  %11 = load i32, i32* %10, align 4, !dbg !7492
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7493
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7494
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7495
  ret i32 %12, !dbg !7496
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7497 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7504, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7505, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i32 undef, metadata !7506, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i32 %2, metadata !7507, metadata !DIExpression()), !dbg !7508
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7509
  %5 = load i32, i32* %4, align 4, !dbg !7509
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7510
  %7 = or i32 %6, %5, !dbg !7511
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7512
  store i32 %7, i32* %8, align 4, !dbg !7513
  ret void, !dbg !7514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7515 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7520, metadata !DIExpression()), !dbg !7521
  %3 = zext i8 %0 to i32, !dbg !7522
  %4 = icmp ugt i8 %0, 7, !dbg !7524
  br i1 %4, label %5, label %6, !dbg !7525

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7526
  br label %7, !dbg !7532

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7533
  br label %7, !dbg !7534

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7521
  ret i32 %8, !dbg !7535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7540, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7541, metadata !DIExpression()), !dbg !7542
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7543
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7544
  %4 = load i32, i32* %3, align 4, !dbg !7544
  %5 = and i32 %4, -32, !dbg !7545
  %6 = or i32 %5, %0, !dbg !7546
  %7 = or i32 %6, 16, !dbg !7546
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7547
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7548
  %9 = load i32, i32* %8, align 4, !dbg !7548
  %10 = or i32 %9, 1, !dbg !7549
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7550
  ret void, !dbg !7551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7555, metadata !DIExpression()), !dbg !7556
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7557
  ret void, !dbg !7558
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7563, metadata !DIExpression()), !dbg !7564
  %2 = icmp ult i32 %0, 33, !dbg !7565
  br i1 %2, label %11, label %3, !dbg !7567

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7568
  br i1 %4, label %11, label %5, !dbg !7570

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7571
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7572, !range !7470
  %8 = mul nsw i32 %7, -2, !dbg !7573
  %9 = add nsw i32 %8, 62, !dbg !7573
  %10 = and i32 %9, 62, !dbg !7574
  br label %11, !dbg !7575

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7564
  ret i32 %12, !dbg !7576
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7581, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i8 %1, metadata !7582, metadata !DIExpression()), !dbg !7583
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7584
  %4 = icmp eq i32 %3, -22, !dbg !7586
  br i1 %4, label %5, label %7, !dbg !7587

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7588
  %6 = zext i8 %1 to i32, !dbg !7588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7588
  unreachable, !dbg !7588

7:                                                ; preds = %2
  ret void, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7594 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7598, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8 %1, metadata !7599, metadata !DIExpression()), !dbg !7605
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7606
  call void @llvm.dbg.value(metadata i8 %3, metadata !7600, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7605
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7607
  call void @llvm.dbg.value(metadata i32 %4, metadata !7600, metadata !DIExpression()), !dbg !7605
  %5 = icmp ne i32 %4, -22, !dbg !7608
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %4, metadata !7601, metadata !DIExpression()), !dbg !7610
  br i1 %7, label %8, label %12, !dbg !7609

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7601, metadata !DIExpression()), !dbg !7610
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7611
  %10 = add i32 %9, 1, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %10, metadata !7601, metadata !DIExpression()), !dbg !7610
  %11 = icmp eq i32 %10, 8, !dbg !7615
  br i1 %11, label %12, label %8, !dbg !7616, !llvm.loop !7617

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7623, metadata !DIExpression()), !dbg !7624
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7625
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7626
  ret void, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7628 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7633
  %2 = icmp ugt i32 %1, 8, !dbg !7635
  br i1 %2, label %3, label %4, !dbg !7636

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7637
  unreachable, !dbg !7637

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7642
  call void @llvm.dbg.value(metadata i32 0, metadata !7632, metadata !DIExpression()), !dbg !7643
  %5 = icmp eq i32 %1, 0, !dbg !7644
  br i1 %5, label %13, label %6, !dbg !7647

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7647

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7632, metadata !DIExpression()), !dbg !7643
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7648
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7650
  %11 = add nuw i32 %9, 1, !dbg !7651
  call void @llvm.dbg.value(metadata i32 %11, metadata !7632, metadata !DIExpression()), !dbg !7643
  %12 = icmp eq i32 %11, %1, !dbg !7644
  br i1 %12, label %13, label %8, !dbg !7647, !llvm.loop !7652

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7654
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7655
  tail call void @arm_core_mpu_enable() #24, !dbg !7656
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7657
  %16 = and i32 %15, 65280, !dbg !7657
  %17 = icmp eq i32 %16, 2048, !dbg !7657
  br i1 %17, label %19, label %18, !dbg !7660

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7661
  unreachable, !dbg !7661

19:                                               ; preds = %13
  ret i32 0, !dbg !7663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7671, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %1, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %0, metadata !7673, metadata !DIExpression()), !dbg !7674
  %3 = load i8, i8* %1, align 1, !dbg !7675
  %4 = icmp eq i8 %3, 0, !dbg !7676
  br i1 %4, label %13, label %5, !dbg !7677

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7671, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %8, metadata !7672, metadata !DIExpression()), !dbg !7674
  store i8 %6, i8* %7, align 1, !dbg !7678
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7680
  call void @llvm.dbg.value(metadata i8* %9, metadata !7671, metadata !DIExpression()), !dbg !7674
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7681
  call void @llvm.dbg.value(metadata i8* %10, metadata !7672, metadata !DIExpression()), !dbg !7674
  %11 = load i8, i8* %10, align 1, !dbg !7675
  %12 = icmp eq i8 %11, 0, !dbg !7676
  br i1 %12, label %13, label %5, !dbg !7677, !llvm.loop !7682

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7684
  ret i8* %0, !dbg !7685
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %1, metadata !7691, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %2, metadata !7692, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %0, metadata !7693, metadata !DIExpression()), !dbg !7694
  %4 = icmp eq i32 %2, 0, !dbg !7695
  br i1 %4, label %22, label %5, !dbg !7696

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %7, metadata !7692, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %8, metadata !7691, metadata !DIExpression()), !dbg !7694
  %9 = load i8, i8* %8, align 1, !dbg !7697
  %10 = icmp eq i8 %9, 0, !dbg !7698
  br i1 %10, label %16, label %11, !dbg !7699

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7700
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7702
  call void @llvm.dbg.value(metadata i8* %12, metadata !7691, metadata !DIExpression()), !dbg !7694
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7703
  call void @llvm.dbg.value(metadata i8* %13, metadata !7690, metadata !DIExpression()), !dbg !7694
  %14 = add i32 %7, -1, !dbg !7704
  call void @llvm.dbg.value(metadata i32 %14, metadata !7692, metadata !DIExpression()), !dbg !7694
  %15 = icmp eq i32 %14, 0, !dbg !7695
  br i1 %15, label %22, label %5, !dbg !7696, !llvm.loop !7705

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %18, metadata !7692, metadata !DIExpression()), !dbg !7694
  store i8 0, i8* %17, align 1, !dbg !7707
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7709
  call void @llvm.dbg.value(metadata i8* %19, metadata !7690, metadata !DIExpression()), !dbg !7694
  %20 = add i32 %18, -1, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %20, metadata !7692, metadata !DIExpression()), !dbg !7694
  %21 = icmp eq i32 %20, 0, !dbg !7711
  br i1 %21, label %22, label %16, !dbg !7712, !llvm.loop !7713

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7720, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7721, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7722, metadata !DIExpression()), !dbg !7723
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7724

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7720, metadata !DIExpression()), !dbg !7723
  %6 = load i8, i8* %5, align 1, !dbg !7725
  %7 = icmp eq i8 %6, %3, !dbg !7726
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7727
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %10, metadata !7720, metadata !DIExpression()), !dbg !7723
  br i1 %9, label %11, label %4, !dbg !7727, !llvm.loop !7730

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7732
  ret i8* %12, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7736, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %1, metadata !7737, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* null, metadata !7738, metadata !DIExpression()), !dbg !7739
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7740

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7739
  call void @llvm.dbg.value(metadata i8* %6, metadata !7738, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %5, metadata !7736, metadata !DIExpression()), !dbg !7739
  %7 = load i8, i8* %5, align 1, !dbg !7741
  %8 = icmp eq i8 %7, %3, !dbg !7744
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7745
  call void @llvm.dbg.value(metadata i8* %9, metadata !7738, metadata !DIExpression()), !dbg !7739
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7746
  call void @llvm.dbg.value(metadata i8* %10, metadata !7736, metadata !DIExpression()), !dbg !7739
  %11 = icmp eq i8 %7, 0, !dbg !7747
  br i1 %11, label %12, label %4, !dbg !7747, !llvm.loop !7748

12:                                               ; preds = %4
  ret i8* %9, !dbg !7750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7755, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 0, metadata !7756, metadata !DIExpression()), !dbg !7757
  %2 = load i8, i8* %0, align 1, !dbg !7758
  %3 = icmp eq i8 %2, 0, !dbg !7759
  br i1 %3, label %11, label %4, !dbg !7760

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i8* %6, metadata !7755, metadata !DIExpression()), !dbg !7757
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7761
  call void @llvm.dbg.value(metadata i8* %7, metadata !7755, metadata !DIExpression()), !dbg !7757
  %8 = add i32 %5, 1, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %8, metadata !7756, metadata !DIExpression()), !dbg !7757
  %9 = load i8, i8* %7, align 1, !dbg !7758
  %10 = icmp eq i8 %9, 0, !dbg !7759
  br i1 %10, label %11, label %4, !dbg !7760, !llvm.loop !7764

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7757
  ret i32 %12, !dbg !7766
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7767 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7771, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 %1, metadata !7772, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7774
  %3 = load i8, i8* %0, align 1, !dbg !7775
  %4 = icmp ne i8 %3, 0, !dbg !7776
  %5 = icmp ne i32 %1, 0, !dbg !7777
  %6 = and i1 %4, %5, !dbg !7777
  br i1 %6, label %7, label %16, !dbg !7778

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %9, metadata !7771, metadata !DIExpression()), !dbg !7774
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7779
  call void @llvm.dbg.value(metadata i8* %10, metadata !7771, metadata !DIExpression()), !dbg !7774
  %11 = add nuw i32 %8, 1, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %11, metadata !7773, metadata !DIExpression()), !dbg !7774
  %12 = load i8, i8* %10, align 1, !dbg !7775
  %13 = icmp ne i8 %12, 0, !dbg !7776
  %14 = icmp ult i32 %11, %1, !dbg !7777
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7777
  br i1 %15, label %7, label %16, !dbg !7778, !llvm.loop !7782

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7774
  ret i32 %17, !dbg !7784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7789, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %1, metadata !7790, metadata !DIExpression()), !dbg !7791
  %3 = load i8, i8* %0, align 1, !dbg !7792
  %4 = load i8, i8* %1, align 1, !dbg !7793
  %5 = icmp ne i8 %3, %4, !dbg !7794
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7795
  br i1 %7, label %18, label %8, !dbg !7795

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %10, metadata !7789, metadata !DIExpression()), !dbg !7791
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7796
  call void @llvm.dbg.value(metadata i8* %11, metadata !7789, metadata !DIExpression()), !dbg !7791
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7798
  call void @llvm.dbg.value(metadata i8* %12, metadata !7790, metadata !DIExpression()), !dbg !7791
  %13 = load i8, i8* %11, align 1, !dbg !7792
  %14 = load i8, i8* %12, align 1, !dbg !7793
  %15 = icmp ne i8 %13, %14, !dbg !7794
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7795
  br i1 %17, label %18, label %8, !dbg !7795, !llvm.loop !7799

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7792
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7793
  %21 = zext i8 %19 to i32, !dbg !7802
  %22 = zext i8 %20 to i32, !dbg !7803
  %23 = sub nsw i32 %21, %22, !dbg !7804
  ret i32 %23, !dbg !7805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7810, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* %1, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %2, metadata !7812, metadata !DIExpression()), !dbg !7813
  %4 = icmp eq i32 %2, 0, !dbg !7814
  br i1 %4, label %23, label %5, !dbg !7814

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7812, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* %7, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* %8, metadata !7810, metadata !DIExpression()), !dbg !7813
  %9 = load i8, i8* %8, align 1, !dbg !7815
  %10 = load i8, i8* %7, align 1, !dbg !7816
  %11 = icmp ne i8 %9, %10, !dbg !7817
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7818
  br i1 %13, label %19, label %14, !dbg !7818

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7819
  call void @llvm.dbg.value(metadata i8* %15, metadata !7810, metadata !DIExpression()), !dbg !7813
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7821
  call void @llvm.dbg.value(metadata i8* %16, metadata !7811, metadata !DIExpression()), !dbg !7813
  %17 = add i32 %6, -1, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %17, metadata !7812, metadata !DIExpression()), !dbg !7813
  %18 = icmp eq i32 %17, 0, !dbg !7814
  br i1 %18, label %23, label %5, !dbg !7814, !llvm.loop !7823

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7826
  %21 = zext i8 %10 to i32, !dbg !7827
  %22 = sub nsw i32 %20, %21, !dbg !7828
  br label %23, !dbg !7829

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7829
  ret i32 %24, !dbg !7830
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7835, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.value(metadata i8* %1, metadata !7836, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.value(metadata i8** %2, metadata !7837, metadata !DIExpression()), !dbg !7840
  %4 = icmp eq i8* %0, null, !dbg !7841
  br i1 %4, label %5, label %7, !dbg !7841

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7842
  br label %7, !dbg !7841

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7841
  call void @llvm.dbg.value(metadata i8* %8, metadata !7838, metadata !DIExpression()), !dbg !7840
  %9 = load i8, i8* %8, align 1, !dbg !7843
  %10 = icmp eq i8 %9, 0, !dbg !7843
  br i1 %10, label %33, label %11, !dbg !7844

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7838, metadata !DIExpression()), !dbg !7840
  %14 = zext i8 %12 to i32, !dbg !7843
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7845
  %16 = icmp eq i8* %15, null, !dbg !7844
  br i1 %16, label %21, label %17, !dbg !7846

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7847
  call void @llvm.dbg.value(metadata i8* %18, metadata !7838, metadata !DIExpression()), !dbg !7840
  %19 = load i8, i8* %18, align 1, !dbg !7843
  %20 = icmp eq i8 %19, 0, !dbg !7843
  br i1 %20, label %33, label %11, !dbg !7844, !llvm.loop !7849

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7839, metadata !DIExpression()), !dbg !7840
  %24 = zext i8 %22 to i32, !dbg !7851
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7852
  %26 = icmp eq i8* %25, null, !dbg !7853
  br i1 %26, label %27, label %31, !dbg !7854

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7855
  call void @llvm.dbg.value(metadata i8* %28, metadata !7839, metadata !DIExpression()), !dbg !7840
  %29 = load i8, i8* %28, align 1, !dbg !7851
  %30 = icmp eq i8 %29, 0, !dbg !7851
  br i1 %30, label %33, label %21, !dbg !7857, !llvm.loop !7858

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7860
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7863
  br label %33, !dbg !7864

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7840
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7840
  store i8* %34, i8** %2, align 4, !dbg !7840
  ret i8* %35, !dbg !7865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7866 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7868, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i8* %1, metadata !7869, metadata !DIExpression()), !dbg !7870
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7871
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7872
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7873
  ret i8* %0, !dbg !7874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7875 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7877, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %2, metadata !7879, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7882
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %4, metadata !7881, metadata !DIExpression()), !dbg !7882
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7884
  call void @llvm.dbg.value(metadata i8* %5, metadata !7877, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %2, metadata !7879, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %2, metadata !7879, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7882
  %6 = icmp eq i32 %2, 0, !dbg !7885
  br i1 %6, label %18, label %7, !dbg !7886

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7887
  call void @llvm.dbg.value(metadata i8* %9, metadata !7877, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %10, metadata !7878, metadata !DIExpression()), !dbg !7882
  %12 = load i8, i8* %10, align 1, !dbg !7888
  %13 = icmp eq i8 %12, 0, !dbg !7889
  br i1 %13, label %18, label %14, !dbg !7890

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7891
  call void @llvm.dbg.value(metadata i8* %15, metadata !7878, metadata !DIExpression()), !dbg !7882
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7893
  call void @llvm.dbg.value(metadata i8* %16, metadata !7877, metadata !DIExpression()), !dbg !7882
  store i8 %12, i8* %9, align 1, !dbg !7894
  call void @llvm.dbg.value(metadata i32 %11, metadata !7879, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %11, metadata !7879, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7882
  %17 = icmp eq i32 %11, 0, !dbg !7885
  br i1 %17, label %18, label %7, !dbg !7886, !llvm.loop !7895

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7882
  store i8 0, i8* %19, align 1, !dbg !7897
  ret i8* %0, !dbg !7898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7903, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i8* %1, metadata !7904, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i32 %2, metadata !7905, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i8* %0, metadata !7906, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i8* %1, metadata !7907, metadata !DIExpression()), !dbg !7908
  %4 = icmp eq i32 %2, 0, !dbg !7909
  br i1 %4, label %31, label %5, !dbg !7911

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7907, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i8* %0, metadata !7906, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i32 %2, metadata !7905, metadata !DIExpression()), !dbg !7908
  %6 = add i32 %2, -1, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %6, metadata !7905, metadata !DIExpression()), !dbg !7908
  %7 = icmp eq i32 %6, 0, !dbg !7913
  br i1 %7, label %23, label %8, !dbg !7914

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7915
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7915
  br label %11, !dbg !7915

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7907, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i8* %14, metadata !7906, metadata !DIExpression()), !dbg !7908
  %15 = load i8, i8* %14, align 1, !dbg !7916
  %16 = load i8, i8* %13, align 1, !dbg !7917
  %17 = icmp eq i8 %15, %16, !dbg !7918
  br i1 %17, label %18, label %23, !dbg !7915

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7919
  call void @llvm.dbg.value(metadata i8* %19, metadata !7906, metadata !DIExpression()), !dbg !7908
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7921
  call void @llvm.dbg.value(metadata i8* %20, metadata !7907, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i32 %12, metadata !7905, metadata !DIExpression()), !dbg !7908
  %21 = add i32 %12, -1, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %21, metadata !7905, metadata !DIExpression()), !dbg !7908
  %22 = icmp eq i32 %21, 0, !dbg !7913
  br i1 %22, label %23, label %11, !dbg !7914, !llvm.loop !7922

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7908
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7908
  %26 = load i8, i8* %24, align 1, !dbg !7924
  %27 = zext i8 %26 to i32, !dbg !7924
  %28 = load i8, i8* %25, align 1, !dbg !7925
  %29 = zext i8 %28 to i32, !dbg !7925
  %30 = sub nsw i32 %27, %29, !dbg !7926
  br label %31, !dbg !7927

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7908
  ret i32 %32, !dbg !7928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7933, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %1, metadata !7934, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %2, metadata !7935, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7938
  %4 = ptrtoint i8* %0 to i32, !dbg !7939
  %5 = ptrtoint i8* %1 to i32, !dbg !7939
  %6 = sub i32 %4, %5, !dbg !7939
  %7 = icmp ult i32 %6, %2, !dbg !7941
  br i1 %7, label %10, label %8, !dbg !7942

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %2, metadata !7935, metadata !DIExpression()), !dbg !7938
  %9 = icmp eq i32 %2, 0, !dbg !7943
  br i1 %9, label %26, label %17, !dbg !7945

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7935, metadata !DIExpression()), !dbg !7938
  %12 = add i32 %11, -1, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %12, metadata !7935, metadata !DIExpression()), !dbg !7938
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7949
  %14 = load i8, i8* %13, align 1, !dbg !7949
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7950
  store i8 %14, i8* %15, align 1, !dbg !7951
  %16 = icmp eq i32 %12, 0, !dbg !7952
  br i1 %16, label %26, label %10, !dbg !7953, !llvm.loop !7954

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %19, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %20, metadata !7935, metadata !DIExpression()), !dbg !7938
  %21 = load i8, i8* %18, align 1, !dbg !7956
  store i8 %21, i8* %19, align 1, !dbg !7958
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7959
  call void @llvm.dbg.value(metadata i8* %22, metadata !7936, metadata !DIExpression()), !dbg !7938
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7960
  call void @llvm.dbg.value(metadata i8* %23, metadata !7937, metadata !DIExpression()), !dbg !7938
  %24 = add i32 %20, -1, !dbg !7961
  call void @llvm.dbg.value(metadata i32 %24, metadata !7935, metadata !DIExpression()), !dbg !7938
  %25 = icmp eq i32 %24, 0, !dbg !7943
  br i1 %25, label %26, label %17, !dbg !7945, !llvm.loop !7962

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7964
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7971, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7972, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %2, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %0, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7975, metadata !DIExpression()), !dbg !7976
  %4 = icmp eq i32 %2, 0, !dbg !7977
  br i1 %4, label %14, label %5, !dbg !7978

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %7, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %8, metadata !7973, metadata !DIExpression()), !dbg !7976
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7979
  call void @llvm.dbg.value(metadata i8* %9, metadata !7975, metadata !DIExpression()), !dbg !7976
  %10 = load i8, i8* %6, align 1, !dbg !7981
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7982
  call void @llvm.dbg.value(metadata i8* %11, metadata !7974, metadata !DIExpression()), !dbg !7976
  store i8 %10, i8* %7, align 1, !dbg !7983
  %12 = add i32 %8, -1, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %12, metadata !7973, metadata !DIExpression()), !dbg !7976
  %13 = icmp eq i32 %12, 0, !dbg !7977
  br i1 %13, label %14, label %5, !dbg !7978, !llvm.loop !7985

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7992, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %1, metadata !7993, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !7997
  %4 = trunc i32 %1 to i8, !dbg !7998
  call void @llvm.dbg.value(metadata i8 %4, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !7997
  %5 = icmp eq i32 %2, 0, !dbg !7999
  br i1 %5, label %12, label %6, !dbg !8000

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7994, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %8, metadata !7995, metadata !DIExpression()), !dbg !7997
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8001
  call void @llvm.dbg.value(metadata i8* %9, metadata !7995, metadata !DIExpression()), !dbg !7997
  store i8 %4, i8* %8, align 1, !dbg !8003
  %10 = add i32 %7, -1, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %10, metadata !7994, metadata !DIExpression()), !dbg !7997
  %11 = icmp eq i32 %10, 0, !dbg !7999
  br i1 %11, label %12, label %6, !dbg !8000, !llvm.loop !8005

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8012, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %1, metadata !8013, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %2, metadata !8014, metadata !DIExpression()), !dbg !8018
  %4 = icmp eq i32 %2, 0, !dbg !8019
  br i1 %4, label %17, label %5, !dbg !8020

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8021

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8022
  call void @llvm.dbg.value(metadata i8* %9, metadata !8015, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %8, metadata !8014, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %9, metadata !8015, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8022
  %10 = load i8, i8* %9, align 1, !dbg !8023
  %11 = icmp eq i8 %10, %6, !dbg !8026
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8027
  call void @llvm.dbg.value(metadata i8* %12, metadata !8015, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %13, metadata !8014, metadata !DIExpression()), !dbg !8018
  br i1 %15, label %16, label %7, !dbg !8027, !llvm.loop !8028

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8030

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8018
  ret i8* %19, !dbg !8031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8032 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8034, metadata !DIExpression()), !dbg !8035
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8036
  ret void, !dbg !8037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !8038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8040, metadata !DIExpression()), !dbg !8041
  ret i32 -1, !dbg !8042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8047, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32* %1, metadata !8048, metadata !DIExpression()), !dbg !8049
  %3 = ptrtoint i32* %1 to i32, !dbg !8050
  %4 = and i32 %3, -2, !dbg !8050
  %5 = icmp eq i32 %4, 2, !dbg !8050
  br i1 %5, label %6, label %9, !dbg !8050

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8051
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8051
  br label %9, !dbg !8052

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8052
  ret i32 %10, !dbg !8053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8056, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32* %1, metadata !8057, metadata !DIExpression()), !dbg !8058
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8059
  ret i32 %3, !dbg !8060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8064, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32* %1, metadata !8065, metadata !DIExpression()), !dbg !8066
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8067, !srcloc !8069
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8070
  ret i32 %3, !dbg !8071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8077, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i32* %1, metadata !8078, metadata !DIExpression()), !dbg !8081
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8082
  call void @llvm.dbg.value(metadata i32 %3, metadata !8079, metadata !DIExpression()), !dbg !8081
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %4, metadata !8080, metadata !DIExpression()), !dbg !8081
  %5 = icmp ne i32 %3, %4, !dbg !8084
  %6 = sext i1 %5 to i32, !dbg !8085
  ret i32 %6, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8091, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %1, metadata !8092, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %2, metadata !8093, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32* %3, metadata !8094, metadata !DIExpression()), !dbg !8095
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8096
  ret i32 %5, !dbg !8097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %1, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %2, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32* %3, metadata !8103, metadata !DIExpression()), !dbg !8104
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8105, !srcloc !8107
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8108
  ret i32 %5, !dbg !8109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8112, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %1, metadata !8113, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %2, metadata !8114, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32* %3, metadata !8115, metadata !DIExpression()), !dbg !8120
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8121
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8123
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8123
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8123
  br i1 %11, label %33, label %12, !dbg !8123

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8120
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8120
  call void @llvm.dbg.value(metadata i8* %14, metadata !8118, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %13, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %1, metadata !8117, metadata !DIExpression()), !dbg !8120
  br label %15, !dbg !8124

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8126
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8120
  call void @llvm.dbg.value(metadata i8* %17, metadata !8118, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %16, metadata !8117, metadata !DIExpression()), !dbg !8120
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8127
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8130
  call void @llvm.dbg.value(metadata i8* %19, metadata !8118, metadata !DIExpression()), !dbg !8120
  %20 = load i8, i8* %17, align 1, !dbg !8131
  %21 = zext i8 %20 to i32, !dbg !8132
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8127
  %23 = icmp eq i32 %22, -1, !dbg !8133
  br i1 %23, label %30, label %24, !dbg !8134

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8135
  call void @llvm.dbg.value(metadata i32 %25, metadata !8117, metadata !DIExpression()), !dbg !8120
  %26 = icmp eq i32 %25, 0, !dbg !8136
  br i1 %26, label %27, label %15, !dbg !8137, !llvm.loop !8138

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8140
  call void @llvm.dbg.value(metadata i32 %28, metadata !8116, metadata !DIExpression()), !dbg !8120
  %29 = icmp eq i32 %28, 0, !dbg !8141
  br i1 %29, label %30, label %12, !dbg !8142, !llvm.loop !8143

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8120
  call void @llvm.dbg.value(metadata i32 %31, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.label(metadata !8119), !dbg !8146
  %32 = sub i32 %2, %31, !dbg !8147
  br label %33, !dbg !8148

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8120
  ret i32 %34, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8154, metadata !DIExpression()), !dbg !8155
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8156
  %3 = icmp eq i32 %2, -1, !dbg !8158
  br i1 %3, label %8, label %4, !dbg !8159

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8160
  %6 = icmp eq i32 %5, -1, !dbg !8161
  %7 = sext i1 %6 to i32, !dbg !8160
  br label %8, !dbg !8162

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8155
  ret i32 %9, !dbg !8163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8164 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8165
  %2 = icmp eq i32 %1, 0, !dbg !8165
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8167
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8167
  ret void, !dbg !8168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8169 {
  ret void, !dbg !8170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8171 {
  ret void, !dbg !8172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8173 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8174
  tail call void @ztest_test_skip() #24, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8179 {
  %1 = load i32, i32* @phase, align 4, !dbg !8180
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8181

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8182
  br label %6, !dbg !8184

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8185
  tail call fastcc void @test_finalize() #24, !dbg !8186
  br label %6, !dbg !8187

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8188
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8189
  store i32 2, i32* @test_status, align 4, !dbg !8190
  br label %6, !dbg !8191

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8193 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8194
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8197
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8198
  ret void, !dbg !8199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8204, metadata !DIExpression()), !dbg !8205
  %2 = icmp ult i32 %0, 6, !dbg !8206
  br i1 %2, label %3, label %6, !dbg !8206

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8206
  %5 = load i8*, i8** %4, align 4, !dbg !8206
  br label %6, !dbg !8206

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8207
  ret i8* %7, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8216, metadata !DIExpression()), !dbg !8217
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8218, !srcloc !8220
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8223 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8226
  ret %struct.k_thread* %1, !dbg !8227
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8228 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8229, !srcloc !8231
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8232
  ret %struct.k_thread* %1, !dbg !8233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8234 {
  %1 = load i32, i32* @phase, align 4, !dbg !8235
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8236

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8237
  br label %6, !dbg !8239

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8240
  tail call fastcc void @test_finalize() #24, !dbg !8241
  br label %6, !dbg !8242

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8243
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8244
  store i32 2, i32* @test_status, align 4, !dbg !8245
  br label %6, !dbg !8246

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8248 {
  %1 = load i32, i32* @phase, align 4, !dbg !8249
  %2 = icmp eq i32 %1, 2, !dbg !8250
  br i1 %2, label %3, label %4, !dbg !8250

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8251
  br label %8, !dbg !8253

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8254
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8255
  store i32 2, i32* @test_status, align 4, !dbg !8256
  %6 = load i32, i32* @phase, align 4, !dbg !8257
  %7 = icmp eq i32 %6, 1, !dbg !8259
  br i1 %7, label %8, label %9, !dbg !8260

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8261
  br label %9, !dbg !8262

9:                                                ; preds = %8, %4
  ret void, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8265, metadata !DIExpression()), !dbg !8266
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8267
  ret void, !dbg !8268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8269 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8271, !srcloc !8273
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8277, metadata !DIExpression()), !dbg !8278
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8281 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8282, !srcloc !8284
  ret void, !dbg !8285
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8286 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8307, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8308, metadata !DIExpression()), !dbg !8310
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8311
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8312
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8312
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8309, metadata !DIExpression()), !dbg !8310
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8313
  br i1 %6, label %7, label %16, !dbg !8316

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8309, metadata !DIExpression()), !dbg !8310
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8317
  %10 = load i8*, i8** %9, align 4, !dbg !8317
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8320
  %12 = icmp eq i32 %11, 0, !dbg !8321
  br i1 %12, label %16, label %13, !dbg !8322

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8323
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8309, metadata !DIExpression()), !dbg !8310
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8313
  br i1 %15, label %7, label %16, !dbg !8316, !llvm.loop !8324

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8310
  ret %struct.ztest_unit_test* %17, !dbg !8326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8329, metadata !DIExpression()), !dbg !8330
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8331
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8332
  ret i32 %3, !dbg !8333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8334 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8355, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8356, metadata !DIExpression()), !dbg !8357
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8358

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8356, metadata !DIExpression()), !dbg !8357
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8360
  %5 = load i8*, i8** %4, align 4, !dbg !8360
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8364
  %7 = icmp eq i32 %6, 0, !dbg !8365
  br i1 %7, label %11, label %8, !dbg !8366

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8356, metadata !DIExpression()), !dbg !8357
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8368
  br i1 %10, label %2, label %11, !dbg !8358, !llvm.loop !8369

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8357
  ret %struct.ztest_suite_node* %12, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8372 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8376, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8377, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i8* null, metadata !8378, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 0, metadata !8379, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8383
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8384
  br i1 %2, label %3, label %4, !dbg !8386

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8387
  br label %68, !dbg !8389

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8390
  %6 = load i8*, i8** %5, align 4, !dbg !8390
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8390
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8390
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8392
  store i32 0, i32* @test_result, align 4, !dbg !8393
  store i32 0, i32* @phase, align 4, !dbg !8394
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8395
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8395
  %9 = icmp eq i8* ()* %8, null, !dbg !8397
  br i1 %9, label %12, label %10, !dbg !8398

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8399
  call void @llvm.dbg.value(metadata i8* %11, metadata !8378, metadata !DIExpression()), !dbg !8383
  br label %12, !dbg !8401

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8383
  call void @llvm.dbg.value(metadata i8* %13, metadata !8378, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 0, metadata !8381, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 undef, metadata !8381, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 0, metadata !8379, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8377, metadata !DIExpression()), !dbg !8383
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8377, metadata !DIExpression()), !dbg !8383
  br label %15, !dbg !8403

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8383
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8406
  call void @llvm.dbg.value(metadata i32 %17, metadata !8379, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8377, metadata !DIExpression()), !dbg !8383
  %18 = load i8*, i8** %5, align 4, !dbg !8407
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8408
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8377, metadata !DIExpression()), !dbg !8383
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8409
  br i1 %20, label %53, label %21, !dbg !8403

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8410
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8413
  %24 = load i8*, i8** %23, align 4, !dbg !8413
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8414
  br i1 %25, label %26, label %49, !dbg !8415

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8416
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8416
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8418
  %30 = load i32, i32* %29, align 4, !dbg !8419
  %31 = add i32 %30, 1, !dbg !8419
  store i32 %31, i32* %29, align 4, !dbg !8419
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %32, metadata !8380, metadata !DIExpression()), !dbg !8383
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8421

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8422
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8425
  br label %42, !dbg !8426

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8427
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8430
  br label %42, !dbg !8431

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8432
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8435
  br label %42, !dbg !8436

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8437
  %45 = add i32 %44, 1, !dbg !8437
  store i32 %45, i32* %43, align 4, !dbg !8437
  %46 = icmp eq i32 %32, 1, !dbg !8438
  %47 = zext i1 %46 to i32, !dbg !8440
  %48 = add nsw i32 %17, %47, !dbg !8440
  br label %49, !dbg !8440

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8406
  call void @llvm.dbg.value(metadata i32 %50, metadata !8379, metadata !DIExpression()), !dbg !8383
  %51 = load i32, i32* @test_status, align 4, !dbg !8441
  %52 = icmp eq i32 %51, 2, !dbg !8443
  br i1 %52, label %59, label %15, !dbg !8444, !llvm.loop !8445

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8447
  %55 = icmp eq i32 %54, 0, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %17, metadata !8379, metadata !DIExpression()), !dbg !8383
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8449
  br i1 %57, label %58, label %59, !dbg !8449

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8450
  br label %59, !dbg !8452

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8381, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 %17, metadata !8379, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8377, metadata !DIExpression()), !dbg !8383
  %61 = icmp sgt i32 %60, 0, !dbg !8453
  %62 = load i8*, i8** %5, align 4, !dbg !8456
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8456
  store i32 4, i32* @phase, align 4, !dbg !8457
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8458
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8458
  %66 = icmp eq void (i8*)* %65, null, !dbg !8460
  br i1 %66, label %68, label %67, !dbg !8461

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8462
  br label %68, !dbg !8464

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8383
  ret i32 %69, !dbg !8465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8466 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8470, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8471, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.value(metadata i8* %2, metadata !8472, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.value(metadata i32 0, metadata !8473, metadata !DIExpression()), !dbg !8474
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8475
  %5 = load i8*, i8** %4, align 4, !dbg !8475
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8475
  store i32 1, i32* @phase, align 4, !dbg !8477
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8478
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8481
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8482
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8483
  %9 = load i32, i32* %8, align 4, !dbg !8483
  %10 = or i32 %9, 8, !dbg !8484
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8485
  tail call fastcc void @k_object_access_grant() #24, !dbg !8486
  tail call fastcc void @k_object_access_grant() #24, !dbg !8486
  tail call fastcc void @k_object_access_grant() #24, !dbg !8486
  %11 = load i8*, i8** %4, align 4, !dbg !8487
  %12 = icmp eq i8* %11, null, !dbg !8489
  br i1 %12, label %14, label %13, !dbg !8490

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8491
  br label %14, !dbg !8493

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8494
  %16 = and i32 %15, -2, !dbg !8496
  %17 = icmp eq i32 %16, 4, !dbg !8496
  br i1 %17, label %19, label %18, !dbg !8496

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8497
  tail call fastcc void @k_thread_join() #24, !dbg !8499
  br label %19, !dbg !8500

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8501
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8502
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8502
  %22 = icmp eq void (i8*)* %21, null, !dbg !8504
  br i1 %22, label %24, label %23, !dbg !8505

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8506
  br label %24, !dbg !8508

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8509
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8510
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8511
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8513
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8513
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8514
  %29 = load i32, i32* %28, align 4, !dbg !8514
  %30 = icmp ugt i32 %25, %29, !dbg !8515
  br i1 %30, label %31, label %32, !dbg !8516

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8517
  br label %32, !dbg !8519

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8520
  %33 = load i32, i32* @test_result, align 4, !dbg !8521
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8523

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8524
  %36 = icmp ult i32 %35, 2, !dbg !8524
  %37 = select i1 %36, i32 2, i32 0, !dbg !8524
  br label %38, !dbg !8524

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8474
  call void @llvm.dbg.value(metadata i32 %39, metadata !8473, metadata !DIExpression()), !dbg !8474
  tail call fastcc void @cleanup_test() #24, !dbg !8526
  call void @llvm.dbg.value(metadata i32 %39, metadata !8473, metadata !DIExpression()), !dbg !8474
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8529
  call void @llvm.dbg.value(metadata i32 %40, metadata !8473, metadata !DIExpression()), !dbg !8474
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8530
  %42 = load i8*, i8** %4, align 4, !dbg !8530
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8530
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8530
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8530
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8530
  %48 = icmp eq i32 %40, 2, !dbg !8532
  br i1 %48, label %49, label %52, !dbg !8534

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8535
  br i1 %50, label %51, label %52, !dbg !8536

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8537
  br label %52, !dbg !8539

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8541 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8542
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8545 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8555, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8556, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 1024, metadata !8557, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8558, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %0, metadata !8559, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %2, metadata !8561, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 -1, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 %3, metadata !8563, metadata !DIExpression()), !dbg !8565
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8566, !srcloc !8568
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8569
  ret void, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8571 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8576, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8577, metadata !DIExpression()), !dbg !8578
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8579, !srcloc !8581
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i8* %0, metadata !8588, metadata !DIExpression()), !dbg !8589
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8590, !srcloc !8592
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8597, metadata !DIExpression()), !dbg !8598
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8599, !srcloc !8601
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8604 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8609, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8608, metadata !DIExpression()), !dbg !8610
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8611, !srcloc !8613
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8616 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8620, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8636
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8621, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %2, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8623, metadata !DIExpression()), !dbg !8637
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8638

4:                                                ; preds = %17, %3
  ret void, !dbg !8639

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8623, metadata !DIExpression()), !dbg !8637
  br i1 %0, label %7, label %11, !dbg !8640

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8644
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8644
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8645
  br i1 %10, label %17, label %15, !dbg !8646

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8647
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8647
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8649
  br i1 %14, label %17, label %15, !dbg !8650

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8651
  br label %17, !dbg !8652

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8652
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8623, metadata !DIExpression()), !dbg !8637
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8653
  br i1 %19, label %5, label %4, !dbg !8638, !llvm.loop !8654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8656 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8659
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8660
  %3 = sub i32 %1, %2, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %3, metadata !8658, metadata !DIExpression()), !dbg !8662
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8663
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8670, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 0, metadata !8671, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 0, metadata !8672, metadata !DIExpression()), !dbg !8673
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8674
  call void @llvm.dbg.value(metadata i32 0, metadata !8671, metadata !DIExpression()), !dbg !8673
  ret void, !dbg !8677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8678 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8682, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 %1, metadata !8683, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 -1, metadata !8684, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8685, metadata !DIExpression()), !dbg !8694
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8695

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8695

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8685, metadata !DIExpression()), !dbg !8694
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8696
  %9 = load i8*, i8** %8, align 4, !dbg !8696
  %10 = load i8*, i8** %4, align 4, !dbg !8700
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8701
  %12 = icmp eq i32 %11, 0, !dbg !8702
  br i1 %12, label %13, label %19, !dbg !8703

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8704
  %15 = load i8*, i8** %14, align 4, !dbg !8704
  %16 = load i8*, i8** %5, align 4, !dbg !8705
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8706
  %18 = icmp eq i32 %17, 0, !dbg !8707
  br i1 %18, label %22, label %19, !dbg !8708

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8685, metadata !DIExpression()), !dbg !8694
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8710
  br i1 %21, label %6, label %31, !dbg !8695, !llvm.loop !8711

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8713
  %24 = load i32, i32* %23, align 4, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %24, metadata !8684, metadata !DIExpression()), !dbg !8693
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8715

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8716
  %27 = zext i1 %26 to i32, !dbg !8719
  br label %31, !dbg !8720

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8721
  %30 = zext i1 %29 to i32, !dbg !8724
  br label %31, !dbg !8725

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8693
  ret i32 %32, !dbg !8726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8731, metadata !DIExpression()), !dbg !8732
  %2 = icmp ult i32 %0, 3, !dbg !8733
  br i1 %2, label %3, label %6, !dbg !8733

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8733
  %5 = load i8*, i8** %4, align 4, !dbg !8733
  br label %6, !dbg !8733

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8734
  ret i8* %7, !dbg !8736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8737 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8738
  ret i32 %1, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8743, metadata !DIExpression()), !dbg !8744
  %2 = zext i32 %0 to i64, !dbg !8745
  call void @llvm.dbg.value(metadata i64 %2, metadata !8746, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8751, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 1000, metadata !8752, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 1, metadata !8753, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 1, metadata !8754, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 1, metadata !8755, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 0, metadata !8756, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 0, metadata !8757, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 1, metadata !8758, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i64 0, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i64 83999, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i64 83999, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i64 83999, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i64 83999, metadata !8759, metadata !DIExpression()), !dbg !8763
  %3 = add nuw nsw i64 %2, 83999, !dbg !8765
  call void @llvm.dbg.value(metadata i64 %3, metadata !8746, metadata !DIExpression()), !dbg !8763
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8768
  %6 = udiv i32 %5, 84000, !dbg !8768
  %7 = zext i32 %6 to i64, !dbg !8768
  %8 = udiv i64 %3, 84000, !dbg !8768
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8768
  %10 = trunc i64 %9 to i32, !dbg !8770
  ret i32 %10, !dbg !8771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8772 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8774
  ret i32 %1, !dbg !8775
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8778, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8* %1, metadata !8779, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8* %2, metadata !8780, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8783
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8784
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8782, metadata !DIExpression()), !dbg !8783
  store i32 0, i32* @test_result, align 4, !dbg !8785
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8786
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8787
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8787
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8787
  %8 = icmp eq void (i8*)* %7, null, !dbg !8789
  br i1 %8, label %10, label %9, !dbg !8790

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8791
  br label %10, !dbg !8793

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8794
  store i32 1, i32* @test_result, align 4, !dbg !8795
  ret void, !dbg !8796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8797 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8801, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8802, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.value(metadata i8* %1, metadata !8803, metadata !DIExpression()), !dbg !8804
  store i32 2, i32* @phase, align 4, !dbg !8805
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8806
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8806
  tail call void %4(i8* noundef %1) #25, !dbg !8807
  ret void, !dbg !8808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 0, metadata !8814, metadata !DIExpression()), !dbg !8817
  %2 = load i32, i32* @test_status, align 4, !dbg !8818
  %3 = icmp eq i32 %2, 2, !dbg !8820
  br i1 %3, label %17, label %4, !dbg !8821

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8815, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 0, metadata !8814, metadata !DIExpression()), !dbg !8817
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8823

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8815, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 %7, metadata !8814, metadata !DIExpression()), !dbg !8817
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8824
  %9 = add nsw i32 %8, %7, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %9, metadata !8814, metadata !DIExpression()), !dbg !8817
  %10 = load i32, i32* @test_status, align 4, !dbg !8828
  %11 = icmp ne i32 %10, 2, !dbg !8830
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8831
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8815, metadata !DIExpression()), !dbg !8822
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8815, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 %9, metadata !8814, metadata !DIExpression()), !dbg !8817
  br i1 %14, label %5, label %15, !dbg !8832, !llvm.loop !8833

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8817
  call void @llvm.dbg.value(metadata i32 %16, metadata !8814, metadata !DIExpression()), !dbg !8817
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8835
  br label %17, !dbg !8836

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8817
  ret i32 %18, !dbg !8837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8838 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8842, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i8* %1, metadata !8843, metadata !DIExpression()), !dbg !8853
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8854
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8854
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8844, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 0, metadata !8845, metadata !DIExpression()), !dbg !8853
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8855
  call void @llvm.dbg.value(metadata i32 0, metadata !8846, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 0, metadata !8845, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 undef, metadata !8846, metadata !DIExpression()), !dbg !8856
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8845, metadata !DIExpression()), !dbg !8853
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8857
  br i1 %8, label %9, label %16, !dbg !8858

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %11, metadata !8848, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 1, metadata !8845, metadata !DIExpression()), !dbg !8853
  %12 = load i32, i32* %7, align 4, !dbg !8861
  %13 = add i32 %12, 1, !dbg !8861
  store i32 %13, i32* %7, align 4, !dbg !8861
  %14 = icmp ne i32 %11, 0, !dbg !8862
  %15 = zext i1 %14 to i32, !dbg !8863
  br label %16, !dbg !8864

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8853
  %20 = load i32, i32* %17, align 4, !dbg !8865
  %21 = add i32 %20, %18, !dbg !8865
  store i32 %21, i32* %17, align 4, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %19, metadata !8845, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 undef, metadata !8846, metadata !DIExpression()), !dbg !8856
  ret i32 %19, !dbg !8866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8867 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8871
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8869, metadata !DIExpression()), !dbg !8872
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8873

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8874
  ret void, !dbg !8875

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8869, metadata !DIExpression()), !dbg !8872
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8876
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8869, metadata !DIExpression()), !dbg !8872
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8880
  br i1 %5, label %2, label %1, !dbg !8873, !llvm.loop !8881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8887, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8888, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 0, metadata !8889, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8891
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8892
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8888, metadata !DIExpression()), !dbg !8891
  %3 = load i8*, i8** %2, align 4, !dbg !8893
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8894
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8888, metadata !DIExpression()), !dbg !8891
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8895
  br i1 %5, label %36, label %6, !dbg !8896

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8897
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8897
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8900
  %11 = load i32, i32* %10, align 4, !dbg !8900
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8901
  %13 = load i32, i32* %12, align 4, !dbg !8901
  %14 = icmp eq i32 %11, %13, !dbg !8902
  br i1 %14, label %20, label %15, !dbg !8903

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8904
  %17 = load i32, i32* %16, align 4, !dbg !8904
  %18 = icmp ne i32 %17, %13, !dbg !8906
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8907
  call void @llvm.dbg.value(metadata i32 %21, metadata !8889, metadata !DIExpression()), !dbg !8891
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8908
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8908
  %24 = load i8*, i8** %23, align 4, !dbg !8908
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8908
  %26 = load i8*, i8** %25, align 4, !dbg !8908
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8908
  %28 = load i32, i32* %27, align 4, !dbg !8908
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8908
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8908
  call void @llvm.dbg.value(metadata i32 poison, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8888, metadata !DIExpression()), !dbg !8891
  %33 = load i8*, i8** %2, align 4, !dbg !8893
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8894
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8888, metadata !DIExpression()), !dbg !8891
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8895
  br i1 %35, label %36, label %6, !dbg !8896, !llvm.loop !8909

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8913 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8915, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8916, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8917, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8918, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8920, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8921, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8922, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8924, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8925, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8918, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8917, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8916, metadata !DIExpression()), !dbg !8929
  %3 = load i8*, i8** %2, align 4, !dbg !8930
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8931
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8927, metadata !DIExpression()), !dbg !8929
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8932
  br i1 %5, label %58, label %6, !dbg !8933

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8928, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %9, metadata !8919, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %10, metadata !8918, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %11, metadata !8917, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %12, metadata !8916, metadata !DIExpression()), !dbg !8929
  %13 = add nuw nsw i32 %9, 1, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %13, metadata !8919, metadata !DIExpression()), !dbg !8929
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8936
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8936
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8937
  %17 = load i32, i32* %16, align 4, !dbg !8937
  %18 = add i32 %17, %8, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %18, metadata !8928, metadata !DIExpression()), !dbg !8929
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8939
  %20 = load i32, i32* %19, align 4, !dbg !8939
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8941
  %22 = load i32, i32* %21, align 4, !dbg !8941
  %23 = icmp eq i32 %20, %22, !dbg !8942
  br i1 %23, label %24, label %26, !dbg !8943

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %25, metadata !8918, metadata !DIExpression()), !dbg !8929
  br label %34, !dbg !8946

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8947
  %28 = load i32, i32* %27, align 4, !dbg !8947
  %29 = icmp eq i32 %28, %22, !dbg !8949
  br i1 %29, label %30, label %32, !dbg !8950

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %31, metadata !8916, metadata !DIExpression()), !dbg !8929
  br label %34, !dbg !8953

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %33, metadata !8917, metadata !DIExpression()), !dbg !8929
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8929
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8929
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8929
  call void @llvm.dbg.value(metadata i32 %18, metadata !8928, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %13, metadata !8919, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %37, metadata !8918, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %36, metadata !8917, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %35, metadata !8916, metadata !DIExpression()), !dbg !8929
  %38 = load i8*, i8** %2, align 4, !dbg !8930
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8931
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8927, metadata !DIExpression()), !dbg !8929
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8932
  br i1 %40, label %41, label %6, !dbg !8933, !llvm.loop !8956

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8958
  br i1 %42, label %58, label %43, !dbg !8960

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8961
  %45 = zext i1 %44 to i32, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %45, metadata !8926, metadata !DIExpression()), !dbg !8929
  %46 = sub nsw i32 %13, %37, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %46, metadata !8920, metadata !DIExpression()), !dbg !8929
  %47 = mul nsw i32 %35, 100000, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %47, metadata !8921, metadata !DIExpression()), !dbg !8929
  %48 = sdiv i32 %47, %46, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %48, metadata !8922, metadata !DIExpression()), !dbg !8929
  %49 = sdiv i32 %48, 1000, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %49, metadata !8923, metadata !DIExpression()), !dbg !8929
  %50 = mul nsw i32 %49, -1000, !dbg !8968
  %51 = add i32 %50, %48, !dbg !8969
  %52 = sdiv i32 %51, 10, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %52, metadata !8924, metadata !DIExpression()), !dbg !8929
  %53 = mul nsw i32 %52, -10, !dbg !8971
  %54 = add i32 %53, %51, !dbg !8972
  call void @llvm.dbg.value(metadata i32 %54, metadata !8925, metadata !DIExpression()), !dbg !8929
  %55 = icmp sgt i32 %54, 4, !dbg !8973
  %56 = zext i1 %55 to i32, !dbg !8975
  %57 = add nsw i32 %52, %56, !dbg !8975
  br label %58, !dbg !8975

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8976
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8976
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8976
  call void @llvm.dbg.value(metadata i32 %66, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %65, metadata !8924, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %64, metadata !8923, metadata !DIExpression()), !dbg !8929
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8977
  %68 = load i8*, i8** %2, align 4, !dbg !8977
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8977
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8982, metadata !DIExpression()), !dbg !8983
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8982, metadata !DIExpression()), !dbg !8983
  %3 = load i8*, i8** %2, align 4, !dbg !8984
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8985
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8982, metadata !DIExpression()), !dbg !8983
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8986
  br i1 %5, label %22, label %6, !dbg !8987

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8988
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8988
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8990
  store i32 0, i32* %10, align 4, !dbg !8991
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8992
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8993
  store i32 0, i32* %12, align 4, !dbg !8994
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8995
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8996
  store i32 0, i32* %14, align 4, !dbg !8997
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8998
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8999
  store i32 0, i32* %16, align 4, !dbg !9000
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9001
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9002
  store i32 0, i32* %18, align 4, !dbg !9003
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8982, metadata !DIExpression()), !dbg !8983
  %19 = load i8*, i8** %2, align 4, !dbg !8984
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8985
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8982, metadata !DIExpression()), !dbg !8983
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8986
  br i1 %21, label %22, label %6, !dbg !8987, !llvm.loop !9004

22:                                               ; preds = %6, %1
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9009, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9010, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i8 poison, metadata !9009, metadata !DIExpression()), !dbg !9012
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9013

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i8 poison, metadata !9009, metadata !DIExpression()), !dbg !9012
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9017

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9010, metadata !DIExpression()), !dbg !9012
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9019
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9019
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9023
  %9 = load i32, i32* %8, align 4, !dbg !9023
  %10 = icmp eq i32 %9, 0, !dbg !9024
  br i1 %10, label %11, label %14, !dbg !9025

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9026
  %13 = load i8*, i8** %12, align 4, !dbg !9026
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i8 0, metadata !9009, metadata !DIExpression()), !dbg !9012
  br label %14, !dbg !9029

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9009, metadata !DIExpression()), !dbg !9012
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9010, metadata !DIExpression()), !dbg !9012
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9031
  br i1 %17, label %3, label %1, !dbg !9013, !llvm.loop !9032

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9011, metadata !DIExpression()), !dbg !9012
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9034
  %22 = load i8*, i8** %21, align 4, !dbg !9034
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9037
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9010, metadata !DIExpression()), !dbg !9012
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9038
  br i1 %24, label %25, label %29, !dbg !9040

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9041
  %27 = load i8*, i8** %26, align 4, !dbg !9041
  %28 = load i8*, i8** %21, align 4, !dbg !9043
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9044
  call void @llvm.dbg.value(metadata i8 0, metadata !9009, metadata !DIExpression()), !dbg !9012
  br label %29, !dbg !9045

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9009, metadata !DIExpression()), !dbg !9012
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9046
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9011, metadata !DIExpression()), !dbg !9012
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9047
  br i1 %32, label %18, label %33, !dbg !9017, !llvm.loop !9048

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9050

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9051
  br label %36, !dbg !9054

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9011, metadata !DIExpression()), !dbg !9012
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9055

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9011, metadata !DIExpression()), !dbg !9012
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9057
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9057
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9061
  %42 = load i32, i32* %41, align 4, !dbg !9061
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9062
  %44 = load i32, i32* %43, align 4, !dbg !9062
  %45 = add i32 %44, %42, !dbg !9063
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9064
  %47 = load i32, i32* %46, align 4, !dbg !9064
  %48 = add i32 %45, %47, !dbg !9065
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9066
  %50 = load i32, i32* %49, align 4, !dbg !9066
  %51 = icmp eq i32 %48, %50, !dbg !9067
  br i1 %51, label %57, label %52, !dbg !9068

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9069
  %54 = load i8*, i8** %53, align 4, !dbg !9069
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9071
  %56 = load i8*, i8** %55, align 4, !dbg !9071
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9072
  store i32 1, i32* @test_status, align 4, !dbg !9073
  br label %57, !dbg !9074

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9075
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9011, metadata !DIExpression()), !dbg !9012
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9076
  br i1 %59, label %37, label %60, !dbg !9055, !llvm.loop !9077

60:                                               ; preds = %57, %36
  ret void, !dbg !9079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9084
  tail call void %2(i8* noundef %0) #25, !dbg !9085
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9087 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9088
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9089
  ret void, !dbg !9090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9091 {
  tail call void @test_main() #24, !dbg !9092
  tail call void @end_report() #24, !dbg !9093
  ret void, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9097, metadata !DIExpression()), !dbg !9098
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9099
  ret void, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i8 1, metadata !9105, metadata !DIExpression()), !dbg !9106
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9107
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9107
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9109
  br i1 %5, label %8, label %6, !dbg !9110

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9111
  call void @llvm.dbg.value(metadata i1 %7, metadata !9105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9106
  br label %8, !dbg !9113

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9105, metadata !DIExpression()), !dbg !9106
  ret i1 %9, !dbg !9114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9115 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9117, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i8* undef, metadata !9118, metadata !DIExpression()), !dbg !9119
  ret i1 true, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9121 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9124, metadata !DIExpression()), !dbg !9125
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9126, !srcloc !9128
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9129
  ret void, !dbg !9130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  ret i8* %0, !dbg !9137
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9140, metadata !DIExpression()), !dbg !9141
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9142
  ret void, !dbg !9143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9148, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i32 %1, metadata !9149, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9150, metadata !DIExpression()), !dbg !9154
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9155
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9155
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9155
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9151, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i32 %0, metadata !9153, metadata !DIExpression()), !dbg !9154
  %7 = icmp slt i32 %0, %1, !dbg !9156
  br i1 %7, label %8, label %22, !dbg !9159

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9153, metadata !DIExpression()), !dbg !9154
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9160
  %11 = icmp eq i32 %10, 0, !dbg !9160
  br i1 %11, label %19, label %12, !dbg !9163

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9164
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9166
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9166
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9168
  br i1 %15, label %19, label %16, !dbg !9169

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9170
  %18 = load i8*, i8** %17, align 4, !dbg !9170
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9171
  br label %19, !dbg !9172

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9173
  call void @llvm.dbg.value(metadata i32 %20, metadata !9153, metadata !DIExpression()), !dbg !9154
  %21 = icmp eq i32 %20, %1, !dbg !9156
  br i1 %21, label %22, label %8, !dbg !9159, !llvm.loop !9174

22:                                               ; preds = %19, %3
  ret void, !dbg !9176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9179, metadata !DIExpression()), !dbg !9180
  %2 = shl nuw i32 1, %0, !dbg !9181
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9184
  ret i32 %3, !dbg !9185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9190, metadata !DIExpression()), !dbg !9191
  %2 = shl nuw i32 1, %0, !dbg !9192
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9195
  ret void, !dbg !9196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9200, metadata !DIExpression()), !dbg !9201
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9202
  ret void, !dbg !9203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9206, metadata !DIExpression()), !dbg !9207
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9208
  %3 = and i32 %2, %0, !dbg !9208
  %4 = icmp eq i32 %3, %0, !dbg !9209
  %5 = zext i1 %4 to i32, !dbg !9209
  ret i32 %5, !dbg !9210
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9213, metadata !DIExpression()), !dbg !9214
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9215
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9219, metadata !DIExpression()), !dbg !9220
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9221
  ret void, !dbg !9222
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9225, metadata !DIExpression()), !dbg !9226
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9227
  ret void, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9231, metadata !DIExpression()), !dbg !9232
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9233
  ret void, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9237, metadata !DIExpression()), !dbg !9238
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9239
  ret void, !dbg !9240
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9243, metadata !DIExpression()), !dbg !9244
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9249, metadata !DIExpression()), !dbg !9250
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9251
  ret void, !dbg !9252
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9255, metadata !DIExpression()), !dbg !9256
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9261, metadata !DIExpression()), !dbg !9262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9263
  ret void, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9269
  ret void, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9275
  ret i32 0, !dbg !9276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !866 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !870, metadata !DIExpression()), !dbg !9277
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9278
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9280
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9282
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9284
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9286
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9288
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9290
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9292
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9294
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9296
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9298
  ret void, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9303, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 0, metadata !9304, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 undef, metadata !9304, metadata !DIExpression()), !dbg !9305
  %2 = lshr i32 6684671, %0, !dbg !9306
  %3 = and i32 %2, 1, !dbg !9306
  %4 = or i32 %3, %0, !dbg !9308
  %5 = icmp eq i32 %4, 0, !dbg !9308
  br i1 %5, label %6, label %7, !dbg !9308

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9309
  unreachable, !dbg !9309

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9314
  %9 = load i32, i32* %8, align 4, !dbg !9314
  call void @llvm.dbg.value(metadata i32 %9, metadata !9304, metadata !DIExpression()), !dbg !9305
  %10 = shl nuw i32 1, %0, !dbg !9315
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9316
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9317
  ret void, !dbg !9318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9321, metadata !DIExpression()), !dbg !9322
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9323
  %3 = or i32 %2, %0, !dbg !9323
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9323
  ret void, !dbg !9324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9327, metadata !DIExpression()), !dbg !9328
  %2 = icmp slt i32 %0, 32, !dbg !9329
  br i1 %2, label %3, label %5, !dbg !9331

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9332
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9334
  br label %5, !dbg !9335

5:                                                ; preds = %1, %3
  ret void, !dbg !9336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9339, metadata !DIExpression()), !dbg !9340
  %2 = xor i32 %0, -1, !dbg !9341
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9341
  %4 = and i32 %3, %2, !dbg !9341
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9341
  ret void, !dbg !9342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9347, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i32 %1, metadata !9348, metadata !DIExpression()), !dbg !9349
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9350

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9351
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9353
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9354
  br label %11, !dbg !9355

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9356
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9357
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9358
  br label %11, !dbg !9359

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9360
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9361
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9362
  br label %11, !dbg !9363

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9364
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9365
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9366
  br label %11, !dbg !9367

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9371, metadata !DIExpression()), !dbg !9372
  %2 = xor i32 %0, -1, !dbg !9373
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9373
  %4 = and i32 %3, %2, !dbg !9373
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9373
  ret void, !dbg !9374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9377, metadata !DIExpression()), !dbg !9378
  %2 = xor i32 %0, -1, !dbg !9379
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9379
  %4 = and i32 %3, %2, !dbg !9379
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9379
  ret void, !dbg !9380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9384
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9385
  %3 = or i32 %2, %0, !dbg !9385
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9385
  ret void, !dbg !9386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9389, metadata !DIExpression()), !dbg !9390
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9391
  %3 = or i32 %2, %0, !dbg !9391
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9391
  ret void, !dbg !9392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9397, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9398, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i8* %2, metadata !9399, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9400, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9402, metadata !DIExpression()), !dbg !9403
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9404
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9404
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9406
  br i1 %6, label %7, label %9, !dbg !9407

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9408
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9409
  store i8* %2, i8** %8, align 4, !dbg !9410
  br label %9, !dbg !9411

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9403
  ret i32 %10, !dbg !9412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9417, metadata !DIExpression()), !dbg !9418
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9419
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9420
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9421
  store i8* null, i8** %3, align 4, !dbg !9422
  ret void, !dbg !9423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9428, metadata !DIExpression()), !dbg !9431
  %3 = bitcast i8* %1 to i32*, !dbg !9432
  %4 = load i32, i32* %3, align 4, !dbg !9432
  %5 = add i32 %4, -169, !dbg !9432
  %6 = icmp ult i32 %5, -121, !dbg !9432
  br i1 %6, label %15, label %7, !dbg !9434

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9435
  %9 = inttoptr i32 %8 to i32*, !dbg !9436
  call void @llvm.dbg.value(metadata i32* %9, metadata !9429, metadata !DIExpression()), !dbg !9431
  %10 = load volatile i32, i32* %9, align 4, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %10, metadata !9430, metadata !DIExpression()), !dbg !9431
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9438
  %12 = bitcast i8* %11 to i32*, !dbg !9438
  %13 = load i32, i32* %12, align 4, !dbg !9438
  %14 = or i32 %13, %10, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %14, metadata !9430, metadata !DIExpression()), !dbg !9431
  store volatile i32 %14, i32* %9, align 4, !dbg !9440
  br label %15, !dbg !9441

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9431
  ret i32 %16, !dbg !9442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9445, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata i8* %1, metadata !9446, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata i8* %1, metadata !9447, metadata !DIExpression()), !dbg !9450
  %3 = bitcast i8* %1 to i32*, !dbg !9451
  %4 = load i32, i32* %3, align 4, !dbg !9451
  %5 = add i32 %4, -169, !dbg !9451
  %6 = icmp ult i32 %5, -121, !dbg !9451
  br i1 %6, label %16, label %7, !dbg !9453

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9454
  %9 = inttoptr i32 %8 to i32*, !dbg !9455
  call void @llvm.dbg.value(metadata i32* %9, metadata !9448, metadata !DIExpression()), !dbg !9450
  %10 = load volatile i32, i32* %9, align 4, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %10, metadata !9449, metadata !DIExpression()), !dbg !9450
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9457
  %12 = bitcast i8* %11 to i32*, !dbg !9457
  %13 = load i32, i32* %12, align 4, !dbg !9457
  %14 = xor i32 %13, -1, !dbg !9458
  %15 = and i32 %10, %14, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %15, metadata !9449, metadata !DIExpression()), !dbg !9450
  store volatile i32 %15, i32* %9, align 4, !dbg !9460
  br label %16, !dbg !9461

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9450
  ret i32 %17, !dbg !9462
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9465, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8* %1, metadata !9466, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32* %2, metadata !9467, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8* %1, metadata !9468, metadata !DIExpression()), !dbg !9473
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %4, metadata !9469, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32 undef, metadata !9470, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32 undef, metadata !9471, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32 %4, metadata !9472, metadata !DIExpression()), !dbg !9473
  %5 = bitcast i8* %1 to i32*, !dbg !9475
  %6 = load i32, i32* %5, align 4, !dbg !9475
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9476

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9477
  call void @llvm.dbg.value(metadata i32 %8, metadata !9470, metadata !DIExpression()), !dbg !9473
  br label %19, !dbg !9478

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9480
  call void @llvm.dbg.value(metadata i32 %10, metadata !9471, metadata !DIExpression()), !dbg !9473
  br label %19, !dbg !9481

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9482
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #24, !dbg !9483
  br label %19, !dbg !9484

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9485
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9486
  br label %19, !dbg !9487

17:                                               ; preds = %3
  br label %19, !dbg !9488

18:                                               ; preds = %3
  br label %19, !dbg !9489

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9490
  br label %21, !dbg !9491

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9473
  ret i32 %22, !dbg !9491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9494, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i8* %1, metadata !9495, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i8* %2, metadata !9496, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i8* %1, metadata !9497, metadata !DIExpression()), !dbg !9502
  %4 = bitcast i8* %1 to i32*, !dbg !9503
  %5 = load i32, i32* %4, align 4, !dbg !9503
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %6, metadata !9501, metadata !DIExpression()), !dbg !9502
  %7 = icmp slt i32 %6, 0, !dbg !9505
  br i1 %7, label %22, label %8, !dbg !9507

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9497, metadata !DIExpression()), !dbg !9502
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9508
  %10 = bitcast i8* %9 to i32*, !dbg !9508
  %11 = load i32, i32* %10, align 4, !dbg !9508
  %12 = lshr i32 %11, 16, !dbg !9508
  %13 = and i32 %12, 7, !dbg !9508
  %14 = lshr i32 %11, 8, !dbg !9509
  %15 = and i32 %14, 31, !dbg !9509
  %16 = shl i32 %13, %15, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %16, metadata !9500, metadata !DIExpression()), !dbg !9502
  %17 = and i32 %11, 255, !dbg !9511
  %18 = or i32 %17, 1073887232, !dbg !9512
  %19 = inttoptr i32 %18 to i32*, !dbg !9513
  call void @llvm.dbg.value(metadata i32* %19, metadata !9498, metadata !DIExpression()), !dbg !9502
  %20 = load volatile i32, i32* %19, align 4, !dbg !9514
  call void @llvm.dbg.value(metadata i32 %20, metadata !9499, metadata !DIExpression()), !dbg !9502
  %21 = or i32 %16, %20, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %21, metadata !9499, metadata !DIExpression()), !dbg !9502
  store volatile i32 %21, i32* %19, align 4, !dbg !9516
  br label %22, !dbg !9517

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9502
  ret i32 %23, !dbg !9518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 0, metadata !9524, metadata !DIExpression()), !dbg !9525
  %2 = add i32 %0, -1, !dbg !9526
  %3 = icmp ult i32 %2, 6, !dbg !9526
  br i1 %3, label %4, label %7, !dbg !9526

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9526
  %6 = load i32, i32* %5, align 4, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %6, metadata !9524, metadata !DIExpression()), !dbg !9525
  br label %7, !dbg !9527

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9525
  ret i32 %8, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9533, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32 %1, metadata !9534, metadata !DIExpression()), !dbg !9535
  %3 = udiv i32 %0, %1, !dbg !9536
  ret i32 %3, !dbg !9537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9542, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 16, metadata !9543, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 336, metadata !9544, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()), !dbg !9546
  %3 = mul i32 %0, 336, !dbg !9547
  %4 = shl nsw i32 %1, 4, !dbg !9548
  %5 = udiv i32 %3, %4, !dbg !9549
  ret i32 %5, !dbg !9550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9551 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9553, metadata !DIExpression()), !dbg !9556
  tail call void @config_enable_default_clocks() #25, !dbg !9557
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9558
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9558
  %4 = lshr i32 %3, 4, !dbg !9558
  %5 = and i32 %4, 15, !dbg !9558
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9558
  %7 = load i8, i8* %6, align 1, !dbg !9558
  %8 = zext i8 %7 to i32, !dbg !9558
  %9 = lshr i32 %2, %8, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %9, metadata !9554, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9556
  %10 = icmp ult i32 %9, 84000000, !dbg !9559
  br i1 %10, label %11, label %13, !dbg !9561

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9562
  br label %13, !dbg !9564

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9565
  tail call fastcc void @set_up_plls() #24, !dbg !9566
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9567
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9570
  br label %14, !dbg !9571

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9572
  %16 = icmp eq i32 %15, 8, !dbg !9573
  br i1 %16, label %17, label %14, !dbg !9571, !llvm.loop !9574

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9576
  br i1 %18, label %19, label %21, !dbg !9578

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9579
  br label %21, !dbg !9581

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9582
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9583
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9584
  ret i32 0, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9586 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9588
  %2 = and i32 %1, 240, !dbg !9588
  ret i32 %2, !dbg !9589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9590 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9591
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9596
  br label %1, !dbg !9597

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9598
  %3 = icmp eq i32 %2, 1, !dbg !9599
  br i1 %3, label %4, label %1, !dbg !9597, !llvm.loop !9600

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9602
  br label %5, !dbg !9605

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9606
  %7 = icmp eq i32 %6, 1, !dbg !9607
  br i1 %7, label %8, label %5, !dbg !9605, !llvm.loop !9608

8:                                                ; preds = %5
  ret void, !dbg !9610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9611 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9612
  %2 = icmp eq i32 %1, 8, !dbg !9614
  br i1 %2, label %3, label %4, !dbg !9615

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9616
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9618
  br label %4, !dbg !9619

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9620
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9621
  %6 = and i32 %5, -196609, !dbg !9621
  %7 = or i32 %6, 65536, !dbg !9621
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9621
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9622
  %9 = and i32 %8, -251658241, !dbg !9622
  %10 = or i32 %9, 117440512, !dbg !9622
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9622
  tail call void @config_pll_sysclock() #25, !dbg !9623
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9624
  br label %11, !dbg !9625

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9626
  %13 = icmp eq i32 %12, 1, !dbg !9627
  br i1 %13, label %14, label %11, !dbg !9625, !llvm.loop !9628

14:                                               ; preds = %11
  ret void, !dbg !9630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9633, metadata !DIExpression()), !dbg !9634
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9635
  %2 = and i32 %1, -241, !dbg !9635
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9641
  %3 = and i32 %2, -4, !dbg !9641
  %4 = or i32 %3, %0, !dbg !9641
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9641
  ret void, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9643 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  %2 = and i32 %1, 12, !dbg !9644
  ret i32 %2, !dbg !9645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9646 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9648, metadata !DIExpression()), !dbg !9649
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9650
  %2 = and i32 %1, -7169, !dbg !9650
  %3 = or i32 %2, 4096, !dbg !9650
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9654, metadata !DIExpression()), !dbg !9655
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9656
  %2 = and i32 %1, -57345, !dbg !9656
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9658 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9659
  %2 = icmp eq i32 %1, 1, !dbg !9661
  br i1 %2, label %7, label %3, !dbg !9662

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9663
  br label %4, !dbg !9665

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9666
  %6 = icmp eq i32 %5, 1, !dbg !9667
  br i1 %6, label %7, label %4, !dbg !9665, !llvm.loop !9668

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9670
  br label %8, !dbg !9671

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9672
  %10 = icmp eq i32 %9, 0, !dbg !9673
  br i1 %10, label %11, label %8, !dbg !9671, !llvm.loop !9674

11:                                               ; preds = %8
  ret void, !dbg !9676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %2 = and i32 %1, -16777217, !dbg !9678
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = or i32 %1, 16777216, !dbg !9681
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9684
  %2 = lshr i32 %1, 25, !dbg !9685
  %3 = and i32 %2, 1, !dbg !9685
  ret i32 %3, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9688
  %2 = lshr i32 %1, 1, !dbg !9689
  %3 = and i32 %2, 1, !dbg !9689
  ret i32 %3, !dbg !9690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9691 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9692
  %2 = or i32 %1, 1, !dbg !9692
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9692
  ret void, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9694 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9695
  %2 = and i32 %1, -262145, !dbg !9695
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9698
  %2 = or i32 %1, 65536, !dbg !9698
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9701
  %2 = lshr i32 %1, 17, !dbg !9702
  %3 = and i32 %2, 1, !dbg !9702
  ret i32 %3, !dbg !9703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9704 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9705
  %2 = or i32 %1, 1, !dbg !9705
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9705
  ret void, !dbg !9706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9708
  %2 = lshr i32 %1, 1, !dbg !9709
  %3 = and i32 %2, 1, !dbg !9709
  ret i32 %3, !dbg !9710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9711 {
  ret i32 16000000, !dbg !9713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9717 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9718
  ret void, !dbg !9719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9720 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9724, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 16, metadata !9725, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 336, metadata !9726, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 65536, metadata !9727, metadata !DIExpression()), !dbg !9728
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9729
  %2 = and i32 %1, -4227072, !dbg !9729
  %3 = or i32 %2, 4215824, !dbg !9729
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9729
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9730
  %5 = and i32 %4, -196609, !dbg !9730
  %6 = or i32 %5, 65536, !dbg !9730
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9730
  ret void, !dbg !9731
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9732 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9735 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9738, metadata !DIExpression()), !dbg !9740
  %2 = bitcast i32* %1 to i8*, !dbg !9741
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9741
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9739, metadata !DIExpression()), !dbg !9742
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9743
  %4 = or i32 %3, 268435456, !dbg !9743
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9743
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9744
  %6 = and i32 %5, 268435456, !dbg !9744
  store volatile i32 %6, i32* %1, align 4, !dbg !9745
  %7 = load volatile i32, i32* %1, align 4, !dbg !9746
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9747
  ret void, !dbg !9747
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9748 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9750, metadata !DIExpression()), !dbg !9751
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9752
  br i1 %2, label %3, label %4, !dbg !9754

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9755
  br label %4, !dbg !9756

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9751
  ret i32 %5, !dbg !9757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9763, metadata !DIExpression()), !dbg !9764
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9765, !srcloc !9767
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9768
  ret i1 %1, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9770 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9771
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9776, metadata !DIExpression()), !dbg !9777
  %2 = icmp eq i32 %0, 10, !dbg !9778
  br i1 %2, label %3, label %4, !dbg !9780

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9781
  br label %4, !dbg !9783

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9784
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9785
  ret i32 %0, !dbg !9786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9790, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8 %0, metadata !9791, metadata !DIExpression()), !dbg !9792
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9793, !srcloc !9795
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9800, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i8 %0, metadata !9801, metadata !DIExpression()), !dbg !9803
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9804
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9802, metadata !DIExpression()), !dbg !9803
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9805
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9805
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #25, !dbg !9806
  ret void, !dbg !9807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9808 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9810, metadata !DIExpression()), !dbg !9811
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #25, !dbg !9812
  ret i1 %1, !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9865, metadata !DIExpression()), !dbg !9866
  ret void, !dbg !9867
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9868 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9870, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i8 %1, metadata !9871, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i32 %2, metadata !9872, metadata !DIExpression()), !dbg !9875
  %5 = bitcast i32* %4 to i8*, !dbg !9876
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9876
  call void @llvm.dbg.value(metadata i32* %4, metadata !9874, metadata !DIExpression(DW_OP_deref)), !dbg !9875
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %6, metadata !9873, metadata !DIExpression()), !dbg !9875
  %7 = icmp eq i32 %6, 0, !dbg !9878
  br i1 %7, label %8, label %31, !dbg !9880

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9873, metadata !DIExpression()), !dbg !9875
  %9 = and i32 %2, 131072, !dbg !9881
  %10 = icmp eq i32 %9, 0, !dbg !9883
  br i1 %10, label %28, label %11, !dbg !9884

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9885
  %13 = icmp eq i32 %12, 0, !dbg !9888
  br i1 %13, label %18, label %14, !dbg !9889

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9890
  %16 = shl nuw i32 1, %15, !dbg !9890
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9892
  br label %25, !dbg !9893

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9894
  %20 = icmp eq i32 %19, 0, !dbg !9896
  %21 = zext i8 %1 to i32, !dbg !9875
  br i1 %20, label %25, label %22, !dbg !9897

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9898
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9900
  br label %25, !dbg !9901

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9902
  %27 = load i32, i32* %4, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %30, metadata !9874, metadata !DIExpression()), !dbg !9875
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9904
  br label %31, !dbg !9905

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9902
  %30 = load i32, i32* %4, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %30, metadata !9874, metadata !DIExpression()), !dbg !9875
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9904
  call void @llvm.dbg.value(metadata i32 0, metadata !9873, metadata !DIExpression()), !dbg !9875
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9906
  ret i32 %6, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9911, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i32* %1, metadata !9912, metadata !DIExpression()), !dbg !9916
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9917
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9917
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9917
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9913, metadata !DIExpression()), !dbg !9916
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9918
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9918
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9918
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9915, metadata !DIExpression()), !dbg !9916
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9919
  store i32 %9, i32* %1, align 4, !dbg !9920
  ret i32 0, !dbg !9921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9924, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %1, metadata !9925, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %2, metadata !9926, metadata !DIExpression()), !dbg !9930
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9931
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9931
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9927, metadata !DIExpression()), !dbg !9930
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9932
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9932
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9932
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9928, metadata !DIExpression()), !dbg !9930
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9933
  call void @llvm.dbg.value(metadata i32 %10, metadata !9929, metadata !DIExpression()), !dbg !9930
  %11 = xor i32 %1, -1, !dbg !9934
  %12 = and i32 %10, %11, !dbg !9935
  %13 = and i32 %2, %1, !dbg !9936
  %14 = or i32 %12, %13, !dbg !9937
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9938
  ret i32 0, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9942, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.value(metadata i32 %1, metadata !9943, metadata !DIExpression()), !dbg !9946
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9947
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9947
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9947
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9944, metadata !DIExpression()), !dbg !9946
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9948
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9948
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9948
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9945, metadata !DIExpression()), !dbg !9946
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9949
  store volatile i32 %1, i32* %9, align 4, !dbg !9949
  ret i32 0, !dbg !9950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9953, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 %1, metadata !9954, metadata !DIExpression()), !dbg !9957
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9958
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9958
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9958
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9955, metadata !DIExpression()), !dbg !9957
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9959
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9959
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9956, metadata !DIExpression()), !dbg !9957
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9960
  ret i32 0, !dbg !9961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9964, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %1, metadata !9965, metadata !DIExpression()), !dbg !9968
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9969
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9969
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9966, metadata !DIExpression()), !dbg !9968
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9970
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9970
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9970
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9967, metadata !DIExpression()), !dbg !9968
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9971
  %10 = load volatile i32, i32* %9, align 4, !dbg !9971
  %11 = xor i32 %10, %1, !dbg !9971
  store volatile i32 %11, i32* %9, align 4, !dbg !9971
  ret i32 0, !dbg !9972
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9975, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i8 %1, metadata !9976, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %2, metadata !9977, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %3, metadata !9978, metadata !DIExpression()), !dbg !9985
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9986
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9986
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9986
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9979, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i8* undef, metadata !9980, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 0, metadata !9982, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9985
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9987

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9988
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9992
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9993
  %12 = load i32, i32* %11, align 4, !dbg !9993
  %13 = icmp eq i32 %10, %12, !dbg !9994
  br i1 %13, label %14, label %29, !dbg !9995

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9996
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9998
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9999
  br label %29, !dbg !10000

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10001
  %17 = load i8*, i8** %16, align 4, !dbg !10001
  call void @llvm.dbg.value(metadata i8* %17, metadata !9980, metadata !DIExpression()), !dbg !9985
  %18 = zext i8 %1 to i32, !dbg !10002
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10004
  %20 = icmp eq i32 %19, 0, !dbg !10005
  br i1 %20, label %21, label %29, !dbg !10006

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10007
  %23 = load i32, i32* %22, align 4, !dbg !10007
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10008
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10009

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9982, metadata !DIExpression()), !dbg !9985
  br label %27, !dbg !10010

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9982, metadata !DIExpression()), !dbg !9985
  br label %27, !dbg !10012

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9982, metadata !DIExpression()), !dbg !9985
  br label %27, !dbg !10013

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9985
  call void @llvm.dbg.value(metadata i32 %28, metadata !9982, metadata !DIExpression()), !dbg !9985
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10014
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10015
  br label %29, !dbg !10015

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9985
  call void @llvm.dbg.value(metadata i32 %30, metadata !9983, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.label(metadata !9984), !dbg !10016
  ret i32 %30, !dbg !10017
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10021, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i1 %2, metadata !10022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10024
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10025
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10025
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10025
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10023, metadata !DIExpression()), !dbg !10024
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10026
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10027
  ret i32 %8, !dbg !10028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i1 %2, metadata !10037, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10038
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10039
  br i1 %4, label %5, label %6, !dbg !10042

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10043
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10043
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10043
  unreachable, !dbg !10043

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10045
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10045
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10045
  br i1 %9, label %10, label %11, !dbg !10048

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10049
  unreachable, !dbg !10049

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10051
  br i1 %12, label %18, label %13, !dbg !10053

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10054
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10057
  %16 = or i1 %15, %2, !dbg !10058
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10058
  br i1 %2, label %19, label %21, !dbg !10058

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10059

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10060
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10063
  br label %21, !dbg !10064

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10038
  ret i32 %22, !dbg !10065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10066 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10070, metadata !DIExpression()), !dbg !10071
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10072
  %3 = icmp eq %struct._snode* %2, null, !dbg !10072
  ret i1 %3, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10073 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10077, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10079, metadata !DIExpression()), !dbg !10081
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10082
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10079, metadata !DIExpression()), !dbg !10081
  %4 = icmp eq %struct._snode* %3, null, !dbg !10084
  br i1 %4, label %15, label %5, !dbg !10082

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10079, metadata !DIExpression()), !dbg !10081
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10086
  br i1 %6, label %9, label %11, !dbg !10089

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10079, metadata !DIExpression()), !dbg !10081
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10086
  br i1 %8, label %9, label %11, !dbg !10089, !llvm.loop !10090

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10091
  br label %15, !dbg !10091

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10079, metadata !DIExpression()), !dbg !10081
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10084
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10080, metadata !DIExpression()), !dbg !10081
  %14 = icmp eq %struct._snode* %13, null, !dbg !10084
  br i1 %14, label %15, label %7, !dbg !10082, !llvm.loop !10090

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10094 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10099, metadata !DIExpression()), !dbg !10100
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10101
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10101
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10101
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10102
  %5 = icmp eq %struct._snode* %4, null, !dbg !10102
  br i1 %5, label %6, label %8, !dbg !10101

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10104
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10104
  br label %8, !dbg !10104

8:                                                ; preds = %6, %2
  ret void, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10106 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10110, metadata !DIExpression()), !dbg !10111
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10112
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10112
  ret %struct._snode* %3, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10114 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10119, metadata !DIExpression()), !dbg !10120
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10121
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10122
  ret void, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10126, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10127, metadata !DIExpression()), !dbg !10128
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10129
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10130
  ret void, !dbg !10131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10134, metadata !DIExpression()), !dbg !10135
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10136
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10136
  ret %struct._snode* %3, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10140, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10141, metadata !DIExpression()), !dbg !10142
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10143
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10146 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10150, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10151, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10152, metadata !DIExpression()), !dbg !10153
  %4 = icmp eq %struct._snode* %1, null, !dbg !10154
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10156
  br i1 %4, label %6, label %11, !dbg !10157

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10158
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10160
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10160
  br i1 %8, label %9, label %15, !dbg !10158

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10162
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10162
  br label %15, !dbg !10162

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10164
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10166
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10166
  br i1 %13, label %14, label %15, !dbg !10164

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10168
  br label %15, !dbg !10168

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10157
  ret void, !dbg !10157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10174, metadata !DIExpression()), !dbg !10175
  %2 = icmp eq %struct._snode* %0, null, !dbg !10176
  br i1 %2, label %5, label %3, !dbg !10176

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10176
  br label %5, !dbg !10176

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10176
  ret %struct._snode* %6, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10179, metadata !DIExpression()), !dbg !10180
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10181
  ret %struct._snode* %2, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10182 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10186
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10186
  ret %struct._snode* %3, !dbg !10187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10190, metadata !DIExpression()), !dbg !10193
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10194, !range !10195
  call void @llvm.dbg.value(metadata i32 %2, metadata !10191, metadata !DIExpression()), !dbg !10193
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10196
  call void @llvm.dbg.value(metadata i32 %3, metadata !10192, metadata !DIExpression()), !dbg !10193
  ret i32 %3, !dbg !10197
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8* %1, metadata !10201, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8* %1, metadata !10202, metadata !DIExpression()), !dbg !10203
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10204
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10204
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10205
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10205
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10205
  %8 = shl nuw i32 1, %0, !dbg !10206
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10207
  ret void, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10209 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10213, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata i32 %1, metadata !10214, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10215, metadata !DIExpression()), !dbg !10219
  %4 = bitcast i64* %3 to i8*, !dbg !10220
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10220
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10217, metadata !DIExpression()), !dbg !10219
  store i64 70368744177732, i64* %3, align 8, !dbg !10221
  call void @llvm.dbg.value(metadata i64* %3, metadata !10217, metadata !DIExpression(DW_OP_deref)), !dbg !10219
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10222
  call void @llvm.dbg.value(metadata i32 %5, metadata !10218, metadata !DIExpression()), !dbg !10219
  %6 = icmp eq i32 %5, 0, !dbg !10223
  br i1 %6, label %7, label %8, !dbg !10225

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10226
  br label %8, !dbg !10227

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10228
  ret void, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10231, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i8* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10235
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10233, metadata !DIExpression()), !dbg !10234
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10236
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10236
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10237
  ret i32 %5, !dbg !10238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10241, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()), !dbg !10244
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %3, metadata !10243, metadata !DIExpression()), !dbg !10244
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10246
  ret void, !dbg !10247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10252, metadata !DIExpression()), !dbg !10253
  %2 = sdiv i32 %0, 4, !dbg !10254
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10255
  %6 = add nsw i32 %5, 16, !dbg !10256
  %7 = shl i32 15, %6, !dbg !10257
  %8 = or i32 %7, %2, !dbg !10258
  ret i32 %8, !dbg !10259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10264, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.value(metadata i32 %1, metadata !10265, metadata !DIExpression()), !dbg !10266
  %3 = and i32 %1, 255, !dbg !10267
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10267
  %5 = load volatile i32, i32* %4, align 4, !dbg !10267
  %6 = lshr i32 %1, 16, !dbg !10267
  %7 = xor i32 %6, -1, !dbg !10267
  %8 = and i32 %5, %7, !dbg !10267
  call void @llvm.dbg.value(metadata i32 %6, metadata !10268, metadata !DIExpression()) #23, !dbg !10272
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10274, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %9, metadata !10271, metadata !DIExpression()) #23, !dbg !10272
  call void @llvm.dbg.value(metadata i32 %9, metadata !10276, metadata !DIExpression()) #23, !dbg !10281
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10283, !range !7470
  %11 = shl i32 %0, %10, !dbg !10267
  %12 = or i32 %11, %8, !dbg !10267
  store volatile i32 %12, i32* %4, align 4, !dbg !10267
  ret void, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10289, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10290, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 %2, metadata !10291, metadata !DIExpression()), !dbg !10294
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10295
  %5 = icmp eq %struct._snode* %4, null, !dbg !10295
  br i1 %5, label %24, label %6, !dbg !10295

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10297
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10293, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10292, metadata !DIExpression()), !dbg !10294
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10298
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10298
  %12 = load i32, i32* %11, align 4, !dbg !10298
  %13 = and i32 %12, %2, !dbg !10302
  %14 = icmp eq i32 %13, 0, !dbg !10302
  br i1 %14, label %22, label %15, !dbg !10303

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10304
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10304
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10304
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10304
  br i1 %19, label %20, label %21, !dbg !10308

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10309
  unreachable, !dbg !10309

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10311
  br label %22, !dbg !10312

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10292, metadata !DIExpression()), !dbg !10294
  %23 = icmp eq %struct._snode* %8, null, !dbg !10313
  br i1 %23, label %24, label %6, !dbg !10313

24:                                               ; preds = %22, %3
  ret void, !dbg !10314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10317, metadata !DIExpression()), !dbg !10318
  %2 = and i32 %0, 255, !dbg !10319
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10319
  %4 = load volatile i32, i32* %3, align 4, !dbg !10319
  %5 = lshr i32 %0, 16, !dbg !10319
  %6 = and i32 %4, %5, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %5, metadata !10268, metadata !DIExpression()) #23, !dbg !10320
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10322, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %7, metadata !10271, metadata !DIExpression()) #23, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %7, metadata !10276, metadata !DIExpression()) #23, !dbg !10323
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10325, !range !7470
  %9 = lshr i32 %6, %8, !dbg !10326
  ret i32 %9, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %1, metadata !10334, metadata !DIExpression()), !dbg !10335
  %3 = shl i32 %1, 16, !dbg !10336
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10336
  store volatile i32 %3, i32* %4, align 4, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  ret i32 %3, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10348, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 %1, metadata !10349, metadata !DIExpression()), !dbg !10350
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10351
  store volatile i32 %1, i32* %3, align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10357
  %3 = load volatile i32, i32* %2, align 4, !dbg !10357
  ret i32 %3, !dbg !10358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32* %1, metadata !10364, metadata !DIExpression()), !dbg !10365
  %3 = and i32 %0, 131072, !dbg !10366
  %4 = icmp eq i32 %3, 0, !dbg !10368
  br i1 %4, label %22, label %5, !dbg !10369

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10370
  %6 = and i32 %0, 2, !dbg !10372
  %7 = icmp eq i32 %6, 0, !dbg !10374
  br i1 %7, label %11, label %8, !dbg !10375

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10376
  %10 = icmp eq i32 %9, 0, !dbg !10376
  br i1 %10, label %33, label %11, !dbg !10379

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10380
  store i32 %12, i32* %1, align 4, !dbg !10380
  %13 = and i32 %0, 16, !dbg !10381
  %14 = icmp eq i32 %13, 0, !dbg !10383
  br i1 %14, label %17, label %15, !dbg !10384

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10385
  br label %31, !dbg !10387

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10388
  %19 = icmp eq i32 %18, 0, !dbg !10390
  br i1 %19, label %33, label %20, !dbg !10391

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10392
  br label %31, !dbg !10394

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10395
  %24 = icmp eq i32 %23, 0, !dbg !10397
  br i1 %24, label %31, label %25, !dbg !10398

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10399
  %27 = icmp eq i32 %26, 0, !dbg !10402
  br i1 %27, label %28, label %31, !dbg !10403

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10404
  br label %33, !dbg !10405

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10365
  ret i32 %34, !dbg !10405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %2, metadata !10412, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %3, metadata !10413, metadata !DIExpression()), !dbg !10421
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10422
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10422
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10422
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10414, metadata !DIExpression()), !dbg !10421
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10423
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10423
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10415, metadata !DIExpression()), !dbg !10421
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %11, metadata !10416, metadata !DIExpression()), !dbg !10421
  %12 = and i32 %2, 48, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %12, metadata !10417, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %2, metadata !10418, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %2, metadata !10419, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %2, metadata !10420, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10421
  %13 = lshr i32 %2, 6, !dbg !10426
  %14 = and i32 %13, 1, !dbg !10426
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10427
  %15 = lshr i32 %2, 7, !dbg !10428
  %16 = and i32 %15, 3, !dbg !10428
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10429
  %17 = lshr i32 %2, 9, !dbg !10430
  %18 = and i32 %17, 3, !dbg !10430
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10431
  %19 = icmp eq i32 %12, 32, !dbg !10432
  br i1 %19, label %20, label %24, !dbg !10434

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10435
  br i1 %21, label %22, label %23, !dbg !10438

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10439
  br label %24, !dbg !10441

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10442
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10444
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  %2 = shl nuw i32 1, %0, !dbg !10452
  call void @llvm.dbg.value(metadata i32 %2, metadata !10450, metadata !DIExpression()), !dbg !10451
  ret i32 %2, !dbg !10453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 %1, metadata !10459, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 %2, metadata !10460, metadata !DIExpression()), !dbg !10461
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10462
  %5 = load volatile i32, i32* %4, align 4, !dbg !10462
  %6 = xor i32 %1, -1, !dbg !10462
  %7 = and i32 %5, %6, !dbg !10462
  %8 = mul i32 %2, %1, !dbg !10462
  %9 = or i32 %7, %8, !dbg !10462
  store volatile i32 %9, i32* %4, align 4, !dbg !10462
  ret void, !dbg !10463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10466, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %1, metadata !10467, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %2, metadata !10468, metadata !DIExpression()), !dbg !10469
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10470
  %5 = load volatile i32, i32* %4, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10471
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10473, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10474
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10476, !range !7470
  %8 = shl nuw nsw i32 %7, 1, !dbg !10470
  %9 = shl i32 3, %8, !dbg !10470
  %10 = xor i32 %9, -1, !dbg !10470
  %11 = and i32 %5, %10, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10479
  %12 = shl i32 %2, %8, !dbg !10470
  %13 = or i32 %11, %12, !dbg !10470
  store volatile i32 %13, i32* %4, align 4, !dbg !10470
  ret void, !dbg !10481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10482 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10484, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata i32 %1, metadata !10485, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.value(metadata i32 %2, metadata !10486, metadata !DIExpression()), !dbg !10487
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10488
  %5 = load volatile i32, i32* %4, align 4, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10489
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10491, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10492
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10494, !range !7470
  %8 = shl nuw nsw i32 %7, 1, !dbg !10488
  %9 = shl i32 3, %8, !dbg !10488
  %10 = xor i32 %9, -1, !dbg !10488
  %11 = and i32 %5, %10, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10497
  %12 = shl i32 %2, %8, !dbg !10488
  %13 = or i32 %11, %12, !dbg !10488
  store volatile i32 %13, i32* %4, align 4, !dbg !10488
  ret void, !dbg !10499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10502, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.value(metadata i32 %1, metadata !10503, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.value(metadata i32 %2, metadata !10504, metadata !DIExpression()), !dbg !10505
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10506
  %5 = load volatile i32, i32* %4, align 4, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10507
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10509, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10510
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10512, !range !7470
  %8 = shl nuw nsw i32 %7, 2, !dbg !10506
  %9 = shl i32 15, %8, !dbg !10506
  %10 = xor i32 %9, -1, !dbg !10506
  %11 = and i32 %5, %10, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10515
  %12 = shl i32 %2, %8, !dbg !10506
  %13 = or i32 %11, %12, !dbg !10506
  store volatile i32 %13, i32* %4, align 4, !dbg !10506
  ret void, !dbg !10517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10518 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10520, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i32 %1, metadata !10521, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i32 %2, metadata !10522, metadata !DIExpression()), !dbg !10523
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10524
  %5 = load volatile i32, i32* %4, align 4, !dbg !10524
  %6 = lshr i32 %1, 8, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %6, metadata !10268, metadata !DIExpression()) #23, !dbg !10525
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10527, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %7, metadata !10271, metadata !DIExpression()) #23, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %7, metadata !10276, metadata !DIExpression()) #23, !dbg !10528
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10530, !range !7470
  %9 = shl nuw nsw i32 %8, 2, !dbg !10524
  %10 = shl i32 15, %9, !dbg !10524
  %11 = xor i32 %10, -1, !dbg !10524
  %12 = and i32 %5, %11, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %6, metadata !10268, metadata !DIExpression()) #23, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %7, metadata !10271, metadata !DIExpression()) #23, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %7, metadata !10276, metadata !DIExpression()) #23, !dbg !10533
  %13 = shl i32 %2, %9, !dbg !10524
  %14 = or i32 %12, %13, !dbg !10524
  store volatile i32 %14, i32* %4, align 4, !dbg !10524
  ret void, !dbg !10535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10536 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10538, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %1, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %2, metadata !10540, metadata !DIExpression()), !dbg !10541
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10542
  %5 = load volatile i32, i32* %4, align 4, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10543
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10545, !srcloc !10275
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10546
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10548, !range !7470
  %8 = shl nuw nsw i32 %7, 1, !dbg !10542
  %9 = shl i32 3, %8, !dbg !10542
  %10 = xor i32 %9, -1, !dbg !10542
  %11 = and i32 %5, %10, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10268, metadata !DIExpression()) #23, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %6, metadata !10271, metadata !DIExpression()) #23, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %6, metadata !10276, metadata !DIExpression()) #23, !dbg !10551
  %12 = shl i32 %2, %8, !dbg !10542
  %13 = or i32 %11, %12, !dbg !10542
  store volatile i32 %13, i32* %4, align 4, !dbg !10542
  ret void, !dbg !10553
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10554 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10556, metadata !DIExpression()), !dbg !10559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10560
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10560
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10560
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10557, metadata !DIExpression()), !dbg !10559
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10561
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10562
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10563
  br i1 %6, label %7, label %11, !dbg !10565

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10566
  call void @llvm.dbg.value(metadata i32 %8, metadata !10558, metadata !DIExpression()), !dbg !10559
  %9 = icmp slt i32 %8, 0, !dbg !10567
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10569
  br label %11, !dbg !10569

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10559
  ret i32 %12, !dbg !10570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10571 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10575, metadata !DIExpression()), !dbg !10576
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10577, !srcloc !10579
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10580
  ret i1 %1, !dbg !10581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10582 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10586, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i8 1, metadata !10587, metadata !DIExpression()), !dbg !10591
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10592
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10592
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10592
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10588, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 0, metadata !10589, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10590, metadata !DIExpression()), !dbg !10591
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10593
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10596
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %7, metadata !10589, metadata !DIExpression()), !dbg !10591
  ret i32 %7, !dbg !10598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10601, metadata !DIExpression()), !dbg !10602
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10603
  ret i1 %1, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10609, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata i32 %1, metadata !10610, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata i32 %2, metadata !10611, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata i32 %3, metadata !10612, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata i32 0, metadata !10613, metadata !DIExpression()), !dbg !10617
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10618
  %5 = icmp eq i32 %3, 17, !dbg !10619
  br i1 %5, label %6, label %14, !dbg !10620

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %7, metadata !10614, metadata !DIExpression()), !dbg !10622
  %8 = icmp eq i32 %7, 0, !dbg !10623
  %9 = shl nuw i32 1, %1, !dbg !10625
  br i1 %8, label %12, label %10, !dbg !10626

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10627
  br label %14, !dbg !10629

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10630
  br label %14, !dbg !10633

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10634
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10637, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.value(metadata i8* %1, metadata !10638, metadata !DIExpression()), !dbg !10641
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10642
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10642
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10642
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10639, metadata !DIExpression()), !dbg !10641
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10643
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10643
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10645
  %9 = icmp eq i32 %8, 0, !dbg !10645
  br i1 %9, label %12, label %10, !dbg !10646

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10647
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10649
  br label %12, !dbg !10650

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10651
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10653
  %15 = icmp eq i32 %14, 0, !dbg !10653
  br i1 %15, label %19, label %16, !dbg !10654

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10655
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10656
  store i8 %18, i8* %1, align 1, !dbg !10657
  br label %19, !dbg !10658

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10641
  ret i32 %20, !dbg !10659
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10662, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i8 %1, metadata !10663, metadata !DIExpression()), !dbg !10666
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10667
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10667
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10664, metadata !DIExpression()), !dbg !10666
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10668

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10669
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10672
  %10 = icmp eq i32 %9, 0, !dbg !10672
  br i1 %10, label %18, label %11, !dbg !10673

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10674, !srcloc !10681
  call void @llvm.dbg.value(metadata i32 undef, metadata !10677, metadata !DIExpression()) #23, !dbg !10682
  call void @llvm.dbg.value(metadata i32 undef, metadata !10678, metadata !DIExpression()) #23, !dbg !10682
  call void @llvm.dbg.value(metadata i32 undef, metadata !10665, metadata !DIExpression()), !dbg !10666
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10683
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10685
  %15 = icmp eq i32 %14, 0, !dbg !10685
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10674
  br i1 %15, label %17, label %19, !dbg !10686

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10677, metadata !DIExpression()) #23, !dbg !10682
  call void @llvm.dbg.value(metadata i32 %16, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 undef, metadata !10687, metadata !DIExpression()) #23, !dbg !10690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10692, !srcloc !10693
  br label %18, !dbg !10694

18:                                               ; preds = %17, %7
  br label %7, !dbg !10669, !llvm.loop !10695

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10674
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10697
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %20, metadata !10687, metadata !DIExpression()) #23, !dbg !10699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10701, !srcloc !10693
  ret void, !dbg !10702
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10705, metadata !DIExpression()), !dbg !10708
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10709
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10709
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10706, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.value(metadata i32 0, metadata !10707, metadata !DIExpression()), !dbg !10708
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10710
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10710
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10712
  %8 = icmp ne i32 %7, 0, !dbg !10712
  %9 = zext i1 %8 to i32, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %9, metadata !10707, metadata !DIExpression()), !dbg !10708
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10714
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10716
  %12 = icmp eq i32 %11, 0, !dbg !10716
  %13 = or i32 %9, 2, !dbg !10717
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %14, metadata !10707, metadata !DIExpression()), !dbg !10708
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10718
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10720
  %17 = icmp eq i32 %16, 0, !dbg !10720
  %18 = or i32 %14, 4, !dbg !10721
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %19, metadata !10707, metadata !DIExpression()), !dbg !10708
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10722
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10724
  %22 = icmp eq i32 %21, 0, !dbg !10724
  %23 = or i32 %19, 8, !dbg !10725
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10725
  call void @llvm.dbg.value(metadata i32 %24, metadata !10707, metadata !DIExpression()), !dbg !10708
  %25 = and i32 %24, 8, !dbg !10726
  %26 = icmp eq i32 %25, 0, !dbg !10726
  br i1 %26, label %29, label %27, !dbg !10728

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10729
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10731
  br label %29, !dbg !10732

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10733
  %31 = icmp eq i32 %30, 0, !dbg !10733
  br i1 %31, label %34, label %32, !dbg !10735

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10736
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10738
  br label %34, !dbg !10739

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10740
  %36 = icmp eq i32 %35, 0, !dbg !10740
  br i1 %36, label %39, label %37, !dbg !10742

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10743
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10745
  br label %39, !dbg !10746

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10747
  %41 = icmp eq i32 %40, 0, !dbg !10747
  br i1 %41, label %44, label %42, !dbg !10749

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10750
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10752
  br label %44, !dbg !10753

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10754
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10755
  ret i32 %24, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10759, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10760, metadata !DIExpression()), !dbg !10768
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10769
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10769
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10769
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10761, metadata !DIExpression()), !dbg !10768
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10770
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10770
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10762, metadata !DIExpression()), !dbg !10768
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10771
  %10 = load i8, i8* %9, align 4, !dbg !10771
  %11 = zext i8 %10 to i32, !dbg !10772
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %12, metadata !10764, metadata !DIExpression()), !dbg !10768
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10774
  %14 = load i8, i8* %13, align 1, !dbg !10774
  %15 = zext i8 %14 to i32, !dbg !10775
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %16, metadata !10765, metadata !DIExpression()), !dbg !10768
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10777
  %18 = load i8, i8* %17, align 2, !dbg !10777
  %19 = zext i8 %18 to i32, !dbg !10778
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %20, metadata !10766, metadata !DIExpression()), !dbg !10768
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10780
  %22 = load i8, i8* %21, align 1, !dbg !10780
  %23 = zext i8 %22 to i32, !dbg !10781
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %24, metadata !10767, metadata !DIExpression()), !dbg !10768
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10783

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10785
  br i1 %26, label %69, label %27, !dbg !10787

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10788

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10789
  br i1 %29, label %65, label %30, !dbg !10789

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10791
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10768
  br i1 %31, label %38, label %34, !dbg !10793

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10794
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10794

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10797
  br i1 %37, label %38, label %69, !dbg !10798

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10799
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10800
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10801
  %41 = icmp eq i32 %12, %40, !dbg !10803
  br i1 %41, label %43, label %42, !dbg !10804

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10805
  br label %43, !dbg !10807

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10808
  %45 = icmp eq i32 %16, %44, !dbg !10810
  br i1 %45, label %47, label %46, !dbg !10811

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10812
  br label %47, !dbg !10814

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10815
  %49 = icmp eq i32 %20, %48, !dbg !10817
  br i1 %49, label %51, label %50, !dbg !10818

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10819
  br label %51, !dbg !10821

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10822
  %53 = icmp eq i32 %24, %52, !dbg !10824
  br i1 %53, label %55, label %54, !dbg !10825

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10826
  br label %55, !dbg !10828

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10829
  %57 = load i32, i32* %56, align 4, !dbg !10829
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10831
  %59 = load i32, i32* %58, align 4, !dbg !10831
  %60 = icmp eq i32 %57, %59, !dbg !10832
  br i1 %60, label %63, label %61, !dbg !10833

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10834
  %62 = load i32, i32* %56, align 4, !dbg !10836
  store i32 %62, i32* %58, align 4, !dbg !10837
  br label %63, !dbg !10838

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10839
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10840
  br label %69, !dbg !10841

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10789
  %67 = and i8 %66, 1, !dbg !10789
  %68 = icmp eq i8 %67, 0, !dbg !10789
  br i1 %68, label %30, label %69, !dbg !10789

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10768
  ret i32 %70, !dbg !10842
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10845, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10846, metadata !DIExpression()), !dbg !10848
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10849
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10849
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10849
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10847, metadata !DIExpression()), !dbg !10848
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10850
  %7 = load i32, i32* %6, align 4, !dbg !10850
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10851
  store i32 %7, i32* %8, align 4, !dbg !10852
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10853, !range !10854
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10855
  %11 = trunc i32 %10 to i8, !dbg !10855
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10856
  store i8 %11, i8* %12, align 4, !dbg !10857
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10858, !range !10859
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10860
  %15 = trunc i32 %14 to i8, !dbg !10860
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10861
  store i8 %15, i8* %16, align 1, !dbg !10862
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10863
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10864, !range !10854
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10865
  %20 = trunc i32 %19 to i8, !dbg !10865
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10866
  store i8 %20, i8* %21, align 2, !dbg !10867
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10868, !range !10869
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10870
  %24 = trunc i32 %23 to i8, !dbg !10870
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10871
  store i8 %24, i8* %25, align 1, !dbg !10872
  ret i32 0, !dbg !10873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10881
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10881
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10879, metadata !DIExpression()), !dbg !10880
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10882
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10882
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10883
  ret i32 %7, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %2 = icmp eq i32 %0, 1024, !dbg !10891
  %3 = select i1 %2, i32 2, i32 0, !dbg !10891
  %4 = icmp eq i32 %0, 1536, !dbg !10891
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10891
  ret i32 %5, !dbg !10892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10895, metadata !DIExpression()), !dbg !10897
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10898
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10898
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10898
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10896, metadata !DIExpression()), !dbg !10897
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10899
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10899
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10900
  ret i32 %7, !dbg !10901
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10906, metadata !DIExpression()), !dbg !10907
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10908
  %3 = icmp ult i32 %2, 4, !dbg !10908
  br i1 %3, label %4, label %7, !dbg !10908

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10908
  %6 = load i32, i32* %5, align 4, !dbg !10908
  br label %7, !dbg !10908

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10909
  ret i32 %8, !dbg !10911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10914, metadata !DIExpression()), !dbg !10916
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10917
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10917
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10917
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10915, metadata !DIExpression()), !dbg !10916
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10918
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10918
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10919
  ret i32 %7, !dbg !10920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10925, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i32 %1, metadata !10926, metadata !DIExpression()), !dbg !10927
  %3 = icmp eq i32 %0, 4096, !dbg !10928
  %4 = icmp eq i32 %1, 0, !dbg !10928
  %5 = select i1 %4, i32 4, i32 3, !dbg !10928
  %6 = select i1 %4, i32 3, i32 2, !dbg !10928
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10928
  ret i32 %7, !dbg !10929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10932, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10935
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10935
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10935
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10933, metadata !DIExpression()), !dbg !10934
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10936
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10936
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10937
  ret i32 %7, !dbg !10938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10943, metadata !DIExpression()), !dbg !10944
  %2 = icmp eq i32 %0, 768, !dbg !10945
  %3 = zext i1 %2 to i32, !dbg !10944
  ret i32 %3, !dbg !10947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10955
  %3 = load volatile i32, i32* %2, align 4, !dbg !10955
  %4 = and i32 %3, 768, !dbg !10955
  ret i32 %4, !dbg !10956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10957 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10961
  %3 = load volatile i32, i32* %2, align 4, !dbg !10961
  %4 = and i32 %3, 4096, !dbg !10961
  ret i32 %4, !dbg !10962
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10965, metadata !DIExpression()), !dbg !10966
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10967
  %3 = load volatile i32, i32* %2, align 4, !dbg !10967
  %4 = and i32 %3, 12288, !dbg !10967
  ret i32 %4, !dbg !10968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10971, metadata !DIExpression()), !dbg !10972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10973
  %3 = load volatile i32, i32* %2, align 4, !dbg !10973
  %4 = and i32 %3, 1536, !dbg !10973
  ret i32 %4, !dbg !10974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !10975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10979, metadata !DIExpression()), !dbg !10980
  %2 = icmp eq i32 %0, 2, !dbg !10981
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10981
  %4 = icmp eq i32 %0, 1, !dbg !10981
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10981
  ret i32 %5, !dbg !10982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !10983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10987, metadata !DIExpression()), !dbg !10988
  %2 = icmp ult i32 %0, 3, !dbg !10989
  br i1 %2, label %3, label %6, !dbg !10989

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10989
  %5 = load i32, i32* %4, align 4, !dbg !10989
  br label %6, !dbg !10989

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10990
  ret i32 %7, !dbg !10992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10997, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 %1, metadata !10998, metadata !DIExpression()), !dbg !10999
  %3 = icmp eq i32 %0, 4, !dbg !11000
  %4 = icmp eq i32 %1, 0, !dbg !11000
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11000
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11000
  ret i32 %6, !dbg !11001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !11002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11006, metadata !DIExpression()), !dbg !11007
  %2 = icmp eq i32 %0, 1, !dbg !11008
  %3 = select i1 %2, i32 768, i32 0, !dbg !11007
  ret i32 %3, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11015, metadata !DIExpression()), !dbg !11016
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11017
  %3 = load volatile i32, i32* %2, align 4, !dbg !11017
  %4 = and i32 %3, -8193, !dbg !11017
  store volatile i32 %4, i32* %2, align 4, !dbg !11017
  ret void, !dbg !11018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i32 %1, metadata !11024, metadata !DIExpression()), !dbg !11026
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11027
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11027
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11027
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11025, metadata !DIExpression()), !dbg !11026
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11028
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %1, metadata !11034, metadata !DIExpression()), !dbg !11036
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11037
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11037
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11037
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11035, metadata !DIExpression()), !dbg !11036
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11038
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11038
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11039
  ret void, !dbg !11040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11043, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %1, metadata !11044, metadata !DIExpression()), !dbg !11046
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11047
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11047
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11047
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11045, metadata !DIExpression()), !dbg !11046
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11048
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11048
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11049
  ret void, !dbg !11050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11053, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i32 %1, metadata !11054, metadata !DIExpression()), !dbg !11056
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11057
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11057
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11057
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11055, metadata !DIExpression()), !dbg !11056
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11058
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11058
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11059
  ret void, !dbg !11060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11061 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11063, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 %1, metadata !11064, metadata !DIExpression()), !dbg !11068
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11069
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11069
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11069
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11065, metadata !DIExpression()), !dbg !11068
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11070
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11070
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11070
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11066, metadata !DIExpression()), !dbg !11068
  %10 = bitcast i32* %3 to i8*, !dbg !11071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11071
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11072
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11072
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11076
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11076
  %15 = load i8*, i8** %14, align 4, !dbg !11076
  call void @llvm.dbg.value(metadata i32* %3, metadata !11067, metadata !DIExpression(DW_OP_deref)), !dbg !11068
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11077
  %17 = icmp slt i32 %16, 0, !dbg !11078
  br i1 %17, label %18, label %21, !dbg !11079

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11080
  %20 = zext i8 %19 to i32, !dbg !11080
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11080
  br label %31, !dbg !11086

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11087
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11087
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11088
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11089
  %25 = load i32, i32* %3, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %25, metadata !11067, metadata !DIExpression()), !dbg !11068
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11091
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11092
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11092
  %28 = load volatile i32, i32* %27, align 4, !dbg !11092
  %29 = icmp ugt i32 %28, 16, !dbg !11092
  br i1 %29, label %31, label %30, !dbg !11095

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11096
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.166, i32 0, i32 0)) #25, !dbg !11096
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11096
  unreachable, !dbg !11096

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11098
  ret void, !dbg !11098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11099 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11101, metadata !DIExpression()), !dbg !11102
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11103
  %3 = load volatile i32, i32* %2, align 4, !dbg !11103
  %4 = or i32 %3, 8192, !dbg !11103
  store volatile i32 %4, i32* %2, align 4, !dbg !11103
  ret void, !dbg !11104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i8* %1, metadata !11108, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32* %2, metadata !11109, metadata !DIExpression()), !dbg !11111
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11112
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11112
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11112
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11110, metadata !DIExpression()), !dbg !11111
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11113
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11113
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11115
  br i1 %9, label %12, label %10, !dbg !11116

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11117
  br label %12, !dbg !11118

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11111
  ret i32 %13, !dbg !11119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #2 !dbg !11120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11122, metadata !DIExpression()), !dbg !11123
  %2 = icmp eq i32 %0, 2, !dbg !11124
  %3 = select i1 %2, i8 87, i8 63, !dbg !11124
  %4 = icmp eq i32 %0, 1, !dbg !11124
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11124
  ret i8 %5, !dbg !11125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11126 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11130, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.value(metadata i32 0, metadata !11131, metadata !DIExpression()), !dbg !11132
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11133
  %3 = load volatile i32, i32* %2, align 4, !dbg !11133
  %4 = and i32 %3, -32769, !dbg !11133
  store volatile i32 %4, i32* %2, align 4, !dbg !11133
  ret void, !dbg !11134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11135 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11139, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %1, metadata !11140, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 0, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %2, metadata !11142, metadata !DIExpression()), !dbg !11143
  %4 = zext i32 %1 to i64, !dbg !11144
  %5 = mul nuw nsw i64 %4, 25, !dbg !11144
  %6 = zext i32 %2 to i64, !dbg !11144
  %7 = shl nuw nsw i64 %6, 2, !dbg !11144
  %8 = udiv i64 %5, %7, !dbg !11144
  %9 = trunc i64 %8 to i32, !dbg !11144
  %10 = udiv i32 %9, 100, !dbg !11144
  %11 = shl nuw nsw i32 %10, 4, !dbg !11144
  %12 = mul i32 %10, -100, !dbg !11144
  %13 = add i32 %12, %9, !dbg !11144
  %14 = shl i32 %13, 4, !dbg !11144
  %15 = add i32 %14, 50, !dbg !11144
  %16 = udiv i32 %15, 100, !dbg !11144
  %17 = and i32 %16, 240, !dbg !11144
  %18 = add nuw nsw i32 %17, %11, !dbg !11144
  %19 = and i32 %16, 15, !dbg !11144
  %20 = and i32 %18, 65520, !dbg !11147
  %21 = or i32 %20, %19, !dbg !11147
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11148
  store volatile i32 %21, i32* %22, align 4, !dbg !11149
  ret void, !dbg !11150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11151 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11153, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32 %1, metadata !11154, metadata !DIExpression()), !dbg !11155
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11156
  %4 = load volatile i32, i32* %3, align 4, !dbg !11156
  %5 = and i32 %4, -769, !dbg !11156
  %6 = or i32 %5, %1, !dbg !11156
  store volatile i32 %6, i32* %3, align 4, !dbg !11156
  ret void, !dbg !11157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11160, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11161, metadata !DIExpression()), !dbg !11162
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11163
  %4 = load volatile i32, i32* %3, align 4, !dbg !11163
  %5 = and i32 %4, -4097, !dbg !11163
  %6 = or i32 %5, %1, !dbg !11163
  store volatile i32 %6, i32* %3, align 4, !dbg !11163
  ret void, !dbg !11164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11165 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11167, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %1, metadata !11168, metadata !DIExpression()), !dbg !11169
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11170
  %4 = load volatile i32, i32* %3, align 4, !dbg !11170
  %5 = and i32 %4, -12289, !dbg !11170
  %6 = or i32 %5, %1, !dbg !11170
  store volatile i32 %6, i32* %3, align 4, !dbg !11170
  ret void, !dbg !11171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11172 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11174, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata i32 %1, metadata !11175, metadata !DIExpression()), !dbg !11176
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11177
  %4 = load volatile i32, i32* %3, align 4, !dbg !11177
  %5 = and i32 %4, -1537, !dbg !11177
  %6 = or i32 %5, %1, !dbg !11177
  store volatile i32 %6, i32* %3, align 4, !dbg !11177
  ret void, !dbg !11178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11181, metadata !DIExpression()), !dbg !11182
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11183
  %3 = load volatile i32, i32* %2, align 4, !dbg !11183
  %4 = lshr i32 %3, 3, !dbg !11184
  %5 = and i32 %4, 1, !dbg !11184
  ret i32 %5, !dbg !11185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11189
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11190
  %3 = load volatile i32, i32* %2, align 4, !dbg !11190
  %4 = and i32 %3, 1, !dbg !11190
  ret i32 %4, !dbg !11191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11192 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11194, metadata !DIExpression()), !dbg !11195
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11196
  %3 = load volatile i32, i32* %2, align 4, !dbg !11196
  %4 = lshr i32 %3, 1, !dbg !11197
  %5 = and i32 %4, 1, !dbg !11197
  ret i32 %5, !dbg !11198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11199 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11201, metadata !DIExpression()), !dbg !11202
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11203
  %3 = load volatile i32, i32* %2, align 4, !dbg !11203
  %4 = lshr i32 %3, 8, !dbg !11204
  %5 = and i32 %4, 1, !dbg !11204
  ret i32 %5, !dbg !11205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11206 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11208, metadata !DIExpression()), !dbg !11209
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11210
  store volatile i32 -257, i32* %2, align 4, !dbg !11210
  ret void, !dbg !11211
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11212 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11214, metadata !DIExpression()), !dbg !11216
  %3 = bitcast i32* %2 to i8*, !dbg !11217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11217
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11215, metadata !DIExpression()), !dbg !11218
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11219
  %5 = load volatile i32, i32* %4, align 4, !dbg !11219
  store volatile i32 %5, i32* %2, align 4, !dbg !11220
  %6 = load volatile i32, i32* %2, align 4, !dbg !11221
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11222
  %8 = load volatile i32, i32* %7, align 4, !dbg !11222
  store volatile i32 %8, i32* %2, align 4, !dbg !11223
  %9 = load volatile i32, i32* %2, align 4, !dbg !11224
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11225
  ret void, !dbg !11225
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11226 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11228, metadata !DIExpression()), !dbg !11230
  %3 = bitcast i32* %2 to i8*, !dbg !11231
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11231
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11229, metadata !DIExpression()), !dbg !11232
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11233
  %5 = load volatile i32, i32* %4, align 4, !dbg !11233
  store volatile i32 %5, i32* %2, align 4, !dbg !11234
  %6 = load volatile i32, i32* %2, align 4, !dbg !11235
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11236
  %8 = load volatile i32, i32* %7, align 4, !dbg !11236
  store volatile i32 %8, i32* %2, align 4, !dbg !11237
  %9 = load volatile i32, i32* %2, align 4, !dbg !11238
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11239
  ret void, !dbg !11239
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11240 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11242, metadata !DIExpression()), !dbg !11244
  %3 = bitcast i32* %2 to i8*, !dbg !11245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11245
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11243, metadata !DIExpression()), !dbg !11246
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11247
  %5 = load volatile i32, i32* %4, align 4, !dbg !11247
  store volatile i32 %5, i32* %2, align 4, !dbg !11248
  %6 = load volatile i32, i32* %2, align 4, !dbg !11249
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11250
  %8 = load volatile i32, i32* %7, align 4, !dbg !11250
  store volatile i32 %8, i32* %2, align 4, !dbg !11251
  %9 = load volatile i32, i32* %2, align 4, !dbg !11252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11253
  ret void, !dbg !11253
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11254 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11256, metadata !DIExpression()), !dbg !11258
  %3 = bitcast i32* %2 to i8*, !dbg !11259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11259
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11257, metadata !DIExpression()), !dbg !11260
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11261
  %5 = load volatile i32, i32* %4, align 4, !dbg !11261
  store volatile i32 %5, i32* %2, align 4, !dbg !11262
  %6 = load volatile i32, i32* %2, align 4, !dbg !11263
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11264
  %8 = load volatile i32, i32* %7, align 4, !dbg !11264
  store volatile i32 %8, i32* %2, align 4, !dbg !11265
  %9 = load volatile i32, i32* %2, align 4, !dbg !11266
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11267
  ret void, !dbg !11267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11272
  %3 = load volatile i32, i32* %2, align 4, !dbg !11272
  %4 = lshr i32 %3, 7, !dbg !11273
  %5 = and i32 %4, 1, !dbg !11273
  ret i32 %5, !dbg !11274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11275 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8 %1, metadata !11280, metadata !DIExpression()), !dbg !11281
  %3 = zext i8 %1 to i32, !dbg !11282
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11283
  store volatile i32 %3, i32* %4, align 4, !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11286 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11288, metadata !DIExpression()), !dbg !11289
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11290
  %3 = load volatile i32, i32* %2, align 4, !dbg !11290
  %4 = lshr i32 %3, 5, !dbg !11291
  %5 = and i32 %4, 1, !dbg !11291
  ret i32 %5, !dbg !11292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11293 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11297, metadata !DIExpression()), !dbg !11298
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11299
  %3 = load volatile i32, i32* %2, align 4, !dbg !11299
  %4 = trunc i32 %3 to i8, !dbg !11300
  ret i8 %4, !dbg !11301
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11304, metadata !DIExpression()), !dbg !11310
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11311
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11311
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11305, metadata !DIExpression()), !dbg !11310
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11312
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11312
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11312
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11306, metadata !DIExpression()), !dbg !11310
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11313
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11314
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11314
  %10 = tail call fastcc zeroext i1 @device_is_ready.170(%struct.device* noundef %9) #24, !dbg !11316
  br i1 %10, label %14, label %11, !dbg !11317

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11318
  %13 = zext i8 %12 to i32, !dbg !11318
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.171, i32 0, i32 0), i32 noundef %13) #25, !dbg !11318
  br label %62, !dbg !11324

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11325
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11326
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11326
  %18 = load i8*, i8** %17, align 4, !dbg !11326
  %19 = tail call fastcc i32 @clock_control_on.172(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %19, metadata !11309, metadata !DIExpression()), !dbg !11310
  %20 = icmp eq i32 %19, 0, !dbg !11328
  br i1 %20, label %24, label %21, !dbg !11330

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11331
  %23 = zext i8 %22 to i32, !dbg !11331
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.173, i32 0, i32 0), i32 noundef %23) #25, !dbg !11331
  br label %62, !dbg !11337

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11338
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11338
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %27, metadata !11309, metadata !DIExpression()), !dbg !11310
  %28 = icmp slt i32 %27, 0, !dbg !11340
  br i1 %28, label %62, label %29, !dbg !11342

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11343
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11343
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11344
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11345
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11346
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11347
  %34 = load i32, i32* %33, align 4, !dbg !11347
  %35 = icmp ult i32 %34, 3, !dbg !11349
  br i1 %35, label %39, label %36, !dbg !11349

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11350
  %38 = zext i8 %37 to i32, !dbg !11350
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.174, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11350
  call void @llvm.dbg.value(metadata i32 0, metadata !11307, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 0, metadata !11308, metadata !DIExpression()), !dbg !11310
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11349
  %41 = load i32, i32* %40, align 4, !dbg !11349
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.12, i32 0, i32 %34, !dbg !11349
  %43 = load i32, i32* %42, align 4, !dbg !11349
  br label %44, !dbg !11349

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11359
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11359
  call void @llvm.dbg.value(metadata i32 %46, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %45, metadata !11307, metadata !DIExpression()), !dbg !11310
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11360
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11361
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11362
  %49 = load i8, i8* %48, align 4, !dbg !11362, !range !6633
  %50 = icmp eq i8 %49, 0, !dbg !11362
  br i1 %50, label %52, label %51, !dbg !11364

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11365
  br label %52, !dbg !11367

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11368
  %54 = load i32, i32* %53, align 4, !dbg !11368
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11369
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11370
  %56 = load i8, i8* %55, align 4, !dbg !11370, !range !6633
  %57 = icmp eq i8 %56, 0, !dbg !11370
  br i1 %57, label %60, label %58, !dbg !11372

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11373
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11375
  br label %60, !dbg !11376

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11377
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11378
  br label %62, !dbg !11379

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11310
  ret i32 %63, !dbg !11380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11385, metadata !DIExpression()), !dbg !11389
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11390
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11390
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11386, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11387, metadata !DIExpression()), !dbg !11389
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11391
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11392
  ret void, !dbg !11393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.170(%struct.device* noundef %0) unnamed_addr #1 !dbg !11394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11398, metadata !DIExpression()), !dbg !11399
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11400, !srcloc !11402
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.175(%struct.device* noundef %0) #24, !dbg !11403
  ret i1 %2, !dbg !11404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.172(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11407, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.value(metadata i8* %1, metadata !11408, metadata !DIExpression()), !dbg !11410
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11411
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11411
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11411
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11409, metadata !DIExpression()), !dbg !11410
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11412
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11412
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11413
  ret i32 %8, !dbg !11414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11415 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i8 0, metadata !11420, metadata !DIExpression()), !dbg !11423
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11424
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11422, metadata !DIExpression(DW_OP_deref)), !dbg !11423
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11425
  call void @llvm.dbg.value(metadata i32 %4, metadata !11421, metadata !DIExpression()), !dbg !11423
  %5 = icmp slt i32 %4, 0, !dbg !11426
  br i1 %5, label %9, label %6, !dbg !11428

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11429
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11422, metadata !DIExpression()), !dbg !11423
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11430
  br label %9, !dbg !11431

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11432
  ret i32 %10, !dbg !11432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11435, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.value(metadata i32 12, metadata !11436, metadata !DIExpression()), !dbg !11439
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11440

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11441, metadata !DIExpression()) #23, !dbg !11447
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11450, !srcloc !11451
  call void @llvm.dbg.value(metadata i32 %4, metadata !11446, metadata !DIExpression()) #23, !dbg !11447
  %5 = or i32 %4, 12, !dbg !11452
  call void @llvm.dbg.value(metadata i32 %5, metadata !11437, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %5, metadata !11454, metadata !DIExpression()) #23, !dbg !11461
  call void @llvm.dbg.value(metadata i32* %2, metadata !11459, metadata !DIExpression()) #23, !dbg !11461
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11463, !srcloc !11464
  call void @llvm.dbg.value(metadata i32 %6, metadata !11460, metadata !DIExpression()) #23, !dbg !11461
  %7 = icmp eq i32 %6, 0, !dbg !11440
  br i1 %7, label %8, label %3, !dbg !11452, !llvm.loop !11465

8:                                                ; preds = %3
  ret void, !dbg !11466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11467 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11469, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 %1, metadata !11470, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 %2, metadata !11471, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 0, metadata !11472, metadata !DIExpression()), !dbg !11473
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11474
  %5 = load volatile i32, i32* %4, align 4, !dbg !11474
  %6 = and i32 %5, -5633, !dbg !11474
  %7 = or i32 %2, %1, !dbg !11474
  %8 = or i32 %7, %6, !dbg !11474
  store volatile i32 %8, i32* %4, align 4, !dbg !11474
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11475
  %10 = load volatile i32, i32* %9, align 4, !dbg !11475
  %11 = and i32 %10, -12289, !dbg !11475
  store volatile i32 %11, i32* %9, align 4, !dbg !11475
  ret void, !dbg !11476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11477 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11479, metadata !DIExpression()), !dbg !11480
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11481
  %3 = load volatile i32, i32* %2, align 4, !dbg !11481
  %4 = or i32 %3, 8, !dbg !11481
  store volatile i32 %4, i32* %2, align 4, !dbg !11481
  ret void, !dbg !11482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11483 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11487, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11488, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.value(metadata i32 0, metadata !11489, metadata !DIExpression()), !dbg !11490
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11491
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11491
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11492
  %5 = load i8, i8* %4, align 4, !dbg !11492
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11493
  ret i32 %6, !dbg !11494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.175(%struct.device* noundef %0) unnamed_addr #1 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11499
  ret i1 %2, !dbg !11500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11501 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11503, metadata !DIExpression()), !dbg !11504
  tail call fastcc void @__NVIC_SetPriority.177() #24, !dbg !11505
  store i32 8399, i32* @last_load, align 4, !dbg !11506
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11507
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11508
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11509
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11510
  %3 = or i32 %2, 7, !dbg !11510
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11510
  ret i32 0, !dbg !11511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.177() unnamed_addr #14 !dbg !11512 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11514, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 1, metadata !11515, metadata !DIExpression()), !dbg !11516
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11517
  ret void, !dbg !11520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11523, metadata !DIExpression()), !dbg !11525
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11526
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11527
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11528
  %5 = add i32 %4, %3, !dbg !11528
  store i32 %5, i32* @cycle_count, align 4, !dbg !11528
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11529
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11530
  %7 = sub i32 %5, %6, !dbg !11533
  %8 = udiv i32 %7, 8400, !dbg !11534
  call void @llvm.dbg.value(metadata i32 %8, metadata !11524, metadata !DIExpression()), !dbg !11525
  %9 = mul nuw i32 %8, 8400, !dbg !11535
  %10 = add i32 %9, %6, !dbg !11536
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11536
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11537
  tail call void @z_arm_int_exit() #25, !dbg !11538
  ret void, !dbg !11539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11540 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %1, metadata !11542, metadata !DIExpression()), !dbg !11546
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %2, metadata !11543, metadata !DIExpression()), !dbg !11546
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()), !dbg !11546
  %4 = and i32 %2, 65536, !dbg !11549
  %5 = icmp ne i32 %4, 0, !dbg !11549
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11551
  %8 = load i32, i32* @last_load, align 4, !dbg !11546
  br i1 %7, label %9, label %13, !dbg !11551

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11552
  %11 = add i32 %10, %8, !dbg !11552
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11552
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11554
  br label %13, !dbg !11555

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11556
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11557
  %16 = add i32 %14, %15, !dbg !11558
  ret i32 %16, !dbg !11559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11564, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i1 %1, metadata !11565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11577
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11578
  br i1 %4, label %5, label %8, !dbg !11578

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11580
  %7 = and i32 %6, -2, !dbg !11580
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11580
  store i32 -16777216, i32* @last_load, align 4, !dbg !11582
  br label %60, !dbg !11583

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %9, metadata !11569, metadata !DIExpression()), !dbg !11577
  br i1 %3, label %18, label %10, !dbg !11585

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11564, metadata !DIExpression()), !dbg !11577
  %12 = icmp slt i32 %11, 1, !dbg !11586
  br i1 %12, label %18, label %13, !dbg !11586

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11586
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11586
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11586
  %17 = add nuw nsw i32 %16, 8399, !dbg !11586
  br label %18, !dbg !11586

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11564, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11587, metadata !DIExpression()) #23, !dbg !11594
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11596, !srcloc !11602
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !11603
  call void @llvm.dbg.value(metadata i32 undef, metadata !11600, metadata !DIExpression()) #23, !dbg !11603
  call void @llvm.dbg.value(metadata i32 undef, metadata !11593, metadata !DIExpression()) #23, !dbg !11594
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11604
  br i1 %21, label %23, label %22, !dbg !11607

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11608
  unreachable, !dbg !11608

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %24, metadata !11599, metadata !DIExpression()) #23, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %24, metadata !11593, metadata !DIExpression()) #23, !dbg !11594
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %24, metadata !11570, metadata !DIExpression()), !dbg !11577
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %25, metadata !11575, metadata !DIExpression()), !dbg !11577
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %26, metadata !11567, metadata !DIExpression()), !dbg !11577
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11613
  %28 = add i32 %27, %25, !dbg !11613
  store i32 %28, i32* @cycle_count, align 4, !dbg !11613
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11614
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11615
  %30 = sub i32 %28, %29, !dbg !11616
  call void @llvm.dbg.value(metadata i32 %30, metadata !11576, metadata !DIExpression()), !dbg !11577
  %31 = icmp slt i32 %30, 0, !dbg !11617
  br i1 %31, label %41, label %32, !dbg !11619

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11566, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 undef, metadata !11566, metadata !DIExpression()), !dbg !11577
  %33 = add nuw i32 %19, %30, !dbg !11620
  %34 = urem i32 %33, 8400, !dbg !11622
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11577
  %35 = sub nuw nsw i32 %19, %34, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %35, metadata !11566, metadata !DIExpression()), !dbg !11577
  %36 = icmp ugt i32 %35, 1024, !dbg !11624
  br i1 %36, label %37, label %39, !dbg !11624

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11566, metadata !DIExpression()), !dbg !11577
  %38 = icmp ugt i32 %35, 16766400, !dbg !11625
  br i1 %38, label %41, label %39, !dbg !11627

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11628
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %43, metadata !11568, metadata !DIExpression()), !dbg !11577
  %44 = add nsw i32 %42, -1, !dbg !11630
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11631
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11632
  %45 = icmp ult i32 %26, %43, !dbg !11633
  br i1 %45, label %46, label %51, !dbg !11635

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11636
  %48 = add i32 %26, %9, !dbg !11638
  %49 = sub i32 %48, %43, !dbg !11639
  %50 = add i32 %49, %47, !dbg !11636
  br label %55, !dbg !11640

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11641
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11643
  %54 = add i32 %52, %53, !dbg !11643
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11644
  store i32 %56, i32* @cycle_count, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11650, metadata !DIExpression()) #23, !dbg !11651
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11653
  br i1 %57, label %59, label %58, !dbg !11656

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11657
  unreachable, !dbg !11657

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11645, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %24, metadata !11659, metadata !DIExpression()) #23, !dbg !11662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11664, !srcloc !11665
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11587, metadata !DIExpression()) #23, !dbg !11671
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11673, !srcloc !11602
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 undef, metadata !11600, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 undef, metadata !11593, metadata !DIExpression()) #23, !dbg !11671
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11676
  br i1 %2, label %4, label %3, !dbg !11677

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11678
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11678
  unreachable, !dbg !11678

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 undef, metadata !11593, metadata !DIExpression()) #23, !dbg !11671
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11679
  call void @llvm.dbg.value(metadata i32 undef, metadata !11669, metadata !DIExpression()), !dbg !11680
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11681
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11682
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11683
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11670, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11680
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11650, metadata !DIExpression()) #23, !dbg !11684
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11686
  br i1 %8, label %10, label %9, !dbg !11687

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11688
  unreachable, !dbg !11688

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11689
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11670, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11680
  %12 = sub i32 %11, %7, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %12, metadata !11670, metadata !DIExpression()), !dbg !11680
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %13, metadata !11599, metadata !DIExpression()) #23, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %13, metadata !11593, metadata !DIExpression()) #23, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %13, metadata !11669, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11659, metadata !DIExpression()) #23, !dbg !11691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11693, !srcloc !11665
  %14 = udiv i32 %12, 8400, !dbg !11694
  ret i32 %14, !dbg !11695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11696 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11587, metadata !DIExpression()) #23, !dbg !11700
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11702, !srcloc !11602
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !11704
  call void @llvm.dbg.value(metadata i32 undef, metadata !11600, metadata !DIExpression()) #23, !dbg !11704
  call void @llvm.dbg.value(metadata i32 undef, metadata !11593, metadata !DIExpression()) #23, !dbg !11700
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11705
  br i1 %2, label %4, label %3, !dbg !11706

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 148) #25, !dbg !11707
  unreachable, !dbg !11707

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11599, metadata !DIExpression()) #23, !dbg !11704
  call void @llvm.dbg.value(metadata i32 undef, metadata !11593, metadata !DIExpression()) #23, !dbg !11700
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11708
  call void @llvm.dbg.value(metadata i32 undef, metadata !11698, metadata !DIExpression()), !dbg !11709
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11710
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11711
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11709
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11650, metadata !DIExpression()) #23, !dbg !11712
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11714
  br i1 %7, label %9, label %8, !dbg !11715

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.183, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.180, i32 0, i32 0), i32 noundef 194) #25, !dbg !11716
  unreachable, !dbg !11716

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %10, metadata !11699, metadata !DIExpression()), !dbg !11709
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %11, metadata !11599, metadata !DIExpression()) #23, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %11, metadata !11593, metadata !DIExpression()) #23, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %11, metadata !11698, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11712
  call void @llvm.dbg.value(metadata i32 undef, metadata !11659, metadata !DIExpression()) #23, !dbg !11718
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11720, !srcloc !11665
  ret i32 %10, !dbg !11721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11722 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11723
  %2 = icmp eq i32 %1, -16777216, !dbg !11725
  br i1 %2, label %3, label %6, !dbg !11726

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11727
  %5 = or i32 %4, 1, !dbg !11727
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11727
  br label %6, !dbg !11729

6:                                                ; preds = %3, %0
  ret void, !dbg !11730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11731 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11732
  %2 = and i32 %1, -2, !dbg !11732
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11732
  ret void, !dbg !11733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11734 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11760, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata i8 %1, metadata !11761, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11762, metadata !DIExpression()), !dbg !11763
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11764
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11764
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11763
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11765
  %8 = load i8, i8* %6, align 4, !dbg !11766
  %9 = zext i8 %8 to i32, !dbg !11767
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11767
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11768
  br i1 %11, label %18, label %24, !dbg !11769

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11763
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11765
  %14 = load i8, i8* %6, align 4, !dbg !11766
  %15 = zext i8 %14 to i32, !dbg !11767
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11767
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11768
  br i1 %17, label %18, label %24, !dbg !11769, !llvm.loop !11770

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11772
  %21 = load i8, i8* %20, align 1, !dbg !11772
  %22 = icmp eq i8 %21, %1, !dbg !11775
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11776
  br i1 %22, label %24, label %12, !dbg !11777

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11763
  ret i32 %25, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11790, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i8 %1, metadata !11791, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 %2, metadata !11792, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 0, metadata !11795, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 0, metadata !11796, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i8 0, metadata !11797, metadata !DIExpression()), !dbg !11807
  %4 = icmp eq i8 %1, 0, !dbg !11808
  br i1 %4, label %35, label %5, !dbg !11809

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11808
  br label %9, !dbg !11809

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11797, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.value(metadata i32 %29, metadata !11795, metadata !DIExpression()), !dbg !11806
  %8 = icmp eq i32 %34, %6, !dbg !11808
  br i1 %8, label %35, label %9, !dbg !11809, !llvm.loop !11810

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11797, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.value(metadata i32 %11, metadata !11795, metadata !DIExpression()), !dbg !11806
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11812
  %13 = load i32, i32* %12, align 4, !dbg !11812
  call void @llvm.dbg.value(metadata i32 %13, metadata !11794, metadata !DIExpression()), !dbg !11806
  %14 = and i32 %13, 31, !dbg !11813
  %15 = icmp ult i32 %14, 16, !dbg !11814
  br i1 %15, label %16, label %20, !dbg !11815

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11816
  %18 = load i32, i32* %17, align 4, !dbg !11816
  %19 = or i32 %18, 32, !dbg !11818
  call void @llvm.dbg.value(metadata i32 %19, metadata !11795, metadata !DIExpression()), !dbg !11806
  br label %28, !dbg !11819

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11820

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11821
  %23 = load i32, i32* %22, align 4, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %23, metadata !11799, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11822
  %24 = lshr i32 %23, 7, !dbg !11823
  %25 = and i32 %24, 16, !dbg !11823
  %26 = or i32 %25, %23, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %26, metadata !11795, metadata !DIExpression()), !dbg !11806
  br label %28, !dbg !11824

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11806
  call void @llvm.dbg.value(metadata i32 %29, metadata !11795, metadata !DIExpression()), !dbg !11806
  %30 = lshr i32 %13, 5, !dbg !11825
  %31 = and i32 %30, 255, !dbg !11825
  call void @llvm.dbg.value(metadata i32 %31, metadata !11793, metadata !DIExpression()), !dbg !11806
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %32, metadata !11796, metadata !DIExpression()), !dbg !11806
  %33 = icmp slt i32 %32, 0, !dbg !11827
  %34 = add nuw nsw i32 %10, 1, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %34, metadata !11797, metadata !DIExpression()), !dbg !11807
  br i1 %33, label %35, label %7, !dbg !11830

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11836, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i32 %1, metadata !11837, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()), !dbg !11840
  %4 = icmp ugt i32 %0, 175, !dbg !11841
  br i1 %4, label %16, label %5, !dbg !11843

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11844
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11845
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11845
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11839, metadata !DIExpression()), !dbg !11840
  %9 = add nsw i32 %6, -8, !dbg !11846
  %10 = icmp ult i32 %9, 3, !dbg !11846
  br i1 %10, label %16, label %11, !dbg !11848

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %8) #24, !dbg !11849
  br i1 %12, label %13, label %16, !dbg !11850

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11851
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11852
  br label %16, !dbg !11853

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11840
  ret i32 %17, !dbg !11854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !11855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11859, metadata !DIExpression()), !dbg !11860
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11861, !srcloc !11863
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.191(%struct.device* noundef %0) #24, !dbg !11864
  ret i1 %2, !dbg !11865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.191(%struct.device* noundef %0) unnamed_addr #1 !dbg !11866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11868, metadata !DIExpression()), !dbg !11869
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11870
  ret i1 %2, !dbg !11871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11872 {
  ret void, !dbg !11873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11874 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11876, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 0, metadata !11877, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 2, metadata !11878, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 0, metadata !11879, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 2, metadata !11880, metadata !DIExpression()), !dbg !11881
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11882
  %2 = and i32 %1, 12, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %2, metadata !11876, metadata !DIExpression()), !dbg !11881
  %3 = icmp eq i32 %2, 8, !dbg !11884
  br i1 %3, label %4, label %18, !dbg !11884

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11885
  call void @llvm.dbg.value(metadata i32 %5, metadata !11879, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11881
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11887
  %7 = and i32 %6, 63, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %7, metadata !11880, metadata !DIExpression()), !dbg !11881
  %8 = udiv i32 16000000, %7, !dbg !11889
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11889
  %10 = lshr i32 %9, 6, !dbg !11889
  %11 = and i32 %10, 511, !dbg !11889
  %12 = mul i32 %11, %8, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %12, metadata !11877, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 %12, metadata !11877, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 %12, metadata !11877, metadata !DIExpression()), !dbg !11881
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11891
  %14 = lshr i32 %13, 15, !dbg !11892
  %15 = and i32 %14, 6, !dbg !11892
  %16 = add nuw nsw i32 %15, 2, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %16, metadata !11878, metadata !DIExpression()), !dbg !11881
  %17 = udiv i32 %12, %16, !dbg !11893
  br label %18, !dbg !11894

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11895
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11896
  %21 = lshr i32 %20, 4, !dbg !11897
  %22 = and i32 %21, 15, !dbg !11897
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11898
  %24 = load i8, i8* %23, align 1, !dbg !11898
  %25 = zext i8 %24 to i32, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %25, metadata !11876, metadata !DIExpression()), !dbg !11881
  %26 = lshr i32 %19, %25, !dbg !11899
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11899
  ret void, !dbg !11900
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11901 {
  ret i32 0, !dbg !11906
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11907 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11933, metadata !DIExpression()), !dbg !11944
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11945
  br i1 %3, label %311, label %4, !dbg !11947

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11948
  %6 = load i32, i32* %5, align 4, !dbg !11948
  %7 = and i32 %6, 1, !dbg !11950
  %8 = icmp eq i32 %7, 0, !dbg !11951
  br i1 %8, label %66, label %9, !dbg !11952

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11953
  %11 = and i32 %10, 12, !dbg !11953
  %12 = icmp eq i32 %11, 4, !dbg !11956
  br i1 %12, label %21, label %13, !dbg !11957

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11958
  %15 = and i32 %14, 12, !dbg !11958
  %16 = icmp eq i32 %15, 8, !dbg !11959
  br i1 %16, label %17, label %29, !dbg !11960

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11961
  %19 = and i32 %18, 4194304, !dbg !11962
  %20 = icmp eq i32 %19, 0, !dbg !11963
  br i1 %20, label %29, label %21, !dbg !11964

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11965
  %23 = and i32 %22, 131072, !dbg !11965
  %24 = icmp eq i32 %23, 0, !dbg !11965
  br i1 %24, label %66, label %25, !dbg !11968

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11969
  %27 = load i32, i32* %26, align 4, !dbg !11969
  %28 = icmp eq i32 %27, 0, !dbg !11970
  br i1 %28, label %311, label %66, !dbg !11971

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11972
  %31 = load i32, i32* %30, align 4, !dbg !11972
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11976

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11977
  %34 = or i32 %33, 65536, !dbg !11977
  br label %45, !dbg !11977

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11979
  %37 = or i32 %36, 262144, !dbg !11979
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11979
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11979
  %39 = or i32 %38, 65536, !dbg !11979
  br label %45, !dbg !11979

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %42 = and i32 %41, -65537, !dbg !11982
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11982
  %44 = and i32 %43, -262145, !dbg !11982
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  %47 = load i32, i32* %30, align 4, !dbg !11985
  %48 = icmp eq i32 %47, 0, !dbg !11987
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11988
  call void @llvm.dbg.value(metadata i32 %49, metadata !11934, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 %49, metadata !11934, metadata !DIExpression()), !dbg !11944
  br i1 %48, label %58, label %50, !dbg !11989

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11990
  %52 = and i32 %51, 131072, !dbg !11992
  %53 = icmp eq i32 %52, 0, !dbg !11992
  br i1 %53, label %54, label %66, !dbg !11993

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11994
  %56 = sub i32 %55, %49, !dbg !11997
  %57 = icmp ugt i32 %56, 100, !dbg !11998
  br i1 %57, label %311, label %50, !dbg !11999, !llvm.loop !12000

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12002
  %60 = and i32 %59, 131072, !dbg !12002
  %61 = icmp eq i32 %60, 0, !dbg !12002
  br i1 %61, label %66, label %62, !dbg !12004

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12005
  %64 = sub i32 %63, %49, !dbg !12008
  %65 = icmp ugt i32 %64, 100, !dbg !12009
  br i1 %65, label %311, label %58, !dbg !12010, !llvm.loop !12011

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12013
  %68 = and i32 %67, 2, !dbg !12015
  %69 = icmp eq i32 %68, 0, !dbg !12016
  br i1 %69, label %121, label %70, !dbg !12017

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12018
  %72 = and i32 %71, 12, !dbg !12018
  %73 = icmp eq i32 %72, 0, !dbg !12021
  br i1 %73, label %82, label %74, !dbg !12022

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12023
  %76 = and i32 %75, 12, !dbg !12023
  %77 = icmp eq i32 %76, 8, !dbg !12024
  br i1 %77, label %78, label %90, !dbg !12025

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12026
  %80 = and i32 %79, 4194304, !dbg !12027
  %81 = icmp eq i32 %80, 0, !dbg !12028
  br i1 %81, label %82, label %90, !dbg !12029

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12030
  %84 = and i32 %83, 2, !dbg !12030
  %85 = icmp eq i32 %84, 0, !dbg !12030
  br i1 %85, label %114, label %86, !dbg !12033

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12034
  %88 = load i32, i32* %87, align 4, !dbg !12034
  %89 = icmp eq i32 %88, 1, !dbg !12035
  br i1 %89, label %114, label %311, !dbg !12036

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12037
  %92 = load i32, i32* %91, align 4, !dbg !12037
  %93 = icmp eq i32 %92, 0, !dbg !12040
  br i1 %93, label %104, label %94, !dbg !12041

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12042
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %95, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %96, !dbg !12045

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12046
  %98 = and i32 %97, 2, !dbg !12047
  %99 = icmp eq i32 %98, 0, !dbg !12047
  br i1 %99, label %100, label %114, !dbg !12045

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12048
  %102 = sub i32 %101, %95, !dbg !12051
  %103 = icmp ugt i32 %102, 2, !dbg !12052
  br i1 %103, label %311, label %96, !dbg !12053, !llvm.loop !12054

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12056
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %105, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %106, !dbg !12059

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12060
  %108 = and i32 %107, 2, !dbg !12060
  %109 = icmp eq i32 %108, 0, !dbg !12060
  br i1 %109, label %121, label %110, !dbg !12059

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12061
  %112 = sub i32 %111, %105, !dbg !12064
  %113 = icmp ugt i32 %112, 2, !dbg !12065
  br i1 %113, label %311, label %106, !dbg !12066, !llvm.loop !12067

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12069
  %116 = and i32 %115, -249, !dbg !12069
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12069
  %118 = load i32, i32* %117, align 4, !dbg !12069
  %119 = shl i32 %118, 3, !dbg !12069
  %120 = or i32 %119, %116, !dbg !12069
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12069
  br label %121, !dbg !12070

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12070
  %123 = and i32 %122, 8, !dbg !12072
  %124 = icmp eq i32 %123, 0, !dbg !12073
  br i1 %124, label %149, label %125, !dbg !12074

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12075
  %127 = load i32, i32* %126, align 4, !dbg !12075
  %128 = icmp eq i32 %127, 0, !dbg !12078
  br i1 %128, label %139, label %129, !dbg !12079

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12080
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %130, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %131, !dbg !12083

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12084
  %133 = and i32 %132, 2, !dbg !12085
  %134 = icmp eq i32 %133, 0, !dbg !12085
  br i1 %134, label %135, label %149, !dbg !12083

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12086
  %137 = sub i32 %136, %130, !dbg !12089
  %138 = icmp ugt i32 %137, 2, !dbg !12090
  br i1 %138, label %311, label %131, !dbg !12091, !llvm.loop !12092

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12094
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %140, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %141, !dbg !12097

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12098
  %143 = and i32 %142, 2, !dbg !12098
  %144 = icmp eq i32 %143, 0, !dbg !12098
  br i1 %144, label %149, label %145, !dbg !12097

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12099
  %147 = sub i32 %146, %140, !dbg !12102
  %148 = icmp ugt i32 %147, 2, !dbg !12103
  br i1 %148, label %311, label %141, !dbg !12104, !llvm.loop !12105

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12107
  %151 = and i32 %150, 4, !dbg !12108
  %152 = icmp eq i32 %151, 0, !dbg !12109
  br i1 %152, label %221, label %153, !dbg !12110

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11936, metadata !DIExpression()), !dbg !12111
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12112
  %155 = and i32 %154, 268435456, !dbg !12112
  %156 = icmp eq i32 %155, 0, !dbg !12112
  br i1 %156, label %157, label %164, !dbg !12113

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12114
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12114
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11940, metadata !DIExpression()), !dbg !12114
  store volatile i32 0, i32* %2, align 4, !dbg !12114
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12114
  %160 = or i32 %159, 268435456, !dbg !12114
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12114
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12114
  %162 = and i32 %161, 268435456, !dbg !12114
  store volatile i32 %162, i32* %2, align 4, !dbg !12114
  %163 = load volatile i32, i32* %2, align 4, !dbg !12114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12115
  call void @llvm.dbg.value(metadata i32 1, metadata !11936, metadata !DIExpression()), !dbg !12111
  br label %164, !dbg !12116

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11936, metadata !DIExpression()), !dbg !12111
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12117
  %166 = and i32 %165, 256, !dbg !12117
  %167 = icmp eq i32 %166, 0, !dbg !12117
  br i1 %167, label %168, label %180, !dbg !12119

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12120
  %170 = or i32 %169, 256, !dbg !12120
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12120
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %171, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %172, !dbg !12123

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12124
  %174 = and i32 %173, 256, !dbg !12124
  %175 = icmp eq i32 %174, 0, !dbg !12124
  br i1 %175, label %176, label %180, !dbg !12123

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12125
  %178 = sub i32 %177, %171, !dbg !12128
  %179 = icmp ugt i32 %178, 2, !dbg !12129
  br i1 %179, label %311, label %172, !dbg !12130, !llvm.loop !12131

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12133
  %182 = load i32, i32* %181, align 4, !dbg !12133
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12136

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12137
  %185 = or i32 %184, 1, !dbg !12137
  br label %196, !dbg !12137

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12139
  %188 = or i32 %187, 4, !dbg !12139
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12139
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12139
  %190 = or i32 %189, 1, !dbg !12139
  br label %196, !dbg !12139

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %193 = and i32 %192, -2, !dbg !12142
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12142
  %195 = and i32 %194, -5, !dbg !12142
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12144
  %198 = load i32, i32* %181, align 4, !dbg !12145
  %199 = icmp eq i32 %198, 0, !dbg !12147
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %200, metadata !11934, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 %200, metadata !11934, metadata !DIExpression()), !dbg !11944
  br i1 %199, label %209, label %201, !dbg !12149

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12150
  %203 = and i32 %202, 2, !dbg !12152
  %204 = icmp eq i32 %203, 0, !dbg !12152
  br i1 %204, label %205, label %217, !dbg !12153

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12154
  %207 = sub i32 %206, %200, !dbg !12157
  %208 = icmp ugt i32 %207, 5000, !dbg !12158
  br i1 %208, label %311, label %201, !dbg !12159, !llvm.loop !12160

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12162
  %211 = and i32 %210, 2, !dbg !12162
  %212 = icmp eq i32 %211, 0, !dbg !12162
  br i1 %212, label %217, label %213, !dbg !12164

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12165
  %215 = sub i32 %214, %200, !dbg !12168
  %216 = icmp ugt i32 %215, 5000, !dbg !12169
  br i1 %216, label %311, label %209, !dbg !12170, !llvm.loop !12171

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12173

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12174
  %220 = and i32 %219, -268435457, !dbg !12174
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12174
  br label %221, !dbg !12177

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12178
  %223 = load i32, i32* %222, align 4, !dbg !12178
  %224 = icmp eq i32 %223, 0, !dbg !12180
  br i1 %224, label %310, label %225, !dbg !12181

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12182
  %227 = and i32 %226, 12, !dbg !12182
  %228 = icmp eq i32 %227, 8, !dbg !12185
  br i1 %228, label %277, label %229, !dbg !12186

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12187
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12190
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %231, metadata !11934, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.value(metadata i32 %231, metadata !11934, metadata !DIExpression()), !dbg !11944
  br i1 %230, label %232, label %269, !dbg !12191

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12192
  %234 = and i32 %233, 33554432, !dbg !12192
  %235 = icmp eq i32 %234, 0, !dbg !12192
  br i1 %235, label %240, label %236, !dbg !12194

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12195
  %238 = sub i32 %237, %231, !dbg !12198
  %239 = icmp ugt i32 %238, 2, !dbg !12199
  br i1 %239, label %311, label %232, !dbg !12200, !llvm.loop !12201

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12203
  %242 = load i32, i32* %241, align 4, !dbg !12203
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12203
  %244 = load i32, i32* %243, align 4, !dbg !12203
  %245 = or i32 %244, %242, !dbg !12203
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12203
  %247 = load i32, i32* %246, align 4, !dbg !12203
  %248 = shl i32 %247, 6, !dbg !12203
  %249 = or i32 %245, %248, !dbg !12203
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12203
  %251 = load i32, i32* %250, align 4, !dbg !12203
  %252 = shl i32 %251, 15, !dbg !12203
  %253 = add i32 %252, -65536, !dbg !12203
  %254 = and i32 %253, -65536, !dbg !12203
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12203
  %256 = load i32, i32* %255, align 4, !dbg !12203
  %257 = shl i32 %256, 24, !dbg !12203
  %258 = or i32 %249, %257, !dbg !12203
  %259 = or i32 %258, %254, !dbg !12203
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12203
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12204
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %260, metadata !11934, metadata !DIExpression()), !dbg !11944
  br label %261, !dbg !12206

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12207
  %263 = and i32 %262, 33554432, !dbg !12208
  %264 = icmp eq i32 %263, 0, !dbg !12208
  br i1 %264, label %265, label %310, !dbg !12206

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12209
  %267 = sub i32 %266, %260, !dbg !12212
  %268 = icmp ugt i32 %267, 2, !dbg !12213
  br i1 %268, label %311, label %261, !dbg !12214, !llvm.loop !12215

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12217
  %271 = and i32 %270, 33554432, !dbg !12217
  %272 = icmp eq i32 %271, 0, !dbg !12217
  br i1 %272, label %310, label %273, !dbg !12219

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12220
  %275 = sub i32 %274, %231, !dbg !12223
  %276 = icmp ugt i32 %275, 2, !dbg !12224
  br i1 %276, label %311, label %269, !dbg !12225, !llvm.loop !12226

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12228
  br i1 %278, label %311, label %279, !dbg !12231

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %280, metadata !11935, metadata !DIExpression()), !dbg !11944
  %281 = and i32 %280, 4194304, !dbg !12234
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12236
  %283 = load i32, i32* %282, align 4, !dbg !12236
  %284 = icmp eq i32 %281, %283, !dbg !12237
  br i1 %284, label %285, label %311, !dbg !12238

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12239
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12240
  %288 = load i32, i32* %287, align 4, !dbg !12240
  %289 = icmp eq i32 %286, %288, !dbg !12241
  br i1 %289, label %290, label %311, !dbg !12242

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12243
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12244
  %293 = load i32, i32* %292, align 4, !dbg !12244
  %294 = shl i32 %293, 6, !dbg !12245
  %295 = icmp eq i32 %291, %294, !dbg !12246
  br i1 %295, label %296, label %311, !dbg !12247

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12248
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12249
  %299 = load i32, i32* %298, align 4, !dbg !12249
  %300 = shl i32 %299, 15, !dbg !12250
  %301 = add i32 %300, -65536, !dbg !12250
  %302 = and i32 %301, -65536, !dbg !12250
  %303 = icmp eq i32 %297, %302, !dbg !12251
  br i1 %303, label %304, label %311, !dbg !12252

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12253
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12254
  %307 = load i32, i32* %306, align 4, !dbg !12254
  %308 = shl i32 %307, 24, !dbg !12255
  %309 = icmp eq i32 %305, %308, !dbg !12256
  br i1 %309, label %310, label %311, !dbg !12257

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12258

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11944
  ret i32 %312, !dbg !12259
}

; Function Attrs: optsize
declare !dbg !12260 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12262 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12275, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %1, metadata !12276, metadata !DIExpression()), !dbg !12278
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12279
  br i1 %3, label %115, label %4, !dbg !12281

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12282
  %6 = and i32 %5, 7, !dbg !12282
  %7 = icmp ult i32 %6, %1, !dbg !12284
  br i1 %7, label %8, label %13, !dbg !12285

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12286
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12286
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12288
  %11 = and i32 %10, 7, !dbg !12288
  %12 = icmp eq i32 %11, %1, !dbg !12290
  br i1 %12, label %13, label %115, !dbg !12291

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12292
  %15 = load i32, i32* %14, align 4, !dbg !12292
  %16 = and i32 %15, 2, !dbg !12294
  %17 = icmp eq i32 %16, 0, !dbg !12295
  br i1 %17, label %39, label %18, !dbg !12296

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12297
  %20 = icmp eq i32 %19, 0, !dbg !12300
  br i1 %20, label %25, label %21, !dbg !12301

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12302
  %23 = or i32 %22, 7168, !dbg !12302
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12302
  %24 = load i32, i32* %14, align 4, !dbg !12304
  br label %25, !dbg !12306

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12304
  %27 = and i32 %26, 8, !dbg !12307
  %28 = icmp eq i32 %27, 0, !dbg !12308
  br i1 %28, label %32, label %29, !dbg !12309

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12310
  %31 = or i32 %30, 57344, !dbg !12310
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12310
  br label %32, !dbg !12312

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12313
  %34 = and i32 %33, -241, !dbg !12313
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12313
  %36 = load i32, i32* %35, align 4, !dbg !12313
  %37 = or i32 %34, %36, !dbg !12313
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12313
  %38 = load i32, i32* %14, align 4, !dbg !12314
  br label %39, !dbg !12316

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12314
  %41 = and i32 %40, 1, !dbg !12317
  %42 = icmp eq i32 %41, 0, !dbg !12318
  br i1 %42, label %73, label %43, !dbg !12319

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12320
  %45 = load i32, i32* %44, align 4, !dbg !12320
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12323

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12324
  %48 = and i32 %47, 131072, !dbg !12327
  %49 = icmp eq i32 %48, 0, !dbg !12327
  br i1 %49, label %115, label %58, !dbg !12328

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %52 = and i32 %51, 33554432, !dbg !12333
  %53 = icmp eq i32 %52, 0, !dbg !12333
  br i1 %53, label %115, label %58, !dbg !12334

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12335
  %56 = and i32 %55, 2, !dbg !12338
  %57 = icmp eq i32 %56, 0, !dbg !12338
  br i1 %57, label %115, label %58, !dbg !12339

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12340
  %60 = and i32 %59, -4, !dbg !12340
  %61 = or i32 %60, %45, !dbg !12340
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12340
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12341
  call void @llvm.dbg.value(metadata i32 %62, metadata !12277, metadata !DIExpression()), !dbg !12278
  br label %63, !dbg !12342

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12343
  %65 = and i32 %64, 12, !dbg !12343
  %66 = load i32, i32* %44, align 4, !dbg !12344
  %67 = shl i32 %66, 2, !dbg !12345
  %68 = icmp eq i32 %65, %67, !dbg !12346
  br i1 %68, label %73, label %69, !dbg !12342

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12347
  %71 = sub i32 %70, %62, !dbg !12350
  %72 = icmp ugt i32 %71, 5000, !dbg !12351
  br i1 %72, label %115, label %63, !dbg !12352, !llvm.loop !12353

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12355
  %75 = and i32 %74, 7, !dbg !12355
  %76 = icmp ugt i32 %75, %1, !dbg !12357
  br i1 %76, label %77, label %82, !dbg !12358

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12359
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12359
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12361
  %80 = and i32 %79, 7, !dbg !12361
  %81 = icmp eq i32 %80, %1, !dbg !12363
  br i1 %81, label %82, label %115, !dbg !12364

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12365
  %84 = and i32 %83, 4, !dbg !12367
  %85 = icmp eq i32 %84, 0, !dbg !12368
  br i1 %85, label %93, label %86, !dbg !12369

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12370
  %88 = and i32 %87, -7169, !dbg !12370
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12370
  %90 = load i32, i32* %89, align 4, !dbg !12370
  %91 = or i32 %88, %90, !dbg !12370
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12370
  %92 = load i32, i32* %14, align 4, !dbg !12372
  br label %93, !dbg !12374

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12372
  %95 = and i32 %94, 8, !dbg !12375
  %96 = icmp eq i32 %95, 0, !dbg !12376
  br i1 %96, label %104, label %97, !dbg !12377

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12378
  %99 = and i32 %98, -57345, !dbg !12378
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12378
  %101 = load i32, i32* %100, align 4, !dbg !12378
  %102 = shl i32 %101, 3, !dbg !12378
  %103 = or i32 %102, %99, !dbg !12378
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12378
  br label %104, !dbg !12380

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12381
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12382
  %107 = lshr i32 %106, 4, !dbg !12383
  %108 = and i32 %107, 15, !dbg !12383
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12384
  %110 = load i8, i8* %109, align 1, !dbg !12384
  %111 = zext i8 %110 to i32, !dbg !12384
  %112 = lshr i32 %105, %111, !dbg !12385
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12386
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12387
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12388
  br label %115, !dbg !12389

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12278
  ret i32 %116, !dbg !12390
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12391 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12393, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 0, metadata !12394, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 0, metadata !12395, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 0, metadata !12396, metadata !DIExpression()), !dbg !12397
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12398
  %2 = and i32 %1, 12, !dbg !12399
  %3 = icmp eq i32 %2, 8, !dbg !12400
  br i1 %3, label %4, label %21, !dbg !12400

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12401
  %6 = and i32 %5, 63, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %6, metadata !12393, metadata !DIExpression()), !dbg !12397
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12405
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12407
  %9 = lshr i32 %8, 6, !dbg !12407
  %10 = and i32 %9, 511, !dbg !12407
  %11 = zext i32 %10 to i64, !dbg !12407
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12407
  %13 = zext i32 %6 to i64, !dbg !12407
  %14 = udiv i64 %12, %13, !dbg !12407
  %15 = trunc i64 %14 to i32, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %15, metadata !12394, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 %15, metadata !12394, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 %15, metadata !12394, metadata !DIExpression()), !dbg !12397
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12408
  %17 = lshr i32 %16, 15, !dbg !12409
  %18 = and i32 %17, 6, !dbg !12409
  %19 = add nuw nsw i32 %18, 2, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %19, metadata !12395, metadata !DIExpression()), !dbg !12397
  %20 = udiv i32 %15, %19, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %20, metadata !12396, metadata !DIExpression()), !dbg !12397
  br label %21, !dbg !12411

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12412
  call void @llvm.dbg.value(metadata i32 %22, metadata !12396, metadata !DIExpression()), !dbg !12397
  ret i32 %22, !dbg !12413
}

; Function Attrs: optsize
declare !dbg !12414 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12417 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12421, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata i32 %1, metadata !12422, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata i32 %2, metadata !12423, metadata !DIExpression()), !dbg !12441
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12442
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12442
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12424, metadata !DIExpression()), !dbg !12443
  %8 = icmp eq i32 %0, 0, !dbg !12444
  br i1 %8, label %9, label %23, !dbg !12445

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12446
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12434, metadata !DIExpression()), !dbg !12446
  store volatile i32 0, i32* %5, align 4, !dbg !12446
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %12 = or i32 %11, 1, !dbg !12446
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %14 = and i32 %13, 1, !dbg !12446
  store volatile i32 %14, i32* %5, align 4, !dbg !12446
  %15 = load volatile i32, i32* %5, align 4, !dbg !12446
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12447
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12448
  store i32 256, i32* %16, align 4, !dbg !12449
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12450
  store i32 2, i32* %17, align 4, !dbg !12451
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12452
  store i32 3, i32* %18, align 4, !dbg !12453
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12454
  store i32 0, i32* %19, align 4, !dbg !12455
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12456
  store i32 0, i32* %20, align 4, !dbg !12457
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12458
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12459
  %22 = and i32 %21, -123731969, !dbg !12459
  br label %38, !dbg !12460

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12461
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12461
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12438, metadata !DIExpression()), !dbg !12461
  store volatile i32 0, i32* %6, align 4, !dbg !12461
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12461
  %26 = or i32 %25, 4, !dbg !12461
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12461
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12461
  %28 = and i32 %27, 4, !dbg !12461
  store volatile i32 %28, i32* %6, align 4, !dbg !12461
  %29 = load volatile i32, i32* %6, align 4, !dbg !12461
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12462
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12463
  store i32 512, i32* %30, align 4, !dbg !12464
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12465
  store i32 2, i32* %31, align 4, !dbg !12466
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12467
  store i32 3, i32* %32, align 4, !dbg !12468
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12469
  store i32 0, i32* %33, align 4, !dbg !12470
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12471
  store i32 0, i32* %34, align 4, !dbg !12472
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12473
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12474
  %36 = and i32 %35, 134217727, !dbg !12474
  %37 = shl i32 %2, 3, !dbg !12474
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12475
  %42 = or i32 %41, %40, !dbg !12475
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12475
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12476
  ret void, !dbg !12476
}

; Function Attrs: optsize
declare !dbg !12477 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12481 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12482
  ret void, !dbg !12483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12484 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12487 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12488
  ret i32 %1, !dbg !12489
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12490 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12491
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12492
  %3 = lshr i32 %2, 10, !dbg !12493
  %4 = and i32 %3, 7, !dbg !12493
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12494
  %6 = load i8, i8* %5, align 1, !dbg !12494
  %7 = zext i8 %6 to i32, !dbg !12494
  %8 = lshr i32 %1, %7, !dbg !12495
  ret i32 %8, !dbg !12496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12497 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12498
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12499
  %3 = lshr i32 %2, 13, !dbg !12500
  %4 = and i32 %3, 7, !dbg !12500
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12501
  %6 = load i8, i8* %5, align 1, !dbg !12501
  %7 = zext i8 %6 to i32, !dbg !12501
  %8 = lshr i32 %1, %7, !dbg !12502
  ret i32 %8, !dbg !12503
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12504 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12508, metadata !DIExpression()), !dbg !12509
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12510
  store i32 15, i32* %2, align 4, !dbg !12511
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12512
  %4 = and i32 %3, 262144, !dbg !12514
  %5 = icmp eq i32 %4, 0, !dbg !12515
  br i1 %5, label %8, label %6, !dbg !12516

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12517
  store i32 327680, i32* %7, align 4, !dbg !12519
  br label %15, !dbg !12520

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12521
  %10 = and i32 %9, 65536, !dbg !12523
  %11 = icmp eq i32 %10, 0, !dbg !12524
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12525
  br i1 %11, label %14, label %13, !dbg !12526

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12527
  br label %15, !dbg !12529

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12530
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12532
  %17 = and i32 %16, 1, !dbg !12534
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12535
  store i32 %17, i32* %18, align 4, !dbg !12537
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12538
  %20 = lshr i32 %19, 3, !dbg !12539
  %21 = and i32 %20, 31, !dbg !12539
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12540
  store i32 %21, i32* %22, align 4, !dbg !12541
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12542
  %24 = and i32 %23, 4, !dbg !12544
  %25 = icmp eq i32 %24, 0, !dbg !12545
  br i1 %25, label %28, label %26, !dbg !12546

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12547
  store i32 5, i32* %27, align 4, !dbg !12549
  br label %35, !dbg !12550

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12551
  %30 = and i32 %29, 1, !dbg !12553
  %31 = icmp eq i32 %30, 0, !dbg !12554
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12555
  br i1 %31, label %34, label %33, !dbg !12556

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12557
  br label %35, !dbg !12559

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12560
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12562
  %37 = and i32 %36, 1, !dbg !12564
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12565
  store i32 %37, i32* %38, align 4, !dbg !12567
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12568
  %40 = and i32 %39, 16777216, !dbg !12570
  %41 = icmp eq i32 %40, 0, !dbg !12571
  %42 = select i1 %41, i32 1, i32 2, !dbg !12572
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12573
  store i32 %42, i32* %43, align 4, !dbg !12575
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12576
  %45 = and i32 %44, 4194304, !dbg !12577
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12578
  store i32 %45, i32* %46, align 4, !dbg !12579
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12580
  %48 = and i32 %47, 63, !dbg !12581
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12582
  store i32 %48, i32* %49, align 4, !dbg !12583
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12584
  %51 = lshr i32 %50, 6, !dbg !12585
  %52 = and i32 %51, 511, !dbg !12585
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12586
  store i32 %52, i32* %53, align 4, !dbg !12587
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12588
  %55 = shl i32 %54, 1, !dbg !12589
  %56 = and i32 %55, 393216, !dbg !12589
  %57 = add nuw nsw i32 %56, 131072, !dbg !12589
  %58 = lshr exact i32 %57, 16, !dbg !12590
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12591
  store i32 %58, i32* %59, align 4, !dbg !12592
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12593
  %61 = lshr i32 %60, 24, !dbg !12594
  %62 = and i32 %61, 15, !dbg !12594
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12595
  store i32 %62, i32* %63, align 4, !dbg !12596
  ret void, !dbg !12597
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12598 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12602, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32* %1, metadata !12603, metadata !DIExpression()), !dbg !12604
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12605
  store i32 15, i32* %3, align 4, !dbg !12606
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12607
  %5 = and i32 %4, 3, !dbg !12608
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12609
  store i32 %5, i32* %6, align 4, !dbg !12610
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12611
  %8 = and i32 %7, 240, !dbg !12612
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12613
  store i32 %8, i32* %9, align 4, !dbg !12614
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12615
  %11 = and i32 %10, 7168, !dbg !12616
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12617
  store i32 %11, i32* %12, align 4, !dbg !12618
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12619
  %14 = lshr i32 %13, 3, !dbg !12620
  %15 = and i32 %14, 7168, !dbg !12620
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12621
  store i32 %15, i32* %16, align 4, !dbg !12622
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12623
  %18 = and i32 %17, 7, !dbg !12624
  store i32 %18, i32* %1, align 4, !dbg !12625
  ret void, !dbg !12626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12628
  %2 = and i32 %1, 128, !dbg !12628
  %3 = icmp eq i32 %2, 0, !dbg !12628
  br i1 %3, label %5, label %4, !dbg !12630

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12631
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12633
  br label %5, !dbg !12634

5:                                                ; preds = %4, %0
  ret void, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12636 {
  ret void, !dbg !12637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12641, metadata !DIExpression()), !dbg !12642
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12643
  ret void, !dbg !12644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12648, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata i32 1000, metadata !12649, metadata !DIExpression()), !dbg !12650
  %2 = udiv i32 %0, 1000, !dbg !12651
  %3 = add nsw i32 %2, -1, !dbg !12652
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12653
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12654
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12655
  ret void, !dbg !12656
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12657 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12659, metadata !DIExpression()), !dbg !12661
  %3 = bitcast i32* %2 to i8*, !dbg !12662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12662
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12660, metadata !DIExpression()), !dbg !12663
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12664
  store volatile i32 %4, i32* %2, align 4, !dbg !12663
  %5 = load volatile i32, i32* %2, align 4, !dbg !12665
  %6 = icmp eq i32 %0, -1, !dbg !12666
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12659, metadata !DIExpression()), !dbg !12661
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %8, metadata !12659, metadata !DIExpression()), !dbg !12661
  br label %9, !dbg !12668

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12659, metadata !DIExpression()), !dbg !12661
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !12659, metadata !DIExpression()), !dbg !12661
  %12 = shl i32 %11, 15, !dbg !12661
  %13 = ashr i32 %12, 31, !dbg !12661
  %14 = add i32 %13, %10, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %14, metadata !12659, metadata !DIExpression()), !dbg !12661
  %15 = icmp eq i32 %14, 0, !dbg !12668
  br i1 %15, label %16, label %9, !dbg !12668

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12672
  ret void, !dbg !12672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12675, metadata !DIExpression()), !dbg !12676
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12677
  ret void, !dbg !12678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12684, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 0, metadata !12687, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 0, metadata !12688, metadata !DIExpression()), !dbg !12689
  %2 = icmp eq i32 %0, 0, !dbg !12690
  br i1 %2, label %35, label %3, !dbg !12692

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12693
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12696
  %6 = icmp eq i32 %5, 32768, !dbg !12698
  br i1 %6, label %7, label %12, !dbg !12699

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !12700
  br i1 %8, label %12, label %9, !dbg !12703

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !12704
  %11 = zext i1 %10 to i32, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %11, metadata !12687, metadata !DIExpression()), !dbg !12689
  br label %12, !dbg !12707

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !12689
  call void @llvm.dbg.value(metadata i32 %13, metadata !12687, metadata !DIExpression()), !dbg !12689
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12708
  %15 = icmp eq i32 %14, 16384, !dbg !12710
  br i1 %15, label %16, label %24, !dbg !12711

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !12712
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !12715
  br i1 %19, label %24, label %20, !dbg !12715

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !12716
  %22 = and i1 %21, %18, !dbg !12719
  %23 = select i1 %22, i32 1, i32 %13, !dbg !12719
  call void @llvm.dbg.value(metadata i32 %23, metadata !12687, metadata !DIExpression()), !dbg !12689
  br label %24, !dbg !12719

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !12720
  call void @llvm.dbg.value(metadata i32 %25, metadata !12687, metadata !DIExpression()), !dbg !12689
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #24, !dbg !12721
  call void @llvm.dbg.value(metadata i32 2, metadata !12685, metadata !DIExpression()), !dbg !12689
  br label %26, !dbg !12722

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !12720
  call void @llvm.dbg.value(metadata i32 %27, metadata !12685, metadata !DIExpression()), !dbg !12689
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %28, metadata !12686, metadata !DIExpression()), !dbg !12689
  %29 = add nsw i32 %27, -1, !dbg !12725
  call void @llvm.dbg.value(metadata i32 %29, metadata !12685, metadata !DIExpression()), !dbg !12689
  %30 = icmp ne i32 %28, %25, !dbg !12726
  %31 = icmp ne i32 %29, 0, !dbg !12727
  %32 = select i1 %30, i1 %31, i1 false, !dbg !12727
  br i1 %32, label %26, label %33, !dbg !12728, !llvm.loop !12729

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !12731
  call void @llvm.dbg.value(metadata i32 %36, metadata !12688, metadata !DIExpression()), !dbg !12689
  ret i32 %36, !dbg !12732
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12733 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12735
  %2 = and i32 %1, 49152, !dbg !12735
  ret i32 %2, !dbg !12736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12739, metadata !DIExpression()), !dbg !12740
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12741
  %3 = and i32 %2, -8, !dbg !12741
  %4 = or i32 %3, %0, !dbg !12741
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12741
  ret void, !dbg !12742
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12743 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12744
  %2 = and i32 %1, 7, !dbg !12744
  ret i32 %2, !dbg !12745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12764, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12765, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata i32 0, metadata !12766, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata i32 0, metadata !12767, metadata !DIExpression()), !dbg !12768
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12769
  %4 = icmp eq i32 %3, 0, !dbg !12771
  br i1 %4, label %5, label %21, !dbg !12772

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %6, metadata !12767, metadata !DIExpression()), !dbg !12768
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.200() #24, !dbg !12775
  %8 = icmp eq i32 %7, 1, !dbg !12777
  br i1 %8, label %13, label %9, !dbg !12778

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.201() #24, !dbg !12779
  br label %10, !dbg !12781

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.200() #24, !dbg !12782
  %12 = icmp eq i32 %11, 1, !dbg !12783
  br i1 %12, label %13, label %10, !dbg !12781, !llvm.loop !12784

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12786
  %15 = load i32, i32* %14, align 4, !dbg !12786
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12787
  %17 = load i32, i32* %16, align 4, !dbg !12787
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12788
  %19 = load i32, i32* %18, align 4, !dbg !12788
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12789
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12790
  call void @llvm.dbg.value(metadata i32 %20, metadata !12766, metadata !DIExpression()), !dbg !12768
  br label %21, !dbg !12791

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12792
  call void @llvm.dbg.value(metadata i32 %22, metadata !12766, metadata !DIExpression()), !dbg !12768
  ret i32 %22, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12794 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.204() #24, !dbg !12800
  %2 = icmp ne i32 %1, 0, !dbg !12802
  call void @llvm.dbg.value(metadata i1 %2, metadata !12798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12799
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12803
  %4 = icmp ne i32 %3, 0, !dbg !12805
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12806
  %6 = zext i1 %5 to i32, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %6, metadata !12798, metadata !DIExpression()), !dbg !12799
  ret i32 %6, !dbg !12807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12812, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12813, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 0, metadata !12814, metadata !DIExpression()), !dbg !12815
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12816
  %4 = load i32, i32* %3, align 4, !dbg !12816
  %5 = and i32 %4, 63, !dbg !12817
  %6 = udiv i32 %0, %5, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %6, metadata !12814, metadata !DIExpression()), !dbg !12815
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12819
  %8 = load i32, i32* %7, align 4, !dbg !12819
  %9 = and i32 %8, 511, !dbg !12820
  %10 = mul i32 %9, %6, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %10, metadata !12814, metadata !DIExpression()), !dbg !12815
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12822
  %12 = load i32, i32* %11, align 4, !dbg !12822
  %13 = lshr i32 %12, 15, !dbg !12823
  %14 = and i32 %13, 131070, !dbg !12823
  %15 = add nuw nsw i32 %14, 2, !dbg !12823
  %16 = udiv i32 %10, %15, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %16, metadata !12814, metadata !DIExpression()), !dbg !12815
  ret i32 %16, !dbg !12825
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.200() unnamed_addr #15 !dbg !12826 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12827
  %2 = lshr i32 %1, 1, !dbg !12828
  %3 = and i32 %2, 1, !dbg !12828
  ret i32 %3, !dbg !12829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.201() unnamed_addr #14 !dbg !12830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12831
  %2 = or i32 %1, 1, !dbg !12831
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12831
  ret void, !dbg !12832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12835, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.value(metadata i32 %1, metadata !12836, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.value(metadata i32 %2, metadata !12837, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.value(metadata i32 %3, metadata !12838, metadata !DIExpression()), !dbg !12839
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12840
  %6 = and i32 %5, -4227072, !dbg !12840
  %7 = or i32 %1, %0, !dbg !12840
  %8 = shl i32 %2, 6, !dbg !12840
  %9 = or i32 %7, %8, !dbg !12840
  %10 = or i32 %9, %6, !dbg !12840
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12840
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12841
  %12 = and i32 %11, -196609, !dbg !12841
  %13 = or i32 %12, %3, !dbg !12841
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12841
  ret void, !dbg !12842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12847, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12848, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i32 0, metadata !12849, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i32 0, metadata !12850, metadata !DIExpression()), !dbg !12851
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12852
  %4 = load i32, i32* %3, align 4, !dbg !12852
  %5 = lshr i32 %4, 4, !dbg !12852
  %6 = and i32 %5, 15, !dbg !12852
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12852
  %8 = load i8, i8* %7, align 1, !dbg !12852
  %9 = zext i8 %8 to i32, !dbg !12852
  %10 = lshr i32 %0, %9, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %10, metadata !12850, metadata !DIExpression()), !dbg !12851
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12853
  %12 = icmp ult i32 %11, %10, !dbg !12855
  br i1 %12, label %13, label %16, !dbg !12856

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %14, metadata !12849, metadata !DIExpression()), !dbg !12851
  %15 = icmp eq i32 %14, 0, !dbg !12859
  br i1 %15, label %16, label %30, !dbg !12861

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.203() #24, !dbg !12862
  br label %17, !dbg !12864

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.204() #24, !dbg !12865
  %19 = icmp eq i32 %18, 1, !dbg !12866
  br i1 %19, label %20, label %17, !dbg !12864, !llvm.loop !12867

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12869
  tail call fastcc void @LL_RCC_SetAHBPrescaler.205(i32 noundef %21) #24, !dbg !12870
  tail call fastcc void @LL_RCC_SetSysClkSource.206() #24, !dbg !12871
  br label %22, !dbg !12872

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.207() #24, !dbg !12873
  %24 = icmp eq i32 %23, 8, !dbg !12874
  br i1 %24, label %25, label %22, !dbg !12872, !llvm.loop !12875

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12877
  %27 = load i32, i32* %26, align 4, !dbg !12877
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.208(i32 noundef %27) #24, !dbg !12878
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12879
  %29 = load i32, i32* %28, align 4, !dbg !12879
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.209(i32 noundef %29) #24, !dbg !12880
  br label %30, !dbg !12881

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12882
  %33 = icmp ugt i32 %32, %10, !dbg !12884
  br i1 %33, label %34, label %36, !dbg !12885

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12886
  call void @llvm.dbg.value(metadata i32 %35, metadata !12849, metadata !DIExpression()), !dbg !12851
  br label %36, !dbg !12888

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12851
  call void @llvm.dbg.value(metadata i32 %37, metadata !12849, metadata !DIExpression()), !dbg !12851
  %38 = icmp eq i32 %37, 0, !dbg !12889
  br i1 %38, label %39, label %40, !dbg !12891

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12892
  br label %40, !dbg !12894

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.203() unnamed_addr #14 !dbg !12896 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12897
  %2 = or i32 %1, 16777216, !dbg !12897
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12897
  ret void, !dbg !12898
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.204() unnamed_addr #15 !dbg !12899 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12900
  %2 = lshr i32 %1, 25, !dbg !12901
  %3 = and i32 %2, 1, !dbg !12901
  ret i32 %3, !dbg !12902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.205(i32 noundef %0) unnamed_addr #14 !dbg !12903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12905, metadata !DIExpression()), !dbg !12906
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12907
  %3 = and i32 %2, -241, !dbg !12907
  %4 = or i32 %3, %0, !dbg !12907
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12907
  ret void, !dbg !12908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.206() unnamed_addr #14 !dbg !12909 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12911, metadata !DIExpression()), !dbg !12912
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12913
  %2 = and i32 %1, -4, !dbg !12913
  %3 = or i32 %2, 2, !dbg !12913
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12913
  ret void, !dbg !12914
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.207() unnamed_addr #15 !dbg !12915 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  %2 = and i32 %1, 12, !dbg !12916
  ret i32 %2, !dbg !12917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.208(i32 noundef %0) unnamed_addr #14 !dbg !12918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12920, metadata !DIExpression()), !dbg !12921
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12922
  %3 = and i32 %2, -7169, !dbg !12922
  %4 = or i32 %3, %0, !dbg !12922
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12922
  ret void, !dbg !12923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.209(i32 noundef %0) unnamed_addr #14 !dbg !12924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12926, metadata !DIExpression()), !dbg !12927
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  %3 = and i32 %2, -57345, !dbg !12928
  %4 = or i32 %3, %0, !dbg !12928
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  ret void, !dbg !12929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12930 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12931
  %2 = lshr i32 %1, 27, !dbg !12932
  %3 = and i32 %2, 1, !dbg !12932
  ret i32 %3, !dbg !12933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12938, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 %1, metadata !12939, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12940, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12941, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12943, metadata !DIExpression()), !dbg !12944
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12945
  %6 = icmp eq i32 %5, 0, !dbg !12947
  br i1 %6, label %7, label %27, !dbg !12948

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12949
  call void @llvm.dbg.value(metadata i32 %8, metadata !12943, metadata !DIExpression()), !dbg !12944
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.210() #24, !dbg !12951
  %10 = icmp eq i32 %9, 1, !dbg !12953
  br i1 %10, label %19, label %11, !dbg !12954

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12955
  br i1 %12, label %13, label %14, !dbg !12958

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12959
  br label %15, !dbg !12961

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.211() #24, !dbg !12962
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.212() #24, !dbg !12964
  br label %16, !dbg !12965

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.210() #24, !dbg !12966
  %18 = icmp eq i32 %17, 1, !dbg !12967
  br i1 %18, label %19, label %16, !dbg !12965, !llvm.loop !12968

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12970
  %21 = load i32, i32* %20, align 4, !dbg !12970
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12971
  %23 = load i32, i32* %22, align 4, !dbg !12971
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12972
  %25 = load i32, i32* %24, align 4, !dbg !12972
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.202(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12973
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %26, metadata !12942, metadata !DIExpression()), !dbg !12944
  br label %27, !dbg !12975

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12976
  call void @llvm.dbg.value(metadata i32 %28, metadata !12942, metadata !DIExpression()), !dbg !12944
  ret i32 %28, !dbg !12977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.210() unnamed_addr #15 !dbg !12978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  %2 = lshr i32 %1, 17, !dbg !12980
  %3 = and i32 %2, 1, !dbg !12980
  ret i32 %3, !dbg !12981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12982 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12983
  %2 = or i32 %1, 262144, !dbg !12983
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.211() unnamed_addr #14 !dbg !12985 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12986
  %2 = and i32 %1, -262145, !dbg !12986
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.212() unnamed_addr #14 !dbg !12988 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12989
  %2 = or i32 %1, 65536, !dbg !12989
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12989
  ret void, !dbg !12990
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12991 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12994, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 undef, metadata !12994, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 undef, metadata !12994, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13010
  ret void, !dbg !13011
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13016, metadata !DIExpression()), !dbg !13018
  %2 = icmp eq i8* %0, null, !dbg !13019
  br i1 %2, label %29, label %3, !dbg !13021

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13022
  %5 = icmp eq i8 %4, 0, !dbg !13023
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13024
  br i1 %6, label %29, label %8, !dbg !13024

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13017, metadata !DIExpression()), !dbg !13018
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13025

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13017, metadata !DIExpression()), !dbg !13018
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13027
  br i1 %10, label %11, label %15, !dbg !13032

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13033
  %13 = load i8*, i8** %12, align 4, !dbg !13033
  %14 = icmp eq i8* %13, %0, !dbg !13034
  br i1 %14, label %29, label %15, !dbg !13035

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13036
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13017, metadata !DIExpression()), !dbg !13018
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13037
  br i1 %17, label %7, label %8, !dbg !13038, !llvm.loop !13039

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13017, metadata !DIExpression()), !dbg !13018
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13041
  br i1 %20, label %21, label %26, !dbg !13045

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13046
  %23 = load i8*, i8** %22, align 4, !dbg !13046
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13047
  %25 = icmp eq i32 %24, 0, !dbg !13048
  br i1 %25, label %29, label %26, !dbg !13049

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13050
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13017, metadata !DIExpression()), !dbg !13018
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13051
  br i1 %28, label %29, label %18, !dbg !13025, !llvm.loop !13052

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13018
  ret %struct.device* %30, !dbg !13054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13059, metadata !DIExpression()), !dbg !13060
  %2 = icmp eq %struct.device* %0, null, !dbg !13061
  br i1 %2, label %14, label %3, !dbg !13063

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13064
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13064
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13065
  %7 = load i8, i8* %6, align 1, !dbg !13065
  %8 = and i8 %7, 1, !dbg !13065
  %9 = icmp eq i8 %8, 0, !dbg !13065
  br i1 %9, label %14, label %10, !dbg !13066

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13067
  %12 = load i8, i8* %11, align 1, !dbg !13067
  %13 = icmp eq i8 %12, 0, !dbg !13068
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13060
  ret i1 %15, !dbg !13069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13070 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13075, metadata !DIExpression()), !dbg !13076
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13077
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13079 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13087, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13088, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i8* %2, metadata !13089, metadata !DIExpression()), !dbg !13092
  %5 = bitcast i32* %4 to i8*, !dbg !13093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 0, metadata !13090, metadata !DIExpression()), !dbg !13092
  store i32 0, i32* %4, align 4, !dbg !13094
  call void @llvm.dbg.value(metadata i32* %4, metadata !13090, metadata !DIExpression(DW_OP_deref)), !dbg !13092
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13095
  call void @llvm.dbg.value(metadata i16* %6, metadata !13091, metadata !DIExpression()), !dbg !13092
  %7 = load i32, i32* %4, align 4, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %7, metadata !13090, metadata !DIExpression()), !dbg !13092
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13097
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13098
  ret i32 %8, !dbg !13099
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13104, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32* %1, metadata !13105, metadata !DIExpression()), !dbg !13110
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13111
  %4 = load i16*, i16** %3, align 4, !dbg !13111
  call void @llvm.dbg.value(metadata i16* %4, metadata !13106, metadata !DIExpression()), !dbg !13110
  %5 = icmp eq i16* %4, null, !dbg !13112
  br i1 %5, label %14, label %6, !dbg !13113

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13114
  call void @llvm.dbg.value(metadata i32 %7, metadata !13107, metadata !DIExpression()), !dbg !13114
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13115
  %9 = load i16, i16* %8, align 2, !dbg !13115
  %10 = add i16 %9, -32767, !dbg !13116
  %11 = icmp ult i16 %10, 2, !dbg !13116
  %12 = add i32 %7, 1, !dbg !13117
  call void @llvm.dbg.value(metadata i32 %12, metadata !13107, metadata !DIExpression()), !dbg !13114
  br i1 %11, label %13, label %6, !dbg !13116, !llvm.loop !13119

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13122
  br label %14, !dbg !13123

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13125 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13129, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i32 %1, metadata !13130, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13131, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i8* %3, metadata !13132, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i32 0, metadata !13133, metadata !DIExpression()), !dbg !13141
  %5 = icmp eq i32 %1, 0, !dbg !13142
  br i1 %5, label %16, label %8, !dbg !13143

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13133, metadata !DIExpression()), !dbg !13141
  %7 = icmp eq i32 %15, %1, !dbg !13142
  br i1 %7, label %16, label %8, !dbg !13143, !llvm.loop !13144

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13133, metadata !DIExpression()), !dbg !13141
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13146
  %11 = load i16, i16* %10, align 2, !dbg !13146
  call void @llvm.dbg.value(metadata i16 %11, metadata !13135, metadata !DIExpression()), !dbg !13147
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13148
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13138, metadata !DIExpression()), !dbg !13147
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13149
  call void @llvm.dbg.value(metadata i32 %13, metadata !13139, metadata !DIExpression()), !dbg !13147
  %14 = icmp slt i32 %13, 0, !dbg !13150
  %15 = add nuw i32 %9, 1, !dbg !13152
  call void @llvm.dbg.value(metadata i32 %15, metadata !13133, metadata !DIExpression()), !dbg !13141
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13154 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13158, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13160, metadata !DIExpression()), !dbg !13161
  %2 = sext i16 %0 to i32, !dbg !13162
  %3 = icmp slt i16 %0, 1, !dbg !13164
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13165
  %6 = add nsw i32 %2, -1, !dbg !13165
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13165
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13165
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13159, metadata !DIExpression()), !dbg !13161
  ret %struct.device* %8, !dbg !13166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13167 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13169, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13170, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i8* %2, metadata !13171, metadata !DIExpression()), !dbg !13174
  %5 = bitcast i32* %4 to i8*, !dbg !13175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 0, metadata !13172, metadata !DIExpression()), !dbg !13174
  store i32 0, i32* %4, align 4, !dbg !13176
  call void @llvm.dbg.value(metadata i32* %4, metadata !13172, metadata !DIExpression(DW_OP_deref)), !dbg !13174
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13177
  call void @llvm.dbg.value(metadata i16* %6, metadata !13173, metadata !DIExpression()), !dbg !13174
  %7 = load i32, i32* %4, align 4, !dbg !13178
  call void @llvm.dbg.value(metadata i32 %7, metadata !13172, metadata !DIExpression()), !dbg !13174
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13180
  ret i32 %8, !dbg !13181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13184, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32* %1, metadata !13185, metadata !DIExpression()), !dbg !13189
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13190
  %4 = load i16*, i16** %3, align 4, !dbg !13190
  call void @llvm.dbg.value(metadata i16* %4, metadata !13186, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 0, metadata !13187, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 0, metadata !13188, metadata !DIExpression()), !dbg !13189
  %5 = icmp eq i16* %4, null, !dbg !13191
  br i1 %5, label %22, label %6, !dbg !13193

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13187, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i16* %8, metadata !13186, metadata !DIExpression()), !dbg !13189
  %9 = load i16, i16* %8, align 2, !dbg !13194
  %10 = icmp eq i16 %9, -32768, !dbg !13198
  call void @llvm.dbg.value(metadata i32 undef, metadata !13187, metadata !DIExpression()), !dbg !13189
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13199
  call void @llvm.dbg.value(metadata i16* %11, metadata !13186, metadata !DIExpression()), !dbg !13189
  %12 = zext i1 %10 to i32, !dbg !13200
  %13 = add i32 %7, %12, !dbg !13200
  call void @llvm.dbg.value(metadata i32 %13, metadata !13187, metadata !DIExpression()), !dbg !13189
  %14 = icmp eq i32 %13, 2, !dbg !13201
  br i1 %14, label %15, label %6, !dbg !13202

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13189
  call void @llvm.dbg.value(metadata i32 %16, metadata !13188, metadata !DIExpression()), !dbg !13189
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13203
  %18 = load i16, i16* %17, align 2, !dbg !13203
  %19 = icmp eq i16 %18, 32767, !dbg !13204
  %20 = add i32 %16, 1, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %20, metadata !13188, metadata !DIExpression()), !dbg !13189
  br i1 %19, label %21, label %15, !dbg !13207, !llvm.loop !13208

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13210
  br label %22, !dbg !13211

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13212
  call void @llvm.dbg.value(metadata i16* %23, metadata !13186, metadata !DIExpression()), !dbg !13189
  ret i16* %23, !dbg !13213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13214 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13218
  ret i32* %2, !dbg !13219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13220 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13371, metadata !DIExpression()), !dbg !13374
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13372, metadata !DIExpression()), !dbg !13374
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13373, metadata !DIExpression()), !dbg !13374
  ret void, !dbg !13375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 %1, metadata !13381, metadata !DIExpression()), !dbg !13382
  ret void, !dbg !13383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13388, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 %1, metadata !13389, metadata !DIExpression()), !dbg !13390
  ret void, !dbg !13391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13396, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i8* %1, metadata !13397, metadata !DIExpression()), !dbg !13398
  ret i32 -134, !dbg !13399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13404, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata i8* %1, metadata !13405, metadata !DIExpression()), !dbg !13406
  ret i32 -134, !dbg !13407
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13411, metadata !DIExpression()), !dbg !13412
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13413, !srcloc !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()) #23, !dbg !13420
  call void @llvm.dbg.value(metadata i32 undef, metadata !13417, metadata !DIExpression()) #23, !dbg !13420
  br label %3, !dbg !13421

3:                                                ; preds = %3, %1
  br label %3, !dbg !13422, !llvm.loop !13425
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13432, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13433, metadata !DIExpression()), !dbg !13434
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.217, i32 0, i32 0), i32 noundef 69) #25, !dbg !13435
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13440
  unreachable, !dbg !13440
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13443, metadata !DIExpression()), !dbg !13444
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13445
  unreachable, !dbg !13445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13448, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13449, metadata !DIExpression()), !dbg !13452
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13453, !srcloc !13419
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13453
  call void @llvm.dbg.value(metadata i32 %4, metadata !13416, metadata !DIExpression()) #23, !dbg !13455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13417, metadata !DIExpression()) #23, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %4, metadata !13450, metadata !DIExpression()), !dbg !13452
  %5 = tail call fastcc %struct.k_thread* @k_current_get.220() #26, !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13451, metadata !DIExpression()), !dbg !13452
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13457
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.221, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13457
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13462
  br i1 %7, label %20, label %8, !dbg !13464

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13465, metadata !DIExpression()), !dbg !13470
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13472
  %10 = load i32, i32* %9, align 4, !dbg !13472
  %11 = and i32 %10, 511, !dbg !13473
  %12 = icmp eq i32 %11, 0, !dbg !13474
  br i1 %12, label %14, label %13, !dbg !13475

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 69) #25, !dbg !13476
  br label %14, !dbg !13482

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13483
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.223, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13483
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13488
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13465, metadata !DIExpression()), !dbg !13489
  %16 = load i32, i32* %9, align 4, !dbg !13494
  %17 = and i32 %16, 511, !dbg !13495
  %18 = icmp eq i32 %17, 0, !dbg !13496
  br i1 %18, label %22, label %19, !dbg !13497

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13498, metadata !DIExpression()) #23, !dbg !13501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13504, !srcloc !13505
  br label %25, !dbg !13506

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13483
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.223, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13483
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13488
  br label %22, !dbg !13507

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13508
  call void @llvm.dbg.value(metadata i32 %4, metadata !13498, metadata !DIExpression()) #23, !dbg !13511
  call void @llvm.dbg.value(metadata i32 %4, metadata !13498, metadata !DIExpression()) #23, !dbg !13514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13452
  br i1 %23, label %25, label %24, !dbg !13516

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.224(%struct.k_thread* noundef %5) #24, !dbg !13517
  br label %25, !dbg !13520

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.220() unnamed_addr #11 !dbg !13521 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.232() #26, !dbg !13525
  ret %struct.k_thread* %1, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !13527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13531, metadata !DIExpression()), !dbg !13532
  %2 = icmp ult i32 %0, 5, !dbg !13533
  br i1 %2, label %3, label %6, !dbg !13533

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13533
  %5 = load i8*, i8** %4, align 4, !dbg !13533
  br label %6, !dbg !13533

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.226, i32 0, i32 0), %1 ], !dbg !13534
  ret i8* %7, !dbg !13536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13541, metadata !DIExpression()), !dbg !13543
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13544
  br i1 %2, label %9, label %3, !dbg !13545

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13546
  call void @llvm.dbg.value(metadata i8* %4, metadata !13542, metadata !DIExpression()), !dbg !13543
  %5 = icmp eq i8* %4, null, !dbg !13547
  br i1 %5, label %9, label %6, !dbg !13549

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13550
  %8 = icmp eq i8 %7, 0, !dbg !13551
  br i1 %8, label %9, label %10, !dbg !13552

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.225, i32 0, i32 0), metadata !13542, metadata !DIExpression()), !dbg !13543
  br label %10, !dbg !13553

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.225, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13543
  call void @llvm.dbg.value(metadata i8* %11, metadata !13542, metadata !DIExpression()), !dbg !13543
  ret i8* %11, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.224(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13560, metadata !DIExpression()), !dbg !13561
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13562, !srcloc !13564
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13565
  ret void, !dbg !13566
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.232() unnamed_addr #11 !dbg !13567 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13568, !srcloc !13570
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13571
  ret %struct.k_thread* %1, !dbg !13572
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13577, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.value(metadata i32 %1, metadata !13578, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.value(metadata i32 %2, metadata !13579, metadata !DIExpression()), !dbg !13580
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13581
  ret void, !dbg !13582
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13587, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i8* %1, metadata !13588, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 %2, metadata !13589, metadata !DIExpression()), !dbg !13590
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13591
  ret void, !dbg !13592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13593 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13594
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13598, metadata !DIExpression()), !dbg !13599
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13600
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13601
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13602
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13603
  %4 = trunc i32 %0 to i8, !dbg !13604
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13605
  store i8 %4, i8* %5, align 4, !dbg !13606
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13607
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13608
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13609
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13610
  store i8* %8, i8** %9, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13615, metadata !DIExpression()), !dbg !13621
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13622
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13616, metadata !DIExpression()), !dbg !13621
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13623
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13617, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.239, i32 0, i32 0), metadata !13620, metadata !DIExpression()), !dbg !13621
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13624
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13625
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.239, i32 0, i32 0)) #25, !dbg !13626
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13627
  ret void, !dbg !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !13629 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13633, metadata !DIExpression()), !dbg !13634
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13635
  ret i8* %2, !dbg !13636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13642, metadata !DIExpression()), !dbg !13643
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13644
  %3 = load i8, i8* %2, align 1, !dbg !13645
  %4 = and i8 %3, -5, !dbg !13645
  store i8 %4, i8* %2, align 1, !dbg !13645
  ret void, !dbg !13646
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13647 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13650
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13651
  %3 = ptrtoint i8* %2 to i32, !dbg !13660
  %4 = add i32 %3, 2048, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %4, metadata !13655, metadata !DIExpression()) #23, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %4, metadata !13663, metadata !DIExpression()) #23, !dbg !13666
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13668, !srcloc !13669
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13670
  %6 = or i32 %5, 512, !dbg !13670
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13670
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -2, i32 noundef 255) #25, !dbg !13671
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -5, i32 noundef 0) #25, !dbg !13674
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -12, i32 noundef 0) #25, !dbg !13675
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -11, i32 noundef 0) #25, !dbg !13676
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -10, i32 noundef 0) #25, !dbg !13677
  tail call fastcc void @__NVIC_SetPriority.242(i32 noundef -4, i32 noundef 0) #25, !dbg !13678
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13679
  %8 = or i32 %7, 458752, !dbg !13679
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13679
  tail call void @z_arm_fault_init() #25, !dbg !13680
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13681
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13682
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13685
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13686
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13687
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13688
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13688
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13649, metadata !DIExpression()), !dbg !13689
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13690
  call void @z_device_state_init() #25, !dbg !13691
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13692
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13693
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13694
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13695
  unreachable, !dbg !13695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2217, metadata !DIExpression()), !dbg !13696
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13697
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2218, metadata !DIExpression()), !dbg !13696
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2218, metadata !DIExpression()), !dbg !13696
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13698
  br i1 %7, label %8, label %35, !dbg !13699

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2218, metadata !DIExpression()), !dbg !13696
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13700
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13700
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2228, metadata !DIExpression()), !dbg !13701
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13702
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13702
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %14, metadata !2232, metadata !DIExpression()), !dbg !13701
  %15 = icmp eq %struct.device* %11, null, !dbg !13704
  br i1 %15, label %32, label %16, !dbg !13706

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13707
  br i1 %17, label %26, label %18, !dbg !13710

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %19, metadata !2232, metadata !DIExpression()), !dbg !13701
  %20 = icmp ult i32 %19, 255, !dbg !13713
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13713
  call void @llvm.dbg.value(metadata i32 %21, metadata !2232, metadata !DIExpression()), !dbg !13701
  %22 = trunc i32 %21 to i8, !dbg !13714
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13715
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13715
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13716
  store i8 %22, i8* %25, align 1, !dbg !13717
  br label %26, !dbg !13718

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13719
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13719
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13720
  %30 = load i8, i8* %29, align 1, !dbg !13721
  %31 = or i8 %30, 1, !dbg !13721
  store i8 %31, i8* %29, align 1, !dbg !13721
  br label %32, !dbg !13722

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13723
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2218, metadata !DIExpression()), !dbg !13696
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13698
  br i1 %34, label %8, label %35, !dbg !13699, !llvm.loop !13724

35:                                               ; preds = %32, %1
  ret void, !dbg !13726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.242(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13729, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 %1, metadata !13730, metadata !DIExpression()), !dbg !13731
  %3 = trunc i32 %1 to i8, !dbg !13732
  %4 = shl i8 %3, 4, !dbg !13732
  %5 = and i32 %0, 15, !dbg !13735
  %6 = add nsw i32 %5, -4, !dbg !13736
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13737
  store volatile i8 %4, i8* %7, align 1, !dbg !13738
  ret void, !dbg !13739
}

; Function Attrs: optsize
declare !dbg !13740 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13746
  store i8 1, i8* %2, align 1, !dbg !13747
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13748
  store i8 1, i8* %3, align 4, !dbg !13749
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13750
  store i32 0, i32* %4, align 4, !dbg !13751
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13752
  store i32 0, i32* %5, align 4, !dbg !13753
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13754
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13755
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13756
  ret void, !dbg !13757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13758 {
  tail call void @z_sched_init() #25, !dbg !13763
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13764
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.243, i32 0, i32 0)) #25, !dbg !13765
  call void @llvm.dbg.value(metadata i8* %1, metadata !13762, metadata !DIExpression()), !dbg !13766
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13767
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13768
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13769
  ret i8* %1, !dbg !13770
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13775, metadata !DIExpression()), !dbg !13776
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13777
  unreachable, !dbg !13778
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13781, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %1, metadata !13782, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %2, metadata !13783, metadata !DIExpression()), !dbg !13784
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13785
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13786
  tail call void @boot_banner() #25, !dbg !13787
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13788
  tail call void @z_init_static_threads() #25, !dbg !13789
  tail call void @main() #25, !dbg !13790
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13791
  %5 = and i8 %4, -2, !dbg !13791
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13793 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13803, metadata !DIExpression()), !dbg !13805
  call void @llvm.dbg.value(metadata i8* %1, metadata !13804, metadata !DIExpression()), !dbg !13805
  ret void, !dbg !13806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13807 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata i8* %1, metadata !13810, metadata !DIExpression()), !dbg !13811
  ret void, !dbg !13812
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13813 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13814, !srcloc !13821
  call void @llvm.dbg.value(metadata i32 %1, metadata !13817, metadata !DIExpression()) #23, !dbg !13822
  %2 = icmp ne i32 %1, 0, !dbg !13823
  ret i1 %2, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13825 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13826
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13827
  %3 = load i8, i8* %2, align 4, !dbg !13828
  %4 = or i8 %3, 1, !dbg !13828
  store i8 %4, i8* %2, align 4, !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13830 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13831
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13832
  %3 = load i8, i8* %2, align 4, !dbg !13833
  %4 = and i8 %3, -2, !dbg !13833
  store i8 %4, i8* %2, align 4, !dbg !13833
  ret void, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13835 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13837
  %3 = load i8, i8* %2, align 4, !dbg !13837
  %4 = and i8 %3, 1, !dbg !13838
  %5 = icmp ne i8 %4, 0, !dbg !13839
  ret i1 %5, !dbg !13840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i8* %1, metadata !13846, metadata !DIExpression()), !dbg !13847
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13848
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13850
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13845, metadata !DIExpression()), !dbg !13847
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13851
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13852
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13853
  store i8 0, i8* %8, align 1, !dbg !13854
  ret i32 0, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !13856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13862
  ret i8* %2, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13868, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i8* %1, metadata !13869, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i32 %2, metadata !13870, metadata !DIExpression()), !dbg !13871
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13872
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13873
  ret i32 0, !dbg !13874
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2358, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8* %1, metadata !2359, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %2, metadata !2360, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 0, metadata !2361, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8 undef, metadata !2363, metadata !DIExpression()), !dbg !13875
  %4 = icmp eq i8* %1, null, !dbg !13876
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13878
  br i1 %6, label %46, label %7, !dbg !13878

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13879
  %9 = load i8, i8* %8, align 1, !dbg !13879
  call void @llvm.dbg.value(metadata i8 %9, metadata !2363, metadata !DIExpression()), !dbg !13875
  %10 = add i32 %2, -1, !dbg !13880
  call void @llvm.dbg.value(metadata i32 %10, metadata !2360, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8 0, metadata !2364, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i8 %9, metadata !2363, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 0, metadata !2361, metadata !DIExpression()), !dbg !13875
  %11 = icmp eq i8 %9, 0, !dbg !13882
  br i1 %11, label %12, label %15, !dbg !13884

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13885
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13886
  store i8 0, i8* %14, align 1, !dbg !13887
  br label %46, !dbg !13888

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2364, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i8 %17, metadata !2363, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %18, metadata !2361, metadata !DIExpression()), !dbg !13875
  %19 = zext i8 %17 to i32, !dbg !13889
  %20 = zext i8 %16 to i32, !dbg !13890
  %21 = shl nuw i32 1, %20, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %21, metadata !2362, metadata !DIExpression()), !dbg !13875
  %22 = and i32 %21, %19, !dbg !13892
  %23 = icmp eq i32 %22, 0, !dbg !13894
  br i1 %23, label %42, label %24, !dbg !13895

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13896
  %26 = sub i32 %10, %18, !dbg !13897
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13898
  %28 = load i8*, i8** %27, align 4, !dbg !13898
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13899
  %30 = load i32, i32* %29, align 4, !dbg !13899
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13900
  %32 = add i32 %31, %18, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %32, metadata !2361, metadata !DIExpression()), !dbg !13875
  %33 = trunc i32 %21 to i8, !dbg !13902
  %34 = xor i8 %33, -1, !dbg !13902
  %35 = and i8 %17, %34, !dbg !13902
  call void @llvm.dbg.value(metadata i8 %35, metadata !2363, metadata !DIExpression()), !dbg !13875
  %36 = icmp eq i8 %35, 0, !dbg !13903
  br i1 %36, label %12, label %37, !dbg !13905

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13906
  %39 = sub i32 %10, %32, !dbg !13908
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.248, i32 0, i32 0), i32 noundef 1) #24, !dbg !13909
  %41 = add i32 %40, %32, !dbg !13910
  call void @llvm.dbg.value(metadata i32 %41, metadata !2361, metadata !DIExpression()), !dbg !13875
  br label %42, !dbg !13911

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13875
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13875
  call void @llvm.dbg.value(metadata i8 %44, metadata !2363, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %43, metadata !2361, metadata !DIExpression()), !dbg !13875
  %45 = add i8 %16, 1, !dbg !13912
  call void @llvm.dbg.value(metadata i8 %45, metadata !2364, metadata !DIExpression()), !dbg !13881
  br label %15, !dbg !13884

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.249, i32 0, i32 0), %3 ], !dbg !13875
  ret i8* %47, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13918, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i32 %1, metadata !13919, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i8* %2, metadata !13920, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i32 %3, metadata !13921, metadata !DIExpression()), !dbg !13923
  %5 = icmp ult i32 %1, %3, !dbg !13924
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %6, metadata !13922, metadata !DIExpression()), !dbg !13923
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13925
  ret i32 %6, !dbg !13926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13931, metadata !DIExpression()), !dbg !13932
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13933
  ret void, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13944, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13945, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %2, metadata !13946, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13947, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %4, metadata !13948, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %5, metadata !13949, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %6, metadata !13950, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %7, metadata !13951, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %8, metadata !13952, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %9, metadata !13953, metadata !DIExpression()), !dbg !13955
  %11 = icmp eq i32 %7, 15, !dbg !13956
  br i1 %11, label %12, label %15, !dbg !13956

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13956
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13956
  br i1 %14, label %19, label %18, !dbg !13956

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13956
  %17 = icmp ult i32 %16, 31, !dbg !13956
  br i1 %17, label %19, label %18, !dbg !13956

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 536) #25, !dbg !13960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.264, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 536) #25, !dbg !13960
  unreachable, !dbg !13960

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13962
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13963
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13964
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13965
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13966
  call void @llvm.dbg.value(metadata i8* %22, metadata !13954, metadata !DIExpression()), !dbg !13955
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13967
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13968
  store i8* null, i8** %23, align 4, !dbg !13969
  %24 = icmp eq i8* %9, null, !dbg !13970
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13972
  br i1 %24, label %29, label %26, !dbg !13973

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13974
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13976
  store i8 0, i8* %28, align 1, !dbg !13977
  br label %30, !dbg !13978

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13979
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13981
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13981
  br i1 %32, label %36, label %33, !dbg !13983

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13984
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13984
  br label %36, !dbg !13985

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13955
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13986
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13988
  ret i8* %22, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !13990 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13996
  ret i1 %2, !dbg !13997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13998 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14005
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14006
  ret void, !dbg !14007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14013, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %1, metadata !14014, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %2, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %3, metadata !14016, metadata !DIExpression()), !dbg !14017
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14018
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14019
  %6 = trunc i32 %3 to i8, !dbg !14020
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14021
  store i8 %6, i8* %7, align 4, !dbg !14022
  %8 = trunc i32 %2 to i8, !dbg !14023
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14024
  store i8 %8, i8* %9, align 1, !dbg !14025
  %10 = trunc i32 %1 to i8, !dbg !14026
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14027
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14027
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14027
  store i8 %10, i8* %13, align 2, !dbg !14028
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14029
  store i8 0, i8* %14, align 1, !dbg !14030
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14031
  ret void, !dbg !14032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14037, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14038, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 %2, metadata !14039, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 0, metadata !14044, metadata !DIExpression()), !dbg !14045
  %4 = add i32 %2, 7, !dbg !14046
  %5 = and i32 %4, -8, !dbg !14046
  %6 = add i32 %5, 64, !dbg !14046
  call void @llvm.dbg.value(metadata i32 %6, metadata !14040, metadata !DIExpression()), !dbg !14045
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.265(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14048
  call void @llvm.dbg.value(metadata i8* %7, metadata !14043, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 %5, metadata !14041, metadata !DIExpression()), !dbg !14045
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14049
  call void @llvm.dbg.value(metadata i8* %8, metadata !14042, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 0, metadata !14044, metadata !DIExpression()), !dbg !14045
  %9 = ptrtoint i8* %7 to i32, !dbg !14050
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14051
  store i32 %9, i32* %10, align 4, !dbg !14052
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14053
  store i32 %5, i32* %11, align 4, !dbg !14054
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14055
  store i32 0, i32* %12, align 4, !dbg !14056
  call void @llvm.dbg.value(metadata i8* %8, metadata !14042, metadata !DIExpression()), !dbg !14045
  ret i8* %8, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.265(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14058 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14062, metadata !DIExpression()), !dbg !14063
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14064
  ret i8* %2, !dbg !14065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14066 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14071, metadata !DIExpression()), !dbg !14072
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14073
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14074
  ret void, !dbg !14075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14076 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14080
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14081
  ret void, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14087, metadata !DIExpression()), !dbg !14088
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14089
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14090
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14091
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14092
  ret void, !dbg !14093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14094 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14099, metadata !DIExpression()), !dbg !14100
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14101
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14102
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14103
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14104
  ret void, !dbg !14105
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14106 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14114, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14115, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %2, metadata !14116, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14117, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %4, metadata !14118, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %5, metadata !14119, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %6, metadata !14120, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %7, metadata !14121, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %8, metadata !14122, metadata !DIExpression()), !dbg !14124
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14125, !srcloc !13821
  call void @llvm.dbg.value(metadata i32 %11, metadata !13817, metadata !DIExpression()) #23, !dbg !14130
  %12 = icmp eq i32 %11, 0, !dbg !14131
  br i1 %12, label %14, label %13, !dbg !14132

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 647) #25, !dbg !14133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.269, i32 0, i32 0)) #25, !dbg !14133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 647) #25, !dbg !14133
  unreachable, !dbg !14133

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14123, metadata !DIExpression()), !dbg !14124
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14135
  %17 = icmp eq i64 %15, -1, !dbg !14136
  br i1 %17, label %19, label %18, !dbg !14138

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14139
  br label %19, !dbg !14141

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14143 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14148, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14147, metadata !DIExpression()), !dbg !14149
  %4 = icmp eq i64 %3, 0, !dbg !14150
  br i1 %4, label %5, label %6, !dbg !14152

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.270(%struct.k_thread* noundef %0) #24, !dbg !14153
  br label %7, !dbg !14155

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14156
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.270(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14163, metadata !DIExpression()), !dbg !14164
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14165, !srcloc !14167
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14168
  ret void, !dbg !14169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14170 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14173, metadata !DIExpression()), !dbg !14174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14172, metadata !DIExpression()), !dbg !14174
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14175
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14176
  ret void, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14178 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14180, metadata !DIExpression()), !dbg !14200
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14201

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 750) #25, !dbg !14205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.274, i32 0, i32 0)) #25, !dbg !14205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 750) #25, !dbg !14205
  unreachable, !dbg !14205

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14180, metadata !DIExpression()), !dbg !14200
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14208
  br i1 %4, label %6, label %5, !dbg !14209

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14210
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14198, metadata !DIExpression()), !dbg !14211
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14212

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14216
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14216
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14218
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14218
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14219
  %12 = load i32, i32* %11, align 4, !dbg !14219
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14220
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14220
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14221
  %16 = load i8*, i8** %15, align 4, !dbg !14221
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14222
  %18 = load i8*, i8** %17, align 4, !dbg !14222
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14223
  %20 = load i8*, i8** %19, align 4, !dbg !14223
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14224
  %22 = load i32, i32* %21, align 4, !dbg !14224
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14225
  %24 = load i32, i32* %23, align 4, !dbg !14225
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14226
  %26 = load i8*, i8** %25, align 4, !dbg !14226
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14227
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14228
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14229
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14230
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14230
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14231
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14180, metadata !DIExpression()), !dbg !14200
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14232
  br i1 %32, label %1, label %2, !dbg !14201, !llvm.loop !14233

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 781) #25, !dbg !14235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.274, i32 0, i32 0)) #25, !dbg !14235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.263, i32 0, i32 0), i32 noundef 781) #25, !dbg !14235
  unreachable, !dbg !14235

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14198, metadata !DIExpression()), !dbg !14211
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14238
  br i1 %36, label %38, label %37, !dbg !14239

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14240
  ret void, !dbg !14241

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14242
  %40 = load i32, i32* %39, align 4, !dbg !14242
  %41 = icmp eq i32 %40, -1, !dbg !14245
  br i1 %41, label %50, label %42, !dbg !14246

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14247
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14247
  %45 = icmp sgt i32 %40, 0, !dbg !14249
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14249
  %47 = zext i32 %46 to i64, !dbg !14249
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14249
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14250
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14250
  br label %50, !dbg !14251

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14252
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14198, metadata !DIExpression()), !dbg !14211
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14253
  br i1 %52, label %33, label %34, !dbg !14212, !llvm.loop !14254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14256 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14260, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i64 %0, metadata !14262, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 1000, metadata !14265, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 10000, metadata !14266, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14267, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14268, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14269, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14270, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14271, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14272, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i64 0, metadata !14273, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i64 0, metadata !14273, metadata !DIExpression()), !dbg !14277
  %2 = mul i64 %0, 10, !dbg !14279
  ret i64 %2, !dbg !14285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14286 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14288, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %1, metadata !14289, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %2, metadata !14290, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %3, metadata !14291, metadata !DIExpression()), !dbg !14292
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14293
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14294
  %7 = load i8, i8* %6, align 4, !dbg !14295
  %8 = or i8 %7, 4, !dbg !14295
  store i8 %8, i8* %6, align 4, !dbg !14295
  tail call void @z_thread_essential_clear() #24, !dbg !14296
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14297
  unreachable, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14303, metadata !DIExpression()), !dbg !14305
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14306
  %3 = load i32, i32* %2, align 4, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %3, metadata !14304, metadata !DIExpression()), !dbg !14305
  %4 = icmp eq i32 %3, 0, !dbg !14307
  br i1 %4, label %10, label %5, !dbg !14309

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14310
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14313
  %8 = zext i8 %7 to i32, !dbg !14314
  %9 = icmp eq i32 %6, %8, !dbg !14315
  br i1 %9, label %11, label %10, !dbg !14316

10:                                               ; preds = %5, %1
  br label %11, !dbg !14317

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14305
  ret i1 %12, !dbg !14318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14323
  %3 = load i32, i32* %2, align 4, !dbg !14323
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14325
  %5 = zext i8 %4 to i32, !dbg !14326
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14327
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14328
  %8 = or i32 %7, %5, !dbg !14329
  %9 = icmp eq i32 %3, %8, !dbg !14330
  br i1 %9, label %10, label %11, !dbg !14331

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14332
  br label %11, !dbg !14333

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14335 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14339, metadata !DIExpression()), !dbg !14340
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14341
  %3 = zext i8 %2 to i32, !dbg !14342
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14343
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14344
  %6 = or i32 %5, %3, !dbg !14345
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14346
  store i32 %6, i32* %7, align 4, !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14353, metadata !DIExpression()), !dbg !14354
  ret i32 -134, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 %1, metadata !14361, metadata !DIExpression()), !dbg !14362
  ret i32 -134, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !14364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14371, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14372, metadata !DIExpression()), !dbg !14373
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14374
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14376
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14373
  ret i32 %6, !dbg !14377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !14378 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14382, metadata !DIExpression()), !dbg !14383
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14384
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14383
  ret i32 %3, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14387 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14393, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %1, metadata !14394, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %2, metadata !14395, metadata !DIExpression()), !dbg !14396
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14397
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14397
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14397
  %7 = load i8, i8* %6, align 2, !dbg !14397
  %8 = icmp sgt i8 %7, -1, !dbg !14397
  br i1 %8, label %10, label %9, !dbg !14400

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.285, i32 0, i32 0), i32 noundef 39) #25, !dbg !14401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.285, i32 0, i32 0), i32 noundef 39) #25, !dbg !14401
  unreachable, !dbg !14401

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14403, !srcloc !14410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14406, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()) #23, !dbg !14411
  tail call fastcc void @k_cpu_idle() #24, !dbg !14412
  br label %10, !dbg !14413, !llvm.loop !14414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14416 {
  tail call void @arch_cpu_idle() #25, !dbg !14417
  ret void, !dbg !14418
}

; Function Attrs: optsize
declare !dbg !14419 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14424, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14425, metadata !DIExpression()), !dbg !14428
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14429
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14429
  %5 = load i8, i8* %4, align 2, !dbg !14429
  call void @llvm.dbg.value(metadata i8 %5, metadata !14426, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14428
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14430
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14430
  %8 = load i8, i8* %7, align 2, !dbg !14430
  call void @llvm.dbg.value(metadata i8 %8, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14428
  %9 = icmp eq i8 %8, %5, !dbg !14431
  %10 = sext i8 %5 to i32, !dbg !14433
  %11 = sext i8 %8 to i32, !dbg !14433
  %12 = sub nsw i32 %11, %10, !dbg !14433
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14433
  ret i32 %13, !dbg !14434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14441
  %3 = icmp eq i32 %2, 0, !dbg !14443
  br i1 %3, label %8, label %4, !dbg !14444

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14445
  %6 = add i32 %5, %2, !dbg !14447
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14448
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14449
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14450
  br label %8, !dbg !14451

8:                                                ; preds = %4, %1
  ret void, !dbg !14452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14457, metadata !DIExpression()), !dbg !14459
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %1, metadata !14458, metadata !DIExpression()), !dbg !14459
  ret i32 %1, !dbg !14461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14466, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata i32 %1, metadata !14467, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata i32 0, metadata !14468, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !14484
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14486, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14494
  br i1 %4, label %6, label %5, !dbg !14497

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14498
  unreachable, !dbg !14498

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()), !dbg !14476
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14501
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14504
  %8 = icmp sgt i32 %0, 0, !dbg !14505
  %9 = icmp sgt i32 %7, 2, !dbg !14507
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14507
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14507
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14508
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14509
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14517
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14519
  br i1 %12, label %14, label %13, !dbg !14522

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14523
  unreachable, !dbg !14523

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %15, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 %15, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %15, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !14528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14530, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !14468, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()), !dbg !14476
  ret void, !dbg !14532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !14533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata i32 %0, metadata !14537, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i32 1000, metadata !14540, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 10000, metadata !14541, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !14552
  %2 = mul i32 %0, 10, !dbg !14554
  ret i32 %2, !dbg !14560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14563, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !14566
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14568, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14566
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14571
  br i1 %3, label %5, label %4, !dbg !14572

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !14573
  unreachable, !dbg !14573

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !14566
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14574
  call void @llvm.dbg.value(metadata i32 %6, metadata !14564, metadata !DIExpression()), !dbg !14565
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14575
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14577
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14578
  br i1 %9, label %10, label %14, !dbg !14579

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14582
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14584
  br i1 %11, label %13, label %12, !dbg !14585

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14586
  unreachable, !dbg !14586

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !14587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14589, !srcloc !14531
  br label %33, !dbg !14590

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14591
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14592
  %16 = icmp eq i32 %15, 0, !dbg !14592
  br i1 %16, label %27, label %17, !dbg !14594

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14595
  br i1 %18, label %19, label %27, !dbg !14596

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14597
  %21 = icmp sgt i32 %20, %0, !dbg !14600
  br i1 %21, label %25, label %22, !dbg !14601

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14602
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %24, metadata !14564, metadata !DIExpression()), !dbg !14565
  br label %28, !dbg !14604

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14605
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14605
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14607
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14565
  call void @llvm.dbg.value(metadata i32 %29, metadata !14564, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14609
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14611
  br i1 %30, label %32, label %31, !dbg !14612

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  unreachable, !dbg !14613

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14511, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %29, metadata !14525, metadata !DIExpression()) #23, !dbg !14614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14616, !srcloc !14531
  br label %33, !dbg !14617

33:                                               ; preds = %32, %13
  ret void, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14622, metadata !DIExpression()), !dbg !14624
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14625
  %3 = icmp eq i32 %2, 0, !dbg !14625
  br i1 %3, label %16, label %4, !dbg !14626

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14627
  br i1 %5, label %16, label %6, !dbg !14628

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14629
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14629
  %9 = load i8, i8* %8, align 2, !dbg !14629
  %10 = sext i8 %9 to i32, !dbg !14630
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14631
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14632
  br i1 %12, label %16, label %13, !dbg !14633

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14634
  %15 = xor i1 %14, true, !dbg !14635
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14624
  call void @llvm.dbg.value(metadata i1 %17, metadata !14623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14624
  ret i1 %17, !dbg !14636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14637 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14641, metadata !DIExpression()), !dbg !14643
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14642, metadata !DIExpression()), !dbg !14643
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14645
  br i1 %3, label %5, label %4, !dbg !14647

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14648
  br label %5, !dbg !14650

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14641, metadata !DIExpression()), !dbg !14643
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14651
  ret i32 %6, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14655, metadata !DIExpression()), !dbg !14657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14658
  %3 = load i8, i8* %2, align 1, !dbg !14658
  call void @llvm.dbg.value(metadata i8 %3, metadata !14656, metadata !DIExpression()), !dbg !14657
  %4 = and i8 %3, 31, !dbg !14659
  %5 = icmp ne i8 %4, 0, !dbg !14660
  ret i1 %5, !dbg !14661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14665
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14666
  br i1 %2, label %3, label %7, !dbg !14668

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !14672
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14675
  %5 = load i8, i8* %4, align 1, !dbg !14676
  %6 = and i8 %5, 127, !dbg !14676
  store i8 %6, i8* %4, align 1, !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !14680
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14684
  br label %7, !dbg !14685

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !14689
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14691
  %9 = load i8, i8* %8, align 1, !dbg !14692
  %10 = or i8 %9, -128, !dbg !14692
  store i8 %10, i8* %8, align 1, !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !14696
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !14708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !14708
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14710
  br i1 %11, label %12, label %13, !dbg !14713

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !14714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !14714
  unreachable, !dbg !14714

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14716
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14718
  br i1 %15, label %26, label %16, !dbg !14716

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14720
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14721
  %20 = icmp sgt i32 %19, 0, !dbg !14724
  br i1 %20, label %21, label %23, !dbg !14725

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14726
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14728
  br label %28, !dbg !14729

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14718
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14718
  br i1 %25, label %26, label %16, !dbg !14716, !llvm.loop !14730

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14732
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14733
  br label %28, !dbg !14734

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14735
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14736
  %31 = zext i1 %30 to i32, !dbg !14736
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14741, metadata !DIExpression()), !dbg !14742
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14743
  ret i1 %2, !dbg !14744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14747, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14748, metadata !DIExpression()), !dbg !14749
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14750
  br i1 %3, label %4, label %5, !dbg !14753

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14754
  unreachable, !dbg !14754

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14756
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14757
  ret void, !dbg !14758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14761, metadata !DIExpression()), !dbg !14762
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14763
  ret i1 %2, !dbg !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14769, metadata !DIExpression()), !dbg !14770
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14771
  br i1 %2, label %6, label %3, !dbg !14771

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14772
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14772
  br label %6, !dbg !14771

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14771
  ret %struct._dnode* %7, !dbg !14773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14774 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14779, metadata !DIExpression()), !dbg !14782
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14783
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14783
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14780, metadata !DIExpression()), !dbg !14782
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14784
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14785
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14786
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14787
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14788
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14789
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14790
  ret void, !dbg !14791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14792 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14796, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14797, metadata !DIExpression()), !dbg !14798
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14799
  br i1 %3, label %6, label %4, !dbg !14800

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14801
  br label %6, !dbg !14800

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14800
  ret %struct._dnode* %7, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14807, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14808, metadata !DIExpression()), !dbg !14810
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14811
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14811
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14809, metadata !DIExpression()), !dbg !14810
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14812
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14813
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14814
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14815
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14816
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14817
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14818
  ret void, !dbg !14819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14822, metadata !DIExpression()), !dbg !14824
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14832, metadata !DIExpression()) #23, !dbg !14834
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14835
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14836
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14836
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14823, metadata !DIExpression()), !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14837, metadata !DIExpression()) #23, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %0, metadata !14842, metadata !DIExpression()) #23, !dbg !14843
  %6 = icmp eq i32 %0, 0, !dbg !14846
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14848
  br i1 %6, label %8, label %18, !dbg !14849

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14850
  br i1 %9, label %10, label %11, !dbg !14853

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 137) #25, !dbg !14854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !14854
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 137) #25, !dbg !14854
  unreachable, !dbg !14854

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14856
  br i1 %12, label %18, label %13, !dbg !14858

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14859
  br i1 %14, label %18, label %15, !dbg !14861

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14862
  %17 = icmp eq i32 %16, 0, !dbg !14862
  br i1 %17, label %21, label %18, !dbg !14864

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14865
  br i1 %19, label %21, label %20, !dbg !14868

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14869
  br label %21, !dbg !14871

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14848
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14848
  ret void, !dbg !14872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14877, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14878, metadata !DIExpression()), !dbg !14880
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14881
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14879, metadata !DIExpression()), !dbg !14880
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14878, metadata !DIExpression()), !dbg !14880
  ret %struct.k_thread* %3, !dbg !14882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14883 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14885, metadata !DIExpression()), !dbg !14886
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14887
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14888
  %4 = xor i1 %3, true, !dbg !14889
  ret i1 %4, !dbg !14890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()), !dbg !14894
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14895
  %3 = load i16, i16* %2, align 2, !dbg !14895
  %4 = icmp ult i16 %3, 128, !dbg !14896
  %5 = zext i1 %4 to i32, !dbg !14896
  ret i32 %5, !dbg !14897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14904, metadata !DIExpression()), !dbg !14905
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14906
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14907
  %4 = xor i1 %3, true, !dbg !14908
  ret i1 %4, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14918
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14918
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14919
  ret i1 %4, !dbg !14920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14921 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14923, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14924, metadata !DIExpression()), !dbg !14925
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14926
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14926
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14927
  br i1 %5, label %9, label %6, !dbg !14928

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14929
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14929
  br label %9, !dbg !14928

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14928
  ret %struct._dnode* %10, !dbg !14930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14931 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14935, metadata !DIExpression()), !dbg !14936
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14937
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14937
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14938
  ret i1 %4, !dbg !14939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14944, metadata !DIExpression()), !dbg !14947
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14948
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14945, metadata !DIExpression()), !dbg !14947
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14949
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14946, metadata !DIExpression()), !dbg !14947
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14950
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14951
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14952
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14953
  tail call fastcc void @sys_dnode_init.296(%struct._dnode* noundef %0) #24, !dbg !14954
  ret void, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.296(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14960
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14961
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14962
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14963
  ret void, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14969, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata i32 %1, metadata !14970, metadata !DIExpression()), !dbg !14971
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14972
  %4 = load i8, i8* %3, align 1, !dbg !14972
  %5 = zext i8 %4 to i32, !dbg !14973
  %6 = and i32 %5, %1, !dbg !14974
  %7 = icmp ne i32 %6, 0, !dbg !14975
  ret i1 %7, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14981, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 %1, metadata !14982, metadata !DIExpression()), !dbg !14983
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14984
  ret i1 %3, !dbg !14985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata i32 %1, metadata !14989, metadata !DIExpression()), !dbg !14990
  %3 = icmp slt i32 %0, %1, !dbg !14991
  ret i1 %3, !dbg !14992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15001
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15003, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15006
  br i1 %3, label %5, label %4, !dbg !15007

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15008
  unreachable, !dbg !15008

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15009
  call void @llvm.dbg.value(metadata i32 undef, metadata !14998, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15015
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15017
  br i1 %6, label %8, label %7, !dbg !15018

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15019
  unreachable, !dbg !15019

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15003
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %9, metadata !14998, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15020
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15022, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  ret void, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15026, metadata !DIExpression()), !dbg !15027
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15028
  br i1 %2, label %27, label %3, !dbg !15030

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15031
  br i1 %4, label %5, label %27, !dbg !15032

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !15033
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15036
  %7 = load i8, i8* %6, align 1, !dbg !15037
  %8 = or i8 %7, -128, !dbg !15037
  store i8 %8, i8* %6, align 1, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15040
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15042
  br i1 %9, label %10, label %11, !dbg !15043

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15044
  unreachable, !dbg !15044

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15045
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15046
  br i1 %13, label %24, label %14, !dbg !15045

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15048
  %18 = icmp sgt i32 %17, 0, !dbg !15049
  br i1 %18, label %19, label %21, !dbg !15050

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15051
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15052
  br label %26, !dbg !15053

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15046
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15046
  br i1 %23, label %24, label %14, !dbg !15045, !llvm.loop !15054

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15056
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15057
  br label %26, !dbg !15058

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15059
  br label %27, !dbg !15060

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15064, metadata !DIExpression()), !dbg !15065
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15066
  br i1 %2, label %6, label %3, !dbg !15067

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15068
  %5 = xor i1 %4, true, !dbg !15067
  br label %6, !dbg !15067

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15072, metadata !DIExpression()), !dbg !15076
  call void @llvm.dbg.value(metadata i32 0, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15078
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15080, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15083
  br i1 %3, label %5, label %4, !dbg !15084

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15085
  unreachable, !dbg !15085

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15073, metadata !DIExpression()), !dbg !15077
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15090
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15092
  br i1 %6, label %8, label %7, !dbg !15093

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15094
  unreachable, !dbg !15094

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15080
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata i32 %9, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15097, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15073, metadata !DIExpression()), !dbg !15077
  ret void, !dbg !15098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15104
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15106, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15104
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15109
  br i1 %3, label %5, label %4, !dbg !15110

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15111
  unreachable, !dbg !15111

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15106
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !15104
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %6, metadata !15102, metadata !DIExpression()), !dbg !15103
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15113
  br i1 %7, label %8, label %12, !dbg !15115

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15116
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15119
  br i1 %9, label %11, label %10, !dbg !15120

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15121
  unreachable, !dbg !15121

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !15122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15124, !srcloc !14531
  br label %14, !dbg !15125

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.301(%struct.k_thread* noundef %0) #24, !dbg !15126
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15127
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15128
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15128
  br label %14, !dbg !15129

14:                                               ; preds = %12, %11
  ret void, !dbg !15129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15134
  %3 = load i8, i8* %2, align 1, !dbg !15134
  %4 = and i8 %3, 4, !dbg !15135
  %5 = icmp eq i8 %4, 0, !dbg !15136
  ret i1 %5, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.301(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15140, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15142
  %3 = load i8, i8* %2, align 1, !dbg !15143
  %4 = and i8 %3, -5, !dbg !15143
  store i8 %4, i8* %2, align 1, !dbg !15143
  ret void, !dbg !15144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15145 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15148, metadata !DIExpression()), !dbg !15149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15147, metadata !DIExpression()), !dbg !15149
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15150
  br i1 %4, label %5, label %12, !dbg !15152

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15153
  br i1 %6, label %7, label %12, !dbg !15154

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15160, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15164, metadata !DIExpression()) #23, !dbg !15169
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15171
  br i1 %8, label %10, label %9, !dbg !15174

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15175
  unreachable, !dbg !15175

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15155, metadata !DIExpression()) #23, !dbg !15161
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15177
  br label %16, !dbg !15178

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14516, metadata !DIExpression()) #23, !dbg !15179
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15182
  br i1 %13, label %15, label %14, !dbg !15183

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15184
  unreachable, !dbg !15184

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14511, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %3, metadata !14525, metadata !DIExpression()) #23, !dbg !15185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15187, !srcloc !14531
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 %0, metadata !15195, metadata !DIExpression()), !dbg !15200
  %2 = icmp eq i32 %0, 0, !dbg !15202
  br i1 %2, label %3, label %6, !dbg !15203

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15204, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %4, metadata !15207, metadata !DIExpression()) #23, !dbg !15212
  %5 = icmp eq i32 %4, 0, !dbg !15213
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15194
  ret i1 %7, !dbg !15214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15215 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15218
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15217, metadata !DIExpression()), !dbg !15219
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15220
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15221
  ret i1 %3, !dbg !15222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15225, metadata !DIExpression()), !dbg !15227
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %2, metadata !15226, metadata !DIExpression()), !dbg !15227
  ret i32 %2, !dbg !15229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15230 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15232, metadata !DIExpression()), !dbg !15236
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15237
  call void @llvm.dbg.value(metadata i32 0, metadata !15233, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15239
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15241, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15239
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  br i1 %4, label %6, label %5, !dbg !15245

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15246
  unreachable, !dbg !15246

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %7, metadata !14489, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %7, metadata !14483, metadata !DIExpression()) #23, !dbg !15239
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15247
  call void @llvm.dbg.value(metadata i32 %7, metadata !15235, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15233, metadata !DIExpression()), !dbg !15238
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15248
  br i1 %8, label %9, label %13, !dbg !15252

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15253
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15256
  %11 = load i8, i8* %10, align 1, !dbg !15257
  %12 = and i8 %11, 127, !dbg !15257
  store i8 %12, i8* %10, align 1, !dbg !15257
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15258
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15260
  br label %13, !dbg !15261

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15262
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15263
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15264
  %16 = zext i1 %15 to i32, !dbg !15264
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15266
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15268
  br i1 %17, label %19, label %18, !dbg !15269

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15270
  unreachable, !dbg !15270

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14511, metadata !DIExpression()) #23, !dbg !15266
  call void @llvm.dbg.value(metadata i32 %7, metadata !14525, metadata !DIExpression()) #23, !dbg !15271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15273, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15233, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15233, metadata !DIExpression()), !dbg !15238
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15274
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15276
  br i1 %21, label %22, label %23, !dbg !15277

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15278
  br label %23, !dbg !15280

23:                                               ; preds = %22, %19
  ret void, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15284, metadata !DIExpression()), !dbg !15285
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15286
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15287
  ret i32 %3, !dbg !15288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15289 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15291, metadata !DIExpression()), !dbg !15292
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15293
  %3 = load i8, i8* %2, align 1, !dbg !15294
  %4 = or i8 %3, 16, !dbg !15294
  store i8 %4, i8* %2, align 1, !dbg !15294
  ret void, !dbg !15295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15296 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15297, !srcloc !14492
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15297
  call void @llvm.dbg.value(metadata i32 %2, metadata !14489, metadata !DIExpression()) #23, !dbg !15299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15299
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15300
  ret void, !dbg !15301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15304, metadata !DIExpression()), !dbg !15305
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15306
  br i1 %2, label %3, label %5, !dbg !15308

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15309
  br label %6, !dbg !15311

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14525, metadata !DIExpression()) #23, !dbg !15312
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15315, !srcloc !14531
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15319, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15322
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15324, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15322
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15327
  br i1 %3, label %5, label %4, !dbg !15328

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15329
  unreachable, !dbg !15329

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !15322
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %6, metadata !15320, metadata !DIExpression()), !dbg !15321
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15331
  br i1 %7, label %12, label %8, !dbg !15333

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15334
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15337
  br i1 %9, label %11, label %10, !dbg !15338

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  unreachable, !dbg !15339

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !15340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15342, !srcloc !14531
  br label %14, !dbg !15343

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15344
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15345
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15346
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15346
  br label %14, !dbg !15347

14:                                               ; preds = %12, %11
  ret void, !dbg !15347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15350, metadata !DIExpression()), !dbg !15351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15352
  %3 = load i8, i8* %2, align 1, !dbg !15352
  %4 = and i8 %3, 16, !dbg !15353
  %5 = icmp ne i8 %4, 0, !dbg !15354
  ret i1 %5, !dbg !15355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15358, metadata !DIExpression()), !dbg !15359
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15360
  %3 = load i8, i8* %2, align 1, !dbg !15361
  %4 = and i8 %3, -17, !dbg !15361
  store i8 %4, i8* %2, align 1, !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15363 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15373, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15371, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15372, metadata !DIExpression()), !dbg !15377
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15378
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15378
  br i1 %5, label %9, label %6, !dbg !15378

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15378
  br i1 %7, label %9, label %8, !dbg !15381

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 773) #25, !dbg !15382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 773) #25, !dbg !15382
  unreachable, !dbg !15382

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15374, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15385
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15387, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15390
  br i1 %11, label %13, label %12, !dbg !15391

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  unreachable, !dbg !15392

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15376, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15384
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15397
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15399
  br i1 %14, label %16, label %15, !dbg !15400

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15401
  unreachable, !dbg !15401

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %17, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %17, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %17, metadata !15376, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15397
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15404, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15374, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15384
  ret void, !dbg !15405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15408, metadata !DIExpression()), !dbg !15409
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15410
  %3 = load i8, i8* %2, align 1, !dbg !15410
  %4 = and i8 %3, 1, !dbg !15411
  %5 = icmp ne i8 %4, 0, !dbg !15412
  ret i1 %5, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15418, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15416, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15417, metadata !DIExpression()), !dbg !15419
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15420
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15421
  ret void, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15427, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15428, metadata !DIExpression()), !dbg !15429
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15430
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15431
  %3 = icmp eq %union.anon* %1, null, !dbg !15432
  br i1 %3, label %24, label %4, !dbg !15434

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15435
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15437
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15438
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14700, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15439
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15441
  br i1 %7, label %8, label %9, !dbg !15442

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15443
  unreachable, !dbg !15443

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15444
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15445
  br i1 %11, label %22, label %12, !dbg !15444

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15446
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15447
  %16 = icmp sgt i32 %15, 0, !dbg !15448
  br i1 %16, label %17, label %19, !dbg !15449

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15450
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15451
  br label %24, !dbg !15452

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15445
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15445
  br i1 %21, label %22, label %12, !dbg !15444, !llvm.loop !15453

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15455
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15456
  br label %24, !dbg !15457

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15459 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15464, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15463, metadata !DIExpression()), !dbg !15465
  %4 = icmp eq i64 %3, -1, !dbg !15466
  br i1 %4, label %6, label %5, !dbg !15468

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15469
  br label %6, !dbg !15471

6:                                                ; preds = %5, %2
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15476, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15475, metadata !DIExpression()), !dbg !15477
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15478
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15479
  ret void, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15483, metadata !DIExpression()), !dbg !15491
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15492
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15492
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15484, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata i32 0, metadata !15485, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15494
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15496, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15499
  br i1 %5, label %7, label %6, !dbg !15500

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15501
  unreachable, !dbg !15501

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15487, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15493
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15503
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15504
  %10 = load i8, i8* %9, align 1, !dbg !15504
  %11 = and i8 %10, 40, !dbg !15505
  %12 = icmp eq i8 %11, 0, !dbg !15505
  call void @llvm.dbg.value(metadata i1 %12, metadata !15488, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15506
  br i1 %12, label %13, label %20, !dbg !15507

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15508
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15508
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15508
  %17 = icmp eq %union.anon* %16, null, !dbg !15512
  br i1 %17, label %19, label %18, !dbg !15513

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15514
  br label %19, !dbg !15516

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.301(%struct.k_thread* noundef nonnull %3) #24, !dbg !15517
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15518
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15519
  br label %20, !dbg !15520

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15521
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15523
  br i1 %21, label %23, label %22, !dbg !15524

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15525
  unreachable, !dbg !15525

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %24, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %24, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %24, metadata !15487, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15528, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15485, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15493
  ret void, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15532, metadata !DIExpression()), !dbg !15533
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15534
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15535
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15536
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15537
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15538
  ret void, !dbg !15539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15546
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15546
  %4 = icmp eq %union.anon* %3, null, !dbg !15546
  br i1 %4, label %5, label %6, !dbg !15549

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 726) #25, !dbg !15550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 726) #25, !dbg !15550
  unreachable, !dbg !15550

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15555, metadata !DIExpression()), !dbg !15556
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15557
  %3 = load i8, i8* %2, align 1, !dbg !15558
  %4 = and i8 %3, -3, !dbg !15558
  store i8 %4, i8* %2, align 1, !dbg !15558
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15562, metadata !DIExpression()), !dbg !15563
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15564
  br i1 %2, label %3, label %7, !dbg !15566

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15567
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15570
  %5 = load i8, i8* %4, align 1, !dbg !15571
  %6 = and i8 %5, 127, !dbg !15571
  store i8 %6, i8* %4, align 1, !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15572
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15574
  br label %7, !dbg !15575

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15576
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15577
  %10 = zext i1 %9 to i32, !dbg !15577
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15578
  ret void, !dbg !15579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15582, metadata !DIExpression()), !dbg !15583
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15584
  %3 = load i8, i8* %2, align 1, !dbg !15585
  %4 = or i8 %3, 2, !dbg !15585
  store i8 %4, i8* %2, align 1, !dbg !15585
  ret void, !dbg !15586
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15595
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15597, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15600
  br i1 %3, label %5, label %4, !dbg !15601

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  unreachable, !dbg !15602

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15594
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15607
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15609
  br i1 %6, label %8, label %7, !dbg !15610

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  unreachable, !dbg !15611

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  call void @llvm.dbg.value(metadata i32 %9, metadata !15592, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15614, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15594
  ret void, !dbg !15615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15616 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15622, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 %0, metadata !15620, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15621, metadata !DIExpression()), !dbg !15627
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15628
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15629
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15630
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15631
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %6, metadata !15623, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 0, metadata !15624, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15634
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15636, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15639
  br i1 %8, label %10, label %9, !dbg !15640

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15641
  unreachable, !dbg !15641

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15633
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15643
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15647
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15648
  br i1 %13, label %14, label %15, !dbg !15649

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15650
  br label %15, !dbg !15652

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15653
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15655
  br i1 %16, label %18, label %17, !dbg !15656

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15657
  unreachable, !dbg !15657

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %19, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %19, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %19, metadata !15626, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15660, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15624, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15633
  ret i32 %6, !dbg !15661
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15662 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15667, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata i64 undef, metadata !15669, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15666, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15668, metadata !DIExpression()), !dbg !15670
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15671
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15672
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15673
  br i1 %6, label %7, label %8, !dbg !15676

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 846) #25, !dbg !15677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 846) #25, !dbg !15677
  unreachable, !dbg !15677

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15679
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15681, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15679
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15684
  br i1 %10, label %12, label %11, !dbg !15685

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15686
  unreachable, !dbg !15686

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15679
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15687
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15688
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15164, metadata !DIExpression()) #23, !dbg !15690
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15692
  br i1 %14, label %16, label %15, !dbg !15693

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15694
  unreachable, !dbg !15694

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !15697
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15699
  br i1 %17, label %19, label %18, !dbg !15700

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !15701
  unreachable, !dbg !15701

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15155, metadata !DIExpression()) #23, !dbg !15695
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15702
  ret i32 %21, !dbg !15703
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15704 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15708, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 0, metadata !15710, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15715
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15717, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15720
  br i1 %3, label %5, label %4, !dbg !15721

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15722
  unreachable, !dbg !15722

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15723
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15714
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15724
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15709, metadata !DIExpression()), !dbg !15713
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15727
  br i1 %8, label %10, label %9, !dbg !15729

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15730
  br label %10, !dbg !15732

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15733
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15735
  br i1 %11, label %13, label %12, !dbg !15736

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15737
  unreachable, !dbg !15737

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15717
  call void @llvm.dbg.value(metadata i32 %14, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 %14, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %14, metadata !15712, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15738
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15740, !srcloc !14531
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15714
  ret %struct.k_thread* %7, !dbg !15741
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15742 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15744, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 0, metadata !15746, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15751
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15753, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15756
  br i1 %3, label %5, label %4, !dbg !15757

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15758
  unreachable, !dbg !15758

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !15748, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()), !dbg !15750
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15745, metadata !DIExpression()), !dbg !15749
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15763
  br i1 %8, label %11, label %9, !dbg !15765

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15766
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15768
  br label %11, !dbg !15769

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15770
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15772
  br i1 %12, label %14, label %13, !dbg !15773

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15774
  unreachable, !dbg !15774

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %15, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %15, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  call void @llvm.dbg.value(metadata i32 %15, metadata !15748, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15777, !srcloc !14531
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()), !dbg !15750
  ret %struct.k_thread* %7, !dbg !15778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15781, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()) #23, !dbg !15783
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15786
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15788, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15791
  br i1 %3, label %5, label %4, !dbg !15792

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15793
  unreachable, !dbg !15793

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15796
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15798
  br i1 %6, label %8, label %7, !dbg !15799

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15800
  unreachable, !dbg !15800

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %9, metadata !15592, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15803, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15804
  ret void, !dbg !15805
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15808, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 %1, metadata !15809, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i8 0, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 0, metadata !15811, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15816
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15818, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15821
  br i1 %4, label %6, label %5, !dbg !15822

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  unreachable, !dbg !15823

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15824
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i8 poison, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()), !dbg !15815
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15825
  call void @llvm.dbg.value(metadata i1 %9, metadata !15810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15814
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15828

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15829
  %14 = load i8, i8* %7, align 1, !dbg !15835
  %15 = and i8 %14, 127, !dbg !15835
  store i8 %15, i8* %7, align 1, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15836
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15838
  store i8 %12, i8* %11, align 2, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !15840
  %16 = load i8, i8* %7, align 1, !dbg !15842
  %17 = or i8 %16, -128, !dbg !15842
  store i8 %17, i8* %7, align 1, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15845
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15847
  br i1 %18, label %19, label %20, !dbg !15848

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !15849
  unreachable, !dbg !15849

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15851
  br i1 %22, label %32, label %23, !dbg !15850

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15853
  %27 = icmp sgt i32 %26, 0, !dbg !15854
  br i1 %27, label %28, label %29, !dbg !15855

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15856
  br label %33, !dbg !15857

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15851
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15851
  br i1 %31, label %32, label %23, !dbg !15850, !llvm.loop !15858

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15860
  br label %33, !dbg !15861

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15862
  br label %35, !dbg !15863

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15864
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15866
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15868
  br i1 %36, label %38, label %37, !dbg !15869

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15870
  unreachable, !dbg !15870

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15818
  call void @llvm.dbg.value(metadata i32 %39, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 %39, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  call void @llvm.dbg.value(metadata i32 %39, metadata !15813, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15873, !srcloc !14531
  call void @llvm.dbg.value(metadata i8 poison, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()), !dbg !15815
  ret i1 %9, !dbg !15874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15879, metadata !DIExpression()), !dbg !15882
  call void @llvm.dbg.value(metadata i32 %1, metadata !15880, metadata !DIExpression()), !dbg !15882
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i1 %3, metadata !15881, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15882
  br i1 %3, label %4, label %12, !dbg !15884

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15886
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15887
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15887
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15887
  %9 = load i8, i8* %8, align 1, !dbg !15887
  %10 = icmp eq i8 %9, 0, !dbg !15888
  br i1 %10, label %11, label %12, !dbg !15889

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15890
  br label %12, !dbg !15892

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15894 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15900
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15902, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15905
  br i1 %2, label %4, label %3, !dbg !15906

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15907
  unreachable, !dbg !15907

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !15898, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15899
  tail call fastcc void @z_sched_lock() #24, !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15912
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15914
  br i1 %5, label %7, label %6, !dbg !15915

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15916
  unreachable, !dbg !15916

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %8, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %8, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %8, metadata !15898, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15919, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15899
  ret void, !dbg !15920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15921 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15922, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !15927
  %2 = icmp eq i32 %1, 0, !dbg !15928
  br i1 %2, label %4, label %3, !dbg !15929

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 253) #25, !dbg !15930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 253) #25, !dbg !15930
  unreachable, !dbg !15930

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15932
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15932
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15932
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15932
  %9 = load i8, i8* %8, align 1, !dbg !15932
  %10 = icmp eq i8 %9, 1, !dbg !15932
  br i1 %10, label %11, label %12, !dbg !15935

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 254) #25, !dbg !15936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.311, i32 0, i32 0), i32 noundef 254) #25, !dbg !15936
  unreachable, !dbg !15936

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15938
  store i8 %13, i8* %8, align 1, !dbg !15938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15939, !srcloc !15941
  ret void, !dbg !15942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15943 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15945, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15949
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15951, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15954
  br i1 %2, label %4, label %3, !dbg !15955

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !15956
  unreachable, !dbg !15956

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15948
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15958
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15958
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15958
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15958
  %9 = load i8, i8* %8, align 1, !dbg !15958
  %10 = icmp eq i8 %9, 0, !dbg !15958
  br i1 %10, label %11, label %12, !dbg !15963

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 999) #25, !dbg !15964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 999) #25, !dbg !15964
  unreachable, !dbg !15964

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15966, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %13, metadata !15207, metadata !DIExpression()) #23, !dbg !15971
  %14 = icmp eq i32 %13, 0, !dbg !15972
  br i1 %14, label %16, label %15, !dbg !15973

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !15974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15974
  unreachable, !dbg !15974

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15976
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15977
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15977
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15977
  %21 = load i8, i8* %20, align 1, !dbg !15978
  %22 = add i8 %21, 1, !dbg !15978
  store i8 %22, i8* %20, align 1, !dbg !15978
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15980
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15982
  br i1 %23, label %25, label %24, !dbg !15983

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !15984
  unreachable, !dbg !15984

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15951
  call void @llvm.dbg.value(metadata i32 %26, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %26, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %26, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15987, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15945, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15948
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15988
  ret void, !dbg !15989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15990 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15991
  ret %struct.k_thread* %1, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15997, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15998, metadata !DIExpression()), !dbg !16002
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15999, metadata !DIExpression()), !dbg !16002
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16004
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16000, metadata !DIExpression()), !dbg !16002
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %5, metadata !16001, metadata !DIExpression()), !dbg !16002
  %6 = icmp sgt i32 %5, 0, !dbg !16006
  br i1 %6, label %17, label %7, !dbg !16008

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16009
  br i1 %8, label %17, label %9, !dbg !16011

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16012
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16012
  %12 = load i32, i32* %11, align 8, !dbg !16012
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16014
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16014
  %15 = load i32, i32* %14, align 8, !dbg !16014
  %16 = icmp ult i32 %12, %15, !dbg !16015
  br label %17, !dbg !16016

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16017
  ret i1 %18, !dbg !16018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16019 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16036, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16037, metadata !DIExpression()), !dbg !16051
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16052
  br i1 %4, label %5, label %6, !dbg !16055

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16056
  unreachable, !dbg !16056

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16058
  %8 = load i32, i32* %7, align 4, !dbg !16059
  %9 = add nsw i32 %8, 1, !dbg !16059
  store i32 %9, i32* %7, align 4, !dbg !16059
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16060
  store i32 %8, i32* %10, align 8, !dbg !16061
  %11 = load i32, i32* %7, align 4, !dbg !16062
  %12 = icmp eq i32 %11, 0, !dbg !16063
  br i1 %12, label %13, label %35, !dbg !16064

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16065
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16065
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16039, metadata !DIExpression()), !dbg !16065
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16065
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16065
  %17 = load i32, i32* %16, align 4, !dbg !16065
  %18 = shl i32 %17, 2, !dbg !16065
  %19 = alloca i8, i32 %18, align 8, !dbg !16065
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16065
  store i8* %19, i8** %20, align 4, !dbg !16065
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16065
  %22 = alloca i8, i32 %17, align 8, !dbg !16065
  store i8* %22, i8** %21, align 4, !dbg !16065
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16065
  store i32 -1, i32* %23, align 4, !dbg !16065
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16048, metadata !DIExpression()), !dbg !16067
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16038, metadata !DIExpression()), !dbg !16051
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16068
  br i1 %25, label %26, label %27, !dbg !16065

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16068
  br label %35, !dbg !16069

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16038, metadata !DIExpression()), !dbg !16051
  %29 = load i32, i32* %7, align 4, !dbg !16070
  %30 = add nsw i32 %29, 1, !dbg !16070
  store i32 %30, i32* %7, align 4, !dbg !16070
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16072
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16072
  store i32 %29, i32* %32, align 8, !dbg !16073
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16048, metadata !DIExpression()), !dbg !16067
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16038, metadata !DIExpression()), !dbg !16051
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16068
  br i1 %34, label %26, label %27, !dbg !16065, !llvm.loop !16074

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16076
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16077
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16078
  ret void, !dbg !16079
}

; Function Attrs: optsize
declare !dbg !16080 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16085 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16090, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16091, metadata !DIExpression()), !dbg !16092
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16093
  br i1 %3, label %4, label %5, !dbg !16096

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16097
  unreachable, !dbg !16097

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16099
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16100
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16101
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16102
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16102
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16104
  br i1 %10, label %11, label %13, !dbg !16105

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16106
  store i32 0, i32* %12, align 4, !dbg !16108
  br label %13, !dbg !16109

13:                                               ; preds = %11, %5
  ret void, !dbg !16110
}

; Function Attrs: optsize
declare !dbg !16111 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16112 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16116, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16117, metadata !DIExpression()), !dbg !16119
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16120
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16121
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16118, metadata !DIExpression()), !dbg !16119
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16117, metadata !DIExpression()), !dbg !16119
  ret %struct.k_thread* %4, !dbg !16122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16123 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16127, metadata !DIExpression()), !dbg !16128
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16129
  ret %struct.rbnode* %2, !dbg !16130
}

; Function Attrs: optsize
declare !dbg !16131 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16134 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16144, metadata !DIExpression()), !dbg !16148
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16149
  %3 = load i32, i32* %2, align 4, !dbg !16149
  %4 = icmp eq i32 %3, 0, !dbg !16151
  br i1 %4, label %10, label %5, !dbg !16152

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16145, metadata !DIExpression()), !dbg !16148
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16153, !range !7470
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16146, metadata !DIExpression()), !dbg !16148
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16155
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16147, metadata !DIExpression()), !dbg !16148
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16145, metadata !DIExpression()), !dbg !16148
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16148
  ret %struct.k_thread* %11, !dbg !16156
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16157 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16161, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 0, metadata !16162, metadata !DIExpression()), !dbg !16164
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16163, metadata !DIExpression()), !dbg !16164
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16166
  br i1 %3, label %8, label %4, !dbg !16167

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16168
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16170
  call void @llvm.dbg.value(metadata i32 1, metadata !16162, metadata !DIExpression()), !dbg !16164
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16163, metadata !DIExpression()), !dbg !16164
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16166
  br i1 %7, label %8, label %4, !dbg !16167, !llvm.loop !16171

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16164
  ret i32 %9, !dbg !16173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16174 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16176, metadata !DIExpression()), !dbg !16177
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16178
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16179
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16180
  ret %struct.k_thread* %4, !dbg !16181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16182 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16191, metadata !DIExpression()), !dbg !16192
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16193
  tail call fastcc void @sys_dlist_init.316(%struct._dnode* noundef nonnull %2) #24, !dbg !16194
  ret void, !dbg !16195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.316(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16196 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16200, metadata !DIExpression()), !dbg !16201
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16202
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16203
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16204
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16205
  ret void, !dbg !16206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16207 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16208
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16218
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16218
  %4 = load i8, i8* %3, align 2, !dbg !16218
  %5 = sext i8 %4 to i32, !dbg !16219
  ret i32 %5, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i32 %1, metadata !16226, metadata !DIExpression()), !dbg !16228
  %3 = add i32 %1, 16, !dbg !16229
  %4 = icmp ult i32 %3, 31, !dbg !16229
  br i1 %4, label %6, label %5, !dbg !16229

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.320, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16233
  unreachable, !dbg !16233

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16235, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %7, metadata !15207, metadata !DIExpression()) #23, !dbg !16240
  %8 = icmp eq i32 %7, 0, !dbg !16241
  br i1 %8, label %10, label %9, !dbg !16242

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16243
  unreachable, !dbg !16243

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16227, metadata !DIExpression()), !dbg !16228
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16245
  ret void, !dbg !16246
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16247 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16248
  br i1 %1, label %8, label %2, !dbg !16249

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16250
  br i1 %3, label %8, label %4, !dbg !16251

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16252
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16253
  %7 = xor i1 %6, true, !dbg !16251
  br label %8, !dbg !16251

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16255 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16256, !range !6633
  %2 = icmp eq i8 %1, 0, !dbg !16256
  ret i1 %2, !dbg !16257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16258 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16261, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !16266
  %2 = icmp eq i32 %1, 0, !dbg !16267
  br i1 %2, label %4, label %3, !dbg !16268

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16269
  unreachable, !dbg !16269

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16271
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16273, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16276
  br i1 %6, label %8, label %7, !dbg !16277

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16278
  unreachable, !dbg !16278

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()), !dbg !16280
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14669, metadata !DIExpression()) #23, !dbg !16284
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16286
  %11 = load i8, i8* %10, align 1, !dbg !16287
  %12 = and i8 %11, 127, !dbg !16287
  store i8 %12, i8* %10, align 1, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14677, metadata !DIExpression()) #23, !dbg !16288
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16290
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16291
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14686, metadata !DIExpression()) #23, !dbg !16292
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16294
  %15 = load i8, i8* %14, align 1, !dbg !16295
  %16 = or i8 %15, -128, !dbg !16295
  store i8 %16, i8* %14, align 1, !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14693, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14706, metadata !DIExpression()) #23, !dbg !16298
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16300
  br i1 %17, label %18, label %19, !dbg !16301

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !16302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 186) #25, !dbg !16302
  unreachable, !dbg !16302

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16303
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16304
  br i1 %21, label %32, label %22, !dbg !16303

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16306
  %26 = icmp sgt i32 %25, 0, !dbg !16307
  br i1 %26, label %27, label %29, !dbg !16308

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16309
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16310
  br label %34, !dbg !16311

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16304
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16304
  br i1 %31, label %32, label %22, !dbg !16303, !llvm.loop !16312

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16314
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16315
  br label %34, !dbg !16316

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16320
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16322
  br i1 %35, label %37, label %36, !dbg !16323

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16324
  unreachable, !dbg !16324

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16273
  call void @llvm.dbg.value(metadata i32 %38, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 %38, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %38, metadata !16260, metadata !DIExpression()), !dbg !16280
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16318
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16325
  ret void, !dbg !16326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16327 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16331, metadata !DIExpression()), !dbg !16334
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16335, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %3, metadata !15207, metadata !DIExpression()) #23, !dbg !16340
  %4 = icmp eq i32 %3, 0, !dbg !16341
  br i1 %4, label %6, label %5, !dbg !16342

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16343
  unreachable, !dbg !16343

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16345
  br i1 %7, label %8, label %10, !dbg !16347

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16348
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16350
  br label %15, !dbg !16351

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16332, metadata !DIExpression()), !dbg !16334
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16352
  %12 = sext i32 %11 to i64, !dbg !16352
  call void @llvm.dbg.value(metadata i64 %12, metadata !16332, metadata !DIExpression()), !dbg !16334
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16353
  %14 = trunc i64 %13 to i32, !dbg !16353
  call void @llvm.dbg.value(metadata i32 %14, metadata !16333, metadata !DIExpression()), !dbg !16334
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16334
  ret i32 %16, !dbg !16354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16359, metadata !DIExpression()), !dbg !16360
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16361, !srcloc !16363
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16364
  ret void, !dbg !16365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16366 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16370, metadata !DIExpression()), !dbg !16374
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16375, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %2, metadata !15207, metadata !DIExpression()) #23, !dbg !16380
  %3 = icmp eq i32 %2, 0, !dbg !16381
  br i1 %3, label %5, label %4, !dbg !16382

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16383
  unreachable, !dbg !16383

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16385
  br i1 %6, label %7, label %8, !dbg !16387

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16388
  br label %43, !dbg !16390

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16372, metadata !DIExpression()), !dbg !16374
  %9 = icmp sgt i64 %0, -3, !dbg !16391
  br i1 %9, label %10, label %14, !dbg !16393

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16394
  %12 = trunc i64 %0 to i32, !dbg !16396
  %13 = add i32 %11, %12, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %13, metadata !16371, metadata !DIExpression()), !dbg !16374
  br label %17, !dbg !16397

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16398
  %16 = sub i32 -2, %15, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %16, metadata !16371, metadata !DIExpression()), !dbg !16374
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16400
  call void @llvm.dbg.value(metadata i32 %18, metadata !16371, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16401
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16403, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16406
  br i1 %20, label %22, label %21, !dbg !16407

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16408
  unreachable, !dbg !16408

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()), !dbg !16374
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16410
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16411
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16412
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16413
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16414
  tail call fastcc void @z_add_thread_timeout.303(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16414
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16415
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16419
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16421
  br i1 %27, label %29, label %28, !dbg !16422

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16423
  unreachable, !dbg !16423

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %30, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %30, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %30, metadata !16373, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16417
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16424
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16425
  br i1 %33, label %34, label %35, !dbg !16428

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.295, i32 0, i32 0)) #25, !dbg !16429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16429
  unreachable, !dbg !16429

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16431
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16432
  %38 = zext i32 %37 to i64, !dbg !16432
  %39 = sub nsw i64 %36, %38, !dbg !16433
  call void @llvm.dbg.value(metadata i64 %39, metadata !16370, metadata !DIExpression()), !dbg !16374
  %40 = icmp sgt i64 %39, 0, !dbg !16434
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16434
  %42 = trunc i64 %41 to i32, !dbg !16434
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16374
  ret i32 %44, !dbg !16435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16436 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16438, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i32 10000, metadata !14540, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i32 1000, metadata !14541, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16440
  %2 = udiv i64 %0, 10, !dbg !16442
  ret i64 %2, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16447 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16448, !srcloc !16450
  tail call void @z_impl_k_yield() #24, !dbg !16451
  ret void, !dbg !16452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16457, metadata !DIExpression()), !dbg !16459
  %2 = sext i32 %0 to i64, !dbg !16460
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16461
  call void @llvm.dbg.value(metadata i64 %3, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  %4 = shl i64 %3, 32, !dbg !16462
  %5 = ashr exact i64 %4, 32, !dbg !16462
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16463
  call void @llvm.dbg.value(metadata i32 %6, metadata !16458, metadata !DIExpression()), !dbg !16459
  %7 = sext i32 %6 to i64, !dbg !16464
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16465
  %9 = trunc i64 %8 to i32, !dbg !16465
  ret i32 %9, !dbg !16466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !16467 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16469, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14540, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i32 10000, metadata !14541, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16471
  %2 = add i64 %0, 99, !dbg !16473
  call void @llvm.dbg.value(metadata i64 %2, metadata !14537, metadata !DIExpression()), !dbg !16471
  %3 = udiv i64 %2, 100, !dbg !16474
  ret i64 %3, !dbg !16475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16476 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16478, metadata !DIExpression()), !dbg !16479
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i32 10000, metadata !14540, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14541, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i1 true, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16480
  %2 = mul i64 %0, 100, !dbg !16482
  ret i64 %2, !dbg !16484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16487, metadata !DIExpression()), !dbg !16488
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16489
  br i1 %2, label %14, label %3, !dbg !16491

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16492
  %5 = icmp slt i32 %4, 0, !dbg !16494
  br i1 %5, label %6, label %10, !dbg !16495

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16496
  %8 = load i8, i8* %7, align 1, !dbg !16496
  %9 = icmp eq i8 %8, 16, !dbg !16499
  br i1 %9, label %10, label %14, !dbg !16500

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16501
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16502
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16503, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %11, metadata !15207, metadata !DIExpression()) #23, !dbg !16507
  %12 = icmp eq i32 %11, 0, !dbg !16508
  br i1 %12, label %13, label %14, !dbg !16509

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16510
  br label %14, !dbg !16512

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16514 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16516, metadata !DIExpression()), !dbg !16517
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16518
  %3 = load i8, i8* %2, align 1, !dbg !16518
  %4 = and i8 %3, 2, !dbg !16519
  %5 = icmp ne i8 %4, 0, !dbg !16520
  ret i1 %5, !dbg !16521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16522 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16526, metadata !DIExpression()), !dbg !16528
  ret %struct.k_thread* %1, !dbg !16529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16530 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16531, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !16534
  %2 = icmp eq i32 %1, 0, !dbg !16535
  br i1 %2, label %3, label %8, !dbg !16536

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16537
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16538
  %6 = icmp ne i32 %5, 0, !dbg !16536
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16542, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16545
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16547, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16545
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16550
  br i1 %3, label %5, label %4, !dbg !16551

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16552
  unreachable, !dbg !16552

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !16545
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %6, metadata !16543, metadata !DIExpression()), !dbg !16544
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16554
  %8 = load i8, i8* %7, align 4, !dbg !16554
  %9 = and i8 %8, 1, !dbg !16556
  %10 = icmp eq i8 %9, 0, !dbg !16557
  br i1 %10, label %15, label %11, !dbg !16558

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16559
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16562
  br i1 %12, label %14, label %13, !dbg !16563

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  unreachable, !dbg !16564

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16567, !srcloc !14531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.327, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16568
  unreachable, !dbg !16568

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16572
  %17 = load i8, i8* %16, align 1, !dbg !16572
  %18 = and i8 %17, 8, !dbg !16574
  %19 = icmp eq i8 %18, 0, !dbg !16575
  br i1 %19, label %24, label %20, !dbg !16576

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16577
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16580
  br i1 %21, label %23, label %22, !dbg !16581

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16582
  unreachable, !dbg !16582

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16585, !srcloc !14531
  br label %39, !dbg !16586

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16587
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16588
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16590
  br i1 %26, label %27, label %35, !dbg !16591

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16592, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %28, metadata !15207, metadata !DIExpression()) #23, !dbg !16595
  %29 = icmp eq i32 %28, 0, !dbg !16596
  br i1 %29, label %30, label %35, !dbg !16597

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16601
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16603
  br i1 %31, label %33, label %32, !dbg !16604

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16605
  unreachable, !dbg !16605

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15155, metadata !DIExpression()) #23, !dbg !16598
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.328, i32 0, i32 0)) #25, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16607
  unreachable, !dbg !16607

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16611
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16613
  br i1 %36, label %38, label %37, !dbg !16614

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16615
  unreachable, !dbg !16615

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16618, !srcloc !14531
  br label %39, !dbg !16619

39:                                               ; preds = %38, %23
  ret void, !dbg !16619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16622, metadata !DIExpression()), !dbg !16623
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16624
  %3 = load i8, i8* %2, align 1, !dbg !16624
  %4 = and i8 %3, 8, !dbg !16626
  %5 = icmp eq i8 %4, 0, !dbg !16627
  br i1 %5, label %6, label %20, !dbg !16628

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16629
  %8 = or i8 %7, 8, !dbg !16629
  store i8 %8, i8* %2, align 1, !dbg !16629
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16631
  br i1 %9, label %10, label %12, !dbg !16633

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !16634
  %11 = and i8 %8, 95, !dbg !16637
  store i8 %11, i8* %2, align 1, !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !16638
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16640
  br label %12, !dbg !16641

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16642
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16642
  %15 = icmp eq %union.anon* %14, null, !dbg !16644
  br i1 %15, label %17, label %16, !dbg !16645

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16646
  br label %17, !dbg !16648

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16649
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16650
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16651
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16652
  br label %20, !dbg !16653

20:                                               ; preds = %17, %1
  ret void, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16659, metadata !DIExpression()), !dbg !16661
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16660, metadata !DIExpression()), !dbg !16661
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16663
  br i1 %3, label %10, label %4, !dbg !16664

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16665
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16668, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.value(metadata i32 0, metadata !16673, metadata !DIExpression()), !dbg !16674
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16676
  store i32 0, i32* %7, align 4, !dbg !16677
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16678
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16660, metadata !DIExpression()), !dbg !16661
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16663
  br i1 %9, label %10, label %4, !dbg !16664, !llvm.loop !16679

10:                                               ; preds = %4, %1
  ret void, !dbg !16681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16682 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16687, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16686, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16691
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16693, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16691
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16696
  br i1 %4, label %6, label %5, !dbg !16697

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  unreachable, !dbg !16698

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %7, metadata !14489, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 %7, metadata !14483, metadata !DIExpression()) #23, !dbg !16691
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %7, metadata !16688, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata i32 0, metadata !16689, metadata !DIExpression()), !dbg !16690
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16700
  %9 = load i8, i8* %8, align 1, !dbg !16700
  %10 = and i8 %9, 8, !dbg !16702
  %11 = icmp eq i8 %10, 0, !dbg !16703
  br i1 %11, label %12, label %35, !dbg !16704

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16687, metadata !DIExpression()), !dbg !16690
  %14 = icmp eq i64 %13, 0, !dbg !16705
  br i1 %14, label %35, label %15, !dbg !16707

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16708
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16710
  br i1 %17, label %35, label %18, !dbg !16711

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16712
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16712
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16713
  %22 = icmp eq %union.anon* %20, %21, !dbg !16714
  br i1 %22, label %35, label %23, !dbg !16715

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16716, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %24, metadata !15207, metadata !DIExpression()) #23, !dbg !16722
  %25 = icmp eq i32 %24, 0, !dbg !16723
  br i1 %25, label %27, label %26, !dbg !16724

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.331, i32 0, i32 0)) #25, !dbg !16725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16725
  unreachable, !dbg !16725

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16727
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16728
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16729
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16730
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16734
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16736
  br i1 %31, label %33, label %32, !dbg !16737

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 225) #25, !dbg !16738
  unreachable, !dbg !16738

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15155, metadata !DIExpression()) #23, !dbg !16732
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %34, metadata !16689, metadata !DIExpression()), !dbg !16690
  br label %40, !dbg !16740

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16741
  call void @llvm.dbg.value(metadata i32 %36, metadata !16689, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16742
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16744
  br i1 %37, label %39, label %38, !dbg !16745

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16746
  unreachable, !dbg !16746

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14511, metadata !DIExpression()) #23, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %7, metadata !14525, metadata !DIExpression()) #23, !dbg !16747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16749, !srcloc !14531
  br label %40, !dbg !16750

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16690
  ret i32 %41, !dbg !16751
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16752 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16756, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 %1, metadata !16757, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i8* %2, metadata !16758, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i8 0, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 0, metadata !16761, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16766
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16768, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16771
  br i1 %5, label %7, label %6, !dbg !16772

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 148) #25, !dbg !16773
  unreachable, !dbg !16773

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !16763, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()), !dbg !16765
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16759, metadata !DIExpression()), !dbg !16764
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16778
  br i1 %10, label %15, label %11, !dbg !16780

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16781, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 %1, metadata !16787, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i8* %2, metadata !16788, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16668, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i32 %1, metadata !16673, metadata !DIExpression()), !dbg !16792
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16794
  store i32 %1, i32* %12, align 4, !dbg !16795
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16796
  store i8* %2, i8** %13, align 4, !dbg !16797
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16798
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16799
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16800
  call void @llvm.dbg.value(metadata i8 1, metadata !16760, metadata !DIExpression()), !dbg !16764
  br label %15, !dbg !16801

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16802
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16804
  br i1 %16, label %18, label %17, !dbg !16805

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.291, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.288, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  unreachable, !dbg !16806

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16764
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %20, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %20, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  call void @llvm.dbg.value(metadata i32 %20, metadata !16763, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16809, !srcloc !14531
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()), !dbg !16765
  ret i1 %19, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16811 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16817, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i64 undef, metadata !16819, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16816, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i8** %4, metadata !16820, metadata !DIExpression()), !dbg !16822
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16823
  call void @llvm.dbg.value(metadata i32 %6, metadata !16821, metadata !DIExpression()), !dbg !16822
  %7 = icmp eq i8** %4, null, !dbg !16824
  br i1 %7, label %12, label %8, !dbg !16826

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16827
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16829
  %11 = load i8*, i8** %10, align 4, !dbg !16829
  store i8* %11, i8** %4, align 4, !dbg !16830
  br label %12, !dbg !16831

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16833 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16835
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16836
  ret void, !dbg !16837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16838 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16848, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16846, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16847, metadata !DIExpression()), !dbg !16865
  %5 = icmp eq i64 %4, -1, !dbg !16866
  br i1 %5, label %63, label %6, !dbg !16868

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16869
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %7) #24, !dbg !16869
  br i1 %8, label %9, label %10, !dbg !16872

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 99) #25, !dbg !16873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.340, i32 0, i32 0)) #25, !dbg !16873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 99) #25, !dbg !16873
  unreachable, !dbg !16873

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16875
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16876
  call void @llvm.dbg.value(metadata i32 0, metadata !16849, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !16885
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16887, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !16885
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16895
  br i1 %13, label %15, label %14, !dbg !16898

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !16899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !16899
  unreachable, !dbg !16899

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16887
  call void @llvm.dbg.value(metadata i32 %16, metadata !16890, metadata !DIExpression()) #23, !dbg !16894
  call void @llvm.dbg.value(metadata i32 %16, metadata !16884, metadata !DIExpression()) #23, !dbg !16885
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 %16, metadata !16855, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16877
  %17 = icmp slt i64 %4, -1, !dbg !16902
  br i1 %17, label %18, label %24, !dbg !16903

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16904
  %20 = add i64 %4, %19, !dbg !16905
  %21 = sub i64 -2, %20, !dbg !16905
  call void @llvm.dbg.value(metadata i64 %21, metadata !16859, metadata !DIExpression()), !dbg !16906
  %22 = icmp sgt i64 %21, 1, !dbg !16907
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16907
  br label %29, !dbg !16908

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16909
  %26 = tail call fastcc i32 @elapsed.344() #24, !dbg !16911
  %27 = sext i32 %26 to i64, !dbg !16911
  %28 = add nsw i64 %25, %27, !dbg !16912
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16913
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16914
  store i64 %30, i64* %31, align 8, !dbg !16915
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16916
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16856, metadata !DIExpression()), !dbg !16918
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16919
  br i1 %33, label %48, label %34, !dbg !16919

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16920
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16856, metadata !DIExpression()), !dbg !16918
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16924
  %38 = load i64, i64* %37, align 8, !dbg !16924
  %39 = icmp slt i64 %35, %38, !dbg !16925
  br i1 %39, label %40, label %44, !dbg !16926

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16924
  %42 = sub nsw i64 %38, %35, !dbg !16927
  store i64 %42, i64* %41, align 8, !dbg !16927
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16929
  tail call fastcc void @sys_dlist_insert.345(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16930
  br label %49, !dbg !16931

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16932
  store i64 %45, i64* %31, align 8, !dbg !16932
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16933
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16856, metadata !DIExpression()), !dbg !16918
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16919
  br i1 %47, label %48, label %34, !dbg !16919, !llvm.loop !16934

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.346(%struct._dnode* noundef nonnull %7) #24, !dbg !16936
  br label %49, !dbg !16939

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16940
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16941
  br i1 %51, label %52, label %59, !dbg !16942

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16943
  call void @llvm.dbg.value(metadata i32 %53, metadata !16862, metadata !DIExpression()), !dbg !16944
  %54 = icmp ne i32 %53, 0, !dbg !16945
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16947
  br i1 %57, label %59, label %58, !dbg !16947

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16948
  br label %59, !dbg !16950

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !16957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !16957
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16959
  br i1 %60, label %62, label %61, !dbg !16962

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !16963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !16963
  unreachable, !dbg !16963

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16951, metadata !DIExpression()) #23, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %16, metadata !16965, metadata !DIExpression()) #23, !dbg !16968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16970, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16877
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16979, metadata !DIExpression()), !dbg !16980
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16981
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16981
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16982
  ret i1 %4, !dbg !16983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.344() unnamed_addr #1 !dbg !16984 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16987
  %2 = icmp eq i32 %1, 0, !dbg !16988
  br i1 %2, label %3, label %5, !dbg !16987

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16989
  br label %5, !dbg !16987

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16987
  ret i32 %6, !dbg !16990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16991 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.351() #24, !dbg !16997
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16995, metadata !DIExpression()), !dbg !16998
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16999
  ret %struct._timeout* %2, !dbg !17000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.345(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17001 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17005, metadata !DIExpression()), !dbg !17009
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17006, metadata !DIExpression()), !dbg !17009
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17010
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17010
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17007, metadata !DIExpression()), !dbg !17009
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17011
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17012
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17013
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17014
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17015
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17016
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17017
  ret void, !dbg !17018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17019 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17023, metadata !DIExpression()), !dbg !17025
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17026
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.349(%struct._dnode* noundef %2) #24, !dbg !17027
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17024, metadata !DIExpression()), !dbg !17025
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17028
  ret %struct._timeout* %4, !dbg !17029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.346(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17030 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17035, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17036, metadata !DIExpression()), !dbg !17038
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17039
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17037, metadata !DIExpression()), !dbg !17038
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17040
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17041
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17042
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17043
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17044
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17045
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17046
  ret void, !dbg !17047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17048 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17053
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17050, metadata !DIExpression()), !dbg !17054
  %2 = tail call fastcc i32 @elapsed.344() #24, !dbg !17055
  call void @llvm.dbg.value(metadata i32 %2, metadata !17051, metadata !DIExpression()), !dbg !17054
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17056
  br i1 %3, label %14, label %4, !dbg !17058

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17059
  %6 = load i64, i64* %5, align 8, !dbg !17059
  %7 = sext i32 %2 to i64, !dbg !17060
  %8 = sub nsw i64 %6, %7, !dbg !17061
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17062
  br i1 %9, label %14, label %10, !dbg !17063

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17064
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17064
  %13 = trunc i64 %12 to i32, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %13, metadata !17052, metadata !DIExpression()), !dbg !17054
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17066
  call void @llvm.dbg.value(metadata i32 %15, metadata !17052, metadata !DIExpression()), !dbg !17054
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17067
  %17 = icmp ne i32 %16, 0, !dbg !17069
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17070
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17070
  call void @llvm.dbg.value(metadata i32 %20, metadata !17052, metadata !DIExpression()), !dbg !17054
  ret i32 %20, !dbg !17071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.349(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17072 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17076, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17077, metadata !DIExpression()), !dbg !17078
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17079
  br i1 %2, label %5, label %3, !dbg !17080

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.350(%struct._dnode* noundef nonnull %0) #24, !dbg !17081
  br label %5, !dbg !17080

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17080
  ret %struct._dnode* %6, !dbg !17082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.350(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17083 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17085, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17086, metadata !DIExpression()), !dbg !17087
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17088
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17089
  br i1 %3, label %7, label %4, !dbg !17090

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17091
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17091
  br label %7, !dbg !17090

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17090
  ret %struct._dnode* %8, !dbg !17092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.351() unnamed_addr #8 !dbg !17093 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17097, metadata !DIExpression()), !dbg !17098
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.352() #24, !dbg !17099
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17099
  ret %struct._dnode* %3, !dbg !17100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.352() unnamed_addr #8 !dbg !17101 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17105, metadata !DIExpression()), !dbg !17106
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17107
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17108
  ret i1 %2, !dbg !17109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17110 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17114, metadata !DIExpression()), !dbg !17119
  call void @llvm.dbg.value(metadata i32 -22, metadata !17115, metadata !DIExpression()), !dbg !17119
  call void @llvm.dbg.value(metadata i32 0, metadata !17116, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17121
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17123, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17121
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17126
  br i1 %3, label %5, label %4, !dbg !17127

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17128
  unreachable, !dbg !17128

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17121
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  call void @llvm.dbg.value(metadata i32 undef, metadata !17118, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 -22, metadata !17115, metadata !DIExpression()), !dbg !17119
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17120
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17115, metadata !DIExpression()), !dbg !17119
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %6) #24, !dbg !17130
  br i1 %7, label %8, label %9, !dbg !17134

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17135
  call void @llvm.dbg.value(metadata i32 0, metadata !17115, metadata !DIExpression()), !dbg !17119
  br label %9, !dbg !17137

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17119
  call void @llvm.dbg.value(metadata i32 %10, metadata !17115, metadata !DIExpression()), !dbg !17119
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17138
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17140
  br i1 %11, label %13, label %12, !dbg !17141

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17142
  unreachable, !dbg !17142

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %14, metadata !16890, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata i32 %14, metadata !16884, metadata !DIExpression()) #23, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %14, metadata !17118, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17145, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 %10, metadata !17115, metadata !DIExpression()), !dbg !17119
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17120
  ret i32 %10, !dbg !17146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17147 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17149, metadata !DIExpression()), !dbg !17150
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17151
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17153
  br i1 %3, label %10, label %4, !dbg !17154

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17155
  %6 = load i64, i64* %5, align 8, !dbg !17155
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17157
  %8 = load i64, i64* %7, align 8, !dbg !17158
  %9 = add nsw i64 %8, %6, !dbg !17158
  store i64 %9, i64* %7, align 8, !dbg !17158
  br label %10, !dbg !17159

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17160
  tail call fastcc void @sys_dlist_remove.355(%struct._dnode* noundef %11) #24, !dbg !17161
  ret void, !dbg !17162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.355(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17163 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17167, metadata !DIExpression()), !dbg !17170
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17171
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17171
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17168, metadata !DIExpression()), !dbg !17170
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17172
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17172
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17169, metadata !DIExpression()), !dbg !17170
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17173
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17174
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17175
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17176
  tail call fastcc void @sys_dnode_init.356(%struct._dnode* noundef %0) #24, !dbg !17177
  ret void, !dbg !17178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.356(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17179 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17181, metadata !DIExpression()), !dbg !17182
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17183
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17184
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17185
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17186
  ret void, !dbg !17187
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17188 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17194, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i64 0, metadata !17195, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i32 0, metadata !17196, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17203, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17201
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17206
  br i1 %3, label %5, label %4, !dbg !17207

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17208
  unreachable, !dbg !17208

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17201
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17209
  call void @llvm.dbg.value(metadata i32 undef, metadata !17198, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i64 0, metadata !17195, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()), !dbg !17200
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17210
  call void @llvm.dbg.value(metadata i64 %6, metadata !17195, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17213
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17215
  br i1 %7, label %9, label %8, !dbg !17216

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17217
  unreachable, !dbg !17217

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17203
  call void @llvm.dbg.value(metadata i32 %10, metadata !16890, metadata !DIExpression()) #23, !dbg !17205
  call void @llvm.dbg.value(metadata i32 %10, metadata !16884, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %10, metadata !17198, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17218
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17220, !srcloc !16971
  call void @llvm.dbg.value(metadata i64 %6, metadata !17195, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()), !dbg !17200
  ret i64 %6, !dbg !17221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17222 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17224, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata i64 0, metadata !17225, metadata !DIExpression()), !dbg !17228
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.357(%struct._timeout* noundef %0) #24, !dbg !17229
  br i1 %2, label %21, label %3, !dbg !17231

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17232
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17226, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i64 0, metadata !17225, metadata !DIExpression()), !dbg !17228
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17234
  br i1 %5, label %16, label %6, !dbg !17236

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17226, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i64 %8, metadata !17225, metadata !DIExpression()), !dbg !17228
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17237
  %10 = load i64, i64* %9, align 8, !dbg !17237
  %11 = add nsw i64 %10, %8, !dbg !17239
  call void @llvm.dbg.value(metadata i64 %11, metadata !17225, metadata !DIExpression()), !dbg !17228
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17240
  br i1 %12, label %16, label %13, !dbg !17242

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17243
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17226, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i64 %11, metadata !17225, metadata !DIExpression()), !dbg !17228
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17234
  br i1 %15, label %16, label %6, !dbg !17236, !llvm.loop !17244

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17228
  call void @llvm.dbg.value(metadata i64 %17, metadata !17225, metadata !DIExpression()), !dbg !17228
  %18 = tail call fastcc i32 @elapsed.344() #24, !dbg !17246
  %19 = sext i32 %18 to i64, !dbg !17246
  %20 = sub nsw i64 %17, %19, !dbg !17247
  br label %21, !dbg !17248

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17228
  ret i64 %22, !dbg !17249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.357(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17250 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17254, metadata !DIExpression()), !dbg !17255
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17256
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.336(%struct._dnode* noundef %2) #24, !dbg !17257
  %4 = xor i1 %3, true, !dbg !17258
  ret i1 %4, !dbg !17259
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17260 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17262, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i64 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 0, metadata !17264, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17269
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17271, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17269
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17274
  br i1 %3, label %5, label %4, !dbg !17275

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17276
  unreachable, !dbg !17276

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17269
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17266, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata i64 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !17264, metadata !DIExpression()), !dbg !17268
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17278
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17281
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17263, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17282
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17284
  br i1 %8, label %10, label %9, !dbg !17285

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17286
  unreachable, !dbg !17286

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %11, metadata !16890, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %11, metadata !16884, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %11, metadata !17266, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17263, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17289, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 undef, metadata !17264, metadata !DIExpression()), !dbg !17268
  %12 = add i64 %7, %6, !dbg !17290
  ret i64 %12, !dbg !17291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17292 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17294, metadata !DIExpression()), !dbg !17298
  call void @llvm.dbg.value(metadata i32 0, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17300
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17302, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17300
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17305
  br i1 %2, label %4, label %3, !dbg !17306

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17307
  unreachable, !dbg !17307

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17300
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17308
  call void @llvm.dbg.value(metadata i32 undef, metadata !17297, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 -1, metadata !17294, metadata !DIExpression()), !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !17295, metadata !DIExpression()), !dbg !17299
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17309
  call void @llvm.dbg.value(metadata i32 %5, metadata !17294, metadata !DIExpression()), !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17312
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17314
  br i1 %6, label %8, label %7, !dbg !17315

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17316
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17316
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17316
  unreachable, !dbg !17316

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17302
  call void @llvm.dbg.value(metadata i32 %9, metadata !16890, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %9, metadata !16884, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata i32 %9, metadata !17297, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17319, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 %5, metadata !17294, metadata !DIExpression()), !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !17295, metadata !DIExpression()), !dbg !17299
  ret i32 %5, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17323, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i1 %1, metadata !17324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17333
  call void @llvm.dbg.value(metadata i32 0, metadata !17325, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17335
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17337, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17335
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17340
  br i1 %4, label %6, label %5, !dbg !17341

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  unreachable, !dbg !17342

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17335
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 undef, metadata !17325, metadata !DIExpression()), !dbg !17334
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17344
  call void @llvm.dbg.value(metadata i32 %7, metadata !17328, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata i1 undef, metadata !17331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17345
  %8 = icmp slt i32 %7, 2, !dbg !17346
  call void @llvm.dbg.value(metadata i1 %8, metadata !17332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17345
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17347
  call void @llvm.dbg.value(metadata i1 %9, metadata !17331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17345
  br i1 %10, label %14, label %11, !dbg !17347

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17349
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17349
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17351
  br label %14, !dbg !17352

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17353
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17355
  br i1 %15, label %17, label %16, !dbg !17356

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17357
  unreachable, !dbg !17357

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17337
  call void @llvm.dbg.value(metadata i32 %18, metadata !16890, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 %18, metadata !16884, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %18, metadata !17327, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17360, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 1, metadata !17325, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 undef, metadata !17325, metadata !DIExpression()), !dbg !17334
  ret void, !dbg !17361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17366, metadata !DIExpression()), !dbg !17371
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17373
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17375, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17377
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17377
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17373
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17378
  br i1 %3, label %5, label %4, !dbg !17379

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17380
  unreachable, !dbg !17380

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17377
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17381
  call void @llvm.dbg.value(metadata i32 undef, metadata !17367, metadata !DIExpression()), !dbg !17371
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17371
  call void @llvm.dbg.value(metadata i32 undef, metadata !17367, metadata !DIExpression()), !dbg !17371
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17382
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17383
  br i1 %7, label %37, label %8, !dbg !17384

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17371
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17385
  %14 = load i64, i64* %13, align 8, !dbg !17385
  %15 = sext i32 %11 to i64, !dbg !17386
  %16 = icmp sgt i64 %14, %15, !dbg !17387
  br i1 %16, label %35, label %17, !dbg !17388

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17368, metadata !DIExpression()), !dbg !17389
  %18 = trunc i64 %14 to i32, !dbg !17390
  call void @llvm.dbg.value(metadata i32 %18, metadata !17370, metadata !DIExpression()), !dbg !17389
  %19 = sext i32 %18 to i64, !dbg !17391
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17392
  %21 = add i64 %20, %19, !dbg !17392
  store i64 %21, i64* @curr_tick, align 8, !dbg !17392
  store i64 0, i64* %13, align 8, !dbg !17393
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17394
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17395
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17397
  br i1 %22, label %24, label %23, !dbg !17398

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17399
  unreachable, !dbg !17399

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16951, metadata !DIExpression()) #23, !dbg !17395
  call void @llvm.dbg.value(metadata i32 %12, metadata !16965, metadata !DIExpression()) #23, !dbg !17400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17402, !srcloc !16971
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17403
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17403
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17405
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17407, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17405
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17410
  br i1 %28, label %30, label %29, !dbg !17411

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17412
  unreachable, !dbg !17412

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17405
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17413
  call void @llvm.dbg.value(metadata i32 undef, metadata !17367, metadata !DIExpression()), !dbg !17371
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17414
  %32 = sub nsw i32 %31, %18, !dbg !17414
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17371
  call void @llvm.dbg.value(metadata i32 undef, metadata !17367, metadata !DIExpression()), !dbg !17371
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17382
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17383
  br i1 %34, label %37, label %8, !dbg !17384, !llvm.loop !17415

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17417
  store i64 %36, i64* %13, align 8, !dbg !17417
  br label %41, !dbg !17420

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17371
  %40 = sext i32 %39 to i64, !dbg !17421
  br label %41, !dbg !17421

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17421
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17422
  %45 = add i64 %44, %42, !dbg !17422
  store i64 %45, i64* @curr_tick, align 8, !dbg !17422
  store i32 0, i32* @announce_remaining, align 4, !dbg !17423
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17424
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17426
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17428
  br i1 %47, label %49, label %48, !dbg !17429

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17430
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17430
  unreachable, !dbg !17430

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17371
  call void @llvm.dbg.value(metadata i32 %50, metadata !16951, metadata !DIExpression()) #23, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %50, metadata !16965, metadata !DIExpression()) #23, !dbg !17431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17433, !srcloc !16971
  ret void, !dbg !17434
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17435 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17439, metadata !DIExpression()), !dbg !17443
  call void @llvm.dbg.value(metadata i32 0, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16878, metadata !DIExpression()) #23, !dbg !17445
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17447, !srcloc !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17445
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17450
  br i1 %2, label %4, label %3, !dbg !17451

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 148) #25, !dbg !17452
  unreachable, !dbg !17452

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16884, metadata !DIExpression()) #23, !dbg !17445
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17453
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i64 0, metadata !17439, metadata !DIExpression()), !dbg !17443
  call void @llvm.dbg.value(metadata i32 undef, metadata !17440, metadata !DIExpression()), !dbg !17444
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17454
  %6 = tail call fastcc i32 @elapsed.344() #24, !dbg !17457
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17443
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16956, metadata !DIExpression()) #23, !dbg !17458
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17460
  br i1 %7, label %9, label %8, !dbg !17461

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.342, i32 0, i32 0), i32 noundef 194) #25, !dbg !17462
  unreachable, !dbg !17462

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17447
  call void @llvm.dbg.value(metadata i32 %10, metadata !16890, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %10, metadata !16884, metadata !DIExpression()) #23, !dbg !17445
  call void @llvm.dbg.value(metadata i32 %10, metadata !17442, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17443
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17443
  call void @llvm.dbg.value(metadata i32 undef, metadata !16951, metadata !DIExpression()) #23, !dbg !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()) #23, !dbg !17463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17465, !srcloc !16971
  call void @llvm.dbg.value(metadata i32 undef, metadata !17440, metadata !DIExpression()), !dbg !17444
  %11 = sext i32 %6 to i64, !dbg !17457
  %12 = add i64 %5, %11, !dbg !17466
  ret i64 %12, !dbg !17467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17468 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17469
  %2 = trunc i64 %1 to i32, !dbg !17470
  ret i32 %2, !dbg !17471
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17472 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17473
  ret i64 %1, !dbg !17474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17477, metadata !DIExpression()), !dbg !17484
  %2 = icmp eq i32 %0, 0, !dbg !17485
  br i1 %2, label %10, label %3, !dbg !17487

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.364() #24, !dbg !17488
  call void @llvm.dbg.value(metadata i32 %4, metadata !17478, metadata !DIExpression()), !dbg !17484
  %5 = mul i32 %0, 84, !dbg !17489
  call void @llvm.dbg.value(metadata i32 %5, metadata !17479, metadata !DIExpression()), !dbg !17484
  br label %6, !dbg !17490

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.364() #24, !dbg !17491
  call void @llvm.dbg.value(metadata i32 %7, metadata !17480, metadata !DIExpression()), !dbg !17492
  %8 = sub i32 %7, %4, !dbg !17493
  %9 = icmp ult i32 %8, %5, !dbg !17495
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.364() unnamed_addr #1 !dbg !17497 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.365() #24, !dbg !17498
  ret i32 %1, !dbg !17499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.365() unnamed_addr #1 !dbg !17500 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17501
  ret i32 %1, !dbg !17502
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17503 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17507, metadata !DIExpression()), !dbg !17509
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17510

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17511
  br label %14, !dbg !17515

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17508, metadata !DIExpression()), !dbg !17509
  %6 = icmp slt i64 %2, -1, !dbg !17516
  br i1 %6, label %7, label %9, !dbg !17519

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17520
  br label %14, !dbg !17521

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17523
  %11 = icmp ugt i64 %2, 1, !dbg !17524
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17524
  %13 = add nsw i64 %10, %12, !dbg !17525
  br label %14, !dbg !17526

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17527
  ret i64 %15, !dbg !17528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17529 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.368, i32 0, i32 0)) #25, !dbg !17531
  ret void, !dbg !17532
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!903, !2, !2526, !27, !177, !209, !2528, !2530, !2564, !2566, !218, !268, !2568, !2571, !2582, !2628, !2630, !2658, !2686, !2729, !2801, !2846, !297, !458, !2874, !494, !504, !529, !696, !731, !939, !2879, !1077, !1143, !1449, !1713, !2918, !1828, !1918, !2920, !3006, !3071, !1970, !3074, !1977, !2349, !3092, !2369, !3094, !2487, !3097}
!llvm.ident = !{!3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099, !3099}
!llvm.module.flags = !{!3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 251, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !814, line: 72, type: !898, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !800, globals: !811, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!764 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!765 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!766 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!767 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!768 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!769 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!770 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!771 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!772 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!773 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!774 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!775 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!776 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!777 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!778 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!779 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!780 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!781 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!787 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!788 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!789 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!790 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!791 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!792 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!793 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!794 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!795 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!796 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!797 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!798 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!799 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!800 = !{!185, !107, !106, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 243, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 235, size: 192, elements: !804)
!804 = !{!805, !806, !807, !808, !809, !810}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !803, file: !223, line: 237, baseType: !227, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !803, file: !223, line: 238, baseType: !227, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !803, file: !223, line: 239, baseType: !227, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !803, file: !223, line: 240, baseType: !227, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !803, file: !223, line: 241, baseType: !227, size: 32, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !803, file: !223, line: 242, baseType: !227, size: 32, offset: 160)
!811 = !{!812, !818, !834, !845, !862, !729, !864, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896}
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !731, file: !814, line: 424, type: !815, isLocal: false, isDefinition: true, align: 16)
!814 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 4)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !731, file: !814, line: 424, type: !820, isLocal: false, isDefinition: true, align: 32)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !822)
!822 = !{!823, !824, !825, !826, !832, !833}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !821, file: !247, line: 380, baseType: !118, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !821, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !821, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !821, file: !247, line: 386, baseType: !827, size: 32, offset: 96)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !829)
!829 = !{!830, !831}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !828, file: !247, line: 359, baseType: !195, size: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !828, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !821, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !821, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !731, file: !814, line: 424, type: !836, isLocal: true, isDefinition: true, align: 32)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !838)
!838 = !{!839, !844}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !837, file: !238, line: 60, baseType: !840, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DISubroutineType(types: !842)
!842 = !{!107, !843}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !837, file: !238, line: 65, baseType: !843, size: 32, offset: 32)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !814, line: 423, type: !847, isLocal: true, isDefinition: true)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !814, line: 107, size: 1472, elements: !848)
!848 = !{!849}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !847, file: !814, line: 109, baseType: !850, size: 1472)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 1472, elements: !860)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !814, line: 101, size: 64, elements: !852)
!852 = !{!853, !859}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !851, file: !814, line: 102, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !855, line: 63, baseType: !856)
!855 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !107, !106}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !851, file: !814, line: 103, baseType: !106, size: 32, offset: 32)
!860 = !{!861}
!861 = !DISubrange(count: 23)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !731, file: !814, line: 424, type: !828, isLocal: true, isDefinition: true, align: 8)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !866, file: !814, line: 493, type: !871, isLocal: true, isDefinition: true, align: 32)
!866 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !814, file: !814, line: 460, type: !867, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !869)
!867 = !DISubroutineType(types: !868)
!868 = !{null, !843}
!869 = !{!870}
!870 = !DILocalVariable(name: "dev", arg: 1, scope: !866, file: !814, line: 460, type: !843)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !872)
!872 = !{!873, !875, !876, !877}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !871, file: !10, line: 55, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !871, file: !10, line: 57, baseType: !874, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !871, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !871, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !866, file: !814, line: 497, type: !871, isLocal: true, isDefinition: true, align: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !866, file: !814, line: 507, type: !871, isLocal: true, isDefinition: true, align: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !866, file: !814, line: 512, type: !871, isLocal: true, isDefinition: true, align: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !866, file: !814, line: 516, type: !871, isLocal: true, isDefinition: true, align: 32)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !866, file: !814, line: 523, type: !871, isLocal: true, isDefinition: true, align: 32)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !866, file: !814, line: 527, type: !871, isLocal: true, isDefinition: true, align: 32)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !866, file: !814, line: 581, type: !871, isLocal: true, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !866, file: !814, line: 586, type: !871, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !866, file: !814, line: 591, type: !871, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !866, file: !814, line: 595, type: !871, isLocal: true, isDefinition: true, align: 32)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 736, elements: !860)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 133, baseType: !734)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !903, file: !908, line: 24, type: !934, isLocal: false, isDefinition: true, align: 16)
!903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !905, splitDebugInlining: false, nameTableKind: None)
!904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!905 = !{!906, !901, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932}
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !903, file: !908, line: 19, type: !909, isLocal: false, isDefinition: true, align: 16)
!908 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 224, elements: !910)
!910 = !{!911}
!911 = !DISubrange(count: 14)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !903, file: !908, line: 31, type: !815, isLocal: false, isDefinition: true, align: 16)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !903, file: !908, line: 38, type: !815, isLocal: false, isDefinition: true, align: 16)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !903, file: !908, line: 45, type: !815, isLocal: false, isDefinition: true, align: 16)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !903, file: !908, line: 52, type: !815, isLocal: false, isDefinition: true, align: 16)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !903, file: !908, line: 59, type: !815, isLocal: false, isDefinition: true, align: 16)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !903, file: !908, line: 66, type: !815, isLocal: false, isDefinition: true, align: 16)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !903, file: !908, line: 73, type: !815, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !903, file: !908, line: 80, type: !815, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !903, file: !908, line: 87, type: !815, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !903, file: !908, line: 94, type: !815, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !903, file: !908, line: 101, type: !815, isLocal: false, isDefinition: true, align: 16)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 3)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !939, file: !1003, line: 398, type: !1036, isLocal: true, isDefinition: true)
!939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !941, retainedTypes: !954, globals: !1000, splitDebugInlining: false, nameTableKind: None)
!940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!941 = !{!942, !30, !947}
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 197, baseType: !32, size: 32, elements: !944)
!943 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = !{!945, !946}
!945 = !DIEnumerator(name: "SUCCESS", value: 0)
!946 = !DIEnumerator(name: "ERROR", value: 1)
!947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !948, line: 44, baseType: !32, size: 32, elements: !949)
!948 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !951, !952, !953}
!950 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!951 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!952 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!953 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!954 = !{!106, !107, !152, !955, !993, !999}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !958)
!958 = !{!959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !992}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !957, file: !223, line: 337, baseType: !227, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !957, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !957, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !957, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !957, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !957, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !957, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !957, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !957, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !957, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !957, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !957, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !957, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !957, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !957, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !957, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !957, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !957, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !957, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !957, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !957, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !957, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !957, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !957, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !957, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !957, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !957, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !957, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !957, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !957, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !957, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 32, elements: !445)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !957, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !996)
!995 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !994, file: !995, line: 344, baseType: !152, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !994, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1000 = !{!1001, !1007, !1023, !1034, !937}
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1004, isLocal: false, isDefinition: true, align: 16)
!1003 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 640, elements: !1005)
!1005 = !{!1006}
!1006 = !DISubrange(count: 40)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1009, isLocal: false, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1021, !1022}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1010, file: !247, line: 380, baseType: !118, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1010, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1010, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1010, file: !247, line: 386, baseType: !1016, size: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1017, file: !247, line: 359, baseType: !195, size: 8)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1017, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1010, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1010, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1025, isLocal: true, isDefinition: true, align: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1027)
!1027 = !{!1028, !1033}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1026, file: !238, line: 60, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!107, !1032}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1026, file: !238, line: 65, baseType: !1032, size: 32, offset: 32)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !939, file: !1003, line: 752, type: !1017, isLocal: true, isDefinition: true, align: 8)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1037)
!1037 = !{!1038, !1044, !1045, !1054, !1059, !1064, !1070}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1036, file: !948, line: 101, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!107, !1032, !1043}
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !948, line: 56, baseType: !106)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1036, file: !948, line: 102, baseType: !1039, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1036, file: !948, line: 103, baseType: !1046, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1047)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!107, !1032, !1043, !1050, !106}
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1032, !1043, !106}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1036, file: !948, line: 104, baseType: !1055, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!107, !1032, !1043, !999}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1036, file: !948, line: 105, baseType: !1060, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!947, !1032, !1043}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1036, file: !948, line: 106, baseType: !1065, size: 32, offset: 160)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!107, !1032, !1043, !1069}
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !948, line: 64, baseType: !106)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1036, file: !948, line: 107, baseType: !1071, size: 32, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!107, !1032, !1043, !106}
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1077, file: !1134, line: 603, type: !1136, isLocal: true, isDefinition: true, align: 32)
!1077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1079, globals: !1131, splitDebugInlining: false, nameTableKind: None)
!1078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1079 = !{!106, !107, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1083, line: 336, size: 160, elements: !1084)
!1083 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1084 = !{!1085, !1105, !1109, !1113, !1126}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1082, file: !1083, line: 365, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!107, !1089, !1104}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1102, !1103}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1091, file: !247, line: 380, baseType: !118, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1091, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1091, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1091, file: !247, line: 386, baseType: !1097, size: 32, offset: 96)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1098, file: !247, line: 359, baseType: !195, size: 8)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1098, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1091, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1091, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1082, file: !1083, line: 366, baseType: !1106, size: 32, offset: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1089, !196}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1082, file: !1083, line: 374, baseType: !1110, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!107, !1089}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1082, file: !1083, line: 377, baseType: !1114, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!107, !1089, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1083, line: 122, size: 64, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1119, file: !1083, line: 123, baseType: !152, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1119, file: !1083, line: 124, baseType: !195, size: 8, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1119, file: !1083, line: 125, baseType: !195, size: 8, offset: 40)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1119, file: !1083, line: 126, baseType: !195, size: 8, offset: 48)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1119, file: !1083, line: 127, baseType: !195, size: 8, offset: 56)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1082, file: !1083, line: 379, baseType: !1127, size: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!107, !1089, !1130}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1131 = !{!1075, !1132}
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1077, file: !1134, line: 38, type: !1135, isLocal: true, isDefinition: true)
!1134 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1137, file: !238, line: 60, baseType: !1110, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1137, file: !238, line: 65, baseType: !1089, size: 32, offset: 32)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1143, file: !1312, line: 762, type: !1424, isLocal: true, isDefinition: true)
!1143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1145, retainedTypes: !1163, globals: !1309, splitDebugInlining: false, nameTableKind: None)
!1144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1145 = !{!30, !1146, !1152, !1157, !947}
!1146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1147, line: 506, baseType: !32, size: 32, elements: !1148)
!1147 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1148 = !{!1149, !1150, !1151}
!1149 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1150 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1151 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1147, line: 512, baseType: !32, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1155 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1156 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !855, line: 43, baseType: !32, size: 32, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162}
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1160 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1161 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1162 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1163 = !{!106, !107, !1164, !1234, !1239, !1199, !1152, !1146, !1244, !1245, !152, !1259, !1214, !193, !1269, !1270}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1147, line: 523, size: 288, elements: !1167)
!1167 = !{!1168, !1189, !1195, !1200, !1204, !1205, !1206, !1210, !1230}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1166, file: !1147, line: 524, baseType: !1169, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!107, !1172, !1187, !1188}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1185, !1186}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1174, file: !247, line: 380, baseType: !118, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1174, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1174, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1174, file: !247, line: 386, baseType: !1180, size: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1181, file: !247, line: 359, baseType: !195, size: 8)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1181, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1174, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1174, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1147, line: 237, baseType: !195)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1147, line: 257, baseType: !152)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1166, file: !1147, line: 530, baseType: !1190, size: 32, offset: 32)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!107, !1172, !1193}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1147, line: 229, baseType: !152)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1166, file: !1147, line: 532, baseType: !1196, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!107, !1172, !1199, !1194}
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1147, line: 216, baseType: !152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1166, file: !1147, line: 535, baseType: !1201, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1172, !1199}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1166, file: !1147, line: 537, baseType: !1201, size: 32, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1166, file: !1147, line: 539, baseType: !1201, size: 32, offset: 160)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1166, file: !1147, line: 541, baseType: !1207, size: 32, offset: 192)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!107, !1172, !1187, !1146, !1152}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1166, file: !1147, line: 544, baseType: !1211, size: 32, offset: 224)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!107, !1172, !1214, !145}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1147, line: 478, size: 96, elements: !1216)
!1216 = !{!1217, !1224, !1229}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1215, file: !1147, line: 482, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1219, line: 33, baseType: !1220)
!1219 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1219, line: 29, size: 32, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1220, file: !1219, line: 30, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1215, file: !1147, line: 485, baseType: !1225, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1147, line: 464, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{null, !1172, !1214, !1199}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1215, file: !1147, line: 493, baseType: !1199, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1166, file: !1147, line: 547, baseType: !1231, size: 32, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!152, !1172}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1147, line: 428, size: 32, elements: !1237)
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1236, file: !1147, line: 434, baseType: !1199, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1147, line: 441, size: 32, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1241, file: !1147, line: 447, baseType: !1199, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 275, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 264, size: 320, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1247, file: !223, line: 266, baseType: !227, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1247, file: !223, line: 267, baseType: !227, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1247, file: !223, line: 268, baseType: !227, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1247, file: !223, line: 269, baseType: !227, size: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1247, file: !223, line: 270, baseType: !227, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1247, file: !223, line: 271, baseType: !227, size: 32, offset: 160)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1247, file: !223, line: 272, baseType: !227, size: 32, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1247, file: !223, line: 273, baseType: !227, size: 32, offset: 224)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1247, file: !223, line: 274, baseType: !1258, size: 64, offset: 256)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 288, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 281, size: 288, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1267, !1268}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1261, file: !223, line: 283, baseType: !227, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1261, file: !223, line: 284, baseType: !227, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1261, file: !223, line: 285, baseType: !1266, size: 128, offset: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !816)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1261, file: !223, line: 286, baseType: !970, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1261, file: !223, line: 287, baseType: !227, size: 32, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1273)
!1273 = !{!1274, !1279, !1280, !1289, !1294, !1299, !1304}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1272, file: !948, line: 101, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!107, !1172, !1043}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1272, file: !948, line: 102, baseType: !1275, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1272, file: !948, line: 103, baseType: !1281, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!107, !1172, !1043, !1285, !106}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1172, !1043, !106}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1272, file: !948, line: 104, baseType: !1290, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!107, !1172, !1043, !999}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1272, file: !948, line: 105, baseType: !1295, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!947, !1172, !1043}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1272, file: !948, line: 106, baseType: !1300, size: 32, offset: 160)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!107, !1172, !1043, !1069}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1272, file: !948, line: 107, baseType: !1305, size: 32, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!107, !1172, !1043, !106}
!1309 = !{!1310, !1316, !1318, !1328, !1330, !1332, !1334, !1339, !1341, !1343, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1141, !1420, !1422, !1435, !1437, !1439, !1441, !1443, !1445}
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 112, elements: !1314)
!1314 = !{!1315}
!1315 = !DISubrange(count: 7)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1321, file: !238, line: 60, baseType: !1324, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!107, !1172}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1321, file: !238, line: 65, baseType: !1172, size: 32, offset: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1313, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 5)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 6)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1173, isLocal: false, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1320, isLocal: true, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1143, file: !1312, line: 762, type: !1378, isLocal: true, isDefinition: true)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1379, line: 237, size: 128, elements: !1380)
!1379 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1378, file: !1379, line: 239, baseType: !1241, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1378, file: !1379, line: 241, baseType: !1172, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1378, file: !1379, line: 243, baseType: !1384, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1219, line: 40, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1219, line: 35, size: 64, elements: !1386)
!1386 = !{!1387, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1385, file: !1219, line: 36, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1385, file: !1219, line: 37, baseType: !1388, size: 32, offset: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1143, file: !1312, line: 762, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1143, file: !1312, line: 766, type: !1378, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1143, file: !1312, line: 766, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1143, file: !1312, line: 770, type: !1378, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1143, file: !1312, line: 770, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1143, file: !1312, line: 774, type: !1378, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1143, file: !1312, line: 774, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1143, file: !1312, line: 778, type: !1378, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1143, file: !1312, line: 778, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1143, file: !1312, line: 782, type: !1378, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1143, file: !1312, line: 782, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1143, file: !1312, line: 786, type: !1378, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1143, file: !1312, line: 786, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1143, file: !1312, line: 790, type: !1378, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1143, file: !1312, line: 790, type: !1181, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1143, file: !1312, line: 656, type: !1165, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1143, file: !1312, line: 766, type: !1424, isLocal: true, isDefinition: true)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1379, line: 224, size: 160, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1425, file: !1379, line: 226, baseType: !1236, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1425, file: !1379, line: 228, baseType: !999, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1425, file: !1379, line: 230, baseType: !107, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1425, file: !1379, line: 231, baseType: !1431, size: 64, offset: 96)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1431, file: !995, line: 344, baseType: !152, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1431, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1143, file: !1312, line: 770, type: !1424, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1143, file: !1312, line: 774, type: !1424, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1143, file: !1312, line: 778, type: !1424, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1143, file: !1312, line: 782, type: !1424, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1143, file: !1312, line: 786, type: !1424, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1143, file: !1312, line: 790, type: !1424, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1449, file: !1588, line: 44, type: !1706, isLocal: false, isDefinition: true)
!1449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1451, retainedTypes: !1484, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1451 = !{!30, !1452, !1459, !1466, !1473, !1479, !947}
!1452 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1083, line: 47, baseType: !32, size: 32, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458}
!1454 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1455 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1456 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1457 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1458 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1083, line: 75, baseType: !32, size: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465}
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1462 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1463 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1083, line: 92, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1083, line: 84, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478}
!1475 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1083, line: 107, baseType: !32, size: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1482 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1483 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1484 = !{!106, !107, !1485, !196, !195, !1534, !152, !1043, !1545, !197, !566, !1584}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1083, line: 336, size: 160, elements: !1488)
!1488 = !{!1489, !1508, !1512, !1516, !1529}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1487, file: !1083, line: 365, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!107, !1493, !1104}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1506, !1507}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1495, file: !247, line: 380, baseType: !118, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1495, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1495, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1495, file: !247, line: 386, baseType: !1501, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1502, file: !247, line: 359, baseType: !195, size: 8)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1502, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1495, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1495, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1487, file: !1083, line: 366, baseType: !1509, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !1493, !196}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1487, file: !1083, line: 374, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!107, !1493}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1487, file: !1083, line: 377, baseType: !1517, size: 32, offset: 96)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!107, !1493, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1083, line: 122, size: 64, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1522, file: !1083, line: 123, baseType: !152, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1522, file: !1083, line: 124, baseType: !195, size: 8, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1522, file: !1083, line: 125, baseType: !195, size: 8, offset: 40)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1522, file: !1083, line: 126, baseType: !195, size: 8, offset: 48)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1522, file: !1083, line: 127, baseType: !195, size: 8, offset: 56)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1487, file: !1083, line: 379, baseType: !1530, size: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!107, !1493, !1533}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 507, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 498, size: 224, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1536, file: !223, line: 500, baseType: !227, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1536, file: !223, line: 501, baseType: !227, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1536, file: !223, line: 502, baseType: !227, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1536, file: !223, line: 503, baseType: !227, size: 32, offset: 96)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1536, file: !223, line: 504, baseType: !227, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1536, file: !223, line: 505, baseType: !227, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1536, file: !223, line: 506, baseType: !227, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !948, line: 100, size: 224, elements: !1548)
!1548 = !{!1549, !1554, !1555, !1564, !1569, !1574, !1579}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1547, file: !948, line: 101, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !948, line: 76, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!107, !1493, !1043}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1547, file: !948, line: 102, baseType: !1550, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1547, file: !948, line: 103, baseType: !1556, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !948, line: 83, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!107, !1493, !1043, !1560, !106}
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !948, line: 72, baseType: !1561)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1493, !1043, !106}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1547, file: !948, line: 104, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !948, line: 79, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!107, !1493, !1043, !999}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1547, file: !948, line: 105, baseType: !1570, size: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !948, line: 88, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!947, !1493, !1043}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1547, file: !948, line: 106, baseType: !1575, size: 32, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !948, line: 92, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!107, !1493, !1043, !1069}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1547, file: !948, line: 107, baseType: !1580, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !948, line: 96, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!107, !1493, !1043, !106}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1585 = !{!1447, !1586, !1592, !1594, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1663, !1666, !1668, !1671, !1674, !1676, !1682, !1684, !1686, !1688, !1690, !1692, !1694, !1696, !1698, !1700, !1702, !1704}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1588 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 8)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1597, file: !238, line: 60, baseType: !1513, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1597, file: !238, line: 65, baseType: !1493, size: 32, offset: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1623, line: 22, size: 224, elements: !1624)
!1623 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1624 = !{!1625, !1626, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1622, file: !1623, line: 24, baseType: !1534, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1622, file: !1623, line: 26, baseType: !1627, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !995, line: 343, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1629, file: !995, line: 344, baseType: !152, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1629, file: !995, line: 345, baseType: !152, size: 32, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1622, file: !1623, line: 28, baseType: !185, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1622, file: !1623, line: 30, baseType: !145, size: 8, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1622, file: !1623, line: 32, baseType: !107, size: 32, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1622, file: !1623, line: 34, baseType: !145, size: 8, offset: 160)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1622, file: !1623, line: 36, baseType: !145, size: 8, offset: 168)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1622, file: !1623, line: 38, baseType: !145, size: 8, offset: 176)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1622, file: !1623, line: 40, baseType: !145, size: 8, offset: 184)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1622, file: !1623, line: 41, baseType: !1641, size: 32, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1644, line: 60, size: 64, elements: !1645)
!1644 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = !{!1646, !1662}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1643, file: !1644, line: 69, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1644, line: 50, size: 64, elements: !1650)
!1650 = !{!1651, !1660, !1661}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1649, file: !1644, line: 52, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !1656)
!1655 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1656, file: !1655, line: 34, baseType: !152, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1656, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1649, file: !1644, line: 54, baseType: !195, size: 8, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1649, file: !1644, line: 56, baseType: !195, size: 8, offset: 40)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1643, file: !1644, line: 71, baseType: !195, size: 8, offset: 32)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1628, size: 64, elements: !445)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 64, elements: !445)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 128, elements: !340)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1449, file: !1588, line: 1539, type: !1486, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1623, line: 74, size: 64, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1678, file: !1623, line: 76, baseType: !152, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1678, file: !1623, line: 78, baseType: !1493, size: 32, offset: 32)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1449, file: !1588, line: 1914, type: !1621, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1449, file: !1588, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !203, line: 17, baseType: !118, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1707, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1713, file: !1791, line: 65, type: !227, isLocal: true, isDefinition: true)
!1713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1715, retainedTypes: !1716, globals: !1788, splitDebugInlining: false, nameTableKind: None)
!1714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1715 = !{!734}
!1716 = !{!564, !1717, !874, !195, !152, !1725, !1756}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1719, file: !463, line: 766, baseType: !227, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1719, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1719, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1719, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1728)
!1728 = !{!1729, !1731, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1746, !1751, !1755}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1727, file: !463, line: 413, baseType: !1730, size: 256)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1590)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1727, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1733)
!1733 = !{!1734}
!1734 = !DISubrange(count: 24)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1727, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1727, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1727, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1727, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1727, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1727, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1727, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1727, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1744)
!1744 = !{!1745}
!1745 = !DISubrange(count: 56)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1727, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1748, size: 1920, elements: !1749)
!1748 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1749 = !{!1750}
!1750 = !DISubrange(count: 240)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1727, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 644)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1727, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764, !1765, !1766, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1779, !1780, !1781, !1783, !1785, !1787}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1758, file: !463, line: 447, baseType: !467, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1758, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1758, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1758, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1758, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1758, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1758, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1748, size: 96, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 12)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1758, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1758, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1758, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1758, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1758, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1758, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1758, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1758, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1758, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1758, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1758, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !816)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1758, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1337)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1758, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1337)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1758, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1788 = !{!1789, !1815, !1820, !1822, !1824, !1711}
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1713, file: !1791, line: 285, type: !1792, isLocal: true, isDefinition: true, align: 32)
!1791 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1794)
!1794 = !{!1795, !1814}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1793, file: !238, line: 60, baseType: !1796, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!107, !1799}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1812, !1813}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1801, file: !247, line: 380, baseType: !118, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1801, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1801, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1801, file: !247, line: 386, baseType: !1807, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1808, file: !247, line: 359, baseType: !195, size: 8)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1808, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1801, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1801, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1793, file: !238, line: 65, baseType: !1799, size: 32, offset: 32)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "lock", scope: !1713, file: !1791, line: 34, type: !1817, isLocal: true, isDefinition: true)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1817, file: !420, line: 52, baseType: !22, size: 32)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "last_load", scope: !1713, file: !1791, line: 36, type: !152, isLocal: true, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1713, file: !1791, line: 48, type: !152, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1713, file: !1791, line: 54, type: !152, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1828, file: !1910, line: 22, type: !1912, isLocal: true, isDefinition: true)
!1828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1830, retainedTypes: !1831, globals: !1907, splitDebugInlining: false, nameTableKind: None)
!1829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1830 = !{!1146, !1152}
!1831 = !{!1832, !1896, !1901, !1199, !1152, !1146, !1906, !106}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1147, line: 523, size: 288, elements: !1835)
!1835 = !{!1836, !1855, !1859, !1863, !1867, !1868, !1869, !1873, !1892}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1834, file: !1147, line: 524, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!107, !1840, !1187, !1188}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1853, !1854}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1842, file: !247, line: 380, baseType: !118, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1842, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1842, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1842, file: !247, line: 386, baseType: !1848, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1849, file: !247, line: 359, baseType: !195, size: 8)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1849, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1842, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1842, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1834, file: !1147, line: 530, baseType: !1856, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!107, !1840, !1193}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1834, file: !1147, line: 532, baseType: !1860, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!107, !1840, !1199, !1194}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1834, file: !1147, line: 535, baseType: !1864, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!107, !1840, !1199}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1834, file: !1147, line: 537, baseType: !1864, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1834, file: !1147, line: 539, baseType: !1864, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1834, file: !1147, line: 541, baseType: !1870, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!107, !1840, !1187, !1146, !1152}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1834, file: !1147, line: 544, baseType: !1874, size: 32, offset: 224)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!107, !1840, !1877, !145}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1147, line: 478, size: 96, elements: !1879)
!1879 = !{!1880, !1886, !1891}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1878, file: !1147, line: 482, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1219, line: 33, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1219, line: 29, size: 32, elements: !1883)
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1882, file: !1219, line: 30, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1878, file: !1147, line: 485, baseType: !1887, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1147, line: 464, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1840, !1877, !1199}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1878, file: !1147, line: 493, baseType: !1199, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1834, file: !1147, line: 547, baseType: !1893, size: 32, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!152, !1840}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1147, line: 428, size: 32, elements: !1899)
!1899 = !{!1900}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1898, file: !1147, line: 434, baseType: !1199, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1147, line: 441, size: 32, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1903, file: !1147, line: 447, baseType: !1199, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1907 = !{!1908, !1826}
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1909 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1828, file: !1910, line: 37, type: !1911, isLocal: true, isDefinition: true)
!1910 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 352, elements: !1914)
!1913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1914 = !{!1915}
!1915 = !DISubrange(count: 11)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1918, file: !1960, line: 139, type: !1967, isLocal: false, isDefinition: true)
!1918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1920, globals: !1957, splitDebugInlining: false, nameTableKind: None)
!1919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1920 = !{!1921}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1923, file: !223, line: 337, baseType: !227, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1923, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1923, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1923, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1923, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1923, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1923, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1923, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1923, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1923, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1923, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1923, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1923, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1923, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1923, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1923, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1923, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1923, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1923, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1923, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1923, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1923, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1923, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1923, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1923, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1923, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1923, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1923, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1923, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1923, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1923, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1923, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!1957 = !{!1958, !1961, !1916}
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1918, file: !1960, line: 137, type: !152, isLocal: false, isDefinition: true)
!1960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1918, file: !1960, line: 138, type: !1963, isLocal: false, isDefinition: true)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 128, elements: !1965)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1965 = !{!1966}
!1966 = !DISubrange(count: 16)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 64, elements: !1590)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1970, file: !1973, line: 23, type: !1974, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1972, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1972 = !{!1968}
!1973 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1977, file: !1981, line: 37, type: !2234, isLocal: false, isDefinition: true)
!1977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1979, retainedTypes: !1988, globals: !2061, splitDebugInlining: false, nameTableKind: None)
!1978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!1979 = !{!1980, !30, !734}
!1980 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1981, line: 63, baseType: !32, size: 32, elements: !1982)
!1981 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1982 = !{!1983, !1984, !1985, !1986, !1987}
!1983 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1984 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1985 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1986 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1987 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1988 = !{!185, !106, !107, !1989, !193, !152, !2019, !874, !195, !2044}
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1992, line: 51, size: 64, elements: !1993)
!1992 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1993 = !{!1994, !2014}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1991, file: !1992, line: 52, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1992, line: 38, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!107, !1999, !194, !197}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2012, !2013}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2001, file: !247, line: 380, baseType: !118, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2001, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2001, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2001, file: !247, line: 386, baseType: !2007, size: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2008, file: !247, line: 359, baseType: !195, size: 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2008, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2001, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2001, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1991, file: !1992, line: 53, baseType: !2015, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1992, line: 47, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!107, !1999, !194, !197, !152}
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2021, file: !463, line: 447, baseType: !467, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2021, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2021, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2021, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2021, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2021, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2021, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2021, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2021, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2021, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2021, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2021, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2021, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2021, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2021, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2021, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2021, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2021, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2021, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2021, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2021, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2046, file: !463, line: 413, baseType: !1730, size: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2046, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2046, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2046, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2046, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2046, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2046, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2046, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2046, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2046, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2046, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2046, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2046, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2061 = !{!1975, !2062, !2188, !2194, !2196, !2199, !2204, !2206, !2211}
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "_kernel", scope: !1977, file: !1981, line: 40, type: !2064, isLocal: false, isDefinition: true)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2065)
!2065 = !{!2066, !2183}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2064, file: !345, line: 159, baseType: !2067, size: 192)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2068, size: 192, elements: !445)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2176, !2177, !2178, !2179}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2068, file: !345, line: 102, baseType: !152, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2068, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2068, file: !345, line: 108, baseType: !2073, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2075)
!2075 = !{!2076, !2134, !2146, !2147, !2148, !2149, !2150, !2156, !2171}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2074, file: !309, line: 247, baseType: !2077, size: 384)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2078)
!2078 = !{!2079, !2103, !2110, !2111, !2112, !2121, !2122, !2123}
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !309, line: 60, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !309, line: 60, size: 64, elements: !2081)
!2081 = !{!2082, !2097}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2080, file: !309, line: 61, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2085)
!2085 = !{!2086, !2092}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !319, line: 38, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !319, line: 38, size: 32, elements: !2088)
!2088 = !{!2089, !2091}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2087, file: !319, line: 39, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2087, file: !319, line: 40, baseType: !2090, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !319, line: 42, baseType: !2093, size: 32, offset: 32)
!2093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !319, line: 42, size: 32, elements: !2094)
!2094 = !{!2095, !2096}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2093, file: !319, line: 43, baseType: !2090, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2093, file: !319, line: 44, baseType: !2090, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2080, file: !309, line: 62, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2098, file: !335, line: 50, baseType: !2101, size: 64)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2102, size: 64, elements: !340)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2077, file: !309, line: 68, baseType: !2104, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2107)
!2107 = !{!2108}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2106, file: !345, line: 232, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2084)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2077, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2077, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !309, line: 90, baseType: !2113, size: 16, offset: 112)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !309, line: 90, size: 16, elements: !2114)
!2114 = !{!2115, !2120}
!2115 = !DIDerivedType(tag: DW_TAG_member, scope: !2113, file: !309, line: 91, baseType: !2116, size: 16)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2113, file: !309, line: 91, size: 16, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2116, file: !309, line: 96, baseType: !359, size: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2116, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2113, file: !309, line: 100, baseType: !197, size: 16)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2077, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2077, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2077, file: !309, line: 131, baseType: !2124, size: 192, offset: 192)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2125)
!2125 = !{!2126, !2127, !2133}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2124, file: !345, line: 245, baseType: !2083, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2124, file: !345, line: 246, baseType: !2128, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2124, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2074, file: !309, line: 250, baseType: !2135, size: 288, offset: 384)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2135, file: !379, line: 26, baseType: !152, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2135, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2135, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2135, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2135, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2135, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2135, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2135, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2135, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2074, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2074, file: !309, line: 256, baseType: !2105, size: 64, offset: 704)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2074, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2074, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2074, file: !309, line: 300, baseType: !2151, size: 96, offset: 1056)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2151, file: !309, line: 153, baseType: !22, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2151, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2151, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2074, file: !309, line: 325, baseType: !2157, size: 32, offset: 1152)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2159)
!2159 = !{!2160, !2166, !2167}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2158, file: !406, line: 5074, baseType: !2161, size: 96)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2162)
!2162 = !{!2163, !2164, !2165}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2161, file: !410, line: 57, baseType: !413, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2161, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2161, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2158, file: !406, line: 5075, baseType: !2105, size: 64, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2158, file: !406, line: 5076, baseType: !2168, size: 32, offset: 160)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2168, file: !420, line: 52, baseType: !22, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2074, file: !309, line: 343, baseType: !2172, size: 64, offset: 1184)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2172, file: !379, line: 63, baseType: !152, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2172, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2068, file: !345, line: 111, baseType: !2073, size: 32, offset: 96)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2068, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2068, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2068, file: !345, line: 153, baseType: !2180, offset: 168)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2181, line: 33, elements: !2182)
!2181 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2182 = !{}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2064, file: !345, line: 170, baseType: !2184, size: 96, offset: 192)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2184, file: !345, line: 86, baseType: !2073, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2184, file: !345, line: 90, baseType: !2109, size: 64, offset: 32)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1977, file: !1981, line: 43, type: !2190, isLocal: false, isDefinition: true, align: 512)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 8704, elements: !580)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2191, file: !577, line: 48, baseType: !120, size: 8)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1977, file: !1981, line: 44, type: !2074, isLocal: false, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1977, file: !1981, line: 48, type: !2198, isLocal: false, isDefinition: true)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2074, size: 1280, elements: !445)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1977, file: !1981, line: 86, type: !2201, isLocal: false, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 16896, elements: !2202)
!2202 = !{!446, !2203}
!2203 = !DISubrange(count: 2112)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1977, file: !1981, line: 217, type: !145, isLocal: false, isDefinition: true)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1977, file: !1981, line: 50, type: !2208, isLocal: true, isDefinition: true, align: 512)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 3072, elements: !2209)
!2209 = !{!446, !2210}
!2210 = !DISubrange(count: 384)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "levels", scope: !2213, file: !1981, line: 232, type: !2233, isLocal: true, isDefinition: true)
!2213 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1981, file: !1981, line: 230, type: !2214, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2216)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !1980}
!2216 = !{!2217, !2218, !2228, !2232}
!2217 = !DILocalVariable(name: "level", arg: 1, scope: !2213, file: !1981, line: 230, type: !1980)
!2218 = !DILocalVariable(name: "entry", scope: !2213, file: !1981, line: 244, type: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2222)
!2222 = !{!2223, !2227}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2221, file: !238, line: 60, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!107, !1999}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2221, file: !238, line: 65, baseType: !1999, size: 32, offset: 32)
!2228 = !DILocalVariable(name: "dev", scope: !2229, file: !1981, line: 247, type: !1999)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !1981, line: 246, column: 64)
!2230 = distinct !DILexicalBlock(scope: !2231, file: !1981, line: 246, column: 2)
!2231 = distinct !DILexicalBlock(scope: !2213, file: !1981, line: 246, column: 2)
!2232 = !DILocalVariable(name: "rc", scope: !2229, file: !1981, line: 248, type: !107)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2219, size: 192, elements: !1346)
!2234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2235, file: !203, line: 17, baseType: !118, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2235, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "states_str", scope: !2241, file: !2242, line: 276, type: !2366, isLocal: true, isDefinition: true)
!2241 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2242, file: !2242, line: 271, type: !2243, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2357)
!2242 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!118, !2245, !193, !185}
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2246)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2248)
!2248 = !{!2249, !2307, !2319, !2320, !2321, !2322, !2323, !2329, !2344}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2247, file: !309, line: 247, baseType: !2250, size: 384)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2251)
!2251 = !{!2252, !2276, !2283, !2284, !2285, !2294, !2295, !2296}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !309, line: 60, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !309, line: 60, size: 64, elements: !2254)
!2254 = !{!2255, !2270}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2253, file: !309, line: 61, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2258)
!2258 = !{!2259, !2265}
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !319, line: 38, baseType: !2260, size: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !319, line: 38, size: 32, elements: !2261)
!2261 = !{!2262, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2260, file: !319, line: 39, baseType: !2263, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2260, file: !319, line: 40, baseType: !2263, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !319, line: 42, baseType: !2266, size: 32, offset: 32)
!2266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !319, line: 42, size: 32, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2266, file: !319, line: 43, baseType: !2263, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2266, file: !319, line: 44, baseType: !2263, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2253, file: !309, line: 62, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2272)
!2272 = !{!2273}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2271, file: !335, line: 50, baseType: !2274, size: 64)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2275, size: 64, elements: !340)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2250, file: !309, line: 68, baseType: !2277, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2279, file: !345, line: 232, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2257)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2250, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2250, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !309, line: 90, baseType: !2286, size: 16, offset: 112)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !309, line: 90, size: 16, elements: !2287)
!2287 = !{!2288, !2293}
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !309, line: 91, baseType: !2289, size: 16)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !309, line: 91, size: 16, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2289, file: !309, line: 96, baseType: !359, size: 8)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2289, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2286, file: !309, line: 100, baseType: !197, size: 16)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2250, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2250, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2250, file: !309, line: 131, baseType: !2297, size: 192, offset: 192)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2298)
!2298 = !{!2299, !2300, !2306}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2297, file: !345, line: 245, baseType: !2256, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2297, file: !345, line: 246, baseType: !2301, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{null, !2305}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2297, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2247, file: !309, line: 250, baseType: !2308, size: 288, offset: 384)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2308, file: !379, line: 26, baseType: !152, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2308, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2308, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2308, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2308, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2308, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2308, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2308, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2308, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2247, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2247, file: !309, line: 256, baseType: !2278, size: 64, offset: 704)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2247, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2247, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2247, file: !309, line: 300, baseType: !2324, size: 96, offset: 1056)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2324, file: !309, line: 153, baseType: !22, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2324, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2324, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2247, file: !309, line: 325, baseType: !2330, size: 32, offset: 1152)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2332)
!2332 = !{!2333, !2339, !2340}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2331, file: !406, line: 5074, baseType: !2334, size: 96)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2335)
!2335 = !{!2336, !2337, !2338}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2334, file: !410, line: 57, baseType: !413, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2334, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2334, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2331, file: !406, line: 5075, baseType: !2278, size: 64, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2331, file: !406, line: 5076, baseType: !2341, size: 32, offset: 160)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2342)
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2341, file: !420, line: 52, baseType: !22, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2247, file: !309, line: 343, baseType: !2345, size: 64, offset: 1184)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2345, file: !379, line: 63, baseType: !152, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2345, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2351, globals: !2353, splitDebugInlining: false, nameTableKind: None)
!2350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2351 = !{!106, !118, !564, !195, !22, !107, !2352, !24, !185, !193, !152, !566}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2353 = !{!2239, !2354}
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "states_sz", scope: !2241, file: !2242, line: 279, type: !2356, isLocal: true, isDefinition: true)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 256, elements: !1590)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364}
!2358 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2241, file: !2242, line: 271, type: !2245)
!2359 = !DILocalVariable(name: "buf", arg: 2, scope: !2241, file: !2242, line: 271, type: !193)
!2360 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2241, file: !2242, line: 271, type: !185)
!2361 = !DILocalVariable(name: "off", scope: !2241, file: !2242, line: 273, type: !185)
!2362 = !DILocalVariable(name: "bit", scope: !2241, file: !2242, line: 274, type: !195)
!2363 = !DILocalVariable(name: "thread_state", scope: !2241, file: !2242, line: 275, type: !195)
!2364 = !DILocalVariable(name: "index", scope: !2365, file: !2242, line: 293, type: !195)
!2365 = distinct !DILexicalBlock(scope: !2241, file: !2242, line: 293, column: 2)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1590)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2369, file: !2480, line: 56, type: !2467, isLocal: false, isDefinition: true)
!2369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2371, globals: !2477, splitDebugInlining: false, nameTableKind: None)
!2370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2371 = !{!2372, !193, !106, !2475, !194, !564, !874, !107, !152, !566, !2476}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2374)
!2374 = !{!2375, !2433, !2445, !2446, !2447, !2448, !2449, !2455, !2470}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2373, file: !309, line: 247, baseType: !2376, size: 384)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2377)
!2377 = !{!2378, !2402, !2409, !2410, !2411, !2420, !2421, !2422}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !309, line: 60, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !309, line: 60, size: 64, elements: !2380)
!2380 = !{!2381, !2396}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2379, file: !309, line: 61, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2384)
!2384 = !{!2385, !2391}
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !319, line: 38, baseType: !2386, size: 32)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !319, line: 38, size: 32, elements: !2387)
!2387 = !{!2388, !2390}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2386, file: !319, line: 39, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2386, file: !319, line: 40, baseType: !2389, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !319, line: 42, baseType: !2392, size: 32, offset: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !319, line: 42, size: 32, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2392, file: !319, line: 43, baseType: !2389, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2392, file: !319, line: 44, baseType: !2389, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2379, file: !309, line: 62, baseType: !2397, size: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2398)
!2398 = !{!2399}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2397, file: !335, line: 50, baseType: !2400, size: 64)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 64, elements: !340)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2376, file: !309, line: 68, baseType: !2403, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2406)
!2406 = !{!2407}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2405, file: !345, line: 232, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2383)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2376, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2376, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2411 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !309, line: 90, baseType: !2412, size: 16, offset: 112)
!2412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !309, line: 90, size: 16, elements: !2413)
!2413 = !{!2414, !2419}
!2414 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !309, line: 91, baseType: !2415, size: 16)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2412, file: !309, line: 91, size: 16, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2415, file: !309, line: 96, baseType: !359, size: 8)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2415, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2412, file: !309, line: 100, baseType: !197, size: 16)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2376, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2376, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2376, file: !309, line: 131, baseType: !2423, size: 192, offset: 192)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2424)
!2424 = !{!2425, !2426, !2432}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2423, file: !345, line: 245, baseType: !2382, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2423, file: !345, line: 246, baseType: !2427, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2428)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{null, !2431}
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2423, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2373, file: !309, line: 250, baseType: !2434, size: 288, offset: 384)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2434, file: !379, line: 26, baseType: !152, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2434, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2434, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2434, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2434, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2434, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2434, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2434, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2434, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2373, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2373, file: !309, line: 256, baseType: !2404, size: 64, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2373, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2373, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2373, file: !309, line: 300, baseType: !2450, size: 96, offset: 1056)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2450, file: !309, line: 153, baseType: !22, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2450, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2450, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2373, file: !309, line: 325, baseType: !2456, size: 32, offset: 1152)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2458)
!2458 = !{!2459, !2465, !2466}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2457, file: !406, line: 5074, baseType: !2460, size: 96)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2460, file: !410, line: 57, baseType: !413, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2460, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2460, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2457, file: !406, line: 5075, baseType: !2404, size: 64, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2457, file: !406, line: 5076, baseType: !2467, size: 32, offset: 160)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2467, file: !420, line: 52, baseType: !22, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2373, file: !309, line: 343, baseType: !2471, size: 64, offset: 1184)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2471, file: !379, line: 63, baseType: !152, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2471, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2477 = !{!2367, !2478, !2481, !2483}
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2369, file: !2480, line: 404, type: !107, isLocal: true, isDefinition: true)
!2480 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2369, file: !2480, line: 405, type: !107, isLocal: true, isDefinition: true)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "pending_current", scope: !2369, file: !2480, line: 425, type: !2372, isLocal: true, isDefinition: true)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2487, file: !2517, line: 19, type: !2523, isLocal: true, isDefinition: true)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2489, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2489 = !{!564, !106, !874, !152, !566, !107, !2490, !193, !376}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2492)
!2492 = !{!2493, !2508, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2491, file: !345, line: 245, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2496)
!2496 = !{!2497, !2503}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !319, line: 38, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !319, line: 38, size: 32, elements: !2499)
!2499 = !{!2500, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2498, file: !319, line: 39, baseType: !2501, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2498, file: !319, line: 40, baseType: !2501, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !319, line: 42, baseType: !2504, size: 32, offset: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !319, line: 42, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2504, file: !319, line: 43, baseType: !2501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2504, file: !319, line: 44, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2491, file: !345, line: 246, baseType: !2509, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2490}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2491, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2514 = !{!2515, !2485, !2518, !2520}
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2487, file: !2517, line: 15, type: !566, isLocal: true, isDefinition: true)
!2517 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2487, file: !2517, line: 25, type: !107, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2487, file: !2517, line: 17, type: !2522, isLocal: true, isDefinition: true)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2495)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !420, line: 52, baseType: !22, size: 32)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2532, retainedTypes: !2552, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2532 = !{!2533, !2541}
!2533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2534, line: 69, baseType: !32, size: 32, elements: !2535)
!2534 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2535 = !{!2536, !2537, !2538, !2539, !2540}
!2536 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2537 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2538 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2539 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2540 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2534, line: 56, baseType: !32, size: 32, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551}
!2543 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2544 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2545 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2546 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2547 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2548 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2549 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2550 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2551 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2552 = !{!107, !2533, !2541, !2553, !360, !264, !2555, !2556, !196, !198, !118, !185, !106, !22, !32, !187, !2558, !2559, !189, !188, !191, !190, !2554, !2560, !2561, !2562, !2563}
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2534, line: 31, baseType: !2554)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2534, line: 32, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2570, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2570 = !{!118, !196, !107, !32}
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2573 = !{!2574, !30}
!2574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2575, line: 27, baseType: !32, size: 32, elements: !2576)
!2575 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2576 = !{!2577, !2578, !2579, !2580, !2581}
!2577 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2578 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2579 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2580 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2581 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2584, retainedTypes: !2585, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2584 = !{!734, !2574, !30}
!2585 = !{!900, !2586, !106, !107, !874, !152, !195, !2603}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2588, file: !463, line: 413, baseType: !1730, size: 256)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2588, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2588, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2588, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2588, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2588, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2588, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2588, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2588, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2588, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2588, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2588, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2588, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2605, file: !463, line: 447, baseType: !467, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2605, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2605, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2605, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2605, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2605, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2605, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2605, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2605, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2605, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2605, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2605, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2605, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2605, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2605, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2605, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2605, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2605, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2605, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2605, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2605, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2632, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2632 = !{!106, !107, !22, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2635, file: !463, line: 447, baseType: !467, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2635, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2635, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2635, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2635, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2635, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2635, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2635, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2635, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2635, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2635, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2635, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2635, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2635, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2635, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2635, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2635, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2635, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2635, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2635, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2635, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2660, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2660 = !{!2661, !106, !107}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2663)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2663, file: !463, line: 447, baseType: !467, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2663, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2663, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2663, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2663, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2663, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2663, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2663, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2663, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2663, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2663, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2663, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2663, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2663, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2663, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2663, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2663, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2663, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2663, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2663, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2663, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2688 = !{!2689, !152, !106, !107}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2692)
!2691 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2698, !2703, !2708, !2713, !2718, !2723, !2728}
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 99, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 99, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2694, file: !2691, line: 99, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2694, file: !2691, line: 99, baseType: !152, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 100, baseType: !2699, size: 32, offset: 32)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 100, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2699, file: !2691, line: 100, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2699, file: !2691, line: 100, baseType: !152, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 101, baseType: !2704, size: 32, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 101, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2704, file: !2691, line: 101, baseType: !152, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2704, file: !2691, line: 101, baseType: !152, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 102, baseType: !2709, size: 32, offset: 96)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 102, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2709, file: !2691, line: 102, baseType: !152, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2709, file: !2691, line: 102, baseType: !152, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 103, baseType: !2714, size: 32, offset: 128)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 103, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2714, file: !2691, line: 103, baseType: !152, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2714, file: !2691, line: 103, baseType: !152, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 104, baseType: !2719, size: 32, offset: 160)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 104, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2719, file: !2691, line: 104, baseType: !152, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2719, file: !2691, line: 104, baseType: !152, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 105, baseType: !2724, size: 32, offset: 192)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 105, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2724, file: !2691, line: 105, baseType: !152, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2724, file: !2691, line: 105, baseType: !152, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2690, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2731 = !{!2732, !106, !107, !2757, !2800, !152}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2734, file: !463, line: 447, baseType: !467, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2734, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2734, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2734, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2734, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2734, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2734, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2734, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2734, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2734, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2734, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2734, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2734, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2734, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2734, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2734, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2734, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2734, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2734, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2734, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2759, file: !2691, line: 107, baseType: !2762, size: 256)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2763)
!2763 = !{!2764, !2769, !2774, !2779, !2784, !2789, !2794, !2799}
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 99, baseType: !2765, size: 32)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 99, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2765, file: !2691, line: 99, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2765, file: !2691, line: 99, baseType: !152, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 100, baseType: !2770, size: 32, offset: 32)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 100, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2770, file: !2691, line: 100, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2770, file: !2691, line: 100, baseType: !152, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 101, baseType: !2775, size: 32, offset: 64)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 101, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2775, file: !2691, line: 101, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2775, file: !2691, line: 101, baseType: !152, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 102, baseType: !2780, size: 32, offset: 96)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 102, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2780, file: !2691, line: 102, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2780, file: !2691, line: 102, baseType: !152, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 103, baseType: !2785, size: 32, offset: 128)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 103, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2785, file: !2691, line: 103, baseType: !152, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2785, file: !2691, line: 103, baseType: !152, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 104, baseType: !2790, size: 32, offset: 160)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 104, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2790, file: !2691, line: 104, baseType: !152, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2790, file: !2691, line: 104, baseType: !152, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 105, baseType: !2795, size: 32, offset: 192)
!2795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 105, size: 32, elements: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2795, file: !2691, line: 105, baseType: !152, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2795, file: !2691, line: 105, baseType: !152, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2762, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1715, retainedTypes: !2803, splitDebugInlining: false, nameTableKind: None)
!2802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2803 = !{!900, !874, !195, !152, !2804, !2821}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2806, file: !463, line: 413, baseType: !1730, size: 256)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2806, file: !463, line: 414, baseType: !1732, size: 768, offset: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2806, file: !463, line: 415, baseType: !1730, size: 256, offset: 1024)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2806, file: !463, line: 416, baseType: !1732, size: 768, offset: 1280)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2806, file: !463, line: 417, baseType: !1730, size: 256, offset: 2048)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2806, file: !463, line: 418, baseType: !1732, size: 768, offset: 2304)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2806, file: !463, line: 419, baseType: !1730, size: 256, offset: 3072)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2806, file: !463, line: 420, baseType: !1732, size: 768, offset: 3328)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2806, file: !463, line: 421, baseType: !1730, size: 256, offset: 4096)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2806, file: !463, line: 422, baseType: !1743, size: 1792, offset: 4352)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2806, file: !463, line: 423, baseType: !1747, size: 1920, offset: 6144)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2806, file: !463, line: 424, baseType: !1752, size: 20608, offset: 8064)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2806, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2823)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2824)
!2824 = !{!2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2823, file: !463, line: 447, baseType: !467, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2823, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2823, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2823, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2823, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2823, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2823, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2823, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2823, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2823, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2823, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2823, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2823, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2823, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2823, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2823, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2823, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2823, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2823, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2823, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2823, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2848, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2848 = !{!2849, !106, !107}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2851)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2851, file: !463, line: 447, baseType: !467, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2851, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2851, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2851, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2851, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2851, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2851, file: !463, line: 453, baseType: !1767, size: 96, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2851, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2851, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2851, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2851, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2851, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2851, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2851, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2851, file: !463, line: 461, baseType: !1778, size: 64, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2851, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2851, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2851, file: !463, line: 464, baseType: !1782, size: 128, offset: 640)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2851, file: !463, line: 465, baseType: !1784, size: 160, offset: 768)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2851, file: !463, line: 466, baseType: !1786, size: 160, offset: 928)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2851, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2876, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2876 = !{!120, !193, !185, !1104, !2877, !196, !106}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2881, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2884, file: !223, line: 337, baseType: !227, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2884, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2884, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2884, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2884, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2884, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2884, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2884, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2884, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2884, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2884, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2884, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2884, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2884, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2884, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2884, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2884, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2884, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2884, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2884, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2884, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2884, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2884, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2884, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2884, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2884, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2884, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2884, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2884, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2884, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2884, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2884, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2922, retainedTypes: !2938, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!2922 = !{!2923, !2930, !2934}
!2923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2924, line: 38, baseType: !32, size: 32, elements: !2925)
!2924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2925 = !{!2926, !2927, !2928, !2929}
!2926 = !DIEnumerator(name: "HAL_OK", value: 0)
!2927 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2928 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2929 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 184, baseType: !32, size: 32, elements: !2931)
!2931 = !{!2932, !2933}
!2932 = !DIEnumerator(name: "RESET", value: 0)
!2933 = !DIEnumerator(name: "SET", value: 1)
!2934 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 190, baseType: !32, size: 32, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIEnumerator(name: "DISABLE", value: 0)
!2937 = !DIEnumerator(name: "ENABLE", value: 1)
!2938 = !{!106, !2939, !195, !152, !1584, !2975, !2981, !2992, !197, !2993, !566}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2941, file: !223, line: 337, baseType: !227, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2941, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2941, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2941, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2941, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2941, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2941, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2941, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2941, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2941, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2941, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2941, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2941, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2941, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2941, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2941, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2941, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2941, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2941, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2941, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2941, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2941, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2941, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2941, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2941, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2941, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2941, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2941, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2941, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2941, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2941, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2941, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 329, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 325, size: 64, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2977, file: !223, line: 327, baseType: !227, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2977, file: !223, line: 328, baseType: !227, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !2983)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990, !2991}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2983, file: !223, line: 251, baseType: !227, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2983, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2983, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2983, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2983, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2983, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2983, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 275, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 264, size: 320, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2995, file: !223, line: 266, baseType: !227, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2995, file: !223, line: 267, baseType: !227, size: 32, offset: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2995, file: !223, line: 268, baseType: !227, size: 32, offset: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2995, file: !223, line: 269, baseType: !227, size: 32, offset: 96)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2995, file: !223, line: 270, baseType: !227, size: 32, offset: 128)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2995, file: !223, line: 271, baseType: !227, size: 32, offset: 160)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2995, file: !223, line: 272, baseType: !227, size: 32, offset: 192)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2995, file: !223, line: 273, baseType: !227, size: 32, offset: 224)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2995, file: !223, line: 274, baseType: !1258, size: 64, offset: 256)
!3006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3008, retainedTypes: !3009, splitDebugInlining: false, nameTableKind: None)
!3007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3008 = !{!942}
!3009 = !{!3010, !152, !3018, !3024, !3035}
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3012, file: !463, line: 766, baseType: !227, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3012, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3012, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3012, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 329, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 325, size: 64, elements: !3021)
!3021 = !{!3022, !3023}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !223, line: 327, baseType: !227, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3020, file: !223, line: 328, baseType: !227, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 258, baseType: !3026)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 249, size: 224, elements: !3027)
!3027 = !{!3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3026, file: !223, line: 251, baseType: !227, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3026, file: !223, line: 252, baseType: !227, size: 32, offset: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3026, file: !223, line: 253, baseType: !227, size: 32, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3026, file: !223, line: 254, baseType: !227, size: 32, offset: 96)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3026, file: !223, line: 255, baseType: !227, size: 32, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3026, file: !223, line: 256, baseType: !227, size: 32, offset: 160)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3026, file: !223, line: 257, baseType: !227, size: 32, offset: 192)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 369, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 335, size: 1152, elements: !3038)
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3037, file: !223, line: 337, baseType: !227, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3037, file: !223, line: 338, baseType: !227, size: 32, offset: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3037, file: !223, line: 339, baseType: !227, size: 32, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3037, file: !223, line: 340, baseType: !227, size: 32, offset: 96)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3037, file: !223, line: 341, baseType: !227, size: 32, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3037, file: !223, line: 342, baseType: !227, size: 32, offset: 160)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3037, file: !223, line: 343, baseType: !227, size: 32, offset: 192)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3037, file: !223, line: 344, baseType: !152, size: 32, offset: 224)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3037, file: !223, line: 345, baseType: !227, size: 32, offset: 256)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3037, file: !223, line: 346, baseType: !227, size: 32, offset: 288)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3037, file: !223, line: 347, baseType: !970, size: 64, offset: 320)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3037, file: !223, line: 348, baseType: !227, size: 32, offset: 384)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3037, file: !223, line: 349, baseType: !227, size: 32, offset: 416)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3037, file: !223, line: 350, baseType: !227, size: 32, offset: 448)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3037, file: !223, line: 351, baseType: !152, size: 32, offset: 480)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3037, file: !223, line: 352, baseType: !227, size: 32, offset: 512)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3037, file: !223, line: 353, baseType: !227, size: 32, offset: 544)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3037, file: !223, line: 354, baseType: !970, size: 64, offset: 576)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3037, file: !223, line: 355, baseType: !227, size: 32, offset: 640)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3037, file: !223, line: 356, baseType: !227, size: 32, offset: 672)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3037, file: !223, line: 357, baseType: !227, size: 32, offset: 704)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3037, file: !223, line: 358, baseType: !152, size: 32, offset: 736)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3037, file: !223, line: 359, baseType: !227, size: 32, offset: 768)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3037, file: !223, line: 360, baseType: !227, size: 32, offset: 800)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3037, file: !223, line: 361, baseType: !970, size: 64, offset: 832)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3037, file: !223, line: 362, baseType: !227, size: 32, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3037, file: !223, line: 363, baseType: !227, size: 32, offset: 928)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3037, file: !223, line: 364, baseType: !970, size: 64, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3037, file: !223, line: 365, baseType: !227, size: 32, offset: 1024)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3037, file: !223, line: 366, baseType: !227, size: 32, offset: 1056)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3037, file: !223, line: 367, baseType: !991, size: 32, offset: 1088)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3037, file: !223, line: 368, baseType: !227, size: 32, offset: 1120)
!3071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3073, splitDebugInlining: false, nameTableKind: None)
!3072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3073 = !{!106, !185}
!3074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3076, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3076 = !{!3077, !3084, !2574, !30}
!3077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3078, line: 14, baseType: !32, size: 32, elements: !3079)
!3078 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3079 = !{!3080, !3081, !3082, !3083}
!3080 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3081 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3082 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3083 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3078, line: 42, baseType: !32, size: 32, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091}
!3086 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3087 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3088 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3089 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3090 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3091 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3096, splitDebugInlining: false, nameTableKind: None)
!3095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3096 = !{!22, !106, !107}
!3097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!3099 = !{!"Ubuntu clang version 14.0.6"}
!3100 = !{i32 7, !"Dwarf Version", i32 4}
!3101 = !{i32 2, !"Debug Info Version", i32 3}
!3102 = !{i32 1, !"wchar_size", i32 4}
!3103 = !{i32 1, !"min_enum_size", i32 4}
!3104 = !{i32 1, !"branch-target-enforcement", i32 0}
!3105 = !{i32 1, !"sign-return-address", i32 0}
!3106 = !{i32 1, !"sign-return-address-all", i32 0}
!3107 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3108 = !{i32 7, !"frame-pointer", i32 2}
!3109 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3110, file: !3110, line: 26, type: !3111, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2182)
!3110 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null}
!3113 = !DILocation(line: 28, column: 1, scope: !3109)
!3114 = !{i64 2154450921, i64 2154450941, i64 2154451004}
!3115 = !DILocation(line: 29, column: 1, scope: !3109)
!3116 = !{i64 2154451336, i64 2154451356, i64 2154451419}
!3117 = !DILocation(line: 30, column: 1, scope: !3109)
!3118 = !{i64 2154451755, i64 2154451775, i64 2154451838}
!3119 = !DILocation(line: 31, column: 1, scope: !3109)
!3120 = !{i64 2154452174, i64 2154452194, i64 2154452257}
!3121 = !DILocation(line: 33, column: 1, scope: !3109)
!3122 = !{i64 2154452466, i64 2154452486, i64 2154452549}
!3123 = !DILocation(line: 35, column: 1, scope: !3109)
!3124 = !{i64 2154452791, i64 2154452811, i64 2154452874}
!3125 = !DILocation(line: 50, column: 1, scope: !3109)
!3126 = !{i64 2154453218, i64 2154453238, i64 2154453301}
!3127 = !DILocation(line: 54, column: 1, scope: !3109)
!3128 = !{i64 2154453657, i64 2154453677, i64 2154453740}
!3129 = !DILocation(line: 61, column: 1, scope: !3109)
!3130 = !{i64 2154453974, i64 2154453994, i64 2154454057}
!3131 = !DILocation(line: 63, column: 1, scope: !3109)
!3132 = !{i64 2154458415, i64 2154458435, i64 2154458498}
!3133 = !DILocation(line: 64, column: 1, scope: !3109)
!3134 = !{i64 2154458937, i64 2154458957, i64 2154459020}
!3135 = !DILocation(line: 65, column: 1, scope: !3109)
!3136 = !{i64 2154459435, i64 2154459455, i64 2154459518}
!3137 = !DILocation(line: 66, column: 1, scope: !3109)
!3138 = !{i64 2154459917, i64 2154459937, i64 2154460000}
!3139 = !DILocation(line: 67, column: 1, scope: !3109)
!3140 = !{i64 2154460424, i64 2154460444, i64 2154460507}
!3141 = !DILocation(line: 68, column: 1, scope: !3109)
!3142 = !{i64 2154460912, i64 2154460932, i64 2154460995}
!3143 = !DILocation(line: 70, column: 1, scope: !3109)
!3144 = !{i64 2154461380, i64 2154461400, i64 2154461463}
!3145 = !DILocation(line: 71, column: 1, scope: !3109)
!3146 = !{i64 2154461822, i64 2154461842, i64 2154461905}
!3147 = !DILocation(line: 72, column: 1, scope: !3109)
!3148 = !{i64 2154462280, i64 2154462300, i64 2154462363}
!3149 = !DILocation(line: 79, column: 1, scope: !3109)
!3150 = !{i64 2154462734, i64 2154462754, i64 2154462817}
!3151 = !DILocation(line: 80, column: 1, scope: !3109)
!3152 = !{i64 2154463245, i64 2154463265, i64 2154463328}
!3153 = !DILocation(line: 82, column: 1, scope: !3109)
!3154 = !{i64 2154463736, i64 2154463756, i64 2154463819}
!3155 = !DILocation(line: 97, column: 1, scope: !3109)
!3156 = !{i64 2154464073, i64 2154464093, i64 2154464156}
!3157 = !DILocation(line: 99, column: 1, scope: !3109)
!3158 = !{i64 2154464291, i64 2154464311, i64 2154464374}
!3159 = !DILocation(line: 102, column: 1, scope: !3109)
!3160 = !{i64 2154464548, i64 2154464568, i64 2154464631}
!3161 = !DILocation(line: 105, column: 1, scope: !3109)
!3162 = !{i64 2154464788, i64 2154464808, i64 2154464871}
!3163 = !DILocation(line: 115, column: 1, scope: !3109)
!3164 = !{i64 2154465127, i64 2154465147, i64 2154465210}
!3165 = !DILocation(line: 118, column: 1, scope: !3109)
!3166 = !{i64 2154465471, i64 2154465491, i64 2154465554}
!3167 = !DILocation(line: 32, column: 1, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3109, file: !3169, discriminator: 0)
!3169 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3170 = !{i64 2154465827, i64 2154465847, i64 2154465910}
!3171 = !DILocation(line: 33, column: 1, scope: !3168)
!3172 = !{i64 2154466339, i64 2154466359, i64 2154466422}
!3173 = !DILocation(line: 53, column: 1, scope: !3168)
!3174 = !{i64 2154466847, i64 2154466867, i64 2154466930}
!3175 = !DILocation(line: 54, column: 1, scope: !3168)
!3176 = !{i64 2154467265, i64 2154467285, i64 2154467348}
!3177 = !DILocation(line: 55, column: 1, scope: !3168)
!3178 = !{i64 2154471744, i64 2154471764, i64 2154471827}
!3179 = !DILocation(line: 56, column: 1, scope: !3168)
!3180 = !{i64 2154472162, i64 2154472182, i64 2154472245}
!3181 = !DILocation(line: 57, column: 1, scope: !3168)
!3182 = !{i64 2154472580, i64 2154472600, i64 2154472663}
!3183 = !DILocation(line: 58, column: 1, scope: !3168)
!3184 = !{i64 2154472998, i64 2154473018, i64 2154473081}
!3185 = !DILocation(line: 59, column: 1, scope: !3168)
!3186 = !{i64 2154473416, i64 2154473436, i64 2154473499}
!3187 = !DILocation(line: 60, column: 1, scope: !3168)
!3188 = !{i64 2154473840, i64 2154473860, i64 2154473923}
!3189 = !DILocation(line: 61, column: 1, scope: !3168)
!3190 = !{i64 2154474157, i64 2154474177, i64 2154474240}
!3191 = !DILocation(line: 70, column: 1, scope: !3168)
!3192 = !{i64 2154474386, i64 2154474406, i64 2154474469}
!3193 = !DILocation(line: 72, column: 1, scope: !3168)
!3194 = !{i64 2154474718, i64 2154474738, i64 2154474801}
!3195 = !DILocation(line: 73, column: 1, scope: !3168)
!3196 = !{i64 2154475168, i64 2154475188, i64 2154475251}
!3197 = !DILocation(line: 74, column: 1, scope: !3168)
!3198 = !{i64 2154475618, i64 2154475638, i64 2154475701}
!3199 = !DILocation(line: 75, column: 1, scope: !3168)
!3200 = !{i64 2154476068, i64 2154476088, i64 2154476151}
!3201 = !DILocation(line: 76, column: 1, scope: !3168)
!3202 = !{i64 2154476518, i64 2154476538, i64 2154476601}
!3203 = !DILocation(line: 77, column: 1, scope: !3168)
!3204 = !{i64 2154476968, i64 2154476988, i64 2154477051}
!3205 = !DILocation(line: 78, column: 1, scope: !3168)
!3206 = !{i64 2154477418, i64 2154477438, i64 2154477501}
!3207 = !DILocation(line: 79, column: 1, scope: !3168)
!3208 = !{i64 2154477868, i64 2154477888, i64 2154477951}
!3209 = !DILocation(line: 80, column: 1, scope: !3168)
!3210 = !{i64 2154478321, i64 2154478341, i64 2154478404}
!3211 = !DILocation(line: 84, column: 1, scope: !3168)
!3212 = !{i64 2154478653, i64 2154478673, i64 2154478736}
!3213 = !DILocation(line: 91, column: 1, scope: !3168)
!3214 = !{i64 2154479050, i64 2154479070, i64 2154479133}
!3215 = !DILocation(line: 93, column: 1, scope: !3168)
!3216 = !{i64 2154479417, i64 2154479437, i64 2154479500}
!3217 = !DILocation(line: 106, column: 1, scope: !3168)
!3218 = !{i64 2154479687, i64 2154479707, i64 2154479770}
!3219 = !DILocation(line: 11, column: 1, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3109, file: !3221, discriminator: 0)
!3221 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3222 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3223)
!3223 = !{!3224}
!3224 = !DILocalVariable(name: "data", arg: 1, scope: !3222, file: !111, line: 18, type: !106)
!3225 = !DILocation(line: 0, scope: !3222)
!3226 = !DILocation(line: 18, column: 1, scope: !3222)
!3227 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3228, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3237)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!107, !106, !185, !152, !118, !3230}
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3231, line: 99, baseType: !3232)
!3231 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3231, line: 40, baseType: !3233)
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3234)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3235)
!3235 = !{!3236}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3234, file: !200, line: 18, baseType: !106, size: 32)
!3237 = !{!3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3273, !3282, !3285, !3286, !3289, !3292, !3295, !3298, !3304}
!3238 = !DILocalVariable(name: "packaged", arg: 1, scope: !3227, file: !200, line: 233, type: !106)
!3239 = !DILocalVariable(name: "len", arg: 2, scope: !3227, file: !200, line: 233, type: !185)
!3240 = !DILocalVariable(name: "flags", arg: 3, scope: !3227, file: !200, line: 233, type: !152)
!3241 = !DILocalVariable(name: "fmt", arg: 4, scope: !3227, file: !200, line: 234, type: !118)
!3242 = !DILocalVariable(name: "ap", arg: 5, scope: !3227, file: !200, line: 234, type: !3230)
!3243 = !DILocalVariable(name: "buf0", scope: !3227, file: !200, line: 247, type: !194)
!3244 = !DILocalVariable(name: "buf", scope: !3227, file: !200, line: 248, type: !194)
!3245 = !DILocalVariable(name: "size", scope: !3227, file: !200, line: 249, type: !32)
!3246 = !DILocalVariable(name: "align", scope: !3227, file: !200, line: 250, type: !32)
!3247 = !DILocalVariable(name: "str_ptr_pos", scope: !3227, file: !200, line: 251, type: !3248)
!3248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1965)
!3249 = !DILocalVariable(name: "str_ptr_arg", scope: !3227, file: !200, line: 252, type: !3248)
!3250 = !DILocalVariable(name: "s_idx", scope: !3227, file: !200, line: 253, type: !32)
!3251 = !DILocalVariable(name: "s_rw_cnt", scope: !3227, file: !200, line: 254, type: !32)
!3252 = !DILocalVariable(name: "s_ro_cnt", scope: !3227, file: !200, line: 255, type: !32)
!3253 = !DILocalVariable(name: "arg_idx", scope: !3227, file: !200, line: 256, type: !107)
!3254 = !DILocalVariable(name: "i", scope: !3227, file: !200, line: 257, type: !32)
!3255 = !DILocalVariable(name: "s", scope: !3227, file: !200, line: 258, type: !118)
!3256 = !DILocalVariable(name: "parsing", scope: !3227, file: !200, line: 259, type: !145)
!3257 = !DILocalVariable(name: "rws_pos_en", scope: !3227, file: !200, line: 263, type: !145)
!3258 = !DILocalVariable(name: "fros_cnt", scope: !3227, file: !200, line: 268, type: !107)
!3259 = !DILocalVariable(name: "is_str_arg", scope: !3227, file: !200, line: 269, type: !145)
!3260 = !DILocalVariable(name: "pkg_hdr", scope: !3227, file: !200, line: 270, type: !3261)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 32)
!3262 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3263, line: 78, size: 32, elements: !3264)
!3263 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3264 = !{!3265, !3272}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3262, file: !3263, line: 80, baseType: !3266, size: 32)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3263, line: 45, size: 32, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3266, file: !3263, line: 47, baseType: !195, size: 8)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3266, file: !3263, line: 50, baseType: !195, size: 8, offset: 8)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3266, file: !3263, line: 53, baseType: !195, size: 8, offset: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3266, file: !3263, line: 56, baseType: !195, size: 8, offset: 24)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3262, file: !3263, line: 82, baseType: !106, size: 32)
!3273 = !DILocalVariable(name: "v", scope: !3274, file: !200, line: 567, type: !3278)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 562, column: 14)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !200, line: 481, column: 18)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 466, column: 3)
!3277 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 343, column: 15)
!3278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3227, file: !200, line: 567, size: 64, elements: !3279)
!3279 = !{!3280, !3281}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3278, file: !200, line: 567, baseType: !183, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3278, file: !200, line: 567, baseType: !181, size: 64)
!3282 = !DILocalVariable(name: "is_ro", scope: !3283, file: !200, line: 620, type: !145)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !200, line: 613, column: 19)
!3284 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 613, column: 7)
!3285 = !DILocalVariable(name: "do_ro", scope: !3283, file: !200, line: 621, type: !145)
!3286 = !DILocalVariable(name: "s_ptr_idx", scope: !3287, file: !200, line: 626, type: !152)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !200, line: 625, column: 11)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !200, line: 623, column: 8)
!3289 = !DILocalVariable(name: "v", scope: !3290, file: !200, line: 684, type: !107)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 683, column: 35)
!3291 = distinct !DILexicalBlock(scope: !3284, file: !200, line: 683, column: 14)
!3292 = !DILocalVariable(name: "v", scope: !3293, file: !200, line: 691, type: !189)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !200, line: 690, column: 36)
!3294 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 690, column: 14)
!3295 = !DILocalVariable(name: "v", scope: !3296, file: !200, line: 698, type: !191)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !200, line: 697, column: 41)
!3297 = distinct !DILexicalBlock(scope: !3294, file: !200, line: 697, column: 14)
!3298 = !DILocalVariable(name: "pos", scope: !3299, file: !200, line: 762, type: !195)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !200, line: 757, column: 31)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !200, line: 757, column: 3)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !200, line: 757, column: 3)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !200, line: 756, column: 16)
!3303 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 756, column: 6)
!3304 = !DILabel(scope: !3283, name: "process_string", file: !200, line: 615)
!3305 = !DILocation(line: 0, scope: !3227)
!3306 = !DILocation(line: 251, column: 2, scope: !3227)
!3307 = !DILocation(line: 251, column: 10, scope: !3227)
!3308 = !DILocation(line: 252, column: 2, scope: !3227)
!3309 = !DILocation(line: 252, column: 10, scope: !3227)
!3310 = !DILocation(line: 263, column: 29, scope: !3227)
!3311 = !DILocation(line: 263, column: 21, scope: !3227)
!3312 = !DILocation(line: 268, column: 21, scope: !3227)
!3313 = !DILocation(line: 268, column: 19, scope: !3227)
!3314 = !DILocation(line: 273, column: 6, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 273, column: 6)
!3316 = !DILocation(line: 273, column: 26, scope: !3315)
!3317 = !DILocation(line: 273, column: 6, scope: !3227)
!3318 = !DILocation(line: 297, column: 6, scope: !3227)
!3319 = !DILocation(line: 305, column: 11, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 305, column: 6)
!3321 = !DILocation(line: 305, column: 6, scope: !3227)
!3322 = !DILocation(line: 327, column: 19, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 327, column: 6)
!3324 = !DILocation(line: 327, column: 22, scope: !3323)
!3325 = !DILocation(line: 327, column: 33, scope: !3323)
!3326 = !DILocation(line: 327, column: 50, scope: !3323)
!3327 = !DILocation(line: 327, column: 6, scope: !3227)
!3328 = !DILocation(line: 338, column: 9, scope: !3227)
!3329 = !DILocation(line: 341, column: 2, scope: !3227)
!3330 = !DILocation(line: 472, column: 8, scope: !3276)
!3331 = !DILocation(line: 473, column: 14, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !200, line: 473, column: 9)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !200, line: 472, column: 18)
!3334 = distinct !DILexicalBlock(scope: !3276, file: !200, line: 472, column: 8)
!3335 = !DILocation(line: 473, column: 9, scope: !3333)
!3336 = !DILocation(line: 479, column: 5, scope: !3333)
!3337 = !DILocation(line: 468, column: 9, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3276, file: !200, line: 468, column: 8)
!3339 = !DILocation(line: 468, column: 8, scope: !3338)
!3340 = !DILocation(line: 468, column: 15, scope: !3338)
!3341 = !DILocation(line: 468, column: 8, scope: !3276)
!3342 = distinct !{!3342, !3343, !3344}
!3343 = !DILocation(line: 343, column: 2, scope: !3227)
!3344 = !DILocation(line: 712, column: 2, scope: !3227)
!3345 = !DILocation(line: 481, column: 4, scope: !3276)
!3346 = !DILocation(line: 484, column: 12, scope: !3275)
!3347 = !DILocation(line: 485, column: 5, scope: !3275)
!3348 = !DILocation(line: 505, column: 5, scope: !3275)
!3349 = !DILocation(line: 518, column: 5, scope: !3275)
!3350 = !DILocation(line: 523, column: 5, scope: !3275)
!3351 = !DILocation(line: 532, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 532, column: 9)
!3353 = !DILocation(line: 532, column: 17, scope: !3352)
!3354 = !DILocation(line: 532, column: 9, scope: !3275)
!3355 = !DILocation(line: 533, column: 10, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !200, line: 533, column: 10)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !200, line: 532, column: 25)
!3358 = !DILocation(line: 533, column: 18, scope: !3356)
!3359 = !DILocation(line: 0, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 569, column: 9)
!3361 = !DILocation(line: 0, scope: !3274)
!3362 = !DILocation(line: 579, column: 20, scope: !3274)
!3363 = !DILocation(line: 579, column: 11, scope: !3274)
!3364 = !DILocation(line: 580, column: 9, scope: !3274)
!3365 = !DILocation(line: 582, column: 21, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !200, line: 582, column: 10)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !200, line: 580, column: 23)
!3368 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 580, column: 9)
!3369 = !DILocation(line: 582, column: 28, scope: !3366)
!3370 = !DILocation(line: 582, column: 10, scope: !3367)
!3371 = !DILocation(line: 0, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !200, line: 587, column: 17)
!3373 = distinct !DILexicalBlock(scope: !3367, file: !200, line: 585, column: 10)
!3374 = !DILocation(line: 593, column: 9, scope: !3274)
!3375 = !DILocation(line: 600, column: 5, scope: !3275)
!3376 = !DILocation(line: 605, column: 18, scope: !3277)
!3377 = !DILocation(line: 605, column: 9, scope: !3277)
!3378 = !DILocation(line: 608, column: 20, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 608, column: 7)
!3380 = !DILocation(line: 608, column: 23, scope: !3379)
!3381 = !DILocation(line: 608, column: 34, scope: !3379)
!3382 = !DILocation(line: 608, column: 41, scope: !3379)
!3383 = !DILocation(line: 608, column: 7, scope: !3277)
!3384 = !DILocation(line: 613, column: 7, scope: !3277)
!3385 = !DILocation(line: 614, column: 8, scope: !3283)
!3386 = !DILocation(line: 614, column: 4, scope: !3283)
!3387 = !DILocation(line: 256, column: 6, scope: !3227)
!3388 = !DILocation(line: 254, column: 15, scope: !3227)
!3389 = !DILocation(line: 320, column: 7, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3320, file: !200, line: 305, column: 20)
!3391 = !DILocation(line: 615, column: 1, scope: !3283)
!3392 = !DILocation(line: 616, column: 8, scope: !3283)
!3393 = !DILocation(line: 617, column: 5, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 616, column: 22)
!3395 = distinct !DILexicalBlock(scope: !3283, file: !200, line: 616, column: 8)
!3396 = !DILocation(line: 617, column: 25, scope: !3394)
!3397 = !DILocation(line: 618, column: 4, scope: !3394)
!3398 = !DILocation(line: 620, column: 26, scope: !3283)
!3399 = !DILocation(line: 620, column: 29, scope: !3283)
!3400 = !DILocation(line: 620, column: 17, scope: !3283)
!3401 = !DILocation(line: 620, column: 43, scope: !3283)
!3402 = !DILocation(line: 0, scope: !3283)
!3403 = !DILocation(line: 623, column: 14, scope: !3288)
!3404 = !DILocation(line: 626, column: 26, scope: !3287)
!3405 = !DILocation(line: 626, column: 37, scope: !3287)
!3406 = !DILocation(line: 0, scope: !3287)
!3407 = !DILocation(line: 634, column: 15, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 634, column: 9)
!3409 = !DILocation(line: 635, column: 6, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !200, line: 635, column: 6)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !200, line: 635, column: 6)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 635, column: 6)
!3413 = distinct !DILexicalBlock(scope: !3408, file: !200, line: 634, column: 44)
!3414 = !DILocation(line: 639, column: 15, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 639, column: 9)
!3416 = !DILocation(line: 639, column: 9, scope: !3287)
!3417 = !DILocation(line: 640, column: 6, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !200, line: 640, column: 6)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !200, line: 640, column: 6)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !200, line: 640, column: 6)
!3421 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 639, column: 43)
!3422 = !DILocation(line: 644, column: 9, scope: !3287)
!3423 = !DILocation(line: 649, column: 27, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 644, column: 23)
!3425 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 644, column: 9)
!3426 = !DILocation(line: 649, column: 6, scope: !3424)
!3427 = !DILocation(line: 649, column: 25, scope: !3424)
!3428 = !DILocation(line: 650, column: 27, scope: !3424)
!3429 = !DILocation(line: 650, column: 6, scope: !3424)
!3430 = !DILocation(line: 650, column: 25, scope: !3424)
!3431 = !DILocation(line: 651, column: 10, scope: !3424)
!3432 = !DILocation(line: 653, column: 26, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !200, line: 651, column: 17)
!3434 = distinct !DILexicalBlock(scope: !3424, file: !200, line: 651, column: 10)
!3435 = !DILocation(line: 654, column: 15, scope: !3433)
!3436 = !DILocation(line: 655, column: 6, scope: !3433)
!3437 = !DILocation(line: 656, column: 15, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !200, line: 655, column: 13)
!3439 = !DILocation(line: 658, column: 16, scope: !3425)
!3440 = !DILocation(line: 663, column: 10, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !200, line: 658, column: 23)
!3442 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 658, column: 16)
!3443 = !DILocation(line: 664, column: 5, scope: !3441)
!3444 = !DILocation(line: 664, column: 16, scope: !3442)
!3445 = !DILocation(line: 669, column: 10, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 664, column: 28)
!3447 = distinct !DILexicalBlock(scope: !3442, file: !200, line: 664, column: 16)
!3448 = !DILocation(line: 670, column: 5, scope: !3446)
!3449 = !DILocation(line: 675, column: 13, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 670, column: 12)
!3451 = !DILocation(line: 675, column: 27, scope: !3450)
!3452 = !DILocation(line: 675, column: 10, scope: !3450)
!3453 = !DILocation(line: 678, column: 10, scope: !3287)
!3454 = !DILocation(line: 680, column: 8, scope: !3283)
!3455 = !DILocation(line: 683, column: 14, scope: !3284)
!3456 = !DILocation(line: 684, column: 12, scope: !3290)
!3457 = !DILocation(line: 0, scope: !3290)
!3458 = !DILocation(line: 686, column: 8, scope: !3290)
!3459 = !DILocation(line: 687, column: 5, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !200, line: 686, column: 22)
!3461 = distinct !DILexicalBlock(scope: !3290, file: !200, line: 686, column: 8)
!3462 = !DILocation(line: 687, column: 17, scope: !3460)
!3463 = !DILocation(line: 688, column: 4, scope: !3460)
!3464 = !DILocation(line: 698, column: 18, scope: !3296)
!3465 = !DILocation(line: 0, scope: !3296)
!3466 = !DILocation(line: 700, column: 8, scope: !3296)
!3467 = !DILocation(line: 704, column: 6, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !200, line: 703, column: 12)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !200, line: 701, column: 9)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 700, column: 22)
!3471 = distinct !DILexicalBlock(scope: !3296, file: !200, line: 700, column: 8)
!3472 = !DILocation(line: 704, column: 24, scope: !3468)
!3473 = !DILocation(line: 706, column: 4, scope: !3470)
!3474 = !DILocation(line: 709, column: 4, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !200, line: 709, column: 4)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !200, line: 709, column: 4)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !200, line: 709, column: 4)
!3478 = distinct !DILexicalBlock(scope: !3297, file: !200, line: 708, column: 10)
!3479 = !DILocation(line: 0, scope: !3291)
!3480 = !DILocation(line: 0, scope: !3277)
!3481 = !DILocation(line: 720, column: 6, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 720, column: 6)
!3483 = !DILocation(line: 720, column: 17, scope: !3482)
!3484 = !DILocation(line: 720, column: 31, scope: !3482)
!3485 = !DILocation(line: 720, column: 6, scope: !3227)
!3486 = !DILocation(line: 721, column: 3, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !200, line: 721, column: 3)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 721, column: 3)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !200, line: 721, column: 3)
!3490 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 720, column: 38)
!3491 = !DILocation(line: 729, column: 6, scope: !3227)
!3492 = !DILocation(line: 730, column: 21, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !200, line: 729, column: 20)
!3494 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 729, column: 6)
!3495 = !DILocation(line: 730, column: 27, scope: !3493)
!3496 = !DILocation(line: 730, column: 3, scope: !3493)
!3497 = !DILocation(line: 737, column: 22, scope: !3227)
!3498 = !DILocation(line: 737, column: 20, scope: !3227)
!3499 = !DILocation(line: 0, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 739, column: 6)
!3501 = !DILocation(line: 745, column: 17, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3500, file: !200, line: 743, column: 9)
!3503 = !DILocation(line: 745, column: 25, scope: !3502)
!3504 = !DILocation(line: 746, column: 17, scope: !3502)
!3505 = !DILocation(line: 746, column: 28, scope: !3502)
!3506 = !DILocation(line: 749, column: 29, scope: !3227)
!3507 = !DILocation(line: 749, column: 16, scope: !3227)
!3508 = !DILocation(line: 749, column: 27, scope: !3227)
!3509 = !DILocation(line: 756, column: 6, scope: !3303)
!3510 = !DILocation(line: 756, column: 6, scope: !3227)
!3511 = !DILocation(line: 757, column: 3, scope: !3301)
!3512 = !DILocation(line: 758, column: 10, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3299, file: !200, line: 758, column: 8)
!3514 = !DILocation(line: 758, column: 25, scope: !3513)
!3515 = !DILocation(line: 758, column: 8, scope: !3299)
!3516 = !DILocation(line: 0, scope: !3299)
!3517 = !DILocation(line: 765, column: 8, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3299, file: !200, line: 765, column: 8)
!3519 = !DILocation(line: 765, column: 19, scope: !3518)
!3520 = !DILocation(line: 765, column: 23, scope: !3518)
!3521 = !DILocation(line: 765, column: 8, scope: !3299)
!3522 = !DILocation(line: 762, column: 33, scope: !3299)
!3523 = !DILocation(line: 769, column: 8, scope: !3299)
!3524 = !DILocation(line: 769, column: 11, scope: !3299)
!3525 = !DILocation(line: 757, column: 27, scope: !3300)
!3526 = !DILocation(line: 757, column: 17, scope: !3300)
!3527 = distinct !{!3527, !3511, !3528}
!3528 = !DILocation(line: 770, column: 3, scope: !3301)
!3529 = !DILocation(line: 774, column: 16, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 774, column: 2)
!3531 = distinct !DILexicalBlock(scope: !3227, file: !200, line: 774, column: 2)
!3532 = !DILocation(line: 774, column: 2, scope: !3531)
!3533 = !DILocation(line: 776, column: 16, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !200, line: 776, column: 7)
!3535 = distinct !DILexicalBlock(scope: !3530, file: !200, line: 774, column: 30)
!3536 = !DILocation(line: 776, column: 19, scope: !3534)
!3537 = !DILocation(line: 776, column: 34, scope: !3534)
!3538 = !DILocation(line: 776, column: 7, scope: !3535)
!3539 = !DILocation(line: 780, column: 7, scope: !3535)
!3540 = !DILocation(line: 782, column: 13, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !200, line: 780, column: 19)
!3542 = distinct !DILexicalBlock(scope: !3535, file: !200, line: 780, column: 7)
!3543 = !DILocation(line: 782, column: 8, scope: !3541)
!3544 = !DILocation(line: 782, column: 11, scope: !3541)
!3545 = !DILocation(line: 783, column: 3, scope: !3541)
!3546 = !DILocation(line: 785, column: 26, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3542, file: !200, line: 783, column: 10)
!3548 = !DILocation(line: 785, column: 41, scope: !3547)
!3549 = !DILocation(line: 785, column: 24, scope: !3547)
!3550 = !DILocation(line: 785, column: 8, scope: !3547)
!3551 = !DILocation(line: 787, column: 52, scope: !3547)
!3552 = !DILocation(line: 789, column: 11, scope: !3547)
!3553 = !DILocation(line: 789, column: 21, scope: !3547)
!3554 = !DILocation(line: 0, scope: !3542)
!3555 = !DILocation(line: 793, column: 7, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3535, file: !200, line: 793, column: 7)
!3557 = !DILocation(line: 793, column: 18, scope: !3556)
!3558 = !DILocation(line: 793, column: 22, scope: !3556)
!3559 = !DILocation(line: 793, column: 29, scope: !3556)
!3560 = !DILocation(line: 793, column: 7, scope: !3535)
!3561 = !DILocation(line: 797, column: 12, scope: !3535)
!3562 = !DILocation(line: 797, column: 7, scope: !3535)
!3563 = !DILocation(line: 797, column: 10, scope: !3535)
!3564 = !DILocation(line: 799, column: 3, scope: !3535)
!3565 = !DILocation(line: 800, column: 7, scope: !3535)
!3566 = !DILocation(line: 801, column: 2, scope: !3535)
!3567 = !DILocation(line: 338, column: 4, scope: !3227)
!3568 = !DILocation(line: 774, column: 26, scope: !3530)
!3569 = distinct !{!3569, !3532, !3570}
!3570 = !DILocation(line: 801, column: 2, scope: !3531)
!3571 = !DILocation(line: 808, column: 9, scope: !3227)
!3572 = !DILocation(line: 808, column: 2, scope: !3227)
!3573 = !DILocation(line: 813, column: 1, scope: !3227)
!3574 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3575, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3577)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!145, !118}
!3577 = !{!3578}
!3578 = !DILocalVariable(name: "addr", arg: 1, scope: !3574, file: !200, line: 33, type: !118)
!3579 = !DILocation(line: 0, scope: !3574)
!3580 = !DILocation(line: 41, column: 9, scope: !3574)
!3581 = !DILocation(line: 41, column: 2, scope: !3574)
!3582 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3583, file: !3583, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3584)
!3583 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3584 = !{!3585}
!3585 = !DILocalVariable(name: "addr", arg: 1, scope: !3582, file: !3583, line: 24, type: !13)
!3586 = !DILocation(line: 0, scope: !3582)
!3587 = !DILocation(line: 49, column: 30, scope: !3582)
!3588 = !DILocation(line: 49, column: 57, scope: !3582)
!3589 = !DILocation(line: 49, column: 2, scope: !3582)
!3590 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3591, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3593)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!107, !106, !185, !152, !118, null}
!3593 = !{!3594, !3595, !3596, !3597, !3598, !3599}
!3594 = !DILocalVariable(name: "packaged", arg: 1, scope: !3590, file: !200, line: 815, type: !106)
!3595 = !DILocalVariable(name: "len", arg: 2, scope: !3590, file: !200, line: 815, type: !185)
!3596 = !DILocalVariable(name: "flags", arg: 3, scope: !3590, file: !200, line: 815, type: !152)
!3597 = !DILocalVariable(name: "format", arg: 4, scope: !3590, file: !200, line: 816, type: !118)
!3598 = !DILocalVariable(name: "ap", scope: !3590, file: !200, line: 818, type: !3230)
!3599 = !DILocalVariable(name: "ret", scope: !3590, file: !200, line: 819, type: !107)
!3600 = !DILocation(line: 0, scope: !3590)
!3601 = !DILocation(line: 818, column: 2, scope: !3590)
!3602 = !DILocation(line: 818, column: 10, scope: !3590)
!3603 = !DILocation(line: 821, column: 2, scope: !3590)
!3604 = !DILocation(line: 822, column: 8, scope: !3590)
!3605 = !DILocation(line: 823, column: 2, scope: !3590)
!3606 = !DILocation(line: 825, column: 1, scope: !3590)
!3607 = !DILocation(line: 824, column: 2, scope: !3590)
!3608 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3609, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3619)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!107, !3611, !3615, !106, !106}
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3263, line: 297, baseType: !3612)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 32)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!107, null}
!3615 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3263, line: 328, baseType: !3616)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 32)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!107, !3611, !106, !118, !3230}
!3619 = !{!3620, !3621, !3622, !3623, !3624, !3625, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638}
!3620 = !DILocalVariable(name: "out", arg: 1, scope: !3608, file: !200, line: 827, type: !3611)
!3621 = !DILocalVariable(name: "formatter", arg: 2, scope: !3608, file: !200, line: 828, type: !3615)
!3622 = !DILocalVariable(name: "ctx", arg: 3, scope: !3608, file: !200, line: 829, type: !106)
!3623 = !DILocalVariable(name: "packaged", arg: 4, scope: !3608, file: !200, line: 829, type: !106)
!3624 = !DILocalVariable(name: "buf", scope: !3608, file: !200, line: 831, type: !194)
!3625 = !DILocalVariable(name: "hdr", scope: !3608, file: !200, line: 832, type: !3626)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 32)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3263, line: 96, size: 64, elements: !3628)
!3628 = !{!3629, !3630}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3627, file: !3263, line: 98, baseType: !3262, size: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3627, file: !3263, line: 101, baseType: !193, size: 32, offset: 32)
!3631 = !DILocalVariable(name: "s", scope: !3608, file: !200, line: 833, type: !193)
!3632 = !DILocalVariable(name: "ps", scope: !3608, file: !200, line: 833, type: !192)
!3633 = !DILocalVariable(name: "i", scope: !3608, file: !200, line: 834, type: !32)
!3634 = !DILocalVariable(name: "args_size", scope: !3608, file: !200, line: 834, type: !32)
!3635 = !DILocalVariable(name: "s_nbr", scope: !3608, file: !200, line: 834, type: !32)
!3636 = !DILocalVariable(name: "ros_nbr", scope: !3608, file: !200, line: 834, type: !32)
!3637 = !DILocalVariable(name: "rws_nbr", scope: !3608, file: !200, line: 834, type: !32)
!3638 = !DILocalVariable(name: "s_idx", scope: !3608, file: !200, line: 834, type: !32)
!3639 = !DILocation(line: 0, scope: !3608)
!3640 = !DILocation(line: 836, column: 10, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3608, file: !200, line: 836, column: 6)
!3642 = !DILocation(line: 836, column: 6, scope: !3608)
!3643 = !DILocation(line: 842, column: 28, scope: !3608)
!3644 = !DILocation(line: 842, column: 14, scope: !3608)
!3645 = !DILocation(line: 852, column: 16, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !200, line: 852, column: 2)
!3647 = distinct !DILexicalBlock(scope: !3608, file: !200, line: 852, column: 2)
!3648 = !DILocation(line: 852, column: 2, scope: !3647)
!3649 = !DILocation(line: 841, column: 28, scope: !3608)
!3650 = !DILocation(line: 841, column: 14, scope: !3608)
!3651 = !DILocation(line: 841, column: 32, scope: !3608)
!3652 = !DILocation(line: 847, column: 19, scope: !3608)
!3653 = !DILocation(line: 843, column: 28, scope: !3608)
!3654 = !DILocation(line: 843, column: 14, scope: !3608)
!3655 = !DILocation(line: 847, column: 31, scope: !3608)
!3656 = !DILocation(line: 844, column: 28, scope: !3608)
!3657 = !DILocation(line: 844, column: 14, scope: !3608)
!3658 = !DILocation(line: 847, column: 45, scope: !3608)
!3659 = !DILocation(line: 847, column: 41, scope: !3608)
!3660 = !DILocation(line: 854, column: 24, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3646, file: !200, line: 852, column: 30)
!3662 = !DILocation(line: 854, column: 11, scope: !3661)
!3663 = !DILocation(line: 855, column: 30, scope: !3661)
!3664 = !DILocation(line: 855, column: 22, scope: !3661)
!3665 = !DILocation(line: 855, column: 8, scope: !3661)
!3666 = !DILocation(line: 857, column: 7, scope: !3661)
!3667 = !DILocation(line: 859, column: 8, scope: !3661)
!3668 = !DILocation(line: 859, column: 18, scope: !3661)
!3669 = !DILocation(line: 859, column: 5, scope: !3661)
!3670 = !DILocation(line: 852, column: 26, scope: !3646)
!3671 = distinct !{!3671, !3648, !3672}
!3672 = !DILocation(line: 860, column: 2, scope: !3647)
!3673 = !DILocation(line: 863, column: 6, scope: !3608)
!3674 = !DILocation(line: 866, column: 56, scope: !3608)
!3675 = !DILocation(line: 866, column: 9, scope: !3608)
!3676 = !DILocation(line: 866, column: 2, scope: !3608)
!3677 = !DILocation(line: 867, column: 1, scope: !3608)
!3678 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3679, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3681)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!107, !3611, !3615, !106, !118, !106}
!3681 = !{!3682, !3683, !3684, !3685, !3686, !3687}
!3682 = !DILocalVariable(name: "out", arg: 1, scope: !3678, file: !200, line: 179, type: !3611)
!3683 = !DILocalVariable(name: "formatter", arg: 2, scope: !3678, file: !200, line: 180, type: !3615)
!3684 = !DILocalVariable(name: "ctx", arg: 3, scope: !3678, file: !200, line: 181, type: !106)
!3685 = !DILocalVariable(name: "fmt", arg: 4, scope: !3678, file: !200, line: 182, type: !118)
!3686 = !DILocalVariable(name: "buf", arg: 5, scope: !3678, file: !200, line: 182, type: !106)
!3687 = !DILocalVariable(name: "u", scope: !3678, file: !200, line: 187, type: !3688)
!3688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !200, line: 184, size: 32, elements: !3689)
!3689 = !{!3690, !3691}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3688, file: !200, line: 185, baseType: !3230, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3688, file: !200, line: 186, baseType: !106, size: 32)
!3692 = !DILocation(line: 0, scope: !3678)
!3693 = !DILocation(line: 191, column: 9, scope: !3678)
!3694 = !DILocation(line: 191, column: 2, scope: !3678)
!3695 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3696, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!145, !118, !107}
!3698 = !{!3699, !3700, !3701, !3702, !3703}
!3699 = !DILocalVariable(name: "fmt", arg: 1, scope: !3695, file: !200, line: 881, type: !118)
!3700 = !DILocalVariable(name: "n", arg: 2, scope: !3695, file: !200, line: 881, type: !107)
!3701 = !DILocalVariable(name: "c", scope: !3695, file: !200, line: 883, type: !120)
!3702 = !DILocalVariable(name: "mod", scope: !3695, file: !200, line: 884, type: !145)
!3703 = !DILocalVariable(name: "cnt", scope: !3695, file: !200, line: 885, type: !107)
!3704 = !DILocation(line: 0, scope: !3695)
!3705 = !DILocation(line: 887, column: 14, scope: !3695)
!3706 = !DILocation(line: 887, column: 22, scope: !3695)
!3707 = !DILocation(line: 887, column: 2, scope: !3695)
!3708 = !DILocation(line: 887, column: 18, scope: !3695)
!3709 = !DILocation(line: 888, column: 7, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3695, file: !200, line: 887, column: 31)
!3711 = !DILocation(line: 889, column: 12, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !200, line: 889, column: 8)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 888, column: 12)
!3714 = distinct !DILexicalBlock(scope: !3710, file: !200, line: 888, column: 7)
!3715 = !DILocation(line: 889, column: 8, scope: !3713)
!3716 = !DILocation(line: 890, column: 11, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 890, column: 9)
!3718 = distinct !DILexicalBlock(scope: !3712, file: !200, line: 889, column: 18)
!3719 = !DILocation(line: 890, column: 9, scope: !3718)
!3720 = !DILocation(line: 892, column: 16, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !200, line: 892, column: 16)
!3722 = !DILocation(line: 892, column: 16, scope: !3717)
!3723 = !DILocation(line: 895, column: 15, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3712, file: !200, line: 895, column: 15)
!3725 = !DILocation(line: 895, column: 15, scope: !3712)
!3726 = !DILocation(line: 900, column: 9, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3710, file: !200, line: 900, column: 7)
!3728 = !DILocation(line: 900, column: 7, scope: !3710)
!3729 = distinct !{!3729, !3707, !3730}
!3730 = !DILocation(line: 903, column: 2, scope: !3695)
!3731 = !DILocation(line: 906, column: 1, scope: !3695)
!3732 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3733, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!145, !120}
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "c", arg: 1, scope: !3732, file: !200, line: 873, type: !120)
!3737 = !DILocation(line: 0, scope: !3732)
!3738 = !DILocation(line: 875, column: 19, scope: !3732)
!3739 = !DILocation(line: 875, column: 2, scope: !3732)
!3740 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3741, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3747)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!107, !106, !185, !3743, !106, !152, !2800, !185}
!3743 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3263, line: 308, baseType: !3744)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 32)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!107, !13, !185, !106}
!3747 = !{!3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3765, !3766, !3767, !3768, !3769, !3775, !3778, !3779, !3780, !3782, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3798, !3801, !3802, !3803, !3804, !3805, !3806, !3808, !3811, !3812, !3813}
!3748 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3740, file: !200, line: 908, type: !106)
!3749 = !DILocalVariable(name: "in_len", arg: 2, scope: !3740, file: !200, line: 909, type: !185)
!3750 = !DILocalVariable(name: "cb", arg: 3, scope: !3740, file: !200, line: 910, type: !3743)
!3751 = !DILocalVariable(name: "ctx", arg: 4, scope: !3740, file: !200, line: 911, type: !106)
!3752 = !DILocalVariable(name: "flags", arg: 5, scope: !3740, file: !200, line: 912, type: !152)
!3753 = !DILocalVariable(name: "strl", arg: 6, scope: !3740, file: !200, line: 913, type: !2800)
!3754 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3740, file: !200, line: 914, type: !185)
!3755 = !DILocalVariable(name: "buf", scope: !3740, file: !200, line: 918, type: !194)
!3756 = !DILocalVariable(name: "buf32", scope: !3740, file: !200, line: 919, type: !999)
!3757 = !DILocalVariable(name: "args_size", scope: !3740, file: !200, line: 920, type: !32)
!3758 = !DILocalVariable(name: "ros_nbr", scope: !3740, file: !200, line: 920, type: !32)
!3759 = !DILocalVariable(name: "rws_nbr", scope: !3740, file: !200, line: 920, type: !32)
!3760 = !DILocalVariable(name: "fmt_present", scope: !3740, file: !200, line: 921, type: !145)
!3761 = !DILocalVariable(name: "rw_cpy", scope: !3740, file: !200, line: 922, type: !145)
!3762 = !DILocalVariable(name: "ro_cpy", scope: !3740, file: !200, line: 923, type: !145)
!3763 = !DILocalVariable(name: "in_desc", scope: !3740, file: !200, line: 924, type: !3764)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3765 = !DILocalVariable(name: "out_len", scope: !3740, file: !200, line: 960, type: !107)
!3766 = !DILocalVariable(name: "fmt", scope: !3740, file: !200, line: 965, type: !118)
!3767 = !DILocalVariable(name: "str_pos", scope: !3740, file: !200, line: 966, type: !194)
!3768 = !DILocalVariable(name: "strl_cnt", scope: !3740, file: !200, line: 967, type: !185)
!3769 = !DILocalVariable(name: "i", scope: !3770, file: !200, line: 973, type: !107)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !200, line: 973, column: 4)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !200, line: 972, column: 15)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 972, column: 7)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !200, line: 970, column: 18)
!3774 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 970, column: 6)
!3775 = !DILocalVariable(name: "str", scope: !3776, file: !200, line: 974, type: !118)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 973, column: 38)
!3777 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 973, column: 4)
!3778 = !DILocalVariable(name: "len", scope: !3776, file: !200, line: 975, type: !107)
!3779 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3773, file: !200, line: 990, type: !145)
!3780 = !DILocalVariable(name: "i", scope: !3781, file: !200, line: 995, type: !107)
!3781 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 995, column: 3)
!3782 = !DILocalVariable(name: "arg_idx", scope: !3783, file: !200, line: 996, type: !195)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !200, line: 995, column: 37)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !200, line: 995, column: 3)
!3785 = !DILocalVariable(name: "arg_pos", scope: !3783, file: !200, line: 997, type: !195)
!3786 = !DILocalVariable(name: "str", scope: !3783, file: !200, line: 998, type: !118)
!3787 = !DILocalVariable(name: "is_ro", scope: !3783, file: !200, line: 999, type: !145)
!3788 = !DILocalVariable(name: "len", scope: !3783, file: !200, line: 1000, type: !107)
!3789 = !DILocalVariable(name: "out_desc", scope: !3740, file: !200, line: 1038, type: !3266)
!3790 = !DILocalVariable(name: "cpy_str_pos", scope: !3740, file: !200, line: 1040, type: !3248)
!3791 = !DILocalVariable(name: "keep_str_pos", scope: !3740, file: !200, line: 1042, type: !3248)
!3792 = !DILocalVariable(name: "scpy_cnt", scope: !3740, file: !200, line: 1043, type: !195)
!3793 = !DILocalVariable(name: "keep_cnt", scope: !3740, file: !200, line: 1044, type: !195)
!3794 = !DILocalVariable(name: "dst", scope: !3740, file: !200, line: 1045, type: !194)
!3795 = !DILocalVariable(name: "rv", scope: !3740, file: !200, line: 1046, type: !107)
!3796 = !DILocalVariable(name: "i", scope: !3797, file: !200, line: 1074, type: !107)
!3797 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1074, column: 2)
!3798 = !DILocalVariable(name: "arg_idx", scope: !3799, file: !200, line: 1075, type: !195)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 1074, column: 36)
!3800 = distinct !DILexicalBlock(scope: !3797, file: !200, line: 1074, column: 2)
!3801 = !DILocalVariable(name: "arg_pos", scope: !3799, file: !200, line: 1076, type: !195)
!3802 = !DILocalVariable(name: "str", scope: !3799, file: !200, line: 1077, type: !118)
!3803 = !DILocalVariable(name: "is_ro", scope: !3799, file: !200, line: 1078, type: !145)
!3804 = !DILocalVariable(name: "in_desc_backup", scope: !3740, file: !200, line: 1114, type: !3266)
!3805 = !DILocalVariable(name: "strs_len", scope: !3740, file: !200, line: 1134, type: !185)
!3806 = !DILocalVariable(name: "i", scope: !3807, file: !200, line: 1143, type: !107)
!3807 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1143, column: 2)
!3808 = !DILocalVariable(name: "loc", scope: !3809, file: !200, line: 1144, type: !195)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 1143, column: 37)
!3810 = distinct !DILexicalBlock(scope: !3807, file: !200, line: 1143, column: 2)
!3811 = !DILocalVariable(name: "str", scope: !3809, file: !200, line: 1145, type: !118)
!3812 = !DILocalVariable(name: "str_len", scope: !3809, file: !200, line: 1146, type: !197)
!3813 = !DILabel(scope: !3814, name: "calculate_string_length", file: !200, line: 1021)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !200, line: 1020, column: 56)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !200, line: 1020, column: 15)
!3816 = distinct !DILexicalBlock(scope: !3783, file: !200, line: 1014, column: 8)
!3817 = !DILocation(line: 0, scope: !3740)
!3818 = !DILocation(line: 916, column: 2, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !200, line: 916, column: 2)
!3820 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 916, column: 2)
!3821 = !DILocation(line: 916, column: 2, scope: !3820)
!3822 = !DILocation(line: 916, column: 2, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3819, file: !200, line: 916, column: 2)
!3824 = !DILocation(line: 919, column: 20, scope: !3740)
!3825 = !DILocation(line: 921, column: 27, scope: !3740)
!3826 = !DILocation(line: 921, column: 21, scope: !3740)
!3827 = !DILocation(line: 926, column: 18, scope: !3740)
!3828 = !DILocation(line: 926, column: 11, scope: !3740)
!3829 = !DILocation(line: 926, column: 34, scope: !3740)
!3830 = !DILocation(line: 931, column: 21, scope: !3740)
!3831 = !DILocation(line: 931, column: 12, scope: !3740)
!3832 = !DILocation(line: 932, column: 11, scope: !3740)
!3833 = !DILocation(line: 932, column: 19, scope: !3740)
!3834 = !DILocation(line: 938, column: 21, scope: !3740)
!3835 = !DILocation(line: 938, column: 12, scope: !3740)
!3836 = !DILocation(line: 939, column: 19, scope: !3740)
!3837 = !DILocation(line: 939, column: 23, scope: !3740)
!3838 = !DILocation(line: 946, column: 14, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 946, column: 6)
!3840 = !DILocation(line: 947, column: 7, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !200, line: 947, column: 7)
!3842 = distinct !DILexicalBlock(scope: !3839, file: !200, line: 946, column: 26)
!3843 = !DILocation(line: 947, column: 7, scope: !3842)
!3844 = !DILocation(line: 948, column: 4, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3841, file: !200, line: 947, column: 11)
!3846 = !DILocation(line: 949, column: 3, scope: !3845)
!3847 = !DILocation(line: 958, column: 23, scope: !3740)
!3848 = !DILocation(line: 958, column: 14, scope: !3740)
!3849 = !DILocation(line: 958, column: 27, scope: !3740)
!3850 = !DILocation(line: 965, column: 41, scope: !3740)
!3851 = !DILocation(line: 965, column: 20, scope: !3740)
!3852 = !DILocation(line: 966, column: 22, scope: !3740)
!3853 = !DILocation(line: 970, column: 9, scope: !3774)
!3854 = !DILocation(line: 970, column: 6, scope: !3740)
!3855 = !DILocation(line: 972, column: 7, scope: !3773)
!3856 = !DILocation(line: 0, scope: !3770)
!3857 = !DILocation(line: 973, column: 4, scope: !3770)
!3858 = !DILocation(line: 974, column: 46, scope: !3776)
!3859 = !DILocation(line: 974, column: 40, scope: !3776)
!3860 = !DILocation(line: 974, column: 23, scope: !3776)
!3861 = !DILocation(line: 0, scope: !3776)
!3862 = !DILocation(line: 975, column: 15, scope: !3776)
!3863 = !DILocation(line: 978, column: 14, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3776, file: !200, line: 978, column: 9)
!3865 = !DILocation(line: 979, column: 25, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3864, file: !200, line: 978, column: 38)
!3867 = !DILocation(line: 979, column: 19, scope: !3866)
!3868 = !DILocation(line: 979, column: 6, scope: !3866)
!3869 = !DILocation(line: 979, column: 23, scope: !3866)
!3870 = !DILocation(line: 980, column: 5, scope: !3866)
!3871 = !DILocation(line: 981, column: 13, scope: !3776)
!3872 = !DILocation(line: 982, column: 12, scope: !3776)
!3873 = !DILocation(line: 973, column: 34, scope: !3777)
!3874 = !DILocation(line: 973, column: 22, scope: !3777)
!3875 = distinct !{!3875, !3857, !3876}
!3876 = !DILocation(line: 983, column: 4, scope: !3770)
!3877 = !DILocation(line: 985, column: 16, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !200, line: 985, column: 8)
!3879 = distinct !DILexicalBlock(scope: !3772, file: !200, line: 984, column: 10)
!3880 = !DILocation(line: 967, column: 9, scope: !3740)
!3881 = !DILocation(line: 971, column: 11, scope: !3773)
!3882 = !DILocation(line: 0, scope: !3773)
!3883 = !DILocation(line: 0, scope: !3781)
!3884 = !DILocation(line: 995, column: 21, scope: !3784)
!3885 = !DILocation(line: 995, column: 3, scope: !3781)
!3886 = !DILocation(line: 990, column: 34, scope: !3773)
!3887 = !DILocation(line: 990, column: 26, scope: !3773)
!3888 = !DILocation(line: 996, column: 30, scope: !3783)
!3889 = !DILocation(line: 0, scope: !3783)
!3890 = !DILocation(line: 997, column: 30, scope: !3783)
!3891 = !DILocation(line: 997, column: 22, scope: !3783)
!3892 = !DILocation(line: 998, column: 39, scope: !3783)
!3893 = !DILocation(line: 998, column: 22, scope: !3783)
!3894 = !DILocation(line: 999, column: 17, scope: !3783)
!3895 = !DILocation(line: 1002, column: 20, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3783, file: !200, line: 1002, column: 8)
!3897 = !DILocation(line: 996, column: 22, scope: !3783)
!3898 = !DILocation(line: 1002, column: 35, scope: !3896)
!3899 = !DILocation(line: 1002, column: 23, scope: !3896)
!3900 = !DILocation(line: 1002, column: 8, scope: !3783)
!3901 = !DILocation(line: 1003, column: 5, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !200, line: 1003, column: 5)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !200, line: 1003, column: 5)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !200, line: 1003, column: 5)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !200, line: 1003, column: 5)
!3906 = distinct !DILexicalBlock(scope: !3896, file: !200, line: 1002, column: 45)
!3907 = !DILocation(line: 1010, column: 13, scope: !3906)
!3908 = !DILocation(line: 1011, column: 5, scope: !3906)
!3909 = !DILocation(line: 1014, column: 8, scope: !3783)
!3910 = !DILocation(line: 1015, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3816, file: !200, line: 1014, column: 15)
!3912 = !DILocation(line: 1018, column: 14, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !200, line: 1017, column: 12)
!3914 = distinct !DILexicalBlock(scope: !3911, file: !200, line: 1015, column: 9)
!3915 = !DILocation(line: 1020, column: 4, scope: !3911)
!3916 = !DILocation(line: 1020, column: 15, scope: !3816)
!3917 = !DILocation(line: 1021, column: 1, scope: !3814)
!3918 = !DILocation(line: 1022, column: 11, scope: !3814)
!3919 = !DILocation(line: 1025, column: 14, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3814, file: !200, line: 1025, column: 9)
!3921 = !DILocation(line: 1026, column: 25, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3920, file: !200, line: 1025, column: 38)
!3923 = !DILocation(line: 1026, column: 19, scope: !3922)
!3924 = !DILocation(line: 1026, column: 6, scope: !3922)
!3925 = !DILocation(line: 1026, column: 23, scope: !3922)
!3926 = !DILocation(line: 1027, column: 5, scope: !3922)
!3927 = !DILocation(line: 1031, column: 21, scope: !3814)
!3928 = !DILocation(line: 1031, column: 13, scope: !3814)
!3929 = !DILocation(line: 1032, column: 4, scope: !3814)
!3930 = !DILocation(line: 995, column: 33, scope: !3784)
!3931 = distinct !{!3931, !3885, !3932}
!3932 = !DILocation(line: 1033, column: 3, scope: !3781)
!3933 = !DILocation(line: 1040, column: 10, scope: !3740)
!3934 = !DILocation(line: 1042, column: 10, scope: !3740)
!3935 = !DILocation(line: 1052, column: 6, scope: !3740)
!3936 = !DILocation(line: 1055, column: 9, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !200, line: 1052, column: 14)
!3938 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1052, column: 6)
!3939 = !DILocation(line: 1056, column: 2, scope: !3937)
!3940 = !DILocation(line: 1056, column: 21, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !200, line: 1056, column: 13)
!3942 = !DILocation(line: 1066, column: 3, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !200, line: 1065, column: 11)
!3944 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1065, column: 6)
!3945 = !DILocation(line: 1067, column: 2, scope: !3943)
!3946 = !DILocation(line: 1068, column: 10, scope: !3740)
!3947 = !DILocation(line: 0, scope: !3797)
!3948 = !DILocation(line: 1074, column: 20, scope: !3800)
!3949 = !DILocation(line: 1074, column: 2, scope: !3797)
!3950 = !DILocation(line: 1110, column: 24, scope: !3740)
!3951 = !DILocation(line: 1053, column: 12, scope: !3937)
!3952 = !DILocation(line: 1054, column: 12, scope: !3937)
!3953 = !DILocation(line: 1108, column: 30, scope: !3740)
!3954 = !DILocation(line: 1108, column: 40, scope: !3740)
!3955 = !DILocation(line: 1108, column: 38, scope: !3740)
!3956 = !DILocation(line: 1109, column: 31, scope: !3740)
!3957 = !DILocation(line: 1109, column: 24, scope: !3740)
!3958 = !DILocation(line: 1110, column: 31, scope: !3740)
!3959 = !DILocation(line: 1114, column: 31, scope: !3740)
!3960 = !DILocation(line: 1114, column: 48, scope: !3740)
!3961 = !DILocation(line: 1115, column: 13, scope: !3740)
!3962 = !DILocation(line: 1118, column: 7, scope: !3740)
!3963 = !DILocation(line: 1119, column: 9, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1119, column: 6)
!3965 = !DILocation(line: 1119, column: 6, scope: !3740)
!3966 = !DILocation(line: 1075, column: 29, scope: !3799)
!3967 = !DILocation(line: 1075, column: 21, scope: !3799)
!3968 = !DILocation(line: 0, scope: !3799)
!3969 = !DILocation(line: 1076, column: 29, scope: !3799)
!3970 = !DILocation(line: 1076, column: 21, scope: !3799)
!3971 = !DILocation(line: 1077, column: 38, scope: !3799)
!3972 = !DILocation(line: 1077, column: 21, scope: !3799)
!3973 = !DILocation(line: 1078, column: 16, scope: !3799)
!3974 = !DILocation(line: 1080, column: 19, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3799, file: !200, line: 1080, column: 7)
!3976 = !DILocation(line: 1080, column: 34, scope: !3975)
!3977 = !DILocation(line: 1080, column: 22, scope: !3975)
!3978 = !DILocation(line: 1080, column: 7, scope: !3799)
!3979 = !DILocation(line: 1084, column: 7, scope: !3799)
!3980 = !DILocation(line: 1085, column: 8, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !200, line: 1084, column: 14)
!3982 = distinct !DILexicalBlock(scope: !3799, file: !200, line: 1084, column: 7)
!3983 = !DILocation(line: 1086, column: 5, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !200, line: 1086, column: 5)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !200, line: 1086, column: 5)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !200, line: 1085, column: 49)
!3987 = distinct !DILexicalBlock(scope: !3981, file: !200, line: 1085, column: 8)
!3988 = !DILocation(line: 1086, column: 5, scope: !3985)
!3989 = !DILocation(line: 1086, column: 5, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3984, file: !200, line: 1086, column: 5)
!3991 = !DILocation(line: 1087, column: 25, scope: !3986)
!3992 = !DILocation(line: 1087, column: 5, scope: !3986)
!3993 = !DILocation(line: 1088, column: 4, scope: !3986)
!3994 = !DILocation(line: 1088, column: 15, scope: !3987)
!3995 = !DILocation(line: 1089, column: 5, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !200, line: 1089, column: 5)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !200, line: 1089, column: 5)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !200, line: 1088, column: 61)
!3999 = distinct !DILexicalBlock(scope: !3987, file: !200, line: 1088, column: 15)
!4000 = !DILocation(line: 1089, column: 5, scope: !3997)
!4001 = !DILocation(line: 1089, column: 5, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3996, file: !200, line: 1089, column: 5)
!4003 = !DILocation(line: 1090, column: 26, scope: !3998)
!4004 = !DILocation(line: 1090, column: 5, scope: !3998)
!4005 = !DILocation(line: 1091, column: 4, scope: !3998)
!4006 = !DILocation(line: 1095, column: 8, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3982, file: !200, line: 1094, column: 10)
!4008 = !DILocation(line: 1096, column: 5, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !200, line: 1096, column: 5)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !200, line: 1096, column: 5)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !200, line: 1095, column: 49)
!4012 = distinct !DILexicalBlock(scope: !4007, file: !200, line: 1095, column: 8)
!4013 = !DILocation(line: 1096, column: 5, scope: !4010)
!4014 = !DILocation(line: 1096, column: 5, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4009, file: !200, line: 1096, column: 5)
!4016 = !DILocation(line: 1097, column: 25, scope: !4011)
!4017 = !DILocation(line: 1097, column: 5, scope: !4011)
!4018 = !DILocation(line: 1098, column: 4, scope: !4011)
!4019 = !DILocation(line: 1099, column: 5, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !200, line: 1099, column: 5)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !200, line: 1099, column: 5)
!4022 = distinct !DILexicalBlock(scope: !4012, file: !200, line: 1098, column: 11)
!4023 = !DILocation(line: 1099, column: 5, scope: !4021)
!4024 = !DILocation(line: 1099, column: 5, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4020, file: !200, line: 1099, column: 5)
!4026 = !DILocation(line: 1100, column: 26, scope: !4022)
!4027 = !DILocation(line: 1100, column: 5, scope: !4022)
!4028 = !DILocation(line: 1100, column: 30, scope: !4022)
!4029 = !DILocation(line: 1101, column: 26, scope: !4022)
!4030 = !DILocation(line: 1101, column: 5, scope: !4022)
!4031 = !DILocation(line: 0, scope: !3982)
!4032 = !DILocation(line: 1074, column: 32, scope: !3800)
!4033 = distinct !{!4033, !3949, !4034}
!4034 = !DILocation(line: 1104, column: 2, scope: !3797)
!4035 = !DILocation(line: 1124, column: 13, scope: !3740)
!4036 = !DILocation(line: 1127, column: 10, scope: !3740)
!4037 = !DILocation(line: 1127, column: 7, scope: !3740)
!4038 = !DILocation(line: 1128, column: 9, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1128, column: 6)
!4040 = !DILocation(line: 1128, column: 6, scope: !3740)
!4041 = !DILocation(line: 1134, column: 27, scope: !3740)
!4042 = !DILocation(line: 1136, column: 7, scope: !3740)
!4043 = !DILocation(line: 1137, column: 9, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1137, column: 6)
!4045 = !DILocation(line: 1137, column: 6, scope: !3740)
!4046 = !DILocation(line: 1131, column: 10, scope: !3740)
!4047 = !DILocation(line: 1140, column: 10, scope: !3740)
!4048 = !DILocation(line: 0, scope: !3807)
!4049 = !DILocation(line: 1143, column: 20, scope: !3810)
!4050 = !DILocation(line: 1143, column: 2, scope: !3807)
!4051 = !DILocation(line: 1144, column: 3, scope: !3809)
!4052 = !DILocation(line: 1144, column: 17, scope: !3809)
!4053 = !DILocation(line: 0, scope: !3809)
!4054 = !DILocation(line: 1144, column: 11, scope: !3809)
!4055 = !DILocation(line: 1145, column: 38, scope: !3809)
!4056 = !DILocation(line: 1145, column: 21, scope: !3809)
!4057 = !DILocation(line: 1146, column: 22, scope: !3809)
!4058 = !DILocation(line: 1146, column: 29, scope: !3809)
!4059 = !DILocation(line: 1148, column: 8, scope: !3809)
!4060 = !DILocation(line: 1149, column: 10, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !3809, file: !200, line: 1149, column: 7)
!4062 = !DILocation(line: 1149, column: 7, scope: !3809)
!4063 = !DILocation(line: 1154, column: 8, scope: !3809)
!4064 = !DILocation(line: 1155, column: 10, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3809, file: !200, line: 1155, column: 7)
!4066 = !DILocation(line: 1155, column: 7, scope: !3809)
!4067 = !DILocation(line: 1159, column: 2, scope: !3810)
!4068 = !DILocation(line: 1152, column: 11, scope: !3809)
!4069 = !DILocation(line: 1158, column: 11, scope: !3809)
!4070 = !DILocation(line: 1143, column: 33, scope: !3810)
!4071 = distinct !{!4071, !4050, !4072}
!4072 = !DILocation(line: 1159, column: 2, scope: !3807)
!4073 = !DILocation(line: 1162, column: 8, scope: !3740)
!4074 = !DILocation(line: 1164, column: 2, scope: !3740)
!4075 = !DILocation(line: 1165, column: 1, scope: !3740)
!4076 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4077, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!185, !106}
!4079 = !{!4080, !4081, !4082, !4083, !4084, !4085, !4086}
!4080 = !DILocalVariable(name: "packaged", arg: 1, scope: !4076, file: !200, line: 196, type: !106)
!4081 = !DILocalVariable(name: "buf", scope: !4076, file: !200, line: 200, type: !194)
!4082 = !DILocalVariable(name: "start", scope: !4076, file: !200, line: 201, type: !194)
!4083 = !DILocalVariable(name: "args_size", scope: !4076, file: !200, line: 202, type: !32)
!4084 = !DILocalVariable(name: "s_nbr", scope: !4076, file: !200, line: 202, type: !32)
!4085 = !DILocalVariable(name: "ros_nbr", scope: !4076, file: !200, line: 202, type: !32)
!4086 = !DILocalVariable(name: "i", scope: !4087, file: !200, line: 215, type: !107)
!4087 = distinct !DILexicalBlock(scope: !4076, file: !200, line: 215, column: 2)
!4088 = !DILocation(line: 0, scope: !4076)
!4089 = !DILocation(line: 198, column: 2, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !200, line: 198, column: 2)
!4091 = distinct !DILexicalBlock(scope: !4076, file: !200, line: 198, column: 2)
!4092 = !DILocation(line: 198, column: 2, scope: !4091)
!4093 = !DILocation(line: 198, column: 2, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4090, file: !200, line: 198, column: 2)
!4095 = !DILocation(line: 204, column: 14, scope: !4076)
!4096 = !DILocation(line: 204, column: 21, scope: !4076)
!4097 = !DILocation(line: 205, column: 14, scope: !4076)
!4098 = !DILocation(line: 206, column: 14, scope: !4076)
!4099 = !DILocation(line: 209, column: 6, scope: !4076)
!4100 = !DILocation(line: 212, column: 6, scope: !4076)
!4101 = !DILocation(line: 0, scope: !4087)
!4102 = !DILocation(line: 215, column: 20, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4087, file: !200, line: 215, column: 2)
!4104 = !DILocation(line: 215, column: 2, scope: !4087)
!4105 = !DILocation(line: 220, column: 33, scope: !4076)
!4106 = !DILocation(line: 220, column: 2, scope: !4076)
!4107 = !DILocation(line: 216, column: 6, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !200, line: 215, column: 34)
!4109 = !DILocation(line: 217, column: 10, scope: !4108)
!4110 = !DILocation(line: 217, column: 36, scope: !4108)
!4111 = !DILocation(line: 217, column: 7, scope: !4108)
!4112 = !DILocation(line: 215, column: 30, scope: !4103)
!4113 = distinct !{!4113, !4104, !4114}
!4114 = !DILocation(line: 218, column: 2, scope: !4087)
!4115 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4116, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!107, !3743, !106, !118, !197}
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DILocalVariable(name: "cb", arg: 1, scope: !4115, file: !200, line: 223, type: !3743)
!4120 = !DILocalVariable(name: "ctx", arg: 2, scope: !4115, file: !200, line: 223, type: !106)
!4121 = !DILocalVariable(name: "str", arg: 3, scope: !4115, file: !200, line: 223, type: !118)
!4122 = !DILocalVariable(name: "strl", arg: 4, scope: !4115, file: !200, line: 223, type: !197)
!4123 = !DILocation(line: 0, scope: !4115)
!4124 = !DILocation(line: 225, column: 9, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4115, file: !200, line: 225, column: 6)
!4126 = !DILocation(line: 225, column: 6, scope: !4115)
!4127 = !DILocation(line: 226, column: 14, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4125, file: !200, line: 225, column: 18)
!4129 = !DILocation(line: 226, column: 12, scope: !4128)
!4130 = !DILocation(line: 226, column: 3, scope: !4128)
!4131 = !DILocation(line: 229, column: 14, scope: !4115)
!4132 = !DILocation(line: 229, column: 9, scope: !4115)
!4133 = !DILocation(line: 229, column: 27, scope: !4115)
!4134 = !DILocation(line: 229, column: 39, scope: !4115)
!4135 = !DILocation(line: 230, column: 17, scope: !4115)
!4136 = !DILocation(line: 230, column: 9, scope: !4115)
!4137 = !DILocation(line: 230, column: 2, scope: !4115)
!4138 = !DILocation(line: 231, column: 1, scope: !4115)
!4139 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4140)
!4140 = !{!4141}
!4141 = !DILocalVariable(name: "c", arg: 1, scope: !4139, file: !212, line: 45, type: !107)
!4142 = !DILocation(line: 0, scope: !4139)
!4143 = !DILocation(line: 50, column: 2, scope: !4139)
!4144 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4145, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4147)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{null, !213}
!4147 = !{!4148}
!4148 = !DILocalVariable(name: "fn", arg: 1, scope: !4144, file: !212, line: 63, type: !213)
!4149 = !DILocation(line: 0, scope: !4144)
!4150 = !DILocation(line: 65, column: 12, scope: !4144)
!4151 = !DILocation(line: 66, column: 1, scope: !4144)
!4152 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2182)
!4153 = !DILocation(line: 78, column: 9, scope: !4152)
!4154 = !DILocation(line: 78, column: 2, scope: !4152)
!4155 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4156, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4164)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{null, !118, !4158}
!4158 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3231, line: 99, baseType: !4159)
!4159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3231, line: 40, baseType: !4160)
!4160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4161)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4162)
!4162 = !{!4163}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4161, file: !212, line: 79, baseType: !106, size: 32)
!4164 = !{!4165, !4166, !4167}
!4165 = !DILocalVariable(name: "fmt", arg: 1, scope: !4155, file: !212, line: 113, type: !118)
!4166 = !DILocalVariable(name: "ap", arg: 2, scope: !4155, file: !212, line: 113, type: !4158)
!4167 = !DILocalVariable(name: "ctx", scope: !4168, file: !212, line: 121, type: !4170)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !212, line: 120, column: 27)
!4169 = distinct !DILexicalBlock(scope: !4155, file: !212, line: 120, column: 6)
!4170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4171)
!4171 = !{!4172, !4173}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4170, file: !212, line: 85, baseType: !32, size: 32)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4170, file: !212, line: 86, baseType: !4174, offset: 32)
!4174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4175)
!4175 = !{!4176}
!4176 = !DISubrange(count: 0)
!4177 = !DILocation(line: 0, scope: !4155)
!4178 = !DILocation(line: 148, column: 3, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4169, file: !212, line: 138, column: 9)
!4180 = !DILocation(line: 155, column: 1, scope: !4155)
!4181 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4182, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!107, !107, !106}
!4184 = !{!4185, !4186}
!4185 = !DILocalVariable(name: "c", arg: 1, scope: !4181, file: !212, line: 107, type: !107)
!4186 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4181, file: !212, line: 107, type: !106)
!4187 = !DILocation(line: 0, scope: !4181)
!4188 = !DILocation(line: 110, column: 9, scope: !4181)
!4189 = !DILocation(line: 110, column: 2, scope: !4181)
!4190 = distinct !DISubprogram(name: "cbvprintf", scope: !3263, file: !3263, line: 739, type: !4191, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4193)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!107, !3611, !106, !118, !4158}
!4193 = !{!4194, !4195, !4196, !4197}
!4194 = !DILocalVariable(name: "out", arg: 1, scope: !4190, file: !3263, line: 739, type: !3611)
!4195 = !DILocalVariable(name: "ctx", arg: 2, scope: !4190, file: !3263, line: 739, type: !106)
!4196 = !DILocalVariable(name: "format", arg: 3, scope: !4190, file: !3263, line: 739, type: !118)
!4197 = !DILocalVariable(name: "ap", arg: 4, scope: !4190, file: !3263, line: 739, type: !4158)
!4198 = !DILocation(line: 0, scope: !4190)
!4199 = !DILocation(line: 741, column: 9, scope: !4190)
!4200 = !DILocation(line: 741, column: 2, scope: !4190)
!4201 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4202, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{null, !193, !185}
!4204 = !{!4205, !4206, !4207}
!4205 = !DILocalVariable(name: "c", arg: 1, scope: !4201, file: !212, line: 157, type: !193)
!4206 = !DILocalVariable(name: "n", arg: 2, scope: !4201, file: !212, line: 157, type: !185)
!4207 = !DILocalVariable(name: "i", scope: !4201, file: !212, line: 159, type: !185)
!4208 = !DILocation(line: 0, scope: !4201)
!4209 = !DILocation(line: 164, column: 16, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !212, line: 164, column: 2)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !212, line: 164, column: 2)
!4212 = !DILocation(line: 164, column: 2, scope: !4211)
!4213 = !DILocation(line: 165, column: 3, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4210, file: !212, line: 164, column: 26)
!4215 = !DILocation(line: 165, column: 13, scope: !4214)
!4216 = !DILocation(line: 164, column: 22, scope: !4210)
!4217 = distinct !{!4217, !4212, !4218}
!4218 = !DILocation(line: 166, column: 2, scope: !4211)
!4219 = !DILocation(line: 171, column: 1, scope: !4201)
!4220 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4221, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4223)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{null, !118, null}
!4223 = !{!4224, !4225}
!4224 = !DILocalVariable(name: "fmt", arg: 1, scope: !4220, file: !212, line: 203, type: !118)
!4225 = !DILocalVariable(name: "ap", scope: !4220, file: !212, line: 205, type: !4158)
!4226 = !DILocation(line: 0, scope: !4220)
!4227 = !DILocation(line: 205, column: 2, scope: !4220)
!4228 = !DILocation(line: 205, column: 10, scope: !4220)
!4229 = !DILocation(line: 207, column: 2, scope: !4220)
!4230 = !DILocation(line: 209, column: 2, scope: !4220)
!4231 = !DILocation(line: 211, column: 2, scope: !4220)
!4232 = !DILocation(line: 212, column: 1, scope: !4220)
!4233 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4234, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4236)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{!107, !193, !185, !118, null}
!4236 = !{!4237, !4238, !4239, !4240, !4241}
!4237 = !DILocalVariable(name: "str", arg: 1, scope: !4233, file: !212, line: 239, type: !193)
!4238 = !DILocalVariable(name: "size", arg: 2, scope: !4233, file: !212, line: 239, type: !185)
!4239 = !DILocalVariable(name: "fmt", arg: 3, scope: !4233, file: !212, line: 239, type: !118)
!4240 = !DILocalVariable(name: "ap", scope: !4233, file: !212, line: 241, type: !4158)
!4241 = !DILocalVariable(name: "ret", scope: !4233, file: !212, line: 242, type: !107)
!4242 = !DILocation(line: 0, scope: !4233)
!4243 = !DILocation(line: 241, column: 2, scope: !4233)
!4244 = !DILocation(line: 241, column: 10, scope: !4233)
!4245 = !DILocation(line: 244, column: 2, scope: !4233)
!4246 = !DILocation(line: 245, column: 8, scope: !4233)
!4247 = !DILocation(line: 246, column: 2, scope: !4233)
!4248 = !DILocation(line: 249, column: 1, scope: !4233)
!4249 = !DILocation(line: 248, column: 2, scope: !4233)
!4250 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4251, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4253)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!107, !193, !185, !118, !4158}
!4253 = !{!4254, !4255, !4256, !4257, !4258}
!4254 = !DILocalVariable(name: "str", arg: 1, scope: !4250, file: !212, line: 251, type: !193)
!4255 = !DILocalVariable(name: "size", arg: 2, scope: !4250, file: !212, line: 251, type: !185)
!4256 = !DILocalVariable(name: "fmt", arg: 3, scope: !4250, file: !212, line: 251, type: !118)
!4257 = !DILocalVariable(name: "ap", arg: 4, scope: !4250, file: !212, line: 251, type: !4158)
!4258 = !DILocalVariable(name: "ctx", scope: !4250, file: !212, line: 253, type: !4259)
!4259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4260)
!4260 = !{!4261, !4262, !4263}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4259, file: !212, line: 218, baseType: !193, size: 32)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4259, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4259, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4264 = !DILocation(line: 0, scope: !4250)
!4265 = !DILocation(line: 253, column: 2, scope: !4250)
!4266 = !DILocation(line: 253, column: 21, scope: !4250)
!4267 = !DILocation(line: 253, column: 27, scope: !4250)
!4268 = !DILocation(line: 255, column: 2, scope: !4250)
!4269 = !DILocation(line: 257, column: 10, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4250, file: !212, line: 257, column: 6)
!4271 = !DILocation(line: 257, column: 22, scope: !4270)
!4272 = !DILocation(line: 257, column: 16, scope: !4270)
!4273 = !DILocation(line: 257, column: 6, scope: !4250)
!4274 = !DILocation(line: 258, column: 3, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !212, line: 257, column: 27)
!4276 = !DILocation(line: 258, column: 18, scope: !4275)
!4277 = !DILocation(line: 259, column: 2, scope: !4275)
!4278 = !DILocation(line: 262, column: 1, scope: !4250)
!4279 = !DILocation(line: 261, column: 2, scope: !4250)
!4280 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4281, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4284)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!107, !107, !4283}
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 32)
!4284 = !{!4285, !4286}
!4285 = !DILocalVariable(name: "c", arg: 1, scope: !4280, file: !212, line: 223, type: !107)
!4286 = !DILocalVariable(name: "ctx", arg: 2, scope: !4280, file: !212, line: 223, type: !4283)
!4287 = !DILocation(line: 0, scope: !4280)
!4288 = !DILocation(line: 225, column: 11, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4280, file: !212, line: 225, column: 6)
!4290 = !DILocation(line: 225, column: 15, scope: !4289)
!4291 = !DILocation(line: 0, scope: !4289)
!4292 = !DILocation(line: 225, column: 23, scope: !4289)
!4293 = !DILocation(line: 225, column: 45, scope: !4289)
!4294 = !DILocation(line: 225, column: 37, scope: !4289)
!4295 = !DILocation(line: 225, column: 6, scope: !4280)
!4296 = !DILocation(line: 226, column: 8, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4289, file: !212, line: 225, column: 50)
!4298 = !DILocation(line: 226, column: 13, scope: !4297)
!4299 = !DILocation(line: 227, column: 3, scope: !4297)
!4300 = !DILocation(line: 230, column: 29, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4280, file: !212, line: 230, column: 6)
!4302 = !DILocation(line: 230, column: 17, scope: !4301)
!4303 = !DILocation(line: 230, column: 6, scope: !4280)
!4304 = !DILocation(line: 231, column: 22, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4301, file: !212, line: 230, column: 34)
!4306 = !DILocation(line: 231, column: 3, scope: !4305)
!4307 = !DILocation(line: 231, column: 26, scope: !4305)
!4308 = !DILocation(line: 232, column: 2, scope: !4305)
!4309 = !DILocation(line: 233, column: 28, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4301, file: !212, line: 232, column: 9)
!4311 = !DILocation(line: 233, column: 22, scope: !4310)
!4312 = !DILocation(line: 233, column: 3, scope: !4310)
!4313 = !DILocation(line: 233, column: 26, scope: !4310)
!4314 = !DILocation(line: 237, column: 1, scope: !4280)
!4315 = distinct !DISubprogram(name: "z_thread_entry", scope: !4316, file: !4316, line: 30, type: !4317, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4319)
!4316 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !559, !106, !106, !106}
!4319 = !{!4320, !4321, !4322, !4323}
!4320 = !DILocalVariable(name: "entry", arg: 1, scope: !4315, file: !4316, line: 30, type: !559)
!4321 = !DILocalVariable(name: "p1", arg: 2, scope: !4315, file: !4316, line: 31, type: !106)
!4322 = !DILocalVariable(name: "p2", arg: 3, scope: !4315, file: !4316, line: 31, type: !106)
!4323 = !DILocalVariable(name: "p3", arg: 4, scope: !4315, file: !4316, line: 31, type: !106)
!4324 = !DILocation(line: 0, scope: !4315)
!4325 = !DILocation(line: 36, column: 2, scope: !4315)
!4326 = !DILocation(line: 38, column: 17, scope: !4315)
!4327 = !DILocation(line: 38, column: 2, scope: !4315)
!4328 = !DILocation(line: 45, column: 2, scope: !4315)
!4329 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4330, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2182)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!4332}
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4333)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 32)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4335)
!4335 = !{!4336, !4394, !4406, !4407, !4408, !4409, !4410, !4416, !4431}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4334, file: !309, line: 247, baseType: !4337, size: 384)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4338)
!4338 = !{!4339, !4363, !4370, !4371, !4372, !4381, !4382, !4383}
!4339 = !DIDerivedType(tag: DW_TAG_member, scope: !4337, file: !309, line: 60, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4337, file: !309, line: 60, size: 64, elements: !4341)
!4341 = !{!4342, !4357}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4340, file: !309, line: 61, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4344)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4345)
!4345 = !{!4346, !4352}
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !4344, file: !319, line: 38, baseType: !4347, size: 32)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4344, file: !319, line: 38, size: 32, elements: !4348)
!4348 = !{!4349, !4351}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4347, file: !319, line: 39, baseType: !4350, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4347, file: !319, line: 40, baseType: !4350, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, scope: !4344, file: !319, line: 42, baseType: !4353, size: 32, offset: 32)
!4353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4344, file: !319, line: 42, size: 32, elements: !4354)
!4354 = !{!4355, !4356}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4353, file: !319, line: 43, baseType: !4350, size: 32)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4353, file: !319, line: 44, baseType: !4350, size: 32)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4340, file: !309, line: 62, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4359)
!4359 = !{!4360}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4358, file: !335, line: 50, baseType: !4361, size: 64)
!4361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4362, size: 64, elements: !340)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 32)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4337, file: !309, line: 68, baseType: !4364, size: 32, offset: 64)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 32)
!4365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4366)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4367)
!4367 = !{!4368}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4366, file: !345, line: 232, baseType: !4369, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4344)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4337, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4337, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4372 = !DIDerivedType(tag: DW_TAG_member, scope: !4337, file: !309, line: 90, baseType: !4373, size: 16, offset: 112)
!4373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4337, file: !309, line: 90, size: 16, elements: !4374)
!4374 = !{!4375, !4380}
!4375 = !DIDerivedType(tag: DW_TAG_member, scope: !4373, file: !309, line: 91, baseType: !4376, size: 16)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4373, file: !309, line: 91, size: 16, elements: !4377)
!4377 = !{!4378, !4379}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4376, file: !309, line: 96, baseType: !359, size: 8)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4376, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4373, file: !309, line: 100, baseType: !197, size: 16)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4337, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4337, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4337, file: !309, line: 131, baseType: !4384, size: 192, offset: 192)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4385)
!4385 = !{!4386, !4387, !4393}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4384, file: !345, line: 245, baseType: !4343, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4384, file: !345, line: 246, baseType: !4388, size: 32, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4389)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 32)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{null, !4392}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4384, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4334, file: !309, line: 250, baseType: !4395, size: 288, offset: 384)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4396)
!4396 = !{!4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4395, file: !379, line: 26, baseType: !152, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4395, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4395, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4395, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4395, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4395, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4395, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4395, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4395, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4334, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4334, file: !309, line: 256, baseType: !4365, size: 64, offset: 704)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4334, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4334, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4334, file: !309, line: 300, baseType: !4411, size: 96, offset: 1056)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4412)
!4412 = !{!4413, !4414, !4415}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4411, file: !309, line: 153, baseType: !22, size: 32)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4411, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4411, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4334, file: !309, line: 325, baseType: !4417, size: 32, offset: 1152)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 32)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4419)
!4419 = !{!4420, !4426, !4427}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4418, file: !406, line: 5074, baseType: !4421, size: 96)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4422)
!4422 = !{!4423, !4424, !4425}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4421, file: !410, line: 57, baseType: !413, size: 32)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4421, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4421, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4418, file: !406, line: 5075, baseType: !4365, size: 64, offset: 96)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4418, file: !406, line: 5076, baseType: !4428, size: 32, offset: 160)
!4428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4429)
!4429 = !{!4430}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4428, file: !420, line: 52, baseType: !22, size: 32)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4334, file: !309, line: 343, baseType: !4432, size: 64, offset: 1184)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4433)
!4433 = !{!4434, !4435}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4432, file: !379, line: 63, baseType: !152, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4432, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4436 = !DILocation(line: 535, column: 9, scope: !4329)
!4437 = !DILocation(line: 535, column: 2, scope: !4329)
!4438 = distinct !DISubprogram(name: "k_thread_abort", scope: !4439, file: !4439, line: 188, type: !4440, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4442)
!4439 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!4440 = !DISubroutineType(types: !4441)
!4441 = !{null, !4332}
!4442 = !{!4443}
!4443 = !DILocalVariable(name: "thread", arg: 1, scope: !4438, file: !4439, line: 188, type: !4332)
!4444 = !DILocation(line: 0, scope: !4438)
!4445 = !DILocation(line: 197, column: 2, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4438, file: !4439, line: 197, column: 2)
!4447 = !{i64 2154156012}
!4448 = !DILocation(line: 198, column: 2, scope: !4438)
!4449 = !DILocation(line: 199, column: 1, scope: !4438)
!4450 = distinct !DISubprogram(name: "z_current_get", scope: !4439, file: !4439, line: 173, type: !4330, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2182)
!4451 = !DILocation(line: 180, column: 2, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4450, file: !4439, line: 180, column: 2)
!4453 = !{i64 2154155944}
!4454 = !DILocation(line: 181, column: 9, scope: !4450)
!4455 = !DILocation(line: 181, column: 2, scope: !4450)
!4456 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2534, file: !2534, line: 1338, type: !4457, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4465)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!107, !3611, !106, !118, !4459, !152}
!4459 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3231, line: 99, baseType: !4460)
!4460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3231, line: 40, baseType: !4461)
!4461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2534, baseType: !4462)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4463)
!4463 = !{!4464}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4462, file: !2534, baseType: !106, size: 32)
!4465 = !{!4466, !4467, !4468, !4469, !4470, !4471, !4475, !4476, !4477, !4479, !4484, !4527, !4530, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4542, !4543, !4544, !4548, !4551, !4553, !4556, !4557, !4558, !4563, !4569, !4572, !4576, !4582, !4586, !4589, !4591, !4594}
!4466 = !DILocalVariable(name: "out", arg: 1, scope: !4456, file: !2534, line: 1338, type: !3611)
!4467 = !DILocalVariable(name: "ctx", arg: 2, scope: !4456, file: !2534, line: 1338, type: !106)
!4468 = !DILocalVariable(name: "fp", arg: 3, scope: !4456, file: !2534, line: 1338, type: !118)
!4469 = !DILocalVariable(name: "ap", arg: 4, scope: !4456, file: !2534, line: 1339, type: !4459)
!4470 = !DILocalVariable(name: "flags", arg: 5, scope: !4456, file: !2534, line: 1339, type: !152)
!4471 = !DILocalVariable(name: "buf", scope: !4456, file: !2534, line: 1341, type: !4472)
!4472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4473)
!4473 = !{!4474}
!4474 = !DISubrange(count: 22)
!4475 = !DILocalVariable(name: "count", scope: !4456, file: !2534, line: 1342, type: !185)
!4476 = !DILocalVariable(name: "sint", scope: !4456, file: !2534, line: 1343, type: !2553)
!4477 = !DILocalVariable(name: "tagged_ap", scope: !4456, file: !2534, line: 1345, type: !4478)
!4478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4479 = !DILocalVariable(name: "rc", scope: !4480, file: !2534, line: 1377, type: !107)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !2534, line: 1377, column: 4)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !2534, line: 1376, column: 19)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1376, column: 7)
!4483 = distinct !DILexicalBlock(scope: !4456, file: !2534, line: 1375, column: 19)
!4484 = !DILocalVariable(name: "state", scope: !4483, file: !2534, line: 1395, type: !4485)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4456, file: !2534, line: 1392, size: 192, elements: !4486)
!4486 = !{!4487, !4495}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4485, file: !2534, line: 1393, baseType: !4488, size: 64)
!4488 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2534, line: 166, size: 64, elements: !4489)
!4489 = !{!4490, !4491, !4492, !4493, !4494}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4488, file: !2534, line: 168, baseType: !2553, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4488, file: !2534, line: 171, baseType: !2556, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4488, file: !2534, line: 174, baseType: !183, size: 64)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4488, file: !2534, line: 177, baseType: !181, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4488, file: !2534, line: 180, baseType: !106, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4485, file: !2534, line: 1394, baseType: !4496, size: 96, offset: 64)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2534, line: 189, size: 96, elements: !4497)
!4497 = !{!4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4522}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4496, file: !2534, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4496, file: !2534, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4496, file: !2534, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4496, file: !2534, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4496, file: !2534, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4496, file: !2534, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4496, file: !2534, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4496, file: !2534, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4496, file: !2534, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4496, file: !2534, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4496, file: !2534, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4496, file: !2534, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4496, file: !2534, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4496, file: !2534, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4496, file: !2534, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4496, file: !2534, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4496, file: !2534, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4496, file: !2534, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4496, file: !2534, line: 260, baseType: !196, size: 8, offset: 24)
!4517 = !DIDerivedType(tag: DW_TAG_member, scope: !4496, file: !2534, line: 262, baseType: !4518, size: 32, offset: 32)
!4518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !2534, line: 262, size: 32, elements: !4519)
!4519 = !{!4520, !4521}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4518, file: !2534, line: 267, baseType: !107, size: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4518, file: !2534, line: 289, baseType: !107, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, scope: !4496, file: !2534, line: 292, baseType: !4523, size: 32, offset: 64)
!4523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !2534, line: 292, size: 32, elements: !4524)
!4524 = !{!4525, !4526}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4523, file: !2534, line: 297, baseType: !107, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4523, file: !2534, line: 306, baseType: !107, size: 32)
!4527 = !DILocalVariable(name: "conv", scope: !4483, file: !2534, line: 1400, type: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4529)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 32)
!4530 = !DILocalVariable(name: "value", scope: !4483, file: !2534, line: 1401, type: !4531)
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 32)
!4533 = !DILocalVariable(name: "sp", scope: !4483, file: !2534, line: 1402, type: !118)
!4534 = !DILocalVariable(name: "width", scope: !4483, file: !2534, line: 1403, type: !107)
!4535 = !DILocalVariable(name: "precision", scope: !4483, file: !2534, line: 1404, type: !107)
!4536 = !DILocalVariable(name: "bps", scope: !4483, file: !2534, line: 1405, type: !118)
!4537 = !DILocalVariable(name: "bpe", scope: !4483, file: !2534, line: 1406, type: !118)
!4538 = !DILocalVariable(name: "sign", scope: !4483, file: !2534, line: 1407, type: !120)
!4539 = !DILocalVariable(name: "arg", scope: !4540, file: !2534, line: 1432, type: !107)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2534, line: 1431, column: 24)
!4541 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1431, column: 7)
!4542 = !DILocalVariable(name: "specifier_cat", scope: !4483, file: !2534, line: 1468, type: !2533)
!4543 = !DILocalVariable(name: "length_mod", scope: !4483, file: !2534, line: 1470, type: !2541)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2534, line: 1575, type: !107)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2534, line: 1575, column: 4)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2534, line: 1574, column: 43)
!4547 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1574, column: 7)
!4548 = !DILocalVariable(name: "rc", scope: !4549, file: !2534, line: 1584, type: !107)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1584, column: 4)
!4550 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1582, column: 28)
!4551 = !DILocalVariable(name: "len", scope: !4552, file: !2534, line: 1589, type: !185)
!4552 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1586, column: 13)
!4553 = !DILocalVariable(name: "len", scope: !4554, file: !2534, line: 1641, type: !185)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2534, line: 1640, column: 24)
!4555 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1640, column: 8)
!4556 = !DILocalVariable(name: "nj_len", scope: !4483, file: !2534, line: 1722, type: !185)
!4557 = !DILocalVariable(name: "pad_len", scope: !4483, file: !2534, line: 1723, type: !107)
!4558 = !DILocalVariable(name: "pad", scope: !4559, file: !2534, line: 1751, type: !120)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2534, line: 1750, column: 26)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2534, line: 1750, column: 8)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2534, line: 1747, column: 18)
!4562 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1747, column: 7)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2534, line: 1758, type: !107)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2534, line: 1758, column: 7)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2534, line: 1757, column: 21)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2534, line: 1757, column: 10)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2534, line: 1756, column: 26)
!4568 = distinct !DILexicalBlock(scope: !4559, file: !2534, line: 1756, column: 9)
!4569 = !DILocalVariable(name: "rc", scope: !4570, file: !2534, line: 1765, type: !107)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !2534, line: 1765, column: 6)
!4571 = distinct !DILexicalBlock(scope: !4559, file: !2534, line: 1764, column: 25)
!4572 = !DILocalVariable(name: "rc", scope: !4573, file: !2534, line: 1774, type: !107)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !2534, line: 1774, column: 4)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2534, line: 1773, column: 18)
!4575 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1773, column: 7)
!4576 = !DILocalVariable(name: "rc", scope: !4577, file: !2534, line: 1819, type: !107)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !2534, line: 1819, column: 5)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !2534, line: 1818, column: 44)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !2534, line: 1818, column: 8)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !2534, line: 1817, column: 10)
!4581 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1777, column: 7)
!4582 = !DILocalVariable(name: "rc", scope: !4583, file: !2534, line: 1823, type: !107)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !2534, line: 1823, column: 5)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !2534, line: 1822, column: 26)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !2534, line: 1822, column: 8)
!4586 = !DILocalVariable(name: "rc", scope: !4587, file: !2534, line: 1828, type: !107)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !2534, line: 1828, column: 5)
!4588 = distinct !DILexicalBlock(scope: !4580, file: !2534, line: 1827, column: 26)
!4589 = !DILocalVariable(name: "rc", scope: !4590, file: !2534, line: 1831, type: !107)
!4590 = distinct !DILexicalBlock(scope: !4580, file: !2534, line: 1831, column: 4)
!4591 = !DILocalVariable(name: "rc", scope: !4592, file: !2534, line: 1836, type: !107)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !2534, line: 1836, column: 4)
!4593 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1835, column: 21)
!4594 = !DILabel(scope: !4550, name: "prec_int_pad0", file: !2534, line: 1634)
!4595 = !DILocation(line: 0, scope: !4456)
!4596 = !DILocation(line: 1341, column: 2, scope: !4456)
!4597 = !DILocation(line: 1341, column: 7, scope: !4456)
!4598 = !DILocation(line: 1375, column: 2, scope: !4456)
!4599 = !DILocation(line: 1342, column: 9, scope: !4456)
!4600 = !DILocation(line: 1375, column: 9, scope: !4456)
!4601 = !DILocation(line: 1377, column: 4, scope: !4480)
!4602 = !DILocation(line: 0, scope: !4480)
!4603 = !DILocation(line: 1377, column: 4, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4480, file: !2534, line: 1377, column: 4)
!4605 = distinct !{!4605, !4598, !4606}
!4606 = !DILocation(line: 1839, column: 2, scope: !4456)
!4607 = !DILocation(line: 1392, column: 3, scope: !4483)
!4608 = !DILocation(line: 1395, column: 5, scope: !4483)
!4609 = !DILocation(line: 0, scope: !4483)
!4610 = !DILocation(line: 1409, column: 8, scope: !4483)
!4611 = !DILocation(line: 1414, column: 13, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1414, column: 7)
!4613 = !DILocation(line: 1414, column: 7, scope: !4483)
!4614 = !DILocation(line: 1415, column: 12, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !2534, line: 1414, column: 25)
!4616 = !DILocation(line: 1417, column: 14, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4615, file: !2534, line: 1417, column: 8)
!4618 = !DILocation(line: 1417, column: 8, scope: !4615)
!4619 = !DILocation(line: 1418, column: 21, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4617, file: !2534, line: 1417, column: 19)
!4621 = !DILocation(line: 1419, column: 13, scope: !4620)
!4622 = !DILocation(line: 1420, column: 4, scope: !4620)
!4623 = !DILocation(line: 1421, column: 20, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4612, file: !2534, line: 1421, column: 14)
!4625 = !DILocation(line: 1421, column: 14, scope: !4612)
!4626 = !DILocation(line: 1431, column: 13, scope: !4541)
!4627 = !DILocation(line: 1431, column: 7, scope: !4483)
!4628 = !DILocation(line: 1432, column: 14, scope: !4540)
!4629 = !DILocation(line: 0, scope: !4540)
!4630 = !DILocation(line: 1434, column: 12, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4540, file: !2534, line: 1434, column: 8)
!4632 = !DILocation(line: 1434, column: 8, scope: !4540)
!4633 = !DILocation(line: 1435, column: 24, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4631, file: !2534, line: 1434, column: 17)
!4635 = !DILocation(line: 1436, column: 4, scope: !4634)
!4636 = !DILocation(line: 1439, column: 20, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4541, file: !2534, line: 1439, column: 14)
!4638 = !DILocation(line: 1439, column: 14, scope: !4541)
!4639 = !DILocation(line: 1469, column: 37, scope: !4483)
!4640 = !DILocation(line: 1448, column: 20, scope: !4483)
!4641 = !DILocation(line: 1449, column: 22, scope: !4483)
!4642 = !DILocation(line: 1471, column: 34, scope: !4483)
!4643 = !DILocation(line: 1478, column: 7, scope: !4483)
!4644 = !DILocation(line: 1479, column: 4, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2534, line: 1478, column: 40)
!4646 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1478, column: 7)
!4647 = !DILocation(line: 1484, column: 19, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4645, file: !2534, line: 1479, column: 24)
!4649 = !DILocation(line: 1484, column: 17, scope: !4648)
!4650 = !DILocation(line: 1485, column: 5, scope: !4648)
!4651 = !DILocation(line: 1492, column: 20, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2534, line: 1491, column: 12)
!4653 = distinct !DILexicalBlock(scope: !4648, file: !2534, line: 1487, column: 9)
!4654 = !DILocation(line: 1492, column: 18, scope: !4652)
!4655 = !DILocation(line: 1494, column: 5, scope: !4648)
!4656 = !DILocation(line: 1497, column: 23, scope: !4648)
!4657 = !DILocation(line: 1496, column: 17, scope: !4648)
!4658 = !DILocation(line: 1498, column: 5, scope: !4648)
!4659 = !DILocation(line: 1501, column: 23, scope: !4648)
!4660 = !DILocation(line: 1500, column: 17, scope: !4648)
!4661 = !DILocation(line: 1502, column: 5, scope: !4648)
!4662 = !DILocation(line: 1513, column: 23, scope: !4648)
!4663 = !DILocation(line: 1513, column: 6, scope: !4648)
!4664 = !DILocation(line: 1512, column: 17, scope: !4648)
!4665 = !DILocation(line: 1514, column: 5, scope: !4648)
!4666 = !DILocation(line: 0, scope: !4648)
!4667 = !DILocation(line: 1516, column: 8, scope: !4645)
!4668 = !DILocation(line: 1517, column: 19, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2534, line: 1516, column: 33)
!4670 = distinct !DILexicalBlock(scope: !4645, file: !2534, line: 1516, column: 8)
!4671 = !DILocation(line: 1517, column: 17, scope: !4669)
!4672 = !DILocation(line: 1518, column: 4, scope: !4669)
!4673 = !DILocation(line: 1519, column: 19, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2534, line: 1518, column: 39)
!4675 = distinct !DILexicalBlock(scope: !4670, file: !2534, line: 1518, column: 15)
!4676 = !DILocation(line: 1519, column: 17, scope: !4674)
!4677 = !DILocation(line: 1520, column: 4, scope: !4674)
!4678 = !DILocation(line: 1522, column: 4, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2534, line: 1521, column: 47)
!4680 = distinct !DILexicalBlock(scope: !4646, file: !2534, line: 1521, column: 14)
!4681 = !DILocation(line: 1527, column: 19, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !2534, line: 1522, column: 24)
!4683 = !DILocation(line: 1527, column: 17, scope: !4682)
!4684 = !DILocation(line: 1528, column: 5, scope: !4682)
!4685 = !DILocation(line: 0, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4682, file: !2534, line: 1530, column: 9)
!4687 = !DILocation(line: 1540, column: 23, scope: !4682)
!4688 = !DILocation(line: 1539, column: 17, scope: !4682)
!4689 = !DILocation(line: 1542, column: 5, scope: !4682)
!4690 = !DILocation(line: 1545, column: 23, scope: !4682)
!4691 = !DILocation(line: 1544, column: 17, scope: !4682)
!4692 = !DILocation(line: 1547, column: 5, scope: !4682)
!4693 = !DILocation(line: 1551, column: 23, scope: !4682)
!4694 = !DILocation(line: 1551, column: 6, scope: !4682)
!4695 = !DILocation(line: 1550, column: 17, scope: !4682)
!4696 = !DILocation(line: 1552, column: 5, scope: !4682)
!4697 = !DILocation(line: 0, scope: !4682)
!4698 = !DILocation(line: 1554, column: 8, scope: !4679)
!4699 = !DILocation(line: 1555, column: 19, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !2534, line: 1554, column: 33)
!4701 = distinct !DILexicalBlock(scope: !4679, file: !2534, line: 1554, column: 8)
!4702 = !DILocation(line: 1555, column: 17, scope: !4700)
!4703 = !DILocation(line: 1556, column: 4, scope: !4700)
!4704 = !DILocation(line: 1557, column: 19, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2534, line: 1556, column: 39)
!4706 = distinct !DILexicalBlock(scope: !4701, file: !2534, line: 1556, column: 15)
!4707 = !DILocation(line: 1557, column: 17, scope: !4705)
!4708 = !DILocation(line: 1558, column: 4, scope: !4705)
!4709 = !DILocation(line: 0, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2534, line: 1560, column: 8)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2534, line: 1559, column: 45)
!4712 = distinct !DILexicalBlock(scope: !4680, file: !2534, line: 1559, column: 14)
!4713 = !DILocation(line: 1566, column: 17, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2534, line: 1565, column: 46)
!4715 = distinct !DILexicalBlock(scope: !4712, file: !2534, line: 1565, column: 14)
!4716 = !DILocation(line: 1566, column: 15, scope: !4714)
!4717 = !DILocation(line: 1567, column: 3, scope: !4714)
!4718 = !DILocation(line: 1574, column: 21, scope: !4547)
!4719 = !DILocation(line: 1575, column: 4, scope: !4545)
!4720 = !DILocation(line: 0, scope: !4545)
!4721 = !DILocation(line: 1575, column: 4, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4545, file: !2534, line: 1575, column: 4)
!4723 = !DILocation(line: 1582, column: 17, scope: !4483)
!4724 = !DILocation(line: 1582, column: 3, scope: !4483)
!4725 = !DILocation(line: 1584, column: 4, scope: !4549)
!4726 = !DILocation(line: 0, scope: !4549)
!4727 = !DILocation(line: 1584, column: 4, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4549, file: !2534, line: 1584, column: 4)
!4729 = !DILocation(line: 1587, column: 31, scope: !4552)
!4730 = !DILocation(line: 1591, column: 18, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4552, file: !2534, line: 1591, column: 8)
!4732 = !DILocation(line: 1591, column: 8, scope: !4552)
!4733 = !DILocation(line: 1592, column: 11, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4731, file: !2534, line: 1591, column: 24)
!4735 = !DILocation(line: 0, scope: !4552)
!4736 = !DILocation(line: 1593, column: 4, scope: !4734)
!4737 = !DILocation(line: 1594, column: 11, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4731, file: !2534, line: 1593, column: 11)
!4739 = !DILocation(line: 1604, column: 51, scope: !4550)
!4740 = !DILocation(line: 1604, column: 13, scope: !4550)
!4741 = !DILocation(line: 1604, column: 11, scope: !4550)
!4742 = !DILocation(line: 1606, column: 4, scope: !4550)
!4743 = !DILocation(line: 1609, column: 14, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1609, column: 8)
!4745 = !DILocation(line: 1609, column: 8, scope: !4550)
!4746 = !DILocation(line: 1619, column: 18, scope: !4550)
!4747 = !DILocation(line: 1620, column: 13, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1620, column: 8)
!4749 = !DILocation(line: 1620, column: 8, scope: !4550)
!4750 = !DILocation(line: 1622, column: 36, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !2534, line: 1620, column: 18)
!4752 = !DILocation(line: 1622, column: 17, scope: !4751)
!4753 = !DILocation(line: 1623, column: 4, scope: !4751)
!4754 = !DILocation(line: 1632, column: 29, scope: !4550)
!4755 = !DILocation(line: 1632, column: 10, scope: !4550)
!4756 = !DILocation(line: 1632, column: 4, scope: !4550)
!4757 = !DILocation(line: 1407, column: 8, scope: !4483)
!4758 = !DILocation(line: 0, scope: !4550)
!4759 = !DILocation(line: 1634, column: 3, scope: !4550)
!4760 = !DILocation(line: 1640, column: 18, scope: !4555)
!4761 = !DILocation(line: 1640, column: 8, scope: !4550)
!4762 = !DILocation(line: 1729, column: 13, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1729, column: 7)
!4764 = !DILocation(line: 1641, column: 22, scope: !4554)
!4765 = !DILocation(line: 0, scope: !4554)
!4766 = !DILocation(line: 1646, column: 21, scope: !4554)
!4767 = !DILocation(line: 1649, column: 13, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4554, file: !2534, line: 1649, column: 9)
!4769 = !DILocation(line: 1649, column: 9, scope: !4554)
!4770 = !DILocation(line: 1650, column: 35, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !2534, line: 1649, column: 34)
!4772 = !DILocation(line: 1650, column: 23, scope: !4771)
!4773 = !DILocation(line: 1651, column: 5, scope: !4771)
!4774 = !DILocation(line: 1660, column: 15, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1660, column: 8)
!4776 = !DILocation(line: 1660, column: 19, scope: !4775)
!4777 = !DILocation(line: 1660, column: 8, scope: !4550)
!4778 = !DILocation(line: 1661, column: 23, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !2534, line: 1660, column: 28)
!4780 = !DILocation(line: 1661, column: 11, scope: !4779)
!4781 = !DILocation(line: 1665, column: 22, scope: !4779)
!4782 = !DILocation(line: 1666, column: 21, scope: !4779)
!4783 = !DILocation(line: 1668, column: 5, scope: !4779)
!4784 = !DILocation(line: 1677, column: 30, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !2534, line: 1676, column: 49)
!4786 = distinct !DILexicalBlock(scope: !4550, file: !2534, line: 1676, column: 8)
!4787 = !DILocation(line: 1677, column: 5, scope: !4785)
!4788 = !DILocation(line: 1680, column: 4, scope: !4550)
!4789 = !DILocation(line: 0, scope: !4731)
!4790 = !DILocation(line: 1597, column: 14, scope: !4552)
!4791 = !DILocation(line: 1699, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1699, column: 7)
!4793 = !DILocation(line: 1699, column: 7, scope: !4483)
!4794 = !DILocation(line: 1725, column: 7, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1725, column: 7)
!4796 = !DILocation(line: 1725, column: 12, scope: !4795)
!4797 = !DILocation(line: 1747, column: 13, scope: !4562)
!4798 = !DILocation(line: 1747, column: 7, scope: !4483)
!4799 = !DILocation(line: 1722, column: 24, scope: !4483)
!4800 = !DILocation(line: 1725, column: 7, scope: !4483)
!4801 = !DILocation(line: 1729, column: 7, scope: !4483)
!4802 = !DILocation(line: 1736, column: 13, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4483, file: !2534, line: 1736, column: 7)
!4804 = !DILocation(line: 1735, column: 19, scope: !4483)
!4805 = !DILocation(line: 1736, column: 7, scope: !4483)
!4806 = !DILocation(line: 1748, column: 10, scope: !4561)
!4807 = !DILocation(line: 1750, column: 15, scope: !4560)
!4808 = !DILocation(line: 1750, column: 8, scope: !4561)
!4809 = !DILocation(line: 0, scope: !4559)
!4810 = !DILocation(line: 1756, column: 15, scope: !4568)
!4811 = !DILocation(line: 1756, column: 9, scope: !4559)
!4812 = !DILocation(line: 1758, column: 7, scope: !4564)
!4813 = !DILocation(line: 0, scope: !4564)
!4814 = !DILocation(line: 1758, column: 7, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4564, file: !2534, line: 1758, column: 7)
!4816 = !DILocation(line: 1764, column: 5, scope: !4559)
!4817 = !DILocation(line: 0, scope: !4561)
!4818 = !DILocation(line: 1764, column: 20, scope: !4559)
!4819 = !DILocation(line: 1764, column: 17, scope: !4559)
!4820 = !DILocation(line: 1765, column: 6, scope: !4570)
!4821 = !DILocation(line: 0, scope: !4570)
!4822 = !DILocation(line: 1765, column: 6, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4570, file: !2534, line: 1765, column: 6)
!4824 = distinct !{!4824, !4816, !4825}
!4825 = !DILocation(line: 1766, column: 5, scope: !4559)
!4826 = !DILocation(line: 1773, column: 12, scope: !4575)
!4827 = !DILocation(line: 1773, column: 7, scope: !4483)
!4828 = !DILocation(line: 1773, column: 7, scope: !4575)
!4829 = !DILocation(line: 1774, column: 4, scope: !4573)
!4830 = !DILocation(line: 0, scope: !4573)
!4831 = !DILocation(line: 1774, column: 4, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4573, file: !2534, line: 1774, column: 4)
!4833 = !DILocation(line: 1818, column: 8, scope: !4579)
!4834 = !DILocation(line: 1818, column: 27, scope: !4579)
!4835 = !DILocation(line: 1818, column: 25, scope: !4579)
!4836 = !DILocation(line: 1818, column: 8, scope: !4580)
!4837 = !DILocation(line: 1819, column: 5, scope: !4577)
!4838 = !DILocation(line: 0, scope: !4577)
!4839 = !DILocation(line: 1819, column: 5, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4577, file: !2534, line: 1819, column: 5)
!4841 = !DILocation(line: 1822, column: 14, scope: !4585)
!4842 = !DILocation(line: 1822, column: 8, scope: !4580)
!4843 = !DILocation(line: 1823, column: 5, scope: !4583)
!4844 = !DILocation(line: 0, scope: !4583)
!4845 = !DILocation(line: 1823, column: 5, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4583, file: !2534, line: 1823, column: 5)
!4847 = !DILocation(line: 1826, column: 20, scope: !4580)
!4848 = !DILocation(line: 1827, column: 4, scope: !4580)
!4849 = !DILocation(line: 0, scope: !4580)
!4850 = !DILocation(line: 1827, column: 21, scope: !4580)
!4851 = !DILocation(line: 1827, column: 18, scope: !4580)
!4852 = !DILocation(line: 1828, column: 5, scope: !4587)
!4853 = !DILocation(line: 0, scope: !4587)
!4854 = !DILocation(line: 1828, column: 5, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4587, file: !2534, line: 1828, column: 5)
!4856 = distinct !{!4856, !4848, !4857}
!4857 = !DILocation(line: 1829, column: 4, scope: !4580)
!4858 = !DILocation(line: 1831, column: 4, scope: !4590)
!4859 = !DILocation(line: 0, scope: !4590)
!4860 = !DILocation(line: 1831, column: 4, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4590, file: !2534, line: 1831, column: 4)
!4862 = !DILocation(line: 1835, column: 16, scope: !4483)
!4863 = !DILocation(line: 1835, column: 3, scope: !4483)
!4864 = !DILocation(line: 1836, column: 4, scope: !4592)
!4865 = !DILocation(line: 0, scope: !4592)
!4866 = !DILocation(line: 1836, column: 4, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4592, file: !2534, line: 1836, column: 4)
!4868 = !DILocation(line: 1837, column: 4, scope: !4593)
!4869 = distinct !{!4869, !4863, !4870}
!4870 = !DILocation(line: 1838, column: 3, scope: !4483)
!4871 = !DILocation(line: 1844, column: 1, scope: !4456)
!4872 = distinct !DISubprogram(name: "extract_conversion", scope: !2534, file: !2534, line: 642, type: !4873, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4875)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!118, !4529, !118}
!4875 = !{!4876, !4877}
!4876 = !DILocalVariable(name: "conv", arg: 1, scope: !4872, file: !2534, line: 642, type: !4529)
!4877 = !DILocalVariable(name: "sp", arg: 2, scope: !4872, file: !2534, line: 643, type: !118)
!4878 = !DILocation(line: 0, scope: !4872)
!4879 = !DILocation(line: 645, column: 10, scope: !4872)
!4880 = !DILocation(line: 653, column: 2, scope: !4872)
!4881 = !DILocation(line: 654, column: 6, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4872, file: !2534, line: 654, column: 6)
!4883 = !DILocation(line: 654, column: 10, scope: !4882)
!4884 = !DILocation(line: 654, column: 6, scope: !4872)
!4885 = !DILocation(line: 655, column: 24, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !2534, line: 654, column: 18)
!4887 = !DILocation(line: 655, column: 19, scope: !4886)
!4888 = !DILocation(line: 656, column: 3, scope: !4886)
!4889 = !DILocation(line: 659, column: 7, scope: !4872)
!4890 = !DILocation(line: 660, column: 7, scope: !4872)
!4891 = !DILocation(line: 661, column: 7, scope: !4872)
!4892 = !DILocation(line: 662, column: 7, scope: !4872)
!4893 = !DILocation(line: 663, column: 7, scope: !4872)
!4894 = !DILocation(line: 665, column: 2, scope: !4872)
!4895 = !DILocation(line: 666, column: 1, scope: !4872)
!4896 = distinct !DISubprogram(name: "outs", scope: !2534, file: !2534, line: 1319, type: !4897, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4899)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{!107, !3611, !106, !118, !118}
!4899 = !{!4900, !4901, !4902, !4903, !4904, !4905}
!4900 = !DILocalVariable(name: "out", arg: 1, scope: !4896, file: !2534, line: 1319, type: !3611)
!4901 = !DILocalVariable(name: "ctx", arg: 2, scope: !4896, file: !2534, line: 1320, type: !106)
!4902 = !DILocalVariable(name: "sp", arg: 3, scope: !4896, file: !2534, line: 1321, type: !118)
!4903 = !DILocalVariable(name: "ep", arg: 4, scope: !4896, file: !2534, line: 1322, type: !118)
!4904 = !DILocalVariable(name: "count", scope: !4896, file: !2534, line: 1324, type: !185)
!4905 = !DILocalVariable(name: "rc", scope: !4906, file: !2534, line: 1327, type: !107)
!4906 = distinct !DILexicalBlock(scope: !4896, file: !2534, line: 1326, column: 45)
!4907 = !DILocation(line: 0, scope: !4896)
!4908 = !DILocation(line: 1326, column: 2, scope: !4896)
!4909 = !DILocation(line: 1324, column: 9, scope: !4896)
!4910 = !DILocation(line: 1326, column: 13, scope: !4896)
!4911 = !DILocation(line: 1326, column: 19, scope: !4896)
!4912 = !DILocation(line: 1327, column: 21, scope: !4906)
!4913 = !DILocation(line: 1326, column: 36, scope: !4896)
!4914 = !DILocation(line: 1326, column: 39, scope: !4896)
!4915 = !DILocation(line: 1327, column: 24, scope: !4906)
!4916 = !DILocation(line: 1327, column: 16, scope: !4906)
!4917 = !DILocation(line: 1327, column: 12, scope: !4906)
!4918 = !DILocation(line: 0, scope: !4906)
!4919 = !DILocation(line: 1329, column: 10, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4906, file: !2534, line: 1329, column: 7)
!4921 = !DILocation(line: 1329, column: 7, scope: !4906)
!4922 = distinct !{!4922, !4908, !4923}
!4923 = !DILocation(line: 1333, column: 2, scope: !4896)
!4924 = !DILocation(line: 1336, column: 1, scope: !4896)
!4925 = distinct !DISubprogram(name: "encode_uint", scope: !2534, file: !2534, line: 788, type: !4926, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4928)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!193, !2556, !4529, !193, !118}
!4928 = !{!4929, !4930, !4931, !4932, !4933, !4934, !4936, !4937}
!4929 = !DILocalVariable(name: "value", arg: 1, scope: !4925, file: !2534, line: 788, type: !2556)
!4930 = !DILocalVariable(name: "conv", arg: 2, scope: !4925, file: !2534, line: 789, type: !4529)
!4931 = !DILocalVariable(name: "bps", arg: 3, scope: !4925, file: !2534, line: 790, type: !193)
!4932 = !DILocalVariable(name: "bpe", arg: 4, scope: !4925, file: !2534, line: 791, type: !118)
!4933 = !DILocalVariable(name: "upcase", scope: !4925, file: !2534, line: 793, type: !145)
!4934 = !DILocalVariable(name: "radix", scope: !4925, file: !2534, line: 794, type: !4935)
!4935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4936 = !DILocalVariable(name: "bp", scope: !4925, file: !2534, line: 795, type: !193)
!4937 = !DILocalVariable(name: "lsv", scope: !4938, file: !2534, line: 798, type: !32)
!4938 = distinct !DILexicalBlock(scope: !4925, file: !2534, line: 797, column: 5)
!4939 = !DILocation(line: 0, scope: !4925)
!4940 = !DILocation(line: 793, column: 35, scope: !4925)
!4941 = !DILocation(line: 793, column: 24, scope: !4925)
!4942 = !DILocation(line: 793, column: 16, scope: !4925)
!4943 = !DILocation(line: 794, column: 29, scope: !4925)
!4944 = !DILocation(line: 795, column: 24, scope: !4925)
!4945 = !DILocation(line: 795, column: 17, scope: !4925)
!4946 = !DILocation(line: 797, column: 2, scope: !4925)
!4947 = !DILocation(line: 802, column: 9, scope: !4938)
!4948 = !DILocation(line: 798, column: 22, scope: !4938)
!4949 = !DILocation(line: 0, scope: !4938)
!4950 = !DILocation(line: 800, column: 16, scope: !4938)
!4951 = !DILocation(line: 800, column: 11, scope: !4938)
!4952 = !DILocation(line: 800, column: 4, scope: !4938)
!4953 = !DILocation(line: 800, column: 9, scope: !4938)
!4954 = !DILocation(line: 803, column: 18, scope: !4925)
!4955 = !DILocation(line: 803, column: 24, scope: !4925)
!4956 = !DILocation(line: 803, column: 2, scope: !4938)
!4957 = distinct !{!4957, !4946, !4958}
!4958 = !DILocation(line: 803, column: 37, scope: !4925)
!4959 = !DILocation(line: 808, column: 12, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4925, file: !2534, line: 808, column: 6)
!4961 = !DILocation(line: 808, column: 6, scope: !4925)
!4962 = !DILocation(line: 809, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4960, file: !2534, line: 808, column: 23)
!4964 = !DILocation(line: 813, column: 3, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !2534, line: 811, column: 27)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !2534, line: 811, column: 14)
!4967 = distinct !DILexicalBlock(scope: !4963, file: !2534, line: 809, column: 7)
!4968 = !DILocation(line: 0, scope: !4967)
!4969 = !DILocation(line: 818, column: 2, scope: !4925)
!4970 = distinct !DISubprogram(name: "store_count", scope: !2534, file: !2534, line: 1280, type: !4971, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4975)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{null, !4973, !106, !107}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 32)
!4974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4496)
!4975 = !{!4976, !4977, !4978}
!4976 = !DILocalVariable(name: "conv", arg: 1, scope: !4970, file: !2534, line: 1280, type: !4973)
!4977 = !DILocalVariable(name: "dp", arg: 2, scope: !4970, file: !2534, line: 1281, type: !106)
!4978 = !DILocalVariable(name: "count", arg: 3, scope: !4970, file: !2534, line: 1282, type: !107)
!4979 = !DILocation(line: 0, scope: !4970)
!4980 = !DILocation(line: 1284, column: 38, scope: !4970)
!4981 = !DILocation(line: 1284, column: 2, scope: !4970)
!4982 = !DILocation(line: 1286, column: 4, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4970, file: !2534, line: 1284, column: 50)
!4984 = !DILocation(line: 1286, column: 14, scope: !4983)
!4985 = !DILocation(line: 1287, column: 3, scope: !4983)
!4986 = !DILocation(line: 1289, column: 24, scope: !4983)
!4987 = !DILocation(line: 1289, column: 22, scope: !4983)
!4988 = !DILocation(line: 1290, column: 3, scope: !4983)
!4989 = !DILocation(line: 1292, column: 18, scope: !4983)
!4990 = !DILocation(line: 1292, column: 4, scope: !4983)
!4991 = !DILocation(line: 1292, column: 16, scope: !4983)
!4992 = !DILocation(line: 1293, column: 3, scope: !4983)
!4993 = !DILocation(line: 1295, column: 4, scope: !4983)
!4994 = !DILocation(line: 1295, column: 15, scope: !4983)
!4995 = !DILocation(line: 1296, column: 3, scope: !4983)
!4996 = !DILocation(line: 1298, column: 22, scope: !4983)
!4997 = !DILocation(line: 1298, column: 4, scope: !4983)
!4998 = !DILocation(line: 1298, column: 20, scope: !4983)
!4999 = !DILocation(line: 1299, column: 3, scope: !4983)
!5000 = !DILocation(line: 1301, column: 21, scope: !4983)
!5001 = !DILocation(line: 1301, column: 4, scope: !4983)
!5002 = !DILocation(line: 1301, column: 19, scope: !4983)
!5003 = !DILocation(line: 1302, column: 3, scope: !4983)
!5004 = !DILocation(line: 1304, column: 4, scope: !4983)
!5005 = !DILocation(line: 1304, column: 17, scope: !4983)
!5006 = !DILocation(line: 1305, column: 3, scope: !4983)
!5007 = !DILocation(line: 1307, column: 4, scope: !4983)
!5008 = !DILocation(line: 1307, column: 20, scope: !4983)
!5009 = !DILocation(line: 1308, column: 3, scope: !4983)
!5010 = !DILocation(line: 1316, column: 1, scope: !4970)
!5011 = distinct !DISubprogram(name: "isupper", scope: !5012, file: !5012, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5013)
!5012 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5013 = !{!5014}
!5014 = !DILocalVariable(name: "a", arg: 1, scope: !5011, file: !5012, line: 16, type: !107)
!5015 = !DILocation(line: 0, scope: !5011)
!5016 = !DILocation(line: 18, column: 29, scope: !5011)
!5017 = !DILocation(line: 18, column: 45, scope: !5011)
!5018 = !DILocation(line: 18, column: 2, scope: !5011)
!5019 = distinct !DISubprogram(name: "conversion_radix", scope: !2534, file: !2534, line: 761, type: !5020, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5022)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!185, !120}
!5022 = !{!5023}
!5023 = !DILocalVariable(name: "specifier", arg: 1, scope: !5019, file: !2534, line: 761, type: !120)
!5024 = !DILocation(line: 0, scope: !5019)
!5025 = !DILocation(line: 763, column: 2, scope: !5019)
!5026 = !DILocation(line: 770, column: 3, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5019, file: !2534, line: 763, column: 21)
!5028 = !DILocation(line: 774, column: 3, scope: !5027)
!5029 = !DILocation(line: 0, scope: !5027)
!5030 = !DILocation(line: 776, column: 1, scope: !5019)
!5031 = distinct !DISubprogram(name: "extract_flags", scope: !2534, file: !2534, line: 339, type: !4873, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5032)
!5032 = !{!5033, !5034, !5035}
!5033 = !DILocalVariable(name: "conv", arg: 1, scope: !5031, file: !2534, line: 339, type: !4529)
!5034 = !DILocalVariable(name: "sp", arg: 2, scope: !5031, file: !2534, line: 340, type: !118)
!5035 = !DILocalVariable(name: "loop", scope: !5031, file: !2534, line: 342, type: !145)
!5036 = !DILocation(line: 0, scope: !5031)
!5037 = !DILocation(line: 344, column: 2, scope: !5031)
!5038 = !DILocation(line: 345, column: 11, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5031, file: !2534, line: 344, column: 5)
!5040 = !DILocation(line: 345, column: 3, scope: !5039)
!5041 = !DILocation(line: 351, column: 4, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5039, file: !2534, line: 345, column: 16)
!5043 = !DILocation(line: 354, column: 4, scope: !5042)
!5044 = !DILocation(line: 357, column: 4, scope: !5042)
!5045 = !DILocation(line: 360, column: 4, scope: !5042)
!5046 = !DILocation(line: 0, scope: !5042)
!5047 = !DILocation(line: 370, column: 12, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5031, file: !2534, line: 370, column: 6)
!5049 = !DILocation(line: 370, column: 22, scope: !5048)
!5050 = !DILocation(line: 371, column: 19, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5048, file: !2534, line: 370, column: 42)
!5052 = !DILocation(line: 372, column: 2, scope: !5051)
!5053 = !DILocation(line: 376, column: 2, scope: !5031)
!5054 = distinct !DISubprogram(name: "extract_width", scope: !2534, file: !2534, line: 388, type: !4873, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5055)
!5055 = !{!5056, !5057, !5058, !5059}
!5056 = !DILocalVariable(name: "conv", arg: 1, scope: !5054, file: !2534, line: 388, type: !4529)
!5057 = !DILocalVariable(name: "sp", arg: 2, scope: !5054, file: !2534, line: 389, type: !118)
!5058 = !DILocalVariable(name: "wp", scope: !5054, file: !2534, line: 398, type: !118)
!5059 = !DILocalVariable(name: "width", scope: !5054, file: !2534, line: 399, type: !185)
!5060 = !DILocation(line: 0, scope: !5054)
!5061 = !DILocation(line: 391, column: 8, scope: !5054)
!5062 = !DILocation(line: 391, column: 22, scope: !5054)
!5063 = !DILocation(line: 393, column: 6, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5054, file: !2534, line: 393, column: 6)
!5065 = !DILocation(line: 393, column: 10, scope: !5064)
!5066 = !DILocation(line: 393, column: 6, scope: !5054)
!5067 = !DILocation(line: 394, column: 20, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !2534, line: 393, column: 18)
!5069 = !DILocation(line: 395, column: 10, scope: !5068)
!5070 = !DILocation(line: 395, column: 3, scope: !5068)
!5071 = !DILocation(line: 399, column: 17, scope: !5054)
!5072 = !DILocation(line: 401, column: 6, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5054, file: !2534, line: 401, column: 6)
!5074 = !DILocation(line: 401, column: 9, scope: !5073)
!5075 = !DILocation(line: 401, column: 6, scope: !5054)
!5076 = !DILocation(line: 402, column: 23, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !2534, line: 401, column: 16)
!5078 = !DILocation(line: 403, column: 9, scope: !5077)
!5079 = !DILocation(line: 403, column: 21, scope: !5077)
!5080 = !DILocation(line: 405, column: 11, scope: !5077)
!5081 = !DILocation(line: 404, column: 21, scope: !5077)
!5082 = !DILocation(line: 406, column: 2, scope: !5077)
!5083 = !DILocation(line: 409, column: 1, scope: !5054)
!5084 = distinct !DISubprogram(name: "extract_prec", scope: !2534, file: !2534, line: 420, type: !4873, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5085)
!5085 = !{!5086, !5087, !5088}
!5086 = !DILocalVariable(name: "conv", arg: 1, scope: !5084, file: !2534, line: 420, type: !4529)
!5087 = !DILocalVariable(name: "sp", arg: 2, scope: !5084, file: !2534, line: 421, type: !118)
!5088 = !DILocalVariable(name: "prec", scope: !5084, file: !2534, line: 435, type: !185)
!5089 = !DILocation(line: 0, scope: !5084)
!5090 = !DILocation(line: 423, column: 24, scope: !5084)
!5091 = !DILocation(line: 423, column: 28, scope: !5084)
!5092 = !DILocation(line: 423, column: 8, scope: !5084)
!5093 = !DILocation(line: 423, column: 21, scope: !5084)
!5094 = !DILocation(line: 425, column: 6, scope: !5084)
!5095 = !DILocation(line: 428, column: 2, scope: !5084)
!5096 = !DILocation(line: 430, column: 6, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5084, file: !2534, line: 430, column: 6)
!5098 = !DILocation(line: 430, column: 10, scope: !5097)
!5099 = !DILocation(line: 430, column: 6, scope: !5084)
!5100 = !DILocation(line: 431, column: 19, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !2534, line: 430, column: 18)
!5102 = !DILocation(line: 432, column: 10, scope: !5101)
!5103 = !DILocation(line: 432, column: 3, scope: !5101)
!5104 = !DILocation(line: 435, column: 16, scope: !5084)
!5105 = !DILocation(line: 437, column: 8, scope: !5084)
!5106 = !DILocation(line: 437, column: 19, scope: !5084)
!5107 = !DILocation(line: 439, column: 10, scope: !5084)
!5108 = !DILocation(line: 438, column: 20, scope: !5084)
!5109 = !DILocation(line: 441, column: 9, scope: !5084)
!5110 = !DILocation(line: 442, column: 1, scope: !5084)
!5111 = distinct !DISubprogram(name: "extract_length", scope: !2534, file: !2534, line: 453, type: !4873, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5112)
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "conv", arg: 1, scope: !5111, file: !2534, line: 453, type: !4529)
!5114 = !DILocalVariable(name: "sp", arg: 2, scope: !5111, file: !2534, line: 454, type: !118)
!5115 = !DILocation(line: 0, scope: !5111)
!5116 = !DILocation(line: 456, column: 10, scope: !5111)
!5117 = !DILocation(line: 456, column: 2, scope: !5111)
!5118 = !DILocation(line: 458, column: 8, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !2534, line: 458, column: 7)
!5120 = distinct !DILexicalBlock(scope: !5111, file: !2534, line: 456, column: 15)
!5121 = !DILocation(line: 458, column: 7, scope: !5119)
!5122 = !DILocation(line: 458, column: 13, scope: !5119)
!5123 = !DILocation(line: 0, scope: !5119)
!5124 = !DILocation(line: 458, column: 7, scope: !5120)
!5125 = !DILocation(line: 459, column: 21, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5119, file: !2534, line: 458, column: 21)
!5127 = !DILocation(line: 460, column: 4, scope: !5126)
!5128 = !DILocation(line: 461, column: 3, scope: !5126)
!5129 = !DILocation(line: 462, column: 21, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5119, file: !2534, line: 461, column: 10)
!5131 = !DILocation(line: 466, column: 8, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5120, file: !2534, line: 466, column: 7)
!5133 = !DILocation(line: 466, column: 7, scope: !5132)
!5134 = !DILocation(line: 466, column: 13, scope: !5132)
!5135 = !DILocation(line: 0, scope: !5132)
!5136 = !DILocation(line: 466, column: 7, scope: !5120)
!5137 = !DILocation(line: 467, column: 21, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5132, file: !2534, line: 466, column: 21)
!5139 = !DILocation(line: 468, column: 4, scope: !5138)
!5140 = !DILocation(line: 469, column: 3, scope: !5138)
!5141 = !DILocation(line: 470, column: 21, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5132, file: !2534, line: 469, column: 10)
!5143 = !DILocation(line: 474, column: 9, scope: !5120)
!5144 = !DILocation(line: 474, column: 20, scope: !5120)
!5145 = !DILocation(line: 475, column: 3, scope: !5120)
!5146 = !DILocation(line: 476, column: 3, scope: !5120)
!5147 = !DILocation(line: 478, column: 9, scope: !5120)
!5148 = !DILocation(line: 478, column: 20, scope: !5120)
!5149 = !DILocation(line: 479, column: 3, scope: !5120)
!5150 = !DILocation(line: 480, column: 3, scope: !5120)
!5151 = !DILocation(line: 482, column: 9, scope: !5120)
!5152 = !DILocation(line: 482, column: 20, scope: !5120)
!5153 = !DILocation(line: 483, column: 3, scope: !5120)
!5154 = !DILocation(line: 484, column: 3, scope: !5120)
!5155 = !DILocation(line: 486, column: 9, scope: !5120)
!5156 = !DILocation(line: 486, column: 20, scope: !5120)
!5157 = !DILocation(line: 487, column: 3, scope: !5120)
!5158 = !DILocation(line: 492, column: 21, scope: !5120)
!5159 = !DILocation(line: 493, column: 3, scope: !5120)
!5160 = !DILocation(line: 495, column: 9, scope: !5120)
!5161 = !DILocation(line: 495, column: 20, scope: !5120)
!5162 = !DILocation(line: 496, column: 3, scope: !5120)
!5163 = !DILocation(line: 498, column: 2, scope: !5111)
!5164 = distinct !DISubprogram(name: "extract_specifier", scope: !2534, file: !2534, line: 513, type: !4873, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5165)
!5165 = !{!5166, !5167, !5168, !5169}
!5166 = !DILocalVariable(name: "conv", arg: 1, scope: !5164, file: !2534, line: 513, type: !4529)
!5167 = !DILocalVariable(name: "sp", arg: 2, scope: !5164, file: !2534, line: 514, type: !118)
!5168 = !DILocalVariable(name: "unsupported", scope: !5164, file: !2534, line: 516, type: !145)
!5169 = !DILabel(scope: !5170, name: "int_conv", file: !2534, line: 526)
!5170 = distinct !DILexicalBlock(scope: !5164, file: !2534, line: 520, column: 27)
!5171 = !DILocation(line: 0, scope: !5164)
!5172 = !DILocation(line: 518, column: 20, scope: !5164)
!5173 = !DILocation(line: 518, column: 8, scope: !5164)
!5174 = !DILocation(line: 518, column: 18, scope: !5164)
!5175 = !DILocation(line: 520, column: 2, scope: !5164)
!5176 = !DILocation(line: 525, column: 3, scope: !5170)
!5177 = !DILocation(line: 0, scope: !5170)
!5178 = !DILocation(line: 526, column: 1, scope: !5170)
!5179 = !DILocation(line: 528, column: 24, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5170, file: !2534, line: 528, column: 7)
!5181 = !DILocation(line: 528, column: 7, scope: !5170)
!5182 = !DILocation(line: 535, column: 23, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5170, file: !2534, line: 535, column: 7)
!5184 = !DILocation(line: 535, column: 7, scope: !5170)
!5185 = !DILocation(line: 536, column: 36, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !2534, line: 535, column: 31)
!5187 = !DILocation(line: 537, column: 3, scope: !5186)
!5188 = !DILocation(line: 570, column: 9, scope: !5170)
!5189 = !DILocation(line: 570, column: 23, scope: !5170)
!5190 = !DILocation(line: 575, column: 4, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !2534, line: 573, column: 48)
!5192 = distinct !DILexicalBlock(scope: !5170, file: !2534, line: 573, column: 7)
!5193 = !DILocation(line: 603, column: 9, scope: !5170)
!5194 = !DILocation(line: 603, column: 23, scope: !5170)
!5195 = !DILocation(line: 605, column: 24, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5170, file: !2534, line: 605, column: 7)
!5197 = !DILocation(line: 605, column: 7, scope: !5170)
!5198 = !DILocation(line: 612, column: 9, scope: !5170)
!5199 = !DILocation(line: 612, column: 23, scope: !5170)
!5200 = !DILocation(line: 619, column: 24, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5170, file: !2534, line: 619, column: 7)
!5202 = !DILocation(line: 619, column: 7, scope: !5170)
!5203 = !DILocation(line: 625, column: 9, scope: !5170)
!5204 = !DILocation(line: 625, column: 17, scope: !5170)
!5205 = !DILocation(line: 626, column: 3, scope: !5170)
!5206 = !DILocation(line: 629, column: 20, scope: !5164)
!5207 = !DILocation(line: 629, column: 8, scope: !5164)
!5208 = !DILocation(line: 518, column: 23, scope: !5164)
!5209 = !DILocation(line: 631, column: 2, scope: !5164)
!5210 = distinct !DISubprogram(name: "extract_decimal", scope: !2534, file: !2534, line: 318, type: !5211, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5213)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!185, !184}
!5213 = !{!5214, !5215, !5216}
!5214 = !DILocalVariable(name: "str", arg: 1, scope: !5210, file: !2534, line: 318, type: !184)
!5215 = !DILocalVariable(name: "sp", scope: !5210, file: !2534, line: 320, type: !118)
!5216 = !DILocalVariable(name: "val", scope: !5210, file: !2534, line: 321, type: !185)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 320, column: 19, scope: !5210)
!5219 = !DILocation(line: 323, column: 37, scope: !5210)
!5220 = !DILocation(line: 323, column: 17, scope: !5210)
!5221 = !DILocation(line: 323, column: 9, scope: !5210)
!5222 = !DILocation(line: 323, column: 2, scope: !5210)
!5223 = !DILocation(line: 324, column: 13, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5210, file: !2534, line: 323, column: 43)
!5225 = !DILocation(line: 324, column: 24, scope: !5224)
!5226 = !DILocation(line: 324, column: 19, scope: !5224)
!5227 = !DILocation(line: 324, column: 27, scope: !5224)
!5228 = distinct !{!5228, !5222, !5229}
!5229 = !DILocation(line: 325, column: 2, scope: !5210)
!5230 = !DILocation(line: 326, column: 7, scope: !5210)
!5231 = !DILocation(line: 327, column: 2, scope: !5210)
!5232 = distinct !DISubprogram(name: "isdigit", scope: !5012, file: !5012, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5233)
!5233 = !{!5234}
!5234 = !DILocalVariable(name: "a", arg: 1, scope: !5232, file: !5012, line: 43, type: !107)
!5235 = !DILocation(line: 0, scope: !5232)
!5236 = !DILocation(line: 45, column: 29, scope: !5232)
!5237 = !DILocation(line: 45, column: 45, scope: !5232)
!5238 = !DILocation(line: 45, column: 2, scope: !5232)
!5239 = distinct !DISubprogram(name: "assert_post_action", scope: !5240, file: !5240, line: 26, type: !5241, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5243)
!5240 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5241 = !DISubroutineType(types: !5242)
!5242 = !{null, !118, !32}
!5243 = !{!5244, !5245}
!5244 = !DILocalVariable(name: "file", arg: 1, scope: !5239, file: !5240, line: 26, type: !118)
!5245 = !DILocalVariable(name: "line", arg: 2, scope: !5239, file: !5240, line: 26, type: !32)
!5246 = !DILocation(line: 0, scope: !5239)
!5247 = !DILocation(line: 43, column: 2, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5239, file: !5240, line: 43, column: 2)
!5249 = !{i64 2154161356, i64 2154161372, i64 2154161398, i64 2154161426, i64 2154161446}
!5250 = !DILocation(line: 44, column: 1, scope: !5239)
!5251 = distinct !DISubprogram(name: "assert_print", scope: !5240, file: !5240, line: 46, type: !4221, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5252)
!5252 = !{!5253, !5254}
!5253 = !DILocalVariable(name: "fmt", arg: 1, scope: !5251, file: !5240, line: 46, type: !118)
!5254 = !DILocalVariable(name: "ap", scope: !5251, file: !5240, line: 48, type: !5255)
!5255 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3231, line: 99, baseType: !5256)
!5256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3231, line: 40, baseType: !5257)
!5257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5240, baseType: !5258)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5259)
!5259 = !{!5260}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5258, file: !5240, line: 48, baseType: !106, size: 32)
!5261 = !DILocation(line: 0, scope: !5251)
!5262 = !DILocation(line: 48, column: 2, scope: !5251)
!5263 = !DILocation(line: 48, column: 10, scope: !5251)
!5264 = !DILocation(line: 50, column: 2, scope: !5251)
!5265 = !DILocation(line: 52, column: 2, scope: !5251)
!5266 = !DILocation(line: 54, column: 2, scope: !5251)
!5267 = !DILocation(line: 55, column: 1, scope: !5251)
!5268 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5269, file: !5269, line: 9, type: !3111, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2182)
!5269 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!5270 = !DILocation(line: 11, column: 1, scope: !5268)
!5271 = !{i64 2147566617, i64 2147566660, i64 2147566700}
!5272 = !DILocation(line: 12, column: 1, scope: !5268)
!5273 = !{i64 2147570844, i64 2147570887, i64 2147570927}
!5274 = !DILocation(line: 13, column: 1, scope: !5268)
!5275 = !{i64 2147571053, i64 2147571096, i64 2147571136}
!5276 = !DILocation(line: 14, column: 1, scope: !5268)
!5277 = !{i64 2147571222, i64 2147571265, i64 2147571305}
!5278 = !DILocation(line: 15, column: 1, scope: !5268)
!5279 = !{i64 2147571385, i64 2147571428, i64 2147571468}
!5280 = !DILocation(line: 16, column: 1, scope: !5268)
!5281 = !{i64 2147571569, i64 2147571612, i64 2147571652}
!5282 = !DILocation(line: 17, column: 1, scope: !5268)
!5283 = !{i64 2147571748, i64 2147571791, i64 2147571831}
!5284 = !DILocation(line: 18, column: 1, scope: !5268)
!5285 = !{i64 2147571990, i64 2147572033, i64 2147572073}
!5286 = !DILocation(line: 19, column: 1, scope: !5268)
!5287 = !{i64 2147572225, i64 2147572268, i64 2147572308}
!5288 = !DILocation(line: 20, column: 1, scope: !5268)
!5289 = !{i64 2147572411, i64 2147572454, i64 2147572494}
!5290 = !DILocation(line: 21, column: 1, scope: !5268)
!5291 = !{i64 2147572627, i64 2147572670, i64 2147572710}
!5292 = !DILocation(line: 22, column: 1, scope: !5268)
!5293 = !{i64 2147572830, i64 2147572873, i64 2147572913}
!5294 = !DILocation(line: 23, column: 1, scope: !5268)
!5295 = !{i64 2147573033, i64 2147573076, i64 2147573116}
!5296 = !DILocation(line: 24, column: 1, scope: !5268)
!5297 = !{i64 2147573208, i64 2147573251, i64 2147573291}
!5298 = !DILocation(line: 25, column: 1, scope: !5268)
!5299 = !{i64 2147573416, i64 2147573459, i64 2147573499}
!5300 = !DILocation(line: 26, column: 1, scope: !5268)
!5301 = !{i64 2147573620, i64 2147573663, i64 2147573703}
!5302 = !DILocation(line: 27, column: 1, scope: !5268)
!5303 = !{i64 2147573813, i64 2147573856, i64 2147573896}
!5304 = !DILocation(line: 28, column: 1, scope: !5268)
!5305 = !{i64 2147574015, i64 2147574058, i64 2147574098}
!5306 = !DILocation(line: 29, column: 1, scope: !5268)
!5307 = !{i64 2147574214, i64 2147574257, i64 2147574297}
!5308 = !DILocation(line: 30, column: 1, scope: !5268)
!5309 = !{i64 2147574441, i64 2147574484, i64 2147574524}
!5310 = !DILocation(line: 31, column: 1, scope: !5268)
!5311 = !{i64 2147574643, i64 2147574686, i64 2147574726}
!5312 = !DILocation(line: 32, column: 1, scope: !5268)
!5313 = !{i64 2147574858, i64 2147574901, i64 2147574941}
!5314 = !DILocation(line: 33, column: 1, scope: !5268)
!5315 = !{i64 2147575075, i64 2147575118, i64 2147575158}
!5316 = !DILocation(line: 34, column: 1, scope: !5268)
!5317 = !{i64 2147575247, i64 2147575290, i64 2147575330}
!5318 = !DILocation(line: 35, column: 1, scope: !5268)
!5319 = !{i64 2147575449, i64 2147575492, i64 2147575532}
!5320 = !DILocation(line: 36, column: 1, scope: !5268)
!5321 = !{i64 2147575675, i64 2147575718, i64 2147575758}
!5322 = !DILocation(line: 37, column: 1, scope: !5268)
!5323 = !{i64 2147575874, i64 2147575917, i64 2147575957}
!5324 = !DILocation(line: 38, column: 1, scope: !5268)
!5325 = !{i64 2147576049, i64 2147576092, i64 2147576132}
!5326 = !DILocation(line: 39, column: 1, scope: !5268)
!5327 = !{i64 2147576302, i64 2147576345, i64 2147576385}
!5328 = !DILocation(line: 40, column: 1, scope: !5268)
!5329 = !{i64 2147576543, i64 2147576586, i64 2147576626}
!5330 = !DILocation(line: 41, column: 1, scope: !5268)
!5331 = !{i64 2147576778, i64 2147576821, i64 2147576861}
!5332 = !DILocation(line: 42, column: 1, scope: !5268)
!5333 = !{i64 2147577010, i64 2147577053, i64 2147577093}
!5334 = !DILocation(line: 43, column: 1, scope: !5268)
!5335 = !{i64 2147577257, i64 2147577300, i64 2147577340}
!5336 = !DILocation(line: 44, column: 1, scope: !5268)
!5337 = !{i64 2147577483, i64 2147577526, i64 2147577566}
!5338 = !DILocation(line: 45, column: 1, scope: !5268)
!5339 = !{i64 2147577709, i64 2147577752, i64 2147577792}
!5340 = !DILocation(line: 46, column: 1, scope: !5268)
!5341 = !{i64 2147577968, i64 2147578011, i64 2147578051}
!5342 = !DILocation(line: 47, column: 1, scope: !5268)
!5343 = !{i64 2147578194, i64 2147578237, i64 2147578277}
!5344 = !DILocation(line: 48, column: 1, scope: !5268)
!5345 = !{i64 2147578429, i64 2147578472, i64 2147578512}
!5346 = !DILocation(line: 49, column: 1, scope: !5268)
!5347 = !{i64 2147578667, i64 2147578710, i64 2147578750}
!5348 = !DILocation(line: 50, column: 1, scope: !5268)
!5349 = !{i64 2147578941, i64 2147578984, i64 2147579024}
!5350 = !DILocation(line: 51, column: 1, scope: !5268)
!5351 = !{i64 2147579179, i64 2147579222, i64 2147579262}
!5352 = !DILocation(line: 52, column: 1, scope: !5268)
!5353 = !{i64 2147579432, i64 2147579475, i64 2147579515}
!5354 = !DILocation(line: 53, column: 1, scope: !5268)
!5355 = !{i64 2147583737, i64 2147583780, i64 2147583820}
!5356 = !DILocation(line: 54, column: 1, scope: !5268)
!5357 = !{i64 2147583987, i64 2147584030, i64 2147584070}
!5358 = !DILocation(line: 55, column: 1, scope: !5268)
!5359 = !{i64 2147584228, i64 2147584271, i64 2147584311}
!5360 = !DILocation(line: 56, column: 1, scope: !5268)
!5361 = !{i64 2147584475, i64 2147584518, i64 2147584558}
!5362 = !DILocation(line: 57, column: 1, scope: !5268)
!5363 = !{i64 2147584710, i64 2147584753, i64 2147584793}
!5364 = !DILocation(line: 58, column: 1, scope: !5268)
!5365 = !{i64 2147584945, i64 2147584988, i64 2147585028}
!5366 = !DILocation(line: 59, column: 1, scope: !5268)
!5367 = !{i64 2147585180, i64 2147585223, i64 2147585263}
!5368 = !DILocation(line: 60, column: 1, scope: !5268)
!5369 = !{i64 2147585418, i64 2147585461, i64 2147585501}
!5370 = !DILocation(line: 61, column: 1, scope: !5268)
!5371 = !{i64 2147585659, i64 2147585702, i64 2147585742}
!5372 = !DILocation(line: 62, column: 1, scope: !5268)
!5373 = !{i64 2147585939, i64 2147585982, i64 2147586022}
!5374 = !DILocation(line: 63, column: 1, scope: !5268)
!5375 = !{i64 2147586198, i64 2147586241, i64 2147586281}
!5376 = !DILocation(line: 64, column: 1, scope: !5268)
!5377 = !{i64 2147586436, i64 2147586479, i64 2147586519}
!5378 = !DILocation(line: 65, column: 1, scope: !5268)
!5379 = !{i64 2147586686, i64 2147586729, i64 2147586769}
!5380 = !DILocation(line: 66, column: 1, scope: !5268)
!5381 = !{i64 2147586915, i64 2147586958, i64 2147586998}
!5382 = !DILocation(line: 67, column: 1, scope: !5268)
!5383 = !{i64 2147587123, i64 2147587166, i64 2147587206}
!5384 = !DILocation(line: 68, column: 1, scope: !5268)
!5385 = !{i64 2147587334, i64 2147587377, i64 2147587417}
!5386 = !DILocation(line: 69, column: 1, scope: !5268)
!5387 = !{i64 2147587569, i64 2147587612, i64 2147587652}
!5388 = !DILocation(line: 70, column: 1, scope: !5268)
!5389 = !{i64 2147587798, i64 2147587841, i64 2147587881}
!5390 = !DILocation(line: 71, column: 1, scope: !5268)
!5391 = !{i64 2147588015, i64 2147588058, i64 2147588098}
!5392 = !DILocation(line: 72, column: 1, scope: !5268)
!5393 = !{i64 2147588244, i64 2147588287, i64 2147588327}
!5394 = !DILocation(line: 73, column: 1, scope: !5268)
!5395 = !{i64 2147588482, i64 2147588525, i64 2147588565}
!5396 = !DILocation(line: 74, column: 1, scope: !5268)
!5397 = !{i64 2147588714, i64 2147588757, i64 2147588797}
!5398 = !DILocation(line: 75, column: 1, scope: !5268)
!5399 = !{i64 2147588940, i64 2147588983, i64 2147589023}
!5400 = !DILocation(line: 76, column: 1, scope: !5268)
!5401 = !{i64 2147589157, i64 2147589200, i64 2147589240}
!5402 = !DILocation(line: 77, column: 1, scope: !5268)
!5403 = !{i64 2147589389, i64 2147589432, i64 2147589472}
!5404 = !DILocation(line: 78, column: 1, scope: !5268)
!5405 = !{i64 2147589615, i64 2147589658, i64 2147589698}
!5406 = !DILocation(line: 79, column: 1, scope: !5268)
!5407 = !{i64 2147589829, i64 2147589872, i64 2147589912}
!5408 = !DILocation(line: 80, column: 1, scope: !5268)
!5409 = !{i64 2147590049, i64 2147590092, i64 2147590132}
!5410 = !DILocation(line: 81, column: 1, scope: !5268)
!5411 = !{i64 2147590281, i64 2147590324, i64 2147590364}
!5412 = !DILocation(line: 82, column: 1, scope: !5268)
!5413 = !{i64 2147590489, i64 2147590532, i64 2147590572}
!5414 = !DILocation(line: 83, column: 1, scope: !5268)
!5415 = !{i64 2147590694, i64 2147590737, i64 2147590777}
!5416 = !DILocation(line: 84, column: 1, scope: !5268)
!5417 = !{i64 2147590911, i64 2147590954, i64 2147590994}
!5418 = !DILocation(line: 85, column: 1, scope: !5268)
!5419 = !{i64 2147591125, i64 2147591168, i64 2147591208}
!5420 = !DILocation(line: 86, column: 1, scope: !5268)
!5421 = !{i64 2147591351, i64 2147591394, i64 2147591434}
!5422 = !DILocation(line: 87, column: 1, scope: !5268)
!5423 = !{i64 2147591571, i64 2147591614, i64 2147591654}
!5424 = !DILocation(line: 88, column: 1, scope: !5268)
!5425 = !{i64 2147595837, i64 2147595880, i64 2147595920}
!5426 = !DILocation(line: 89, column: 1, scope: !5268)
!5427 = !{i64 2147596069, i64 2147596112, i64 2147596152}
!5428 = !DILocation(line: 90, column: 1, scope: !5268)
!5429 = !{i64 2147596304, i64 2147596347, i64 2147596387}
!5430 = !DILocation(line: 91, column: 1, scope: !5268)
!5431 = !{i64 2147596554, i64 2147596597, i64 2147596637}
!5432 = !DILocation(line: 92, column: 1, scope: !5268)
!5433 = !{i64 2147596804, i64 2147596847, i64 2147596887}
!5434 = !DILocation(line: 93, column: 1, scope: !5268)
!5435 = !{i64 2147597042, i64 2147597085, i64 2147597125}
!5436 = !DILocation(line: 94, column: 1, scope: !5268)
!5437 = !{i64 2147597253, i64 2147597296, i64 2147597336}
!5438 = !DILocation(line: 95, column: 1, scope: !5268)
!5439 = !{i64 2147597470, i64 2147597513, i64 2147597553}
!5440 = !DILocation(line: 96, column: 1, scope: !5268)
!5441 = !{i64 2147597666, i64 2147597709, i64 2147597749}
!5442 = !DILocation(line: 97, column: 1, scope: !5268)
!5443 = !{i64 2147597868, i64 2147597911, i64 2147597951}
!5444 = !DILocation(line: 98, column: 1, scope: !5268)
!5445 = !{i64 2147598061, i64 2147598104, i64 2147598144}
!5446 = !DILocation(line: 99, column: 1, scope: !5268)
!5447 = !{i64 2147598269, i64 2147598312, i64 2147598352}
!5448 = !DILocation(line: 100, column: 1, scope: !5268)
!5449 = !{i64 2147598465, i64 2147598508, i64 2147598548}
!5450 = !DILocation(line: 101, column: 1, scope: !5268)
!5451 = !{i64 2147598667, i64 2147598710, i64 2147598750}
!5452 = !DILocation(line: 102, column: 1, scope: !5268)
!5453 = !{i64 2147598878, i64 2147598921, i64 2147598961}
!5454 = !DILocation(line: 103, column: 1, scope: !5268)
!5455 = !{i64 2147599077, i64 2147599120, i64 2147599160}
!5456 = !DILocation(line: 104, column: 1, scope: !5268)
!5457 = !{i64 2147599252, i64 2147599295, i64 2147599335}
!5458 = !DILocation(line: 105, column: 1, scope: !5268)
!5459 = !{i64 2147599436, i64 2147599479, i64 2147599519}
!5460 = !DILocation(line: 106, column: 1, scope: !5268)
!5461 = !{i64 2147599638, i64 2147599681, i64 2147599721}
!5462 = !DILocation(line: 107, column: 1, scope: !5268)
!5463 = !{i64 2147599837, i64 2147599880, i64 2147599920}
!5464 = !DILocation(line: 108, column: 1, scope: !5268)
!5465 = !{i64 2147600042, i64 2147600085, i64 2147600125}
!5466 = !DILocation(line: 109, column: 1, scope: !5268)
!5467 = !{i64 2147600235, i64 2147600278, i64 2147600318}
!5468 = !DILocation(line: 110, column: 1, scope: !5268)
!5469 = !{i64 2147600401, i64 2147600444, i64 2147600484}
!5470 = !DILocation(line: 111, column: 1, scope: !5268)
!5471 = !{i64 2147600585, i64 2147600628, i64 2147600668}
!5472 = !DILocation(line: 112, column: 1, scope: !5268)
!5473 = !{i64 2147600775, i64 2147600818, i64 2147600858}
!5474 = !DILocation(line: 113, column: 1, scope: !5268)
!5475 = !{i64 2147600959, i64 2147601002, i64 2147601042}
!5476 = !DILocation(line: 114, column: 1, scope: !5268)
!5477 = !{i64 2147601173, i64 2147601216, i64 2147601256}
!5478 = !DILocation(line: 115, column: 1, scope: !5268)
!5479 = !{i64 2147601384, i64 2147601427, i64 2147601467}
!5480 = !DILocation(line: 116, column: 1, scope: !5268)
!5481 = !{i64 2147601607, i64 2147601650, i64 2147601690}
!5482 = !DILocation(line: 117, column: 1, scope: !5268)
!5483 = !{i64 2147601791, i64 2147601834, i64 2147601874}
!5484 = !DILocation(line: 118, column: 1, scope: !5268)
!5485 = !{i64 2147602005, i64 2147602048, i64 2147602088}
!5486 = !DILocation(line: 119, column: 1, scope: !5268)
!5487 = !{i64 2147602171, i64 2147602214, i64 2147602254}
!5488 = !DILocation(line: 120, column: 1, scope: !5268)
!5489 = !{i64 2147602352, i64 2147602395, i64 2147602435}
!5490 = !DILocation(line: 121, column: 1, scope: !5268)
!5491 = !{i64 2147602545, i64 2147602588, i64 2147602628}
!5492 = !DILocation(line: 122, column: 1, scope: !5268)
!5493 = !{i64 2147602771, i64 2147602814, i64 2147602854}
!5494 = !DILocation(line: 123, column: 1, scope: !5268)
!5495 = !{i64 2147602985, i64 2147603028, i64 2147603068}
!5496 = !DILocation(line: 124, column: 1, scope: !5268)
!5497 = !{i64 2147603211, i64 2147603254, i64 2147603294}
!5498 = !DILocation(line: 125, column: 1, scope: !5268)
!5499 = !{i64 2147603428, i64 2147603471, i64 2147603511}
!5500 = !DILocation(line: 126, column: 1, scope: !5268)
!5501 = !{i64 2147603705, i64 2147603748, i64 2147603788}
!5502 = !DILocation(line: 127, column: 1, scope: !5268)
!5503 = !{i64 2147603931, i64 2147603974, i64 2147604014}
!5504 = !DILocation(line: 128, column: 1, scope: !5268)
!5505 = !{i64 2147604139, i64 2147604182, i64 2147604222}
!5506 = !DILocation(line: 129, column: 1, scope: !5268)
!5507 = !{i64 2147604335, i64 2147604378, i64 2147604418}
!5508 = !DILocation(line: 130, column: 1, scope: !5268)
!5509 = !{i64 2147604600, i64 2147604643, i64 2147604683}
!5510 = !DILocation(line: 131, column: 1, scope: !5268)
!5511 = !{i64 2147604814, i64 2147604857, i64 2147604897}
!5512 = !DILocation(line: 132, column: 1, scope: !5268)
!5513 = !{i64 2147609050, i64 2147609093, i64 2147609133}
!5514 = !DILocation(line: 133, column: 1, scope: !5268)
!5515 = !{i64 2147609304, i64 2147609347, i64 2147609387}
!5516 = !DILocation(line: 134, column: 1, scope: !5268)
!5517 = !{i64 2147609503, i64 2147609546, i64 2147609586}
!5518 = !DILocation(line: 135, column: 1, scope: !5268)
!5519 = !{i64 2147609745, i64 2147609788, i64 2147609828}
!5520 = !DILocation(line: 136, column: 1, scope: !5268)
!5521 = !{i64 2147609908, i64 2147609951, i64 2147609991}
!5522 = !DILocation(line: 137, column: 1, scope: !5268)
!5523 = !{i64 2147610095, i64 2147610138, i64 2147610178}
!5524 = !DILocation(line: 138, column: 1, scope: !5268)
!5525 = !{i64 2147610303, i64 2147610346, i64 2147610386}
!5526 = !DILocation(line: 139, column: 1, scope: !5268)
!5527 = !{i64 2147610499, i64 2147610542, i64 2147610582}
!5528 = !DILocation(line: 140, column: 1, scope: !5268)
!5529 = !{i64 2147610692, i64 2147610735, i64 2147610775}
!5530 = !DILocation(line: 141, column: 1, scope: !5268)
!5531 = !{i64 2147610874, i64 2147610917, i64 2147610957}
!5532 = !DILocation(line: 142, column: 1, scope: !5268)
!5533 = !{i64 2147611088, i64 2147611131, i64 2147611171}
!5534 = !DILocation(line: 143, column: 1, scope: !5268)
!5535 = !{i64 2147611299, i64 2147611342, i64 2147611382}
!5536 = !DILocation(line: 144, column: 1, scope: !5268)
!5537 = !{i64 2147611519, i64 2147611562, i64 2147611602}
!5538 = !DILocation(line: 145, column: 1, scope: !5268)
!5539 = !{i64 2147611726, i64 2147611769, i64 2147611809}
!5540 = !DILocation(line: 146, column: 1, scope: !5268)
!5541 = !{i64 2147611999, i64 2147612042, i64 2147612082}
!5542 = !DILocation(line: 147, column: 1, scope: !5268)
!5543 = !{i64 2147612247, i64 2147612290, i64 2147612330}
!5544 = !DILocation(line: 148, column: 1, scope: !5268)
!5545 = !{i64 2147612446, i64 2147612489, i64 2147612529}
!5546 = !DILocation(line: 149, column: 1, scope: !5268)
!5547 = !{i64 2147612681, i64 2147612724, i64 2147612764}
!5548 = !DILocation(line: 150, column: 1, scope: !5268)
!5549 = !{i64 2147612931, i64 2147612974, i64 2147613014}
!5550 = !DILocation(line: 151, column: 1, scope: !5268)
!5551 = !{i64 2147613133, i64 2147613176, i64 2147613216}
!5552 = !DILocation(line: 152, column: 1, scope: !5268)
!5553 = !{i64 2147613356, i64 2147613399, i64 2147613439}
!5554 = !DILocation(line: 153, column: 1, scope: !5268)
!5555 = !{i64 2147613570, i64 2147613613, i64 2147613653}
!5556 = !DILocation(line: 154, column: 1, scope: !5268)
!5557 = !{i64 2147613814, i64 2147613857, i64 2147613897}
!5558 = !DILocation(line: 155, column: 1, scope: !5268)
!5559 = !{i64 2147614043, i64 2147614086, i64 2147614126}
!5560 = !DILocation(line: 156, column: 1, scope: !5268)
!5561 = !{i64 2147614272, i64 2147614315, i64 2147614355}
!5562 = !DILocation(line: 157, column: 1, scope: !5268)
!5563 = !{i64 2147614480, i64 2147614523, i64 2147614563}
!5564 = !DILocation(line: 158, column: 1, scope: !5268)
!5565 = !{i64 2147614718, i64 2147614761, i64 2147614801}
!5566 = !DILocation(line: 159, column: 1, scope: !5268)
!5567 = !{i64 2147614944, i64 2147614987, i64 2147615027}
!5568 = !DILocation(line: 160, column: 1, scope: !5268)
!5569 = !{i64 2147615203, i64 2147615246, i64 2147615286}
!5570 = !DILocation(line: 161, column: 1, scope: !5268)
!5571 = !{i64 2147615423, i64 2147615466, i64 2147615506}
!5572 = !DILocation(line: 162, column: 1, scope: !5268)
!5573 = !{i64 2147615655, i64 2147615698, i64 2147615738}
!5574 = !DILocation(line: 163, column: 1, scope: !5268)
!5575 = !{i64 2147615896, i64 2147615939, i64 2147615979}
!5576 = !DILocation(line: 164, column: 1, scope: !5268)
!5577 = !{i64 2147616137, i64 2147616180, i64 2147616220}
!5578 = !DILocation(line: 165, column: 1, scope: !5268)
!5579 = !{i64 2147616360, i64 2147616403, i64 2147616443}
!5580 = !DILocation(line: 166, column: 1, scope: !5268)
!5581 = !{i64 2147616577, i64 2147616620, i64 2147616660}
!5582 = !DILocation(line: 167, column: 1, scope: !5268)
!5583 = !{i64 2147616818, i64 2147616861, i64 2147616901}
!5584 = !DILocation(line: 168, column: 1, scope: !5268)
!5585 = !{i64 2147617005, i64 2147617048, i64 2147617088}
!5586 = !DILocation(line: 169, column: 1, scope: !5268)
!5587 = !{i64 2147617192, i64 2147617235, i64 2147617275}
!5588 = !DILocation(line: 170, column: 1, scope: !5268)
!5589 = !{i64 2147617355, i64 2147617398, i64 2147617438}
!5590 = !DILocation(line: 171, column: 1, scope: !5268)
!5591 = !{i64 2147617560, i64 2147617603, i64 2147617643}
!5592 = !DILocation(line: 172, column: 1, scope: !5268)
!5593 = !{i64 2147621814, i64 2147621857, i64 2147621897}
!5594 = !DILocation(line: 173, column: 1, scope: !5268)
!5595 = !{i64 2147622073, i64 2147622116, i64 2147622156}
!5596 = !DILocation(line: 174, column: 1, scope: !5268)
!5597 = !{i64 2147622296, i64 2147622339, i64 2147622379}
!5598 = !DILocation(line: 175, column: 1, scope: !5268)
!5599 = !{i64 2147622525, i64 2147622568, i64 2147622608}
!5600 = !DILocation(line: 176, column: 1, scope: !5268)
!5601 = !{i64 2147622739, i64 2147622782, i64 2147622822}
!5602 = !DILocation(line: 177, column: 1, scope: !5268)
!5603 = !{i64 2147622941, i64 2147622984, i64 2147623024}
!5604 = !DILocation(line: 178, column: 1, scope: !5268)
!5605 = !{i64 2147623137, i64 2147623180, i64 2147623220}
!5606 = !DILocation(line: 179, column: 1, scope: !5268)
!5607 = !{i64 2147623349, i64 2147623392, i64 2147623432}
!5608 = !DILocation(line: 180, column: 1, scope: !5268)
!5609 = !{i64 2147623570, i64 2147623613, i64 2147623653}
!5610 = !DILocation(line: 181, column: 1, scope: !5268)
!5611 = !{i64 2147623784, i64 2147623827, i64 2147623867}
!5612 = !DILocation(line: 182, column: 1, scope: !5268)
!5613 = !{i64 2147623974, i64 2147624017, i64 2147624057}
!5614 = !DILocation(line: 183, column: 1, scope: !5268)
!5615 = !{i64 2147624173, i64 2147624216, i64 2147624256}
!5616 = !DILocation(line: 184, column: 1, scope: !5268)
!5617 = !{i64 2147624378, i64 2147624421, i64 2147624461}
!5618 = !DILocation(line: 185, column: 1, scope: !5268)
!5619 = !{i64 2147624598, i64 2147624641, i64 2147624681}
!5620 = !DILocation(line: 186, column: 1, scope: !5268)
!5621 = !{i64 2147624799, i64 2147624842, i64 2147624882}
!5622 = !DILocation(line: 187, column: 1, scope: !5268)
!5623 = !{i64 2147624998, i64 2147625041, i64 2147625081}
!5624 = !DILocation(line: 188, column: 1, scope: !5268)
!5625 = !{i64 2147625203, i64 2147625246, i64 2147625286}
!5626 = !DILocation(line: 189, column: 1, scope: !5268)
!5627 = !{i64 2147625372, i64 2147625415, i64 2147625455}
!5628 = !DILocation(line: 190, column: 1, scope: !5268)
!5629 = !{i64 2147625556, i64 2147625599, i64 2147625639}
!5630 = !DILocation(line: 191, column: 1, scope: !5268)
!5631 = !{i64 2147625740, i64 2147625783, i64 2147625823}
!5632 = !DILocation(line: 192, column: 1, scope: !5268)
!5633 = !{i64 2147625927, i64 2147625970, i64 2147626010}
!5634 = !DILocation(line: 193, column: 1, scope: !5268)
!5635 = !{i64 2147626111, i64 2147626154, i64 2147626194}
!5636 = !DILocation(line: 194, column: 1, scope: !5268)
!5637 = !{i64 2147626298, i64 2147626341, i64 2147626381}
!5638 = !DILocation(line: 195, column: 1, scope: !5268)
!5639 = !{i64 2147626510, i64 2147626553, i64 2147626593}
!5640 = !DILocation(line: 196, column: 1, scope: !5268)
!5641 = !{i64 2147626748, i64 2147626791, i64 2147626831}
!5642 = !DILocation(line: 197, column: 1, scope: !5268)
!5643 = !{i64 2147626978, i64 2147627021, i64 2147627061}
!5644 = !DILocation(line: 198, column: 1, scope: !5268)
!5645 = !{i64 2147627207, i64 2147627250, i64 2147627290}
!5646 = !DILocation(line: 199, column: 1, scope: !5268)
!5647 = !{i64 2147627394, i64 2147627437, i64 2147627477}
!5648 = !DILocation(line: 200, column: 1, scope: !5268)
!5649 = !{i64 2147627590, i64 2147627633, i64 2147627673}
!5650 = !DILocation(line: 201, column: 1, scope: !5268)
!5651 = !{i64 2147627798, i64 2147627841, i64 2147627881}
!5652 = !DILocation(line: 202, column: 1, scope: !5268)
!5653 = !{i64 2147628010, i64 2147628053, i64 2147628093}
!5654 = !DILocation(line: 203, column: 1, scope: !5268)
!5655 = !{i64 2147628209, i64 2147628252, i64 2147628292}
!5656 = !DILocation(line: 204, column: 1, scope: !5268)
!5657 = !{i64 2147628447, i64 2147628490, i64 2147628530}
!5658 = !DILocation(line: 205, column: 1, scope: !5268)
!5659 = !{i64 2147628643, i64 2147628686, i64 2147628726}
!5660 = !DILocation(line: 206, column: 1, scope: !5268)
!5661 = !{i64 2147628845, i64 2147628888, i64 2147628928}
!5662 = !DILocation(line: 207, column: 1, scope: !5268)
!5663 = !{i64 2147629038, i64 2147629081, i64 2147629121}
!5664 = !DILocation(line: 208, column: 1, scope: !5268)
!5665 = !{i64 2147629272, i64 2147629315, i64 2147629355}
!5666 = !DILocation(line: 209, column: 1, scope: !5268)
!5667 = !{i64 2147629435, i64 2147629478, i64 2147629518}
!5668 = !DILocation(line: 210, column: 1, scope: !5268)
!5669 = !{i64 2147629674, i64 2147629717, i64 2147629757}
!5670 = !DILocation(line: 211, column: 1, scope: !5268)
!5671 = !{i64 2147629913, i64 2147629956, i64 2147629996}
!5672 = !DILocation(line: 212, column: 1, scope: !5268)
!5673 = !{i64 2147630149, i64 2147630192, i64 2147630232}
!5674 = !DILocation(line: 213, column: 1, scope: !5268)
!5675 = !{i64 2147630379, i64 2147630422, i64 2147630462}
!5676 = !DILocation(line: 214, column: 1, scope: !5268)
!5677 = !{i64 2147630566, i64 2147630609, i64 2147630649}
!5678 = !DILocation(line: 215, column: 1, scope: !5268)
!5679 = !{i64 2147630765, i64 2147630808, i64 2147630848}
!5680 = !DILocation(line: 216, column: 1, scope: !5268)
!5681 = !{i64 2147635097, i64 2147635140, i64 2147635180}
!5682 = !DILocation(line: 217, column: 1, scope: !5268)
!5683 = !{i64 2147635272, i64 2147635315, i64 2147635355}
!5684 = !DILocation(line: 218, column: 1, scope: !5268)
!5685 = !{i64 2147635506, i64 2147635549, i64 2147635589}
!5686 = !DILocation(line: 219, column: 1, scope: !5268)
!5687 = !{i64 2147635714, i64 2147635757, i64 2147635797}
!5688 = !DILocation(line: 220, column: 1, scope: !5268)
!5689 = !{i64 2147635932, i64 2147635975, i64 2147636015}
!5690 = !DILocation(line: 221, column: 1, scope: !5268)
!5691 = !{i64 2147636122, i64 2147636165, i64 2147636205}
!5692 = !DILocation(line: 222, column: 1, scope: !5268)
!5693 = !{i64 2147636354, i64 2147636397, i64 2147636437}
!5694 = !DILocation(line: 223, column: 1, scope: !5268)
!5695 = !{i64 2147636574, i64 2147636617, i64 2147636657}
!5696 = !DILocation(line: 224, column: 1, scope: !5268)
!5697 = !{i64 2147636770, i64 2147636813, i64 2147636853}
!5698 = !DILocation(line: 225, column: 1, scope: !5268)
!5699 = !{i64 2147636976, i64 2147637019, i64 2147637059}
!5700 = !DILocation(line: 226, column: 1, scope: !5268)
!5701 = !{i64 2147637181, i64 2147637224, i64 2147637264}
!5702 = !DILocation(line: 227, column: 1, scope: !5268)
!5703 = !{i64 2147637407, i64 2147637450, i64 2147637490}
!5704 = !DILocation(line: 228, column: 1, scope: !5268)
!5705 = !{i64 2147637615, i64 2147637658, i64 2147637698}
!5706 = !DILocation(line: 229, column: 1, scope: !5268)
!5707 = !{i64 2147637811, i64 2147637854, i64 2147637894}
!5708 = !DILocation(line: 230, column: 1, scope: !5268)
!5709 = !{i64 2147638043, i64 2147638086, i64 2147638126}
!5710 = !DILocation(line: 231, column: 1, scope: !5268)
!5711 = !{i64 2147638227, i64 2147638270, i64 2147638310}
!5712 = !DILocation(line: 232, column: 1, scope: !5268)
!5713 = !{i64 2147638436, i64 2147638479, i64 2147638519}
!5714 = !DILocation(line: 233, column: 1, scope: !5268)
!5715 = !{i64 2147638644, i64 2147638687, i64 2147638727}
!5716 = !DILocation(line: 234, column: 1, scope: !5268)
!5717 = !{i64 2147638840, i64 2147638883, i64 2147638923}
!5718 = !DILocation(line: 235, column: 1, scope: !5268)
!5719 = !{i64 2147639024, i64 2147639067, i64 2147639107}
!5720 = !DILocation(line: 236, column: 1, scope: !5268)
!5721 = !{i64 2147639250, i64 2147639293, i64 2147639333}
!5722 = !DILocation(line: 237, column: 1, scope: !5268)
!5723 = !{i64 2147639476, i64 2147639519, i64 2147639559}
!5724 = !DILocation(line: 238, column: 1, scope: !5268)
!5725 = !{i64 2147639702, i64 2147639745, i64 2147639785}
!5726 = !DILocation(line: 239, column: 1, scope: !5268)
!5727 = !{i64 2147639928, i64 2147639971, i64 2147640011}
!5728 = !DILocation(line: 240, column: 1, scope: !5268)
!5729 = !{i64 2147640154, i64 2147640197, i64 2147640237}
!5730 = !DILocation(line: 241, column: 1, scope: !5268)
!5731 = !{i64 2147640386, i64 2147640429, i64 2147640469}
!5732 = !DILocation(line: 242, column: 1, scope: !5268)
!5733 = !{i64 2147640624, i64 2147640667, i64 2147640707}
!5734 = !DILocation(line: 243, column: 1, scope: !5268)
!5735 = !{i64 2147640844, i64 2147640887, i64 2147640927}
!5736 = !DILocation(line: 244, column: 1, scope: !5268)
!5737 = !{i64 2147641088, i64 2147641131, i64 2147641171}
!5738 = !DILocation(line: 245, column: 1, scope: !5268)
!5739 = !{i64 2147641329, i64 2147641372, i64 2147641412}
!5740 = !DILocation(line: 246, column: 1, scope: !5268)
!5741 = !{i64 2147641564, i64 2147641607, i64 2147641647}
!5742 = !DILocation(line: 247, column: 1, scope: !5268)
!5743 = !{i64 2147641796, i64 2147641839, i64 2147641879}
!5744 = !DILocation(line: 248, column: 1, scope: !5268)
!5745 = !{i64 2147641998, i64 2147642041, i64 2147642081}
!5746 = !DILocation(line: 249, column: 1, scope: !5268)
!5747 = !{i64 2147642248, i64 2147642291, i64 2147642331}
!5748 = !DILocation(line: 250, column: 1, scope: !5268)
!5749 = !{i64 2147642486, i64 2147642529, i64 2147642569}
!5750 = !DILocation(line: 251, column: 1, scope: !5268)
!5751 = !{i64 2147642694, i64 2147642737, i64 2147642777}
!5752 = !DILocation(line: 252, column: 1, scope: !5268)
!5753 = !{i64 2147642890, i64 2147642933, i64 2147642973}
!5754 = !DILocation(line: 253, column: 1, scope: !5268)
!5755 = !{i64 2147643074, i64 2147643117, i64 2147643157}
!5756 = !DILocation(line: 254, column: 1, scope: !5268)
!5757 = !{i64 2147643291, i64 2147643334, i64 2147643374}
!5758 = !DILocation(line: 255, column: 1, scope: !5268)
!5759 = !{i64 2147643496, i64 2147643539, i64 2147643579}
!5760 = !DILocation(line: 256, column: 1, scope: !5268)
!5761 = !{i64 2147647792, i64 2147647835, i64 2147647875}
!5762 = !DILocation(line: 257, column: 1, scope: !5268)
!5763 = !{i64 2147648015, i64 2147648058, i64 2147648098}
!5764 = !DILocation(line: 258, column: 1, scope: !5268)
!5765 = !{i64 2147648239, i64 2147648282, i64 2147648322}
!5766 = !DILocation(line: 259, column: 1, scope: !5268)
!5767 = !{i64 2147648477, i64 2147648520, i64 2147648560}
!5768 = !DILocation(line: 260, column: 1, scope: !5268)
!5769 = !{i64 2147648715, i64 2147648758, i64 2147648798}
!5770 = !DILocation(line: 261, column: 1, scope: !5268)
!5771 = !{i64 2147648932, i64 2147648975, i64 2147649015}
!5772 = !DILocation(line: 262, column: 1, scope: !5268)
!5773 = !{i64 2147649137, i64 2147649180, i64 2147649220}
!5774 = !DILocation(line: 263, column: 1, scope: !5268)
!5775 = !{i64 2147649330, i64 2147649373, i64 2147649413}
!5776 = !DILocation(line: 264, column: 1, scope: !5268)
!5777 = !{i64 2147649583, i64 2147649626, i64 2147649666}
!5778 = !DILocation(line: 265, column: 1, scope: !5268)
!5779 = !{i64 2147649791, i64 2147649834, i64 2147649874}
!5780 = !DILocation(line: 266, column: 1, scope: !5268)
!5781 = !{i64 2147649987, i64 2147650030, i64 2147650070}
!5782 = !DILocation(line: 267, column: 1, scope: !5268)
!5783 = !{i64 2147650201, i64 2147650244, i64 2147650284}
!5784 = !DILocation(line: 268, column: 1, scope: !5268)
!5785 = !{i64 2147650409, i64 2147650452, i64 2147650492}
!5786 = !DILocation(line: 269, column: 1, scope: !5268)
!5787 = !{i64 2147650599, i64 2147650642, i64 2147650682}
!5788 = !DILocation(line: 270, column: 1, scope: !5268)
!5789 = !{i64 2147650813, i64 2147650856, i64 2147650896}
!5790 = !DILocation(line: 271, column: 1, scope: !5268)
!5791 = !{i64 2147651075, i64 2147651118, i64 2147651158}
!5792 = !DILocation(line: 272, column: 1, scope: !5268)
!5793 = !{i64 2147651286, i64 2147651329, i64 2147651369}
!5794 = !DILocation(line: 273, column: 1, scope: !5268)
!5795 = !{i64 2147651530, i64 2147651573, i64 2147651613}
!5796 = !DILocation(line: 274, column: 1, scope: !5268)
!5797 = !{i64 2147651741, i64 2147651784, i64 2147651824}
!5798 = !DILocation(line: 275, column: 1, scope: !5268)
!5799 = !{i64 2147651970, i64 2147652013, i64 2147652053}
!5800 = !DILocation(line: 276, column: 1, scope: !5268)
!5801 = !{i64 2147652235, i64 2147652278, i64 2147652318}
!5802 = !DILocation(line: 277, column: 1, scope: !5268)
!5803 = !{i64 2147652440, i64 2147652483, i64 2147652523}
!5804 = !DILocation(line: 278, column: 1, scope: !5268)
!5805 = !{i64 2147652636, i64 2147652679, i64 2147652719}
!5806 = !DILocation(line: 279, column: 1, scope: !5268)
!5807 = !{i64 2147652859, i64 2147652902, i64 2147652942}
!5808 = !DILocation(line: 280, column: 1, scope: !5268)
!5809 = !{i64 2147653022, i64 2147653065, i64 2147653105}
!5810 = !DILocation(line: 281, column: 1, scope: !5268)
!5811 = !{i64 2147653227, i64 2147653270, i64 2147653310}
!5812 = !DILocation(line: 282, column: 1, scope: !5268)
!5813 = !{i64 2147653447, i64 2147653490, i64 2147653530}
!5814 = !DILocation(line: 283, column: 1, scope: !5268)
!5815 = !{i64 2147653661, i64 2147653704, i64 2147653744}
!5816 = !DILocation(line: 284, column: 1, scope: !5268)
!5817 = !{i64 2147653905, i64 2147653948, i64 2147653988}
!5818 = !DILocation(line: 285, column: 1, scope: !5268)
!5819 = !{i64 2147654137, i64 2147654180, i64 2147654220}
!5820 = !DILocation(line: 286, column: 1, scope: !5268)
!5821 = !{i64 2147654351, i64 2147654394, i64 2147654434}
!5822 = !DILocation(line: 287, column: 1, scope: !5268)
!5823 = !{i64 2147654562, i64 2147654605, i64 2147654645}
!5824 = !DILocation(line: 288, column: 1, scope: !5268)
!5825 = !{i64 2147654755, i64 2147654798, i64 2147654838}
!5826 = !DILocation(line: 289, column: 1, scope: !5268)
!5827 = !{i64 2147654954, i64 2147654997, i64 2147655037}
!5828 = !DILocation(line: 290, column: 1, scope: !5268)
!5829 = !{i64 2147655126, i64 2147655169, i64 2147655209}
!5830 = !DILocation(line: 291, column: 1, scope: !5268)
!5831 = !{i64 2147655319, i64 2147655362, i64 2147655402}
!5832 = !DILocation(line: 292, column: 1, scope: !5268)
!5833 = !{i64 2147655491, i64 2147655534, i64 2147655574}
!5834 = !DILocation(line: 293, column: 1, scope: !5268)
!5835 = !{i64 2147655681, i64 2147655724, i64 2147655764}
!5836 = !DILocation(line: 294, column: 1, scope: !5268)
!5837 = !{i64 2147655874, i64 2147655917, i64 2147655957}
!5838 = !DILocation(line: 295, column: 1, scope: !5268)
!5839 = !{i64 2147656070, i64 2147656113, i64 2147656153}
!5840 = !DILocation(line: 296, column: 1, scope: !5268)
!5841 = !{i64 2147656233, i64 2147656276, i64 2147656316}
!5842 = !DILocation(line: 297, column: 1, scope: !5268)
!5843 = !{i64 2147656435, i64 2147656478, i64 2147656518}
!5844 = !DILocation(line: 298, column: 1, scope: !5268)
!5845 = !{i64 2147656646, i64 2147656689, i64 2147656729}
!5846 = !DILocation(line: 299, column: 1, scope: !5268)
!5847 = !{i64 2147660912, i64 2147660955, i64 2147660995}
!5848 = !DILocation(line: 300, column: 1, scope: !5268)
!5849 = !{i64 2147661120, i64 2147661163, i64 2147661203}
!5850 = !DILocation(line: 301, column: 1, scope: !5268)
!5851 = !{i64 2147661313, i64 2147661356, i64 2147661396}
!5852 = !DILocation(line: 302, column: 1, scope: !5268)
!5853 = !{i64 2147661551, i64 2147661594, i64 2147661634}
!5854 = !DILocation(line: 303, column: 1, scope: !5268)
!5855 = !{i64 2147661738, i64 2147661781, i64 2147661821}
!5856 = !DILocation(line: 304, column: 1, scope: !5268)
!5857 = !{i64 2147661907, i64 2147661950, i64 2147661990}
!5858 = !DILocation(line: 305, column: 1, scope: !5268)
!5859 = !{i64 2147662100, i64 2147662143, i64 2147662183}
!5860 = !DILocation(line: 306, column: 1, scope: !5268)
!5861 = !{i64 2147662305, i64 2147662348, i64 2147662388}
!5862 = !DILocation(line: 307, column: 1, scope: !5268)
!5863 = !{i64 2147662516, i64 2147662559, i64 2147662599}
!5864 = !DILocation(line: 308, column: 1, scope: !5268)
!5865 = !{i64 2147662739, i64 2147662782, i64 2147662822}
!5866 = !DILocation(line: 309, column: 1, scope: !5268)
!5867 = !{i64 2147662953, i64 2147662996, i64 2147663036}
!5868 = !DILocation(line: 310, column: 1, scope: !5268)
!5869 = !{i64 2147663171, i64 2147663214, i64 2147663254}
!5870 = !DILocation(line: 311, column: 1, scope: !5268)
!5871 = !{i64 2147663385, i64 2147663428, i64 2147663468}
!5872 = !DILocation(line: 312, column: 1, scope: !5268)
!5873 = !{i64 2147663599, i64 2147663642, i64 2147663682}
!5874 = !DILocation(line: 313, column: 1, scope: !5268)
!5875 = !{i64 2147663816, i64 2147663859, i64 2147663899}
!5876 = !DILocation(line: 314, column: 1, scope: !5268)
!5877 = !{i64 2147664030, i64 2147664073, i64 2147664113}
!5878 = !DILocation(line: 315, column: 1, scope: !5268)
!5879 = !{i64 2147664271, i64 2147664314, i64 2147664354}
!5880 = !DILocation(line: 316, column: 1, scope: !5268)
!5881 = !{i64 2147664437, i64 2147664480, i64 2147664520}
!5882 = !DILocation(line: 317, column: 1, scope: !5268)
!5883 = !{i64 2147664664, i64 2147664707, i64 2147664747}
!5884 = !DILocation(line: 318, column: 1, scope: !5268)
!5885 = !{i64 2147664881, i64 2147664924, i64 2147664964}
!5886 = !DILocation(line: 319, column: 1, scope: !5268)
!5887 = !{i64 2147665107, i64 2147665150, i64 2147665190}
!5888 = !DILocation(line: 320, column: 1, scope: !5268)
!5889 = !{i64 2147665312, i64 2147665355, i64 2147665395}
!5890 = !DILocation(line: 321, column: 1, scope: !5268)
!5891 = !{i64 2147665529, i64 2147665572, i64 2147665612}
!5892 = !DILocation(line: 322, column: 1, scope: !5268)
!5893 = !{i64 2147665821, i64 2147665864, i64 2147665904}
!5894 = !DILocation(line: 323, column: 1, scope: !5268)
!5895 = !{i64 2147666053, i64 2147666096, i64 2147666136}
!5896 = !DILocation(line: 324, column: 1, scope: !5268)
!5897 = !{i64 2147666270, i64 2147666313, i64 2147666353}
!5898 = !DILocation(line: 325, column: 1, scope: !5268)
!5899 = !{i64 2147666477, i64 2147666520, i64 2147666560}
!5900 = !DILocation(line: 326, column: 1, scope: !5268)
!5901 = !{i64 2147666678, i64 2147666721, i64 2147666761}
!5902 = !DILocation(line: 327, column: 1, scope: !5268)
!5903 = !{i64 2147666910, i64 2147666953, i64 2147666993}
!5904 = !DILocation(line: 328, column: 1, scope: !5268)
!5905 = !{i64 2147667118, i64 2147667161, i64 2147667201}
!5906 = !DILocation(line: 329, column: 1, scope: !5268)
!5907 = !{i64 2147667308, i64 2147667351, i64 2147667391}
!5908 = !DILocation(line: 330, column: 1, scope: !5268)
!5909 = !{i64 2147667534, i64 2147667577, i64 2147667617}
!5910 = !DILocation(line: 331, column: 1, scope: !5268)
!5911 = !{i64 2147667723, i64 2147667766, i64 2147667806}
!5912 = !DILocation(line: 332, column: 1, scope: !5268)
!5913 = !{i64 2147667994, i64 2147668037, i64 2147668077}
!5914 = !DILocation(line: 333, column: 1, scope: !5268)
!5915 = !{i64 2147668214, i64 2147668257, i64 2147668297}
!5916 = !DILocation(line: 334, column: 1, scope: !5268)
!5917 = !{i64 2147668467, i64 2147668510, i64 2147668550}
!5918 = !DILocation(line: 335, column: 1, scope: !5268)
!5919 = !{i64 2147668675, i64 2147668718, i64 2147668758}
!5920 = !DILocation(line: 336, column: 1, scope: !5268)
!5921 = !{i64 2147668907, i64 2147668950, i64 2147668990}
!5922 = !DILocation(line: 337, column: 1, scope: !5268)
!5923 = !{i64 2147669118, i64 2147669161, i64 2147669201}
!5924 = !DILocation(line: 338, column: 1, scope: !5268)
!5925 = !{i64 2147669308, i64 2147669351, i64 2147669391}
!5926 = !DILocation(line: 339, column: 1, scope: !5268)
!5927 = !{i64 2147669522, i64 2147669565, i64 2147669605}
!5928 = !DILocation(line: 340, column: 1, scope: !5268)
!5929 = !{i64 2147673782, i64 2147673825, i64 2147673865}
!5930 = !DILocation(line: 341, column: 1, scope: !5268)
!5931 = !{i64 2147673969, i64 2147674012, i64 2147674052}
!5932 = !DILocation(line: 342, column: 1, scope: !5268)
!5933 = !{i64 2147674165, i64 2147674208, i64 2147674248}
!5934 = !DILocation(line: 343, column: 1, scope: !5268)
!5935 = !{i64 2147674373, i64 2147674416, i64 2147674456}
!5936 = !DILocation(line: 344, column: 1, scope: !5268)
!5937 = !{i64 2147674602, i64 2147674645, i64 2147674685}
!5938 = !DILocation(line: 345, column: 1, scope: !5268)
!5939 = !{i64 2147674804, i64 2147674847, i64 2147674887}
!5940 = !DILocation(line: 346, column: 1, scope: !5268)
!5941 = !{i64 2147675003, i64 2147675046, i64 2147675086}
!5942 = !DILocation(line: 347, column: 1, scope: !5268)
!5943 = !{i64 2147675220, i64 2147675263, i64 2147675303}
!5944 = !DILocation(line: 349, column: 1, scope: !5268)
!5945 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5946)
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "arg", arg: 1, scope: !5945, file: !235, line: 30, type: !244)
!5948 = !DILocalVariable(name: "key", scope: !5945, file: !235, line: 32, type: !152)
!5949 = !DILocation(line: 0, scope: !5945)
!5950 = !DILocation(line: 37, column: 2, scope: !5945)
!5951 = !DILocation(line: 38, column: 2, scope: !5945)
!5952 = !DILocation(line: 55, column: 2, scope: !5953, inlinedAt: !5960)
!5953 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5957)
!5954 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!32}
!5957 = !{!5958, !5959}
!5958 = !DILocalVariable(name: "key", scope: !5953, file: !5954, line: 44, type: !32)
!5959 = !DILocalVariable(name: "tmp", scope: !5953, file: !5954, line: 53, type: !32)
!5960 = distinct !DILocation(line: 40, column: 8, scope: !5945)
!5961 = !{i64 1938090}
!5962 = !DILocation(line: 0, scope: !5953, inlinedAt: !5960)
!5963 = !DILocalVariable(name: "key", arg: 1, scope: !5964, file: !5954, line: 84, type: !32)
!5964 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{null, !32}
!5967 = !{!5963}
!5968 = !DILocation(line: 0, scope: !5964, inlinedAt: !5969)
!5969 = distinct !DILocation(line: 47, column: 2, scope: !5945)
!5970 = !DILocation(line: 95, column: 2, scope: !5964, inlinedAt: !5969)
!5971 = !{i64 1938907}
!5972 = !DILocation(line: 51, column: 18, scope: !5945)
!5973 = !DILocation(line: 53, column: 2, scope: !5945)
!5974 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5975, file: !5975, line: 1609, type: !3111, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2182)
!5975 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5976 = !DILocation(line: 1611, column: 3, scope: !5974)
!5977 = !DILocation(line: 1612, column: 1, scope: !5974)
!5978 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5975, file: !5975, line: 1629, type: !3111, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2182)
!5979 = !DILocation(line: 1631, column: 3, scope: !5978)
!5980 = !DILocation(line: 1632, column: 1, scope: !5978)
!5981 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5982)
!5982 = !{!5983}
!5983 = !DILocalVariable(name: "dev", arg: 1, scope: !5981, file: !271, line: 26, type: !279)
!5984 = !DILocation(line: 0, scope: !5981)
!5985 = !DILocation(line: 68, column: 2, scope: !5981)
!5986 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5987, file: !5987, line: 14, type: !4221, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !5988)
!5987 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5988 = !{!5989, !5990}
!5989 = !DILocalVariable(name: "fmt", arg: 1, scope: !5986, file: !5987, line: 14, type: !118)
!5990 = !DILocalVariable(name: "ap", scope: !5986, file: !5987, line: 16, type: !5991)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3231, line: 99, baseType: !5992)
!5992 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3231, line: 40, baseType: !5993)
!5993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5987, baseType: !5994)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5995)
!5995 = !{!5996}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5994, file: !5987, line: 16, baseType: !106, size: 32)
!5997 = !DILocation(line: 0, scope: !5986)
!5998 = !DILocation(line: 16, column: 2, scope: !5986)
!5999 = !DILocation(line: 16, column: 10, scope: !5986)
!6000 = !DILocation(line: 18, column: 2, scope: !5986)
!6001 = !DILocation(line: 19, column: 2, scope: !5986)
!6002 = !DILocation(line: 20, column: 2, scope: !5986)
!6003 = !DILocation(line: 21, column: 1, scope: !5986)
!6004 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5987, file: !5987, line: 23, type: !6005, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6007)
!6005 = !DISubroutineType(types: !6006)
!6006 = !{null, !118, !5991}
!6007 = !{!6008, !6009}
!6008 = !DILocalVariable(name: "fmt", arg: 1, scope: !6004, file: !5987, line: 23, type: !118)
!6009 = !DILocalVariable(name: "ap", arg: 2, scope: !6004, file: !5987, line: 23, type: !5991)
!6010 = !DILocation(line: 0, scope: !6004)
!6011 = !DILocation(line: 25, column: 2, scope: !6004)
!6012 = !DILocation(line: 26, column: 1, scope: !6004)
!6013 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5987, file: !5987, line: 52, type: !6014, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6016)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{null, !107, !13, !185}
!6016 = !{!6017, !6018, !6019, !6020}
!6017 = !DILocalVariable(name: "level", arg: 1, scope: !6013, file: !5987, line: 52, type: !107)
!6018 = !DILocalVariable(name: "data", arg: 2, scope: !6013, file: !5987, line: 52, type: !13)
!6019 = !DILocalVariable(name: "size", arg: 3, scope: !6013, file: !5987, line: 52, type: !185)
!6020 = !DILocalVariable(name: "data_buffer", scope: !6013, file: !5987, line: 54, type: !118)
!6021 = !DILocation(line: 0, scope: !6013)
!6022 = !DILocation(line: 55, column: 14, scope: !6013)
!6023 = !DILocation(line: 55, column: 2, scope: !6013)
!6024 = !DILocation(line: 56, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6013, file: !5987, line: 55, column: 20)
!6026 = !DILocation(line: 57, column: 3, scope: !6025)
!6027 = !DILocation(line: 59, column: 7, scope: !6025)
!6028 = distinct !{!6028, !6023, !6029}
!6029 = !DILocation(line: 65, column: 2, scope: !6013)
!6030 = !DILocation(line: 66, column: 1, scope: !6013)
!6031 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6032, file: !6032, line: 175, type: !6033, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6035)
!6032 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!120, !107}
!6035 = !{!6036}
!6036 = !DILocalVariable(name: "level", arg: 1, scope: !6031, file: !6032, line: 175, type: !107)
!6037 = !DILocation(line: 0, scope: !6031)
!6038 = !DILocation(line: 177, column: 2, scope: !6031)
!6039 = !DILocation(line: 189, column: 1, scope: !6031)
!6040 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5987, file: !5987, line: 28, type: !6041, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6043)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{null, !118, !185}
!6043 = !{!6044, !6045, !6046, !6048, !6050}
!6044 = !DILocalVariable(name: "data", arg: 1, scope: !6040, file: !5987, line: 28, type: !118)
!6045 = !DILocalVariable(name: "length", arg: 2, scope: !6040, file: !5987, line: 28, type: !185)
!6046 = !DILocalVariable(name: "i", scope: !6047, file: !5987, line: 30, type: !185)
!6047 = distinct !DILexicalBlock(scope: !6040, file: !5987, line: 30, column: 2)
!6048 = !DILocalVariable(name: "i", scope: !6049, file: !5987, line: 40, type: !185)
!6049 = distinct !DILexicalBlock(scope: !6040, file: !5987, line: 40, column: 2)
!6050 = !DILocalVariable(name: "c", scope: !6051, file: !5987, line: 42, type: !196)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !5987, line: 41, column: 19)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !5987, line: 41, column: 7)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !5987, line: 40, column: 54)
!6054 = distinct !DILexicalBlock(scope: !6049, file: !5987, line: 40, column: 2)
!6055 = !DILocation(line: 0, scope: !6040)
!6056 = !DILocation(line: 0, scope: !6047)
!6057 = !DILocation(line: 30, column: 2, scope: !6047)
!6058 = !DILocation(line: 38, column: 2, scope: !6040)
!6059 = !DILocation(line: 0, scope: !6049)
!6060 = !DILocation(line: 40, column: 2, scope: !6049)
!6061 = !DILocation(line: 31, column: 9, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !5987, line: 31, column: 7)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !5987, line: 30, column: 54)
!6064 = distinct !DILexicalBlock(scope: !6047, file: !5987, line: 30, column: 2)
!6065 = !DILocation(line: 31, column: 7, scope: !6063)
!6066 = !DILocation(line: 32, column: 35, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6062, file: !5987, line: 31, column: 19)
!6068 = !DILocation(line: 32, column: 20, scope: !6067)
!6069 = !DILocation(line: 32, column: 4, scope: !6067)
!6070 = !DILocation(line: 33, column: 3, scope: !6067)
!6071 = !DILocation(line: 34, column: 4, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6062, file: !5987, line: 33, column: 10)
!6073 = !DILocation(line: 30, column: 50, scope: !6064)
!6074 = !DILocation(line: 30, column: 24, scope: !6064)
!6075 = distinct !{!6075, !6057, !6076}
!6076 = !DILocation(line: 36, column: 2, scope: !6047)
!6077 = !DILocation(line: 49, column: 2, scope: !6040)
!6078 = !DILocation(line: 50, column: 1, scope: !6040)
!6079 = !DILocation(line: 41, column: 9, scope: !6052)
!6080 = !DILocation(line: 41, column: 7, scope: !6053)
!6081 = !DILocation(line: 42, column: 22, scope: !6051)
!6082 = !DILocation(line: 0, scope: !6051)
!6083 = !DILocation(line: 44, column: 25, scope: !6051)
!6084 = !DILocation(line: 44, column: 17, scope: !6051)
!6085 = !DILocation(line: 44, column: 33, scope: !6051)
!6086 = !DILocation(line: 44, column: 4, scope: !6051)
!6087 = !DILocation(line: 45, column: 3, scope: !6051)
!6088 = !DILocation(line: 46, column: 4, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6052, file: !5987, line: 45, column: 10)
!6090 = !DILocation(line: 40, column: 50, scope: !6054)
!6091 = !DILocation(line: 40, column: 24, scope: !6054)
!6092 = distinct !{!6092, !6060, !6093}
!6093 = !DILocation(line: 48, column: 2, scope: !6049)
!6094 = distinct !DISubprogram(name: "isprint", scope: !5012, file: !5012, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6095)
!6095 = !{!6096}
!6096 = !DILocalVariable(name: "c", arg: 1, scope: !6094, file: !5012, line: 37, type: !107)
!6097 = !DILocation(line: 0, scope: !6094)
!6098 = !DILocation(line: 39, column: 38, scope: !6094)
!6099 = !DILocation(line: 39, column: 2, scope: !6094)
!6100 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6101, file: !6101, line: 57, type: !6102, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6148)
!6101 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6102 = !DISubroutineType(types: !6103)
!6103 = !{null, !32, !6104}
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 32)
!6105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6106)
!6106 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !6107)
!6107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !6108)
!6108 = !{!6109}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6107, file: !2691, line: 107, baseType: !6110, size: 256)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !6111)
!6111 = !{!6112, !6117, !6122, !6127, !6132, !6137, !6142, !6147}
!6112 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 99, baseType: !6113, size: 32)
!6113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 99, size: 32, elements: !6114)
!6114 = !{!6115, !6116}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6113, file: !2691, line: 99, baseType: !152, size: 32)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6113, file: !2691, line: 99, baseType: !152, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 100, baseType: !6118, size: 32, offset: 32)
!6118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 100, size: 32, elements: !6119)
!6119 = !{!6120, !6121}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6118, file: !2691, line: 100, baseType: !152, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6118, file: !2691, line: 100, baseType: !152, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 101, baseType: !6123, size: 32, offset: 64)
!6123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 101, size: 32, elements: !6124)
!6124 = !{!6125, !6126}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6123, file: !2691, line: 101, baseType: !152, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6123, file: !2691, line: 101, baseType: !152, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 102, baseType: !6128, size: 32, offset: 96)
!6128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 102, size: 32, elements: !6129)
!6129 = !{!6130, !6131}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6128, file: !2691, line: 102, baseType: !152, size: 32)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6128, file: !2691, line: 102, baseType: !152, size: 32)
!6132 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 103, baseType: !6133, size: 32, offset: 128)
!6133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 103, size: 32, elements: !6134)
!6134 = !{!6135, !6136}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6133, file: !2691, line: 103, baseType: !152, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6133, file: !2691, line: 103, baseType: !152, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 104, baseType: !6138, size: 32, offset: 160)
!6138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 104, size: 32, elements: !6139)
!6139 = !{!6140, !6141}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6138, file: !2691, line: 104, baseType: !152, size: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6138, file: !2691, line: 104, baseType: !152, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !2691, line: 105, baseType: !6143, size: 32, offset: 192)
!6143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !2691, line: 105, size: 32, elements: !6144)
!6144 = !{!6145, !6146}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6143, file: !2691, line: 105, baseType: !152, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6143, file: !2691, line: 105, baseType: !152, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6110, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!6148 = !{!6149, !6150}
!6149 = !DILocalVariable(name: "reason", arg: 1, scope: !6100, file: !6101, line: 57, type: !32)
!6150 = !DILocalVariable(name: "esf", arg: 2, scope: !6100, file: !6101, line: 57, type: !6104)
!6151 = !DILocation(line: 0, scope: !6100)
!6152 = !DILocation(line: 60, column: 10, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6100, file: !6101, line: 60, column: 6)
!6154 = !DILocation(line: 60, column: 6, scope: !6100)
!6155 = !DILocation(line: 61, column: 3, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !6101, line: 60, column: 19)
!6157 = !DILocation(line: 62, column: 2, scope: !6156)
!6158 = !DILocation(line: 63, column: 2, scope: !6100)
!6159 = !DILocation(line: 64, column: 1, scope: !6100)
!6160 = distinct !DISubprogram(name: "esf_dump", scope: !6101, file: !6101, line: 20, type: !6161, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6163)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{null, !6104}
!6163 = !{!6164}
!6164 = !DILocalVariable(name: "esf", arg: 1, scope: !6160, file: !6101, line: 20, type: !6104)
!6165 = !DILocation(line: 0, scope: !6160)
!6166 = !DILocation(line: 22, column: 2, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !6101, line: 22, column: 2)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !6101, line: 22, column: 2)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !6101, line: 22, column: 2)
!6170 = distinct !DILexicalBlock(scope: !6160, file: !6101, line: 22, column: 2)
!6171 = !DILocation(line: 24, column: 2, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !6101, line: 24, column: 2)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !6101, line: 24, column: 2)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !6101, line: 24, column: 2)
!6175 = distinct !DILexicalBlock(scope: !6160, file: !6101, line: 24, column: 2)
!6176 = !DILocation(line: 26, column: 2, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !6101, line: 26, column: 2)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !6101, line: 26, column: 2)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !6101, line: 26, column: 2)
!6180 = distinct !DILexicalBlock(scope: !6160, file: !6101, line: 26, column: 2)
!6181 = !DILocation(line: 53, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !6101, line: 53, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !6101, line: 53, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !6101, line: 53, column: 2)
!6185 = distinct !DILexicalBlock(scope: !6160, file: !6101, line: 53, column: 2)
!6186 = !DILocation(line: 55, column: 1, scope: !6160)
!6187 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6101, file: !6101, line: 82, type: !6188, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6203)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !6104, !6190}
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6192)
!6192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6193)
!6193 = !{!6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6192, file: !379, line: 26, baseType: !152, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6192, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6192, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6192, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6192, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6192, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6192, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6192, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6192, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6203 = !{!6204, !6205, !6206}
!6204 = !DILocalVariable(name: "esf", arg: 1, scope: !6187, file: !6101, line: 82, type: !6104)
!6205 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6187, file: !6101, line: 82, type: !6190)
!6206 = !DILocalVariable(name: "reason", scope: !6187, file: !6101, line: 88, type: !32)
!6207 = !DILocation(line: 0, scope: !6187)
!6208 = !DILocation(line: 88, column: 35, scope: !6187)
!6209 = !DILocation(line: 108, column: 2, scope: !6187)
!6210 = !DILocation(line: 131, column: 1, scope: !6187)
!6211 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6101, file: !6101, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6212)
!6212 = !{!6213, !6214, !6215}
!6213 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6211, file: !6101, line: 133, type: !106)
!6214 = !DILocalVariable(name: "ssf_contents", scope: !6211, file: !6101, line: 135, type: !999)
!6215 = !DILocalVariable(name: "oops_esf", scope: !6211, file: !6101, line: 136, type: !6106)
!6216 = !DILocation(line: 0, scope: !6211)
!6217 = !DILocation(line: 136, column: 2, scope: !6211)
!6218 = !DILocation(line: 136, column: 15, scope: !6211)
!6219 = !DILocation(line: 139, column: 22, scope: !6211)
!6220 = !DILocation(line: 139, column: 17, scope: !6211)
!6221 = !DILocation(line: 139, column: 20, scope: !6211)
!6222 = !DILocation(line: 141, column: 2, scope: !6211)
!6223 = !DILocation(line: 142, column: 2, scope: !6211)
!6224 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6225, file: !6225, line: 40, type: !5965, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6226)
!6225 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6226 = !{!6227}
!6227 = !DILocalVariable(name: "irq", arg: 1, scope: !6224, file: !6225, line: 40, type: !32)
!6228 = !DILocation(line: 0, scope: !6224)
!6229 = !DILocation(line: 42, column: 2, scope: !6224)
!6230 = !DILocation(line: 43, column: 1, scope: !6224)
!6231 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6232, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6234)
!6232 = !DISubroutineType(types: !6233)
!6233 = !{null, !900}
!6234 = !{!6235}
!6235 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6231, file: !463, line: 1684, type: !900)
!6236 = !DILocation(line: 0, scope: !6231)
!6237 = !DILocation(line: 1686, column: 23, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6231, file: !463, line: 1686, column: 7)
!6239 = !DILocation(line: 1686, column: 7, scope: !6231)
!6240 = !DILocation(line: 1688, column: 5, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6238, file: !463, line: 1687, column: 3)
!6242 = !{i64 2150445821}
!6243 = !DILocation(line: 1689, column: 81, scope: !6241)
!6244 = !DILocation(line: 1689, column: 60, scope: !6241)
!6245 = !DILocation(line: 1689, column: 34, scope: !6241)
!6246 = !DILocation(line: 1689, column: 5, scope: !6241)
!6247 = !DILocation(line: 1689, column: 43, scope: !6241)
!6248 = !DILocation(line: 1690, column: 5, scope: !6241)
!6249 = !{i64 2150445935}
!6250 = !DILocation(line: 1691, column: 3, scope: !6241)
!6251 = !DILocation(line: 1692, column: 1, scope: !6231)
!6252 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6225, file: !6225, line: 45, type: !5965, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6253)
!6253 = !{!6254}
!6254 = !DILocalVariable(name: "irq", arg: 1, scope: !6252, file: !6225, line: 45, type: !32)
!6255 = !DILocation(line: 0, scope: !6252)
!6256 = !DILocation(line: 47, column: 2, scope: !6252)
!6257 = !DILocation(line: 48, column: 1, scope: !6252)
!6258 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6232, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6259)
!6259 = !{!6260}
!6260 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6258, file: !463, line: 1722, type: !900)
!6261 = !DILocation(line: 0, scope: !6258)
!6262 = !DILocation(line: 1724, column: 23, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !463, line: 1724, column: 7)
!6264 = !DILocation(line: 1724, column: 7, scope: !6258)
!6265 = !DILocation(line: 1726, column: 81, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6263, file: !463, line: 1725, column: 3)
!6267 = !DILocation(line: 1726, column: 60, scope: !6266)
!6268 = !DILocation(line: 1726, column: 34, scope: !6266)
!6269 = !DILocation(line: 1726, column: 5, scope: !6266)
!6270 = !DILocation(line: 1726, column: 43, scope: !6266)
!6271 = !DILocation(line: 271, column: 3, scope: !6272, inlinedAt: !6274)
!6272 = distinct !DISubprogram(name: "__DSB", scope: !6273, file: !6273, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2182)
!6273 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6274 = distinct !DILocation(line: 1727, column: 5, scope: !6266)
!6275 = !{i64 2900204}
!6276 = !DILocation(line: 260, column: 3, scope: !6277, inlinedAt: !6278)
!6277 = distinct !DISubprogram(name: "__ISB", scope: !6273, file: !6273, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2182)
!6278 = distinct !DILocation(line: 1728, column: 5, scope: !6266)
!6279 = !{i64 2899921}
!6280 = !DILocation(line: 1729, column: 3, scope: !6266)
!6281 = !DILocation(line: 1730, column: 1, scope: !6258)
!6282 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6225, file: !6225, line: 50, type: !6283, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6285)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!107, !32}
!6285 = !{!6286}
!6286 = !DILocalVariable(name: "irq", arg: 1, scope: !6282, file: !6225, line: 50, type: !32)
!6287 = !DILocation(line: 0, scope: !6282)
!6288 = !DILocation(line: 52, column: 20, scope: !6282)
!6289 = !DILocation(line: 52, column: 9, scope: !6282)
!6290 = !DILocation(line: 52, column: 41, scope: !6282)
!6291 = !DILocation(line: 52, column: 39, scope: !6282)
!6292 = !DILocation(line: 52, column: 2, scope: !6282)
!6293 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6225, file: !6225, line: 64, type: !6294, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6296)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{null, !32, !32, !152}
!6296 = !{!6297, !6298, !6299}
!6297 = !DILocalVariable(name: "irq", arg: 1, scope: !6293, file: !6225, line: 64, type: !32)
!6298 = !DILocalVariable(name: "prio", arg: 2, scope: !6293, file: !6225, line: 64, type: !32)
!6299 = !DILocalVariable(name: "flags", arg: 3, scope: !6293, file: !6225, line: 64, type: !152)
!6300 = !DILocation(line: 0, scope: !6293)
!6301 = !DILocation(line: 83, column: 8, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !6225, line: 82, column: 9)
!6303 = distinct !DILexicalBlock(scope: !6293, file: !6225, line: 76, column: 6)
!6304 = !DILocation(line: 91, column: 2, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !6225, line: 91, column: 2)
!6306 = distinct !DILexicalBlock(scope: !6293, file: !6225, line: 91, column: 2)
!6307 = !DILocation(line: 91, column: 2, scope: !6306)
!6308 = !DILocation(line: 91, column: 2, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6305, file: !6225, line: 91, column: 2)
!6310 = !DILocation(line: 95, column: 2, scope: !6293)
!6311 = !DILocation(line: 96, column: 1, scope: !6293)
!6312 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6313, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6315)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{null, !900, !152}
!6315 = !{!6316, !6317}
!6316 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6312, file: !463, line: 1814, type: !900)
!6317 = !DILocalVariable(name: "priority", arg: 2, scope: !6312, file: !463, line: 1814, type: !152)
!6318 = !DILocation(line: 0, scope: !6312)
!6319 = !DILocation(line: 0, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6312, file: !463, line: 1816, column: 7)
!6321 = !DILocation(line: 1816, column: 7, scope: !6312)
!6322 = !DILocation(line: 1824, column: 1, scope: !6312)
!6323 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6225, file: !6225, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6324)
!6324 = !{!6325}
!6325 = !DILocalVariable(name: "unused", arg: 1, scope: !6323, file: !6225, line: 155, type: !13)
!6326 = !DILocation(line: 0, scope: !6323)
!6327 = !DILocation(line: 159, column: 2, scope: !6323)
!6328 = !DILocation(line: 160, column: 1, scope: !6323)
!6329 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6330, file: !6330, line: 87, type: !3111, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2182)
!6330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6331 = !DILocation(line: 89, column: 2, scope: !6329)
!6332 = !DILocation(line: 90, column: 2, scope: !6329)
!6333 = !DILocation(line: 91, column: 1, scope: !6329)
!6334 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6330, file: !6330, line: 23, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!6335 = !DISubprogram(name: "z_arm_int_exit", scope: !6336, file: !6336, line: 153, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!6336 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6337 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6338, file: !6338, line: 256, type: !3111, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6338 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6339 = !DILocation(line: 258, column: 2, scope: !6337)
!6340 = !DILocation(line: 260, column: 2, scope: !6337)
!6341 = !DILocation(line: 262, column: 2, scope: !6337)
!6342 = !DILocation(line: 263, column: 2, scope: !6337)
!6343 = !DILocation(line: 267, column: 2, scope: !6337)
!6344 = !DILocation(line: 268, column: 2, scope: !6337)
!6345 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6338, file: !6338, line: 53, type: !3111, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6346 = !DILocation(line: 55, column: 12, scope: !6345)
!6347 = !DILocation(line: 271, column: 3, scope: !6348, inlinedAt: !6349)
!6348 = distinct !DISubprogram(name: "__DSB", scope: !6273, file: !6273, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6349 = distinct !DILocation(line: 56, column: 2, scope: !6345)
!6350 = !{i64 2898875}
!6351 = !DILocation(line: 260, column: 3, scope: !6352, inlinedAt: !6353)
!6352 = distinct !DISubprogram(name: "__ISB", scope: !6273, file: !6273, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6353 = distinct !DILocation(line: 57, column: 2, scope: !6345)
!6354 = !{i64 2898592}
!6355 = !DILocation(line: 58, column: 1, scope: !6345)
!6356 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6338, file: !6338, line: 96, type: !3111, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2182)
!6357 = !DILocation(line: 103, column: 13, scope: !6356)
!6358 = !DILocation(line: 975, column: 3, scope: !6359, inlinedAt: !6364)
!6359 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6273, file: !6273, line: 971, type: !6360, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !6362)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!152}
!6362 = !{!6363}
!6363 = !DILocalVariable(name: "result", scope: !6359, file: !6273, line: 973, type: !152)
!6364 = distinct !DILocation(line: 189, column: 16, scope: !6356)
!6365 = !{i64 2919705}
!6366 = !DILocation(line: 0, scope: !6359, inlinedAt: !6364)
!6367 = !DILocation(line: 189, column: 32, scope: !6356)
!6368 = !DILocalVariable(name: "control", arg: 1, scope: !6369, file: !6273, line: 1001, type: !152)
!6369 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6273, file: !6273, line: 1001, type: !6370, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !6372)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{null, !152}
!6372 = !{!6368}
!6373 = !DILocation(line: 0, scope: !6369, inlinedAt: !6374)
!6374 = distinct !DILocation(line: 189, column: 2, scope: !6356)
!6375 = !DILocation(line: 1003, column: 3, scope: !6369, inlinedAt: !6374)
!6376 = !{i64 2920425}
!6377 = !DILocation(line: 260, column: 3, scope: !6352, inlinedAt: !6378)
!6378 = distinct !DILocation(line: 1004, column: 3, scope: !6369, inlinedAt: !6374)
!6379 = !DILocation(line: 191, column: 1, scope: !6356)
!6380 = distinct !DISubprogram(name: "arch_swap", scope: !6381, file: !6381, line: 33, type: !6283, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6382)
!6381 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6382 = !{!6383}
!6383 = !DILocalVariable(name: "key", arg: 1, scope: !6380, file: !6381, line: 33, type: !32)
!6384 = !DILocation(line: 0, scope: !6380)
!6385 = !DILocation(line: 36, column: 2, scope: !6380)
!6386 = !DILocation(line: 36, column: 17, scope: !6380)
!6387 = !DILocation(line: 36, column: 25, scope: !6380)
!6388 = !DILocation(line: 37, column: 37, scope: !6380)
!6389 = !DILocation(line: 37, column: 17, scope: !6380)
!6390 = !DILocation(line: 37, column: 35, scope: !6380)
!6391 = !DILocation(line: 41, column: 12, scope: !6380)
!6392 = !DILocalVariable(name: "key", arg: 1, scope: !6393, file: !5954, line: 84, type: !32)
!6393 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6394)
!6394 = !{!6392}
!6395 = !DILocation(line: 0, scope: !6393, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 44, column: 2, scope: !6380)
!6397 = !DILocation(line: 95, column: 2, scope: !6393, inlinedAt: !6396)
!6398 = !{i64 2041235}
!6399 = !DILocation(line: 53, column: 9, scope: !6380)
!6400 = !DILocation(line: 53, column: 24, scope: !6380)
!6401 = !DILocation(line: 53, column: 2, scope: !6380)
!6402 = distinct !DISubprogram(name: "arch_new_thread", scope: !6403, file: !6403, line: 56, type: !6404, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6514)
!6403 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6404 = !DISubroutineType(types: !6405)
!6405 = !{null, !6406, !6509, !193, !559, !106, !106, !106}
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 32)
!6407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6408)
!6408 = !{!6409, !6467, !6479, !6480, !6481, !6482, !6483, !6489, !6504}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6407, file: !309, line: 247, baseType: !6410, size: 384)
!6410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6411)
!6411 = !{!6412, !6436, !6443, !6444, !6445, !6454, !6455, !6456}
!6412 = !DIDerivedType(tag: DW_TAG_member, scope: !6410, file: !309, line: 60, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6410, file: !309, line: 60, size: 64, elements: !6414)
!6414 = !{!6415, !6430}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6413, file: !309, line: 61, baseType: !6416, size: 64)
!6416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6417)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6418)
!6418 = !{!6419, !6425}
!6419 = !DIDerivedType(tag: DW_TAG_member, scope: !6417, file: !319, line: 38, baseType: !6420, size: 32)
!6420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6417, file: !319, line: 38, size: 32, elements: !6421)
!6421 = !{!6422, !6424}
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6420, file: !319, line: 39, baseType: !6423, size: 32)
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 32)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6420, file: !319, line: 40, baseType: !6423, size: 32)
!6425 = !DIDerivedType(tag: DW_TAG_member, scope: !6417, file: !319, line: 42, baseType: !6426, size: 32, offset: 32)
!6426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6417, file: !319, line: 42, size: 32, elements: !6427)
!6427 = !{!6428, !6429}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6426, file: !319, line: 43, baseType: !6423, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6426, file: !319, line: 44, baseType: !6423, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6413, file: !309, line: 62, baseType: !6431, size: 64)
!6431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6432)
!6432 = !{!6433}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6431, file: !335, line: 50, baseType: !6434, size: 64)
!6434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6435, size: 64, elements: !340)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 32)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6410, file: !309, line: 68, baseType: !6437, size: 32, offset: 64)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 32)
!6438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6439)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6440)
!6440 = !{!6441}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6439, file: !345, line: 232, baseType: !6442, size: 64)
!6442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6417)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6410, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6410, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6445 = !DIDerivedType(tag: DW_TAG_member, scope: !6410, file: !309, line: 90, baseType: !6446, size: 16, offset: 112)
!6446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6410, file: !309, line: 90, size: 16, elements: !6447)
!6447 = !{!6448, !6453}
!6448 = !DIDerivedType(tag: DW_TAG_member, scope: !6446, file: !309, line: 91, baseType: !6449, size: 16)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6446, file: !309, line: 91, size: 16, elements: !6450)
!6450 = !{!6451, !6452}
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6449, file: !309, line: 96, baseType: !359, size: 8)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6449, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6446, file: !309, line: 100, baseType: !197, size: 16)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6410, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6410, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6410, file: !309, line: 131, baseType: !6457, size: 192, offset: 192)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6458)
!6458 = !{!6459, !6460, !6466}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6457, file: !345, line: 245, baseType: !6416, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6457, file: !345, line: 246, baseType: !6461, size: 32, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6462)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 32)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{null, !6465}
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6457, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6407, file: !309, line: 250, baseType: !6468, size: 288, offset: 384)
!6468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6469)
!6469 = !{!6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478}
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6468, file: !379, line: 26, baseType: !152, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6468, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6468, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6468, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6468, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6468, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6468, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6468, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6468, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6407, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6407, file: !309, line: 256, baseType: !6438, size: 64, offset: 704)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6407, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6407, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6407, file: !309, line: 300, baseType: !6484, size: 96, offset: 1056)
!6484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6485)
!6485 = !{!6486, !6487, !6488}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6484, file: !309, line: 153, baseType: !22, size: 32)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6484, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6484, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6407, file: !309, line: 325, baseType: !6490, size: 32, offset: 1152)
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 32)
!6491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6492)
!6492 = !{!6493, !6499, !6500}
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6491, file: !406, line: 5074, baseType: !6494, size: 96)
!6494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6495)
!6495 = !{!6496, !6497, !6498}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6494, file: !410, line: 57, baseType: !413, size: 32)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6494, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6494, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6491, file: !406, line: 5075, baseType: !6438, size: 64, offset: 96)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6491, file: !406, line: 5076, baseType: !6501, size: 32, offset: 160)
!6501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6502)
!6502 = !{!6503}
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6501, file: !420, line: 52, baseType: !22, size: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6407, file: !309, line: 343, baseType: !6505, size: 64, offset: 1184)
!6505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6506)
!6506 = !{!6507, !6508}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6505, file: !379, line: 63, baseType: !152, size: 32)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6505, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6510, size: 32)
!6510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6511)
!6511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6512)
!6512 = !{!6513}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6511, file: !577, line: 48, baseType: !120, size: 8)
!6514 = !{!6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522}
!6515 = !DILocalVariable(name: "thread", arg: 1, scope: !6402, file: !6403, line: 56, type: !6406)
!6516 = !DILocalVariable(name: "stack", arg: 2, scope: !6402, file: !6403, line: 56, type: !6509)
!6517 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6402, file: !6403, line: 57, type: !193)
!6518 = !DILocalVariable(name: "entry", arg: 4, scope: !6402, file: !6403, line: 57, type: !559)
!6519 = !DILocalVariable(name: "p1", arg: 5, scope: !6402, file: !6403, line: 58, type: !106)
!6520 = !DILocalVariable(name: "p2", arg: 6, scope: !6402, file: !6403, line: 58, type: !106)
!6521 = !DILocalVariable(name: "p3", arg: 7, scope: !6402, file: !6403, line: 58, type: !106)
!6522 = !DILocalVariable(name: "iframe", scope: !6402, file: !6403, line: 60, type: !2689)
!6523 = !DILocation(line: 0, scope: !6402)
!6524 = !DILocation(line: 85, column: 11, scope: !6402)
!6525 = !DILocation(line: 93, column: 10, scope: !6402)
!6526 = !DILocation(line: 98, column: 13, scope: !6402)
!6527 = !DILocation(line: 100, column: 15, scope: !6402)
!6528 = !DILocation(line: 100, column: 10, scope: !6402)
!6529 = !DILocation(line: 100, column: 13, scope: !6402)
!6530 = !DILocation(line: 101, column: 15, scope: !6402)
!6531 = !DILocation(line: 101, column: 10, scope: !6402)
!6532 = !DILocation(line: 101, column: 13, scope: !6402)
!6533 = !DILocation(line: 102, column: 15, scope: !6402)
!6534 = !DILocation(line: 102, column: 10, scope: !6402)
!6535 = !DILocation(line: 102, column: 13, scope: !6402)
!6536 = !DILocation(line: 103, column: 15, scope: !6402)
!6537 = !DILocation(line: 103, column: 10, scope: !6402)
!6538 = !DILocation(line: 103, column: 13, scope: !6402)
!6539 = !DILocation(line: 106, column: 10, scope: !6402)
!6540 = !DILocation(line: 106, column: 15, scope: !6402)
!6541 = !DILocation(line: 122, column: 29, scope: !6402)
!6542 = !DILocation(line: 122, column: 23, scope: !6402)
!6543 = !DILocation(line: 122, column: 27, scope: !6402)
!6544 = !DILocation(line: 123, column: 15, scope: !6402)
!6545 = !DILocation(line: 123, column: 23, scope: !6402)
!6546 = !DILocation(line: 143, column: 1, scope: !6402)
!6547 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6403, file: !6403, line: 385, type: !6548, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6551)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{!152, !6550, !6550}
!6550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6551 = !{!6552, !6553, !6554, !6557}
!6552 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6547, file: !6403, line: 385, type: !6550)
!6553 = !DILocalVariable(name: "psp", arg: 2, scope: !6547, file: !6403, line: 385, type: !6550)
!6554 = !DILocalVariable(name: "thread", scope: !6547, file: !6403, line: 388, type: !6555)
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6407)
!6557 = !DILocalVariable(name: "guard_len", scope: !6547, file: !6403, line: 405, type: !152)
!6558 = !DILocation(line: 0, scope: !6547)
!6559 = !DILocation(line: 388, column: 34, scope: !6547)
!6560 = !DILocation(line: 390, column: 13, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6547, file: !6403, line: 390, column: 6)
!6562 = !DILocation(line: 390, column: 6, scope: !6547)
!6563 = !DILocation(line: 438, column: 6, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6547, file: !6403, line: 438, column: 6)
!6565 = !DILocation(line: 438, column: 6, scope: !6547)
!6566 = !DILocation(line: 442, column: 3, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !6403, line: 440, column: 22)
!6568 = !DILocation(line: 455, column: 1, scope: !6547)
!6569 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6403, file: !6403, line: 530, type: !6570, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{null, !6406, !193, !559}
!6572 = !{!6573, !6574, !6575}
!6573 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6569, file: !6403, line: 530, type: !6406)
!6574 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6569, file: !6403, line: 530, type: !193)
!6575 = !DILocalVariable(name: "_main", arg: 3, scope: !6569, file: !6403, line: 531, type: !559)
!6576 = !DILocation(line: 0, scope: !6569)
!6577 = !DILocation(line: 535, column: 11, scope: !6569)
!6578 = !DILocation(line: 560, column: 2, scope: !6569)
!6579 = !DILocation(line: 576, column: 2, scope: !6569)
!6580 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6581 = !DILocation(line: 603, column: 2, scope: !6569)
!6582 = distinct !DISubprogram(name: "z_arm_fault", scope: !6583, file: !6583, line: 1036, type: !6584, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6599)
!6583 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6584 = !DISubroutineType(types: !6585)
!6585 = !{null, !152, !152, !152, !6586}
!6586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6587, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6588)
!6588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6589)
!6589 = !{!6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6588, file: !379, line: 26, baseType: !152, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6588, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6588, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6588, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6588, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6588, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6588, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6588, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6588, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6599 = !{!6600, !6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608, !6609}
!6600 = !DILocalVariable(name: "msp", arg: 1, scope: !6582, file: !6583, line: 1036, type: !152)
!6601 = !DILocalVariable(name: "psp", arg: 2, scope: !6582, file: !6583, line: 1036, type: !152)
!6602 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6582, file: !6583, line: 1036, type: !152)
!6603 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6582, file: !6583, line: 1037, type: !6586)
!6604 = !DILocalVariable(name: "reason", scope: !6582, file: !6583, line: 1039, type: !152)
!6605 = !DILocalVariable(name: "fault", scope: !6582, file: !6583, line: 1040, type: !107)
!6606 = !DILocalVariable(name: "recoverable", scope: !6582, file: !6583, line: 1041, type: !145)
!6607 = !DILocalVariable(name: "nested_exc", scope: !6582, file: !6583, line: 1041, type: !145)
!6608 = !DILocalVariable(name: "esf", scope: !6582, file: !6583, line: 1042, type: !2757)
!6609 = !DILocalVariable(name: "esf_copy", scope: !6582, file: !6583, line: 1047, type: !2758)
!6610 = !DILocation(line: 0, scope: !6582)
!6611 = !DILocation(line: 1040, column: 19, scope: !6582)
!6612 = !DILocation(line: 1041, column: 2, scope: !6582)
!6613 = !DILocation(line: 1047, column: 2, scope: !6582)
!6614 = !DILocation(line: 1047, column: 15, scope: !6582)
!6615 = !DILocalVariable(name: "key", arg: 1, scope: !6616, file: !5954, line: 84, type: !32)
!6616 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6617)
!6617 = !{!6615}
!6618 = !DILocation(line: 0, scope: !6616, inlinedAt: !6619)
!6619 = distinct !DILocation(line: 1050, column: 2, scope: !6582)
!6620 = !DILocation(line: 95, column: 2, scope: !6616, inlinedAt: !6619)
!6621 = !{i64 2074479}
!6622 = !DILocation(line: 1055, column: 9, scope: !6582)
!6623 = !DILocation(line: 1056, column: 2, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !6583, line: 1056, column: 2)
!6625 = distinct !DILexicalBlock(scope: !6582, file: !6583, line: 1056, column: 2)
!6626 = !DILocation(line: 1056, column: 2, scope: !6625)
!6627 = !DILocation(line: 1056, column: 2, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !6583, line: 1056, column: 2)
!6629 = !DILocation(line: 1040, column: 24, scope: !6582)
!6630 = !DILocation(line: 1063, column: 11, scope: !6582)
!6631 = !DILocation(line: 1064, column: 6, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6582, file: !6583, line: 1064, column: 6)
!6633 = !{i8 0, i8 2}
!6634 = !DILocation(line: 1064, column: 6, scope: !6582)
!6635 = !DILocation(line: 1070, column: 20, scope: !6582)
!6636 = !DILocation(line: 1070, column: 2, scope: !6582)
!6637 = !DILocation(line: 1089, column: 6, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6582, file: !6583, line: 1089, column: 6)
!6639 = !DILocation(line: 0, scope: !6638)
!6640 = !DILocation(line: 1089, column: 6, scope: !6582)
!6641 = !DILocation(line: 1090, column: 28, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !6583, line: 1090, column: 7)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !6583, line: 1089, column: 18)
!6644 = !DILocation(line: 1090, column: 44, scope: !6642)
!6645 = !DILocation(line: 1090, column: 7, scope: !6643)
!6646 = !DILocation(line: 1091, column: 24, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6642, file: !6583, line: 1090, column: 50)
!6648 = !DILocation(line: 1092, column: 3, scope: !6647)
!6649 = !DILocation(line: 1094, column: 23, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6638, file: !6583, line: 1093, column: 9)
!6651 = !DILocation(line: 1097, column: 2, scope: !6582)
!6652 = !DILocation(line: 1098, column: 1, scope: !6582)
!6653 = distinct !DISubprogram(name: "get_esf", scope: !6583, file: !6583, line: 894, type: !6654, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6657)
!6654 = !DISubroutineType(types: !6655)
!6655 = !{!2757, !152, !152, !152, !6656}
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6657 = !{!6658, !6659, !6660, !6661, !6662, !6663}
!6658 = !DILocalVariable(name: "msp", arg: 1, scope: !6653, file: !6583, line: 894, type: !152)
!6659 = !DILocalVariable(name: "psp", arg: 2, scope: !6653, file: !6583, line: 894, type: !152)
!6660 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6653, file: !6583, line: 894, type: !152)
!6661 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6653, file: !6583, line: 895, type: !6656)
!6662 = !DILocalVariable(name: "alternative_state_exc", scope: !6653, file: !6583, line: 897, type: !145)
!6663 = !DILocalVariable(name: "ptr_esf", scope: !6653, file: !6583, line: 898, type: !2757)
!6664 = !DILocation(line: 0, scope: !6653)
!6665 = !DILocation(line: 900, column: 14, scope: !6653)
!6666 = !DILocation(line: 902, column: 49, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6653, file: !6583, line: 902, column: 6)
!6668 = !DILocation(line: 902, column: 6, scope: !6653)
!6669 = !DILocation(line: 983, column: 44, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6653, file: !6583, line: 983, column: 6)
!6671 = !DILocation(line: 985, column: 3, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !6583, line: 985, column: 3)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !6583, line: 985, column: 3)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !6583, line: 985, column: 3)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !6583, line: 985, column: 3)
!6676 = distinct !DILexicalBlock(scope: !6670, file: !6583, line: 984, column: 47)
!6677 = !DILocation(line: 986, column: 3, scope: !6676)
!6678 = !DILocation(line: 983, column: 18, scope: !6670)
!6679 = !DILocation(line: 991, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6583, line: 990, column: 30)
!6681 = distinct !DILexicalBlock(scope: !6653, file: !6583, line: 990, column: 6)
!6682 = !DILocation(line: 998, column: 16, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6583, line: 995, column: 10)
!6684 = distinct !DILexicalBlock(scope: !6680, file: !6583, line: 991, column: 7)
!6685 = !DILocation(line: 1002, column: 2, scope: !6653)
!6686 = !DILocation(line: 1003, column: 1, scope: !6653)
!6687 = distinct !DISubprogram(name: "fault_handle", scope: !6583, file: !6583, line: 786, type: !6688, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6690)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{!152, !2757, !107, !6656}
!6690 = !{!6691, !6692, !6693, !6694}
!6691 = !DILocalVariable(name: "esf", arg: 1, scope: !6687, file: !6583, line: 786, type: !2757)
!6692 = !DILocalVariable(name: "fault", arg: 2, scope: !6687, file: !6583, line: 786, type: !107)
!6693 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6687, file: !6583, line: 786, type: !6656)
!6694 = !DILocalVariable(name: "reason", scope: !6687, file: !6583, line: 788, type: !152)
!6695 = !DILocation(line: 0, scope: !6687)
!6696 = !DILocation(line: 790, column: 15, scope: !6687)
!6697 = !DILocation(line: 792, column: 2, scope: !6687)
!6698 = !DILocation(line: 794, column: 12, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6687, file: !6583, line: 792, column: 17)
!6700 = !DILocation(line: 795, column: 3, scope: !6699)
!6701 = !DILocation(line: 800, column: 12, scope: !6699)
!6702 = !DILocation(line: 801, column: 3, scope: !6699)
!6703 = !DILocation(line: 803, column: 12, scope: !6699)
!6704 = !DILocation(line: 804, column: 3, scope: !6699)
!6705 = !DILocation(line: 806, column: 12, scope: !6699)
!6706 = !DILocation(line: 807, column: 3, scope: !6699)
!6707 = !DILocation(line: 814, column: 3, scope: !6699)
!6708 = !DILocation(line: 815, column: 3, scope: !6699)
!6709 = !DILocation(line: 820, column: 3, scope: !6699)
!6710 = !DILocation(line: 821, column: 3, scope: !6699)
!6711 = !DILocation(line: 829, column: 2, scope: !6687)
!6712 = distinct !DISubprogram(name: "hard_fault", scope: !6583, file: !6583, line: 709, type: !6713, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6715)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!152, !2757, !6656}
!6715 = !{!6716, !6717, !6718}
!6716 = !DILocalVariable(name: "esf", arg: 1, scope: !6712, file: !6583, line: 709, type: !2757)
!6717 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6712, file: !6583, line: 709, type: !6656)
!6718 = !DILocalVariable(name: "reason", scope: !6712, file: !6583, line: 711, type: !152)
!6719 = !DILocation(line: 0, scope: !6712)
!6720 = !DILocation(line: 713, column: 2, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6583, line: 713, column: 2)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6583, line: 713, column: 2)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6583, line: 713, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6712, file: !6583, line: 713, column: 2)
!6725 = !DILocation(line: 732, column: 15, scope: !6712)
!6726 = !DILocation(line: 734, column: 12, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6712, file: !6583, line: 734, column: 6)
!6728 = !DILocation(line: 734, column: 17, scope: !6727)
!6729 = !DILocation(line: 734, column: 41, scope: !6727)
!6730 = !DILocation(line: 734, column: 6, scope: !6712)
!6731 = !DILocation(line: 735, column: 3, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !6583, line: 735, column: 3)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !6583, line: 735, column: 3)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6583, line: 735, column: 3)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !6583, line: 735, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6727, file: !6583, line: 734, column: 47)
!6737 = !DILocation(line: 736, column: 2, scope: !6736)
!6738 = !DILocation(line: 736, column: 19, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6727, file: !6583, line: 736, column: 13)
!6740 = !DILocation(line: 736, column: 49, scope: !6739)
!6741 = !DILocation(line: 736, column: 13, scope: !6727)
!6742 = !DILocation(line: 737, column: 3, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6583, line: 737, column: 3)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6583, line: 737, column: 3)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6583, line: 737, column: 3)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6583, line: 737, column: 3)
!6747 = distinct !DILexicalBlock(scope: !6739, file: !6583, line: 736, column: 55)
!6748 = !DILocation(line: 738, column: 2, scope: !6747)
!6749 = !DILocation(line: 738, column: 19, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6739, file: !6583, line: 738, column: 13)
!6751 = !DILocation(line: 738, column: 24, scope: !6750)
!6752 = !DILocation(line: 738, column: 47, scope: !6750)
!6753 = !DILocation(line: 738, column: 13, scope: !6739)
!6754 = !DILocation(line: 739, column: 3, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !6583, line: 739, column: 3)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !6583, line: 739, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6583, line: 739, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6583, line: 739, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6750, file: !6583, line: 738, column: 53)
!6760 = !DILocation(line: 740, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6759, file: !6583, line: 740, column: 7)
!6762 = !DILocation(line: 740, column: 7, scope: !6759)
!6763 = !DILocation(line: 741, column: 4, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !6583, line: 741, column: 4)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !6583, line: 741, column: 4)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6583, line: 741, column: 4)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6583, line: 741, column: 4)
!6768 = distinct !DILexicalBlock(scope: !6761, file: !6583, line: 740, column: 38)
!6769 = !DILocation(line: 742, column: 24, scope: !6768)
!6770 = !DILocation(line: 743, column: 3, scope: !6768)
!6771 = !DILocation(line: 743, column: 20, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6761, file: !6583, line: 743, column: 14)
!6773 = !DILocation(line: 743, column: 25, scope: !6772)
!6774 = !DILocation(line: 743, column: 52, scope: !6772)
!6775 = !DILocation(line: 743, column: 14, scope: !6761)
!6776 = !DILocation(line: 744, column: 13, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6772, file: !6583, line: 743, column: 58)
!6778 = !DILocation(line: 745, column: 3, scope: !6777)
!6779 = !DILocation(line: 745, column: 20, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6772, file: !6583, line: 745, column: 14)
!6781 = !DILocation(line: 745, column: 25, scope: !6780)
!6782 = !DILocation(line: 745, column: 52, scope: !6780)
!6783 = !DILocation(line: 745, column: 14, scope: !6772)
!6784 = !DILocation(line: 746, column: 13, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6780, file: !6583, line: 745, column: 58)
!6786 = !DILocation(line: 747, column: 3, scope: !6785)
!6787 = !DILocation(line: 747, column: 20, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6780, file: !6583, line: 747, column: 14)
!6789 = !DILocation(line: 747, column: 52, scope: !6788)
!6790 = !DILocation(line: 747, column: 14, scope: !6780)
!6791 = !DILocation(line: 748, column: 13, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !6583, line: 747, column: 58)
!6793 = !DILocation(line: 754, column: 4, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6583, line: 754, column: 4)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6583, line: 754, column: 4)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6583, line: 754, column: 4)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !6583, line: 753, column: 10)
!6798 = !DILocation(line: 758, column: 3, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6583, line: 758, column: 3)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6583, line: 758, column: 3)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6583, line: 758, column: 3)
!6802 = distinct !DILexicalBlock(scope: !6750, file: !6583, line: 757, column: 9)
!6803 = !DILocation(line: 766, column: 2, scope: !6712)
!6804 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6583, file: !6583, line: 229, type: !6688, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6805)
!6805 = !{!6806, !6807, !6808, !6809, !6810, !6811, !6814}
!6806 = !DILocalVariable(name: "esf", arg: 1, scope: !6804, file: !6583, line: 229, type: !2757)
!6807 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6804, file: !6583, line: 229, type: !107)
!6808 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6804, file: !6583, line: 230, type: !6656)
!6809 = !DILocalVariable(name: "reason", scope: !6804, file: !6583, line: 232, type: !152)
!6810 = !DILocalVariable(name: "mmfar", scope: !6804, file: !6583, line: 233, type: !152)
!6811 = !DILocalVariable(name: "temp", scope: !6812, file: !6583, line: 254, type: !152)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6583, line: 244, column: 48)
!6813 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 244, column: 6)
!6814 = !DILocalVariable(name: "min_stack_ptr", scope: !6815, file: !6583, line: 309, type: !152)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6583, line: 308, column: 43)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6583, line: 308, column: 7)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6583, line: 289, column: 40)
!6818 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 288, column: 6)
!6819 = !DILocation(line: 0, scope: !6804)
!6820 = !DILocation(line: 235, column: 2, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6583, line: 235, column: 2)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6583, line: 235, column: 2)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6583, line: 235, column: 2)
!6824 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 235, column: 2)
!6825 = !DILocation(line: 237, column: 12, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 237, column: 6)
!6827 = !DILocation(line: 237, column: 17, scope: !6826)
!6828 = !DILocation(line: 237, column: 41, scope: !6826)
!6829 = !DILocation(line: 237, column: 6, scope: !6804)
!6830 = !DILocation(line: 238, column: 3, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6583, line: 238, column: 3)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6583, line: 238, column: 3)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6583, line: 238, column: 3)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6583, line: 238, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6826, file: !6583, line: 237, column: 47)
!6836 = !DILocation(line: 240, column: 2, scope: !6835)
!6837 = !DILocation(line: 241, column: 12, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 241, column: 6)
!6839 = !DILocation(line: 241, column: 17, scope: !6838)
!6840 = !DILocation(line: 241, column: 43, scope: !6838)
!6841 = !DILocation(line: 241, column: 6, scope: !6804)
!6842 = !DILocation(line: 242, column: 3, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6583, line: 242, column: 3)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6583, line: 242, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6583, line: 242, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6583, line: 242, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6838, file: !6583, line: 241, column: 49)
!6848 = !DILocation(line: 243, column: 2, scope: !6847)
!6849 = !DILocation(line: 244, column: 12, scope: !6813)
!6850 = !DILocation(line: 244, column: 17, scope: !6813)
!6851 = !DILocation(line: 244, column: 42, scope: !6813)
!6852 = !DILocation(line: 244, column: 6, scope: !6804)
!6853 = !DILocation(line: 245, column: 3, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6583, line: 245, column: 3)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6583, line: 245, column: 3)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6583, line: 245, column: 3)
!6857 = distinct !DILexicalBlock(scope: !6812, file: !6583, line: 245, column: 3)
!6858 = !DILocation(line: 254, column: 24, scope: !6812)
!6859 = !DILocation(line: 0, scope: !6812)
!6860 = !DILocation(line: 256, column: 13, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6812, file: !6583, line: 256, column: 7)
!6862 = !DILocation(line: 256, column: 18, scope: !6861)
!6863 = !DILocation(line: 256, column: 44, scope: !6861)
!6864 = !DILocation(line: 256, column: 7, scope: !6812)
!6865 = !DILocation(line: 258, column: 4, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6583, line: 258, column: 4)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6583, line: 258, column: 4)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6583, line: 258, column: 4)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6583, line: 258, column: 4)
!6870 = distinct !DILexicalBlock(scope: !6861, file: !6583, line: 256, column: 50)
!6871 = !DILocation(line: 259, column: 24, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6870, file: !6583, line: 259, column: 8)
!6873 = !DILocation(line: 259, column: 8, scope: !6870)
!6874 = !DILocation(line: 261, column: 15, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !6583, line: 259, column: 30)
!6876 = !DILocation(line: 262, column: 4, scope: !6875)
!6877 = !DILocation(line: 265, column: 12, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 265, column: 6)
!6879 = !DILocation(line: 265, column: 17, scope: !6878)
!6880 = !DILocation(line: 265, column: 42, scope: !6878)
!6881 = !DILocation(line: 265, column: 6, scope: !6804)
!6882 = !DILocation(line: 266, column: 3, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6583, line: 266, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6583, line: 266, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6583, line: 266, column: 3)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6583, line: 266, column: 3)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !6583, line: 265, column: 48)
!6888 = !DILocation(line: 267, column: 2, scope: !6887)
!6889 = !DILocation(line: 269, column: 12, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 269, column: 6)
!6891 = !DILocation(line: 269, column: 17, scope: !6890)
!6892 = !DILocation(line: 269, column: 41, scope: !6890)
!6893 = !DILocation(line: 269, column: 6, scope: !6804)
!6894 = !DILocation(line: 270, column: 3, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6583, line: 270, column: 3)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6583, line: 270, column: 3)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !6583, line: 270, column: 3)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6583, line: 270, column: 3)
!6899 = distinct !DILexicalBlock(scope: !6890, file: !6583, line: 269, column: 47)
!6900 = !DILocation(line: 272, column: 2, scope: !6899)
!6901 = !DILocation(line: 288, column: 12, scope: !6818)
!6902 = !DILocation(line: 288, column: 17, scope: !6818)
!6903 = !DILocation(line: 288, column: 41, scope: !6818)
!6904 = !DILocation(line: 289, column: 9, scope: !6818)
!6905 = !DILocation(line: 289, column: 14, scope: !6818)
!6906 = !DILocation(line: 288, column: 6, scope: !6804)
!6907 = !DILocation(line: 308, column: 12, scope: !6816)
!6908 = !DILocation(line: 308, column: 17, scope: !6816)
!6909 = !DILocation(line: 308, column: 7, scope: !6817)
!6910 = !DILocation(line: 310, column: 6, scope: !6815)
!6911 = !DILocation(line: 309, column: 29, scope: !6815)
!6912 = !DILocation(line: 0, scope: !6815)
!6913 = !DILocation(line: 312, column: 8, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6815, file: !6583, line: 312, column: 8)
!6915 = !DILocation(line: 312, column: 8, scope: !6815)
!6916 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6917, file: !6273, line: 1099, type: !152)
!6917 = distinct !DISubprogram(name: "__set_PSP", scope: !6273, file: !6273, line: 1099, type: !6370, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6918)
!6918 = !{!6916}
!6919 = !DILocation(line: 0, scope: !6917, inlinedAt: !6920)
!6920 = distinct !DILocation(line: 338, column: 5, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6914, file: !6583, line: 312, column: 23)
!6922 = !DILocation(line: 1101, column: 3, scope: !6917, inlinedAt: !6920)
!6923 = !{i64 2949844}
!6924 = !DILocation(line: 341, column: 4, scope: !6921)
!6925 = !DILocation(line: 342, column: 5, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6583, line: 342, column: 5)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6583, line: 342, column: 5)
!6928 = distinct !DILexicalBlock(scope: !6914, file: !6583, line: 341, column: 11)
!6929 = !DILocation(line: 342, column: 5, scope: !6927)
!6930 = !DILocation(line: 342, column: 5, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6926, file: !6583, line: 342, column: 5)
!6932 = !DILocation(line: 360, column: 12, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6804, file: !6583, line: 360, column: 6)
!6934 = !DILocation(line: 360, column: 17, scope: !6933)
!6935 = !DILocation(line: 360, column: 41, scope: !6933)
!6936 = !DILocation(line: 360, column: 6, scope: !6804)
!6937 = !DILocation(line: 361, column: 14, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6933, file: !6583, line: 360, column: 47)
!6939 = !DILocation(line: 362, column: 2, scope: !6938)
!6940 = !DILocation(line: 366, column: 12, scope: !6804)
!6941 = !DILocation(line: 369, column: 15, scope: !6804)
!6942 = !DILocation(line: 371, column: 2, scope: !6804)
!6943 = distinct !DISubprogram(name: "bus_fault", scope: !6583, file: !6583, line: 383, type: !6944, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6946)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!107, !2757, !107, !6656}
!6946 = !{!6947, !6948, !6949, !6950, !6951}
!6947 = !DILocalVariable(name: "esf", arg: 1, scope: !6943, file: !6583, line: 383, type: !2757)
!6948 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6943, file: !6583, line: 383, type: !107)
!6949 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6943, file: !6583, line: 383, type: !6656)
!6950 = !DILocalVariable(name: "reason", scope: !6943, file: !6583, line: 385, type: !152)
!6951 = !DILocalVariable(name: "bfar", scope: !6952, file: !6583, line: 405, type: !152)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6583, line: 395, column: 42)
!6953 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 395, column: 6)
!6954 = !DILocation(line: 0, scope: !6943)
!6955 = !DILocation(line: 387, column: 2, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6583, line: 387, column: 2)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6583, line: 387, column: 2)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6583, line: 387, column: 2)
!6959 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 387, column: 2)
!6960 = !DILocation(line: 389, column: 11, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 389, column: 6)
!6962 = !DILocation(line: 389, column: 16, scope: !6961)
!6963 = !DILocation(line: 389, column: 6, scope: !6943)
!6964 = !DILocation(line: 390, column: 3, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6583, line: 390, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6583, line: 390, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6583, line: 390, column: 3)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6583, line: 390, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6961, file: !6583, line: 389, column: 39)
!6970 = !DILocation(line: 391, column: 2, scope: !6969)
!6971 = !DILocation(line: 392, column: 11, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 392, column: 6)
!6973 = !DILocation(line: 392, column: 16, scope: !6972)
!6974 = !DILocation(line: 392, column: 6, scope: !6943)
!6975 = !DILocation(line: 393, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6583, line: 393, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6583, line: 393, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6583, line: 393, column: 3)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6583, line: 393, column: 3)
!6980 = distinct !DILexicalBlock(scope: !6972, file: !6583, line: 392, column: 41)
!6981 = !DILocation(line: 394, column: 2, scope: !6980)
!6982 = !DILocation(line: 395, column: 11, scope: !6953)
!6983 = !DILocation(line: 395, column: 16, scope: !6953)
!6984 = !DILocation(line: 395, column: 6, scope: !6943)
!6985 = !DILocation(line: 396, column: 3, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6583, line: 396, column: 3)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6583, line: 396, column: 3)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6583, line: 396, column: 3)
!6989 = distinct !DILexicalBlock(scope: !6952, file: !6583, line: 396, column: 3)
!6990 = !DILocation(line: 405, column: 3, scope: !6952)
!6991 = !DILocation(line: 0, scope: !6952)
!6992 = !DILocation(line: 407, column: 13, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6952, file: !6583, line: 407, column: 7)
!6994 = !DILocation(line: 407, column: 18, scope: !6993)
!6995 = !DILocation(line: 407, column: 44, scope: !6993)
!6996 = !DILocation(line: 407, column: 7, scope: !6952)
!6997 = !DILocation(line: 408, column: 4, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6583, line: 408, column: 4)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6583, line: 408, column: 4)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6583, line: 408, column: 4)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6583, line: 408, column: 4)
!7002 = distinct !DILexicalBlock(scope: !6993, file: !6583, line: 407, column: 50)
!7003 = !DILocation(line: 409, column: 24, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7002, file: !6583, line: 409, column: 8)
!7005 = !DILocation(line: 409, column: 8, scope: !7002)
!7006 = !DILocation(line: 411, column: 15, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7004, file: !6583, line: 409, column: 30)
!7008 = !DILocation(line: 412, column: 4, scope: !7007)
!7009 = !DILocation(line: 415, column: 11, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 415, column: 6)
!7011 = !DILocation(line: 415, column: 16, scope: !7010)
!7012 = !DILocation(line: 415, column: 6, scope: !6943)
!7013 = !DILocation(line: 416, column: 3, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6583, line: 416, column: 3)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6583, line: 416, column: 3)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6583, line: 416, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6583, line: 416, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7010, file: !6583, line: 415, column: 44)
!7019 = !DILocation(line: 417, column: 2, scope: !7018)
!7020 = !DILocation(line: 418, column: 12, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6943, file: !6583, line: 418, column: 6)
!7022 = !DILocation(line: 418, column: 17, scope: !7021)
!7023 = !DILocation(line: 418, column: 41, scope: !7021)
!7024 = !DILocation(line: 418, column: 6, scope: !6943)
!7025 = !DILocation(line: 423, column: 18, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7021, file: !6583, line: 423, column: 13)
!7027 = !DILocation(line: 423, column: 23, scope: !7026)
!7028 = !DILocation(line: 423, column: 13, scope: !7021)
!7029 = !DILocation(line: 0, scope: !7021)
!7030 = !DILocation(line: 524, column: 12, scope: !6943)
!7031 = !DILocation(line: 526, column: 15, scope: !6943)
!7032 = !DILocation(line: 528, column: 2, scope: !6943)
!7033 = distinct !DISubprogram(name: "usage_fault", scope: !6583, file: !6583, line: 539, type: !7034, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7038)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!152, !7036}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 32)
!7037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2758)
!7038 = !{!7039, !7040}
!7039 = !DILocalVariable(name: "esf", arg: 1, scope: !7033, file: !6583, line: 539, type: !7036)
!7040 = !DILocalVariable(name: "reason", scope: !7033, file: !6583, line: 541, type: !152)
!7041 = !DILocation(line: 0, scope: !7033)
!7042 = !DILocation(line: 543, column: 2, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6583, line: 543, column: 2)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6583, line: 543, column: 2)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6583, line: 543, column: 2)
!7046 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 543, column: 2)
!7047 = !DILocation(line: 546, column: 12, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 546, column: 6)
!7049 = !DILocation(line: 546, column: 17, scope: !7048)
!7050 = !DILocation(line: 546, column: 43, scope: !7048)
!7051 = !DILocation(line: 546, column: 6, scope: !7033)
!7052 = !DILocation(line: 547, column: 3, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !6583, line: 547, column: 3)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !6583, line: 547, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !6583, line: 547, column: 3)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6583, line: 547, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7048, file: !6583, line: 546, column: 49)
!7058 = !DILocation(line: 548, column: 2, scope: !7057)
!7059 = !DILocation(line: 549, column: 12, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 549, column: 6)
!7061 = !DILocation(line: 549, column: 17, scope: !7060)
!7062 = !DILocation(line: 549, column: 43, scope: !7060)
!7063 = !DILocation(line: 549, column: 6, scope: !7033)
!7064 = !DILocation(line: 550, column: 3, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !6583, line: 550, column: 3)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !6583, line: 550, column: 3)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !6583, line: 550, column: 3)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6583, line: 550, column: 3)
!7069 = distinct !DILexicalBlock(scope: !7060, file: !6583, line: 549, column: 49)
!7070 = !DILocation(line: 551, column: 2, scope: !7069)
!7071 = !DILocation(line: 567, column: 12, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 567, column: 6)
!7073 = !DILocation(line: 567, column: 17, scope: !7072)
!7074 = !DILocation(line: 567, column: 38, scope: !7072)
!7075 = !DILocation(line: 567, column: 6, scope: !7033)
!7076 = !DILocation(line: 568, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6583, line: 568, column: 3)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !6583, line: 568, column: 3)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !6583, line: 568, column: 3)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6583, line: 568, column: 3)
!7081 = distinct !DILexicalBlock(scope: !7072, file: !6583, line: 567, column: 44)
!7082 = !DILocation(line: 569, column: 2, scope: !7081)
!7083 = !DILocation(line: 570, column: 12, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 570, column: 6)
!7085 = !DILocation(line: 570, column: 17, scope: !7084)
!7086 = !DILocation(line: 570, column: 39, scope: !7084)
!7087 = !DILocation(line: 570, column: 6, scope: !7033)
!7088 = !DILocation(line: 571, column: 3, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !6583, line: 571, column: 3)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6583, line: 571, column: 3)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6583, line: 571, column: 3)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6583, line: 571, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7084, file: !6583, line: 570, column: 45)
!7094 = !DILocation(line: 572, column: 2, scope: !7093)
!7095 = !DILocation(line: 573, column: 12, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 573, column: 6)
!7097 = !DILocation(line: 573, column: 17, scope: !7096)
!7098 = !DILocation(line: 573, column: 42, scope: !7096)
!7099 = !DILocation(line: 573, column: 6, scope: !7033)
!7100 = !DILocation(line: 574, column: 3, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6583, line: 574, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6583, line: 574, column: 3)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6583, line: 574, column: 3)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6583, line: 574, column: 3)
!7105 = distinct !DILexicalBlock(scope: !7096, file: !6583, line: 573, column: 48)
!7106 = !DILocation(line: 575, column: 2, scope: !7105)
!7107 = !DILocation(line: 576, column: 12, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7033, file: !6583, line: 576, column: 6)
!7109 = !DILocation(line: 576, column: 17, scope: !7108)
!7110 = !DILocation(line: 576, column: 44, scope: !7108)
!7111 = !DILocation(line: 576, column: 6, scope: !7033)
!7112 = !DILocation(line: 577, column: 3, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6583, line: 577, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6583, line: 577, column: 3)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6583, line: 577, column: 3)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6583, line: 577, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7108, file: !6583, line: 576, column: 50)
!7118 = !DILocation(line: 578, column: 2, scope: !7117)
!7119 = !DILocation(line: 581, column: 12, scope: !7033)
!7120 = !DILocation(line: 583, column: 2, scope: !7033)
!7121 = distinct !DISubprogram(name: "debug_monitor", scope: !6583, file: !6583, line: 632, type: !7122, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7124)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{null, !2757, !6656}
!7124 = !{!7125, !7126}
!7125 = !DILocalVariable(name: "esf", arg: 1, scope: !7121, file: !6583, line: 632, type: !2757)
!7126 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7121, file: !6583, line: 632, type: !6656)
!7127 = !DILocation(line: 0, scope: !7121)
!7128 = !DILocation(line: 634, column: 15, scope: !7121)
!7129 = !DILocation(line: 636, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6583, line: 636, column: 2)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6583, line: 636, column: 2)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !6583, line: 636, column: 2)
!7133 = distinct !DILexicalBlock(scope: !7121, file: !6583, line: 636, column: 2)
!7134 = !DILocation(line: 652, column: 1, scope: !7121)
!7135 = distinct !DISubprogram(name: "reserved_exception", scope: !6583, file: !6583, line: 776, type: !7136, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7138)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{null, !7036, !107}
!7138 = !{!7139, !7140}
!7139 = !DILocalVariable(name: "esf", arg: 1, scope: !7135, file: !6583, line: 776, type: !7036)
!7140 = !DILocalVariable(name: "fault", arg: 2, scope: !7135, file: !6583, line: 776, type: !107)
!7141 = !DILocation(line: 0, scope: !7135)
!7142 = !DILocation(line: 780, column: 2, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6583, line: 780, column: 2)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !6583, line: 780, column: 2)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !6583, line: 780, column: 2)
!7146 = distinct !DILexicalBlock(scope: !7135, file: !6583, line: 780, column: 2)
!7147 = !DILocation(line: 783, column: 1, scope: !7135)
!7148 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6583, file: !6583, line: 658, type: !7149, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7151)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{!145, !2757}
!7151 = !{!7152, !7153, !7154}
!7152 = !DILocalVariable(name: "esf", arg: 1, scope: !7148, file: !6583, line: 658, type: !2757)
!7153 = !DILocalVariable(name: "ret_addr", scope: !7148, file: !6583, line: 660, type: !2800)
!7154 = !DILocalVariable(name: "fault_insn", scope: !7148, file: !6583, line: 686, type: !197)
!7155 = !DILocation(line: 0, scope: !7148)
!7156 = !DILocation(line: 660, column: 46, scope: !7148)
!7157 = !DILocation(line: 660, column: 23, scope: !7148)
!7158 = !DILocation(line: 682, column: 11, scope: !7148)
!7159 = !DILocation(line: 271, column: 3, scope: !7160, inlinedAt: !7161)
!7160 = distinct !DISubprogram(name: "__DSB", scope: !6273, file: !6273, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7161 = distinct !DILocation(line: 683, column: 2, scope: !7148)
!7162 = !{i64 2925979}
!7163 = !DILocation(line: 260, column: 3, scope: !7164, inlinedAt: !7165)
!7164 = distinct !DISubprogram(name: "__ISB", scope: !6273, file: !6273, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7165 = distinct !DILocation(line: 684, column: 2, scope: !7148)
!7166 = !{i64 2925696}
!7167 = !DILocation(line: 686, column: 35, scope: !7148)
!7168 = !DILocation(line: 686, column: 24, scope: !7148)
!7169 = !DILocation(line: 688, column: 11, scope: !7148)
!7170 = !DILocation(line: 271, column: 3, scope: !7160, inlinedAt: !7171)
!7171 = distinct !DILocation(line: 689, column: 2, scope: !7148)
!7172 = !DILocation(line: 260, column: 3, scope: !7164, inlinedAt: !7173)
!7173 = distinct !DILocation(line: 690, column: 2, scope: !7148)
!7174 = !DILocation(line: 693, column: 45, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7148, file: !6583, line: 693, column: 6)
!7176 = !DILocation(line: 699, column: 1, scope: !7148)
!7177 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6583, file: !6583, line: 1107, type: !3111, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2182)
!7178 = !DILocation(line: 1111, column: 11, scope: !7177)
!7179 = !DILocation(line: 1136, column: 1, scope: !7177)
!7180 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7181, file: !7181, line: 26, type: !3111, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7182)
!7181 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "irq", scope: !7180, file: !7181, line: 28, type: !107)
!7184 = !DILocation(line: 0, scope: !7180)
!7185 = !DILocation(line: 30, column: 2, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7180, file: !7181, line: 30, column: 2)
!7187 = !DILocation(line: 31, column: 3, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !7181, line: 30, column: 39)
!7189 = distinct !DILexicalBlock(scope: !7186, file: !7181, line: 30, column: 2)
!7190 = !DILocation(line: 30, column: 35, scope: !7189)
!7191 = !DILocation(line: 30, column: 13, scope: !7189)
!7192 = distinct !{!7192, !7185, !7193}
!7193 = !DILocation(line: 32, column: 2, scope: !7186)
!7194 = !DILocation(line: 33, column: 1, scope: !7180)
!7195 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6313, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7196)
!7196 = !{!7197, !7198}
!7197 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7195, file: !463, line: 1814, type: !900)
!7198 = !DILocalVariable(name: "priority", arg: 2, scope: !7195, file: !463, line: 1814, type: !152)
!7199 = !DILocation(line: 0, scope: !7195)
!7200 = !DILocation(line: 1816, column: 7, scope: !7195)
!7201 = !DILocation(line: 0, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7195, file: !463, line: 1816, column: 7)
!7203 = !DILocation(line: 1824, column: 1, scope: !7195)
!7204 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7205, file: !7205, line: 27, type: !7206, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7312)
!7205 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7206 = !DISubroutineType(types: !7207)
!7207 = !{null, !7208}
!7208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7209)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 32)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7211)
!7211 = !{!7212, !7270, !7282, !7283, !7284, !7285, !7286, !7292, !7307}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7210, file: !309, line: 247, baseType: !7213, size: 384)
!7213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7214)
!7214 = !{!7215, !7239, !7246, !7247, !7248, !7257, !7258, !7259}
!7215 = !DIDerivedType(tag: DW_TAG_member, scope: !7213, file: !309, line: 60, baseType: !7216, size: 64)
!7216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7213, file: !309, line: 60, size: 64, elements: !7217)
!7217 = !{!7218, !7233}
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7216, file: !309, line: 61, baseType: !7219, size: 64)
!7219 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7220)
!7220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7221)
!7221 = !{!7222, !7228}
!7222 = !DIDerivedType(tag: DW_TAG_member, scope: !7220, file: !319, line: 38, baseType: !7223, size: 32)
!7223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7220, file: !319, line: 38, size: 32, elements: !7224)
!7224 = !{!7225, !7227}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7223, file: !319, line: 39, baseType: !7226, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7220, size: 32)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7223, file: !319, line: 40, baseType: !7226, size: 32)
!7228 = !DIDerivedType(tag: DW_TAG_member, scope: !7220, file: !319, line: 42, baseType: !7229, size: 32, offset: 32)
!7229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7220, file: !319, line: 42, size: 32, elements: !7230)
!7230 = !{!7231, !7232}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7229, file: !319, line: 43, baseType: !7226, size: 32)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7229, file: !319, line: 44, baseType: !7226, size: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7216, file: !309, line: 62, baseType: !7234, size: 64)
!7234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7235)
!7235 = !{!7236}
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7234, file: !335, line: 50, baseType: !7237, size: 64)
!7237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7238, size: 64, elements: !340)
!7238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7234, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7213, file: !309, line: 68, baseType: !7240, size: 32, offset: 64)
!7240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7241, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7242)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7243)
!7243 = !{!7244}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7242, file: !345, line: 232, baseType: !7245, size: 64)
!7245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7220)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7213, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7213, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7248 = !DIDerivedType(tag: DW_TAG_member, scope: !7213, file: !309, line: 90, baseType: !7249, size: 16, offset: 112)
!7249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7213, file: !309, line: 90, size: 16, elements: !7250)
!7250 = !{!7251, !7256}
!7251 = !DIDerivedType(tag: DW_TAG_member, scope: !7249, file: !309, line: 91, baseType: !7252, size: 16)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7249, file: !309, line: 91, size: 16, elements: !7253)
!7253 = !{!7254, !7255}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7252, file: !309, line: 96, baseType: !359, size: 8)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7252, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7249, file: !309, line: 100, baseType: !197, size: 16)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7213, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7213, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7213, file: !309, line: 131, baseType: !7260, size: 192, offset: 192)
!7260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7261)
!7261 = !{!7262, !7263, !7269}
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7260, file: !345, line: 245, baseType: !7219, size: 64)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7260, file: !345, line: 246, baseType: !7264, size: 32, offset: 64)
!7264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7265)
!7265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7266, size: 32)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !7268}
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7260, size: 32)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7260, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7210, file: !309, line: 250, baseType: !7271, size: 288, offset: 384)
!7271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7272)
!7272 = !{!7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7271, file: !379, line: 26, baseType: !152, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7271, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7271, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7271, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7271, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7271, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7271, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7271, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7271, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7210, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7210, file: !309, line: 256, baseType: !7241, size: 64, offset: 704)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7210, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7210, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7210, file: !309, line: 300, baseType: !7287, size: 96, offset: 1056)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7288)
!7288 = !{!7289, !7290, !7291}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7287, file: !309, line: 153, baseType: !22, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7287, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7287, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7210, file: !309, line: 325, baseType: !7293, size: 32, offset: 1152)
!7293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7294, size: 32)
!7294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7295)
!7295 = !{!7296, !7302, !7303}
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7294, file: !406, line: 5074, baseType: !7297, size: 96)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7298)
!7298 = !{!7299, !7300, !7301}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7297, file: !410, line: 57, baseType: !413, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7297, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7297, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7294, file: !406, line: 5075, baseType: !7241, size: 64, offset: 96)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7294, file: !406, line: 5076, baseType: !7304, size: 32, offset: 160)
!7304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7305)
!7305 = !{!7306}
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7304, file: !420, line: 52, baseType: !22, size: 32)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7210, file: !309, line: 343, baseType: !7308, size: 64, offset: 1184)
!7308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7309)
!7309 = !{!7310, !7311}
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7308, file: !379, line: 63, baseType: !152, size: 32)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7308, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7312 = !{!7313}
!7313 = !DILocalVariable(name: "thread", arg: 1, scope: !7204, file: !7205, line: 27, type: !7208)
!7314 = !DILocation(line: 0, scope: !7204)
!7315 = !DILocation(line: 29, column: 6, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7204, file: !7205, line: 29, column: 6)
!7317 = !DILocation(line: 29, column: 15, scope: !7316)
!7318 = !DILocation(line: 29, column: 6, scope: !7204)
!7319 = !DILocation(line: 1031, column: 3, scope: !7320, inlinedAt: !7323)
!7320 = distinct !DISubprogram(name: "__get_IPSR", scope: !6273, file: !6273, line: 1027, type: !6360, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7321)
!7321 = !{!7322}
!7322 = !DILocalVariable(name: "result", scope: !7320, file: !6273, line: 1029, type: !152)
!7323 = distinct !DILocation(line: 48, column: 10, scope: !7324, inlinedAt: !7328)
!7324 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7325, file: !7325, line: 46, type: !7326, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !2182)
!7325 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!145}
!7328 = distinct !DILocation(line: 30, column: 7, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !7205, line: 30, column: 7)
!7330 = distinct !DILexicalBlock(scope: !7316, file: !7205, line: 29, column: 26)
!7331 = !{i64 2914827}
!7332 = !DILocation(line: 0, scope: !7320, inlinedAt: !7323)
!7333 = !DILocation(line: 48, column: 9, scope: !7324, inlinedAt: !7328)
!7334 = !DILocation(line: 30, column: 7, scope: !7330)
!7335 = !DILocation(line: 42, column: 14, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7329, file: !7205, line: 30, column: 25)
!7337 = !DILocation(line: 48, column: 15, scope: !7336)
!7338 = !DILocation(line: 49, column: 3, scope: !7336)
!7339 = !DILocation(line: 52, column: 2, scope: !7204)
!7340 = !DILocation(line: 53, column: 1, scope: !7204)
!7341 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3111, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2182)
!7342 = !DILocation(line: 134, column: 2, scope: !7341)
!7343 = !DILocation(line: 156, column: 1, scope: !7341)
!7344 = !DILocation(line: 0, scope: !303)
!7345 = !DILocation(line: 289, column: 36, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7347 = !DILocation(line: 289, column: 42, scope: !7346)
!7348 = !DILocation(line: 300, column: 36, scope: !303)
!7349 = !DILocation(line: 301, column: 35, scope: !303)
!7350 = !DILocation(line: 302, column: 37, scope: !303)
!7351 = !DILocation(line: 311, column: 2, scope: !303)
!7352 = !DILocation(line: 316, column: 1, scope: !303)
!7353 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3111, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7354 = !DILocation(line: 188, column: 12, scope: !7353)
!7355 = !DILocation(line: 271, column: 3, scope: !7356, inlinedAt: !7357)
!7356 = distinct !DISubprogram(name: "__DSB", scope: !6273, file: !6273, line: 269, type: !3111, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7357 = distinct !DILocation(line: 192, column: 2, scope: !7353)
!7358 = !{i64 3090842}
!7359 = !DILocation(line: 260, column: 3, scope: !7360, inlinedAt: !7361)
!7360 = distinct !DISubprogram(name: "__ISB", scope: !6273, file: !6273, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7361 = distinct !DILocation(line: 193, column: 2, scope: !7353)
!7362 = !{i64 3090559}
!7363 = !DILocation(line: 194, column: 1, scope: !7353)
!7364 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3111, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7365 = !DILocation(line: 282, column: 3, scope: !7366, inlinedAt: !7367)
!7366 = distinct !DISubprogram(name: "__DMB", scope: !6273, file: !6273, line: 280, type: !3111, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2182)
!7367 = distinct !DILocation(line: 202, column: 2, scope: !7364)
!7368 = !{i64 3091118}
!7369 = !DILocation(line: 205, column: 12, scope: !7364)
!7370 = !DILocation(line: 206, column: 1, scope: !7364)
!7371 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7372, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7385)
!7372 = !DISubroutineType(types: !7373)
!7373 = !{null, !7374, !1964, !6550, !6550}
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 32)
!7375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7376)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7377)
!7377 = !{!7378, !7379, !7380}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7376, file: !435, line: 53, baseType: !22, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7376, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7376, file: !435, line: 55, baseType: !7381, size: 32, offset: 64)
!7381 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7382)
!7382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7383)
!7383 = !{!7384}
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7382, file: !441, line: 150, baseType: !152, size: 32)
!7385 = !{!7386, !7387, !7388, !7389}
!7386 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7371, file: !491, line: 276, type: !7374)
!7387 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7371, file: !491, line: 276, type: !1964)
!7388 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7371, file: !491, line: 277, type: !6550)
!7389 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7371, file: !491, line: 277, type: !6550)
!7390 = !DILocation(line: 0, scope: !7371)
!7391 = !DILocation(line: 279, column: 6, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7371, file: !491, line: 279, column: 6)
!7393 = !DILocation(line: 280, column: 57, scope: !7392)
!7394 = !DILocation(line: 279, column: 6, scope: !7371)
!7395 = !DILocation(line: 282, column: 3, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !491, line: 282, column: 3)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !491, line: 282, column: 3)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !491, line: 282, column: 3)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !491, line: 280, column: 69)
!7400 = !DILocation(line: 285, column: 1, scope: !7371)
!7401 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7402, file: !7402, line: 220, type: !7403, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7405)
!7402 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7403 = !DISubroutineType(types: !7404)
!7404 = !{!107, !7374, !1964, !6550, !6550}
!7405 = !{!7406, !7407, !7408, !7409, !7410}
!7406 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7401, file: !7402, line: 221, type: !7374)
!7407 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7401, file: !7402, line: 221, type: !1964)
!7408 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7401, file: !7402, line: 222, type: !6550)
!7409 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7401, file: !7402, line: 223, type: !6550)
!7410 = !DILocalVariable(name: "mpu_reg_index", scope: !7401, file: !7402, line: 225, type: !107)
!7411 = !DILocation(line: 0, scope: !7401)
!7412 = !DILocation(line: 225, column: 22, scope: !7401)
!7413 = !DILocation(line: 233, column: 18, scope: !7401)
!7414 = !DILocation(line: 236, column: 23, scope: !7401)
!7415 = !DILocation(line: 236, column: 21, scope: !7401)
!7416 = !DILocation(line: 238, column: 2, scope: !7401)
!7417 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7418, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7420)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!107, !7374, !195, !195, !145}
!7420 = !{!7421, !7422, !7423, !7424, !7425, !7426}
!7421 = !DILocalVariable(name: "regions", arg: 1, scope: !7417, file: !491, line: 106, type: !7374)
!7422 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7417, file: !491, line: 106, type: !195)
!7423 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7417, file: !491, line: 106, type: !195)
!7424 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7417, file: !491, line: 107, type: !145)
!7425 = !DILocalVariable(name: "i", scope: !7417, file: !491, line: 109, type: !107)
!7426 = !DILocalVariable(name: "reg_index", scope: !7417, file: !491, line: 110, type: !107)
!7427 = !DILocation(line: 0, scope: !7417)
!7428 = !DILocation(line: 110, column: 18, scope: !7417)
!7429 = !DILocation(line: 112, column: 16, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !491, line: 112, column: 2)
!7431 = distinct !DILexicalBlock(scope: !7417, file: !491, line: 112, column: 2)
!7432 = !DILocation(line: 112, column: 2, scope: !7431)
!7433 = !DILocation(line: 113, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !491, line: 113, column: 7)
!7435 = distinct !DILexicalBlock(scope: !7430, file: !491, line: 112, column: 36)
!7436 = !DILocation(line: 113, column: 18, scope: !7434)
!7437 = !DILocation(line: 113, column: 23, scope: !7434)
!7438 = !DILocation(line: 113, column: 7, scope: !7435)
!7439 = !DILocation(line: 118, column: 23, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7435, file: !491, line: 118, column: 7)
!7441 = !DILocation(line: 119, column: 7, scope: !7440)
!7442 = !DILocation(line: 118, column: 7, scope: !7435)
!7443 = !DILocation(line: 120, column: 4, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !491, line: 120, column: 4)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !491, line: 120, column: 4)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !491, line: 120, column: 4)
!7447 = distinct !DILexicalBlock(scope: !7448, file: !491, line: 120, column: 4)
!7448 = distinct !DILexicalBlock(scope: !7440, file: !491, line: 119, column: 45)
!7449 = !DILocation(line: 121, column: 4, scope: !7448)
!7450 = !DILocation(line: 124, column: 36, scope: !7435)
!7451 = !DILocation(line: 124, column: 15, scope: !7435)
!7452 = !DILocation(line: 126, column: 17, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7435, file: !491, line: 126, column: 7)
!7454 = !DILocation(line: 126, column: 7, scope: !7435)
!7455 = !DILocation(line: 131, column: 12, scope: !7435)
!7456 = !DILocation(line: 132, column: 2, scope: !7435)
!7457 = !DILocation(line: 112, column: 32, scope: !7430)
!7458 = distinct !{!7458, !7432, !7459}
!7459 = !DILocation(line: 132, column: 2, scope: !7431)
!7460 = !DILocation(line: 135, column: 1, scope: !7417)
!7461 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7402, file: !7402, line: 63, type: !7462, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7464)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!107, !7374}
!7464 = !{!7465, !7466}
!7465 = !DILocalVariable(name: "part", arg: 1, scope: !7461, file: !7402, line: 63, type: !7374)
!7466 = !DILocalVariable(name: "partition_is_valid", scope: !7461, file: !7402, line: 70, type: !107)
!7467 = !DILocation(line: 0, scope: !7461)
!7468 = !DILocation(line: 71, column: 11, scope: !7461)
!7469 = !DILocation(line: 71, column: 37, scope: !7461)
!7470 = !{i32 0, i32 33}
!7471 = !DILocation(line: 72, column: 3, scope: !7461)
!7472 = !DILocation(line: 71, column: 30, scope: !7461)
!7473 = !DILocation(line: 75, column: 11, scope: !7461)
!7474 = !DILocation(line: 75, column: 17, scope: !7461)
!7475 = !DILocation(line: 75, column: 38, scope: !7461)
!7476 = !DILocation(line: 77, column: 2, scope: !7461)
!7477 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7478, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7480)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{!107, !1964, !7374}
!7480 = !{!7481, !7482, !7483}
!7481 = !DILocalVariable(name: "index", arg: 1, scope: !7477, file: !491, line: 79, type: !1964)
!7482 = !DILocalVariable(name: "new_region", arg: 2, scope: !7477, file: !491, line: 80, type: !7374)
!7483 = !DILocalVariable(name: "region_conf", scope: !7477, file: !491, line: 82, type: !480)
!7484 = !DILocation(line: 0, scope: !7477)
!7485 = !DILocation(line: 82, column: 2, scope: !7477)
!7486 = !DILocation(line: 82, column: 24, scope: !7477)
!7487 = !DILocation(line: 87, column: 33, scope: !7477)
!7488 = !DILocation(line: 87, column: 14, scope: !7477)
!7489 = !DILocation(line: 87, column: 19, scope: !7477)
!7490 = !DILocation(line: 91, column: 55, scope: !7477)
!7491 = !DILocation(line: 92, column: 16, scope: !7477)
!7492 = !DILocation(line: 92, column: 53, scope: !7477)
!7493 = !DILocation(line: 91, column: 2, scope: !7477)
!7494 = !DILocation(line: 95, column: 9, scope: !7477)
!7495 = !DILocation(line: 97, column: 1, scope: !7477)
!7496 = !DILocation(line: 95, column: 2, scope: !7477)
!7497 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7402, file: !7402, line: 113, type: !7498, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7503)
!7498 = !DISubroutineType(types: !7499)
!7499 = !{null, !7500, !7501, !152, !152}
!7500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 32)
!7502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7381)
!7503 = !{!7504, !7505, !7506, !7507}
!7504 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7497, file: !7402, line: 114, type: !7500)
!7505 = !DILocalVariable(name: "attr", arg: 2, scope: !7497, file: !7402, line: 115, type: !7501)
!7506 = !DILocalVariable(name: "base", arg: 3, scope: !7497, file: !7402, line: 115, type: !152)
!7507 = !DILocalVariable(name: "size", arg: 4, scope: !7497, file: !7402, line: 115, type: !152)
!7508 = !DILocation(line: 0, scope: !7497)
!7509 = !DILocation(line: 127, column: 23, scope: !7497)
!7510 = !DILocation(line: 127, column: 35, scope: !7497)
!7511 = !DILocation(line: 127, column: 33, scope: !7497)
!7512 = !DILocation(line: 127, column: 10, scope: !7497)
!7513 = !DILocation(line: 127, column: 15, scope: !7497)
!7514 = !DILocation(line: 129, column: 1, scope: !7497)
!7515 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7516, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7518)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{!107, !1964, !478}
!7518 = !{!7519, !7520}
!7519 = !DILocalVariable(name: "index", arg: 1, scope: !7515, file: !491, line: 57, type: !1964)
!7520 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7515, file: !491, line: 58, type: !478)
!7521 = !DILocation(line: 0, scope: !7515)
!7522 = !DILocation(line: 61, column: 6, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7515, file: !491, line: 61, column: 6)
!7524 = !DILocation(line: 61, column: 12, scope: !7523)
!7525 = !DILocation(line: 61, column: 6, scope: !7515)
!7526 = !DILocation(line: 64, column: 3, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !491, line: 64, column: 3)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !491, line: 64, column: 3)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !491, line: 64, column: 3)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !491, line: 64, column: 3)
!7531 = distinct !DILexicalBlock(scope: !7523, file: !491, line: 61, column: 40)
!7532 = !DILocation(line: 65, column: 3, scope: !7531)
!7533 = !DILocation(line: 71, column: 2, scope: !7515)
!7534 = !DILocation(line: 73, column: 2, scope: !7515)
!7535 = !DILocation(line: 74, column: 1, scope: !7515)
!7536 = distinct !DISubprogram(name: "region_init", scope: !7402, file: !7402, line: 29, type: !7537, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{null, !6550, !478}
!7539 = !{!7540, !7541}
!7540 = !DILocalVariable(name: "index", arg: 1, scope: !7536, file: !7402, line: 29, type: !6550)
!7541 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7536, file: !7402, line: 30, type: !478)
!7542 = !DILocation(line: 0, scope: !7536)
!7543 = !DILocation(line: 33, column: 2, scope: !7536)
!7544 = !DILocation(line: 47, column: 28, scope: !7536)
!7545 = !DILocation(line: 47, column: 33, scope: !7536)
!7546 = !DILocation(line: 48, column: 26, scope: !7536)
!7547 = !DILocation(line: 47, column: 12, scope: !7536)
!7548 = !DILocation(line: 49, column: 32, scope: !7536)
!7549 = !DILocation(line: 49, column: 37, scope: !7536)
!7550 = !DILocation(line: 49, column: 12, scope: !7536)
!7551 = !DILocation(line: 53, column: 1, scope: !7536)
!7552 = distinct !DISubprogram(name: "set_region_number", scope: !7553, file: !7553, line: 32, type: !6370, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7554)
!7553 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "index", arg: 1, scope: !7552, file: !7553, line: 32, type: !152)
!7556 = !DILocation(line: 0, scope: !7552)
!7557 = !DILocation(line: 34, column: 11, scope: !7552)
!7558 = !DILocation(line: 35, column: 1, scope: !7552)
!7559 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7402, file: !7402, line: 88, type: !7560, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7562)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{!152, !152}
!7562 = !{!7563}
!7563 = !DILocalVariable(name: "size", arg: 1, scope: !7559, file: !7402, line: 88, type: !152)
!7564 = !DILocation(line: 0, scope: !7559)
!7565 = !DILocation(line: 91, column: 11, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7559, file: !7402, line: 91, column: 6)
!7567 = !DILocation(line: 91, column: 6, scope: !7559)
!7568 = !DILocation(line: 100, column: 11, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7559, file: !7402, line: 100, column: 6)
!7570 = !DILocation(line: 100, column: 6, scope: !7559)
!7571 = !DILocation(line: 104, column: 35, scope: !7559)
!7572 = !DILocation(line: 104, column: 16, scope: !7559)
!7573 = !DILocation(line: 104, column: 50, scope: !7559)
!7574 = !DILocation(line: 104, column: 72, scope: !7559)
!7575 = !DILocation(line: 104, column: 2, scope: !7559)
!7576 = !DILocation(line: 106, column: 1, scope: !7559)
!7577 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7578, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !7374, !195}
!7580 = !{!7581, !7582}
!7581 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7577, file: !491, line: 308, type: !7374)
!7582 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7577, file: !491, line: 308, type: !195)
!7583 = !DILocation(line: 0, scope: !7577)
!7584 = !DILocation(line: 310, column: 6, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7577, file: !491, line: 310, column: 6)
!7586 = !DILocation(line: 311, column: 3, scope: !7585)
!7587 = !DILocation(line: 310, column: 6, scope: !7577)
!7588 = !DILocation(line: 313, column: 3, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !491, line: 313, column: 3)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !491, line: 313, column: 3)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !491, line: 313, column: 3)
!7592 = distinct !DILexicalBlock(scope: !7585, file: !491, line: 311, column: 15)
!7593 = !DILocation(line: 316, column: 1, scope: !7577)
!7594 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7402, file: !7402, line: 249, type: !7595, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!107, !7374, !195}
!7597 = !{!7598, !7599, !7600, !7601}
!7598 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7594, file: !7402, line: 250, type: !7374)
!7599 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7594, file: !7402, line: 250, type: !195)
!7600 = !DILocalVariable(name: "mpu_reg_index", scope: !7594, file: !7402, line: 252, type: !107)
!7601 = !DILocalVariable(name: "i", scope: !7602, file: !7402, line: 264, type: !107)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !7402, line: 264, column: 3)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !7402, line: 261, column: 32)
!7604 = distinct !DILexicalBlock(scope: !7594, file: !7402, line: 261, column: 6)
!7605 = !DILocation(line: 0, scope: !7594)
!7606 = !DILocation(line: 252, column: 22, scope: !7594)
!7607 = !DILocation(line: 258, column: 18, scope: !7594)
!7608 = !DILocation(line: 261, column: 20, scope: !7604)
!7609 = !DILocation(line: 261, column: 6, scope: !7594)
!7610 = !DILocation(line: 0, scope: !7602)
!7611 = !DILocation(line: 265, column: 4, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7402, line: 264, column: 59)
!7613 = distinct !DILexicalBlock(scope: !7602, file: !7402, line: 264, column: 3)
!7614 = !DILocation(line: 264, column: 55, scope: !7613)
!7615 = !DILocation(line: 264, column: 33, scope: !7613)
!7616 = !DILocation(line: 264, column: 3, scope: !7602)
!7617 = distinct !{!7617, !7616, !7618}
!7618 = !DILocation(line: 266, column: 3, scope: !7602)
!7619 = !DILocation(line: 269, column: 2, scope: !7594)
!7620 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7621, file: !7621, line: 218, type: !6370, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7622)
!7621 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7622 = !{!7623}
!7623 = !DILocalVariable(name: "rnr", arg: 1, scope: !7620, file: !7621, line: 218, type: !152)
!7624 = !DILocation(line: 0, scope: !7620)
!7625 = !DILocation(line: 220, column: 12, scope: !7620)
!7626 = !DILocation(line: 221, column: 13, scope: !7620)
!7627 = !DILocation(line: 222, column: 1, scope: !7620)
!7628 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7629, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!107}
!7631 = !{!7632}
!7632 = !DILocalVariable(name: "r_index", scope: !7628, file: !491, line: 328, type: !152)
!7633 = !DILocation(line: 330, column: 17, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7628, file: !491, line: 330, column: 6)
!7635 = !DILocation(line: 330, column: 29, scope: !7634)
!7636 = !DILocation(line: 330, column: 6, scope: !7628)
!7637 = !DILocation(line: 337, column: 3, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !491, line: 337, column: 3)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !491, line: 337, column: 3)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !491, line: 337, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7634, file: !491, line: 330, column: 50)
!7642 = !DILocation(line: 347, column: 2, scope: !7628)
!7643 = !DILocation(line: 0, scope: !7628)
!7644 = !DILocation(line: 364, column: 29, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !491, line: 364, column: 2)
!7646 = distinct !DILexicalBlock(scope: !7628, file: !491, line: 364, column: 2)
!7647 = !DILocation(line: 364, column: 2, scope: !7646)
!7648 = !DILocation(line: 365, column: 25, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7645, file: !491, line: 364, column: 66)
!7650 = !DILocation(line: 365, column: 3, scope: !7649)
!7651 = !DILocation(line: 364, column: 62, scope: !7645)
!7652 = distinct !{!7652, !7647, !7653}
!7653 = !DILocation(line: 366, column: 2, scope: !7646)
!7654 = !DILocation(line: 369, column: 23, scope: !7628)
!7655 = !DILocation(line: 369, column: 21, scope: !7628)
!7656 = !DILocation(line: 372, column: 2, scope: !7628)
!7657 = !DILocation(line: 433, column: 2, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !491, line: 433, column: 2)
!7659 = distinct !DILexicalBlock(scope: !7628, file: !491, line: 433, column: 2)
!7660 = !DILocation(line: 433, column: 2, scope: !7659)
!7661 = !DILocation(line: 433, column: 2, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !491, line: 433, column: 2)
!7663 = !DILocation(line: 444, column: 1, scope: !7628)
!7664 = distinct !DISubprogram(name: "strcpy", scope: !7665, file: !7665, line: 20, type: !7666, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7670)
!7665 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!193, !7668, !7669}
!7668 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7669 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7670 = !{!7671, !7672, !7673}
!7671 = !DILocalVariable(name: "d", arg: 1, scope: !7664, file: !7665, line: 20, type: !7668)
!7672 = !DILocalVariable(name: "s", arg: 2, scope: !7664, file: !7665, line: 20, type: !7669)
!7673 = !DILocalVariable(name: "dest", scope: !7664, file: !7665, line: 22, type: !193)
!7674 = !DILocation(line: 0, scope: !7664)
!7675 = !DILocation(line: 24, column: 9, scope: !7664)
!7676 = !DILocation(line: 24, column: 12, scope: !7664)
!7677 = !DILocation(line: 24, column: 2, scope: !7664)
!7678 = !DILocation(line: 25, column: 6, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7664, file: !7665, line: 24, column: 21)
!7680 = !DILocation(line: 26, column: 4, scope: !7679)
!7681 = !DILocation(line: 27, column: 4, scope: !7679)
!7682 = distinct !{!7682, !7677, !7683}
!7683 = !DILocation(line: 28, column: 2, scope: !7664)
!7684 = !DILocation(line: 30, column: 5, scope: !7664)
!7685 = !DILocation(line: 32, column: 2, scope: !7664)
!7686 = distinct !DISubprogram(name: "strncpy", scope: !7665, file: !7665, line: 42, type: !7687, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7689)
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!193, !7668, !7669, !185}
!7689 = !{!7690, !7691, !7692, !7693}
!7690 = !DILocalVariable(name: "d", arg: 1, scope: !7686, file: !7665, line: 42, type: !7668)
!7691 = !DILocalVariable(name: "s", arg: 2, scope: !7686, file: !7665, line: 42, type: !7669)
!7692 = !DILocalVariable(name: "n", arg: 3, scope: !7686, file: !7665, line: 42, type: !185)
!7693 = !DILocalVariable(name: "dest", scope: !7686, file: !7665, line: 44, type: !193)
!7694 = !DILocation(line: 0, scope: !7686)
!7695 = !DILocation(line: 46, column: 12, scope: !7686)
!7696 = !DILocation(line: 46, column: 17, scope: !7686)
!7697 = !DILocation(line: 46, column: 20, scope: !7686)
!7698 = !DILocation(line: 46, column: 23, scope: !7686)
!7699 = !DILocation(line: 46, column: 2, scope: !7686)
!7700 = !DILocation(line: 47, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7686, file: !7665, line: 46, column: 32)
!7702 = !DILocation(line: 48, column: 4, scope: !7701)
!7703 = !DILocation(line: 49, column: 4, scope: !7701)
!7704 = !DILocation(line: 50, column: 4, scope: !7701)
!7705 = distinct !{!7705, !7699, !7706}
!7706 = !DILocation(line: 51, column: 2, scope: !7686)
!7707 = !DILocation(line: 54, column: 6, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7686, file: !7665, line: 53, column: 16)
!7709 = !DILocation(line: 55, column: 4, scope: !7708)
!7710 = !DILocation(line: 56, column: 4, scope: !7708)
!7711 = !DILocation(line: 53, column: 11, scope: !7686)
!7712 = !DILocation(line: 53, column: 2, scope: !7686)
!7713 = distinct !{!7713, !7712, !7714}
!7714 = !DILocation(line: 57, column: 2, scope: !7686)
!7715 = !DILocation(line: 59, column: 2, scope: !7686)
!7716 = distinct !DISubprogram(name: "strchr", scope: !7665, file: !7665, line: 69, type: !7717, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7719)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{!193, !118, !107}
!7719 = !{!7720, !7721, !7722}
!7720 = !DILocalVariable(name: "s", arg: 1, scope: !7716, file: !7665, line: 69, type: !118)
!7721 = !DILocalVariable(name: "c", arg: 2, scope: !7716, file: !7665, line: 69, type: !107)
!7722 = !DILocalVariable(name: "tmp", scope: !7716, file: !7665, line: 71, type: !120)
!7723 = !DILocation(line: 0, scope: !7716)
!7724 = !DILocation(line: 73, column: 2, scope: !7716)
!7725 = !DILocation(line: 73, column: 10, scope: !7716)
!7726 = !DILocation(line: 73, column: 13, scope: !7716)
!7727 = !DILocation(line: 73, column: 21, scope: !7716)
!7728 = !DILocation(line: 74, column: 4, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7716, file: !7665, line: 73, column: 38)
!7730 = distinct !{!7730, !7724, !7731}
!7731 = !DILocation(line: 75, column: 2, scope: !7716)
!7732 = !DILocation(line: 77, column: 9, scope: !7716)
!7733 = !DILocation(line: 77, column: 2, scope: !7716)
!7734 = distinct !DISubprogram(name: "strrchr", scope: !7665, file: !7665, line: 87, type: !7717, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7735)
!7735 = !{!7736, !7737, !7738}
!7736 = !DILocalVariable(name: "s", arg: 1, scope: !7734, file: !7665, line: 87, type: !118)
!7737 = !DILocalVariable(name: "c", arg: 2, scope: !7734, file: !7665, line: 87, type: !107)
!7738 = !DILocalVariable(name: "match", scope: !7734, file: !7665, line: 89, type: !193)
!7739 = !DILocation(line: 0, scope: !7734)
!7740 = !DILocation(line: 91, column: 2, scope: !7734)
!7741 = !DILocation(line: 92, column: 7, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !7665, line: 92, column: 7)
!7743 = distinct !DILexicalBlock(scope: !7734, file: !7665, line: 91, column: 5)
!7744 = !DILocation(line: 92, column: 10, scope: !7742)
!7745 = !DILocation(line: 92, column: 7, scope: !7743)
!7746 = !DILocation(line: 95, column: 13, scope: !7734)
!7747 = !DILocation(line: 95, column: 2, scope: !7743)
!7748 = distinct !{!7748, !7740, !7749}
!7749 = !DILocation(line: 95, column: 15, scope: !7734)
!7750 = !DILocation(line: 97, column: 2, scope: !7734)
!7751 = distinct !DISubprogram(name: "strlen", scope: !7665, file: !7665, line: 107, type: !7752, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7754)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!185, !118}
!7754 = !{!7755, !7756}
!7755 = !DILocalVariable(name: "s", arg: 1, scope: !7751, file: !7665, line: 107, type: !118)
!7756 = !DILocalVariable(name: "n", scope: !7751, file: !7665, line: 109, type: !185)
!7757 = !DILocation(line: 0, scope: !7751)
!7758 = !DILocation(line: 111, column: 9, scope: !7751)
!7759 = !DILocation(line: 111, column: 12, scope: !7751)
!7760 = !DILocation(line: 111, column: 2, scope: !7751)
!7761 = !DILocation(line: 112, column: 4, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7751, file: !7665, line: 111, column: 21)
!7763 = !DILocation(line: 113, column: 4, scope: !7762)
!7764 = distinct !{!7764, !7760, !7765}
!7765 = !DILocation(line: 114, column: 2, scope: !7751)
!7766 = !DILocation(line: 116, column: 2, scope: !7751)
!7767 = distinct !DISubprogram(name: "strnlen", scope: !7665, file: !7665, line: 126, type: !7768, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7770)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!185, !118, !185}
!7770 = !{!7771, !7772, !7773}
!7771 = !DILocalVariable(name: "s", arg: 1, scope: !7767, file: !7665, line: 126, type: !118)
!7772 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7767, file: !7665, line: 126, type: !185)
!7773 = !DILocalVariable(name: "n", scope: !7767, file: !7665, line: 128, type: !185)
!7774 = !DILocation(line: 0, scope: !7767)
!7775 = !DILocation(line: 130, column: 9, scope: !7767)
!7776 = !DILocation(line: 130, column: 12, scope: !7767)
!7777 = !DILocation(line: 130, column: 20, scope: !7767)
!7778 = !DILocation(line: 130, column: 2, scope: !7767)
!7779 = !DILocation(line: 131, column: 4, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7767, file: !7665, line: 130, column: 35)
!7781 = !DILocation(line: 132, column: 4, scope: !7780)
!7782 = distinct !{!7782, !7778, !7783}
!7783 = !DILocation(line: 133, column: 2, scope: !7767)
!7784 = !DILocation(line: 135, column: 2, scope: !7767)
!7785 = distinct !DISubprogram(name: "strcmp", scope: !7665, file: !7665, line: 145, type: !7786, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7788)
!7786 = !DISubroutineType(types: !7787)
!7787 = !{!107, !118, !118}
!7788 = !{!7789, !7790}
!7789 = !DILocalVariable(name: "s1", arg: 1, scope: !7785, file: !7665, line: 145, type: !118)
!7790 = !DILocalVariable(name: "s2", arg: 2, scope: !7785, file: !7665, line: 145, type: !118)
!7791 = !DILocation(line: 0, scope: !7785)
!7792 = !DILocation(line: 147, column: 10, scope: !7785)
!7793 = !DILocation(line: 147, column: 17, scope: !7785)
!7794 = !DILocation(line: 147, column: 14, scope: !7785)
!7795 = !DILocation(line: 147, column: 22, scope: !7785)
!7796 = !DILocation(line: 148, column: 5, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7785, file: !7665, line: 147, column: 40)
!7798 = !DILocation(line: 149, column: 5, scope: !7797)
!7799 = distinct !{!7799, !7800, !7801}
!7800 = !DILocation(line: 147, column: 2, scope: !7785)
!7801 = !DILocation(line: 150, column: 2, scope: !7785)
!7802 = !DILocation(line: 152, column: 9, scope: !7785)
!7803 = !DILocation(line: 152, column: 15, scope: !7785)
!7804 = !DILocation(line: 152, column: 13, scope: !7785)
!7805 = !DILocation(line: 152, column: 2, scope: !7785)
!7806 = distinct !DISubprogram(name: "strncmp", scope: !7665, file: !7665, line: 162, type: !7807, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!107, !118, !118, !185}
!7809 = !{!7810, !7811, !7812}
!7810 = !DILocalVariable(name: "s1", arg: 1, scope: !7806, file: !7665, line: 162, type: !118)
!7811 = !DILocalVariable(name: "s2", arg: 2, scope: !7806, file: !7665, line: 162, type: !118)
!7812 = !DILocalVariable(name: "n", arg: 3, scope: !7806, file: !7665, line: 162, type: !185)
!7813 = !DILocation(line: 0, scope: !7806)
!7814 = !DILocation(line: 164, column: 17, scope: !7806)
!7815 = !DILocation(line: 164, column: 21, scope: !7806)
!7816 = !DILocation(line: 164, column: 28, scope: !7806)
!7817 = !DILocation(line: 164, column: 25, scope: !7806)
!7818 = !DILocation(line: 164, column: 33, scope: !7806)
!7819 = !DILocation(line: 165, column: 5, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7806, file: !7665, line: 164, column: 51)
!7821 = !DILocation(line: 166, column: 5, scope: !7820)
!7822 = !DILocation(line: 167, column: 4, scope: !7820)
!7823 = distinct !{!7823, !7824, !7825}
!7824 = !DILocation(line: 164, column: 2, scope: !7806)
!7825 = !DILocation(line: 168, column: 2, scope: !7806)
!7826 = !DILocation(line: 170, column: 25, scope: !7806)
!7827 = !DILocation(line: 170, column: 31, scope: !7806)
!7828 = !DILocation(line: 170, column: 29, scope: !7806)
!7829 = !DILocation(line: 170, column: 9, scope: !7806)
!7830 = !DILocation(line: 170, column: 2, scope: !7806)
!7831 = distinct !DISubprogram(name: "strtok_r", scope: !7665, file: !7665, line: 180, type: !7832, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7834)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{!193, !193, !118, !192}
!7834 = !{!7835, !7836, !7837, !7838, !7839}
!7835 = !DILocalVariable(name: "str", arg: 1, scope: !7831, file: !7665, line: 180, type: !193)
!7836 = !DILocalVariable(name: "sep", arg: 2, scope: !7831, file: !7665, line: 180, type: !118)
!7837 = !DILocalVariable(name: "state", arg: 3, scope: !7831, file: !7665, line: 180, type: !192)
!7838 = !DILocalVariable(name: "start", scope: !7831, file: !7665, line: 182, type: !193)
!7839 = !DILocalVariable(name: "end", scope: !7831, file: !7665, line: 182, type: !193)
!7840 = !DILocation(line: 0, scope: !7831)
!7841 = !DILocation(line: 184, column: 10, scope: !7831)
!7842 = !DILocation(line: 184, column: 22, scope: !7831)
!7843 = !DILocation(line: 187, column: 9, scope: !7831)
!7844 = !DILocation(line: 187, column: 16, scope: !7831)
!7845 = !DILocation(line: 187, column: 19, scope: !7831)
!7846 = !DILocation(line: 187, column: 2, scope: !7831)
!7847 = !DILocation(line: 188, column: 8, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7831, file: !7665, line: 187, column: 40)
!7849 = distinct !{!7849, !7846, !7850}
!7850 = !DILocation(line: 189, column: 2, scope: !7831)
!7851 = !DILocation(line: 198, column: 9, scope: !7831)
!7852 = !DILocation(line: 198, column: 18, scope: !7831)
!7853 = !DILocation(line: 198, column: 17, scope: !7831)
!7854 = !DILocation(line: 198, column: 2, scope: !7831)
!7855 = !DILocation(line: 199, column: 6, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7831, file: !7665, line: 198, column: 37)
!7857 = !DILocation(line: 198, column: 14, scope: !7831)
!7858 = distinct !{!7858, !7854, !7859}
!7859 = !DILocation(line: 200, column: 2, scope: !7831)
!7860 = !DILocation(line: 203, column: 8, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7665, line: 202, column: 20)
!7862 = distinct !DILexicalBlock(scope: !7831, file: !7665, line: 202, column: 6)
!7863 = !DILocation(line: 204, column: 16, scope: !7861)
!7864 = !DILocation(line: 205, column: 2, scope: !7861)
!7865 = !DILocation(line: 210, column: 1, scope: !7831)
!7866 = distinct !DISubprogram(name: "strcat", scope: !7665, file: !7665, line: 212, type: !7666, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7867)
!7867 = !{!7868, !7869}
!7868 = !DILocalVariable(name: "dest", arg: 1, scope: !7866, file: !7665, line: 212, type: !7668)
!7869 = !DILocalVariable(name: "src", arg: 2, scope: !7866, file: !7665, line: 212, type: !7669)
!7870 = !DILocation(line: 0, scope: !7866)
!7871 = !DILocation(line: 214, column: 16, scope: !7866)
!7872 = !DILocation(line: 214, column: 14, scope: !7866)
!7873 = !DILocation(line: 214, column: 2, scope: !7866)
!7874 = !DILocation(line: 215, column: 2, scope: !7866)
!7875 = distinct !DISubprogram(name: "strncat", scope: !7665, file: !7665, line: 218, type: !7687, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7876)
!7876 = !{!7877, !7878, !7879, !7880, !7881}
!7877 = !DILocalVariable(name: "dest", arg: 1, scope: !7875, file: !7665, line: 218, type: !7668)
!7878 = !DILocalVariable(name: "src", arg: 2, scope: !7875, file: !7665, line: 218, type: !7669)
!7879 = !DILocalVariable(name: "n", arg: 3, scope: !7875, file: !7665, line: 219, type: !185)
!7880 = !DILocalVariable(name: "orig_dest", scope: !7875, file: !7665, line: 221, type: !193)
!7881 = !DILocalVariable(name: "len", scope: !7875, file: !7665, line: 222, type: !185)
!7882 = !DILocation(line: 0, scope: !7875)
!7883 = !DILocation(line: 222, column: 15, scope: !7875)
!7884 = !DILocation(line: 224, column: 7, scope: !7875)
!7885 = !DILocation(line: 225, column: 14, scope: !7875)
!7886 = !DILocation(line: 225, column: 19, scope: !7875)
!7887 = !DILocation(line: 225, column: 11, scope: !7875)
!7888 = !DILocation(line: 225, column: 23, scope: !7875)
!7889 = !DILocation(line: 225, column: 28, scope: !7875)
!7890 = !DILocation(line: 225, column: 2, scope: !7875)
!7891 = !DILocation(line: 226, column: 17, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7875, file: !7665, line: 225, column: 38)
!7893 = !DILocation(line: 226, column: 8, scope: !7892)
!7894 = !DILocation(line: 226, column: 11, scope: !7892)
!7895 = distinct !{!7895, !7890, !7896}
!7896 = !DILocation(line: 227, column: 2, scope: !7875)
!7897 = !DILocation(line: 228, column: 8, scope: !7875)
!7898 = !DILocation(line: 230, column: 2, scope: !7875)
!7899 = distinct !DISubprogram(name: "memcmp", scope: !7665, file: !7665, line: 239, type: !7900, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!107, !13, !13, !185}
!7902 = !{!7903, !7904, !7905, !7906, !7907}
!7903 = !DILocalVariable(name: "m1", arg: 1, scope: !7899, file: !7665, line: 239, type: !13)
!7904 = !DILocalVariable(name: "m2", arg: 2, scope: !7899, file: !7665, line: 239, type: !13)
!7905 = !DILocalVariable(name: "n", arg: 3, scope: !7899, file: !7665, line: 239, type: !185)
!7906 = !DILocalVariable(name: "c1", scope: !7899, file: !7665, line: 241, type: !118)
!7907 = !DILocalVariable(name: "c2", scope: !7899, file: !7665, line: 242, type: !118)
!7908 = !DILocation(line: 0, scope: !7899)
!7909 = !DILocation(line: 244, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7899, file: !7665, line: 244, column: 6)
!7911 = !DILocation(line: 244, column: 6, scope: !7899)
!7912 = !DILocation(line: 248, column: 10, scope: !7899)
!7913 = !DILocation(line: 248, column: 14, scope: !7899)
!7914 = !DILocation(line: 248, column: 19, scope: !7899)
!7915 = !DILocation(line: 248, column: 2, scope: !7899)
!7916 = !DILocation(line: 248, column: 23, scope: !7899)
!7917 = !DILocation(line: 248, column: 30, scope: !7899)
!7918 = !DILocation(line: 248, column: 27, scope: !7899)
!7919 = !DILocation(line: 249, column: 5, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7899, file: !7665, line: 248, column: 36)
!7921 = !DILocation(line: 250, column: 5, scope: !7920)
!7922 = distinct !{!7922, !7915, !7923}
!7923 = !DILocation(line: 251, column: 2, scope: !7899)
!7924 = !DILocation(line: 253, column: 9, scope: !7899)
!7925 = !DILocation(line: 253, column: 15, scope: !7899)
!7926 = !DILocation(line: 253, column: 13, scope: !7899)
!7927 = !DILocation(line: 253, column: 2, scope: !7899)
!7928 = !DILocation(line: 254, column: 1, scope: !7899)
!7929 = distinct !DISubprogram(name: "memmove", scope: !7665, file: !7665, line: 263, type: !7930, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!106, !106, !13, !185}
!7932 = !{!7933, !7934, !7935, !7936, !7937}
!7933 = !DILocalVariable(name: "d", arg: 1, scope: !7929, file: !7665, line: 263, type: !106)
!7934 = !DILocalVariable(name: "s", arg: 2, scope: !7929, file: !7665, line: 263, type: !13)
!7935 = !DILocalVariable(name: "n", arg: 3, scope: !7929, file: !7665, line: 263, type: !185)
!7936 = !DILocalVariable(name: "dest", scope: !7929, file: !7665, line: 265, type: !193)
!7937 = !DILocalVariable(name: "src", scope: !7929, file: !7665, line: 266, type: !118)
!7938 = !DILocation(line: 0, scope: !7929)
!7939 = !DILocation(line: 268, column: 21, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7929, file: !7665, line: 268, column: 6)
!7941 = !DILocation(line: 268, column: 28, scope: !7940)
!7942 = !DILocation(line: 268, column: 6, scope: !7929)
!7943 = !DILocation(line: 280, column: 12, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7940, file: !7665, line: 278, column: 9)
!7945 = !DILocation(line: 280, column: 3, scope: !7944)
!7946 = !DILocation(line: 275, column: 5, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7665, line: 274, column: 17)
!7948 = distinct !DILexicalBlock(scope: !7940, file: !7665, line: 268, column: 33)
!7949 = !DILocation(line: 276, column: 14, scope: !7947)
!7950 = !DILocation(line: 276, column: 4, scope: !7947)
!7951 = !DILocation(line: 276, column: 12, scope: !7947)
!7952 = !DILocation(line: 274, column: 12, scope: !7948)
!7953 = !DILocation(line: 274, column: 3, scope: !7948)
!7954 = distinct !{!7954, !7953, !7955}
!7955 = !DILocation(line: 277, column: 3, scope: !7948)
!7956 = !DILocation(line: 281, column: 12, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7944, file: !7665, line: 280, column: 17)
!7958 = !DILocation(line: 281, column: 10, scope: !7957)
!7959 = !DILocation(line: 282, column: 8, scope: !7957)
!7960 = !DILocation(line: 283, column: 7, scope: !7957)
!7961 = !DILocation(line: 284, column: 5, scope: !7957)
!7962 = distinct !{!7962, !7945, !7963}
!7963 = !DILocation(line: 285, column: 3, scope: !7944)
!7964 = !DILocation(line: 288, column: 2, scope: !7929)
!7965 = distinct !DISubprogram(name: "memcpy", scope: !7665, file: !7665, line: 298, type: !7966, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7970)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{!106, !7968, !7969, !185}
!7968 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7969 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7970 = !{!7971, !7972, !7973, !7974, !7975}
!7971 = !DILocalVariable(name: "d", arg: 1, scope: !7965, file: !7665, line: 298, type: !7968)
!7972 = !DILocalVariable(name: "s", arg: 2, scope: !7965, file: !7665, line: 298, type: !7969)
!7973 = !DILocalVariable(name: "n", arg: 3, scope: !7965, file: !7665, line: 298, type: !185)
!7974 = !DILocalVariable(name: "d_byte", scope: !7965, file: !7665, line: 302, type: !1104)
!7975 = !DILocalVariable(name: "s_byte", scope: !7965, file: !7665, line: 303, type: !2877)
!7976 = !DILocation(line: 0, scope: !7965)
!7977 = !DILocation(line: 337, column: 11, scope: !7965)
!7978 = !DILocation(line: 337, column: 2, scope: !7965)
!7979 = !DILocation(line: 338, column: 25, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7965, file: !7665, line: 337, column: 16)
!7981 = !DILocation(line: 338, column: 17, scope: !7980)
!7982 = !DILocation(line: 338, column: 11, scope: !7980)
!7983 = !DILocation(line: 338, column: 15, scope: !7980)
!7984 = !DILocation(line: 339, column: 4, scope: !7980)
!7985 = distinct !{!7985, !7978, !7986}
!7986 = !DILocation(line: 340, column: 2, scope: !7965)
!7987 = !DILocation(line: 342, column: 2, scope: !7965)
!7988 = distinct !DISubprogram(name: "memset", scope: !7665, file: !7665, line: 352, type: !7989, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!106, !106, !107, !185}
!7991 = !{!7992, !7993, !7994, !7995, !7996}
!7992 = !DILocalVariable(name: "buf", arg: 1, scope: !7988, file: !7665, line: 352, type: !106)
!7993 = !DILocalVariable(name: "c", arg: 2, scope: !7988, file: !7665, line: 352, type: !107)
!7994 = !DILocalVariable(name: "n", arg: 3, scope: !7988, file: !7665, line: 352, type: !185)
!7995 = !DILocalVariable(name: "d_byte", scope: !7988, file: !7665, line: 356, type: !1104)
!7996 = !DILocalVariable(name: "c_byte", scope: !7988, file: !7665, line: 357, type: !196)
!7997 = !DILocation(line: 0, scope: !7988)
!7998 = !DILocation(line: 357, column: 25, scope: !7988)
!7999 = !DILocation(line: 389, column: 11, scope: !7988)
!8000 = !DILocation(line: 389, column: 2, scope: !7988)
!8001 = !DILocation(line: 390, column: 11, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7988, file: !7665, line: 389, column: 16)
!8003 = !DILocation(line: 390, column: 15, scope: !8002)
!8004 = !DILocation(line: 391, column: 4, scope: !8002)
!8005 = distinct !{!8005, !8000, !8006}
!8006 = !DILocation(line: 392, column: 2, scope: !7988)
!8007 = !DILocation(line: 394, column: 2, scope: !7988)
!8008 = distinct !DISubprogram(name: "memchr", scope: !7665, file: !7665, line: 404, type: !8009, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8011)
!8009 = !DISubroutineType(types: !8010)
!8010 = !{!106, !13, !107, !185}
!8011 = !{!8012, !8013, !8014, !8015}
!8012 = !DILocalVariable(name: "s", arg: 1, scope: !8008, file: !7665, line: 404, type: !13)
!8013 = !DILocalVariable(name: "c", arg: 2, scope: !8008, file: !7665, line: 404, type: !107)
!8014 = !DILocalVariable(name: "n", arg: 3, scope: !8008, file: !7665, line: 404, type: !185)
!8015 = !DILocalVariable(name: "p", scope: !8016, file: !7665, line: 407, type: !2877)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !7665, line: 406, column: 14)
!8017 = distinct !DILexicalBlock(scope: !8008, file: !7665, line: 406, column: 6)
!8018 = !DILocation(line: 0, scope: !8008)
!8019 = !DILocation(line: 406, column: 8, scope: !8017)
!8020 = !DILocation(line: 406, column: 6, scope: !8008)
!8021 = !DILocation(line: 409, column: 3, scope: !8016)
!8022 = !DILocation(line: 0, scope: !8016)
!8023 = !DILocation(line: 410, column: 8, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !7665, line: 410, column: 8)
!8025 = distinct !DILexicalBlock(scope: !8016, file: !7665, line: 409, column: 6)
!8026 = !DILocation(line: 410, column: 13, scope: !8024)
!8027 = !DILocation(line: 410, column: 8, scope: !8025)
!8028 = distinct !{!8028, !8021, !8029}
!8029 = !DILocation(line: 414, column: 20, scope: !8016)
!8030 = !DILocation(line: 417, column: 2, scope: !8008)
!8031 = !DILocation(line: 418, column: 1, scope: !8008)
!8032 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4145, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8033)
!8033 = !{!8034}
!8034 = !DILocalVariable(name: "hook", arg: 1, scope: !8032, file: !501, line: 23, type: !213)
!8035 = !DILocation(line: 0, scope: !8032)
!8036 = !DILocation(line: 25, column: 15, scope: !8032)
!8037 = !DILocation(line: 26, column: 1, scope: !8032)
!8038 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8039)
!8039 = !{!8040}
!8040 = !DILocalVariable(name: "c", arg: 1, scope: !8038, file: !501, line: 14, type: !107)
!8041 = !DILocation(line: 0, scope: !8038)
!8042 = !DILocation(line: 18, column: 2, scope: !8038)
!8043 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8044, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!107, !107, !497}
!8046 = !{!8047, !8048}
!8047 = !DILocalVariable(name: "c", arg: 1, scope: !8043, file: !501, line: 28, type: !107)
!8048 = !DILocalVariable(name: "stream", arg: 2, scope: !8043, file: !501, line: 28, type: !497)
!8049 = !DILocation(line: 0, scope: !8043)
!8050 = !DILocation(line: 30, column: 27, scope: !8043)
!8051 = !DILocation(line: 30, column: 50, scope: !8043)
!8052 = !DILocation(line: 30, column: 9, scope: !8043)
!8053 = !DILocation(line: 30, column: 2, scope: !8043)
!8054 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8044, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8055)
!8055 = !{!8056, !8057}
!8056 = !DILocalVariable(name: "c", arg: 1, scope: !8054, file: !501, line: 41, type: !107)
!8057 = !DILocalVariable(name: "stream", arg: 2, scope: !8054, file: !501, line: 41, type: !497)
!8058 = !DILocation(line: 0, scope: !8054)
!8059 = !DILocation(line: 43, column: 9, scope: !8054)
!8060 = !DILocation(line: 43, column: 2, scope: !8054)
!8061 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8062, file: !8062, line: 72, type: !8044, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8063)
!8062 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!8063 = !{!8064, !8065}
!8064 = !DILocalVariable(name: "c", arg: 1, scope: !8061, file: !8062, line: 72, type: !107)
!8065 = !DILocalVariable(name: "stream", arg: 2, scope: !8061, file: !8062, line: 72, type: !497)
!8066 = !DILocation(line: 0, scope: !8061)
!8067 = !DILocation(line: 81, column: 2, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8061, file: !8062, line: 81, column: 2)
!8069 = !{i64 2154221561}
!8070 = !DILocation(line: 82, column: 9, scope: !8061)
!8071 = !DILocation(line: 82, column: 2, scope: !8061)
!8072 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8073, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8076)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!107, !7669, !8075}
!8075 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8076 = !{!8077, !8078, !8079, !8080}
!8077 = !DILocalVariable(name: "s", arg: 1, scope: !8072, file: !501, line: 46, type: !7669)
!8078 = !DILocalVariable(name: "stream", arg: 2, scope: !8072, file: !501, line: 46, type: !8075)
!8079 = !DILocalVariable(name: "len", scope: !8072, file: !501, line: 48, type: !107)
!8080 = !DILocalVariable(name: "ret", scope: !8072, file: !501, line: 49, type: !107)
!8081 = !DILocation(line: 0, scope: !8072)
!8082 = !DILocation(line: 48, column: 12, scope: !8072)
!8083 = !DILocation(line: 51, column: 8, scope: !8072)
!8084 = !DILocation(line: 53, column: 13, scope: !8072)
!8085 = !DILocation(line: 53, column: 9, scope: !8072)
!8086 = !DILocation(line: 53, column: 2, scope: !8072)
!8087 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8088, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8090)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!185, !7969, !185, !185, !8075}
!8090 = !{!8091, !8092, !8093, !8094}
!8091 = !DILocalVariable(name: "ptr", arg: 1, scope: !8087, file: !501, line: 99, type: !7969)
!8092 = !DILocalVariable(name: "size", arg: 2, scope: !8087, file: !501, line: 99, type: !185)
!8093 = !DILocalVariable(name: "nitems", arg: 3, scope: !8087, file: !501, line: 99, type: !185)
!8094 = !DILocalVariable(name: "stream", arg: 4, scope: !8087, file: !501, line: 100, type: !8075)
!8095 = !DILocation(line: 0, scope: !8087)
!8096 = !DILocation(line: 102, column: 9, scope: !8087)
!8097 = !DILocation(line: 102, column: 2, scope: !8087)
!8098 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8062, file: !8062, line: 96, type: !8088, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8099)
!8099 = !{!8100, !8101, !8102, !8103}
!8100 = !DILocalVariable(name: "ptr", arg: 1, scope: !8098, file: !8062, line: 96, type: !7969)
!8101 = !DILocalVariable(name: "size", arg: 2, scope: !8098, file: !8062, line: 96, type: !185)
!8102 = !DILocalVariable(name: "nitems", arg: 3, scope: !8098, file: !8062, line: 96, type: !185)
!8103 = !DILocalVariable(name: "stream", arg: 4, scope: !8098, file: !8062, line: 96, type: !8075)
!8104 = !DILocation(line: 0, scope: !8098)
!8105 = !DILocation(line: 107, column: 2, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8098, file: !8062, line: 107, column: 2)
!8107 = !{i64 2154221665}
!8108 = !DILocation(line: 108, column: 9, scope: !8098)
!8109 = !DILocation(line: 108, column: 2, scope: !8098)
!8110 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8088, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8111)
!8111 = !{!8112, !8113, !8114, !8115, !8116, !8117, !8118, !8119}
!8112 = !DILocalVariable(name: "ptr", arg: 1, scope: !8110, file: !501, line: 56, type: !7969)
!8113 = !DILocalVariable(name: "size", arg: 2, scope: !8110, file: !501, line: 56, type: !185)
!8114 = !DILocalVariable(name: "nitems", arg: 3, scope: !8110, file: !501, line: 57, type: !185)
!8115 = !DILocalVariable(name: "stream", arg: 4, scope: !8110, file: !501, line: 57, type: !8075)
!8116 = !DILocalVariable(name: "i", scope: !8110, file: !501, line: 59, type: !185)
!8117 = !DILocalVariable(name: "j", scope: !8110, file: !501, line: 60, type: !185)
!8118 = !DILocalVariable(name: "p", scope: !8110, file: !501, line: 61, type: !2877)
!8119 = !DILabel(scope: !8110, name: "done", file: !501, line: 82)
!8120 = !DILocation(line: 0, scope: !8110)
!8121 = !DILocation(line: 63, column: 14, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8110, file: !501, line: 63, column: 6)
!8123 = !DILocation(line: 63, column: 24, scope: !8122)
!8124 = !DILocation(line: 72, column: 3, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8110, file: !501, line: 70, column: 5)
!8126 = !DILocation(line: 0, scope: !8125)
!8127 = !DILocation(line: 73, column: 8, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !501, line: 73, column: 8)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !501, line: 72, column: 6)
!8130 = !DILocation(line: 73, column: 29, scope: !8128)
!8131 = !DILocation(line: 73, column: 27, scope: !8128)
!8132 = !DILocation(line: 73, column: 21, scope: !8128)
!8133 = !DILocation(line: 73, column: 33, scope: !8128)
!8134 = !DILocation(line: 73, column: 8, scope: !8129)
!8135 = !DILocation(line: 76, column: 5, scope: !8129)
!8136 = !DILocation(line: 77, column: 14, scope: !8125)
!8137 = !DILocation(line: 77, column: 3, scope: !8129)
!8138 = distinct !{!8138, !8124, !8139}
!8139 = !DILocation(line: 77, column: 17, scope: !8125)
!8140 = !DILocation(line: 79, column: 4, scope: !8125)
!8141 = !DILocation(line: 80, column: 13, scope: !8110)
!8142 = !DILocation(line: 80, column: 2, scope: !8125)
!8143 = distinct !{!8143, !8144, !8145}
!8144 = !DILocation(line: 70, column: 2, scope: !8110)
!8145 = !DILocation(line: 80, column: 16, scope: !8110)
!8146 = !DILocation(line: 82, column: 1, scope: !8110)
!8147 = !DILocation(line: 83, column: 17, scope: !8110)
!8148 = !DILocation(line: 83, column: 2, scope: !8110)
!8149 = !DILocation(line: 84, column: 1, scope: !8110)
!8150 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8151, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!107, !118}
!8153 = !{!8154}
!8154 = !DILocalVariable(name: "s", arg: 1, scope: !8150, file: !501, line: 106, type: !118)
!8155 = !DILocation(line: 0, scope: !8150)
!8156 = !DILocation(line: 108, column: 6, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8150, file: !501, line: 108, column: 6)
!8158 = !DILocation(line: 108, column: 23, scope: !8157)
!8159 = !DILocation(line: 108, column: 6, scope: !8150)
!8160 = !DILocation(line: 112, column: 9, scope: !8150)
!8161 = !DILocation(line: 112, column: 29, scope: !8150)
!8162 = !DILocation(line: 112, column: 2, scope: !8150)
!8163 = !DILocation(line: 113, column: 1, scope: !8150)
!8164 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3111, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8165 = !DILocation(line: 69, column: 6, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8164, file: !533, line: 69, column: 6)
!8167 = !DILocation(line: 0, scope: !8166)
!8168 = !DILocation(line: 74, column: 1, scope: !8164)
!8169 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3111, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8170 = !DILocation(line: 183, column: 1, scope: !8169)
!8171 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3111, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8172 = !DILocation(line: 196, column: 1, scope: !8171)
!8173 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3111, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8174 = !DILocation(line: 298, column: 34, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !533, line: 297, column: 47)
!8176 = distinct !DILexicalBlock(scope: !8173, file: !533, line: 297, column: 6)
!8177 = !DILocation(line: 300, column: 2, scope: !8173)
!8178 = !DILocation(line: 301, column: 1, scope: !8173)
!8179 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3111, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8180 = !DILocation(line: 478, column: 10, scope: !8179)
!8181 = !DILocation(line: 478, column: 2, scope: !8179)
!8182 = !DILocation(line: 480, column: 15, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !533, line: 478, column: 17)
!8184 = !DILocation(line: 481, column: 3, scope: !8183)
!8185 = !DILocation(line: 484, column: 15, scope: !8183)
!8186 = !DILocation(line: 485, column: 3, scope: !8183)
!8187 = !DILocation(line: 486, column: 3, scope: !8183)
!8188 = !DILocation(line: 489, column: 9, scope: !8183)
!8189 = !DILocation(line: 488, column: 3, scope: !8183)
!8190 = !DILocation(line: 490, column: 15, scope: !8183)
!8191 = !DILocation(line: 491, column: 3, scope: !8183)
!8192 = !DILocation(line: 493, column: 1, scope: !8179)
!8193 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3111, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8194 = !DILocation(line: 435, column: 3, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8196, file: !533, line: 434, column: 41)
!8196 = distinct !DILexicalBlock(scope: !8193, file: !533, line: 434, column: 6)
!8197 = !DILocation(line: 436, column: 18, scope: !8195)
!8198 = !DILocation(line: 436, column: 3, scope: !8195)
!8199 = !DILocation(line: 438, column: 1, scope: !8193)
!8200 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8201, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8203)
!8201 = !DISubroutineType(types: !8202)
!8202 = !{!118, !532}
!8203 = !{!8204}
!8204 = !DILocalVariable(name: "phase", arg: 1, scope: !8200, file: !533, line: 274, type: !532)
!8205 = !DILocation(line: 0, scope: !8200)
!8206 = !DILocation(line: 276, column: 2, scope: !8200)
!8207 = !DILocation(line: 0, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8200, file: !533, line: 276, column: 17)
!8209 = !DILocation(line: 292, column: 1, scope: !8200)
!8210 = distinct !DISubprogram(name: "k_thread_abort", scope: !4439, file: !4439, line: 188, type: !8211, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8215)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{null, !8213}
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8214)
!8214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "thread", arg: 1, scope: !8210, file: !4439, line: 188, type: !8213)
!8217 = !DILocation(line: 0, scope: !8210)
!8218 = !DILocation(line: 197, column: 2, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8210, file: !4439, line: 197, column: 2)
!8220 = !{i64 2154183364}
!8221 = !DILocation(line: 198, column: 2, scope: !8210)
!8222 = !DILocation(line: 199, column: 1, scope: !8210)
!8223 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8224, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8224 = !DISubroutineType(types: !8225)
!8225 = !{!8213}
!8226 = !DILocation(line: 535, column: 9, scope: !8223)
!8227 = !DILocation(line: 535, column: 2, scope: !8223)
!8228 = distinct !DISubprogram(name: "z_current_get", scope: !4439, file: !4439, line: 173, type: !8224, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8229 = !DILocation(line: 180, column: 2, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8228, file: !4439, line: 180, column: 2)
!8231 = !{i64 2154183296}
!8232 = !DILocation(line: 181, column: 9, scope: !8228)
!8233 = !DILocation(line: 181, column: 2, scope: !8228)
!8234 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3111, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8235 = !DILocation(line: 442, column: 10, scope: !8234)
!8236 = !DILocation(line: 442, column: 2, scope: !8234)
!8237 = !DILocation(line: 444, column: 15, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !533, line: 442, column: 17)
!8239 = !DILocation(line: 445, column: 3, scope: !8238)
!8240 = !DILocation(line: 448, column: 15, scope: !8238)
!8241 = !DILocation(line: 449, column: 3, scope: !8238)
!8242 = !DILocation(line: 450, column: 3, scope: !8238)
!8243 = !DILocation(line: 453, column: 9, scope: !8238)
!8244 = !DILocation(line: 452, column: 3, scope: !8238)
!8245 = !DILocation(line: 454, column: 15, scope: !8238)
!8246 = !DILocation(line: 455, column: 3, scope: !8238)
!8247 = !DILocation(line: 457, column: 1, scope: !8234)
!8248 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3111, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8249 = !DILocation(line: 461, column: 10, scope: !8248)
!8250 = !DILocation(line: 461, column: 2, scope: !8248)
!8251 = !DILocation(line: 463, column: 15, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8248, file: !533, line: 461, column: 17)
!8253 = !DILocation(line: 465, column: 3, scope: !8252)
!8254 = !DILocation(line: 468, column: 9, scope: !8252)
!8255 = !DILocation(line: 467, column: 3, scope: !8252)
!8256 = !DILocation(line: 469, column: 15, scope: !8252)
!8257 = !DILocation(line: 470, column: 7, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8252, file: !533, line: 470, column: 7)
!8259 = !DILocation(line: 470, column: 13, scope: !8258)
!8260 = !DILocation(line: 470, column: 7, scope: !8252)
!8261 = !DILocation(line: 0, scope: !8252)
!8262 = !DILocation(line: 474, column: 1, scope: !8248)
!8263 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8264)
!8264 = !{!8265}
!8265 = !DILocalVariable(name: "data", arg: 1, scope: !8263, file: !533, line: 495, type: !106)
!8266 = !DILocation(line: 0, scope: !8263)
!8267 = !DILocation(line: 498, column: 2, scope: !8263)
!8268 = !DILocation(line: 499, column: 1, scope: !8263)
!8269 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8270, file: !8270, line: 24, type: !3111, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8270 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!8271 = !DILocation(line: 32, column: 2, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8269, file: !8270, line: 32, column: 2)
!8273 = !{i64 2154305751}
!8274 = !DILocation(line: 34, column: 1, scope: !8269)
!8275 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8276)
!8276 = !{!8277}
!8277 = !DILocalVariable(name: "data", arg: 1, scope: !8275, file: !533, line: 501, type: !106)
!8278 = !DILocation(line: 0, scope: !8275)
!8279 = !DILocation(line: 504, column: 2, scope: !8275)
!8280 = !DILocation(line: 505, column: 1, scope: !8275)
!8281 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8270, file: !8270, line: 47, type: !3111, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8282 = !DILocation(line: 55, column: 2, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8281, file: !8270, line: 55, column: 2)
!8284 = !{i64 2154305819}
!8285 = !DILocation(line: 57, column: 1, scope: !8281)
!8286 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8287, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8306)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{!8289, !118, !8289}
!8289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8290, size: 32)
!8290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8291)
!8291 = !{!8292, !8293, !8294, !8295, !8296}
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8290, file: !114, line: 98, baseType: !118, size: 32)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8290, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8290, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8290, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8290, file: !114, line: 104, baseType: !8297, size: 32, offset: 128)
!8297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8298)
!8298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8299, size: 32)
!8299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8300)
!8300 = !{!8301, !8302, !8303, !8304, !8305}
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8299, file: !114, line: 125, baseType: !152, size: 32)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8299, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8299, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8299, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8299, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8306 = !{!8307, !8308, !8309}
!8307 = !DILocalVariable(name: "suite", arg: 1, scope: !8286, file: !533, line: 617, type: !118)
!8308 = !DILocalVariable(name: "prev", arg: 2, scope: !8286, file: !533, line: 617, type: !8289)
!8309 = !DILocalVariable(name: "test", scope: !8286, file: !533, line: 619, type: !8289)
!8310 = !DILocation(line: 0, scope: !8286)
!8311 = !DILocation(line: 619, column: 39, scope: !8286)
!8312 = !DILocation(line: 619, column: 33, scope: !8286)
!8313 = !DILocation(line: 621, column: 14, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !533, line: 621, column: 2)
!8315 = distinct !DILexicalBlock(scope: !8286, file: !533, line: 621, column: 2)
!8316 = !DILocation(line: 621, column: 2, scope: !8315)
!8317 = !DILocation(line: 622, column: 27, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !533, line: 622, column: 7)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !533, line: 621, column: 51)
!8320 = !DILocation(line: 622, column: 7, scope: !8318)
!8321 = !DILocation(line: 622, column: 44, scope: !8318)
!8322 = !DILocation(line: 622, column: 7, scope: !8319)
!8323 = !DILocation(line: 621, column: 43, scope: !8314)
!8324 = distinct !{!8324, !8316, !8325}
!8325 = !DILocation(line: 625, column: 2, scope: !8315)
!8326 = !DILocation(line: 627, column: 1, scope: !8286)
!8327 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8151, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8328)
!8328 = !{!8329}
!8329 = !DILocalVariable(name: "name", arg: 1, scope: !8327, file: !533, line: 764, type: !118)
!8330 = !DILocation(line: 0, scope: !8327)
!8331 = !DILocation(line: 766, column: 36, scope: !8327)
!8332 = !DILocation(line: 766, column: 9, scope: !8327)
!8333 = !DILocation(line: 766, column: 2, scope: !8327)
!8334 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8335, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8354)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{!8337, !118}
!8337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8338, size: 32)
!8338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8339)
!8339 = !{!8340, !8341, !8342, !8343, !8344, !8345, !8346}
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8338, file: !114, line: 179, baseType: !117, size: 32)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8338, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8338, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8338, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8338, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8338, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8338, file: !114, line: 197, baseType: !8347, size: 32, offset: 192)
!8347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8348)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 32)
!8349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8350)
!8350 = !{!8351, !8352, !8353}
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8349, file: !114, line: 116, baseType: !152, size: 32)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8349, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8349, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8354 = !{!8355, !8356}
!8355 = !DILocalVariable(name: "name", arg: 1, scope: !8334, file: !533, line: 604, type: !118)
!8356 = !DILocalVariable(name: "node", scope: !8334, file: !533, line: 606, type: !8337)
!8357 = !DILocation(line: 0, scope: !8334)
!8358 = !DILocation(line: 608, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8334, file: !533, line: 608, column: 2)
!8360 = !DILocation(line: 609, column: 26, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !533, line: 609, column: 7)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 608, column: 87)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !533, line: 608, column: 2)
!8364 = !DILocation(line: 609, column: 7, scope: !8361)
!8365 = !DILocation(line: 609, column: 32, scope: !8361)
!8366 = !DILocation(line: 609, column: 7, scope: !8362)
!8367 = !DILocation(line: 608, column: 79, scope: !8363)
!8368 = !DILocation(line: 608, column: 49, scope: !8363)
!8369 = distinct !{!8369, !8358, !8370}
!8370 = !DILocation(line: 612, column: 2, scope: !8359)
!8371 = !DILocation(line: 615, column: 1, scope: !8334)
!8372 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8373, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8375)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!107, !8337}
!8375 = !{!8376, !8377, !8378, !8379, !8380, !8381}
!8376 = !DILocalVariable(name: "suite", arg: 1, scope: !8372, file: !533, line: 652, type: !8337)
!8377 = !DILocalVariable(name: "test", scope: !8372, file: !533, line: 654, type: !8289)
!8378 = !DILocalVariable(name: "data", scope: !8372, file: !533, line: 655, type: !106)
!8379 = !DILocalVariable(name: "fail", scope: !8372, file: !533, line: 656, type: !107)
!8380 = !DILocalVariable(name: "tc_result", scope: !8372, file: !533, line: 657, type: !107)
!8381 = !DILocalVariable(name: "i", scope: !8382, file: !533, line: 692, type: !107)
!8382 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 692, column: 2)
!8383 = !DILocation(line: 0, scope: !8372)
!8384 = !DILocation(line: 663, column: 12, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 663, column: 6)
!8386 = !DILocation(line: 663, column: 6, scope: !8372)
!8387 = !DILocation(line: 664, column: 15, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8385, file: !533, line: 663, column: 21)
!8389 = !DILocation(line: 665, column: 3, scope: !8388)
!8390 = !DILocation(line: 679, column: 2, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 679, column: 2)
!8392 = !DILocation(line: 680, column: 33, scope: !8372)
!8393 = !DILocation(line: 681, column: 14, scope: !8372)
!8394 = !DILocation(line: 682, column: 8, scope: !8372)
!8395 = !DILocation(line: 688, column: 55, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 688, column: 6)
!8397 = !DILocation(line: 688, column: 61, scope: !8396)
!8398 = !DILocation(line: 688, column: 6, scope: !8372)
!8399 = !DILocation(line: 689, column: 10, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8396, file: !533, line: 688, column: 70)
!8401 = !DILocation(line: 690, column: 2, scope: !8400)
!8402 = !DILocation(line: 0, scope: !8382)
!8403 = !DILocation(line: 727, column: 3, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !533, line: 692, column: 46)
!8405 = distinct !DILexicalBlock(scope: !8382, file: !533, line: 692, column: 2)
!8406 = !DILocation(line: 0, scope: !8404)
!8407 = !DILocation(line: 727, column: 48, scope: !8404)
!8408 = !DILocation(line: 727, column: 19, scope: !8404)
!8409 = !DILocation(line: 727, column: 61, scope: !8404)
!8410 = !DILocation(line: 728, column: 41, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 728, column: 8)
!8412 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 727, column: 71)
!8413 = !DILocation(line: 728, column: 53, scope: !8411)
!8414 = !DILocation(line: 728, column: 8, scope: !8411)
!8415 = !DILocation(line: 728, column: 8, scope: !8412)
!8416 = !DILocation(line: 729, column: 11, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8411, file: !533, line: 728, column: 60)
!8418 = !DILocation(line: 729, column: 18, scope: !8417)
!8419 = !DILocation(line: 729, column: 27, scope: !8417)
!8420 = !DILocation(line: 730, column: 17, scope: !8417)
!8421 = !DILocation(line: 731, column: 9, scope: !8417)
!8422 = !DILocation(line: 732, column: 12, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !533, line: 731, column: 31)
!8424 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 731, column: 9)
!8425 = !DILocation(line: 732, column: 19, scope: !8423)
!8426 = !DILocation(line: 733, column: 5, scope: !8423)
!8427 = !DILocation(line: 734, column: 12, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !533, line: 733, column: 38)
!8429 = distinct !DILexicalBlock(scope: !8424, file: !533, line: 733, column: 16)
!8430 = !DILocation(line: 734, column: 19, scope: !8428)
!8431 = !DILocation(line: 735, column: 5, scope: !8428)
!8432 = !DILocation(line: 736, column: 12, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !533, line: 735, column: 38)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !533, line: 735, column: 16)
!8435 = !DILocation(line: 736, column: 19, scope: !8433)
!8436 = !DILocation(line: 737, column: 5, scope: !8433)
!8437 = !DILocation(line: 0, scope: !8424)
!8438 = !DILocation(line: 739, column: 19, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 739, column: 9)
!8440 = !DILocation(line: 739, column: 9, scope: !8417)
!8441 = !DILocation(line: 744, column: 31, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 744, column: 8)
!8443 = !DILocation(line: 744, column: 43, scope: !8442)
!8444 = !DILocation(line: 744, column: 8, scope: !8412)
!8445 = distinct !{!8445, !8403, !8446}
!8446 = !DILocation(line: 747, column: 3, scope: !8404)
!8447 = !DILocation(line: 750, column: 7, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 750, column: 7)
!8449 = !DILocation(line: 750, column: 38, scope: !8448)
!8450 = !DILocation(line: 751, column: 16, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8448, file: !533, line: 750, column: 52)
!8452 = !DILocation(line: 752, column: 3, scope: !8451)
!8453 = !DILocation(line: 755, column: 2, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !533, line: 755, column: 2)
!8455 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 755, column: 2)
!8456 = !DILocation(line: 0, scope: !8454)
!8457 = !DILocation(line: 756, column: 8, scope: !8372)
!8458 = !DILocation(line: 757, column: 13, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8372, file: !533, line: 757, column: 6)
!8460 = !DILocation(line: 757, column: 22, scope: !8459)
!8461 = !DILocation(line: 757, column: 6, scope: !8372)
!8462 = !DILocation(line: 758, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !533, line: 757, column: 31)
!8464 = !DILocation(line: 759, column: 2, scope: !8463)
!8465 = !DILocation(line: 762, column: 1, scope: !8372)
!8466 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8467, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!107, !8337, !8289, !106}
!8469 = !{!8470, !8471, !8472, !8473}
!8470 = !DILocalVariable(name: "suite", arg: 1, scope: !8466, file: !533, line: 521, type: !8337)
!8471 = !DILocalVariable(name: "test", arg: 2, scope: !8466, file: !533, line: 521, type: !8289)
!8472 = !DILocalVariable(name: "data", arg: 3, scope: !8466, file: !533, line: 521, type: !106)
!8473 = !DILocalVariable(name: "ret", scope: !8466, file: !533, line: 523, type: !107)
!8474 = !DILocation(line: 0, scope: !8466)
!8475 = !DILocation(line: 528, column: 2, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 528, column: 2)
!8477 = !DILocation(line: 530, column: 8, scope: !8466)
!8478 = !DILocation(line: 536, column: 3, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !533, line: 535, column: 41)
!8480 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 535, column: 6)
!8481 = !DILocation(line: 539, column: 32, scope: !8479)
!8482 = !DILocation(line: 539, column: 39, scope: !8479)
!8483 = !DILocation(line: 541, column: 11, scope: !8479)
!8484 = !DILocation(line: 541, column: 26, scope: !8479)
!8485 = !DILocation(line: 537, column: 3, scope: !8479)
!8486 = !DILocation(line: 543, column: 3, scope: !8479)
!8487 = !DILocation(line: 544, column: 13, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8479, file: !533, line: 544, column: 7)
!8489 = !DILocation(line: 544, column: 18, scope: !8488)
!8490 = !DILocation(line: 544, column: 7, scope: !8479)
!8491 = !DILocation(line: 545, column: 4, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8488, file: !533, line: 544, column: 27)
!8493 = !DILocation(line: 546, column: 3, scope: !8492)
!8494 = !DILocation(line: 548, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8479, file: !533, line: 548, column: 7)
!8496 = !DILocation(line: 548, column: 46, scope: !8495)
!8497 = !DILocation(line: 550, column: 4, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8495, file: !533, line: 549, column: 47)
!8499 = !DILocation(line: 551, column: 4, scope: !8498)
!8500 = !DILocation(line: 552, column: 3, scope: !8498)
!8501 = !DILocation(line: 564, column: 8, scope: !8466)
!8502 = !DILocation(line: 565, column: 13, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 565, column: 6)
!8504 = !DILocation(line: 565, column: 19, scope: !8503)
!8505 = !DILocation(line: 565, column: 6, scope: !8466)
!8506 = !DILocation(line: 566, column: 3, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8503, file: !533, line: 565, column: 28)
!8508 = !DILocation(line: 567, column: 2, scope: !8507)
!8509 = !DILocation(line: 568, column: 2, scope: !8466)
!8510 = !DILocation(line: 570, column: 2, scope: !8466)
!8511 = !DILocation(line: 571, column: 6, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 571, column: 6)
!8513 = !DILocation(line: 571, column: 28, scope: !8512)
!8514 = !DILocation(line: 571, column: 35, scope: !8512)
!8515 = !DILocation(line: 571, column: 20, scope: !8512)
!8516 = !DILocation(line: 571, column: 6, scope: !8466)
!8517 = !DILocation(line: 572, column: 34, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8512, file: !533, line: 571, column: 54)
!8519 = !DILocation(line: 573, column: 2, scope: !8518)
!8520 = !DILocation(line: 575, column: 8, scope: !8466)
!8521 = !DILocation(line: 583, column: 6, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 583, column: 6)
!8523 = !DILocation(line: 583, column: 39, scope: !8522)
!8524 = !DILocation(line: 585, column: 46, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8522, file: !533, line: 585, column: 13)
!8526 = !DILocation(line: 590, column: 10, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !533, line: 589, column: 54)
!8528 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 589, column: 6)
!8529 = !DILocation(line: 593, column: 8, scope: !8466)
!8530 = !DILocation(line: 594, column: 2, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 594, column: 2)
!8532 = !DILocation(line: 595, column: 10, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8466, file: !533, line: 595, column: 6)
!8534 = !DILocation(line: 595, column: 21, scope: !8533)
!8535 = !DILocation(line: 595, column: 24, scope: !8533)
!8536 = !DILocation(line: 595, column: 6, scope: !8466)
!8537 = !DILocation(line: 596, column: 15, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8533, file: !533, line: 595, column: 56)
!8539 = !DILocation(line: 597, column: 2, scope: !8538)
!8540 = !DILocation(line: 599, column: 2, scope: !8466)
!8541 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3111, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8542 = !DILocation(line: 100, column: 18, scope: !8541)
!8543 = !DILocation(line: 100, column: 16, scope: !8541)
!8544 = !DILocation(line: 101, column: 1, scope: !8541)
!8545 = distinct !DISubprogram(name: "k_thread_create", scope: !4439, file: !4439, line: 24, type: !8546, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8554)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!8213, !8214, !8548, !185, !559, !106, !106, !106, !107, !152, !8550}
!8548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8549, size: 32)
!8549 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8550 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8551)
!8551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8552)
!8552 = !{!8553}
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8551, file: !565, line: 66, baseType: !564, size: 64)
!8554 = !{!8555, !8556, !8557, !8558, !8559, !8560, !8561, !8562, !8563, !8564}
!8555 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8545, file: !4439, line: 24, type: !8214)
!8556 = !DILocalVariable(name: "stack", arg: 2, scope: !8545, file: !4439, line: 24, type: !8548)
!8557 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8545, file: !4439, line: 24, type: !185)
!8558 = !DILocalVariable(name: "entry", arg: 4, scope: !8545, file: !4439, line: 24, type: !559)
!8559 = !DILocalVariable(name: "p1", arg: 5, scope: !8545, file: !4439, line: 24, type: !106)
!8560 = !DILocalVariable(name: "p2", arg: 6, scope: !8545, file: !4439, line: 24, type: !106)
!8561 = !DILocalVariable(name: "p3", arg: 7, scope: !8545, file: !4439, line: 24, type: !106)
!8562 = !DILocalVariable(name: "prio", arg: 8, scope: !8545, file: !4439, line: 24, type: !107)
!8563 = !DILocalVariable(name: "options", arg: 9, scope: !8545, file: !4439, line: 24, type: !152)
!8564 = !DILocalVariable(name: "delay", arg: 10, scope: !8545, file: !4439, line: 24, type: !8550)
!8565 = !DILocation(line: 0, scope: !8545)
!8566 = !DILocation(line: 49, column: 2, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8545, file: !4439, line: 49, column: 2)
!8568 = !{i64 2154182752}
!8569 = !DILocation(line: 50, column: 9, scope: !8545)
!8570 = !DILocation(line: 50, column: 2, scope: !8545)
!8571 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8572, file: !8572, line: 24, type: !8573, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8575)
!8572 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!8573 = !DISubroutineType(types: !8574)
!8574 = !{null, !13, !8214}
!8575 = !{!8576, !8577}
!8576 = !DILocalVariable(name: "object", arg: 1, scope: !8571, file: !8572, line: 24, type: !13)
!8577 = !DILocalVariable(name: "thread", arg: 2, scope: !8571, file: !8572, line: 24, type: !8214)
!8578 = !DILocation(line: 0, scope: !8571)
!8579 = !DILocation(line: 34, column: 2, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8571, file: !8572, line: 34, column: 2)
!8581 = !{i64 2153699172}
!8582 = !DILocation(line: 36, column: 1, scope: !8571)
!8583 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4439, file: !4439, line: 391, type: !8584, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8586)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!107, !8213, !118}
!8586 = !{!8587, !8588}
!8587 = !DILocalVariable(name: "thread", arg: 1, scope: !8583, file: !4439, line: 391, type: !8213)
!8588 = !DILocalVariable(name: "str", arg: 2, scope: !8583, file: !4439, line: 391, type: !118)
!8589 = !DILocation(line: 0, scope: !8583)
!8590 = !DILocation(line: 400, column: 2, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8583, file: !4439, line: 400, column: 2)
!8592 = !{i64 2154184180}
!8593 = !DILocation(line: 401, column: 9, scope: !8583)
!8594 = !DILocation(line: 401, column: 2, scope: !8583)
!8595 = distinct !DISubprogram(name: "k_thread_start", scope: !4439, file: !4439, line: 205, type: !8211, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8596)
!8596 = !{!8597}
!8597 = !DILocalVariable(name: "thread", arg: 1, scope: !8595, file: !4439, line: 205, type: !8213)
!8598 = !DILocation(line: 0, scope: !8595)
!8599 = !DILocation(line: 214, column: 2, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8595, file: !4439, line: 214, column: 2)
!8601 = !{i64 2154183432}
!8602 = !DILocation(line: 215, column: 2, scope: !8595)
!8603 = !DILocation(line: 216, column: 1, scope: !8595)
!8604 = distinct !DISubprogram(name: "k_thread_join", scope: !4439, file: !4439, line: 74, type: !8605, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8607)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!107, !8214, !8550}
!8607 = !{!8608, !8609}
!8608 = !DILocalVariable(name: "thread", arg: 1, scope: !8604, file: !4439, line: 74, type: !8214)
!8609 = !DILocalVariable(name: "timeout", arg: 2, scope: !8604, file: !4439, line: 74, type: !8550)
!8610 = !DILocation(line: 0, scope: !8604)
!8611 = !DILocation(line: 83, column: 2, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8604, file: !4439, line: 83, column: 2)
!8613 = !{i64 2154182888}
!8614 = !DILocation(line: 84, column: 9, scope: !8604)
!8615 = !DILocation(line: 84, column: 2, scope: !8604)
!8616 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8617, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8619)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{null, !145, !8289, !106}
!8619 = !{!8620, !8621, !8622, !8623}
!8620 = !DILocalVariable(name: "is_before", arg: 1, scope: !8616, file: !533, line: 207, type: !145)
!8621 = !DILocalVariable(name: "test", arg: 2, scope: !8616, file: !533, line: 207, type: !8289)
!8622 = !DILocalVariable(name: "data", arg: 3, scope: !8616, file: !533, line: 207, type: !106)
!8623 = !DILocalVariable(name: "rule", scope: !8624, file: !533, line: 209, type: !8625)
!8624 = distinct !DILexicalBlock(scope: !8616, file: !533, line: 209, column: 2)
!8625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8626, size: 32)
!8626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8627)
!8627 = !{!8628, !8635}
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8626, file: !114, line: 438, baseType: !8629, size: 32)
!8629 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8630)
!8630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8631, size: 32)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{null, !8633, !106}
!8633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8634, size: 32)
!8634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8290)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8626, file: !114, line: 439, baseType: !8629, size: 32, offset: 32)
!8636 = !DILocation(line: 0, scope: !8616)
!8637 = !DILocation(line: 0, scope: !8624)
!8638 = !DILocation(line: 209, column: 2, scope: !8624)
!8639 = !DILocation(line: 217, column: 1, scope: !8616)
!8640 = !DILocation(line: 211, column: 17, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !533, line: 211, column: 7)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !533, line: 210, column: 49)
!8643 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 209, column: 2)
!8644 = !DILocation(line: 211, column: 26, scope: !8641)
!8645 = !DILocation(line: 211, column: 20, scope: !8641)
!8646 = !DILocation(line: 211, column: 7, scope: !8642)
!8647 = !DILocation(line: 213, column: 34, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8641, file: !533, line: 213, column: 14)
!8649 = !DILocation(line: 213, column: 28, scope: !8648)
!8650 = !DILocation(line: 213, column: 14, scope: !8641)
!8651 = !DILocation(line: 0, scope: !8641)
!8652 = !DILocation(line: 210, column: 41, scope: !8643)
!8653 = !DILocation(line: 210, column: 12, scope: !8643)
!8654 = distinct !{!8654, !8638, !8655}
!8655 = !DILocation(line: 216, column: 2, scope: !8624)
!8656 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3111, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8657)
!8657 = !{!8658}
!8658 = !DILocalVariable(name: "spend_cycle", scope: !8656, file: !690, line: 105, type: !152)
!8659 = !DILocation(line: 105, column: 25, scope: !8656)
!8660 = !DILocation(line: 105, column: 44, scope: !8656)
!8661 = !DILocation(line: 105, column: 42, scope: !8656)
!8662 = !DILocation(line: 0, scope: !8656)
!8663 = !DILocation(line: 107, column: 18, scope: !8656)
!8664 = !DILocation(line: 107, column: 16, scope: !8656)
!8665 = !DILocation(line: 108, column: 1, scope: !8656)
!8666 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8667, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!107, !8289}
!8669 = !{!8670, !8671, !8672}
!8670 = !DILocalVariable(name: "test", arg: 1, scope: !8666, file: !533, line: 76, type: !8289)
!8671 = !DILocalVariable(name: "ret", scope: !8666, file: !533, line: 78, type: !107)
!8672 = !DILocalVariable(name: "mock_status", scope: !8666, file: !533, line: 79, type: !107)
!8673 = !DILocation(line: 0, scope: !8666)
!8674 = !DILocation(line: 89, column: 3, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !533, line: 88, column: 41)
!8676 = distinct !DILexicalBlock(scope: !8666, file: !533, line: 88, column: 6)
!8677 = !DILocation(line: 103, column: 2, scope: !8666)
!8678 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8679, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8681)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{!107, !8633, !107}
!8681 = !{!8682, !8683, !8684, !8685}
!8682 = !DILocalVariable(name: "test", arg: 1, scope: !8678, file: !533, line: 236, type: !8633)
!8683 = !DILocalVariable(name: "ret", arg: 2, scope: !8678, file: !533, line: 236, type: !107)
!8684 = !DILocalVariable(name: "expected_result", scope: !8678, file: !533, line: 238, type: !554)
!8685 = !DILocalVariable(name: "expectation", scope: !8686, file: !533, line: 240, type: !8687)
!8686 = distinct !DILexicalBlock(scope: !8678, file: !533, line: 240, column: 2)
!8687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8688, size: 32)
!8688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8689)
!8689 = !{!8690, !8691, !8692}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8688, file: !114, line: 48, baseType: !118, size: 32)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8688, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8688, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8693 = !DILocation(line: 0, scope: !8678)
!8694 = !DILocation(line: 0, scope: !8686)
!8695 = !DILocation(line: 240, column: 2, scope: !8686)
!8696 = !DILocation(line: 243, column: 27, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !533, line: 243, column: 7)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !533, line: 242, column: 75)
!8699 = distinct !DILexicalBlock(scope: !8686, file: !533, line: 240, column: 2)
!8700 = !DILocation(line: 243, column: 44, scope: !8697)
!8701 = !DILocation(line: 243, column: 7, scope: !8697)
!8702 = !DILocation(line: 243, column: 50, scope: !8697)
!8703 = !DILocation(line: 243, column: 55, scope: !8697)
!8704 = !DILocation(line: 244, column: 27, scope: !8697)
!8705 = !DILocation(line: 244, column: 50, scope: !8697)
!8706 = !DILocation(line: 244, column: 7, scope: !8697)
!8707 = !DILocation(line: 244, column: 67, scope: !8697)
!8708 = !DILocation(line: 243, column: 7, scope: !8698)
!8709 = !DILocation(line: 242, column: 60, scope: !8699)
!8710 = !DILocation(line: 242, column: 19, scope: !8699)
!8711 = distinct !{!8711, !8695, !8712}
!8712 = !DILocation(line: 248, column: 2, scope: !8686)
!8713 = !DILocation(line: 245, column: 35, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8697, file: !533, line: 244, column: 73)
!8715 = !DILocation(line: 250, column: 6, scope: !8678)
!8716 = !DILocation(line: 255, column: 15, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !533, line: 250, column: 53)
!8718 = distinct !DILexicalBlock(scope: !8678, file: !533, line: 250, column: 6)
!8719 = !DILocation(line: 255, column: 10, scope: !8717)
!8720 = !DILocation(line: 255, column: 3, scope: !8717)
!8721 = !DILocation(line: 262, column: 15, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !533, line: 257, column: 53)
!8723 = distinct !DILexicalBlock(scope: !8678, file: !533, line: 257, column: 6)
!8724 = !DILocation(line: 262, column: 10, scope: !8722)
!8725 = !DILocation(line: 262, column: 3, scope: !8722)
!8726 = !DILocation(line: 266, column: 1, scope: !8678)
!8727 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8728, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8730)
!8728 = !DISubroutineType(types: !8729)
!8729 = !{!118, !107}
!8730 = !{!8731}
!8731 = !DILocalVariable(name: "result", arg: 1, scope: !8727, file: !690, line: 81, type: !107)
!8732 = !DILocation(line: 0, scope: !8727)
!8733 = !DILocation(line: 83, column: 2, scope: !8727)
!8734 = !DILocation(line: 0, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8727, file: !690, line: 83, column: 18)
!8736 = !DILocation(line: 93, column: 1, scope: !8727)
!8737 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6360, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8738 = !DILocation(line: 1677, column: 9, scope: !8737)
!8739 = !DILocation(line: 1677, column: 2, scope: !8737)
!8740 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8741, file: !8741, line: 809, type: !7560, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8742)
!8741 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8742 = !{!8743}
!8743 = !DILocalVariable(name: "t", arg: 1, scope: !8740, file: !8741, line: 809, type: !152)
!8744 = !DILocation(line: 0, scope: !8740)
!8745 = !DILocation(line: 812, column: 17, scope: !8740)
!8746 = !DILocalVariable(name: "t", arg: 1, scope: !8747, file: !8741, line: 102, type: !566)
!8747 = distinct !DISubprogram(name: "z_tmcvt", scope: !8741, file: !8741, line: 102, type: !8748, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8750)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8750 = !{!8746, !8751, !8752, !8753, !8754, !8755, !8756, !8757, !8758, !8759, !8760}
!8751 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8747, file: !8741, line: 102, type: !152)
!8752 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8747, file: !8741, line: 103, type: !152)
!8753 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8747, file: !8741, line: 103, type: !145)
!8754 = !DILocalVariable(name: "result32", arg: 5, scope: !8747, file: !8741, line: 104, type: !145)
!8755 = !DILocalVariable(name: "round_up", arg: 6, scope: !8747, file: !8741, line: 104, type: !145)
!8756 = !DILocalVariable(name: "round_off", arg: 7, scope: !8747, file: !8741, line: 105, type: !145)
!8757 = !DILocalVariable(name: "mul_ratio", scope: !8747, file: !8741, line: 107, type: !145)
!8758 = !DILocalVariable(name: "div_ratio", scope: !8747, file: !8741, line: 109, type: !145)
!8759 = !DILocalVariable(name: "off", scope: !8747, file: !8741, line: 116, type: !566)
!8760 = !DILocalVariable(name: "rdivisor", scope: !8761, file: !8741, line: 119, type: !152)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !8741, line: 118, column: 18)
!8762 = distinct !DILexicalBlock(scope: !8747, file: !8741, line: 118, column: 6)
!8763 = !DILocation(line: 0, scope: !8747, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 812, column: 9, scope: !8740)
!8765 = !DILocation(line: 135, column: 5, scope: !8766, inlinedAt: !8764)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !8741, line: 134, column: 17)
!8767 = distinct !DILexicalBlock(scope: !8747, file: !8741, line: 134, column: 6)
!8768 = !DILocation(line: 136, column: 16, scope: !8769, inlinedAt: !8764)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !8741, line: 136, column: 7)
!8770 = !DILocation(line: 812, column: 9, scope: !8740)
!8771 = !DILocation(line: 812, column: 2, scope: !8740)
!8772 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8773, file: !8773, line: 24, type: !6360, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!8773 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8774 = !DILocation(line: 26, column: 9, scope: !8772)
!8775 = !DILocation(line: 26, column: 2, scope: !8772)
!8776 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8777)
!8777 = !{!8778, !8779, !8780, !8781, !8782}
!8778 = !DILocalVariable(name: "a", arg: 1, scope: !8776, file: !533, line: 507, type: !106)
!8779 = !DILocalVariable(name: "b", arg: 2, scope: !8776, file: !533, line: 507, type: !106)
!8780 = !DILocalVariable(name: "c", arg: 3, scope: !8776, file: !533, line: 507, type: !106)
!8781 = !DILocalVariable(name: "suite", scope: !8776, file: !533, line: 509, type: !8337)
!8782 = !DILocalVariable(name: "test", scope: !8776, file: !533, line: 510, type: !8289)
!8783 = !DILocation(line: 0, scope: !8776)
!8784 = !DILocation(line: 510, column: 33, scope: !8776)
!8785 = !DILocation(line: 512, column: 14, scope: !8776)
!8786 = !DILocation(line: 513, column: 2, scope: !8776)
!8787 = !DILocation(line: 514, column: 13, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8776, file: !533, line: 514, column: 6)
!8789 = !DILocation(line: 514, column: 6, scope: !8788)
!8790 = !DILocation(line: 514, column: 6, scope: !8776)
!8791 = !DILocation(line: 515, column: 3, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8788, file: !533, line: 514, column: 21)
!8793 = !DILocation(line: 516, column: 2, scope: !8792)
!8794 = !DILocation(line: 517, column: 2, scope: !8776)
!8795 = !DILocation(line: 518, column: 14, scope: !8776)
!8796 = !DILocation(line: 519, column: 1, scope: !8776)
!8797 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8798, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8800)
!8798 = !DISubroutineType(types: !8799)
!8799 = !{null, !8337, !8289, !106}
!8800 = !{!8801, !8802, !8803}
!8801 = !DILocalVariable(name: "suite", arg: 1, scope: !8797, file: !533, line: 219, type: !8337)
!8802 = !DILocalVariable(name: "test", arg: 2, scope: !8797, file: !533, line: 219, type: !8289)
!8803 = !DILocalVariable(name: "data", arg: 3, scope: !8797, file: !533, line: 220, type: !106)
!8804 = !DILocation(line: 0, scope: !8797)
!8805 = !DILocation(line: 222, column: 8, scope: !8797)
!8806 = !DILocation(line: 223, column: 8, scope: !8797)
!8807 = !DILocation(line: 223, column: 2, scope: !8797)
!8808 = !DILocation(line: 224, column: 1, scope: !8797)
!8809 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8810, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!107, !13}
!8812 = !{!8813, !8814, !8815}
!8813 = !DILocalVariable(name: "state", arg: 1, scope: !8809, file: !533, line: 929, type: !13)
!8814 = !DILocalVariable(name: "count", scope: !8809, file: !533, line: 931, type: !107)
!8815 = !DILocalVariable(name: "ptr", scope: !8816, file: !533, line: 954, type: !8337)
!8816 = distinct !DILexicalBlock(scope: !8809, file: !533, line: 954, column: 2)
!8817 = !DILocation(line: 0, scope: !8809)
!8818 = !DILocation(line: 933, column: 6, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8809, file: !533, line: 933, column: 6)
!8820 = !DILocation(line: 933, column: 18, scope: !8819)
!8821 = !DILocation(line: 933, column: 6, scope: !8809)
!8822 = !DILocation(line: 0, scope: !8816)
!8823 = !DILocation(line: 954, column: 2, scope: !8816)
!8824 = !DILocation(line: 956, column: 12, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !533, line: 955, column: 48)
!8826 = distinct !DILexicalBlock(scope: !8816, file: !533, line: 954, column: 2)
!8827 = !DILocation(line: 956, column: 9, scope: !8825)
!8828 = !DILocation(line: 960, column: 7, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8825, file: !533, line: 960, column: 7)
!8830 = !DILocation(line: 960, column: 19, scope: !8829)
!8831 = !DILocation(line: 955, column: 41, scope: !8826)
!8832 = !DILocation(line: 960, column: 50, scope: !8829)
!8833 = distinct !{!8833, !8823, !8834}
!8834 = !DILocation(line: 964, column: 2, scope: !8816)
!8835 = !DILocation(line: 967, column: 2, scope: !8809)
!8836 = !DILocation(line: 969, column: 2, scope: !8809)
!8837 = !DILocation(line: 970, column: 1, scope: !8809)
!8838 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8839, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8841)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{!107, !8337, !13}
!8841 = !{!8842, !8843, !8844, !8845, !8846, !8848}
!8842 = !DILocalVariable(name: "ptr", arg: 1, scope: !8838, file: !533, line: 907, type: !8337)
!8843 = !DILocalVariable(name: "state", arg: 2, scope: !8838, file: !533, line: 907, type: !13)
!8844 = !DILocalVariable(name: "stats", scope: !8838, file: !533, line: 909, type: !8348)
!8845 = !DILocalVariable(name: "count", scope: !8838, file: !533, line: 910, type: !107)
!8846 = !DILocalVariable(name: "i", scope: !8847, file: !533, line: 914, type: !107)
!8847 = distinct !DILexicalBlock(scope: !8838, file: !533, line: 914, column: 2)
!8848 = !DILocalVariable(name: "fail", scope: !8849, file: !533, line: 916, type: !107)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !533, line: 915, column: 47)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !533, line: 915, column: 7)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !533, line: 914, column: 47)
!8852 = distinct !DILexicalBlock(scope: !8847, file: !533, line: 914, column: 2)
!8853 = !DILocation(line: 0, scope: !8838)
!8854 = !DILocation(line: 909, column: 41, scope: !8838)
!8855 = !DILocation(line: 912, column: 2, scope: !8838)
!8856 = !DILocation(line: 0, scope: !8847)
!8857 = !DILocation(line: 915, column: 7, scope: !8850)
!8858 = !DILocation(line: 915, column: 7, scope: !8851)
!8859 = !DILocation(line: 916, column: 15, scope: !8849)
!8860 = !DILocation(line: 0, scope: !8849)
!8861 = !DILocation(line: 919, column: 20, scope: !8849)
!8862 = !DILocation(line: 920, column: 31, scope: !8849)
!8863 = !DILocation(line: 920, column: 25, scope: !8849)
!8864 = !DILocation(line: 921, column: 3, scope: !8849)
!8865 = !DILocation(line: 0, scope: !8850)
!8866 = !DILocation(line: 926, column: 2, scope: !8838)
!8867 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3111, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8868)
!8868 = !{!8869}
!8869 = !DILocalVariable(name: "ptr", scope: !8870, file: !533, line: 894, type: !8337)
!8870 = distinct !DILexicalBlock(scope: !8867, file: !533, line: 894, column: 2)
!8871 = !DILocation(line: 892, column: 2, scope: !8867)
!8872 = !DILocation(line: 0, scope: !8870)
!8873 = !DILocation(line: 894, column: 2, scope: !8870)
!8874 = !DILocation(line: 903, column: 2, scope: !8867)
!8875 = !DILocation(line: 905, column: 1, scope: !8867)
!8876 = !DILocation(line: 898, column: 3, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !533, line: 895, column: 48)
!8878 = distinct !DILexicalBlock(scope: !8870, file: !533, line: 894, column: 2)
!8879 = !DILocation(line: 895, column: 41, scope: !8878)
!8880 = !DILocation(line: 895, column: 11, scope: !8878)
!8881 = distinct !{!8881, !8873, !8882}
!8882 = !DILocation(line: 902, column: 2, scope: !8870)
!8883 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8884, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{null, !8337}
!8886 = !{!8887, !8888, !8889, !8890}
!8887 = !DILocalVariable(name: "suite", arg: 1, scope: !8883, file: !533, line: 852, type: !8337)
!8888 = !DILocalVariable(name: "test", scope: !8883, file: !533, line: 854, type: !8289)
!8889 = !DILocalVariable(name: "tc_result", scope: !8883, file: !533, line: 855, type: !107)
!8890 = !DILocalVariable(name: "flush_frequency", scope: !8883, file: !533, line: 856, type: !107)
!8891 = !DILocation(line: 0, scope: !8883)
!8892 = !DILocation(line: 858, column: 2, scope: !8883)
!8893 = !DILocation(line: 860, column: 47, scope: !8883)
!8894 = !DILocation(line: 860, column: 18, scope: !8883)
!8895 = !DILocation(line: 860, column: 60, scope: !8883)
!8896 = !DILocation(line: 860, column: 2, scope: !8883)
!8897 = !DILocation(line: 861, column: 13, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !533, line: 861, column: 7)
!8899 = distinct !DILexicalBlock(scope: !8883, file: !533, line: 860, column: 70)
!8900 = !DILocation(line: 861, column: 20, scope: !8898)
!8901 = !DILocation(line: 861, column: 47, scope: !8898)
!8902 = !DILocation(line: 861, column: 31, scope: !8898)
!8903 = !DILocation(line: 861, column: 7, scope: !8899)
!8904 = !DILocation(line: 863, column: 27, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8898, file: !533, line: 863, column: 14)
!8906 = !DILocation(line: 863, column: 38, scope: !8905)
!8907 = !DILocation(line: 0, scope: !8898)
!8908 = !DILocation(line: 869, column: 3, scope: !8899)
!8909 = distinct !{!8909, !8896, !8910}
!8910 = !DILocation(line: 880, column: 2, scope: !8883)
!8911 = !DILocation(line: 881, column: 2, scope: !8883)
!8912 = !DILocation(line: 883, column: 1, scope: !8883)
!8913 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8884, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8914)
!8914 = !{!8915, !8916, !8917, !8918, !8919, !8920, !8921, !8922, !8923, !8924, !8925, !8926, !8927, !8928}
!8915 = !DILocalVariable(name: "suite", arg: 1, scope: !8913, file: !533, line: 801, type: !8337)
!8916 = !DILocalVariable(name: "distinct_pass", scope: !8913, file: !533, line: 803, type: !107)
!8917 = !DILocalVariable(name: "distinct_fail", scope: !8913, file: !533, line: 803, type: !107)
!8918 = !DILocalVariable(name: "distinct_skip", scope: !8913, file: !533, line: 803, type: !107)
!8919 = !DILocalVariable(name: "distinct_total", scope: !8913, file: !533, line: 803, type: !107)
!8920 = !DILocalVariable(name: "effective_total", scope: !8913, file: !533, line: 804, type: !107)
!8921 = !DILocalVariable(name: "expanded_pass", scope: !8913, file: !533, line: 805, type: !107)
!8922 = !DILocalVariable(name: "expanded_passrate", scope: !8913, file: !533, line: 805, type: !107)
!8923 = !DILocalVariable(name: "passrate_major", scope: !8913, file: !533, line: 806, type: !107)
!8924 = !DILocalVariable(name: "passrate_minor", scope: !8913, file: !533, line: 806, type: !107)
!8925 = !DILocalVariable(name: "passrate_tail", scope: !8913, file: !533, line: 806, type: !107)
!8926 = !DILocalVariable(name: "suite_result", scope: !8913, file: !533, line: 807, type: !107)
!8927 = !DILocalVariable(name: "test", scope: !8913, file: !533, line: 809, type: !8289)
!8928 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8913, file: !533, line: 810, type: !32)
!8929 = !DILocation(line: 0, scope: !8913)
!8930 = !DILocation(line: 813, column: 47, scope: !8913)
!8931 = !DILocation(line: 813, column: 18, scope: !8913)
!8932 = !DILocation(line: 813, column: 60, scope: !8913)
!8933 = !DILocation(line: 813, column: 2, scope: !8913)
!8934 = !DILocation(line: 814, column: 17, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8913, file: !533, line: 813, column: 70)
!8936 = !DILocation(line: 815, column: 36, scope: !8935)
!8937 = !DILocation(line: 815, column: 43, scope: !8935)
!8938 = !DILocation(line: 815, column: 27, scope: !8935)
!8939 = !DILocation(line: 816, column: 20, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8935, file: !533, line: 816, column: 7)
!8941 = !DILocation(line: 816, column: 47, scope: !8940)
!8942 = !DILocation(line: 816, column: 31, scope: !8940)
!8943 = !DILocation(line: 816, column: 7, scope: !8935)
!8944 = !DILocation(line: 817, column: 17, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8940, file: !533, line: 816, column: 58)
!8946 = !DILocation(line: 818, column: 3, scope: !8945)
!8947 = !DILocation(line: 818, column: 27, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8940, file: !533, line: 818, column: 14)
!8949 = !DILocation(line: 818, column: 38, scope: !8948)
!8950 = !DILocation(line: 818, column: 14, scope: !8940)
!8951 = !DILocation(line: 819, column: 17, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !533, line: 818, column: 65)
!8953 = !DILocation(line: 820, column: 3, scope: !8952)
!8954 = !DILocation(line: 821, column: 17, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8948, file: !533, line: 820, column: 10)
!8956 = distinct !{!8956, !8933, !8957}
!8957 = !DILocation(line: 823, column: 2, scope: !8913)
!8958 = !DILocation(line: 825, column: 20, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8913, file: !533, line: 825, column: 6)
!8960 = !DILocation(line: 825, column: 6, scope: !8913)
!8961 = !DILocation(line: 829, column: 33, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8959, file: !533, line: 828, column: 9)
!8963 = !DILocation(line: 829, column: 18, scope: !8962)
!8964 = !DILocation(line: 830, column: 36, scope: !8962)
!8965 = !DILocation(line: 831, column: 33, scope: !8962)
!8966 = !DILocation(line: 832, column: 37, scope: !8962)
!8967 = !DILocation(line: 833, column: 38, scope: !8962)
!8968 = !DILocation(line: 834, column: 56, scope: !8962)
!8969 = !DILocation(line: 834, column: 39, scope: !8962)
!8970 = !DILocation(line: 834, column: 64, scope: !8962)
!8971 = !DILocation(line: 835, column: 78, scope: !8962)
!8972 = !DILocation(line: 835, column: 61, scope: !8962)
!8973 = !DILocation(line: 836, column: 21, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8962, file: !533, line: 836, column: 7)
!8975 = !DILocation(line: 836, column: 7, scope: !8962)
!8976 = !DILocation(line: 0, scope: !8959)
!8977 = !DILocation(line: 841, column: 2, scope: !8913)
!8978 = !DILocation(line: 849, column: 1, scope: !8913)
!8979 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8884, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8980)
!8980 = !{!8981, !8982}
!8981 = !DILocalVariable(name: "suite", arg: 1, scope: !8979, file: !533, line: 773, type: !8337)
!8982 = !DILocalVariable(name: "test", scope: !8979, file: !533, line: 775, type: !8289)
!8983 = !DILocation(line: 0, scope: !8979)
!8984 = !DILocation(line: 777, column: 47, scope: !8979)
!8985 = !DILocation(line: 777, column: 18, scope: !8979)
!8986 = !DILocation(line: 777, column: 60, scope: !8979)
!8987 = !DILocation(line: 777, column: 2, scope: !8979)
!8988 = !DILocation(line: 778, column: 9, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8979, file: !533, line: 777, column: 70)
!8990 = !DILocation(line: 778, column: 16, scope: !8989)
!8991 = !DILocation(line: 778, column: 26, scope: !8989)
!8992 = !DILocation(line: 779, column: 9, scope: !8989)
!8993 = !DILocation(line: 779, column: 16, scope: !8989)
!8994 = !DILocation(line: 779, column: 27, scope: !8989)
!8995 = !DILocation(line: 780, column: 9, scope: !8989)
!8996 = !DILocation(line: 780, column: 16, scope: !8989)
!8997 = !DILocation(line: 780, column: 27, scope: !8989)
!8998 = !DILocation(line: 781, column: 9, scope: !8989)
!8999 = !DILocation(line: 781, column: 16, scope: !8989)
!9000 = !DILocation(line: 781, column: 27, scope: !8989)
!9001 = !DILocation(line: 782, column: 9, scope: !8989)
!9002 = !DILocation(line: 782, column: 16, scope: !8989)
!9003 = !DILocation(line: 782, column: 34, scope: !8989)
!9004 = distinct !{!9004, !8987, !9005}
!9005 = !DILocation(line: 783, column: 2, scope: !8979)
!9006 = !DILocation(line: 784, column: 1, scope: !8979)
!9007 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3111, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9008)
!9008 = !{!9009, !9010, !9011}
!9009 = !DILocalVariable(name: "all_tests_run", scope: !9007, file: !533, line: 974, type: !145)
!9010 = !DILocalVariable(name: "suite", scope: !9007, file: !533, line: 975, type: !8337)
!9011 = !DILocalVariable(name: "test", scope: !9007, file: !533, line: 976, type: !8289)
!9012 = !DILocation(line: 0, scope: !9007)
!9013 = !DILocation(line: 979, column: 3, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !533, line: 979, column: 3)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !533, line: 978, column: 47)
!9016 = distinct !DILexicalBlock(scope: !9007, file: !533, line: 978, column: 6)
!9017 = !DILocation(line: 987, column: 3, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9015, file: !533, line: 987, column: 3)
!9019 = !DILocation(line: 981, column: 15, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !533, line: 981, column: 8)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !533, line: 980, column: 17)
!9022 = distinct !DILexicalBlock(scope: !9014, file: !533, line: 979, column: 3)
!9023 = !DILocation(line: 981, column: 22, scope: !9020)
!9024 = !DILocation(line: 981, column: 32, scope: !9020)
!9025 = !DILocation(line: 981, column: 8, scope: !9021)
!9026 = !DILocation(line: 982, column: 59, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9020, file: !533, line: 981, column: 37)
!9028 = !DILocation(line: 982, column: 5, scope: !9027)
!9029 = !DILocation(line: 984, column: 4, scope: !9027)
!9030 = !DILocation(line: 980, column: 8, scope: !9022)
!9031 = !DILocation(line: 979, column: 52, scope: !9022)
!9032 = distinct !{!9032, !9013, !9033}
!9033 = !DILocation(line: 985, column: 3, scope: !9014)
!9034 = !DILocation(line: 988, column: 40, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !533, line: 987, column: 86)
!9036 = distinct !DILexicalBlock(scope: !9018, file: !533, line: 987, column: 3)
!9037 = !DILocation(line: 988, column: 12, scope: !9035)
!9038 = !DILocation(line: 989, column: 14, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !533, line: 989, column: 8)
!9040 = !DILocation(line: 989, column: 8, scope: !9035)
!9041 = !DILocation(line: 992, column: 17, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9039, file: !533, line: 989, column: 23)
!9043 = !DILocation(line: 992, column: 29, scope: !9042)
!9044 = !DILocation(line: 990, column: 5, scope: !9042)
!9045 = !DILocation(line: 994, column: 4, scope: !9042)
!9046 = !DILocation(line: 987, column: 78, scope: !9036)
!9047 = !DILocation(line: 987, column: 49, scope: !9036)
!9048 = distinct !{!9048, !9017, !9049}
!9049 = !DILocation(line: 995, column: 3, scope: !9018)
!9050 = !DILocation(line: 997, column: 7, scope: !9015)
!9051 = !DILocation(line: 998, column: 16, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !533, line: 997, column: 23)
!9053 = distinct !DILexicalBlock(scope: !9015, file: !533, line: 997, column: 7)
!9054 = !DILocation(line: 999, column: 3, scope: !9052)
!9055 = !DILocation(line: 1002, column: 2, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9007, file: !533, line: 1002, column: 2)
!9057 = !DILocation(line: 1003, column: 13, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !533, line: 1003, column: 7)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !533, line: 1002, column: 85)
!9060 = distinct !DILexicalBlock(scope: !9056, file: !533, line: 1002, column: 2)
!9061 = !DILocation(line: 1003, column: 20, scope: !9058)
!9062 = !DILocation(line: 1003, column: 46, scope: !9058)
!9063 = !DILocation(line: 1003, column: 31, scope: !9058)
!9064 = !DILocation(line: 1003, column: 72, scope: !9058)
!9065 = !DILocation(line: 1003, column: 57, scope: !9058)
!9066 = !DILocation(line: 1004, column: 20, scope: !9058)
!9067 = !DILocation(line: 1003, column: 83, scope: !9058)
!9068 = !DILocation(line: 1003, column: 7, scope: !9059)
!9069 = !DILocation(line: 1005, column: 41, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9058, file: !533, line: 1004, column: 31)
!9071 = !DILocation(line: 1005, column: 64, scope: !9070)
!9072 = !DILocation(line: 1005, column: 4, scope: !9070)
!9073 = !DILocation(line: 1006, column: 16, scope: !9070)
!9074 = !DILocation(line: 1007, column: 3, scope: !9070)
!9075 = !DILocation(line: 1002, column: 77, scope: !9060)
!9076 = !DILocation(line: 1002, column: 48, scope: !9060)
!9077 = distinct !{!9077, !9055, !9078}
!9078 = !DILocation(line: 1008, column: 2, scope: !9056)
!9079 = !DILocation(line: 1009, column: 1, scope: !9007)
!9080 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9081)
!9081 = !{!9082}
!9082 = !DILocalVariable(name: "state", arg: 1, scope: !9080, file: !533, line: 1011, type: !13)
!9083 = !DILocation(line: 0, scope: !9080)
!9084 = !DILocation(line: 1011, column: 51, scope: !9080)
!9085 = !DILocation(line: 1011, column: 41, scope: !9080)
!9086 = !DILocation(line: 1011, column: 67, scope: !9080)
!9087 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3111, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!9088 = !DILocation(line: 1015, column: 2, scope: !9087)
!9089 = !DILocation(line: 1017, column: 2, scope: !9087)
!9090 = !DILocation(line: 1018, column: 1, scope: !9087)
!9091 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3111, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2182)
!9092 = !DILocation(line: 1046, column: 2, scope: !9091)
!9093 = !DILocation(line: 1047, column: 2, scope: !9091)
!9094 = !DILocation(line: 1071, column: 1, scope: !9091)
!9095 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9096)
!9096 = !{!9097}
!9097 = !DILocalVariable(name: "state", arg: 1, scope: !9095, file: !699, line: 30, type: !13)
!9098 = !DILocation(line: 0, scope: !9095)
!9099 = !DILocation(line: 32, column: 2, scope: !9095)
!9100 = !DILocation(line: 33, column: 1, scope: !9095)
!9101 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9102)
!9102 = !{!9103, !9104, !9105}
!9103 = !DILocalVariable(name: "state", arg: 1, scope: !9101, file: !699, line: 45, type: !13)
!9104 = !DILocalVariable(name: "suite", arg: 2, scope: !9101, file: !699, line: 45, type: !708)
!9105 = !DILocalVariable(name: "run_suite", scope: !9101, file: !699, line: 47, type: !145)
!9106 = !DILocation(line: 0, scope: !9101)
!9107 = !DILocation(line: 49, column: 13, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9101, file: !699, line: 49, column: 6)
!9109 = !DILocation(line: 49, column: 23, scope: !9108)
!9110 = !DILocation(line: 49, column: 6, scope: !9101)
!9111 = !DILocation(line: 50, column: 15, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9108, file: !699, line: 49, column: 32)
!9113 = !DILocation(line: 51, column: 2, scope: !9112)
!9114 = !DILocation(line: 53, column: 2, scope: !9101)
!9115 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9116)
!9116 = !{!9117, !9118}
!9117 = !DILocalVariable(name: "suite", arg: 1, scope: !9115, file: !699, line: 65, type: !118)
!9118 = !DILocalVariable(name: "test", arg: 2, scope: !9115, file: !699, line: 65, type: !118)
!9119 = !DILocation(line: 0, scope: !9115)
!9120 = !DILocation(line: 67, column: 2, scope: !9115)
!9121 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9122, file: !9122, line: 24, type: !8810, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9123)
!9122 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!9123 = !{!9124}
!9124 = !DILocalVariable(name: "state", arg: 1, scope: !9121, file: !9122, line: 24, type: !13)
!9125 = !DILocation(line: 0, scope: !9121)
!9126 = !DILocation(line: 32, column: 2, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9121, file: !9122, line: 32, column: 2)
!9128 = !{i64 2154278503}
!9129 = !DILocation(line: 33, column: 9, scope: !9121)
!9130 = !DILocation(line: 33, column: 2, scope: !9121)
!9131 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9132, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9134)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!118, !118}
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "file", arg: 1, scope: !9131, file: !699, line: 20, type: !118)
!9136 = !DILocation(line: 0, scope: !9131)
!9137 = !DILocation(line: 22, column: 2, scope: !9131)
!9138 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !814, file: !814, line: 368, type: !867, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9139)
!9139 = !{!9140}
!9140 = !DILocalVariable(name: "dev", arg: 1, scope: !9138, file: !814, line: 368, type: !843)
!9141 = !DILocation(line: 0, scope: !9138)
!9142 = !DILocation(line: 370, column: 2, scope: !9138)
!9143 = !DILocation(line: 371, column: 1, scope: !9138)
!9144 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !814, file: !814, line: 243, type: !9145, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9147)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{null, !107, !107, !843}
!9147 = !{!9148, !9149, !9150, !9151, !9153}
!9148 = !DILocalVariable(name: "min", arg: 1, scope: !9144, file: !814, line: 243, type: !107)
!9149 = !DILocalVariable(name: "max", arg: 2, scope: !9144, file: !814, line: 243, type: !107)
!9150 = !DILocalVariable(name: "dev", arg: 3, scope: !9144, file: !814, line: 243, type: !843)
!9151 = !DILocalVariable(name: "data", scope: !9144, file: !814, line: 245, type: !9152)
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!9153 = !DILocalVariable(name: "line", scope: !9144, file: !814, line: 246, type: !107)
!9154 = !DILocation(line: 0, scope: !9144)
!9155 = !DILocation(line: 245, column: 38, scope: !9144)
!9156 = !DILocation(line: 249, column: 24, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !814, line: 249, column: 2)
!9158 = distinct !DILexicalBlock(scope: !9144, file: !814, line: 249, column: 2)
!9159 = !DILocation(line: 249, column: 2, scope: !9158)
!9160 = !DILocation(line: 251, column: 7, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !814, line: 251, column: 7)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !814, line: 249, column: 39)
!9163 = !DILocation(line: 251, column: 7, scope: !9162)
!9164 = !DILocation(line: 253, column: 4, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !814, line: 251, column: 36)
!9166 = !DILocation(line: 256, column: 24, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9165, file: !814, line: 256, column: 8)
!9168 = !DILocation(line: 256, column: 9, scope: !9167)
!9169 = !DILocation(line: 256, column: 8, scope: !9165)
!9170 = !DILocation(line: 260, column: 43, scope: !9165)
!9171 = !DILocation(line: 260, column: 4, scope: !9165)
!9172 = !DILocation(line: 261, column: 3, scope: !9165)
!9173 = !DILocation(line: 249, column: 35, scope: !9157)
!9174 = distinct !{!9174, !9159, !9175}
!9175 = !DILocation(line: 262, column: 2, scope: !9158)
!9176 = !DILocation(line: 263, column: 1, scope: !9144)
!9177 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !814, file: !814, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9178)
!9178 = !{!9179}
!9179 = !DILocalVariable(name: "line", arg: 1, scope: !9177, file: !814, line: 158, type: !107)
!9180 = !DILocation(line: 0, scope: !9177)
!9181 = !DILocation(line: 170, column: 38, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !814, line: 160, column: 17)
!9183 = distinct !DILexicalBlock(scope: !9177, file: !814, line: 160, column: 6)
!9184 = !DILocation(line: 170, column: 10, scope: !9182)
!9185 = !DILocation(line: 176, column: 1, scope: !9177)
!9186 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !814, file: !814, line: 183, type: !9187, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9189)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{null, !107}
!9189 = !{!9190}
!9190 = !DILocalVariable(name: "line", arg: 1, scope: !9186, file: !814, line: 183, type: !107)
!9191 = !DILocation(line: 0, scope: !9186)
!9192 = !DILocation(line: 195, column: 28, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9194, file: !814, line: 185, column: 17)
!9194 = distinct !DILexicalBlock(scope: !9186, file: !814, line: 185, column: 6)
!9195 = !DILocation(line: 195, column: 3, scope: !9193)
!9196 = !DILocation(line: 200, column: 1, scope: !9186)
!9197 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9198, file: !9198, line: 910, type: !6370, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9199)
!9198 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9199 = !{!9200}
!9200 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9197, file: !9198, line: 910, type: !152)
!9201 = !DILocation(line: 0, scope: !9197)
!9202 = !DILocation(line: 912, column: 3, scope: !9197)
!9203 = !DILocation(line: 913, column: 1, scope: !9197)
!9204 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9198, file: !9198, line: 834, type: !7560, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9205)
!9205 = !{!9206}
!9206 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9204, file: !9198, line: 834, type: !152)
!9207 = !DILocation(line: 0, scope: !9204)
!9208 = !DILocation(line: 836, column: 11, scope: !9204)
!9209 = !DILocation(line: 836, column: 40, scope: !9204)
!9210 = !DILocation(line: 836, column: 3, scope: !9204)
!9211 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !814, file: !814, line: 304, type: !867, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9212)
!9212 = !{!9213}
!9213 = !DILocalVariable(name: "dev", arg: 1, scope: !9211, file: !814, line: 304, type: !843)
!9214 = !DILocation(line: 0, scope: !9211)
!9215 = !DILocation(line: 306, column: 2, scope: !9211)
!9216 = !DILocation(line: 307, column: 1, scope: !9211)
!9217 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !814, file: !814, line: 299, type: !867, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9218)
!9218 = !{!9219}
!9219 = !DILocalVariable(name: "dev", arg: 1, scope: !9217, file: !814, line: 299, type: !843)
!9220 = !DILocation(line: 0, scope: !9217)
!9221 = !DILocation(line: 301, column: 2, scope: !9217)
!9222 = !DILocation(line: 302, column: 1, scope: !9217)
!9223 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !814, file: !814, line: 294, type: !867, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9224)
!9224 = !{!9225}
!9225 = !DILocalVariable(name: "dev", arg: 1, scope: !9223, file: !814, line: 294, type: !843)
!9226 = !DILocation(line: 0, scope: !9223)
!9227 = !DILocation(line: 296, column: 2, scope: !9223)
!9228 = !DILocation(line: 297, column: 1, scope: !9223)
!9229 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !814, file: !814, line: 397, type: !867, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9230)
!9230 = !{!9231}
!9231 = !DILocalVariable(name: "dev", arg: 1, scope: !9229, file: !814, line: 397, type: !843)
!9232 = !DILocation(line: 0, scope: !9229)
!9233 = !DILocation(line: 399, column: 2, scope: !9229)
!9234 = !DILocation(line: 400, column: 1, scope: !9229)
!9235 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !814, file: !814, line: 392, type: !867, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9236)
!9236 = !{!9237}
!9237 = !DILocalVariable(name: "dev", arg: 1, scope: !9235, file: !814, line: 392, type: !843)
!9238 = !DILocation(line: 0, scope: !9235)
!9239 = !DILocation(line: 394, column: 2, scope: !9235)
!9240 = !DILocation(line: 395, column: 1, scope: !9235)
!9241 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !814, file: !814, line: 289, type: !867, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9242)
!9242 = !{!9243}
!9243 = !DILocalVariable(name: "dev", arg: 1, scope: !9241, file: !814, line: 289, type: !843)
!9244 = !DILocation(line: 0, scope: !9241)
!9245 = !DILocation(line: 291, column: 2, scope: !9241)
!9246 = !DILocation(line: 292, column: 1, scope: !9241)
!9247 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !814, file: !814, line: 387, type: !867, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9248)
!9248 = !{!9249}
!9249 = !DILocalVariable(name: "dev", arg: 1, scope: !9247, file: !814, line: 387, type: !843)
!9250 = !DILocation(line: 0, scope: !9247)
!9251 = !DILocation(line: 389, column: 2, scope: !9247)
!9252 = !DILocation(line: 390, column: 1, scope: !9247)
!9253 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !814, file: !814, line: 382, type: !867, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9254)
!9254 = !{!9255}
!9255 = !DILocalVariable(name: "dev", arg: 1, scope: !9253, file: !814, line: 382, type: !843)
!9256 = !DILocation(line: 0, scope: !9253)
!9257 = !DILocation(line: 384, column: 2, scope: !9253)
!9258 = !DILocation(line: 385, column: 1, scope: !9253)
!9259 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !814, file: !814, line: 373, type: !867, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9260)
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "dev", arg: 1, scope: !9259, file: !814, line: 373, type: !843)
!9262 = !DILocation(line: 0, scope: !9259)
!9263 = !DILocation(line: 375, column: 2, scope: !9259)
!9264 = !DILocation(line: 376, column: 1, scope: !9259)
!9265 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !814, file: !814, line: 284, type: !867, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9266)
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "dev", arg: 1, scope: !9265, file: !814, line: 284, type: !843)
!9268 = !DILocation(line: 0, scope: !9265)
!9269 = !DILocation(line: 286, column: 2, scope: !9265)
!9270 = !DILocation(line: 287, column: 1, scope: !9265)
!9271 = distinct !DISubprogram(name: "stm32_exti_init", scope: !814, file: !814, line: 416, type: !841, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9272)
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "dev", arg: 1, scope: !9271, file: !814, line: 416, type: !843)
!9274 = !DILocation(line: 0, scope: !9271)
!9275 = !DILocation(line: 418, column: 2, scope: !9271)
!9276 = !DILocation(line: 420, column: 2, scope: !9271)
!9277 = !DILocation(line: 0, scope: !866)
!9278 = !DILocation(line: 493, column: 2, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !866, file: !814, line: 493, column: 2)
!9280 = !DILocation(line: 497, column: 2, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !866, file: !814, line: 497, column: 2)
!9282 = !DILocation(line: 507, column: 2, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !866, file: !814, line: 507, column: 2)
!9284 = !DILocation(line: 512, column: 2, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !866, file: !814, line: 512, column: 2)
!9286 = !DILocation(line: 516, column: 2, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !866, file: !814, line: 516, column: 2)
!9288 = !DILocation(line: 523, column: 2, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !866, file: !814, line: 523, column: 2)
!9290 = !DILocation(line: 527, column: 2, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !866, file: !814, line: 527, column: 2)
!9292 = !DILocation(line: 581, column: 2, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !866, file: !814, line: 581, column: 2)
!9294 = !DILocation(line: 586, column: 2, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !866, file: !814, line: 586, column: 2)
!9296 = !DILocation(line: 591, column: 2, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !866, file: !814, line: 591, column: 2)
!9298 = !DILocation(line: 595, column: 2, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !866, file: !814, line: 595, column: 2)
!9300 = !DILocation(line: 607, column: 1, scope: !866)
!9301 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !814, file: !814, line: 112, type: !9187, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9302)
!9302 = !{!9303, !9304}
!9303 = !DILocalVariable(name: "line", arg: 1, scope: !9301, file: !814, line: 112, type: !107)
!9304 = !DILocalVariable(name: "irqnum", scope: !9301, file: !814, line: 114, type: !107)
!9305 = !DILocation(line: 0, scope: !9301)
!9306 = !DILocation(line: 122, column: 13, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !814, line: 122, column: 6)
!9308 = !DILocation(line: 122, column: 6, scope: !9301)
!9309 = !DILocation(line: 123, column: 3, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !814, line: 123, column: 3)
!9311 = distinct !DILexicalBlock(scope: !9312, file: !814, line: 123, column: 3)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !814, line: 123, column: 3)
!9313 = distinct !DILexicalBlock(scope: !9307, file: !814, line: 122, column: 22)
!9314 = !DILocation(line: 121, column: 11, scope: !9301)
!9315 = !DILocation(line: 130, column: 26, scope: !9301)
!9316 = !DILocation(line: 130, column: 2, scope: !9301)
!9317 = !DILocation(line: 134, column: 2, scope: !9301)
!9318 = !DILocation(line: 135, column: 1, scope: !9301)
!9319 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9198, file: !9198, line: 268, type: !6370, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9320)
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9319, file: !9198, line: 268, type: !152)
!9322 = !DILocation(line: 0, scope: !9319)
!9323 = !DILocation(line: 270, column: 3, scope: !9319)
!9324 = !DILocation(line: 271, column: 1, scope: !9319)
!9325 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !814, file: !814, line: 137, type: !9187, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9326)
!9326 = !{!9327}
!9327 = !DILocalVariable(name: "line", arg: 1, scope: !9325, file: !814, line: 137, type: !107)
!9328 = !DILocation(line: 0, scope: !9325)
!9329 = !DILocation(line: 141, column: 11, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9325, file: !814, line: 141, column: 6)
!9331 = !DILocation(line: 141, column: 6, scope: !9325)
!9332 = !DILocation(line: 145, column: 28, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9330, file: !814, line: 141, column: 17)
!9334 = !DILocation(line: 145, column: 3, scope: !9333)
!9335 = !DILocation(line: 147, column: 2, scope: !9333)
!9336 = !DILocation(line: 151, column: 1, scope: !9325)
!9337 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9198, file: !9198, line: 309, type: !6370, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9338)
!9338 = !{!9339}
!9339 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9337, file: !9198, line: 309, type: !152)
!9340 = !DILocation(line: 0, scope: !9337)
!9341 = !DILocation(line: 311, column: 3, scope: !9337)
!9342 = !DILocation(line: 312, column: 1, scope: !9337)
!9343 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !814, file: !814, line: 202, type: !9344, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9346)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{null, !107, !107}
!9346 = !{!9347, !9348}
!9347 = !DILocalVariable(name: "line", arg: 1, scope: !9343, file: !814, line: 202, type: !107)
!9348 = !DILocalVariable(name: "trigger", arg: 2, scope: !9343, file: !814, line: 202, type: !107)
!9349 = !DILocation(line: 0, scope: !9343)
!9350 = !DILocation(line: 211, column: 2, scope: !9343)
!9351 = !DILocation(line: 213, column: 36, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9343, file: !814, line: 211, column: 19)
!9353 = !DILocation(line: 213, column: 3, scope: !9352)
!9354 = !DILocation(line: 214, column: 3, scope: !9352)
!9355 = !DILocation(line: 215, column: 3, scope: !9352)
!9356 = !DILocation(line: 217, column: 35, scope: !9352)
!9357 = !DILocation(line: 217, column: 3, scope: !9352)
!9358 = !DILocation(line: 218, column: 3, scope: !9352)
!9359 = !DILocation(line: 219, column: 3, scope: !9352)
!9360 = !DILocation(line: 221, column: 36, scope: !9352)
!9361 = !DILocation(line: 221, column: 3, scope: !9352)
!9362 = !DILocation(line: 222, column: 3, scope: !9352)
!9363 = !DILocation(line: 223, column: 3, scope: !9352)
!9364 = !DILocation(line: 225, column: 35, scope: !9352)
!9365 = !DILocation(line: 225, column: 3, scope: !9352)
!9366 = !DILocation(line: 226, column: 3, scope: !9352)
!9367 = !DILocation(line: 227, column: 3, scope: !9352)
!9368 = !DILocation(line: 232, column: 1, scope: !9343)
!9369 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9198, file: !9198, line: 573, type: !6370, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9370)
!9370 = !{!9371}
!9371 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9369, file: !9198, line: 573, type: !152)
!9372 = !DILocation(line: 0, scope: !9369)
!9373 = !DILocation(line: 575, column: 3, scope: !9369)
!9374 = !DILocation(line: 577, column: 1, scope: !9369)
!9375 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9198, file: !9198, line: 703, type: !6370, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9376)
!9376 = !{!9377}
!9377 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9375, file: !9198, line: 703, type: !152)
!9378 = !DILocation(line: 0, scope: !9375)
!9379 = !DILocation(line: 705, column: 3, scope: !9375)
!9380 = !DILocation(line: 706, column: 1, scope: !9375)
!9381 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9198, file: !9198, line: 529, type: !6370, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9382)
!9382 = !{!9383}
!9383 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9381, file: !9198, line: 529, type: !152)
!9384 = !DILocation(line: 0, scope: !9381)
!9385 = !DILocation(line: 531, column: 3, scope: !9381)
!9386 = !DILocation(line: 533, column: 1, scope: !9381)
!9387 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9198, file: !9198, line: 661, type: !6370, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9388)
!9388 = !{!9389}
!9389 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9387, file: !9198, line: 661, type: !152)
!9390 = !DILocation(line: 0, scope: !9387)
!9391 = !DILocation(line: 663, column: 3, scope: !9387)
!9392 = !DILocation(line: 664, column: 1, scope: !9387)
!9393 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !814, file: !814, line: 433, type: !9394, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9396)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{!107, !107, !854, !106}
!9396 = !{!9397, !9398, !9399, !9400, !9402}
!9397 = !DILocalVariable(name: "line", arg: 1, scope: !9393, file: !814, line: 433, type: !107)
!9398 = !DILocalVariable(name: "cb", arg: 2, scope: !9393, file: !814, line: 433, type: !854)
!9399 = !DILocalVariable(name: "arg", arg: 3, scope: !9393, file: !814, line: 433, type: !106)
!9400 = !DILocalVariable(name: "dev", scope: !9393, file: !814, line: 435, type: !9401)
!9401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!9402 = !DILocalVariable(name: "data", scope: !9393, file: !814, line: 436, type: !9152)
!9403 = !DILocation(line: 0, scope: !9393)
!9404 = !DILocation(line: 438, column: 21, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9393, file: !814, line: 438, column: 6)
!9406 = !DILocation(line: 438, column: 6, scope: !9405)
!9407 = !DILocation(line: 438, column: 6, scope: !9393)
!9408 = !DILocation(line: 442, column: 20, scope: !9393)
!9409 = !DILocation(line: 443, column: 17, scope: !9393)
!9410 = !DILocation(line: 443, column: 22, scope: !9393)
!9411 = !DILocation(line: 445, column: 2, scope: !9393)
!9412 = !DILocation(line: 446, column: 1, scope: !9393)
!9413 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !814, file: !814, line: 448, type: !9187, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9414)
!9414 = !{!9415, !9416, !9417}
!9415 = !DILocalVariable(name: "line", arg: 1, scope: !9413, file: !814, line: 448, type: !107)
!9416 = !DILocalVariable(name: "dev", scope: !9413, file: !814, line: 450, type: !9401)
!9417 = !DILocalVariable(name: "data", scope: !9413, file: !814, line: 451, type: !9152)
!9418 = !DILocation(line: 0, scope: !9413)
!9419 = !DILocation(line: 453, column: 17, scope: !9413)
!9420 = !DILocation(line: 453, column: 20, scope: !9413)
!9421 = !DILocation(line: 454, column: 17, scope: !9413)
!9422 = !DILocation(line: 454, column: 22, scope: !9413)
!9423 = !DILocation(line: 455, column: 1, scope: !9413)
!9424 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1003, file: !1003, line: 183, type: !1041, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9425)
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !1003, line: 183, type: !1032)
!9427 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9424, file: !1003, line: 184, type: !1043)
!9428 = !DILocalVariable(name: "pclken", scope: !9424, file: !1003, line: 186, type: !993)
!9429 = !DILocalVariable(name: "reg", scope: !9424, file: !1003, line: 187, type: !1584)
!9430 = !DILocalVariable(name: "reg_val", scope: !9424, file: !1003, line: 188, type: !152)
!9431 = !DILocation(line: 0, scope: !9424)
!9432 = !DILocation(line: 192, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9424, file: !1003, line: 192, column: 6)
!9434 = !DILocation(line: 192, column: 6, scope: !9424)
!9435 = !DILocation(line: 197, column: 52, scope: !9424)
!9436 = !DILocation(line: 197, column: 8, scope: !9424)
!9437 = !DILocation(line: 198, column: 12, scope: !9424)
!9438 = !DILocation(line: 199, column: 21, scope: !9424)
!9439 = !DILocation(line: 199, column: 10, scope: !9424)
!9440 = !DILocation(line: 200, column: 7, scope: !9424)
!9441 = !DILocation(line: 202, column: 2, scope: !9424)
!9442 = !DILocation(line: 203, column: 1, scope: !9424)
!9443 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1003, file: !1003, line: 205, type: !1041, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9444)
!9444 = !{!9445, !9446, !9447, !9448, !9449}
!9445 = !DILocalVariable(name: "dev", arg: 1, scope: !9443, file: !1003, line: 205, type: !1032)
!9446 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9443, file: !1003, line: 206, type: !1043)
!9447 = !DILocalVariable(name: "pclken", scope: !9443, file: !1003, line: 208, type: !993)
!9448 = !DILocalVariable(name: "reg", scope: !9443, file: !1003, line: 209, type: !1584)
!9449 = !DILocalVariable(name: "reg_val", scope: !9443, file: !1003, line: 210, type: !152)
!9450 = !DILocation(line: 0, scope: !9443)
!9451 = !DILocation(line: 214, column: 6, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9443, file: !1003, line: 214, column: 6)
!9453 = !DILocation(line: 214, column: 6, scope: !9443)
!9454 = !DILocation(line: 219, column: 52, scope: !9443)
!9455 = !DILocation(line: 219, column: 8, scope: !9443)
!9456 = !DILocation(line: 220, column: 12, scope: !9443)
!9457 = !DILocation(line: 221, column: 22, scope: !9443)
!9458 = !DILocation(line: 221, column: 13, scope: !9443)
!9459 = !DILocation(line: 221, column: 10, scope: !9443)
!9460 = !DILocation(line: 222, column: 7, scope: !9443)
!9461 = !DILocation(line: 224, column: 2, scope: !9443)
!9462 = !DILocation(line: 225, column: 1, scope: !9443)
!9463 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1003, file: !1003, line: 262, type: !1057, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9464)
!9464 = !{!9465, !9466, !9467, !9468, !9469, !9470, !9471, !9472}
!9465 = !DILocalVariable(name: "clock", arg: 1, scope: !9463, file: !1003, line: 262, type: !1032)
!9466 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9463, file: !1003, line: 263, type: !1043)
!9467 = !DILocalVariable(name: "rate", arg: 3, scope: !9463, file: !1003, line: 264, type: !999)
!9468 = !DILocalVariable(name: "pclken", scope: !9463, file: !1003, line: 266, type: !993)
!9469 = !DILocalVariable(name: "ahb_clock", scope: !9463, file: !1003, line: 273, type: !152)
!9470 = !DILocalVariable(name: "apb1_clock", scope: !9463, file: !1003, line: 274, type: !152)
!9471 = !DILocalVariable(name: "apb2_clock", scope: !9463, file: !1003, line: 276, type: !152)
!9472 = !DILocalVariable(name: "ahb3_clock", scope: !9463, file: !1003, line: 286, type: !152)
!9473 = !DILocation(line: 0, scope: !9463)
!9474 = !DILocation(line: 273, column: 23, scope: !9463)
!9475 = !DILocation(line: 299, column: 18, scope: !9463)
!9476 = !DILocation(line: 299, column: 2, scope: !9463)
!9477 = !DILocation(line: 274, column: 24, scope: !9463)
!9478 = !DILocation(line: 319, column: 3, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9463, file: !1003, line: 299, column: 23)
!9480 = !DILocation(line: 276, column: 24, scope: !9463)
!9481 = !DILocation(line: 323, column: 3, scope: !9479)
!9482 = !DILocation(line: 346, column: 33, scope: !9479)
!9483 = !DILocation(line: 346, column: 11, scope: !9479)
!9484 = !DILocation(line: 350, column: 3, scope: !9479)
!9485 = !DILocation(line: 354, column: 33, scope: !9479)
!9486 = !DILocation(line: 354, column: 11, scope: !9479)
!9487 = !DILocation(line: 358, column: 3, scope: !9479)
!9488 = !DILocation(line: 374, column: 3, scope: !9479)
!9489 = !DILocation(line: 379, column: 3, scope: !9479)
!9490 = !DILocation(line: 0, scope: !9479)
!9491 = !DILocation(line: 396, column: 1, scope: !9463)
!9492 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1003, file: !1003, line: 227, type: !1073, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9493)
!9493 = !{!9494, !9495, !9496, !9497, !9498, !9499, !9500, !9501}
!9494 = !DILocalVariable(name: "dev", arg: 1, scope: !9492, file: !1003, line: 227, type: !1032)
!9495 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9492, file: !1003, line: 228, type: !1043)
!9496 = !DILocalVariable(name: "data", arg: 3, scope: !9492, file: !1003, line: 229, type: !106)
!9497 = !DILocalVariable(name: "pclken", scope: !9492, file: !1003, line: 233, type: !993)
!9498 = !DILocalVariable(name: "reg", scope: !9492, file: !1003, line: 234, type: !1584)
!9499 = !DILocalVariable(name: "reg_val", scope: !9492, file: !1003, line: 235, type: !152)
!9500 = !DILocalVariable(name: "dt_val", scope: !9492, file: !1003, line: 235, type: !152)
!9501 = !DILocalVariable(name: "err", scope: !9492, file: !1003, line: 236, type: !107)
!9502 = !DILocation(line: 0, scope: !9492)
!9503 = !DILocation(line: 241, column: 30, scope: !9492)
!9504 = !DILocation(line: 241, column: 8, scope: !9492)
!9505 = !DILocation(line: 242, column: 10, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9492, file: !1003, line: 242, column: 6)
!9507 = !DILocation(line: 242, column: 6, scope: !9492)
!9508 = !DILocation(line: 247, column: 11, scope: !9492)
!9509 = !DILocation(line: 248, column: 6, scope: !9492)
!9510 = !DILocation(line: 247, column: 44, scope: !9492)
!9511 = !DILocation(line: 250, column: 6, scope: !9492)
!9512 = !DILocation(line: 249, column: 52, scope: !9492)
!9513 = !DILocation(line: 249, column: 8, scope: !9492)
!9514 = !DILocation(line: 251, column: 12, scope: !9492)
!9515 = !DILocation(line: 252, column: 10, scope: !9492)
!9516 = !DILocation(line: 253, column: 7, scope: !9492)
!9517 = !DILocation(line: 255, column: 2, scope: !9492)
!9518 = !DILocation(line: 260, column: 1, scope: !9492)
!9519 = distinct !DISubprogram(name: "enabled_clock", scope: !1003, file: !1003, line: 100, type: !9520, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9522)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!107, !152}
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9519, file: !1003, line: 100, type: !152)
!9524 = !DILocalVariable(name: "r", scope: !9519, file: !1003, line: 102, type: !107)
!9525 = !DILocation(line: 0, scope: !9519)
!9526 = !DILocation(line: 104, column: 2, scope: !9519)
!9527 = !DILocation(line: 180, column: 2, scope: !9519)
!9528 = !DILocation(line: 181, column: 1, scope: !9519)
!9529 = distinct !DISubprogram(name: "get_bus_clock", scope: !1003, file: !1003, line: 79, type: !9530, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9532)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{!152, !152, !152}
!9532 = !{!9533, !9534}
!9533 = !DILocalVariable(name: "clock", arg: 1, scope: !9529, file: !1003, line: 79, type: !152)
!9534 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9529, file: !1003, line: 79, type: !152)
!9535 = !DILocation(line: 0, scope: !9529)
!9536 = !DILocation(line: 81, column: 15, scope: !9529)
!9537 = !DILocation(line: 81, column: 2, scope: !9529)
!9538 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1003, file: !1003, line: 68, type: !9539, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9541)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!152, !152, !107, !107, !107}
!9541 = !{!9542, !9543, !9544, !9545}
!9542 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9538, file: !1003, line: 68, type: !152)
!9543 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9538, file: !1003, line: 69, type: !107)
!9544 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9538, file: !1003, line: 70, type: !107)
!9545 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9538, file: !1003, line: 71, type: !107)
!9546 = !DILocation(line: 0, scope: !9538)
!9547 = !DILocation(line: 75, column: 22, scope: !9538)
!9548 = !DILocation(line: 76, column: 13, scope: !9538)
!9549 = !DILocation(line: 75, column: 34, scope: !9538)
!9550 = !DILocation(line: 75, column: 2, scope: !9538)
!9551 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1003, file: !1003, line: 641, type: !1030, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9552)
!9552 = !{!9553, !9554, !9555}
!9553 = !DILocalVariable(name: "dev", arg: 1, scope: !9551, file: !1003, line: 641, type: !1032)
!9554 = !DILocalVariable(name: "old_flash_freq", scope: !9551, file: !1003, line: 664, type: !152)
!9555 = !DILocalVariable(name: "new_flash_freq", scope: !9551, file: !1003, line: 665, type: !152)
!9556 = !DILocation(line: 0, scope: !9551)
!9557 = !DILocation(line: 646, column: 2, scope: !9551)
!9558 = !DILocation(line: 667, column: 19, scope: !9551)
!9559 = !DILocation(line: 674, column: 21, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9551, file: !1003, line: 674, column: 6)
!9561 = !DILocation(line: 674, column: 6, scope: !9551)
!9562 = !DILocation(line: 675, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9560, file: !1003, line: 674, column: 59)
!9564 = !DILocation(line: 676, column: 2, scope: !9563)
!9565 = !DILocation(line: 680, column: 2, scope: !9551)
!9566 = !DILocation(line: 683, column: 2, scope: !9551)
!9567 = !DILocation(line: 690, column: 3, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9569, file: !1003, line: 689, column: 9)
!9569 = distinct !DILexicalBlock(scope: !9551, file: !1003, line: 685, column: 6)
!9570 = !DILocation(line: 695, column: 2, scope: !9551)
!9571 = !DILocation(line: 696, column: 2, scope: !9551)
!9572 = !DILocation(line: 696, column: 9, scope: !9551)
!9573 = !DILocation(line: 696, column: 34, scope: !9551)
!9574 = distinct !{!9574, !9571, !9575}
!9575 = !DILocation(line: 697, column: 2, scope: !9551)
!9576 = !DILocation(line: 720, column: 21, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9551, file: !1003, line: 720, column: 6)
!9578 = !DILocation(line: 720, column: 6, scope: !9551)
!9579 = !DILocation(line: 721, column: 3, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9577, file: !1003, line: 720, column: 60)
!9581 = !DILocation(line: 722, column: 2, scope: !9580)
!9582 = !DILocation(line: 725, column: 18, scope: !9551)
!9583 = !DILocation(line: 728, column: 2, scope: !9551)
!9584 = !DILocation(line: 730, column: 2, scope: !9551)
!9585 = !DILocation(line: 745, column: 2, scope: !9551)
!9586 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9587, file: !9587, line: 3275, type: !6360, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9588 = !DILocation(line: 3277, column: 21, scope: !9586)
!9589 = !DILocation(line: 3277, column: 3, scope: !9586)
!9590 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1003, file: !1003, line: 507, type: !3111, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9591 = !DILocation(line: 516, column: 4, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1003, line: 515, column: 10)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !1003, line: 513, column: 7)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !1003, line: 510, column: 37)
!9595 = distinct !DILexicalBlock(scope: !9590, file: !1003, line: 510, column: 6)
!9596 = !DILocation(line: 526, column: 3, scope: !9594)
!9597 = !DILocation(line: 527, column: 3, scope: !9594)
!9598 = !DILocation(line: 527, column: 10, scope: !9594)
!9599 = !DILocation(line: 527, column: 31, scope: !9594)
!9600 = distinct !{!9600, !9597, !9601}
!9601 = !DILocation(line: 529, column: 3, scope: !9594)
!9602 = !DILocation(line: 583, column: 3, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !1003, line: 577, column: 37)
!9604 = distinct !DILexicalBlock(scope: !9590, file: !1003, line: 577, column: 6)
!9605 = !DILocation(line: 584, column: 3, scope: !9603)
!9606 = !DILocation(line: 584, column: 10, scope: !9603)
!9607 = !DILocation(line: 584, column: 31, scope: !9603)
!9608 = distinct !{!9608, !9605, !9609}
!9609 = !DILocation(line: 585, column: 3, scope: !9603)
!9610 = !DILocation(line: 627, column: 1, scope: !9590)
!9611 = distinct !DISubprogram(name: "set_up_plls", scope: !1003, file: !1003, line: 448, type: !3111, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9612 = !DILocation(line: 460, column: 6, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9611, file: !1003, line: 460, column: 6)
!9614 = !DILocation(line: 460, column: 31, scope: !9613)
!9615 = !DILocation(line: 460, column: 6, scope: !9611)
!9616 = !DILocation(line: 461, column: 3, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !1003, line: 460, column: 67)
!9618 = !DILocation(line: 462, column: 3, scope: !9617)
!9619 = !DILocation(line: 463, column: 2, scope: !9617)
!9620 = !DILocation(line: 464, column: 2, scope: !9611)
!9621 = !DILocation(line: 488, column: 2, scope: !9611)
!9622 = !DILocation(line: 492, column: 2, scope: !9611)
!9623 = !DILocation(line: 496, column: 2, scope: !9611)
!9624 = !DILocation(line: 499, column: 2, scope: !9611)
!9625 = !DILocation(line: 500, column: 2, scope: !9611)
!9626 = !DILocation(line: 500, column: 9, scope: !9611)
!9627 = !DILocation(line: 500, column: 30, scope: !9611)
!9628 = distinct !{!9628, !9625, !9629}
!9629 = !DILocation(line: 502, column: 2, scope: !9611)
!9630 = !DILocation(line: 505, column: 1, scope: !9611)
!9631 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9587, file: !9587, line: 3224, type: !6370, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9632)
!9632 = !{!9633}
!9633 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9631, file: !9587, line: 3224, type: !152)
!9634 = !DILocation(line: 0, scope: !9631)
!9635 = !DILocation(line: 3226, column: 3, scope: !9631)
!9636 = !DILocation(line: 3227, column: 1, scope: !9631)
!9637 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9587, file: !9587, line: 3188, type: !6370, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9638)
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "Source", arg: 1, scope: !9637, file: !9587, line: 3188, type: !152)
!9640 = !DILocation(line: 0, scope: !9637)
!9641 = !DILocation(line: 3190, column: 3, scope: !9637)
!9642 = !DILocation(line: 3191, column: 1, scope: !9637)
!9643 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9587, file: !9587, line: 3204, type: !6360, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9644 = !DILocation(line: 3206, column: 21, scope: !9643)
!9645 = !DILocation(line: 3206, column: 3, scope: !9643)
!9646 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9587, file: !9587, line: 3240, type: !6370, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9647)
!9647 = !{!9648}
!9648 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9646, file: !9587, line: 3240, type: !152)
!9649 = !DILocation(line: 0, scope: !9646)
!9650 = !DILocation(line: 3242, column: 3, scope: !9646)
!9651 = !DILocation(line: 3243, column: 1, scope: !9646)
!9652 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9587, file: !9587, line: 3256, type: !6370, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9652, file: !9587, line: 3256, type: !152)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 3258, column: 3, scope: !9652)
!9657 = !DILocation(line: 3259, column: 1, scope: !9652)
!9658 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1003, file: !1003, line: 409, type: !3111, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9659 = !DILocation(line: 412, column: 6, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9658, file: !1003, line: 412, column: 6)
!9661 = !DILocation(line: 412, column: 27, scope: !9660)
!9662 = !DILocation(line: 412, column: 6, scope: !9658)
!9663 = !DILocation(line: 414, column: 3, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !1003, line: 412, column: 33)
!9665 = !DILocation(line: 415, column: 3, scope: !9664)
!9666 = !DILocation(line: 415, column: 10, scope: !9664)
!9667 = !DILocation(line: 415, column: 31, scope: !9664)
!9668 = distinct !{!9668, !9665, !9669}
!9669 = !DILocation(line: 417, column: 3, scope: !9664)
!9670 = !DILocation(line: 421, column: 2, scope: !9658)
!9671 = !DILocation(line: 422, column: 2, scope: !9658)
!9672 = !DILocation(line: 422, column: 9, scope: !9658)
!9673 = !DILocation(line: 422, column: 34, scope: !9658)
!9674 = distinct !{!9674, !9671, !9675}
!9675 = !DILocation(line: 423, column: 2, scope: !9658)
!9676 = !DILocation(line: 424, column: 1, scope: !9658)
!9677 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9587, file: !9587, line: 4195, type: !3111, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9678 = !DILocation(line: 4197, column: 3, scope: !9677)
!9679 = !DILocation(line: 4198, column: 1, scope: !9677)
!9680 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9587, file: !9587, line: 4184, type: !3111, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9681 = !DILocation(line: 4186, column: 3, scope: !9680)
!9682 = !DILocation(line: 4187, column: 1, scope: !9680)
!9683 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9587, file: !9587, line: 4205, type: !6360, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9684 = !DILocation(line: 4207, column: 11, scope: !9683)
!9685 = !DILocation(line: 4207, column: 44, scope: !9683)
!9686 = !DILocation(line: 4207, column: 3, scope: !9683)
!9687 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9587, file: !9587, line: 3007, type: !6360, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9688 = !DILocation(line: 3009, column: 11, scope: !9687)
!9689 = !DILocation(line: 3009, column: 44, scope: !9687)
!9690 = !DILocation(line: 3009, column: 3, scope: !9687)
!9691 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9587, file: !9587, line: 2987, type: !3111, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9692 = !DILocation(line: 2989, column: 3, scope: !9691)
!9693 = !DILocation(line: 2990, column: 1, scope: !9691)
!9694 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9587, file: !9587, line: 2939, type: !3111, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9695 = !DILocation(line: 2941, column: 3, scope: !9694)
!9696 = !DILocation(line: 2942, column: 1, scope: !9694)
!9697 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9587, file: !9587, line: 2949, type: !3111, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9698 = !DILocation(line: 2951, column: 3, scope: !9697)
!9699 = !DILocation(line: 2952, column: 1, scope: !9697)
!9700 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9587, file: !9587, line: 2969, type: !6360, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9701 = !DILocation(line: 2971, column: 11, scope: !9700)
!9702 = !DILocation(line: 2971, column: 44, scope: !9700)
!9703 = !DILocation(line: 2971, column: 3, scope: !9700)
!9704 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9587, file: !9587, line: 3143, type: !3111, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9705 = !DILocation(line: 3145, column: 3, scope: !9704)
!9706 = !DILocation(line: 3146, column: 1, scope: !9704)
!9707 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9587, file: !9587, line: 3163, type: !6360, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !939, retainedNodes: !2182)
!9708 = !DILocation(line: 3165, column: 11, scope: !9707)
!9709 = !DILocation(line: 3165, column: 46, scope: !9707)
!9710 = !DILocation(line: 3165, column: 3, scope: !9707)
!9711 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9712, file: !9712, line: 40, type: !6360, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9712 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9713 = !DILocation(line: 45, column: 3, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !9712, line: 44, column: 44)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !9712, line: 44, column: 13)
!9716 = distinct !DILexicalBlock(scope: !9711, file: !9712, line: 42, column: 6)
!9717 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9712, file: !9712, line: 56, type: !3111, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9718 = !DILocation(line: 58, column: 2, scope: !9717)
!9719 = !DILocation(line: 62, column: 1, scope: !9717)
!9720 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9587, file: !9587, line: 4304, type: !9721, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !9723)
!9721 = !DISubroutineType(types: !9722)
!9722 = !{null, !152, !152, !152, !152}
!9723 = !{!9724, !9725, !9726, !9727}
!9724 = !DILocalVariable(name: "Source", arg: 1, scope: !9720, file: !9587, line: 4304, type: !152)
!9725 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9720, file: !9587, line: 4304, type: !152)
!9726 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9720, file: !9587, line: 4304, type: !152)
!9727 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9720, file: !9587, line: 4304, type: !152)
!9728 = !DILocation(line: 0, scope: !9720)
!9729 = !DILocation(line: 4306, column: 3, scope: !9720)
!9730 = !DILocation(line: 4308, column: 3, scope: !9720)
!9731 = !DILocation(line: 4312, column: 1, scope: !9720)
!9732 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9712, file: !9712, line: 69, type: !3111, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2182)
!9733 = !DILocation(line: 72, column: 2, scope: !9732)
!9734 = !DILocation(line: 73, column: 1, scope: !9732)
!9735 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9736, file: !9736, line: 1185, type: !6370, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !9737)
!9736 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9737 = !{!9738, !9739}
!9738 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9735, file: !9736, line: 1185, type: !152)
!9739 = !DILocalVariable(name: "tmpreg", scope: !9735, file: !9736, line: 1187, type: !227)
!9740 = !DILocation(line: 0, scope: !9735)
!9741 = !DILocation(line: 1187, column: 3, scope: !9735)
!9742 = !DILocation(line: 1187, column: 17, scope: !9735)
!9743 = !DILocation(line: 1188, column: 3, scope: !9735)
!9744 = !DILocation(line: 1190, column: 12, scope: !9735)
!9745 = !DILocation(line: 1190, column: 10, scope: !9735)
!9746 = !DILocation(line: 1191, column: 9, scope: !9735)
!9747 = !DILocation(line: 1192, column: 1, scope: !9735)
!9748 = distinct !DISubprogram(name: "uart_console_init", scope: !1134, file: !1134, line: 588, type: !1111, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9749)
!9749 = !{!9750}
!9750 = !DILocalVariable(name: "arg", arg: 1, scope: !9748, file: !1134, line: 588, type: !1089)
!9751 = !DILocation(line: 0, scope: !9748)
!9752 = !DILocation(line: 593, column: 7, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9748, file: !1134, line: 593, column: 6)
!9754 = !DILocation(line: 593, column: 6, scope: !9748)
!9755 = !DILocation(line: 597, column: 2, scope: !9748)
!9756 = !DILocation(line: 599, column: 2, scope: !9748)
!9757 = !DILocation(line: 600, column: 1, scope: !9748)
!9758 = distinct !DISubprogram(name: "device_is_ready", scope: !9759, file: !9759, line: 47, type: !9760, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9762)
!9759 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!9760 = !DISubroutineType(types: !9761)
!9761 = !{!145, !1089}
!9762 = !{!9763}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9758, file: !9759, line: 47, type: !1089)
!9764 = !DILocation(line: 0, scope: !9758)
!9765 = !DILocation(line: 55, column: 2, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9758, file: !9759, line: 55, column: 2)
!9767 = !{i64 2154376828}
!9768 = !DILocation(line: 56, column: 9, scope: !9758)
!9769 = !DILocation(line: 56, column: 2, scope: !9758)
!9770 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1134, file: !1134, line: 573, type: !3111, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !2182)
!9771 = !DILocation(line: 576, column: 2, scope: !9770)
!9772 = !DILocation(line: 579, column: 2, scope: !9770)
!9773 = !DILocation(line: 581, column: 1, scope: !9770)
!9774 = distinct !DISubprogram(name: "console_out", scope: !1134, file: !1134, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9775)
!9775 = !{!9776}
!9776 = !DILocalVariable(name: "c", arg: 1, scope: !9774, file: !1134, line: 77, type: !107)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 89, column: 11, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9774, file: !1134, line: 89, column: 6)
!9780 = !DILocation(line: 89, column: 6, scope: !9774)
!9781 = !DILocation(line: 90, column: 3, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9779, file: !1134, line: 89, column: 17)
!9783 = !DILocation(line: 91, column: 2, scope: !9782)
!9784 = !DILocation(line: 92, column: 34, scope: !9774)
!9785 = !DILocation(line: 92, column: 2, scope: !9774)
!9786 = !DILocation(line: 94, column: 2, scope: !9774)
!9787 = distinct !DISubprogram(name: "uart_poll_out", scope: !9788, file: !9788, line: 95, type: !1107, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9789)
!9788 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/integration")
!9789 = !{!9790, !9791}
!9790 = !DILocalVariable(name: "dev", arg: 1, scope: !9787, file: !9788, line: 95, type: !1089)
!9791 = !DILocalVariable(name: "out_char", arg: 2, scope: !9787, file: !9788, line: 95, type: !196)
!9792 = !DILocation(line: 0, scope: !9787)
!9793 = !DILocation(line: 105, column: 2, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9787, file: !9788, line: 105, column: 2)
!9795 = !{i64 2154460219}
!9796 = !DILocation(line: 106, column: 2, scope: !9787)
!9797 = !DILocation(line: 107, column: 1, scope: !9787)
!9798 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1083, file: !1083, line: 574, type: !1107, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9799)
!9799 = !{!9800, !9801, !9802}
!9800 = !DILocalVariable(name: "dev", arg: 1, scope: !9798, file: !1083, line: 574, type: !1089)
!9801 = !DILocalVariable(name: "out_char", arg: 2, scope: !9798, file: !1083, line: 575, type: !196)
!9802 = !DILocalVariable(name: "api", scope: !9798, file: !1083, line: 577, type: !1080)
!9803 = !DILocation(line: 0, scope: !9798)
!9804 = !DILocation(line: 578, column: 40, scope: !9798)
!9805 = !DILocation(line: 580, column: 7, scope: !9798)
!9806 = !DILocation(line: 580, column: 2, scope: !9798)
!9807 = !DILocation(line: 581, column: 1, scope: !9798)
!9808 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9760, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9809)
!9809 = !{!9810}
!9810 = !DILocalVariable(name: "dev", arg: 1, scope: !9808, file: !247, line: 730, type: !1089)
!9811 = !DILocation(line: 0, scope: !9808)
!9812 = !DILocation(line: 732, column: 9, scope: !9808)
!9813 = !DILocation(line: 732, column: 2, scope: !9808)
!9814 = distinct !DISubprogram(name: "uart_register_input", scope: !1134, file: !1134, line: 560, type: !9815, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !9862)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{null, !9817, !9817, !9859}
!9817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9818, size: 32)
!9818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9819)
!9819 = !{!9820}
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9818, file: !406, line: 2209, baseType: !9821, size: 160)
!9821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9822)
!9822 = !{!9823, !9836, !9840}
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9821, file: !406, line: 1710, baseType: !9824, size: 64)
!9824 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9825, line: 46, baseType: !9826)
!9825 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9825, line: 41, size: 64, elements: !9827)
!9827 = !{!9828, !9835}
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9826, file: !9825, line: 42, baseType: !9829, size: 32)
!9829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9830, size: 32)
!9830 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9825, line: 39, baseType: !9831)
!9831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9825, line: 35, size: 32, elements: !9832)
!9832 = !{!9833}
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9831, file: !9825, line: 36, baseType: !9834, size: 32)
!9834 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9825, line: 32, baseType: !152)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9826, file: !9825, line: 43, baseType: !9829, size: 32, offset: 32)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9821, file: !406, line: 1711, baseType: !9837, size: 32, offset: 64)
!9837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9838)
!9838 = !{!9839}
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9837, file: !420, line: 52, baseType: !22, size: 32)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9821, file: !406, line: 1712, baseType: !9841, size: 64, offset: 96)
!9841 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9842)
!9842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9843)
!9843 = !{!9844}
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9842, file: !345, line: 232, baseType: !9845, size: 64)
!9845 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9846)
!9846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9847)
!9847 = !{!9848, !9854}
!9848 = !DIDerivedType(tag: DW_TAG_member, scope: !9846, file: !319, line: 38, baseType: !9849, size: 32)
!9849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9846, file: !319, line: 38, size: 32, elements: !9850)
!9850 = !{!9851, !9853}
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9849, file: !319, line: 39, baseType: !9852, size: 32)
!9852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9846, size: 32)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9849, file: !319, line: 40, baseType: !9852, size: 32)
!9854 = !DIDerivedType(tag: DW_TAG_member, scope: !9846, file: !319, line: 42, baseType: !9855, size: 32, offset: 32)
!9855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9846, file: !319, line: 42, size: 32, elements: !9856)
!9856 = !{!9857, !9858}
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9855, file: !319, line: 43, baseType: !9852, size: 32)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9855, file: !319, line: 44, baseType: !9852, size: 32)
!9859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9860, size: 32)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{!195, !193, !195}
!9862 = !{!9863, !9864, !9865}
!9863 = !DILocalVariable(name: "avail", arg: 1, scope: !9814, file: !1134, line: 560, type: !9817)
!9864 = !DILocalVariable(name: "lines", arg: 2, scope: !9814, file: !1134, line: 560, type: !9817)
!9865 = !DILocalVariable(name: "completion", arg: 3, scope: !9814, file: !1134, line: 561, type: !9859)
!9866 = !DILocation(line: 0, scope: !9814)
!9867 = !DILocation(line: 566, column: 1, scope: !9814)
!9868 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1312, file: !1312, line: 523, type: !1170, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9869)
!9869 = !{!9870, !9871, !9872, !9873, !9874}
!9870 = !DILocalVariable(name: "dev", arg: 1, scope: !9868, file: !1312, line: 523, type: !1172)
!9871 = !DILocalVariable(name: "pin", arg: 2, scope: !9868, file: !1312, line: 524, type: !1187)
!9872 = !DILocalVariable(name: "flags", arg: 3, scope: !9868, file: !1312, line: 524, type: !1188)
!9873 = !DILocalVariable(name: "err", scope: !9868, file: !1312, line: 526, type: !107)
!9874 = !DILocalVariable(name: "pincfg", scope: !9868, file: !1312, line: 527, type: !107)
!9875 = !DILocation(line: 0, scope: !9868)
!9876 = !DILocation(line: 527, column: 2, scope: !9868)
!9877 = !DILocation(line: 532, column: 8, scope: !9868)
!9878 = !DILocation(line: 533, column: 10, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9868, file: !1312, line: 533, column: 6)
!9880 = !DILocation(line: 533, column: 6, scope: !9868)
!9881 = !DILocation(line: 543, column: 13, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9868, file: !1312, line: 543, column: 6)
!9883 = !DILocation(line: 543, column: 28, scope: !9882)
!9884 = !DILocation(line: 543, column: 6, scope: !9868)
!9885 = !DILocation(line: 544, column: 14, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !1312, line: 544, column: 7)
!9887 = distinct !DILexicalBlock(scope: !9882, file: !1312, line: 543, column: 34)
!9888 = !DILocation(line: 544, column: 39, scope: !9886)
!9889 = !DILocation(line: 544, column: 7, scope: !9887)
!9890 = !DILocation(line: 545, column: 38, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9886, file: !1312, line: 544, column: 45)
!9892 = !DILocation(line: 545, column: 4, scope: !9891)
!9893 = !DILocation(line: 546, column: 3, scope: !9891)
!9894 = !DILocation(line: 546, column: 21, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9886, file: !1312, line: 546, column: 14)
!9896 = !DILocation(line: 546, column: 45, scope: !9895)
!9897 = !DILocation(line: 546, column: 14, scope: !9886)
!9898 = !DILocation(line: 547, column: 40, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !1312, line: 546, column: 51)
!9900 = !DILocation(line: 547, column: 4, scope: !9899)
!9901 = !DILocation(line: 548, column: 3, scope: !9899)
!9902 = !DILocation(line: 551, column: 32, scope: !9868)
!9903 = !DILocation(line: 551, column: 37, scope: !9868)
!9904 = !DILocation(line: 551, column: 2, scope: !9868)
!9905 = !DILocation(line: 554, column: 6, scope: !9868)
!9906 = !DILocation(line: 562, column: 1, scope: !9868)
!9907 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1312, file: !1312, line: 410, type: !9908, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!107, !1172, !999}
!9910 = !{!9911, !9912, !9913, !9915}
!9911 = !DILocalVariable(name: "dev", arg: 1, scope: !9907, file: !1312, line: 410, type: !1172)
!9912 = !DILocalVariable(name: "value", arg: 2, scope: !9907, file: !1312, line: 410, type: !999)
!9913 = !DILocalVariable(name: "cfg", scope: !9907, file: !1312, line: 412, type: !9914)
!9914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!9915 = !DILocalVariable(name: "gpio", scope: !9907, file: !1312, line: 413, type: !1245)
!9916 = !DILocation(line: 0, scope: !9907)
!9917 = !DILocation(line: 412, column: 45, scope: !9907)
!9918 = !DILocation(line: 413, column: 44, scope: !9907)
!9919 = !DILocation(line: 415, column: 11, scope: !9907)
!9920 = !DILocation(line: 415, column: 9, scope: !9907)
!9921 = !DILocation(line: 417, column: 2, scope: !9907)
!9922 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1312, file: !1312, line: 420, type: !1197, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9923)
!9923 = !{!9924, !9925, !9926, !9927, !9928, !9929}
!9924 = !DILocalVariable(name: "dev", arg: 1, scope: !9922, file: !1312, line: 420, type: !1172)
!9925 = !DILocalVariable(name: "mask", arg: 2, scope: !9922, file: !1312, line: 421, type: !1199)
!9926 = !DILocalVariable(name: "value", arg: 3, scope: !9922, file: !1312, line: 422, type: !1194)
!9927 = !DILocalVariable(name: "cfg", scope: !9922, file: !1312, line: 424, type: !9914)
!9928 = !DILocalVariable(name: "gpio", scope: !9922, file: !1312, line: 425, type: !1245)
!9929 = !DILocalVariable(name: "port_value", scope: !9922, file: !1312, line: 426, type: !152)
!9930 = !DILocation(line: 0, scope: !9922)
!9931 = !DILocation(line: 424, column: 45, scope: !9922)
!9932 = !DILocation(line: 425, column: 44, scope: !9922)
!9933 = !DILocation(line: 430, column: 15, scope: !9922)
!9934 = !DILocation(line: 431, column: 46, scope: !9922)
!9935 = !DILocation(line: 431, column: 44, scope: !9922)
!9936 = !DILocation(line: 431, column: 61, scope: !9922)
!9937 = !DILocation(line: 431, column: 53, scope: !9922)
!9938 = !DILocation(line: 431, column: 2, scope: !9922)
!9939 = !DILocation(line: 435, column: 2, scope: !9922)
!9940 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1312, file: !1312, line: 438, type: !1202, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9941)
!9941 = !{!9942, !9943, !9944, !9945}
!9942 = !DILocalVariable(name: "dev", arg: 1, scope: !9940, file: !1312, line: 438, type: !1172)
!9943 = !DILocalVariable(name: "pins", arg: 2, scope: !9940, file: !1312, line: 439, type: !1199)
!9944 = !DILocalVariable(name: "cfg", scope: !9940, file: !1312, line: 441, type: !9914)
!9945 = !DILocalVariable(name: "gpio", scope: !9940, file: !1312, line: 442, type: !1245)
!9946 = !DILocation(line: 0, scope: !9940)
!9947 = !DILocation(line: 441, column: 45, scope: !9940)
!9948 = !DILocation(line: 442, column: 44, scope: !9940)
!9949 = !DILocation(line: 448, column: 2, scope: !9940)
!9950 = !DILocation(line: 450, column: 2, scope: !9940)
!9951 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1312, file: !1312, line: 453, type: !1202, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9952)
!9952 = !{!9953, !9954, !9955, !9956}
!9953 = !DILocalVariable(name: "dev", arg: 1, scope: !9951, file: !1312, line: 453, type: !1172)
!9954 = !DILocalVariable(name: "pins", arg: 2, scope: !9951, file: !1312, line: 454, type: !1199)
!9955 = !DILocalVariable(name: "cfg", scope: !9951, file: !1312, line: 456, type: !9914)
!9956 = !DILocalVariable(name: "gpio", scope: !9951, file: !1312, line: 457, type: !1245)
!9957 = !DILocation(line: 0, scope: !9951)
!9958 = !DILocation(line: 456, column: 45, scope: !9951)
!9959 = !DILocation(line: 457, column: 44, scope: !9951)
!9960 = !DILocation(line: 467, column: 2, scope: !9951)
!9961 = !DILocation(line: 470, column: 2, scope: !9951)
!9962 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1312, file: !1312, line: 473, type: !1202, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9963)
!9963 = !{!9964, !9965, !9966, !9967}
!9964 = !DILocalVariable(name: "dev", arg: 1, scope: !9962, file: !1312, line: 473, type: !1172)
!9965 = !DILocalVariable(name: "pins", arg: 2, scope: !9962, file: !1312, line: 474, type: !1199)
!9966 = !DILocalVariable(name: "cfg", scope: !9962, file: !1312, line: 476, type: !9914)
!9967 = !DILocalVariable(name: "gpio", scope: !9962, file: !1312, line: 477, type: !1245)
!9968 = !DILocation(line: 0, scope: !9962)
!9969 = !DILocation(line: 476, column: 45, scope: !9962)
!9970 = !DILocation(line: 477, column: 44, scope: !9962)
!9971 = !DILocation(line: 484, column: 2, scope: !9962)
!9972 = !DILocation(line: 487, column: 2, scope: !9962)
!9973 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1312, file: !1312, line: 594, type: !1208, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !9974)
!9974 = !{!9975, !9976, !9977, !9978, !9979, !9980, !9982, !9983, !9984}
!9975 = !DILocalVariable(name: "dev", arg: 1, scope: !9973, file: !1312, line: 594, type: !1172)
!9976 = !DILocalVariable(name: "pin", arg: 2, scope: !9973, file: !1312, line: 595, type: !1187)
!9977 = !DILocalVariable(name: "mode", arg: 3, scope: !9973, file: !1312, line: 596, type: !1146)
!9978 = !DILocalVariable(name: "trig", arg: 4, scope: !9973, file: !1312, line: 597, type: !1152)
!9979 = !DILocalVariable(name: "cfg", scope: !9973, file: !1312, line: 599, type: !9914)
!9980 = !DILocalVariable(name: "data", scope: !9973, file: !1312, line: 600, type: !9981)
!9981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9982 = !DILocalVariable(name: "edge", scope: !9973, file: !1312, line: 601, type: !107)
!9983 = !DILocalVariable(name: "err", scope: !9973, file: !1312, line: 602, type: !107)
!9984 = !DILabel(scope: !9973, name: "exit", file: !1312, line: 643)
!9985 = !DILocation(line: 0, scope: !9973)
!9986 = !DILocation(line: 599, column: 45, scope: !9973)
!9987 = !DILocation(line: 604, column: 6, scope: !9973)
!9988 = !DILocation(line: 605, column: 34, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !1312, line: 605, column: 7)
!9990 = distinct !DILexicalBlock(scope: !9991, file: !1312, line: 604, column: 38)
!9991 = distinct !DILexicalBlock(scope: !9973, file: !1312, line: 604, column: 6)
!9992 = !DILocation(line: 605, column: 7, scope: !9989)
!9993 = !DILocation(line: 605, column: 47, scope: !9989)
!9994 = !DILocation(line: 605, column: 39, scope: !9989)
!9995 = !DILocation(line: 605, column: 7, scope: !9990)
!9996 = !DILocation(line: 606, column: 4, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9989, file: !1312, line: 605, column: 53)
!9998 = !DILocation(line: 607, column: 4, scope: !9997)
!9999 = !DILocation(line: 608, column: 4, scope: !9997)
!10000 = !DILocation(line: 609, column: 3, scope: !9997)
!10001 = !DILocation(line: 600, column: 38, scope: !9973)
!10002 = !DILocation(line: 620, column: 30, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9973, file: !1312, line: 620, column: 6)
!10004 = !DILocation(line: 620, column: 6, scope: !10003)
!10005 = !DILocation(line: 620, column: 57, scope: !10003)
!10006 = !DILocation(line: 620, column: 6, scope: !9973)
!10007 = !DILocation(line: 625, column: 29, scope: !9973)
!10008 = !DILocation(line: 625, column: 2, scope: !9973)
!10009 = !DILocation(line: 627, column: 2, scope: !9973)
!10010 = !DILocation(line: 630, column: 3, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9973, file: !1312, line: 627, column: 16)
!10012 = !DILocation(line: 633, column: 3, scope: !10011)
!10013 = !DILocation(line: 636, column: 3, scope: !10011)
!10014 = !DILocation(line: 639, column: 2, scope: !9973)
!10015 = !DILocation(line: 641, column: 2, scope: !9973)
!10016 = !DILocation(line: 643, column: 1, scope: !9973)
!10017 = !DILocation(line: 644, column: 2, scope: !9973)
!10018 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1312, file: !1312, line: 647, type: !1212, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10019)
!10019 = !{!10020, !10021, !10022, !10023}
!10020 = !DILocalVariable(name: "dev", arg: 1, scope: !10018, file: !1312, line: 647, type: !1172)
!10021 = !DILocalVariable(name: "callback", arg: 2, scope: !10018, file: !1312, line: 648, type: !1214)
!10022 = !DILocalVariable(name: "set", arg: 3, scope: !10018, file: !1312, line: 649, type: !145)
!10023 = !DILocalVariable(name: "data", scope: !10018, file: !1312, line: 651, type: !9981)
!10024 = !DILocation(line: 0, scope: !10018)
!10025 = !DILocation(line: 651, column: 38, scope: !10018)
!10026 = !DILocation(line: 653, column: 37, scope: !10018)
!10027 = !DILocation(line: 653, column: 9, scope: !10018)
!10028 = !DILocation(line: 653, column: 2, scope: !10018)
!10029 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10030, file: !10030, line: 38, type: !10031, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10034)
!10030 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10031 = !DISubroutineType(types: !10032)
!10032 = !{!107, !10033, !1214, !145}
!10033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!10034 = !{!10035, !10036, !10037}
!10035 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10029, file: !10030, line: 38, type: !10033)
!10036 = !DILocalVariable(name: "callback", arg: 2, scope: !10029, file: !10030, line: 39, type: !1214)
!10037 = !DILocalVariable(name: "set", arg: 3, scope: !10029, file: !10030, line: 40, type: !145)
!10038 = !DILocation(line: 0, scope: !10029)
!10039 = !DILocation(line: 42, column: 2, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !10030, line: 42, column: 2)
!10041 = distinct !DILexicalBlock(scope: !10029, file: !10030, line: 42, column: 2)
!10042 = !DILocation(line: 42, column: 2, scope: !10041)
!10043 = !DILocation(line: 42, column: 2, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !10030, line: 42, column: 2)
!10045 = !DILocation(line: 43, column: 2, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !10030, line: 43, column: 2)
!10047 = distinct !DILexicalBlock(scope: !10029, file: !10030, line: 43, column: 2)
!10048 = !DILocation(line: 43, column: 2, scope: !10047)
!10049 = !DILocation(line: 43, column: 2, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10046, file: !10030, line: 43, column: 2)
!10051 = !DILocation(line: 45, column: 7, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10029, file: !10030, line: 45, column: 6)
!10053 = !DILocation(line: 45, column: 6, scope: !10029)
!10054 = !DILocation(line: 46, column: 56, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !10030, line: 46, column: 7)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !10030, line: 45, column: 38)
!10057 = !DILocation(line: 46, column: 8, scope: !10055)
!10058 = !DILocation(line: 46, column: 7, scope: !10056)
!10059 = !DILocation(line: 51, column: 13, scope: !10052)
!10060 = !DILocation(line: 56, column: 43, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !10030, line: 55, column: 11)
!10062 = distinct !DILexicalBlock(scope: !10029, file: !10030, line: 55, column: 6)
!10063 = !DILocation(line: 56, column: 3, scope: !10061)
!10064 = !DILocation(line: 57, column: 2, scope: !10061)
!10065 = !DILocation(line: 60, column: 1, scope: !10029)
!10066 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1219, file: !1219, line: 261, type: !10067, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10069)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{!145, !10033}
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "list", arg: 1, scope: !10066, file: !1219, line: 261, type: !10033)
!10071 = !DILocation(line: 0, scope: !10066)
!10072 = !DILocation(line: 261, column: 1, scope: !10066)
!10073 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1219, file: !1219, line: 417, type: !10074, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10076)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!145, !10033, !1388}
!10076 = !{!10077, !10078, !10079, !10080}
!10077 = !DILocalVariable(name: "list", arg: 1, scope: !10073, file: !1219, line: 417, type: !10033)
!10078 = !DILocalVariable(name: "node", arg: 2, scope: !10073, file: !1219, line: 417, type: !1388)
!10079 = !DILocalVariable(name: "prev", scope: !10073, file: !1219, line: 417, type: !1388)
!10080 = !DILocalVariable(name: "test", scope: !10073, file: !1219, line: 417, type: !1388)
!10081 = !DILocation(line: 0, scope: !10073)
!10082 = !DILocation(line: 417, column: 1, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10073, file: !1219, line: 417, column: 1)
!10084 = !DILocation(line: 417, column: 1, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10083, file: !1219, line: 417, column: 1)
!10086 = !DILocation(line: 417, column: 1, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !1219, line: 417, column: 1)
!10088 = distinct !DILexicalBlock(scope: !10085, file: !1219, line: 417, column: 1)
!10089 = !DILocation(line: 417, column: 1, scope: !10088)
!10090 = distinct !{!10090, !10082, !10082}
!10091 = !DILocation(line: 417, column: 1, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10087, file: !1219, line: 417, column: 1)
!10093 = !DILocation(line: 417, column: 1, scope: !10073)
!10094 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1219, file: !1219, line: 298, type: !10095, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{null, !10033, !1388}
!10097 = !{!10098, !10099}
!10098 = !DILocalVariable(name: "list", arg: 1, scope: !10094, file: !1219, line: 298, type: !10033)
!10099 = !DILocalVariable(name: "node", arg: 2, scope: !10094, file: !1219, line: 298, type: !1388)
!10100 = !DILocation(line: 0, scope: !10094)
!10101 = !DILocation(line: 298, column: 1, scope: !10094)
!10102 = !DILocation(line: 298, column: 1, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10094, file: !1219, line: 298, column: 1)
!10104 = !DILocation(line: 298, column: 1, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10103, file: !1219, line: 298, column: 1)
!10106 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1219, file: !1219, line: 231, type: !10107, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10109)
!10107 = !DISubroutineType(types: !10108)
!10108 = !{!1388, !10033}
!10109 = !{!10110}
!10110 = !DILocalVariable(name: "list", arg: 1, scope: !10106, file: !1219, line: 231, type: !10033)
!10111 = !DILocation(line: 0, scope: !10106)
!10112 = !DILocation(line: 233, column: 15, scope: !10106)
!10113 = !DILocation(line: 233, column: 2, scope: !10106)
!10114 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1219, file: !1219, line: 209, type: !10115, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10117)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{null, !1388, !1388}
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "parent", arg: 1, scope: !10114, file: !1219, line: 209, type: !1388)
!10119 = !DILocalVariable(name: "child", arg: 2, scope: !10114, file: !1219, line: 209, type: !1388)
!10120 = !DILocation(line: 0, scope: !10114)
!10121 = !DILocation(line: 211, column: 10, scope: !10114)
!10122 = !DILocation(line: 211, column: 15, scope: !10114)
!10123 = !DILocation(line: 212, column: 1, scope: !10114)
!10124 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1219, file: !1219, line: 214, type: !10095, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10125)
!10125 = !{!10126, !10127}
!10126 = !DILocalVariable(name: "list", arg: 1, scope: !10124, file: !1219, line: 214, type: !10033)
!10127 = !DILocalVariable(name: "node", arg: 2, scope: !10124, file: !1219, line: 214, type: !1388)
!10128 = !DILocation(line: 0, scope: !10124)
!10129 = !DILocation(line: 216, column: 8, scope: !10124)
!10130 = !DILocation(line: 216, column: 13, scope: !10124)
!10131 = !DILocation(line: 217, column: 1, scope: !10124)
!10132 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1219, file: !1219, line: 243, type: !10107, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10133)
!10133 = !{!10134}
!10134 = !DILocalVariable(name: "list", arg: 1, scope: !10132, file: !1219, line: 243, type: !10033)
!10135 = !DILocation(line: 0, scope: !10132)
!10136 = !DILocation(line: 245, column: 15, scope: !10132)
!10137 = !DILocation(line: 245, column: 2, scope: !10132)
!10138 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1219, file: !1219, line: 219, type: !10095, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10139)
!10139 = !{!10140, !10141}
!10140 = !DILocalVariable(name: "list", arg: 1, scope: !10138, file: !1219, line: 219, type: !10033)
!10141 = !DILocalVariable(name: "node", arg: 2, scope: !10138, file: !1219, line: 219, type: !1388)
!10142 = !DILocation(line: 0, scope: !10138)
!10143 = !DILocation(line: 221, column: 8, scope: !10138)
!10144 = !DILocation(line: 221, column: 13, scope: !10138)
!10145 = !DILocation(line: 222, column: 1, scope: !10138)
!10146 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1219, file: !1219, line: 401, type: !10147, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10149)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{null, !10033, !1388, !1388}
!10149 = !{!10150, !10151, !10152}
!10150 = !DILocalVariable(name: "list", arg: 1, scope: !10146, file: !1219, line: 401, type: !10033)
!10151 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10146, file: !1219, line: 401, type: !1388)
!10152 = !DILocalVariable(name: "node", arg: 3, scope: !10146, file: !1219, line: 401, type: !1388)
!10153 = !DILocation(line: 0, scope: !10146)
!10154 = !DILocation(line: 401, column: 1, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10146, file: !1219, line: 401, column: 1)
!10156 = !DILocation(line: 0, scope: !10155)
!10157 = !DILocation(line: 401, column: 1, scope: !10146)
!10158 = !DILocation(line: 401, column: 1, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !1219, line: 401, column: 1)
!10160 = !DILocation(line: 401, column: 1, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10159, file: !1219, line: 401, column: 1)
!10162 = !DILocation(line: 401, column: 1, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10161, file: !1219, line: 401, column: 1)
!10164 = !DILocation(line: 401, column: 1, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10155, file: !1219, line: 401, column: 1)
!10166 = !DILocation(line: 401, column: 1, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10165, file: !1219, line: 401, column: 1)
!10168 = !DILocation(line: 401, column: 1, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10167, file: !1219, line: 401, column: 1)
!10170 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1219, file: !1219, line: 285, type: !10171, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10173)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!1388, !1388}
!10173 = !{!10174}
!10174 = !DILocalVariable(name: "node", arg: 1, scope: !10170, file: !1219, line: 285, type: !1388)
!10175 = !DILocation(line: 0, scope: !10170)
!10176 = !DILocation(line: 285, column: 1, scope: !10170)
!10177 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1219, file: !1219, line: 274, type: !10171, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10178)
!10178 = !{!10179}
!10179 = !DILocalVariable(name: "node", arg: 1, scope: !10177, file: !1219, line: 274, type: !1388)
!10180 = !DILocation(line: 0, scope: !10177)
!10181 = !DILocation(line: 274, column: 1, scope: !10177)
!10182 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1219, file: !1219, line: 204, type: !10171, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10183)
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "node", arg: 1, scope: !10182, file: !1219, line: 204, type: !1388)
!10185 = !DILocation(line: 0, scope: !10182)
!10186 = !DILocation(line: 206, column: 15, scope: !10182)
!10187 = !DILocation(line: 206, column: 2, scope: !10182)
!10188 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1312, file: !1312, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10189)
!10189 = !{!10190, !10191, !10192}
!10190 = !DILocalVariable(name: "pin", arg: 1, scope: !10188, file: !1312, line: 342, type: !107)
!10191 = !DILocalVariable(name: "line", scope: !10188, file: !1312, line: 344, type: !152)
!10192 = !DILocalVariable(name: "port", scope: !10188, file: !1312, line: 345, type: !107)
!10193 = !DILocation(line: 0, scope: !10188)
!10194 = !DILocation(line: 344, column: 18, scope: !10188)
!10195 = !{i32 983040, i32 0}
!10196 = !DILocation(line: 356, column: 9, scope: !10188)
!10197 = !DILocation(line: 370, column: 2, scope: !10188)
!10198 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1312, file: !1312, line: 37, type: !857, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10199)
!10199 = !{!10200, !10201, !10202}
!10200 = !DILocalVariable(name: "line", arg: 1, scope: !10198, file: !1312, line: 37, type: !107)
!10201 = !DILocalVariable(name: "arg", arg: 2, scope: !10198, file: !1312, line: 37, type: !106)
!10202 = !DILocalVariable(name: "data", scope: !10198, file: !1312, line: 39, type: !9981)
!10203 = !DILocation(line: 0, scope: !10198)
!10204 = !DILocation(line: 41, column: 29, scope: !10198)
!10205 = !DILocation(line: 41, column: 39, scope: !10198)
!10206 = !DILocation(line: 41, column: 44, scope: !10198)
!10207 = !DILocation(line: 41, column: 2, scope: !10198)
!10208 = !DILocation(line: 42, column: 1, scope: !10198)
!10209 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1312, file: !1312, line: 376, type: !10210, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10212)
!10210 = !DISubroutineType(types: !10211)
!10211 = !{!107, !107, !107}
!10212 = !{!10213, !10214, !10215, !10217, !10218}
!10213 = !DILocalVariable(name: "port", arg: 1, scope: !10209, file: !1312, line: 376, type: !107)
!10214 = !DILocalVariable(name: "pin", arg: 2, scope: !10209, file: !1312, line: 376, type: !107)
!10215 = !DILocalVariable(name: "clk", scope: !10209, file: !1312, line: 386, type: !10216)
!10216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!10217 = !DILocalVariable(name: "pclken", scope: !10209, file: !1312, line: 387, type: !1431)
!10218 = !DILocalVariable(name: "ret", scope: !10209, file: !1312, line: 396, type: !107)
!10219 = !DILocation(line: 0, scope: !10209)
!10220 = !DILocation(line: 387, column: 2, scope: !10209)
!10221 = !DILocation(line: 387, column: 22, scope: !10209)
!10222 = !DILocation(line: 399, column: 8, scope: !10209)
!10223 = !DILocation(line: 400, column: 10, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10209, file: !1312, line: 400, column: 6)
!10225 = !DILocation(line: 400, column: 6, scope: !10209)
!10226 = !DILocation(line: 405, column: 2, scope: !10209)
!10227 = !DILocation(line: 407, column: 2, scope: !10209)
!10228 = !DILocation(line: 408, column: 1, scope: !10209)
!10229 = distinct !DISubprogram(name: "clock_control_on", scope: !948, file: !948, line: 123, type: !1277, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10230)
!10230 = !{!10231, !10232, !10233}
!10231 = !DILocalVariable(name: "dev", arg: 1, scope: !10229, file: !948, line: 123, type: !1172)
!10232 = !DILocalVariable(name: "sys", arg: 2, scope: !10229, file: !948, line: 124, type: !1043)
!10233 = !DILocalVariable(name: "api", scope: !10229, file: !948, line: 126, type: !1270)
!10234 = !DILocation(line: 0, scope: !10229)
!10235 = !DILocation(line: 127, column: 49, scope: !10229)
!10236 = !DILocation(line: 129, column: 14, scope: !10229)
!10237 = !DILocation(line: 129, column: 9, scope: !10229)
!10238 = !DILocation(line: 129, column: 2, scope: !10229)
!10239 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1312, file: !1312, line: 311, type: !9344, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10240)
!10240 = !{!10241, !10242, !10243}
!10241 = !DILocalVariable(name: "port", arg: 1, scope: !10239, file: !1312, line: 311, type: !107)
!10242 = !DILocalVariable(name: "pin", arg: 2, scope: !10239, file: !1312, line: 311, type: !107)
!10243 = !DILocalVariable(name: "line", scope: !10239, file: !1312, line: 313, type: !152)
!10244 = !DILocation(line: 0, scope: !10239)
!10245 = !DILocation(line: 313, column: 18, scope: !10239)
!10246 = !DILocation(line: 337, column: 2, scope: !10239)
!10247 = !DILocation(line: 340, column: 1, scope: !10239)
!10248 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1312, file: !1312, line: 295, type: !10249, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!152, !107}
!10251 = !{!10252}
!10252 = !DILocalVariable(name: "pin", arg: 1, scope: !10248, file: !1312, line: 295, type: !107)
!10253 = !DILocation(line: 0, scope: !10248)
!10254 = !DILocation(line: 307, column: 46, scope: !10248)
!10255 = !DILocation(line: 307, column: 27, scope: !10248)
!10256 = !DILocation(line: 307, column: 32, scope: !10248)
!10257 = !DILocation(line: 307, column: 14, scope: !10248)
!10258 = !DILocation(line: 307, column: 39, scope: !10248)
!10259 = !DILocation(line: 307, column: 2, scope: !10248)
!10260 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5975, file: !5975, line: 671, type: !10261, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10263)
!10261 = !DISubroutineType(types: !10262)
!10262 = !{null, !152, !152}
!10263 = !{!10264, !10265}
!10264 = !DILocalVariable(name: "Port", arg: 1, scope: !10260, file: !5975, line: 671, type: !152)
!10265 = !DILocalVariable(name: "Line", arg: 2, scope: !10260, file: !5975, line: 671, type: !152)
!10266 = !DILocation(line: 0, scope: !10260)
!10267 = !DILocation(line: 673, column: 3, scope: !10260)
!10268 = !DILocalVariable(name: "value", arg: 1, scope: !10269, file: !6273, line: 373, type: !152)
!10269 = distinct !DISubprogram(name: "__RBIT", scope: !6273, file: !6273, line: 373, type: !7560, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10270)
!10270 = !{!10268, !10271}
!10271 = !DILocalVariable(name: "result", scope: !10269, file: !6273, line: 375, type: !152)
!10272 = !DILocation(line: 0, scope: !10269, inlinedAt: !10273)
!10273 = distinct !DILocation(line: 673, column: 3, scope: !10260)
!10274 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10273)
!10275 = !{i64 2922127}
!10276 = !DILocalVariable(name: "value", arg: 1, scope: !10277, file: !6273, line: 403, type: !152)
!10277 = distinct !DISubprogram(name: "__CLZ", scope: !6273, file: !6273, line: 403, type: !10278, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10280)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{!195, !152}
!10280 = !{!10276}
!10281 = !DILocation(line: 0, scope: !10277, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 673, column: 3, scope: !10260)
!10283 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10282)
!10284 = !DILocation(line: 674, column: 1, scope: !10260)
!10285 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10030, file: !10030, line: 69, type: !10286, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{null, !10033, !1172, !152}
!10288 = !{!10289, !10290, !10291, !10292, !10293}
!10289 = !DILocalVariable(name: "list", arg: 1, scope: !10285, file: !10030, line: 69, type: !10033)
!10290 = !DILocalVariable(name: "port", arg: 2, scope: !10285, file: !10030, line: 70, type: !1172)
!10291 = !DILocalVariable(name: "pins", arg: 3, scope: !10285, file: !10030, line: 71, type: !152)
!10292 = !DILocalVariable(name: "cb", scope: !10285, file: !10030, line: 73, type: !1214)
!10293 = !DILocalVariable(name: "tmp", scope: !10285, file: !10030, line: 73, type: !1214)
!10294 = !DILocation(line: 0, scope: !10285)
!10295 = !DILocation(line: 75, column: 2, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10285, file: !10030, line: 75, column: 2)
!10297 = !DILocation(line: 0, scope: !10296)
!10298 = !DILocation(line: 76, column: 11, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !10030, line: 76, column: 7)
!10300 = distinct !DILexicalBlock(scope: !10301, file: !10030, line: 75, column: 57)
!10301 = distinct !DILexicalBlock(scope: !10296, file: !10030, line: 75, column: 2)
!10302 = !DILocation(line: 76, column: 20, scope: !10299)
!10303 = !DILocation(line: 76, column: 7, scope: !10300)
!10304 = !DILocation(line: 77, column: 4, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !10030, line: 77, column: 4)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !10030, line: 77, column: 4)
!10307 = distinct !DILexicalBlock(scope: !10299, file: !10030, line: 76, column: 28)
!10308 = !DILocation(line: 77, column: 4, scope: !10306)
!10309 = !DILocation(line: 77, column: 4, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10305, file: !10030, line: 77, column: 4)
!10311 = !DILocation(line: 78, column: 4, scope: !10307)
!10312 = !DILocation(line: 79, column: 3, scope: !10307)
!10313 = !DILocation(line: 75, column: 2, scope: !10301)
!10314 = !DILocation(line: 81, column: 1, scope: !10285)
!10315 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5975, file: !5975, line: 710, type: !7560, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10316)
!10316 = !{!10317}
!10317 = !DILocalVariable(name: "Line", arg: 1, scope: !10315, file: !5975, line: 710, type: !152)
!10318 = !DILocation(line: 0, scope: !10315)
!10319 = !DILocation(line: 712, column: 21, scope: !10315)
!10320 = !DILocation(line: 0, scope: !10269, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 712, column: 76, scope: !10315)
!10322 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10321)
!10323 = !DILocation(line: 0, scope: !10277, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 712, column: 76, scope: !10315)
!10325 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10324)
!10326 = !DILocation(line: 712, column: 73, scope: !10315)
!10327 = !DILocation(line: 712, column: 3, scope: !10315)
!10328 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10329, file: !10329, line: 910, type: !10330, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10332)
!10329 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10330 = !DISubroutineType(types: !10331)
!10331 = !{null, !1245, !152}
!10332 = !{!10333, !10334}
!10333 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10328, file: !10329, line: 910, type: !1245)
!10334 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10328, file: !10329, line: 910, type: !152)
!10335 = !DILocation(line: 0, scope: !10328)
!10336 = !DILocation(line: 912, column: 3, scope: !10328)
!10337 = !DILocation(line: 913, column: 1, scope: !10328)
!10338 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10329, file: !10329, line: 823, type: !10339, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10341)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!152, !1245}
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10338, file: !10329, line: 823, type: !1245)
!10343 = !DILocation(line: 0, scope: !10338)
!10344 = !DILocation(line: 825, column: 21, scope: !10338)
!10345 = !DILocation(line: 825, column: 3, scope: !10338)
!10346 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10329, file: !10329, line: 812, type: !10330, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10347)
!10347 = !{!10348, !10349}
!10348 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10346, file: !10329, line: 812, type: !1245)
!10349 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10346, file: !10329, line: 812, type: !152)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 814, column: 3, scope: !10346)
!10352 = !DILocation(line: 815, column: 1, scope: !10346)
!10353 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10329, file: !10329, line: 771, type: !10339, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10353, file: !10329, line: 771, type: !1245)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 773, column: 21, scope: !10353)
!10358 = !DILocation(line: 773, column: 3, scope: !10353)
!10359 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1312, file: !1312, line: 47, type: !10360, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10362)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{!107, !1188, !187}
!10362 = !{!10363, !10364}
!10363 = !DILocalVariable(name: "flags", arg: 1, scope: !10359, file: !1312, line: 47, type: !1188)
!10364 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10359, file: !1312, line: 47, type: !187)
!10365 = !DILocation(line: 0, scope: !10359)
!10366 = !DILocation(line: 50, column: 13, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10359, file: !1312, line: 50, column: 6)
!10368 = !DILocation(line: 50, column: 28, scope: !10367)
!10369 = !DILocation(line: 50, column: 6, scope: !10359)
!10370 = !DILocation(line: 53, column: 11, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10367, file: !1312, line: 50, column: 34)
!10372 = !DILocation(line: 55, column: 14, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10371, file: !1312, line: 55, column: 7)
!10374 = !DILocation(line: 55, column: 35, scope: !10373)
!10375 = !DILocation(line: 55, column: 7, scope: !10371)
!10376 = !DILocation(line: 56, column: 14, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !1312, line: 56, column: 8)
!10378 = distinct !DILexicalBlock(scope: !10373, file: !1312, line: 55, column: 41)
!10379 = !DILocation(line: 56, column: 8, scope: !10378)
!10380 = !DILocation(line: 0, scope: !10373)
!10381 = !DILocation(line: 66, column: 14, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10371, file: !1312, line: 66, column: 7)
!10383 = !DILocation(line: 66, column: 30, scope: !10382)
!10384 = !DILocation(line: 66, column: 7, scope: !10371)
!10385 = !DILocation(line: 67, column: 12, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10382, file: !1312, line: 66, column: 36)
!10387 = !DILocation(line: 68, column: 3, scope: !10386)
!10388 = !DILocation(line: 68, column: 21, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10382, file: !1312, line: 68, column: 14)
!10390 = !DILocation(line: 68, column: 39, scope: !10389)
!10391 = !DILocation(line: 68, column: 14, scope: !10382)
!10392 = !DILocation(line: 69, column: 12, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10389, file: !1312, line: 68, column: 45)
!10394 = !DILocation(line: 70, column: 3, scope: !10393)
!10395 = !DILocation(line: 72, column: 21, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10367, file: !1312, line: 72, column: 14)
!10397 = !DILocation(line: 72, column: 35, scope: !10396)
!10398 = !DILocation(line: 72, column: 14, scope: !10367)
!10399 = !DILocation(line: 77, column: 14, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !1312, line: 77, column: 7)
!10401 = distinct !DILexicalBlock(scope: !10396, file: !1312, line: 72, column: 41)
!10402 = !DILocation(line: 77, column: 30, scope: !10400)
!10403 = !DILocation(line: 77, column: 7, scope: !10401)
!10404 = !DILocation(line: 0, scope: !10367)
!10405 = !DILocation(line: 90, column: 1, scope: !10359)
!10406 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1312, file: !1312, line: 157, type: !10407, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !1172, !107, !107, !107}
!10409 = !{!10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !1312, line: 157, type: !1172)
!10411 = !DILocalVariable(name: "pin", arg: 2, scope: !10406, file: !1312, line: 157, type: !107)
!10412 = !DILocalVariable(name: "conf", arg: 3, scope: !10406, file: !1312, line: 158, type: !107)
!10413 = !DILocalVariable(name: "func", arg: 4, scope: !10406, file: !1312, line: 158, type: !107)
!10414 = !DILocalVariable(name: "cfg", scope: !10406, file: !1312, line: 160, type: !9914)
!10415 = !DILocalVariable(name: "gpio", scope: !10406, file: !1312, line: 161, type: !1245)
!10416 = !DILocalVariable(name: "pin_ll", scope: !10406, file: !1312, line: 163, type: !107)
!10417 = !DILocalVariable(name: "mode", scope: !10406, file: !1312, line: 227, type: !32)
!10418 = !DILocalVariable(name: "otype", scope: !10406, file: !1312, line: 227, type: !32)
!10419 = !DILocalVariable(name: "ospeed", scope: !10406, file: !1312, line: 227, type: !32)
!10420 = !DILocalVariable(name: "pupd", scope: !10406, file: !1312, line: 227, type: !32)
!10421 = !DILocation(line: 0, scope: !10406)
!10422 = !DILocation(line: 160, column: 45, scope: !10406)
!10423 = !DILocation(line: 161, column: 44, scope: !10406)
!10424 = !DILocation(line: 163, column: 15, scope: !10406)
!10425 = !DILocation(line: 229, column: 14, scope: !10406)
!10426 = !DILocation(line: 246, column: 47, scope: !10406)
!10427 = !DILocation(line: 246, column: 2, scope: !10406)
!10428 = !DILocation(line: 248, column: 43, scope: !10406)
!10429 = !DILocation(line: 248, column: 2, scope: !10406)
!10430 = !DILocation(line: 250, column: 40, scope: !10406)
!10431 = !DILocation(line: 250, column: 2, scope: !10406)
!10432 = !DILocation(line: 252, column: 11, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10406, file: !1312, line: 252, column: 6)
!10434 = !DILocation(line: 252, column: 6, scope: !10406)
!10435 = !DILocation(line: 253, column: 11, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1312, line: 253, column: 7)
!10437 = distinct !DILexicalBlock(scope: !10433, file: !1312, line: 252, column: 36)
!10438 = !DILocation(line: 253, column: 7, scope: !10437)
!10439 = !DILocation(line: 254, column: 4, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !1312, line: 253, column: 16)
!10441 = !DILocation(line: 255, column: 3, scope: !10440)
!10442 = !DILocation(line: 256, column: 4, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10436, file: !1312, line: 255, column: 10)
!10444 = !DILocation(line: 260, column: 40, scope: !10406)
!10445 = !DILocation(line: 260, column: 2, scope: !10406)
!10446 = !DILocation(line: 265, column: 1, scope: !10406)
!10447 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1312, file: !1312, line: 137, type: !10249, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10448)
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "pin", arg: 1, scope: !10447, file: !1312, line: 137, type: !107)
!10450 = !DILocalVariable(name: "pinval", scope: !10447, file: !1312, line: 139, type: !152)
!10451 = !DILocation(line: 0, scope: !10447)
!10452 = !DILocation(line: 149, column: 13, scope: !10447)
!10453 = !DILocation(line: 151, column: 2, scope: !10447)
!10454 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10329, file: !10329, line: 342, type: !10455, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10457)
!10455 = !DISubroutineType(types: !10456)
!10456 = !{null, !1245, !152, !152}
!10457 = !{!10458, !10459, !10460}
!10458 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10454, file: !10329, line: 342, type: !1245)
!10459 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10454, file: !10329, line: 342, type: !152)
!10460 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10454, file: !10329, line: 342, type: !152)
!10461 = !DILocation(line: 0, scope: !10454)
!10462 = !DILocation(line: 344, column: 3, scope: !10454)
!10463 = !DILocation(line: 345, column: 1, scope: !10454)
!10464 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10329, file: !10329, line: 413, type: !10455, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10465)
!10465 = !{!10466, !10467, !10468}
!10466 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10464, file: !10329, line: 413, type: !1245)
!10467 = !DILocalVariable(name: "Pin", arg: 2, scope: !10464, file: !10329, line: 413, type: !152)
!10468 = !DILocalVariable(name: "Speed", arg: 3, scope: !10464, file: !10329, line: 413, type: !152)
!10469 = !DILocation(line: 0, scope: !10464)
!10470 = !DILocation(line: 415, column: 3, scope: !10464)
!10471 = !DILocation(line: 0, scope: !10269, inlinedAt: !10472)
!10472 = distinct !DILocation(line: 415, column: 3, scope: !10464)
!10473 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10472)
!10474 = !DILocation(line: 0, scope: !10277, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 415, column: 3, scope: !10464)
!10476 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10475)
!10477 = !DILocation(line: 0, scope: !10269, inlinedAt: !10478)
!10478 = distinct !DILocation(line: 415, column: 3, scope: !10464)
!10479 = !DILocation(line: 0, scope: !10277, inlinedAt: !10480)
!10480 = distinct !DILocation(line: 415, column: 3, scope: !10464)
!10481 = !DILocation(line: 417, column: 1, scope: !10464)
!10482 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10329, file: !10329, line: 484, type: !10455, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10483)
!10483 = !{!10484, !10485, !10486}
!10484 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10482, file: !10329, line: 484, type: !1245)
!10485 = !DILocalVariable(name: "Pin", arg: 2, scope: !10482, file: !10329, line: 484, type: !152)
!10486 = !DILocalVariable(name: "Pull", arg: 3, scope: !10482, file: !10329, line: 484, type: !152)
!10487 = !DILocation(line: 0, scope: !10482)
!10488 = !DILocation(line: 486, column: 3, scope: !10482)
!10489 = !DILocation(line: 0, scope: !10269, inlinedAt: !10490)
!10490 = distinct !DILocation(line: 486, column: 3, scope: !10482)
!10491 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10490)
!10492 = !DILocation(line: 0, scope: !10277, inlinedAt: !10493)
!10493 = distinct !DILocation(line: 486, column: 3, scope: !10482)
!10494 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10493)
!10495 = !DILocation(line: 0, scope: !10269, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 486, column: 3, scope: !10482)
!10497 = !DILocation(line: 0, scope: !10277, inlinedAt: !10498)
!10498 = distinct !DILocation(line: 486, column: 3, scope: !10482)
!10499 = !DILocation(line: 487, column: 1, scope: !10482)
!10500 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10329, file: !10329, line: 556, type: !10455, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10501)
!10501 = !{!10502, !10503, !10504}
!10502 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10500, file: !10329, line: 556, type: !1245)
!10503 = !DILocalVariable(name: "Pin", arg: 2, scope: !10500, file: !10329, line: 556, type: !152)
!10504 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10500, file: !10329, line: 556, type: !152)
!10505 = !DILocation(line: 0, scope: !10500)
!10506 = !DILocation(line: 558, column: 3, scope: !10500)
!10507 = !DILocation(line: 0, scope: !10269, inlinedAt: !10508)
!10508 = distinct !DILocation(line: 558, column: 3, scope: !10500)
!10509 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10508)
!10510 = !DILocation(line: 0, scope: !10277, inlinedAt: !10511)
!10511 = distinct !DILocation(line: 558, column: 3, scope: !10500)
!10512 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10511)
!10513 = !DILocation(line: 0, scope: !10269, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 558, column: 3, scope: !10500)
!10515 = !DILocation(line: 0, scope: !10277, inlinedAt: !10516)
!10516 = distinct !DILocation(line: 558, column: 3, scope: !10500)
!10517 = !DILocation(line: 560, column: 1, scope: !10500)
!10518 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10329, file: !10329, line: 633, type: !10455, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10519)
!10519 = !{!10520, !10521, !10522}
!10520 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10518, file: !10329, line: 633, type: !1245)
!10521 = !DILocalVariable(name: "Pin", arg: 2, scope: !10518, file: !10329, line: 633, type: !152)
!10522 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10518, file: !10329, line: 633, type: !152)
!10523 = !DILocation(line: 0, scope: !10518)
!10524 = !DILocation(line: 635, column: 3, scope: !10518)
!10525 = !DILocation(line: 0, scope: !10269, inlinedAt: !10526)
!10526 = distinct !DILocation(line: 635, column: 3, scope: !10518)
!10527 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10526)
!10528 = !DILocation(line: 0, scope: !10277, inlinedAt: !10529)
!10529 = distinct !DILocation(line: 635, column: 3, scope: !10518)
!10530 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10529)
!10531 = !DILocation(line: 0, scope: !10269, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 635, column: 3, scope: !10518)
!10533 = !DILocation(line: 0, scope: !10277, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 635, column: 3, scope: !10518)
!10535 = !DILocation(line: 637, column: 1, scope: !10518)
!10536 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10329, file: !10329, line: 273, type: !10455, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10537)
!10537 = !{!10538, !10539, !10540}
!10538 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10536, file: !10329, line: 273, type: !1245)
!10539 = !DILocalVariable(name: "Pin", arg: 2, scope: !10536, file: !10329, line: 273, type: !152)
!10540 = !DILocalVariable(name: "Mode", arg: 3, scope: !10536, file: !10329, line: 273, type: !152)
!10541 = !DILocation(line: 0, scope: !10536)
!10542 = !DILocation(line: 275, column: 3, scope: !10536)
!10543 = !DILocation(line: 0, scope: !10269, inlinedAt: !10544)
!10544 = distinct !DILocation(line: 275, column: 3, scope: !10536)
!10545 = !DILocation(line: 380, column: 4, scope: !10269, inlinedAt: !10544)
!10546 = !DILocation(line: 0, scope: !10277, inlinedAt: !10547)
!10547 = distinct !DILocation(line: 275, column: 3, scope: !10536)
!10548 = !DILocation(line: 414, column: 7, scope: !10277, inlinedAt: !10547)
!10549 = !DILocation(line: 0, scope: !10269, inlinedAt: !10550)
!10550 = distinct !DILocation(line: 275, column: 3, scope: !10536)
!10551 = !DILocation(line: 0, scope: !10277, inlinedAt: !10552)
!10552 = distinct !DILocation(line: 275, column: 3, scope: !10536)
!10553 = !DILocation(line: 276, column: 1, scope: !10536)
!10554 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1312, file: !1312, line: 698, type: !1325, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10555)
!10555 = !{!10556, !10557, !10558}
!10556 = !DILocalVariable(name: "dev", arg: 1, scope: !10554, file: !1312, line: 698, type: !1172)
!10557 = !DILocalVariable(name: "data", scope: !10554, file: !1312, line: 700, type: !9981)
!10558 = !DILocalVariable(name: "ret", scope: !10554, file: !1312, line: 701, type: !107)
!10559 = !DILocation(line: 0, scope: !10554)
!10560 = !DILocation(line: 700, column: 38, scope: !10554)
!10561 = !DILocation(line: 703, column: 8, scope: !10554)
!10562 = !DILocation(line: 703, column: 12, scope: !10554)
!10563 = !DILocation(line: 705, column: 7, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10554, file: !1312, line: 705, column: 6)
!10565 = !DILocation(line: 705, column: 6, scope: !10554)
!10566 = !DILocation(line: 722, column: 8, scope: !10554)
!10567 = !DILocation(line: 723, column: 10, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10554, file: !1312, line: 723, column: 6)
!10569 = !DILocation(line: 723, column: 6, scope: !10554)
!10570 = !DILocation(line: 731, column: 1, scope: !10554)
!10571 = distinct !DISubprogram(name: "device_is_ready", scope: !9759, file: !9759, line: 47, type: !10572, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10574)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!145, !1172}
!10574 = !{!10575}
!10575 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !9759, line: 47, type: !1172)
!10576 = !DILocation(line: 0, scope: !10571)
!10577 = !DILocation(line: 55, column: 2, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10571, file: !9759, line: 55, column: 2)
!10579 = !{i64 2154368035}
!10580 = !DILocation(line: 56, column: 9, scope: !10571)
!10581 = !DILocation(line: 56, column: 2, scope: !10571)
!10582 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1312, file: !1312, line: 270, type: !10583, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10585)
!10583 = !DISubroutineType(types: !10584)
!10584 = !{!107, !1172, !145}
!10585 = !{!10586, !10587, !10588, !10589, !10590}
!10586 = !DILocalVariable(name: "dev", arg: 1, scope: !10582, file: !1312, line: 270, type: !1172)
!10587 = !DILocalVariable(name: "on", arg: 2, scope: !10582, file: !1312, line: 270, type: !145)
!10588 = !DILocalVariable(name: "cfg", scope: !10582, file: !1312, line: 272, type: !9914)
!10589 = !DILocalVariable(name: "ret", scope: !10582, file: !1312, line: 273, type: !107)
!10590 = !DILocalVariable(name: "clk", scope: !10582, file: !1312, line: 278, type: !10216)
!10591 = !DILocation(line: 0, scope: !10582)
!10592 = !DILocation(line: 272, column: 45, scope: !10582)
!10593 = !DILocation(line: 282, column: 38, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !1312, line: 280, column: 10)
!10595 = distinct !DILexicalBlock(scope: !10582, file: !1312, line: 280, column: 6)
!10596 = !DILocation(line: 282, column: 6, scope: !10594)
!10597 = !DILocation(line: 281, column: 9, scope: !10594)
!10598 = !DILocation(line: 293, column: 1, scope: !10582)
!10599 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10572, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10600)
!10600 = !{!10601}
!10601 = !DILocalVariable(name: "dev", arg: 1, scope: !10599, file: !247, line: 730, type: !1172)
!10602 = !DILocation(line: 0, scope: !10599)
!10603 = !DILocation(line: 732, column: 9, scope: !10599)
!10604 = !DILocation(line: 732, column: 2, scope: !10599)
!10605 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1312, file: !1312, line: 496, type: !10606, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1143, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!107, !1172, !107, !107, !107}
!10608 = !{!10609, !10610, !10611, !10612, !10613, !10614}
!10609 = !DILocalVariable(name: "dev", arg: 1, scope: !10605, file: !1312, line: 496, type: !1172)
!10610 = !DILocalVariable(name: "pin", arg: 2, scope: !10605, file: !1312, line: 496, type: !107)
!10611 = !DILocalVariable(name: "conf", arg: 3, scope: !10605, file: !1312, line: 496, type: !107)
!10612 = !DILocalVariable(name: "func", arg: 4, scope: !10605, file: !1312, line: 496, type: !107)
!10613 = !DILocalVariable(name: "ret", scope: !10605, file: !1312, line: 498, type: !107)
!10614 = !DILocalVariable(name: "gpio_out", scope: !10615, file: !1312, line: 508, type: !152)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !1312, line: 507, column: 27)
!10616 = distinct !DILexicalBlock(scope: !10605, file: !1312, line: 507, column: 6)
!10617 = !DILocation(line: 0, scope: !10605)
!10618 = !DILocation(line: 505, column: 2, scope: !10605)
!10619 = !DILocation(line: 507, column: 11, scope: !10616)
!10620 = !DILocation(line: 507, column: 6, scope: !10605)
!10621 = !DILocation(line: 508, column: 28, scope: !10615)
!10622 = !DILocation(line: 0, scope: !10615)
!10623 = !DILocation(line: 510, column: 16, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10615, file: !1312, line: 510, column: 7)
!10625 = !DILocation(line: 0, scope: !10624)
!10626 = !DILocation(line: 510, column: 7, scope: !10615)
!10627 = !DILocation(line: 511, column: 4, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10624, file: !1312, line: 510, column: 32)
!10629 = !DILocation(line: 512, column: 3, scope: !10628)
!10630 = !DILocation(line: 513, column: 4, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !1312, line: 512, column: 39)
!10632 = distinct !DILexicalBlock(scope: !10624, file: !1312, line: 512, column: 14)
!10633 = !DILocation(line: 514, column: 3, scope: !10631)
!10634 = !DILocation(line: 518, column: 1, scope: !10605)
!10635 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1588, file: !1588, line: 526, type: !1491, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10636)
!10636 = !{!10637, !10638, !10639}
!10637 = !DILocalVariable(name: "dev", arg: 1, scope: !10635, file: !1588, line: 526, type: !1493)
!10638 = !DILocalVariable(name: "c", arg: 2, scope: !10635, file: !1588, line: 526, type: !1104)
!10639 = !DILocalVariable(name: "config", scope: !10635, file: !1588, line: 528, type: !10640)
!10640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!10641 = !DILocation(line: 0, scope: !10635)
!10642 = !DILocation(line: 528, column: 48, scope: !10635)
!10643 = !DILocation(line: 531, column: 40, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10635, file: !1588, line: 531, column: 6)
!10645 = !DILocation(line: 531, column: 6, scope: !10644)
!10646 = !DILocation(line: 531, column: 6, scope: !10635)
!10647 = !DILocation(line: 532, column: 34, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !1588, line: 531, column: 48)
!10649 = !DILocation(line: 532, column: 3, scope: !10648)
!10650 = !DILocation(line: 533, column: 2, scope: !10648)
!10651 = !DILocation(line: 539, column: 42, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10635, file: !1588, line: 539, column: 6)
!10653 = !DILocation(line: 539, column: 7, scope: !10652)
!10654 = !DILocation(line: 539, column: 6, scope: !10635)
!10655 = !DILocation(line: 543, column: 52, scope: !10635)
!10656 = !DILocation(line: 543, column: 22, scope: !10635)
!10657 = !DILocation(line: 543, column: 5, scope: !10635)
!10658 = !DILocation(line: 545, column: 2, scope: !10635)
!10659 = !DILocation(line: 546, column: 1, scope: !10635)
!10660 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1588, file: !1588, line: 548, type: !1510, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10661)
!10661 = !{!10662, !10663, !10664, !10665}
!10662 = !DILocalVariable(name: "dev", arg: 1, scope: !10660, file: !1588, line: 548, type: !1493)
!10663 = !DILocalVariable(name: "c", arg: 2, scope: !10660, file: !1588, line: 549, type: !196)
!10664 = !DILocalVariable(name: "config", scope: !10660, file: !1588, line: 551, type: !10640)
!10665 = !DILocalVariable(name: "key", scope: !10660, file: !1588, line: 555, type: !32)
!10666 = !DILocation(line: 0, scope: !10660)
!10667 = !DILocation(line: 551, column: 48, scope: !10660)
!10668 = !DILocation(line: 562, column: 2, scope: !10660)
!10669 = !DILocation(line: 563, column: 41, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !1588, line: 563, column: 7)
!10671 = distinct !DILexicalBlock(scope: !10660, file: !1588, line: 562, column: 12)
!10672 = !DILocation(line: 563, column: 7, scope: !10670)
!10673 = !DILocation(line: 563, column: 7, scope: !10671)
!10674 = !DILocation(line: 55, column: 2, scope: !10675, inlinedAt: !10679)
!10675 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10676)
!10676 = !{!10677, !10678}
!10677 = !DILocalVariable(name: "key", scope: !10675, file: !5954, line: 44, type: !32)
!10678 = !DILocalVariable(name: "tmp", scope: !10675, file: !5954, line: 53, type: !32)
!10679 = distinct !DILocation(line: 564, column: 10, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10670, file: !1588, line: 563, column: 49)
!10681 = !{i64 2090836}
!10682 = !DILocation(line: 0, scope: !10675, inlinedAt: !10679)
!10683 = !DILocation(line: 565, column: 42, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10680, file: !1588, line: 565, column: 8)
!10685 = !DILocation(line: 565, column: 8, scope: !10684)
!10686 = !DILocation(line: 565, column: 8, scope: !10680)
!10687 = !DILocalVariable(name: "key", arg: 1, scope: !10688, file: !5954, line: 84, type: !32)
!10688 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10689)
!10689 = !{!10687}
!10690 = !DILocation(line: 0, scope: !10688, inlinedAt: !10691)
!10691 = distinct !DILocation(line: 568, column: 4, scope: !10680)
!10692 = !DILocation(line: 95, column: 2, scope: !10688, inlinedAt: !10691)
!10693 = !{i64 2091653}
!10694 = !DILocation(line: 569, column: 3, scope: !10680)
!10695 = distinct !{!10695, !10668, !10696}
!10696 = !DILocation(line: 570, column: 2, scope: !10660)
!10697 = !DILocation(line: 592, column: 33, scope: !10660)
!10698 = !DILocation(line: 592, column: 2, scope: !10660)
!10699 = !DILocation(line: 0, scope: !10688, inlinedAt: !10700)
!10700 = distinct !DILocation(line: 593, column: 2, scope: !10660)
!10701 = !DILocation(line: 95, column: 2, scope: !10688, inlinedAt: !10700)
!10702 = !DILocation(line: 594, column: 1, scope: !10660)
!10703 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1588, file: !1588, line: 596, type: !1514, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10704)
!10704 = !{!10705, !10706, !10707}
!10705 = !DILocalVariable(name: "dev", arg: 1, scope: !10703, file: !1588, line: 596, type: !1493)
!10706 = !DILocalVariable(name: "config", scope: !10703, file: !1588, line: 598, type: !10640)
!10707 = !DILocalVariable(name: "err", scope: !10703, file: !1588, line: 599, type: !152)
!10708 = !DILocation(line: 0, scope: !10703)
!10709 = !DILocation(line: 598, column: 48, scope: !10703)
!10710 = !DILocation(line: 606, column: 40, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 606, column: 6)
!10712 = !DILocation(line: 606, column: 6, scope: !10711)
!10713 = !DILocation(line: 606, column: 6, scope: !10703)
!10714 = !DILocation(line: 610, column: 39, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 610, column: 6)
!10716 = !DILocation(line: 610, column: 6, scope: !10715)
!10717 = !DILocation(line: 610, column: 6, scope: !10703)
!10718 = !DILocation(line: 614, column: 39, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 614, column: 6)
!10720 = !DILocation(line: 614, column: 6, scope: !10719)
!10721 = !DILocation(line: 614, column: 6, scope: !10703)
!10722 = !DILocation(line: 619, column: 40, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 619, column: 6)
!10724 = !DILocation(line: 619, column: 6, scope: !10723)
!10725 = !DILocation(line: 619, column: 6, scope: !10703)
!10726 = !DILocation(line: 623, column: 10, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 623, column: 6)
!10728 = !DILocation(line: 623, column: 6, scope: !10703)
!10729 = !DILocation(line: 624, column: 34, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10727, file: !1588, line: 623, column: 24)
!10731 = !DILocation(line: 624, column: 3, scope: !10730)
!10732 = !DILocation(line: 625, column: 2, scope: !10730)
!10733 = !DILocation(line: 632, column: 10, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 632, column: 6)
!10735 = !DILocation(line: 632, column: 6, scope: !10703)
!10736 = !DILocation(line: 633, column: 34, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10734, file: !1588, line: 632, column: 32)
!10738 = !DILocation(line: 633, column: 3, scope: !10737)
!10739 = !DILocation(line: 634, column: 2, scope: !10737)
!10740 = !DILocation(line: 636, column: 10, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 636, column: 6)
!10742 = !DILocation(line: 636, column: 6, scope: !10703)
!10743 = !DILocation(line: 637, column: 33, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10741, file: !1588, line: 636, column: 31)
!10745 = !DILocation(line: 637, column: 3, scope: !10744)
!10746 = !DILocation(line: 638, column: 2, scope: !10744)
!10747 = !DILocation(line: 640, column: 10, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10703, file: !1588, line: 640, column: 6)
!10749 = !DILocation(line: 640, column: 6, scope: !10703)
!10750 = !DILocation(line: 641, column: 33, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10748, file: !1588, line: 640, column: 32)
!10752 = !DILocation(line: 641, column: 3, scope: !10751)
!10753 = !DILocation(line: 642, column: 2, scope: !10751)
!10754 = !DILocation(line: 646, column: 32, scope: !10703)
!10755 = !DILocation(line: 646, column: 2, scope: !10703)
!10756 = !DILocation(line: 648, column: 2, scope: !10703)
!10757 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1588, file: !1588, line: 419, type: !1518, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10758)
!10758 = !{!10759, !10760, !10761, !10762, !10764, !10765, !10766, !10767}
!10759 = !DILocalVariable(name: "dev", arg: 1, scope: !10757, file: !1588, line: 419, type: !1493)
!10760 = !DILocalVariable(name: "cfg", arg: 2, scope: !10757, file: !1588, line: 420, type: !1520)
!10761 = !DILocalVariable(name: "config", scope: !10757, file: !1588, line: 422, type: !10640)
!10762 = !DILocalVariable(name: "data", scope: !10757, file: !1588, line: 423, type: !10763)
!10763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!10764 = !DILocalVariable(name: "parity", scope: !10757, file: !1588, line: 424, type: !6550)
!10765 = !DILocalVariable(name: "stopbits", scope: !10757, file: !1588, line: 425, type: !6550)
!10766 = !DILocalVariable(name: "databits", scope: !10757, file: !1588, line: 426, type: !6550)
!10767 = !DILocalVariable(name: "flowctrl", scope: !10757, file: !1588, line: 428, type: !6550)
!10768 = !DILocation(line: 0, scope: !10757)
!10769 = !DILocation(line: 422, column: 48, scope: !10757)
!10770 = !DILocation(line: 423, column: 38, scope: !10757)
!10771 = !DILocation(line: 424, column: 56, scope: !10757)
!10772 = !DILocation(line: 424, column: 51, scope: !10757)
!10773 = !DILocation(line: 424, column: 26, scope: !10757)
!10774 = !DILocation(line: 425, column: 60, scope: !10757)
!10775 = !DILocation(line: 425, column: 55, scope: !10757)
!10776 = !DILocation(line: 425, column: 28, scope: !10757)
!10777 = !DILocation(line: 426, column: 60, scope: !10757)
!10778 = !DILocation(line: 426, column: 55, scope: !10757)
!10779 = !DILocation(line: 426, column: 28, scope: !10757)
!10780 = !DILocation(line: 428, column: 58, scope: !10757)
!10781 = !DILocation(line: 428, column: 53, scope: !10757)
!10782 = !DILocation(line: 428, column: 28, scope: !10757)
!10783 = !DILocation(line: 431, column: 44, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 431, column: 6)
!10785 = !DILocation(line: 438, column: 22, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 437, column: 6)
!10787 = !DILocation(line: 437, column: 6, scope: !10757)
!10788 = !DILocation(line: 448, column: 6, scope: !10757)
!10789 = !DILocation(line: 465, column: 47, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 465, column: 6)
!10791 = !DILocation(line: 475, column: 21, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 475, column: 6)
!10793 = !DILocation(line: 475, column: 6, scope: !10757)
!10794 = !DILocation(line: 476, column: 8, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !1588, line: 476, column: 7)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !1588, line: 475, column: 49)
!10797 = !DILocation(line: 477, column: 34, scope: !10795)
!10798 = !DILocation(line: 476, column: 7, scope: !10796)
!10799 = !DILocation(line: 482, column: 27, scope: !10757)
!10800 = !DILocation(line: 482, column: 2, scope: !10757)
!10801 = !DILocation(line: 484, column: 16, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 484, column: 6)
!10803 = !DILocation(line: 484, column: 13, scope: !10802)
!10804 = !DILocation(line: 484, column: 6, scope: !10757)
!10805 = !DILocation(line: 485, column: 3, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10802, file: !1588, line: 484, column: 44)
!10807 = !DILocation(line: 486, column: 2, scope: !10806)
!10808 = !DILocation(line: 488, column: 18, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 488, column: 6)
!10810 = !DILocation(line: 488, column: 15, scope: !10809)
!10811 = !DILocation(line: 488, column: 6, scope: !10757)
!10812 = !DILocation(line: 489, column: 3, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10809, file: !1588, line: 488, column: 48)
!10814 = !DILocation(line: 490, column: 2, scope: !10813)
!10815 = !DILocation(line: 492, column: 18, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 492, column: 6)
!10817 = !DILocation(line: 492, column: 15, scope: !10816)
!10818 = !DILocation(line: 492, column: 6, scope: !10757)
!10819 = !DILocation(line: 493, column: 3, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !1588, line: 492, column: 48)
!10821 = !DILocation(line: 494, column: 2, scope: !10820)
!10822 = !DILocation(line: 496, column: 18, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 496, column: 6)
!10824 = !DILocation(line: 496, column: 15, scope: !10823)
!10825 = !DILocation(line: 496, column: 6, scope: !10757)
!10826 = !DILocation(line: 497, column: 3, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10823, file: !1588, line: 496, column: 46)
!10828 = !DILocation(line: 498, column: 2, scope: !10827)
!10829 = !DILocation(line: 500, column: 11, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10757, file: !1588, line: 500, column: 6)
!10831 = !DILocation(line: 500, column: 29, scope: !10830)
!10832 = !DILocation(line: 500, column: 20, scope: !10830)
!10833 = !DILocation(line: 500, column: 6, scope: !10757)
!10834 = !DILocation(line: 501, column: 3, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !1588, line: 500, column: 40)
!10836 = !DILocation(line: 502, column: 26, scope: !10835)
!10837 = !DILocation(line: 502, column: 19, scope: !10835)
!10838 = !DILocation(line: 503, column: 2, scope: !10835)
!10839 = !DILocation(line: 505, column: 26, scope: !10757)
!10840 = !DILocation(line: 505, column: 2, scope: !10757)
!10841 = !DILocation(line: 506, column: 2, scope: !10757)
!10842 = !DILocation(line: 507, column: 1, scope: !10757)
!10843 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1588, file: !1588, line: 509, type: !1531, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10844)
!10844 = !{!10845, !10846, !10847}
!10845 = !DILocalVariable(name: "dev", arg: 1, scope: !10843, file: !1588, line: 509, type: !1493)
!10846 = !DILocalVariable(name: "cfg", arg: 2, scope: !10843, file: !1588, line: 510, type: !1533)
!10847 = !DILocalVariable(name: "data", scope: !10843, file: !1588, line: 512, type: !10763)
!10848 = !DILocation(line: 0, scope: !10843)
!10849 = !DILocation(line: 512, column: 38, scope: !10843)
!10850 = !DILocation(line: 514, column: 24, scope: !10843)
!10851 = !DILocation(line: 514, column: 7, scope: !10843)
!10852 = !DILocation(line: 514, column: 16, scope: !10843)
!10853 = !DILocation(line: 515, column: 41, scope: !10843)
!10854 = !{i32 0, i32 1537}
!10855 = !DILocation(line: 515, column: 16, scope: !10843)
!10856 = !DILocation(line: 515, column: 7, scope: !10843)
!10857 = !DILocation(line: 515, column: 14, scope: !10843)
!10858 = !DILocation(line: 517, column: 3, scope: !10843)
!10859 = !{i32 0, i32 12289}
!10860 = !DILocation(line: 516, column: 19, scope: !10843)
!10861 = !DILocation(line: 516, column: 7, scope: !10843)
!10862 = !DILocation(line: 516, column: 17, scope: !10843)
!10863 = !DILocation(line: 519, column: 3, scope: !10843)
!10864 = !DILocation(line: 519, column: 33, scope: !10843)
!10865 = !DILocation(line: 518, column: 19, scope: !10843)
!10866 = !DILocation(line: 518, column: 7, scope: !10843)
!10867 = !DILocation(line: 518, column: 17, scope: !10843)
!10868 = !DILocation(line: 521, column: 3, scope: !10843)
!10869 = !{i32 0, i32 769}
!10870 = !DILocation(line: 520, column: 19, scope: !10843)
!10871 = !DILocation(line: 520, column: 7, scope: !10843)
!10872 = !DILocation(line: 520, column: 17, scope: !10843)
!10873 = !DILocation(line: 522, column: 2, scope: !10843)
!10874 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1588, file: !1588, line: 205, type: !10875, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!152, !1493}
!10877 = !{!10878, !10879}
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10874, file: !1588, line: 205, type: !1493)
!10879 = !DILocalVariable(name: "config", scope: !10874, file: !1588, line: 207, type: !10640)
!10880 = !DILocation(line: 0, scope: !10874)
!10881 = !DILocation(line: 207, column: 48, scope: !10874)
!10882 = !DILocation(line: 209, column: 36, scope: !10874)
!10883 = !DILocation(line: 209, column: 9, scope: !10874)
!10884 = !DILocation(line: 209, column: 2, scope: !10874)
!10885 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1588, file: !1588, line: 270, type: !10886, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!1459, !152}
!10888 = !{!10889}
!10889 = !DILocalVariable(name: "parity", arg: 1, scope: !10885, file: !1588, line: 270, type: !152)
!10890 = !DILocation(line: 0, scope: !10885)
!10891 = !DILocation(line: 272, column: 2, scope: !10885)
!10892 = !DILocation(line: 281, column: 1, scope: !10885)
!10893 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1588, file: !1588, line: 220, type: !10875, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10894)
!10894 = !{!10895, !10896}
!10895 = !DILocalVariable(name: "dev", arg: 1, scope: !10893, file: !1588, line: 220, type: !1493)
!10896 = !DILocalVariable(name: "config", scope: !10893, file: !1588, line: 222, type: !10640)
!10897 = !DILocation(line: 0, scope: !10893)
!10898 = !DILocation(line: 222, column: 48, scope: !10893)
!10899 = !DILocation(line: 224, column: 44, scope: !10893)
!10900 = !DILocation(line: 224, column: 9, scope: !10893)
!10901 = !DILocation(line: 224, column: 2, scope: !10893)
!10902 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1588, file: !1588, line: 304, type: !10903, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10905)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!1473, !152}
!10905 = !{!10906}
!10906 = !DILocalVariable(name: "sb", arg: 1, scope: !10902, file: !1588, line: 304, type: !152)
!10907 = !DILocation(line: 0, scope: !10902)
!10908 = !DILocation(line: 306, column: 2, scope: !10902)
!10909 = !DILocation(line: 0, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10902, file: !1588, line: 306, column: 14)
!10911 = !DILocation(line: 323, column: 1, scope: !10902)
!10912 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1588, file: !1588, line: 235, type: !10875, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10913)
!10913 = !{!10914, !10915}
!10914 = !DILocalVariable(name: "dev", arg: 1, scope: !10912, file: !1588, line: 235, type: !1493)
!10915 = !DILocalVariable(name: "config", scope: !10912, file: !1588, line: 237, type: !10640)
!10916 = !DILocation(line: 0, scope: !10912)
!10917 = !DILocation(line: 237, column: 48, scope: !10912)
!10918 = !DILocation(line: 239, column: 39, scope: !10912)
!10919 = !DILocation(line: 239, column: 9, scope: !10912)
!10920 = !DILocation(line: 239, column: 2, scope: !10912)
!10921 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1588, file: !1588, line: 355, type: !10922, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10924)
!10922 = !DISubroutineType(types: !10923)
!10923 = !{!1466, !152, !152}
!10924 = !{!10925, !10926}
!10925 = !DILocalVariable(name: "db", arg: 1, scope: !10921, file: !1588, line: 355, type: !152)
!10926 = !DILocalVariable(name: "p", arg: 2, scope: !10921, file: !1588, line: 356, type: !152)
!10927 = !DILocation(line: 0, scope: !10921)
!10928 = !DILocation(line: 358, column: 2, scope: !10921)
!10929 = !DILocation(line: 384, column: 1, scope: !10921)
!10930 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1588, file: !1588, line: 250, type: !10875, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10931)
!10931 = !{!10932, !10933}
!10932 = !DILocalVariable(name: "dev", arg: 1, scope: !10930, file: !1588, line: 250, type: !1493)
!10933 = !DILocalVariable(name: "config", scope: !10930, file: !1588, line: 252, type: !10640)
!10934 = !DILocation(line: 0, scope: !10930)
!10935 = !DILocation(line: 252, column: 48, scope: !10930)
!10936 = !DILocation(line: 254, column: 40, scope: !10930)
!10937 = !DILocation(line: 254, column: 9, scope: !10930)
!10938 = !DILocation(line: 254, column: 2, scope: !10930)
!10939 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1588, file: !1588, line: 409, type: !10940, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!1479, !152}
!10942 = !{!10943}
!10943 = !DILocalVariable(name: "fc", arg: 1, scope: !10939, file: !1588, line: 409, type: !152)
!10944 = !DILocation(line: 0, scope: !10939)
!10945 = !DILocation(line: 411, column: 9, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10939, file: !1588, line: 411, column: 6)
!10947 = !DILocation(line: 416, column: 1, scope: !10939)
!10948 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10949, file: !10949, line: 967, type: !10950, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10952)
!10949 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!152, !1534}
!10952 = !{!10953}
!10953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10948, file: !10949, line: 967, type: !1534)
!10954 = !DILocation(line: 0, scope: !10948)
!10955 = !DILocation(line: 969, column: 21, scope: !10948)
!10956 = !DILocation(line: 969, column: 3, scope: !10948)
!10957 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10949, file: !10949, line: 601, type: !10950, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10958)
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10957, file: !10949, line: 601, type: !1534)
!10960 = !DILocation(line: 0, scope: !10957)
!10961 = !DILocation(line: 603, column: 21, scope: !10957)
!10962 = !DILocation(line: 603, column: 3, scope: !10957)
!10963 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10949, file: !10949, line: 820, type: !10950, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10964)
!10964 = !{!10965}
!10965 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10963, file: !10949, line: 820, type: !1534)
!10966 = !DILocation(line: 0, scope: !10963)
!10967 = !DILocation(line: 822, column: 21, scope: !10963)
!10968 = !DILocation(line: 822, column: 3, scope: !10963)
!10969 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10949, file: !10949, line: 547, type: !10950, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10970)
!10970 = !{!10971}
!10971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10969, file: !10949, line: 547, type: !1534)
!10972 = !DILocation(line: 0, scope: !10969)
!10973 = !DILocation(line: 549, column: 21, scope: !10969)
!10974 = !DILocation(line: 549, column: 3, scope: !10969)
!10975 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1588, file: !1588, line: 257, type: !10976, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10978)
!10976 = !DISubroutineType(types: !10977)
!10977 = !{!152, !1459}
!10978 = !{!10979}
!10979 = !DILocalVariable(name: "parity", arg: 1, scope: !10975, file: !1588, line: 257, type: !1459)
!10980 = !DILocation(line: 0, scope: !10975)
!10981 = !DILocation(line: 259, column: 2, scope: !10975)
!10982 = !DILocation(line: 268, column: 1, scope: !10975)
!10983 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1588, file: !1588, line: 283, type: !10984, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!152, !1473}
!10986 = !{!10987}
!10987 = !DILocalVariable(name: "sb", arg: 1, scope: !10983, file: !1588, line: 283, type: !1473)
!10988 = !DILocation(line: 0, scope: !10983)
!10989 = !DILocation(line: 285, column: 2, scope: !10983)
!10990 = !DILocation(line: 0, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10983, file: !1588, line: 285, column: 14)
!10992 = !DILocation(line: 302, column: 1, scope: !10983)
!10993 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1588, file: !1588, line: 325, type: !10994, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !10996)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{!152, !1466, !1459}
!10996 = !{!10997, !10998}
!10997 = !DILocalVariable(name: "db", arg: 1, scope: !10993, file: !1588, line: 325, type: !1466)
!10998 = !DILocalVariable(name: "p", arg: 2, scope: !10993, file: !1588, line: 326, type: !1459)
!10999 = !DILocation(line: 0, scope: !10993)
!11000 = !DILocation(line: 328, column: 2, scope: !10993)
!11001 = !DILocation(line: 353, column: 1, scope: !10993)
!11002 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1588, file: !1588, line: 393, type: !11003, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!152, !1479}
!11005 = !{!11006}
!11006 = !DILocalVariable(name: "fc", arg: 1, scope: !11002, file: !1588, line: 393, type: !1479)
!11007 = !DILocation(line: 0, scope: !11002)
!11008 = !DILocation(line: 395, column: 9, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11002, file: !1588, line: 395, column: 6)
!11010 = !DILocation(line: 400, column: 1, scope: !11002)
!11011 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10949, file: !10949, line: 424, type: !11012, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11014)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{null, !1534}
!11014 = !{!11015}
!11015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11011, file: !10949, line: 424, type: !1534)
!11016 = !DILocation(line: 0, scope: !11011)
!11017 = !DILocation(line: 426, column: 3, scope: !11011)
!11018 = !DILocation(line: 427, column: 1, scope: !11011)
!11019 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1588, file: !1588, line: 197, type: !11020, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11022)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{null, !1493, !152}
!11022 = !{!11023, !11024, !11025}
!11023 = !DILocalVariable(name: "dev", arg: 1, scope: !11019, file: !1588, line: 197, type: !1493)
!11024 = !DILocalVariable(name: "parity", arg: 2, scope: !11019, file: !1588, line: 198, type: !152)
!11025 = !DILocalVariable(name: "config", scope: !11019, file: !1588, line: 200, type: !10640)
!11026 = !DILocation(line: 0, scope: !11019)
!11027 = !DILocation(line: 200, column: 48, scope: !11019)
!11028 = !DILocation(line: 202, column: 29, scope: !11019)
!11029 = !DILocation(line: 202, column: 2, scope: !11019)
!11030 = !DILocation(line: 203, column: 1, scope: !11019)
!11031 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1588, file: !1588, line: 212, type: !11020, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11032)
!11032 = !{!11033, !11034, !11035}
!11033 = !DILocalVariable(name: "dev", arg: 1, scope: !11031, file: !1588, line: 212, type: !1493)
!11034 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11031, file: !1588, line: 213, type: !152)
!11035 = !DILocalVariable(name: "config", scope: !11031, file: !1588, line: 215, type: !10640)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 215, column: 48, scope: !11031)
!11038 = !DILocation(line: 217, column: 37, scope: !11031)
!11039 = !DILocation(line: 217, column: 2, scope: !11031)
!11040 = !DILocation(line: 218, column: 1, scope: !11031)
!11041 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1588, file: !1588, line: 227, type: !11020, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11042)
!11042 = !{!11043, !11044, !11045}
!11043 = !DILocalVariable(name: "dev", arg: 1, scope: !11041, file: !1588, line: 227, type: !1493)
!11044 = !DILocalVariable(name: "databits", arg: 2, scope: !11041, file: !1588, line: 228, type: !152)
!11045 = !DILocalVariable(name: "config", scope: !11041, file: !1588, line: 230, type: !10640)
!11046 = !DILocation(line: 0, scope: !11041)
!11047 = !DILocation(line: 230, column: 48, scope: !11041)
!11048 = !DILocation(line: 232, column: 32, scope: !11041)
!11049 = !DILocation(line: 232, column: 2, scope: !11041)
!11050 = !DILocation(line: 233, column: 1, scope: !11041)
!11051 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1588, file: !1588, line: 242, type: !11020, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11052)
!11052 = !{!11053, !11054, !11055}
!11053 = !DILocalVariable(name: "dev", arg: 1, scope: !11051, file: !1588, line: 242, type: !1493)
!11054 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11051, file: !1588, line: 243, type: !152)
!11055 = !DILocalVariable(name: "config", scope: !11051, file: !1588, line: 245, type: !10640)
!11056 = !DILocation(line: 0, scope: !11051)
!11057 = !DILocation(line: 245, column: 48, scope: !11051)
!11058 = !DILocation(line: 247, column: 33, scope: !11051)
!11059 = !DILocation(line: 247, column: 2, scope: !11051)
!11060 = !DILocation(line: 248, column: 1, scope: !11051)
!11061 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1588, file: !1588, line: 107, type: !11020, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11062)
!11062 = !{!11063, !11064, !11065, !11066, !11067}
!11063 = !DILocalVariable(name: "dev", arg: 1, scope: !11061, file: !1588, line: 107, type: !1493)
!11064 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11061, file: !1588, line: 107, type: !152)
!11065 = !DILocalVariable(name: "config", scope: !11061, file: !1588, line: 109, type: !10640)
!11066 = !DILocalVariable(name: "data", scope: !11061, file: !1588, line: 110, type: !10763)
!11067 = !DILocalVariable(name: "clock_rate", scope: !11061, file: !1588, line: 112, type: !152)
!11068 = !DILocation(line: 0, scope: !11061)
!11069 = !DILocation(line: 109, column: 48, scope: !11061)
!11070 = !DILocation(line: 110, column: 38, scope: !11061)
!11071 = !DILocation(line: 112, column: 2, scope: !11061)
!11072 = !DILocation(line: 123, column: 36, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1588, line: 123, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !1588, line: 122, column: 9)
!11075 = distinct !DILexicalBlock(scope: !11061, file: !1588, line: 115, column: 6)
!11076 = !DILocation(line: 124, column: 42, scope: !11073)
!11077 = !DILocation(line: 123, column: 7, scope: !11073)
!11078 = !DILocation(line: 125, column: 22, scope: !11073)
!11079 = !DILocation(line: 123, column: 7, scope: !11074)
!11080 = !DILocation(line: 126, column: 4, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !1588, line: 126, column: 4)
!11082 = distinct !DILexicalBlock(scope: !11083, file: !1588, line: 126, column: 4)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !1588, line: 126, column: 4)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !1588, line: 126, column: 4)
!11085 = distinct !DILexicalBlock(scope: !11073, file: !1588, line: 125, column: 27)
!11086 = !DILocation(line: 127, column: 4, scope: !11085)
!11087 = !DILocation(line: 176, column: 36, scope: !11061)
!11088 = !DILocation(line: 176, column: 3, scope: !11061)
!11089 = !DILocation(line: 179, column: 32, scope: !11061)
!11090 = !DILocation(line: 180, column: 10, scope: !11061)
!11091 = !DILocation(line: 179, column: 3, scope: !11061)
!11092 = !DILocation(line: 189, column: 3, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !1588, line: 189, column: 3)
!11094 = distinct !DILexicalBlock(scope: !11061, file: !1588, line: 189, column: 3)
!11095 = !DILocation(line: 189, column: 3, scope: !11094)
!11096 = !DILocation(line: 189, column: 3, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11093, file: !1588, line: 189, column: 3)
!11098 = !DILocation(line: 195, column: 1, scope: !11061)
!11099 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10949, file: !10949, line: 410, type: !11012, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11100)
!11100 = !{!11101}
!11101 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11099, file: !10949, line: 410, type: !1534)
!11102 = !DILocation(line: 0, scope: !11099)
!11103 = !DILocation(line: 412, column: 3, scope: !11099)
!11104 = !DILocation(line: 413, column: 1, scope: !11099)
!11105 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !948, file: !948, line: 216, type: !1567, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11106)
!11106 = !{!11107, !11108, !11109, !11110}
!11107 = !DILocalVariable(name: "dev", arg: 1, scope: !11105, file: !948, line: 216, type: !1493)
!11108 = !DILocalVariable(name: "sys", arg: 2, scope: !11105, file: !948, line: 217, type: !1043)
!11109 = !DILocalVariable(name: "rate", arg: 3, scope: !11105, file: !948, line: 218, type: !999)
!11110 = !DILocalVariable(name: "api", scope: !11105, file: !948, line: 220, type: !1545)
!11111 = !DILocation(line: 0, scope: !11105)
!11112 = !DILocation(line: 221, column: 49, scope: !11105)
!11113 = !DILocation(line: 223, column: 11, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11105, file: !948, line: 223, column: 6)
!11115 = !DILocation(line: 223, column: 20, scope: !11114)
!11116 = !DILocation(line: 223, column: 6, scope: !11105)
!11117 = !DILocation(line: 227, column: 9, scope: !11105)
!11118 = !DILocation(line: 227, column: 2, scope: !11105)
!11119 = !DILocation(line: 228, column: 1, scope: !11105)
!11120 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6032, file: !6032, line: 175, type: !6033, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11121)
!11121 = !{!11122}
!11122 = !DILocalVariable(name: "level", arg: 1, scope: !11120, file: !6032, line: 175, type: !107)
!11123 = !DILocation(line: 0, scope: !11120)
!11124 = !DILocation(line: 177, column: 2, scope: !11120)
!11125 = !DILocation(line: 189, column: 1, scope: !11120)
!11126 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10949, file: !10949, line: 615, type: !11127, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11129)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{null, !1534, !152}
!11129 = !{!11130, !11131}
!11130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11126, file: !10949, line: 615, type: !1534)
!11131 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11126, file: !10949, line: 615, type: !152)
!11132 = !DILocation(line: 0, scope: !11126)
!11133 = !DILocation(line: 617, column: 3, scope: !11126)
!11134 = !DILocation(line: 618, column: 1, scope: !11126)
!11135 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10949, file: !10949, line: 1020, type: !11136, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11138)
!11136 = !DISubroutineType(types: !11137)
!11137 = !{null, !1534, !152, !152, !152}
!11138 = !{!11139, !11140, !11141, !11142}
!11139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11135, file: !10949, line: 1020, type: !1534)
!11140 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11135, file: !10949, line: 1020, type: !152)
!11141 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11135, file: !10949, line: 1020, type: !152)
!11142 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11135, file: !10949, line: 1021, type: !152)
!11143 = !DILocation(line: 0, scope: !11135)
!11144 = !DILocation(line: 1029, column: 30, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !10949, line: 1028, column: 3)
!11146 = distinct !DILexicalBlock(scope: !11135, file: !10949, line: 1023, column: 7)
!11147 = !DILocation(line: 1029, column: 19, scope: !11145)
!11148 = !DILocation(line: 1029, column: 13, scope: !11145)
!11149 = !DILocation(line: 1029, column: 17, scope: !11145)
!11150 = !DILocation(line: 1031, column: 1, scope: !11135)
!11151 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10949, file: !10949, line: 949, type: !11127, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11152)
!11152 = !{!11153, !11154}
!11153 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11151, file: !10949, line: 949, type: !1534)
!11154 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11151, file: !10949, line: 949, type: !152)
!11155 = !DILocation(line: 0, scope: !11151)
!11156 = !DILocation(line: 951, column: 3, scope: !11151)
!11157 = !DILocation(line: 952, column: 1, scope: !11151)
!11158 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10949, file: !10949, line: 588, type: !11127, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11159)
!11159 = !{!11160, !11161}
!11160 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11158, file: !10949, line: 588, type: !1534)
!11161 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11158, file: !10949, line: 588, type: !152)
!11162 = !DILocation(line: 0, scope: !11158)
!11163 = !DILocation(line: 590, column: 3, scope: !11158)
!11164 = !DILocation(line: 591, column: 1, scope: !11158)
!11165 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10949, file: !10949, line: 805, type: !11127, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11166)
!11166 = !{!11167, !11168}
!11167 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11165, file: !10949, line: 805, type: !1534)
!11168 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11165, file: !10949, line: 805, type: !152)
!11169 = !DILocation(line: 0, scope: !11165)
!11170 = !DILocation(line: 807, column: 3, scope: !11165)
!11171 = !DILocation(line: 808, column: 1, scope: !11165)
!11172 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10949, file: !10949, line: 532, type: !11127, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11173)
!11173 = !{!11174, !11175}
!11174 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11172, file: !10949, line: 532, type: !1534)
!11175 = !DILocalVariable(name: "Parity", arg: 2, scope: !11172, file: !10949, line: 532, type: !152)
!11176 = !DILocation(line: 0, scope: !11172)
!11177 = !DILocation(line: 534, column: 3, scope: !11172)
!11178 = !DILocation(line: 535, column: 1, scope: !11172)
!11179 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10949, file: !10949, line: 1770, type: !10950, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11180)
!11180 = !{!11181}
!11181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11179, file: !10949, line: 1770, type: !1534)
!11182 = !DILocation(line: 0, scope: !11179)
!11183 = !DILocation(line: 1772, column: 11, scope: !11179)
!11184 = !DILocation(line: 1772, column: 46, scope: !11179)
!11185 = !DILocation(line: 1772, column: 3, scope: !11179)
!11186 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10949, file: !10949, line: 1737, type: !10950, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11187)
!11187 = !{!11188}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11186, file: !10949, line: 1737, type: !1534)
!11189 = !DILocation(line: 0, scope: !11186)
!11190 = !DILocation(line: 1739, column: 11, scope: !11186)
!11191 = !DILocation(line: 1739, column: 3, scope: !11186)
!11192 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10949, file: !10949, line: 1748, type: !10950, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11193)
!11193 = !{!11194}
!11194 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11192, file: !10949, line: 1748, type: !1534)
!11195 = !DILocation(line: 0, scope: !11192)
!11196 = !DILocation(line: 1750, column: 11, scope: !11192)
!11197 = !DILocation(line: 1750, column: 45, scope: !11192)
!11198 = !DILocation(line: 1750, column: 3, scope: !11192)
!11199 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10949, file: !10949, line: 1827, type: !10950, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11200)
!11200 = !{!11201}
!11201 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11199, file: !10949, line: 1827, type: !1534)
!11202 = !DILocation(line: 0, scope: !11199)
!11203 = !DILocation(line: 1829, column: 11, scope: !11199)
!11204 = !DILocation(line: 1829, column: 46, scope: !11199)
!11205 = !DILocation(line: 1829, column: 3, scope: !11199)
!11206 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10949, file: !10949, line: 1992, type: !11012, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11207)
!11207 = !{!11208}
!11208 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11206, file: !10949, line: 1992, type: !1534)
!11209 = !DILocation(line: 0, scope: !11206)
!11210 = !DILocation(line: 1994, column: 3, scope: !11206)
!11211 = !DILocation(line: 1995, column: 1, scope: !11206)
!11212 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10949, file: !10949, line: 1934, type: !11012, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11213)
!11213 = !{!11214, !11215}
!11214 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11212, file: !10949, line: 1934, type: !1534)
!11215 = !DILocalVariable(name: "tmpreg", scope: !11212, file: !10949, line: 1936, type: !227)
!11216 = !DILocation(line: 0, scope: !11212)
!11217 = !DILocation(line: 1936, column: 3, scope: !11212)
!11218 = !DILocation(line: 1936, column: 17, scope: !11212)
!11219 = !DILocation(line: 1937, column: 20, scope: !11212)
!11220 = !DILocation(line: 1937, column: 10, scope: !11212)
!11221 = !DILocation(line: 1938, column: 10, scope: !11212)
!11222 = !DILocation(line: 1939, column: 20, scope: !11212)
!11223 = !DILocation(line: 1939, column: 10, scope: !11212)
!11224 = !DILocation(line: 1940, column: 10, scope: !11212)
!11225 = !DILocation(line: 1941, column: 1, scope: !11212)
!11226 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10949, file: !10949, line: 1877, type: !11012, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11227)
!11227 = !{!11228, !11229}
!11228 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11226, file: !10949, line: 1877, type: !1534)
!11229 = !DILocalVariable(name: "tmpreg", scope: !11226, file: !10949, line: 1879, type: !227)
!11230 = !DILocation(line: 0, scope: !11226)
!11231 = !DILocation(line: 1879, column: 3, scope: !11226)
!11232 = !DILocation(line: 1879, column: 17, scope: !11226)
!11233 = !DILocation(line: 1880, column: 20, scope: !11226)
!11234 = !DILocation(line: 1880, column: 10, scope: !11226)
!11235 = !DILocation(line: 1881, column: 10, scope: !11226)
!11236 = !DILocation(line: 1882, column: 20, scope: !11226)
!11237 = !DILocation(line: 1882, column: 10, scope: !11226)
!11238 = !DILocation(line: 1883, column: 10, scope: !11226)
!11239 = !DILocation(line: 1884, column: 1, scope: !11226)
!11240 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10949, file: !10949, line: 1896, type: !11012, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11241)
!11241 = !{!11242, !11243}
!11242 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11240, file: !10949, line: 1896, type: !1534)
!11243 = !DILocalVariable(name: "tmpreg", scope: !11240, file: !10949, line: 1898, type: !227)
!11244 = !DILocation(line: 0, scope: !11240)
!11245 = !DILocation(line: 1898, column: 3, scope: !11240)
!11246 = !DILocation(line: 1898, column: 17, scope: !11240)
!11247 = !DILocation(line: 1899, column: 20, scope: !11240)
!11248 = !DILocation(line: 1899, column: 10, scope: !11240)
!11249 = !DILocation(line: 1900, column: 10, scope: !11240)
!11250 = !DILocation(line: 1901, column: 20, scope: !11240)
!11251 = !DILocation(line: 1901, column: 10, scope: !11240)
!11252 = !DILocation(line: 1902, column: 10, scope: !11240)
!11253 = !DILocation(line: 1903, column: 1, scope: !11240)
!11254 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10949, file: !10949, line: 1915, type: !11012, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11255)
!11255 = !{!11256, !11257}
!11256 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11254, file: !10949, line: 1915, type: !1534)
!11257 = !DILocalVariable(name: "tmpreg", scope: !11254, file: !10949, line: 1917, type: !227)
!11258 = !DILocation(line: 0, scope: !11254)
!11259 = !DILocation(line: 1917, column: 3, scope: !11254)
!11260 = !DILocation(line: 1917, column: 17, scope: !11254)
!11261 = !DILocation(line: 1918, column: 20, scope: !11254)
!11262 = !DILocation(line: 1918, column: 10, scope: !11254)
!11263 = !DILocation(line: 1919, column: 10, scope: !11254)
!11264 = !DILocation(line: 1920, column: 20, scope: !11254)
!11265 = !DILocation(line: 1920, column: 10, scope: !11254)
!11266 = !DILocation(line: 1921, column: 10, scope: !11254)
!11267 = !DILocation(line: 1922, column: 1, scope: !11254)
!11268 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10949, file: !10949, line: 1814, type: !10950, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11269)
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11268, file: !10949, line: 1814, type: !1534)
!11271 = !DILocation(line: 0, scope: !11268)
!11272 = !DILocation(line: 1816, column: 11, scope: !11268)
!11273 = !DILocation(line: 1816, column: 46, scope: !11268)
!11274 = !DILocation(line: 1816, column: 3, scope: !11268)
!11275 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10949, file: !10949, line: 2426, type: !11276, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{null, !1534, !195}
!11278 = !{!11279, !11280}
!11279 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11275, file: !10949, line: 2426, type: !1534)
!11280 = !DILocalVariable(name: "Value", arg: 2, scope: !11275, file: !10949, line: 2426, type: !195)
!11281 = !DILocation(line: 0, scope: !11275)
!11282 = !DILocation(line: 2428, column: 16, scope: !11275)
!11283 = !DILocation(line: 2428, column: 11, scope: !11275)
!11284 = !DILocation(line: 2428, column: 14, scope: !11275)
!11285 = !DILocation(line: 2429, column: 1, scope: !11275)
!11286 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10949, file: !10949, line: 1792, type: !10950, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11287)
!11287 = !{!11288}
!11288 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11286, file: !10949, line: 1792, type: !1534)
!11289 = !DILocation(line: 0, scope: !11286)
!11290 = !DILocation(line: 1794, column: 11, scope: !11286)
!11291 = !DILocation(line: 1794, column: 47, scope: !11286)
!11292 = !DILocation(line: 1794, column: 3, scope: !11286)
!11293 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10949, file: !10949, line: 2403, type: !11294, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11296)
!11294 = !DISubroutineType(types: !11295)
!11295 = !{!195, !1534}
!11296 = !{!11297}
!11297 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11293, file: !10949, line: 2403, type: !1534)
!11298 = !DILocation(line: 0, scope: !11293)
!11299 = !DILocation(line: 2405, column: 20, scope: !11293)
!11300 = !DILocation(line: 2405, column: 10, scope: !11293)
!11301 = !DILocation(line: 2405, column: 3, scope: !11293)
!11302 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1588, file: !1588, line: 1583, type: !1514, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11303)
!11303 = !{!11304, !11305, !11306, !11307, !11308, !11309}
!11304 = !DILocalVariable(name: "dev", arg: 1, scope: !11302, file: !1588, line: 1583, type: !1493)
!11305 = !DILocalVariable(name: "config", scope: !11302, file: !1588, line: 1585, type: !10640)
!11306 = !DILocalVariable(name: "data", scope: !11302, file: !1588, line: 1586, type: !10763)
!11307 = !DILocalVariable(name: "ll_parity", scope: !11302, file: !1588, line: 1587, type: !152)
!11308 = !DILocalVariable(name: "ll_datawidth", scope: !11302, file: !1588, line: 1588, type: !152)
!11309 = !DILocalVariable(name: "err", scope: !11302, file: !1588, line: 1589, type: !107)
!11310 = !DILocation(line: 0, scope: !11302)
!11311 = !DILocation(line: 1585, column: 48, scope: !11302)
!11312 = !DILocation(line: 1586, column: 38, scope: !11302)
!11313 = !DILocation(line: 1591, column: 2, scope: !11302)
!11314 = !DILocation(line: 1593, column: 29, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1593, column: 6)
!11316 = !DILocation(line: 1593, column: 7, scope: !11315)
!11317 = !DILocation(line: 1593, column: 6, scope: !11302)
!11318 = !DILocation(line: 1594, column: 3, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !1588, line: 1594, column: 3)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !1588, line: 1594, column: 3)
!11321 = distinct !DILexicalBlock(scope: !11322, file: !1588, line: 1594, column: 3)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !1588, line: 1594, column: 3)
!11323 = distinct !DILexicalBlock(scope: !11315, file: !1588, line: 1593, column: 37)
!11324 = !DILocation(line: 1595, column: 3, scope: !11323)
!11325 = !DILocation(line: 1599, column: 31, scope: !11302)
!11326 = !DILocation(line: 1599, column: 71, scope: !11302)
!11327 = !DILocation(line: 1599, column: 8, scope: !11302)
!11328 = !DILocation(line: 1600, column: 10, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1600, column: 6)
!11330 = !DILocation(line: 1600, column: 6, scope: !11302)
!11331 = !DILocation(line: 1601, column: 3, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !1588, line: 1601, column: 3)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !1588, line: 1601, column: 3)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1588, line: 1601, column: 3)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1588, line: 1601, column: 3)
!11336 = distinct !DILexicalBlock(scope: !11329, file: !1588, line: 1600, column: 16)
!11337 = !DILocation(line: 1602, column: 3, scope: !11336)
!11338 = !DILocation(line: 1616, column: 36, scope: !11302)
!11339 = !DILocation(line: 1616, column: 8, scope: !11302)
!11340 = !DILocation(line: 1617, column: 10, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1617, column: 6)
!11342 = !DILocation(line: 1617, column: 6, scope: !11302)
!11343 = !DILocation(line: 1621, column: 27, scope: !11302)
!11344 = !DILocation(line: 1621, column: 2, scope: !11302)
!11345 = !DILocation(line: 1624, column: 40, scope: !11302)
!11346 = !DILocation(line: 1624, column: 2, scope: !11302)
!11347 = !DILocation(line: 1630, column: 14, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1630, column: 6)
!11349 = !DILocation(line: 1630, column: 6, scope: !11302)
!11350 = !DILocation(line: 1640, column: 4, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !1588, line: 1640, column: 4)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !1588, line: 1640, column: 4)
!11353 = distinct !DILexicalBlock(scope: !11354, file: !1588, line: 1640, column: 4)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !1588, line: 1640, column: 4)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !1588, line: 1639, column: 28)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !1588, line: 1639, column: 7)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !1588, line: 1638, column: 9)
!11358 = distinct !DILexicalBlock(scope: !11348, file: !1588, line: 1634, column: 13)
!11359 = !DILocation(line: 0, scope: !11348)
!11360 = !DILocation(line: 1649, column: 35, scope: !11302)
!11361 = !DILocation(line: 1649, column: 2, scope: !11302)
!11362 = !DILocation(line: 1654, column: 14, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1654, column: 6)
!11364 = !DILocation(line: 1654, column: 6, scope: !11302)
!11365 = !DILocation(line: 1655, column: 3, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11363, file: !1588, line: 1654, column: 31)
!11367 = !DILocation(line: 1656, column: 2, scope: !11366)
!11368 = !DILocation(line: 1659, column: 37, scope: !11302)
!11369 = !DILocation(line: 1659, column: 2, scope: !11302)
!11370 = !DILocation(line: 1662, column: 14, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11302, file: !1588, line: 1662, column: 6)
!11372 = !DILocation(line: 1662, column: 6, scope: !11302)
!11373 = !DILocation(line: 1663, column: 37, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11371, file: !1588, line: 1662, column: 27)
!11375 = !DILocation(line: 1663, column: 3, scope: !11374)
!11376 = !DILocation(line: 1664, column: 2, scope: !11374)
!11377 = !DILocation(line: 1684, column: 26, scope: !11302)
!11378 = !DILocation(line: 1684, column: 2, scope: !11302)
!11379 = !DILocation(line: 1722, column: 2, scope: !11302)
!11380 = !DILocation(line: 1724, column: 1, scope: !11302)
!11381 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1588, file: !1588, line: 651, type: !11382, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{null, !1493}
!11384 = !{!11385, !11386, !11387}
!11385 = !DILocalVariable(name: "dev", arg: 1, scope: !11381, file: !1588, line: 651, type: !1493)
!11386 = !DILocalVariable(name: "data", scope: !11381, file: !1588, line: 653, type: !10763)
!11387 = !DILocalVariable(name: "clk", scope: !11381, file: !1588, line: 654, type: !11388)
!11388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!11389 = !DILocation(line: 0, scope: !11381)
!11390 = !DILocation(line: 653, column: 38, scope: !11381)
!11391 = !DILocation(line: 656, column: 8, scope: !11381)
!11392 = !DILocation(line: 656, column: 14, scope: !11381)
!11393 = !DILocation(line: 657, column: 1, scope: !11381)
!11394 = distinct !DISubprogram(name: "device_is_ready", scope: !9759, file: !9759, line: 47, type: !11395, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11397)
!11395 = !DISubroutineType(types: !11396)
!11396 = !{!145, !1493}
!11397 = !{!11398}
!11398 = !DILocalVariable(name: "dev", arg: 1, scope: !11394, file: !9759, line: 47, type: !1493)
!11399 = !DILocation(line: 0, scope: !11394)
!11400 = !DILocation(line: 55, column: 2, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11394, file: !9759, line: 55, column: 2)
!11402 = !{i64 2154459198}
!11403 = !DILocation(line: 56, column: 9, scope: !11394)
!11404 = !DILocation(line: 56, column: 2, scope: !11394)
!11405 = distinct !DISubprogram(name: "clock_control_on", scope: !948, file: !948, line: 123, type: !1552, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11406)
!11406 = !{!11407, !11408, !11409}
!11407 = !DILocalVariable(name: "dev", arg: 1, scope: !11405, file: !948, line: 123, type: !1493)
!11408 = !DILocalVariable(name: "sys", arg: 2, scope: !11405, file: !948, line: 124, type: !1043)
!11409 = !DILocalVariable(name: "api", scope: !11405, file: !948, line: 126, type: !1545)
!11410 = !DILocation(line: 0, scope: !11405)
!11411 = !DILocation(line: 127, column: 49, scope: !11405)
!11412 = !DILocation(line: 129, column: 14, scope: !11405)
!11413 = !DILocation(line: 129, column: 9, scope: !11405)
!11414 = !DILocation(line: 129, column: 2, scope: !11405)
!11415 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1644, file: !1644, line: 342, type: !11416, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11418)
!11416 = !DISubroutineType(types: !11417)
!11417 = !{!107, !1641, !195}
!11418 = !{!11419, !11420, !11421, !11422}
!11419 = !DILocalVariable(name: "config", arg: 1, scope: !11415, file: !1644, line: 342, type: !1641)
!11420 = !DILocalVariable(name: "id", arg: 2, scope: !11415, file: !1644, line: 343, type: !195)
!11421 = !DILocalVariable(name: "ret", scope: !11415, file: !1644, line: 345, type: !107)
!11422 = !DILocalVariable(name: "state", scope: !11415, file: !1644, line: 346, type: !1647)
!11423 = !DILocation(line: 0, scope: !11415)
!11424 = !DILocation(line: 346, column: 2, scope: !11415)
!11425 = !DILocation(line: 348, column: 8, scope: !11415)
!11426 = !DILocation(line: 349, column: 10, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11415, file: !1644, line: 349, column: 6)
!11428 = !DILocation(line: 349, column: 6, scope: !11415)
!11429 = !DILocation(line: 353, column: 44, scope: !11415)
!11430 = !DILocation(line: 353, column: 9, scope: !11415)
!11431 = !DILocation(line: 353, column: 2, scope: !11415)
!11432 = !DILocation(line: 354, column: 1, scope: !11415)
!11433 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10949, file: !10949, line: 497, type: !11127, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11434)
!11434 = !{!11435, !11436, !11437}
!11435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11433, file: !10949, line: 497, type: !1534)
!11436 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11433, file: !10949, line: 497, type: !152)
!11437 = !DILocalVariable(name: "val", scope: !11438, file: !10949, line: 499, type: !152)
!11438 = distinct !DILexicalBlock(scope: !11433, file: !10949, line: 499, column: 3)
!11439 = !DILocation(line: 0, scope: !11433)
!11440 = !DILocation(line: 499, column: 3, scope: !11438)
!11441 = !DILocalVariable(name: "addr", arg: 1, scope: !11442, file: !6273, line: 476, type: !1584)
!11442 = distinct !DISubprogram(name: "__LDREXW", scope: !6273, file: !6273, line: 476, type: !11443, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11445)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{!152, !1584}
!11445 = !{!11441, !11446}
!11446 = !DILocalVariable(name: "result", scope: !11442, file: !6273, line: 478, type: !152)
!11447 = !DILocation(line: 0, scope: !11442, inlinedAt: !11448)
!11448 = distinct !DILocation(line: 499, column: 3, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11438, file: !10949, line: 499, column: 3)
!11450 = !DILocation(line: 480, column: 4, scope: !11442, inlinedAt: !11448)
!11451 = !{i64 2949734}
!11452 = !DILocation(line: 499, column: 3, scope: !11449)
!11453 = !DILocation(line: 0, scope: !11438)
!11454 = !DILocalVariable(name: "value", arg: 1, scope: !11455, file: !6273, line: 527, type: !152)
!11455 = distinct !DISubprogram(name: "__STREXW", scope: !6273, file: !6273, line: 527, type: !11456, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11458)
!11456 = !DISubroutineType(types: !11457)
!11457 = !{!152, !152, !1584}
!11458 = !{!11454, !11459, !11460}
!11459 = !DILocalVariable(name: "addr", arg: 2, scope: !11455, file: !6273, line: 527, type: !1584)
!11460 = !DILocalVariable(name: "result", scope: !11455, file: !6273, line: 529, type: !152)
!11461 = !DILocation(line: 0, scope: !11455, inlinedAt: !11462)
!11462 = distinct !DILocation(line: 499, column: 3, scope: !11438)
!11463 = !DILocation(line: 531, column: 4, scope: !11455, inlinedAt: !11462)
!11464 = !{i64 2951170}
!11465 = distinct !{!11465, !11440, !11440}
!11466 = !DILocation(line: 500, column: 1, scope: !11433)
!11467 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10949, file: !10949, line: 850, type: !11136, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11468)
!11468 = !{!11469, !11470, !11471, !11472}
!11469 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11467, file: !10949, line: 850, type: !1534)
!11470 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11467, file: !10949, line: 850, type: !152)
!11471 = !DILocalVariable(name: "Parity", arg: 3, scope: !11467, file: !10949, line: 850, type: !152)
!11472 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11467, file: !10949, line: 851, type: !152)
!11473 = !DILocation(line: 0, scope: !11467)
!11474 = !DILocation(line: 853, column: 3, scope: !11467)
!11475 = !DILocation(line: 854, column: 3, scope: !11467)
!11476 = !DILocation(line: 855, column: 1, scope: !11467)
!11477 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10949, file: !10949, line: 1337, type: !11012, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11478)
!11478 = !{!11479}
!11479 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11477, file: !10949, line: 1337, type: !1534)
!11480 = !DILocation(line: 0, scope: !11477)
!11481 = !DILocation(line: 1339, column: 3, scope: !11477)
!11482 = !DILocation(line: 1340, column: 1, scope: !11477)
!11483 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1644, file: !1644, line: 316, type: !11484, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11486)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{!107, !1641, !1647}
!11486 = !{!11487, !11488, !11489}
!11487 = !DILocalVariable(name: "config", arg: 1, scope: !11483, file: !1644, line: 317, type: !1641)
!11488 = !DILocalVariable(name: "state", arg: 2, scope: !11483, file: !1644, line: 318, type: !1647)
!11489 = !DILocalVariable(name: "reg", scope: !11483, file: !1644, line: 320, type: !22)
!11490 = !DILocation(line: 0, scope: !11483)
!11491 = !DILocation(line: 329, column: 39, scope: !11483)
!11492 = !DILocation(line: 329, column: 52, scope: !11483)
!11493 = !DILocation(line: 329, column: 9, scope: !11483)
!11494 = !DILocation(line: 329, column: 2, scope: !11483)
!11495 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11395, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "dev", arg: 1, scope: !11495, file: !247, line: 730, type: !1493)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 732, column: 9, scope: !11495)
!11500 = !DILocation(line: 732, column: 2, scope: !11495)
!11501 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1791, file: !1791, line: 270, type: !1797, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11502)
!11502 = !{!11503}
!11503 = !DILocalVariable(name: "dev", arg: 1, scope: !11501, file: !1791, line: 270, type: !1799)
!11504 = !DILocation(line: 0, scope: !11501)
!11505 = !DILocation(line: 274, column: 2, scope: !11501)
!11506 = !DILocation(line: 275, column: 12, scope: !11501)
!11507 = !DILocation(line: 276, column: 15, scope: !11501)
!11508 = !DILocation(line: 277, column: 16, scope: !11501)
!11509 = !DILocation(line: 278, column: 15, scope: !11501)
!11510 = !DILocation(line: 279, column: 16, scope: !11501)
!11511 = !DILocation(line: 282, column: 2, scope: !11501)
!11512 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6313, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11513)
!11513 = !{!11514, !11515}
!11514 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11512, file: !463, line: 1814, type: !900)
!11515 = !DILocalVariable(name: "priority", arg: 2, scope: !11512, file: !463, line: 1814, type: !152)
!11516 = !DILocation(line: 0, scope: !11512)
!11517 = !DILocation(line: 1822, column: 46, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !463, line: 1821, column: 3)
!11519 = distinct !DILexicalBlock(scope: !11512, file: !463, line: 1816, column: 7)
!11520 = !DILocation(line: 1824, column: 1, scope: !11512)
!11521 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1791, file: !1791, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11522)
!11522 = !{!11523, !11524}
!11523 = !DILocalVariable(name: "arg", arg: 1, scope: !11521, file: !1791, line: 118, type: !106)
!11524 = !DILocalVariable(name: "dticks", scope: !11521, file: !1791, line: 121, type: !152)
!11525 = !DILocation(line: 0, scope: !11521)
!11526 = !DILocation(line: 124, column: 2, scope: !11521)
!11527 = !DILocation(line: 129, column: 17, scope: !11521)
!11528 = !DILocation(line: 129, column: 14, scope: !11521)
!11529 = !DILocation(line: 130, column: 15, scope: !11521)
!11530 = !DILocation(line: 145, column: 27, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11532, file: !1791, line: 132, column: 16)
!11532 = distinct !DILexicalBlock(scope: !11521, file: !1791, line: 132, column: 6)
!11533 = !DILocation(line: 145, column: 25, scope: !11531)
!11534 = !DILocation(line: 145, column: 45, scope: !11531)
!11535 = !DILocation(line: 146, column: 30, scope: !11531)
!11536 = !DILocation(line: 146, column: 20, scope: !11531)
!11537 = !DILocation(line: 147, column: 3, scope: !11531)
!11538 = !DILocation(line: 151, column: 2, scope: !11521)
!11539 = !DILocation(line: 152, column: 1, scope: !11521)
!11540 = distinct !DISubprogram(name: "elapsed", scope: !1791, file: !1791, line: 85, type: !6360, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11541)
!11541 = !{!11542, !11543, !11544}
!11542 = !DILocalVariable(name: "val1", scope: !11540, file: !1791, line: 87, type: !152)
!11543 = !DILocalVariable(name: "ctrl", scope: !11540, file: !1791, line: 88, type: !152)
!11544 = !DILocalVariable(name: "val2", scope: !11540, file: !1791, line: 89, type: !152)
!11545 = !DILocation(line: 87, column: 27, scope: !11540)
!11546 = !DILocation(line: 0, scope: !11540)
!11547 = !DILocation(line: 88, column: 27, scope: !11540)
!11548 = !DILocation(line: 89, column: 27, scope: !11540)
!11549 = !DILocation(line: 105, column: 12, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11540, file: !1791, line: 105, column: 6)
!11551 = !DILocation(line: 106, column: 6, scope: !11550)
!11552 = !DILocation(line: 107, column: 16, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11550, file: !1791, line: 106, column: 24)
!11554 = !DILocation(line: 111, column: 18, scope: !11553)
!11555 = !DILocation(line: 112, column: 2, scope: !11553)
!11556 = !DILocation(line: 114, column: 20, scope: !11540)
!11557 = !DILocation(line: 114, column: 30, scope: !11540)
!11558 = !DILocation(line: 114, column: 28, scope: !11540)
!11559 = !DILocation(line: 114, column: 2, scope: !11540)
!11560 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1791, file: !1791, line: 154, type: !11561, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11563)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{null, !874, !145}
!11563 = !{!11564, !11565, !11566, !11567, !11568, !11569, !11570, !11575, !11576}
!11564 = !DILocalVariable(name: "ticks", arg: 1, scope: !11560, file: !1791, line: 154, type: !874)
!11565 = !DILocalVariable(name: "idle", arg: 2, scope: !11560, file: !1791, line: 154, type: !145)
!11566 = !DILocalVariable(name: "delay", scope: !11560, file: !1791, line: 169, type: !152)
!11567 = !DILocalVariable(name: "val1", scope: !11560, file: !1791, line: 170, type: !152)
!11568 = !DILocalVariable(name: "val2", scope: !11560, file: !1791, line: 170, type: !152)
!11569 = !DILocalVariable(name: "last_load_", scope: !11560, file: !1791, line: 171, type: !152)
!11570 = !DILocalVariable(name: "key", scope: !11560, file: !1791, line: 176, type: !11571)
!11571 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11572)
!11572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11573)
!11573 = !{!11574}
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11572, file: !420, line: 33, baseType: !107, size: 32)
!11575 = !DILocalVariable(name: "pending", scope: !11560, file: !1791, line: 178, type: !152)
!11576 = !DILocalVariable(name: "unannounced", scope: !11560, file: !1791, line: 185, type: !152)
!11577 = !DILocation(line: 0, scope: !11560)
!11578 = !DILocation(line: 162, column: 49, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11560, file: !1791, line: 162, column: 6)
!11580 = !DILocation(line: 163, column: 17, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !1791, line: 162, column: 78)
!11582 = !DILocation(line: 164, column: 13, scope: !11581)
!11583 = !DILocation(line: 165, column: 3, scope: !11581)
!11584 = !DILocation(line: 171, column: 24, scope: !11560)
!11585 = !DILocation(line: 173, column: 10, scope: !11560)
!11586 = !DILocation(line: 174, column: 10, scope: !11560)
!11587 = !DILocalVariable(name: "l", arg: 1, scope: !11588, file: !420, line: 136, type: !11591)
!11588 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11589, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11592)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!11571, !11591}
!11591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!11592 = !{!11587, !11593}
!11593 = !DILocalVariable(name: "k", scope: !11588, file: !420, line: 139, type: !11571)
!11594 = !DILocation(line: 0, scope: !11588, inlinedAt: !11595)
!11595 = distinct !DILocation(line: 176, column: 25, scope: !11560)
!11596 = !DILocation(line: 55, column: 2, scope: !11597, inlinedAt: !11601)
!11597 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11598)
!11598 = !{!11599, !11600}
!11599 = !DILocalVariable(name: "key", scope: !11597, file: !5954, line: 44, type: !32)
!11600 = !DILocalVariable(name: "tmp", scope: !11597, file: !5954, line: 53, type: !32)
!11601 = distinct !DILocation(line: 145, column: 10, scope: !11588, inlinedAt: !11595)
!11602 = !{i64 2032377}
!11603 = !DILocation(line: 0, scope: !11597, inlinedAt: !11601)
!11604 = !DILocation(line: 148, column: 2, scope: !11605, inlinedAt: !11595)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !420, line: 148, column: 2)
!11606 = distinct !DILexicalBlock(scope: !11588, file: !420, line: 148, column: 2)
!11607 = !DILocation(line: 148, column: 2, scope: !11606, inlinedAt: !11595)
!11608 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11595)
!11609 = distinct !DILexicalBlock(scope: !11605, file: !420, line: 148, column: 2)
!11610 = !DILocation(line: 160, column: 2, scope: !11588, inlinedAt: !11595)
!11611 = !DILocation(line: 178, column: 21, scope: !11560)
!11612 = !DILocation(line: 180, column: 18, scope: !11560)
!11613 = !DILocation(line: 182, column: 14, scope: !11560)
!11614 = !DILocation(line: 183, column: 15, scope: !11560)
!11615 = !DILocation(line: 185, column: 39, scope: !11560)
!11616 = !DILocation(line: 185, column: 37, scope: !11560)
!11617 = !DILocation(line: 187, column: 27, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11560, file: !1791, line: 187, column: 6)
!11619 = !DILocation(line: 187, column: 6, scope: !11560)
!11620 = !DILocation(line: 202, column: 27, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11618, file: !1791, line: 195, column: 9)
!11622 = !DILocation(line: 202, column: 48, scope: !11621)
!11623 = !DILocation(line: 203, column: 9, scope: !11621)
!11624 = !DILocation(line: 204, column: 11, scope: !11621)
!11625 = !DILocation(line: 205, column: 13, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11621, file: !1791, line: 205, column: 7)
!11627 = !DILocation(line: 205, column: 7, scope: !11621)
!11628 = !DILocation(line: 0, scope: !11618)
!11629 = !DILocation(line: 212, column: 18, scope: !11560)
!11630 = !DILocation(line: 214, column: 28, scope: !11560)
!11631 = !DILocation(line: 214, column: 16, scope: !11560)
!11632 = !DILocation(line: 215, column: 15, scope: !11560)
!11633 = !DILocation(line: 227, column: 11, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11560, file: !1791, line: 227, column: 6)
!11635 = !DILocation(line: 227, column: 6, scope: !11560)
!11636 = !DILocation(line: 228, column: 15, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11634, file: !1791, line: 227, column: 19)
!11638 = !DILocation(line: 228, column: 38, scope: !11637)
!11639 = !DILocation(line: 228, column: 24, scope: !11637)
!11640 = !DILocation(line: 229, column: 2, scope: !11637)
!11641 = !DILocation(line: 230, column: 24, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11634, file: !1791, line: 229, column: 9)
!11643 = !DILocation(line: 230, column: 15, scope: !11642)
!11644 = !DILocation(line: 0, scope: !11634)
!11645 = !DILocalVariable(name: "key", arg: 2, scope: !11646, file: !420, line: 190, type: !11571)
!11646 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11647, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11649)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{null, !11591, !11571}
!11649 = !{!11650, !11645}
!11650 = !DILocalVariable(name: "l", arg: 1, scope: !11646, file: !420, line: 189, type: !11591)
!11651 = !DILocation(line: 0, scope: !11646, inlinedAt: !11652)
!11652 = distinct !DILocation(line: 232, column: 2, scope: !11560)
!11653 = !DILocation(line: 194, column: 2, scope: !11654, inlinedAt: !11652)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !420, line: 194, column: 2)
!11655 = distinct !DILexicalBlock(scope: !11646, file: !420, line: 194, column: 2)
!11656 = !DILocation(line: 194, column: 2, scope: !11655, inlinedAt: !11652)
!11657 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11652)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !420, line: 194, column: 2)
!11659 = !DILocalVariable(name: "key", arg: 1, scope: !11660, file: !5954, line: 84, type: !32)
!11660 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11661)
!11661 = !{!11659}
!11662 = !DILocation(line: 0, scope: !11660, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 215, column: 2, scope: !11646, inlinedAt: !11652)
!11664 = !DILocation(line: 95, column: 2, scope: !11660, inlinedAt: !11663)
!11665 = !{i64 2033194}
!11666 = !DILocation(line: 234, column: 1, scope: !11560)
!11667 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1791, file: !1791, line: 236, type: !6360, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11668)
!11668 = !{!11669, !11670}
!11669 = !DILocalVariable(name: "key", scope: !11667, file: !1791, line: 242, type: !11571)
!11670 = !DILocalVariable(name: "cyc", scope: !11667, file: !1791, line: 243, type: !152)
!11671 = !DILocation(line: 0, scope: !11588, inlinedAt: !11672)
!11672 = distinct !DILocation(line: 242, column: 25, scope: !11667)
!11673 = !DILocation(line: 55, column: 2, scope: !11597, inlinedAt: !11674)
!11674 = distinct !DILocation(line: 145, column: 10, scope: !11588, inlinedAt: !11672)
!11675 = !DILocation(line: 0, scope: !11597, inlinedAt: !11674)
!11676 = !DILocation(line: 148, column: 2, scope: !11605, inlinedAt: !11672)
!11677 = !DILocation(line: 148, column: 2, scope: !11606, inlinedAt: !11672)
!11678 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11672)
!11679 = !DILocation(line: 160, column: 2, scope: !11588, inlinedAt: !11672)
!11680 = !DILocation(line: 0, scope: !11667)
!11681 = !DILocation(line: 243, column: 17, scope: !11667)
!11682 = !DILocation(line: 243, column: 29, scope: !11667)
!11683 = !DILocation(line: 243, column: 43, scope: !11667)
!11684 = !DILocation(line: 0, scope: !11646, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 245, column: 2, scope: !11667)
!11686 = !DILocation(line: 194, column: 2, scope: !11654, inlinedAt: !11685)
!11687 = !DILocation(line: 194, column: 2, scope: !11655, inlinedAt: !11685)
!11688 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11685)
!11689 = !DILocation(line: 243, column: 27, scope: !11667)
!11690 = !DILocation(line: 243, column: 41, scope: !11667)
!11691 = !DILocation(line: 0, scope: !11660, inlinedAt: !11692)
!11692 = distinct !DILocation(line: 215, column: 2, scope: !11646, inlinedAt: !11685)
!11693 = !DILocation(line: 95, column: 2, scope: !11660, inlinedAt: !11692)
!11694 = !DILocation(line: 246, column: 13, scope: !11667)
!11695 = !DILocation(line: 246, column: 2, scope: !11667)
!11696 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1791, file: !1791, line: 249, type: !6360, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !11697)
!11697 = !{!11698, !11699}
!11698 = !DILocalVariable(name: "key", scope: !11696, file: !1791, line: 251, type: !11571)
!11699 = !DILocalVariable(name: "ret", scope: !11696, file: !1791, line: 252, type: !152)
!11700 = !DILocation(line: 0, scope: !11588, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 251, column: 25, scope: !11696)
!11702 = !DILocation(line: 55, column: 2, scope: !11597, inlinedAt: !11703)
!11703 = distinct !DILocation(line: 145, column: 10, scope: !11588, inlinedAt: !11701)
!11704 = !DILocation(line: 0, scope: !11597, inlinedAt: !11703)
!11705 = !DILocation(line: 148, column: 2, scope: !11605, inlinedAt: !11701)
!11706 = !DILocation(line: 148, column: 2, scope: !11606, inlinedAt: !11701)
!11707 = !DILocation(line: 148, column: 2, scope: !11609, inlinedAt: !11701)
!11708 = !DILocation(line: 160, column: 2, scope: !11588, inlinedAt: !11701)
!11709 = !DILocation(line: 0, scope: !11696)
!11710 = !DILocation(line: 252, column: 17, scope: !11696)
!11711 = !DILocation(line: 252, column: 29, scope: !11696)
!11712 = !DILocation(line: 0, scope: !11646, inlinedAt: !11713)
!11713 = distinct !DILocation(line: 254, column: 2, scope: !11696)
!11714 = !DILocation(line: 194, column: 2, scope: !11654, inlinedAt: !11713)
!11715 = !DILocation(line: 194, column: 2, scope: !11655, inlinedAt: !11713)
!11716 = !DILocation(line: 194, column: 2, scope: !11658, inlinedAt: !11713)
!11717 = !DILocation(line: 252, column: 27, scope: !11696)
!11718 = !DILocation(line: 0, scope: !11660, inlinedAt: !11719)
!11719 = distinct !DILocation(line: 215, column: 2, scope: !11646, inlinedAt: !11713)
!11720 = !DILocation(line: 95, column: 2, scope: !11660, inlinedAt: !11719)
!11721 = !DILocation(line: 255, column: 2, scope: !11696)
!11722 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1791, file: !1791, line: 258, type: !3111, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !2182)
!11723 = !DILocation(line: 260, column: 6, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11722, file: !1791, line: 260, column: 6)
!11725 = !DILocation(line: 260, column: 16, scope: !11724)
!11726 = !DILocation(line: 260, column: 6, scope: !11722)
!11727 = !DILocation(line: 261, column: 17, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11724, file: !1791, line: 260, column: 34)
!11729 = !DILocation(line: 262, column: 2, scope: !11728)
!11730 = !DILocation(line: 263, column: 1, scope: !11722)
!11731 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1791, file: !1791, line: 265, type: !3111, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1713, retainedNodes: !2182)
!11732 = !DILocation(line: 267, column: 16, scope: !11731)
!11733 = !DILocation(line: 268, column: 1, scope: !11731)
!11734 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11735, file: !11735, line: 9, type: !11736, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !11759)
!11735 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!107, !11738, !195, !11758}
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11739, size: 32)
!11739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11740)
!11740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1644, line: 60, size: 64, elements: !11741)
!11741 = !{!11742, !11757}
!11742 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11740, file: !1644, line: 69, baseType: !11743, size: 32)
!11743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11744, size: 32)
!11744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11745)
!11745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1644, line: 50, size: 64, elements: !11746)
!11746 = !{!11747, !11755, !11756}
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11745, file: !1644, line: 52, baseType: !11748, size: 32)
!11748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11749, size: 32)
!11749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11750)
!11750 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !11751)
!11751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !11752)
!11752 = !{!11753, !11754}
!11753 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11751, file: !1655, line: 34, baseType: !152, size: 32)
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11751, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11745, file: !1644, line: 54, baseType: !195, size: 8, offset: 32)
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11745, file: !1644, line: 56, baseType: !195, size: 8, offset: 40)
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11740, file: !1644, line: 71, baseType: !195, size: 8, offset: 32)
!11758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11743, size: 32)
!11759 = !{!11760, !11761, !11762}
!11760 = !DILocalVariable(name: "config", arg: 1, scope: !11734, file: !11735, line: 9, type: !11738)
!11761 = !DILocalVariable(name: "id", arg: 2, scope: !11734, file: !11735, line: 9, type: !195)
!11762 = !DILocalVariable(name: "state", arg: 3, scope: !11734, file: !11735, line: 10, type: !11758)
!11763 = !DILocation(line: 0, scope: !11734)
!11764 = !DILocation(line: 12, column: 20, scope: !11734)
!11765 = !DILocation(line: 13, column: 27, scope: !11734)
!11766 = !DILocation(line: 13, column: 42, scope: !11734)
!11767 = !DILocation(line: 13, column: 19, scope: !11734)
!11768 = !DILocation(line: 13, column: 16, scope: !11734)
!11769 = !DILocation(line: 13, column: 2, scope: !11734)
!11770 = distinct !{!11770, !11769, !11771}
!11771 = !DILocation(line: 19, column: 2, scope: !11734)
!11772 = !DILocation(line: 14, column: 23, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !11735, line: 14, column: 7)
!11774 = distinct !DILexicalBlock(scope: !11734, file: !11735, line: 13, column: 54)
!11775 = !DILocation(line: 14, column: 10, scope: !11773)
!11776 = !DILocation(line: 18, column: 11, scope: !11774)
!11777 = !DILocation(line: 14, column: 7, scope: !11774)
!11778 = !DILocation(line: 22, column: 1, scope: !11734)
!11779 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1910, file: !1910, line: 193, type: !11780, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11789)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!107, !11782, !195, !22}
!11782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11783, size: 32)
!11783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11784)
!11784 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1655, line: 37, baseType: !11785)
!11785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1655, line: 32, size: 64, elements: !11786)
!11786 = !{!11787, !11788}
!11787 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11785, file: !1655, line: 34, baseType: !152, size: 32)
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11785, file: !1655, line: 36, baseType: !152, size: 32, offset: 32)
!11789 = !{!11790, !11791, !11792, !11793, !11794, !11795, !11796, !11797, !11799}
!11790 = !DILocalVariable(name: "pins", arg: 1, scope: !11779, file: !1910, line: 193, type: !11782)
!11791 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11779, file: !1910, line: 193, type: !195)
!11792 = !DILocalVariable(name: "reg", arg: 3, scope: !11779, file: !1910, line: 194, type: !22)
!11793 = !DILocalVariable(name: "pin", scope: !11779, file: !1910, line: 196, type: !152)
!11794 = !DILocalVariable(name: "mux", scope: !11779, file: !1910, line: 196, type: !152)
!11795 = !DILocalVariable(name: "pin_cgf", scope: !11779, file: !1910, line: 197, type: !152)
!11796 = !DILocalVariable(name: "ret", scope: !11779, file: !1910, line: 198, type: !107)
!11797 = !DILocalVariable(name: "i", scope: !11798, file: !1910, line: 209, type: !195)
!11798 = distinct !DILexicalBlock(scope: !11779, file: !1910, line: 209, column: 2)
!11799 = !DILocalVariable(name: "gpio_out", scope: !11800, file: !1910, line: 239, type: !152)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !1910, line: 238, column: 55)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !1910, line: 238, column: 14)
!11802 = distinct !DILexicalBlock(scope: !11803, file: !1910, line: 236, column: 14)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !1910, line: 234, column: 7)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !1910, line: 209, column: 41)
!11805 = distinct !DILexicalBlock(scope: !11798, file: !1910, line: 209, column: 2)
!11806 = !DILocation(line: 0, scope: !11779)
!11807 = !DILocation(line: 0, scope: !11798)
!11808 = !DILocation(line: 209, column: 25, scope: !11805)
!11809 = !DILocation(line: 209, column: 2, scope: !11798)
!11810 = distinct !{!11810, !11809, !11811}
!11811 = !DILocation(line: 259, column: 2, scope: !11798)
!11812 = !DILocation(line: 210, column: 17, scope: !11804)
!11813 = !DILocation(line: 234, column: 7, scope: !11803)
!11814 = !DILocation(line: 234, column: 33, scope: !11803)
!11815 = !DILocation(line: 234, column: 7, scope: !11804)
!11816 = !DILocation(line: 235, column: 22, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11803, file: !1910, line: 234, column: 49)
!11818 = !DILocation(line: 235, column: 29, scope: !11817)
!11819 = !DILocation(line: 236, column: 3, scope: !11817)
!11820 = !DILocation(line: 236, column: 14, scope: !11803)
!11821 = !DILocation(line: 239, column: 32, scope: !11800)
!11822 = !DILocation(line: 0, scope: !11800)
!11823 = !DILocation(line: 241, column: 8, scope: !11800)
!11824 = !DILocation(line: 246, column: 3, scope: !11800)
!11825 = !DILocation(line: 252, column: 9, scope: !11804)
!11826 = !DILocation(line: 255, column: 9, scope: !11804)
!11827 = !DILocation(line: 256, column: 11, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11804, file: !1910, line: 256, column: 7)
!11829 = !DILocation(line: 209, column: 37, scope: !11805)
!11830 = !DILocation(line: 256, column: 7, scope: !11804)
!11831 = !DILocation(line: 262, column: 1, scope: !11779)
!11832 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1910, file: !1910, line: 176, type: !11833, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11835)
!11833 = !DISubroutineType(types: !11834)
!11834 = !{!107, !152, !152, !152}
!11835 = !{!11836, !11837, !11838, !11839}
!11836 = !DILocalVariable(name: "pin", arg: 1, scope: !11832, file: !1910, line: 176, type: !152)
!11837 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11832, file: !1910, line: 176, type: !152)
!11838 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11832, file: !1910, line: 176, type: !152)
!11839 = !DILocalVariable(name: "port_device", scope: !11832, file: !1910, line: 178, type: !1840)
!11840 = !DILocation(line: 0, scope: !11832)
!11841 = !DILocation(line: 180, column: 22, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11832, file: !1910, line: 180, column: 6)
!11843 = !DILocation(line: 180, column: 6, scope: !11832)
!11844 = !DILocation(line: 180, column: 6, scope: !11842)
!11845 = !DILocation(line: 184, column: 16, scope: !11832)
!11846 = !DILocation(line: 186, column: 19, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11832, file: !1910, line: 186, column: 6)
!11848 = !DILocation(line: 186, column: 28, scope: !11847)
!11849 = !DILocation(line: 186, column: 33, scope: !11847)
!11850 = !DILocation(line: 186, column: 6, scope: !11832)
!11851 = !DILocation(line: 190, column: 43, scope: !11832)
!11852 = !DILocation(line: 190, column: 9, scope: !11832)
!11853 = !DILocation(line: 190, column: 2, scope: !11832)
!11854 = !DILocation(line: 191, column: 1, scope: !11832)
!11855 = distinct !DISubprogram(name: "device_is_ready", scope: !9759, file: !9759, line: 47, type: !11856, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11858)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{!145, !1840}
!11858 = !{!11859}
!11859 = !DILocalVariable(name: "dev", arg: 1, scope: !11855, file: !9759, line: 47, type: !1840)
!11860 = !DILocation(line: 0, scope: !11855)
!11861 = !DILocation(line: 55, column: 2, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11855, file: !9759, line: 55, column: 2)
!11863 = !{i64 2149266386}
!11864 = !DILocation(line: 56, column: 9, scope: !11855)
!11865 = !DILocation(line: 56, column: 2, scope: !11855)
!11866 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11856, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !11867)
!11867 = !{!11868}
!11868 = !DILocalVariable(name: "dev", arg: 1, scope: !11866, file: !247, line: 730, type: !1840)
!11869 = !DILocation(line: 0, scope: !11866)
!11870 = !DILocation(line: 732, column: 9, scope: !11866)
!11871 = !DILocation(line: 732, column: 2, scope: !11866)
!11872 = distinct !DISubprogram(name: "SystemInit", scope: !1960, file: !1960, line: 167, type: !3111, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2182)
!11873 = !DILocation(line: 182, column: 1, scope: !11872)
!11874 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1960, file: !1960, line: 220, type: !3111, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !11875)
!11875 = !{!11876, !11877, !11878, !11879, !11880}
!11876 = !DILocalVariable(name: "tmp", scope: !11874, file: !1960, line: 222, type: !152)
!11877 = !DILocalVariable(name: "pllvco", scope: !11874, file: !1960, line: 222, type: !152)
!11878 = !DILocalVariable(name: "pllp", scope: !11874, file: !1960, line: 222, type: !152)
!11879 = !DILocalVariable(name: "pllsource", scope: !11874, file: !1960, line: 222, type: !152)
!11880 = !DILocalVariable(name: "pllm", scope: !11874, file: !1960, line: 222, type: !152)
!11881 = !DILocation(line: 0, scope: !11874)
!11882 = !DILocation(line: 225, column: 14, scope: !11874)
!11883 = !DILocation(line: 225, column: 19, scope: !11874)
!11884 = !DILocation(line: 227, column: 3, scope: !11874)
!11885 = !DILocation(line: 240, column: 25, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11874, file: !1960, line: 228, column: 3)
!11887 = !DILocation(line: 241, column: 19, scope: !11886)
!11888 = !DILocation(line: 241, column: 27, scope: !11886)
!11889 = !DILocation(line: 0, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !1960, line: 243, column: 11)
!11891 = !DILocation(line: 254, column: 22, scope: !11886)
!11892 = !DILocation(line: 254, column: 62, scope: !11886)
!11893 = !DILocation(line: 255, column: 31, scope: !11886)
!11894 = !DILocation(line: 256, column: 7, scope: !11886)
!11895 = !DILocation(line: 0, scope: !11886)
!11896 = !DILocation(line: 263, column: 30, scope: !11874)
!11897 = !DILocation(line: 263, column: 52, scope: !11874)
!11898 = !DILocation(line: 263, column: 9, scope: !11874)
!11899 = !DILocation(line: 265, column: 19, scope: !11874)
!11900 = !DILocation(line: 266, column: 1, scope: !11874)
!11901 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11902, file: !11902, line: 200, type: !11903, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!11902 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11903 = !DISubroutineType(types: !11904)
!11904 = !{!11905}
!11905 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2924, line: 44, baseType: !2923)
!11906 = !DILocation(line: 202, column: 3, scope: !11901)
!11907 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11902, file: !11902, line: 219, type: !11908, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !11932)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{!11905, !11910}
!11910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11911, size: 32)
!11911 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11912, line: 70, baseType: !11913)
!11912 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11912, line: 49, size: 384, elements: !11914)
!11914 = !{!11915, !11916, !11917, !11918, !11919, !11920, !11921}
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11913, file: !11912, line: 51, baseType: !152, size: 32)
!11916 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11913, file: !11912, line: 54, baseType: !152, size: 32, offset: 32)
!11917 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11913, file: !11912, line: 57, baseType: !152, size: 32, offset: 64)
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11913, file: !11912, line: 60, baseType: !152, size: 32, offset: 96)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11913, file: !11912, line: 63, baseType: !152, size: 32, offset: 128)
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11913, file: !11912, line: 66, baseType: !152, size: 32, offset: 160)
!11921 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11913, file: !11912, line: 69, baseType: !11922, size: 192, offset: 192)
!11922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11923, line: 73, baseType: !11924)
!11923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11923, line: 45, size: 192, elements: !11925)
!11925 = !{!11926, !11927, !11928, !11929, !11930, !11931}
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11924, file: !11923, line: 47, baseType: !152, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11924, file: !11923, line: 50, baseType: !152, size: 32, offset: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11924, file: !11923, line: 53, baseType: !152, size: 32, offset: 64)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11924, file: !11923, line: 56, baseType: !152, size: 32, offset: 96)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11924, file: !11923, line: 60, baseType: !152, size: 32, offset: 128)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11924, file: !11923, line: 63, baseType: !152, size: 32, offset: 160)
!11932 = !{!11933, !11934, !11935, !11936, !11940}
!11933 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11907, file: !11902, line: 219, type: !11910)
!11934 = !DILocalVariable(name: "tickstart", scope: !11907, file: !11902, line: 221, type: !152)
!11935 = !DILocalVariable(name: "pll_config", scope: !11907, file: !11902, line: 221, type: !152)
!11936 = !DILocalVariable(name: "pwrclkchanged", scope: !11937, file: !11902, line: 391, type: !11939)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !11902, line: 390, column: 3)
!11938 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 389, column: 6)
!11939 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !943, line: 188, baseType: !2930)
!11940 = !DILocalVariable(name: "tmpreg", scope: !11941, file: !11902, line: 400, type: !227)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !11902, line: 400, column: 7)
!11942 = distinct !DILexicalBlock(scope: !11943, file: !11902, line: 399, column: 5)
!11943 = distinct !DILexicalBlock(scope: !11937, file: !11902, line: 398, column: 8)
!11944 = !DILocation(line: 0, scope: !11907)
!11945 = !DILocation(line: 224, column: 24, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 224, column: 6)
!11947 = !DILocation(line: 224, column: 6, scope: !11907)
!11948 = !DILocation(line: 232, column: 27, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 232, column: 6)
!11950 = !DILocation(line: 232, column: 43, scope: !11949)
!11951 = !DILocation(line: 232, column: 69, scope: !11949)
!11952 = !DILocation(line: 232, column: 6, scope: !11907)
!11953 = !DILocation(line: 237, column: 9, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !11902, line: 237, column: 8)
!11955 = distinct !DILexicalBlock(scope: !11949, file: !11902, line: 233, column: 3)
!11956 = !DILocation(line: 237, column: 39, scope: !11954)
!11957 = !DILocation(line: 237, column: 60, scope: !11954)
!11958 = !DILocation(line: 238, column: 9, scope: !11954)
!11959 = !DILocation(line: 238, column: 39, scope: !11954)
!11960 = !DILocation(line: 238, column: 60, scope: !11954)
!11961 = !DILocation(line: 238, column: 70, scope: !11954)
!11962 = !DILocation(line: 238, column: 78, scope: !11954)
!11963 = !DILocation(line: 238, column: 100, scope: !11954)
!11964 = !DILocation(line: 237, column: 8, scope: !11955)
!11965 = !DILocation(line: 240, column: 11, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !11902, line: 240, column: 10)
!11967 = distinct !DILexicalBlock(scope: !11954, file: !11902, line: 239, column: 5)
!11968 = !DILocation(line: 240, column: 57, scope: !11966)
!11969 = !DILocation(line: 240, column: 80, scope: !11966)
!11970 = !DILocation(line: 240, column: 89, scope: !11966)
!11971 = !DILocation(line: 240, column: 10, scope: !11967)
!11972 = !DILocation(line: 248, column: 7, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !11902, line: 248, column: 7)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !11902, line: 248, column: 7)
!11975 = distinct !DILexicalBlock(scope: !11954, file: !11902, line: 246, column: 5)
!11976 = !DILocation(line: 248, column: 7, scope: !11974)
!11977 = !DILocation(line: 248, column: 7, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11973, file: !11902, line: 248, column: 7)
!11979 = !DILocation(line: 248, column: 7, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !11902, line: 248, column: 7)
!11981 = distinct !DILexicalBlock(scope: !11973, file: !11902, line: 248, column: 7)
!11982 = !DILocation(line: 248, column: 7, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11981, file: !11902, line: 248, column: 7)
!11984 = !DILocation(line: 0, scope: !11973)
!11985 = !DILocation(line: 251, column: 30, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11975, file: !11902, line: 251, column: 10)
!11987 = !DILocation(line: 251, column: 40, scope: !11986)
!11988 = !DILocation(line: 0, scope: !11986)
!11989 = !DILocation(line: 251, column: 10, scope: !11975)
!11990 = !DILocation(line: 257, column: 15, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11986, file: !11902, line: 252, column: 7)
!11992 = !DILocation(line: 257, column: 51, scope: !11991)
!11993 = !DILocation(line: 257, column: 9, scope: !11991)
!11994 = !DILocation(line: 259, column: 15, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !11902, line: 259, column: 14)
!11996 = distinct !DILexicalBlock(scope: !11991, file: !11902, line: 258, column: 9)
!11997 = !DILocation(line: 259, column: 29, scope: !11995)
!11998 = !DILocation(line: 259, column: 43, scope: !11995)
!11999 = !DILocation(line: 259, column: 14, scope: !11996)
!12000 = distinct !{!12000, !11993, !12001}
!12001 = !DILocation(line: 263, column: 9, scope: !11991)
!12002 = !DILocation(line: 271, column: 15, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11986, file: !11902, line: 266, column: 7)
!12004 = !DILocation(line: 271, column: 9, scope: !12003)
!12005 = !DILocation(line: 273, column: 15, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12007, file: !11902, line: 273, column: 14)
!12007 = distinct !DILexicalBlock(scope: !12003, file: !11902, line: 272, column: 9)
!12008 = !DILocation(line: 273, column: 29, scope: !12006)
!12009 = !DILocation(line: 273, column: 43, scope: !12006)
!12010 = !DILocation(line: 273, column: 14, scope: !12007)
!12011 = distinct !{!12011, !12004, !12012}
!12012 = !DILocation(line: 277, column: 9, scope: !12003)
!12013 = !DILocation(line: 282, column: 27, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 282, column: 6)
!12015 = !DILocation(line: 282, column: 43, scope: !12014)
!12016 = !DILocation(line: 282, column: 69, scope: !12014)
!12017 = !DILocation(line: 282, column: 6, scope: !11907)
!12018 = !DILocation(line: 289, column: 9, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !11902, line: 289, column: 8)
!12020 = distinct !DILexicalBlock(scope: !12014, file: !11902, line: 283, column: 3)
!12021 = !DILocation(line: 289, column: 39, scope: !12019)
!12022 = !DILocation(line: 289, column: 60, scope: !12019)
!12023 = !DILocation(line: 290, column: 9, scope: !12019)
!12024 = !DILocation(line: 290, column: 39, scope: !12019)
!12025 = !DILocation(line: 290, column: 60, scope: !12019)
!12026 = !DILocation(line: 290, column: 70, scope: !12019)
!12027 = !DILocation(line: 290, column: 78, scope: !12019)
!12028 = !DILocation(line: 290, column: 100, scope: !12019)
!12029 = !DILocation(line: 289, column: 8, scope: !12020)
!12030 = !DILocation(line: 293, column: 11, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !11902, line: 293, column: 10)
!12032 = distinct !DILexicalBlock(scope: !12019, file: !11902, line: 291, column: 5)
!12033 = !DILocation(line: 293, column: 57, scope: !12031)
!12034 = !DILocation(line: 293, column: 80, scope: !12031)
!12035 = !DILocation(line: 293, column: 89, scope: !12031)
!12036 = !DILocation(line: 293, column: 10, scope: !12032)
!12037 = !DILocation(line: 307, column: 30, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !11902, line: 307, column: 10)
!12039 = distinct !DILexicalBlock(scope: !12019, file: !11902, line: 305, column: 5)
!12040 = !DILocation(line: 307, column: 39, scope: !12038)
!12041 = !DILocation(line: 307, column: 10, scope: !12039)
!12042 = !DILocation(line: 310, column: 9, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12038, file: !11902, line: 308, column: 7)
!12044 = !DILocation(line: 313, column: 21, scope: !12043)
!12045 = !DILocation(line: 316, column: 9, scope: !12043)
!12046 = !DILocation(line: 316, column: 15, scope: !12043)
!12047 = !DILocation(line: 316, column: 51, scope: !12043)
!12048 = !DILocation(line: 318, column: 15, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !11902, line: 318, column: 14)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !11902, line: 317, column: 9)
!12051 = !DILocation(line: 318, column: 29, scope: !12049)
!12052 = !DILocation(line: 318, column: 43, scope: !12049)
!12053 = !DILocation(line: 318, column: 14, scope: !12050)
!12054 = distinct !{!12054, !12045, !12055}
!12055 = !DILocation(line: 322, column: 9, scope: !12043)
!12056 = !DILocation(line: 330, column: 9, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12038, file: !11902, line: 328, column: 7)
!12058 = !DILocation(line: 333, column: 21, scope: !12057)
!12059 = !DILocation(line: 336, column: 9, scope: !12057)
!12060 = !DILocation(line: 336, column: 15, scope: !12057)
!12061 = !DILocation(line: 338, column: 15, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !11902, line: 338, column: 14)
!12063 = distinct !DILexicalBlock(scope: !12057, file: !11902, line: 337, column: 9)
!12064 = !DILocation(line: 338, column: 29, scope: !12062)
!12065 = !DILocation(line: 338, column: 43, scope: !12062)
!12066 = !DILocation(line: 338, column: 14, scope: !12063)
!12067 = distinct !{!12067, !12059, !12068}
!12068 = !DILocation(line: 342, column: 9, scope: !12057)
!12069 = !DILocation(line: 0, scope: !12019)
!12070 = !DILocation(line: 347, column: 27, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 347, column: 6)
!12072 = !DILocation(line: 347, column: 43, scope: !12071)
!12073 = !DILocation(line: 347, column: 69, scope: !12071)
!12074 = !DILocation(line: 347, column: 6, scope: !11907)
!12075 = !DILocation(line: 353, column: 28, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !11902, line: 353, column: 8)
!12077 = distinct !DILexicalBlock(scope: !12071, file: !11902, line: 348, column: 3)
!12078 = !DILocation(line: 353, column: 37, scope: !12076)
!12079 = !DILocation(line: 353, column: 8, scope: !12077)
!12080 = !DILocation(line: 356, column: 7, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12076, file: !11902, line: 354, column: 5)
!12082 = !DILocation(line: 359, column: 19, scope: !12081)
!12083 = !DILocation(line: 362, column: 7, scope: !12081)
!12084 = !DILocation(line: 362, column: 13, scope: !12081)
!12085 = !DILocation(line: 362, column: 49, scope: !12081)
!12086 = !DILocation(line: 364, column: 13, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !11902, line: 364, column: 12)
!12088 = distinct !DILexicalBlock(scope: !12081, file: !11902, line: 363, column: 7)
!12089 = !DILocation(line: 364, column: 27, scope: !12087)
!12090 = !DILocation(line: 364, column: 41, scope: !12087)
!12091 = !DILocation(line: 364, column: 12, scope: !12088)
!12092 = distinct !{!12092, !12083, !12093}
!12093 = !DILocation(line: 368, column: 7, scope: !12081)
!12094 = !DILocation(line: 373, column: 7, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12076, file: !11902, line: 371, column: 5)
!12096 = !DILocation(line: 376, column: 19, scope: !12095)
!12097 = !DILocation(line: 379, column: 7, scope: !12095)
!12098 = !DILocation(line: 379, column: 13, scope: !12095)
!12099 = !DILocation(line: 381, column: 13, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !11902, line: 381, column: 12)
!12101 = distinct !DILexicalBlock(scope: !12095, file: !11902, line: 380, column: 7)
!12102 = !DILocation(line: 381, column: 27, scope: !12100)
!12103 = !DILocation(line: 381, column: 41, scope: !12100)
!12104 = !DILocation(line: 381, column: 12, scope: !12101)
!12105 = distinct !{!12105, !12097, !12106}
!12106 = !DILocation(line: 385, column: 7, scope: !12095)
!12107 = !DILocation(line: 389, column: 27, scope: !11938)
!12108 = !DILocation(line: 389, column: 43, scope: !11938)
!12109 = !DILocation(line: 389, column: 69, scope: !11938)
!12110 = !DILocation(line: 389, column: 6, scope: !11907)
!12111 = !DILocation(line: 0, scope: !11937)
!12112 = !DILocation(line: 398, column: 8, scope: !11943)
!12113 = !DILocation(line: 398, column: 8, scope: !11937)
!12114 = !DILocation(line: 400, column: 7, scope: !11941)
!12115 = !DILocation(line: 400, column: 7, scope: !11942)
!12116 = !DILocation(line: 402, column: 5, scope: !11942)
!12117 = !DILocation(line: 404, column: 8, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !11937, file: !11902, line: 404, column: 8)
!12119 = !DILocation(line: 404, column: 8, scope: !11937)
!12120 = !DILocation(line: 407, column: 7, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12118, file: !11902, line: 405, column: 5)
!12122 = !DILocation(line: 410, column: 19, scope: !12121)
!12123 = !DILocation(line: 412, column: 7, scope: !12121)
!12124 = !DILocation(line: 412, column: 13, scope: !12121)
!12125 = !DILocation(line: 414, column: 13, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !11902, line: 414, column: 12)
!12127 = distinct !DILexicalBlock(scope: !12121, file: !11902, line: 413, column: 7)
!12128 = !DILocation(line: 414, column: 27, scope: !12126)
!12129 = !DILocation(line: 414, column: 40, scope: !12126)
!12130 = !DILocation(line: 414, column: 12, scope: !12127)
!12131 = distinct !{!12131, !12123, !12132}
!12132 = !DILocation(line: 418, column: 7, scope: !12121)
!12133 = !DILocation(line: 422, column: 5, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !11902, line: 422, column: 5)
!12135 = distinct !DILexicalBlock(scope: !11937, file: !11902, line: 422, column: 5)
!12136 = !DILocation(line: 422, column: 5, scope: !12135)
!12137 = !DILocation(line: 422, column: 5, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12134, file: !11902, line: 422, column: 5)
!12139 = !DILocation(line: 422, column: 5, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !11902, line: 422, column: 5)
!12141 = distinct !DILexicalBlock(scope: !12134, file: !11902, line: 422, column: 5)
!12142 = !DILocation(line: 422, column: 5, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12141, file: !11902, line: 422, column: 5)
!12144 = !DILocation(line: 0, scope: !12134)
!12145 = !DILocation(line: 424, column: 28, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !11937, file: !11902, line: 424, column: 8)
!12147 = !DILocation(line: 424, column: 38, scope: !12146)
!12148 = !DILocation(line: 0, scope: !12146)
!12149 = !DILocation(line: 424, column: 8, scope: !11937)
!12150 = !DILocation(line: 430, column: 13, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12146, file: !11902, line: 425, column: 5)
!12152 = !DILocation(line: 430, column: 49, scope: !12151)
!12153 = !DILocation(line: 430, column: 7, scope: !12151)
!12154 = !DILocation(line: 432, column: 13, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !11902, line: 432, column: 12)
!12156 = distinct !DILexicalBlock(scope: !12151, file: !11902, line: 431, column: 7)
!12157 = !DILocation(line: 432, column: 27, scope: !12155)
!12158 = !DILocation(line: 432, column: 41, scope: !12155)
!12159 = !DILocation(line: 432, column: 12, scope: !12156)
!12160 = distinct !{!12160, !12153, !12161}
!12161 = !DILocation(line: 436, column: 7, scope: !12151)
!12162 = !DILocation(line: 444, column: 13, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12146, file: !11902, line: 439, column: 5)
!12164 = !DILocation(line: 444, column: 7, scope: !12163)
!12165 = !DILocation(line: 446, column: 13, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12167, file: !11902, line: 446, column: 12)
!12167 = distinct !DILexicalBlock(scope: !12163, file: !11902, line: 445, column: 7)
!12168 = !DILocation(line: 446, column: 27, scope: !12166)
!12169 = !DILocation(line: 446, column: 41, scope: !12166)
!12170 = !DILocation(line: 446, column: 12, scope: !12167)
!12171 = distinct !{!12171, !12164, !12172}
!12172 = !DILocation(line: 450, column: 7, scope: !12163)
!12173 = !DILocation(line: 454, column: 8, scope: !11937)
!12174 = !DILocation(line: 456, column: 7, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !11902, line: 455, column: 5)
!12176 = distinct !DILexicalBlock(scope: !11937, file: !11902, line: 454, column: 8)
!12177 = !DILocation(line: 457, column: 5, scope: !12175)
!12178 = !DILocation(line: 462, column: 31, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !11907, file: !11902, line: 462, column: 7)
!12180 = !DILocation(line: 462, column: 41, scope: !12179)
!12181 = !DILocation(line: 462, column: 7, scope: !11907)
!12182 = !DILocation(line: 465, column: 8, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !11902, line: 465, column: 8)
!12184 = distinct !DILexicalBlock(scope: !12179, file: !11902, line: 463, column: 3)
!12185 = !DILocation(line: 465, column: 38, scope: !12183)
!12186 = !DILocation(line: 465, column: 8, scope: !12184)
!12187 = !DILocation(line: 467, column: 44, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !11902, line: 467, column: 10)
!12189 = distinct !DILexicalBlock(scope: !12183, file: !11902, line: 466, column: 5)
!12190 = !DILocation(line: 0, scope: !12188)
!12191 = !DILocation(line: 467, column: 10, scope: !12189)
!12192 = !DILocation(line: 483, column: 15, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12188, file: !11902, line: 468, column: 7)
!12194 = !DILocation(line: 483, column: 9, scope: !12193)
!12195 = !DILocation(line: 485, column: 15, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !11902, line: 485, column: 14)
!12197 = distinct !DILexicalBlock(scope: !12193, file: !11902, line: 484, column: 9)
!12198 = !DILocation(line: 485, column: 29, scope: !12196)
!12199 = !DILocation(line: 485, column: 43, scope: !12196)
!12200 = !DILocation(line: 485, column: 14, scope: !12197)
!12201 = distinct !{!12201, !12194, !12202}
!12202 = !DILocation(line: 489, column: 9, scope: !12193)
!12203 = !DILocation(line: 492, column: 9, scope: !12193)
!12204 = !DILocation(line: 498, column: 9, scope: !12193)
!12205 = !DILocation(line: 501, column: 21, scope: !12193)
!12206 = !DILocation(line: 504, column: 9, scope: !12193)
!12207 = !DILocation(line: 504, column: 15, scope: !12193)
!12208 = !DILocation(line: 504, column: 51, scope: !12193)
!12209 = !DILocation(line: 506, column: 15, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12211, file: !11902, line: 506, column: 14)
!12211 = distinct !DILexicalBlock(scope: !12193, file: !11902, line: 505, column: 9)
!12212 = !DILocation(line: 506, column: 29, scope: !12210)
!12213 = !DILocation(line: 506, column: 43, scope: !12210)
!12214 = !DILocation(line: 506, column: 14, scope: !12211)
!12215 = distinct !{!12215, !12206, !12216}
!12216 = !DILocation(line: 510, column: 9, scope: !12193)
!12217 = !DILocation(line: 521, column: 15, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12188, file: !11902, line: 513, column: 7)
!12219 = !DILocation(line: 521, column: 9, scope: !12218)
!12220 = !DILocation(line: 523, column: 15, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !11902, line: 523, column: 14)
!12222 = distinct !DILexicalBlock(scope: !12218, file: !11902, line: 522, column: 9)
!12223 = !DILocation(line: 523, column: 29, scope: !12221)
!12224 = !DILocation(line: 523, column: 43, scope: !12221)
!12225 = !DILocation(line: 523, column: 14, scope: !12222)
!12226 = distinct !{!12226, !12219, !12227}
!12227 = !DILocation(line: 527, column: 9, scope: !12218)
!12228 = !DILocation(line: 533, column: 44, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !11902, line: 533, column: 10)
!12230 = distinct !DILexicalBlock(scope: !12183, file: !11902, line: 531, column: 5)
!12231 = !DILocation(line: 533, column: 10, scope: !12230)
!12232 = !DILocation(line: 540, column: 27, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12229, file: !11902, line: 538, column: 7)
!12234 = !DILocation(line: 551, column: 14, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12233, file: !11902, line: 550, column: 13)
!12236 = !DILocation(line: 551, column: 81, scope: !12235)
!12237 = !DILocation(line: 551, column: 55, scope: !12235)
!12238 = !DILocation(line: 551, column: 92, scope: !12235)
!12239 = !DILocation(line: 552, column: 14, scope: !12235)
!12240 = !DILocation(line: 552, column: 80, scope: !12235)
!12241 = !DILocation(line: 552, column: 53, scope: !12235)
!12242 = !DILocation(line: 552, column: 111, scope: !12235)
!12243 = !DILocation(line: 553, column: 14, scope: !12235)
!12244 = !DILocation(line: 553, column: 80, scope: !12235)
!12245 = !DILocation(line: 553, column: 86, scope: !12235)
!12246 = !DILocation(line: 553, column: 53, scope: !12235)
!12247 = !DILocation(line: 553, column: 111, scope: !12235)
!12248 = !DILocation(line: 554, column: 14, scope: !12235)
!12249 = !DILocation(line: 554, column: 82, scope: !12235)
!12250 = !DILocation(line: 554, column: 101, scope: !12235)
!12251 = !DILocation(line: 554, column: 53, scope: !12235)
!12252 = !DILocation(line: 554, column: 126, scope: !12235)
!12253 = !DILocation(line: 555, column: 14, scope: !12235)
!12254 = !DILocation(line: 555, column: 80, scope: !12235)
!12255 = !DILocation(line: 555, column: 85, scope: !12235)
!12256 = !DILocation(line: 555, column: 53, scope: !12235)
!12257 = !DILocation(line: 550, column: 13, scope: !12233)
!12258 = !DILocation(line: 563, column: 3, scope: !11907)
!12259 = !DILocation(line: 564, column: 1, scope: !11907)
!12260 = !DISubprogram(name: "HAL_GetTick", scope: !12261, file: !12261, line: 234, type: !6360, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12261 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12262 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11902, file: !11902, line: 591, type: !12263, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12274)
!12263 = !DISubroutineType(types: !12264)
!12264 = !{!11905, !12265, !152}
!12265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12266, size: 32)
!12266 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11912, line: 92, baseType: !12267)
!12267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11912, line: 75, size: 160, elements: !12268)
!12268 = !{!12269, !12270, !12271, !12272, !12273}
!12269 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12267, file: !11912, line: 77, baseType: !152, size: 32)
!12270 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12267, file: !11912, line: 80, baseType: !152, size: 32, offset: 32)
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12267, file: !11912, line: 83, baseType: !152, size: 32, offset: 64)
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12267, file: !11912, line: 86, baseType: !152, size: 32, offset: 96)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12267, file: !11912, line: 89, baseType: !152, size: 32, offset: 128)
!12274 = !{!12275, !12276, !12277}
!12275 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12262, file: !11902, line: 591, type: !12265)
!12276 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12262, file: !11902, line: 591, type: !152)
!12277 = !DILocalVariable(name: "tickstart", scope: !12262, file: !11902, line: 593, type: !152)
!12278 = !DILocation(line: 0, scope: !12262)
!12279 = !DILocation(line: 596, column: 24, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 596, column: 6)
!12281 = !DILocation(line: 596, column: 6, scope: !12262)
!12282 = !DILocation(line: 610, column: 17, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 610, column: 6)
!12284 = !DILocation(line: 610, column: 15, scope: !12283)
!12285 = !DILocation(line: 610, column: 6, scope: !12262)
!12286 = !DILocation(line: 613, column: 5, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12283, file: !11902, line: 611, column: 3)
!12288 = !DILocation(line: 617, column: 8, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12287, file: !11902, line: 617, column: 8)
!12290 = !DILocation(line: 617, column: 34, scope: !12289)
!12291 = !DILocation(line: 617, column: 8, scope: !12287)
!12292 = !DILocation(line: 624, column: 27, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 624, column: 6)
!12294 = !DILocation(line: 624, column: 38, scope: !12293)
!12295 = !DILocation(line: 624, column: 60, scope: !12293)
!12296 = !DILocation(line: 624, column: 6, scope: !12262)
!12297 = !DILocation(line: 628, column: 40, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !11902, line: 628, column: 8)
!12299 = distinct !DILexicalBlock(scope: !12293, file: !11902, line: 625, column: 3)
!12300 = !DILocation(line: 628, column: 63, scope: !12298)
!12301 = !DILocation(line: 628, column: 8, scope: !12299)
!12302 = !DILocation(line: 630, column: 7, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12298, file: !11902, line: 629, column: 5)
!12304 = !DILocation(line: 633, column: 29, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12299, file: !11902, line: 633, column: 8)
!12306 = !DILocation(line: 631, column: 5, scope: !12303)
!12307 = !DILocation(line: 633, column: 40, scope: !12305)
!12308 = !DILocation(line: 633, column: 63, scope: !12305)
!12309 = !DILocation(line: 633, column: 8, scope: !12299)
!12310 = !DILocation(line: 635, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12305, file: !11902, line: 634, column: 5)
!12312 = !DILocation(line: 636, column: 5, scope: !12311)
!12313 = !DILocation(line: 639, column: 5, scope: !12299)
!12314 = !DILocation(line: 643, column: 27, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 643, column: 6)
!12316 = !DILocation(line: 640, column: 3, scope: !12299)
!12317 = !DILocation(line: 643, column: 38, scope: !12315)
!12318 = !DILocation(line: 643, column: 62, scope: !12315)
!12319 = !DILocation(line: 643, column: 6, scope: !12262)
!12320 = !DILocation(line: 648, column: 27, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !11902, line: 648, column: 8)
!12322 = distinct !DILexicalBlock(scope: !12315, file: !11902, line: 644, column: 3)
!12323 = !DILocation(line: 648, column: 8, scope: !12322)
!12324 = !DILocation(line: 651, column: 10, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12326, file: !11902, line: 651, column: 10)
!12326 = distinct !DILexicalBlock(scope: !12321, file: !11902, line: 649, column: 5)
!12327 = !DILocation(line: 651, column: 46, scope: !12325)
!12328 = !DILocation(line: 651, column: 10, scope: !12326)
!12329 = !DILocation(line: 661, column: 10, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !11902, line: 661, column: 10)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !11902, line: 659, column: 5)
!12332 = distinct !DILexicalBlock(scope: !12321, file: !11902, line: 657, column: 13)
!12333 = !DILocation(line: 661, column: 46, scope: !12330)
!12334 = !DILocation(line: 661, column: 10, scope: !12331)
!12335 = !DILocation(line: 670, column: 10, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !11902, line: 670, column: 10)
!12337 = distinct !DILexicalBlock(scope: !12332, file: !11902, line: 668, column: 5)
!12338 = !DILocation(line: 670, column: 46, scope: !12336)
!12339 = !DILocation(line: 670, column: 10, scope: !12337)
!12340 = !DILocation(line: 676, column: 5, scope: !12322)
!12341 = !DILocation(line: 679, column: 17, scope: !12322)
!12342 = !DILocation(line: 681, column: 5, scope: !12322)
!12343 = !DILocation(line: 681, column: 12, scope: !12322)
!12344 = !DILocation(line: 681, column: 65, scope: !12322)
!12345 = !DILocation(line: 681, column: 78, scope: !12322)
!12346 = !DILocation(line: 681, column: 42, scope: !12322)
!12347 = !DILocation(line: 683, column: 12, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !11902, line: 683, column: 11)
!12349 = distinct !DILexicalBlock(scope: !12322, file: !11902, line: 682, column: 5)
!12350 = !DILocation(line: 683, column: 26, scope: !12348)
!12351 = !DILocation(line: 683, column: 39, scope: !12348)
!12352 = !DILocation(line: 683, column: 11, scope: !12349)
!12353 = distinct !{!12353, !12342, !12354}
!12354 = !DILocation(line: 687, column: 5, scope: !12322)
!12355 = !DILocation(line: 691, column: 17, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 691, column: 6)
!12357 = !DILocation(line: 691, column: 15, scope: !12356)
!12358 = !DILocation(line: 691, column: 6, scope: !12262)
!12359 = !DILocation(line: 694, column: 5, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12356, file: !11902, line: 692, column: 3)
!12361 = !DILocation(line: 698, column: 8, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12360, file: !11902, line: 698, column: 8)
!12363 = !DILocation(line: 698, column: 34, scope: !12362)
!12364 = !DILocation(line: 698, column: 8, scope: !12360)
!12365 = !DILocation(line: 705, column: 27, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 705, column: 6)
!12367 = !DILocation(line: 705, column: 38, scope: !12366)
!12368 = !DILocation(line: 705, column: 61, scope: !12366)
!12369 = !DILocation(line: 705, column: 6, scope: !12262)
!12370 = !DILocation(line: 708, column: 5, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12366, file: !11902, line: 706, column: 3)
!12372 = !DILocation(line: 712, column: 27, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12262, file: !11902, line: 712, column: 6)
!12374 = !DILocation(line: 709, column: 3, scope: !12371)
!12375 = !DILocation(line: 712, column: 38, scope: !12373)
!12376 = !DILocation(line: 712, column: 61, scope: !12373)
!12377 = !DILocation(line: 712, column: 6, scope: !12262)
!12378 = !DILocation(line: 715, column: 5, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12373, file: !11902, line: 713, column: 3)
!12380 = !DILocation(line: 716, column: 3, scope: !12379)
!12381 = !DILocation(line: 719, column: 21, scope: !12262)
!12382 = !DILocation(line: 719, column: 70, scope: !12262)
!12383 = !DILocation(line: 719, column: 91, scope: !12262)
!12384 = !DILocation(line: 719, column: 50, scope: !12262)
!12385 = !DILocation(line: 719, column: 47, scope: !12262)
!12386 = !DILocation(line: 719, column: 19, scope: !12262)
!12387 = !DILocation(line: 722, column: 17, scope: !12262)
!12388 = !DILocation(line: 722, column: 3, scope: !12262)
!12389 = !DILocation(line: 724, column: 3, scope: !12262)
!12390 = !DILocation(line: 725, column: 1, scope: !12262)
!12391 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11902, file: !11902, line: 885, type: !6360, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12392)
!12392 = !{!12393, !12394, !12395, !12396}
!12393 = !DILocalVariable(name: "pllm", scope: !12391, file: !11902, line: 887, type: !152)
!12394 = !DILocalVariable(name: "pllvco", scope: !12391, file: !11902, line: 887, type: !152)
!12395 = !DILocalVariable(name: "pllp", scope: !12391, file: !11902, line: 887, type: !152)
!12396 = !DILocalVariable(name: "sysclockfreq", scope: !12391, file: !11902, line: 888, type: !152)
!12397 = !DILocation(line: 0, scope: !12391)
!12398 = !DILocation(line: 891, column: 16, scope: !12391)
!12399 = !DILocation(line: 891, column: 21, scope: !12391)
!12400 = !DILocation(line: 891, column: 3, scope: !12391)
!12401 = !DILocation(line: 907, column: 19, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12403, file: !11902, line: 904, column: 5)
!12403 = distinct !DILexicalBlock(scope: !12391, file: !11902, line: 892, column: 3)
!12404 = !DILocation(line: 907, column: 27, scope: !12402)
!12405 = !DILocation(line: 908, column: 10, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12402, file: !11902, line: 908, column: 10)
!12407 = !DILocation(line: 0, scope: !12406)
!12408 = !DILocation(line: 918, column: 23, scope: !12402)
!12409 = !DILocation(line: 918, column: 82, scope: !12402)
!12410 = !DILocation(line: 920, column: 28, scope: !12402)
!12411 = !DILocation(line: 921, column: 7, scope: !12402)
!12412 = !DILocation(line: 0, scope: !12403)
!12413 = !DILocation(line: 929, column: 3, scope: !12391)
!12414 = !DISubprogram(name: "HAL_InitTick", scope: !12261, file: !12261, line: 223, type: !12415, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12415 = !DISubroutineType(types: !12416)
!12416 = !{!11905, !152}
!12417 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11902, file: !11902, line: 775, type: !12418, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12420)
!12418 = !DISubroutineType(types: !12419)
!12419 = !{null, !152, !152, !152}
!12420 = !{!12421, !12422, !12423, !12424, !12434, !12438}
!12421 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12417, file: !11902, line: 775, type: !152)
!12422 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12417, file: !11902, line: 775, type: !152)
!12423 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12417, file: !11902, line: 775, type: !152)
!12424 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12417, file: !11902, line: 777, type: !12425)
!12425 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12426, line: 62, baseType: !12427)
!12426 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12426, line: 46, size: 160, elements: !12428)
!12428 = !{!12429, !12430, !12431, !12432, !12433}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12427, file: !12426, line: 48, baseType: !152, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12427, file: !12426, line: 51, baseType: !152, size: 32, offset: 32)
!12431 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12427, file: !12426, line: 54, baseType: !152, size: 32, offset: 64)
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12427, file: !12426, line: 57, baseType: !152, size: 32, offset: 96)
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12427, file: !12426, line: 60, baseType: !152, size: 32, offset: 128)
!12434 = !DILocalVariable(name: "tmpreg", scope: !12435, file: !11902, line: 787, type: !227)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !11902, line: 787, column: 5)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !11902, line: 783, column: 3)
!12437 = distinct !DILexicalBlock(scope: !12417, file: !11902, line: 782, column: 6)
!12438 = !DILocalVariable(name: "tmpreg", scope: !12439, file: !11902, line: 811, type: !227)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !11902, line: 811, column: 5)
!12440 = distinct !DILexicalBlock(scope: !12437, file: !11902, line: 807, column: 3)
!12441 = !DILocation(line: 0, scope: !12417)
!12442 = !DILocation(line: 777, column: 3, scope: !12417)
!12443 = !DILocation(line: 777, column: 20, scope: !12417)
!12444 = !DILocation(line: 782, column: 15, scope: !12437)
!12445 = !DILocation(line: 782, column: 6, scope: !12417)
!12446 = !DILocation(line: 787, column: 5, scope: !12435)
!12447 = !DILocation(line: 787, column: 5, scope: !12436)
!12448 = !DILocation(line: 790, column: 21, scope: !12436)
!12449 = !DILocation(line: 790, column: 25, scope: !12436)
!12450 = !DILocation(line: 791, column: 21, scope: !12436)
!12451 = !DILocation(line: 791, column: 26, scope: !12436)
!12452 = !DILocation(line: 792, column: 21, scope: !12436)
!12453 = !DILocation(line: 792, column: 27, scope: !12436)
!12454 = !DILocation(line: 793, column: 21, scope: !12436)
!12455 = !DILocation(line: 793, column: 26, scope: !12436)
!12456 = !DILocation(line: 794, column: 21, scope: !12436)
!12457 = !DILocation(line: 794, column: 31, scope: !12436)
!12458 = !DILocation(line: 795, column: 5, scope: !12436)
!12459 = !DILocation(line: 798, column: 5, scope: !12436)
!12460 = !DILocation(line: 804, column: 3, scope: !12436)
!12461 = !DILocation(line: 811, column: 5, scope: !12439)
!12462 = !DILocation(line: 811, column: 5, scope: !12440)
!12463 = !DILocation(line: 814, column: 21, scope: !12440)
!12464 = !DILocation(line: 814, column: 25, scope: !12440)
!12465 = !DILocation(line: 815, column: 21, scope: !12440)
!12466 = !DILocation(line: 815, column: 26, scope: !12440)
!12467 = !DILocation(line: 816, column: 21, scope: !12440)
!12468 = !DILocation(line: 816, column: 27, scope: !12440)
!12469 = !DILocation(line: 817, column: 21, scope: !12440)
!12470 = !DILocation(line: 817, column: 26, scope: !12440)
!12471 = !DILocation(line: 818, column: 21, scope: !12440)
!12472 = !DILocation(line: 818, column: 31, scope: !12440)
!12473 = !DILocation(line: 819, column: 5, scope: !12440)
!12474 = !DILocation(line: 822, column: 5, scope: !12440)
!12475 = !DILocation(line: 0, scope: !12437)
!12476 = !DILocation(line: 830, column: 1, scope: !12417)
!12477 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12426, file: !12426, line: 224, type: !12478, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!12478 = !DISubroutineType(types: !12479)
!12479 = !{null, !2993, !12480}
!12480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12425, size: 32)
!12481 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11902, file: !11902, line: 841, type: !3111, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12482 = !DILocation(line: 843, column: 38, scope: !12481)
!12483 = !DILocation(line: 844, column: 1, scope: !12481)
!12484 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11902, file: !11902, line: 850, type: !3111, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12485 = !DILocation(line: 852, column: 38, scope: !12484)
!12486 = !DILocation(line: 853, column: 1, scope: !12484)
!12487 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11902, file: !11902, line: 941, type: !6360, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12488 = !DILocation(line: 943, column: 10, scope: !12487)
!12489 = !DILocation(line: 943, column: 3, scope: !12487)
!12490 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11902, file: !11902, line: 952, type: !6360, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12491 = !DILocation(line: 955, column: 11, scope: !12490)
!12492 = !DILocation(line: 955, column: 56, scope: !12490)
!12493 = !DILocation(line: 955, column: 78, scope: !12490)
!12494 = !DILocation(line: 955, column: 36, scope: !12490)
!12495 = !DILocation(line: 955, column: 33, scope: !12490)
!12496 = !DILocation(line: 955, column: 3, scope: !12490)
!12497 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11902, file: !11902, line: 964, type: !6360, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12498 = !DILocation(line: 967, column: 11, scope: !12497)
!12499 = !DILocation(line: 967, column: 55, scope: !12497)
!12500 = !DILocation(line: 967, column: 77, scope: !12497)
!12501 = !DILocation(line: 967, column: 35, scope: !12497)
!12502 = !DILocation(line: 967, column: 32, scope: !12497)
!12503 = !DILocation(line: 967, column: 3, scope: !12497)
!12504 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11902, file: !11902, line: 977, type: !12505, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12507)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{null, !11910}
!12507 = !{!12508}
!12508 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12504, file: !11902, line: 977, type: !11910)
!12509 = !DILocation(line: 0, scope: !12504)
!12510 = !DILocation(line: 980, column: 22, scope: !12504)
!12511 = !DILocation(line: 980, column: 37, scope: !12504)
!12512 = !DILocation(line: 983, column: 12, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12504, file: !11902, line: 983, column: 6)
!12514 = !DILocation(line: 983, column: 15, scope: !12513)
!12515 = !DILocation(line: 983, column: 31, scope: !12513)
!12516 = !DILocation(line: 983, column: 6, scope: !12504)
!12517 = !DILocation(line: 985, column: 24, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12513, file: !11902, line: 984, column: 3)
!12519 = !DILocation(line: 985, column: 33, scope: !12518)
!12520 = !DILocation(line: 986, column: 3, scope: !12518)
!12521 = !DILocation(line: 987, column: 17, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12513, file: !11902, line: 987, column: 11)
!12523 = !DILocation(line: 987, column: 20, scope: !12522)
!12524 = !DILocation(line: 987, column: 35, scope: !12522)
!12525 = !DILocation(line: 0, scope: !12522)
!12526 = !DILocation(line: 987, column: 11, scope: !12513)
!12527 = !DILocation(line: 989, column: 33, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12522, file: !11902, line: 988, column: 3)
!12529 = !DILocation(line: 990, column: 3, scope: !12528)
!12530 = !DILocation(line: 993, column: 33, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12522, file: !11902, line: 992, column: 3)
!12532 = !DILocation(line: 997, column: 12, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12504, file: !11902, line: 997, column: 6)
!12534 = !DILocation(line: 997, column: 15, scope: !12533)
!12535 = !DILocation(line: 1003, column: 24, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12533, file: !11902, line: 1002, column: 3)
!12537 = !DILocation(line: 1003, column: 33, scope: !12536)
!12538 = !DILocation(line: 1006, column: 61, scope: !12504)
!12539 = !DILocation(line: 1006, column: 81, scope: !12504)
!12540 = !DILocation(line: 1006, column: 22, scope: !12504)
!12541 = !DILocation(line: 1006, column: 42, scope: !12504)
!12542 = !DILocation(line: 1009, column: 12, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12504, file: !11902, line: 1009, column: 6)
!12544 = !DILocation(line: 1009, column: 17, scope: !12543)
!12545 = !DILocation(line: 1009, column: 35, scope: !12543)
!12546 = !DILocation(line: 1009, column: 6, scope: !12504)
!12547 = !DILocation(line: 1011, column: 24, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12543, file: !11902, line: 1010, column: 3)
!12549 = !DILocation(line: 1011, column: 33, scope: !12548)
!12550 = !DILocation(line: 1012, column: 3, scope: !12548)
!12551 = !DILocation(line: 1013, column: 17, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12543, file: !11902, line: 1013, column: 11)
!12553 = !DILocation(line: 1013, column: 22, scope: !12552)
!12554 = !DILocation(line: 1013, column: 39, scope: !12552)
!12555 = !DILocation(line: 0, scope: !12552)
!12556 = !DILocation(line: 1013, column: 11, scope: !12543)
!12557 = !DILocation(line: 1015, column: 33, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12552, file: !11902, line: 1014, column: 3)
!12559 = !DILocation(line: 1016, column: 3, scope: !12558)
!12560 = !DILocation(line: 1019, column: 33, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12552, file: !11902, line: 1018, column: 3)
!12562 = !DILocation(line: 1023, column: 12, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12504, file: !11902, line: 1023, column: 6)
!12564 = !DILocation(line: 1023, column: 16, scope: !12563)
!12565 = !DILocation(line: 1029, column: 24, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12563, file: !11902, line: 1028, column: 3)
!12567 = !DILocation(line: 1029, column: 33, scope: !12566)
!12568 = !DILocation(line: 1033, column: 12, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12504, file: !11902, line: 1033, column: 6)
!12570 = !DILocation(line: 1033, column: 15, scope: !12569)
!12571 = !DILocation(line: 1033, column: 30, scope: !12569)
!12572 = !DILocation(line: 1033, column: 6, scope: !12504)
!12573 = !DILocation(line: 1039, column: 28, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12569, file: !11902, line: 1038, column: 3)
!12575 = !DILocation(line: 1039, column: 37, scope: !12574)
!12576 = !DILocation(line: 1041, column: 54, scope: !12504)
!12577 = !DILocation(line: 1041, column: 62, scope: !12504)
!12578 = !DILocation(line: 1041, column: 26, scope: !12504)
!12579 = !DILocation(line: 1041, column: 36, scope: !12504)
!12580 = !DILocation(line: 1042, column: 49, scope: !12504)
!12581 = !DILocation(line: 1042, column: 57, scope: !12504)
!12582 = !DILocation(line: 1042, column: 26, scope: !12504)
!12583 = !DILocation(line: 1042, column: 31, scope: !12504)
!12584 = !DILocation(line: 1043, column: 50, scope: !12504)
!12585 = !DILocation(line: 1043, column: 78, scope: !12504)
!12586 = !DILocation(line: 1043, column: 26, scope: !12504)
!12587 = !DILocation(line: 1043, column: 31, scope: !12504)
!12588 = !DILocation(line: 1044, column: 52, scope: !12504)
!12589 = !DILocation(line: 1044, column: 102, scope: !12504)
!12590 = !DILocation(line: 1044, column: 109, scope: !12504)
!12591 = !DILocation(line: 1044, column: 26, scope: !12504)
!12592 = !DILocation(line: 1044, column: 31, scope: !12504)
!12593 = !DILocation(line: 1045, column: 50, scope: !12504)
!12594 = !DILocation(line: 1045, column: 78, scope: !12504)
!12595 = !DILocation(line: 1045, column: 26, scope: !12504)
!12596 = !DILocation(line: 1045, column: 31, scope: !12504)
!12597 = !DILocation(line: 1046, column: 1, scope: !12504)
!12598 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11902, file: !11902, line: 1056, type: !12599, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{null, !12265, !999}
!12601 = !{!12602, !12603}
!12602 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12598, file: !11902, line: 1056, type: !12265)
!12603 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12598, file: !11902, line: 1056, type: !999)
!12604 = !DILocation(line: 0, scope: !12598)
!12605 = !DILocation(line: 1059, column: 22, scope: !12598)
!12606 = !DILocation(line: 1059, column: 32, scope: !12598)
!12607 = !DILocation(line: 1062, column: 53, scope: !12598)
!12608 = !DILocation(line: 1062, column: 58, scope: !12598)
!12609 = !DILocation(line: 1062, column: 22, scope: !12598)
!12610 = !DILocation(line: 1062, column: 35, scope: !12598)
!12611 = !DILocation(line: 1065, column: 54, scope: !12598)
!12612 = !DILocation(line: 1065, column: 59, scope: !12598)
!12613 = !DILocation(line: 1065, column: 22, scope: !12598)
!12614 = !DILocation(line: 1065, column: 36, scope: !12598)
!12615 = !DILocation(line: 1068, column: 55, scope: !12598)
!12616 = !DILocation(line: 1068, column: 60, scope: !12598)
!12617 = !DILocation(line: 1068, column: 22, scope: !12598)
!12618 = !DILocation(line: 1068, column: 37, scope: !12598)
!12619 = !DILocation(line: 1071, column: 56, scope: !12598)
!12620 = !DILocation(line: 1071, column: 79, scope: !12598)
!12621 = !DILocation(line: 1071, column: 22, scope: !12598)
!12622 = !DILocation(line: 1071, column: 37, scope: !12598)
!12623 = !DILocation(line: 1074, column: 34, scope: !12598)
!12624 = !DILocation(line: 1074, column: 38, scope: !12598)
!12625 = !DILocation(line: 1074, column: 14, scope: !12598)
!12626 = !DILocation(line: 1075, column: 1, scope: !12598)
!12627 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11902, file: !11902, line: 1082, type: !3111, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12628 = !DILocation(line: 1085, column: 6, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12627, file: !11902, line: 1085, column: 6)
!12630 = !DILocation(line: 1085, column: 6, scope: !12627)
!12631 = !DILocation(line: 1088, column: 5, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12629, file: !11902, line: 1086, column: 3)
!12633 = !DILocation(line: 1091, column: 5, scope: !12632)
!12634 = !DILocation(line: 1092, column: 3, scope: !12632)
!12635 = !DILocation(line: 1093, column: 1, scope: !12627)
!12636 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11902, file: !11902, line: 1099, type: !3111, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2182)
!12637 = !DILocation(line: 1104, column: 1, scope: !12636)
!12638 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12639, file: !12639, line: 257, type: !6370, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12640)
!12639 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12640 = !{!12641}
!12641 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12638, file: !12639, line: 257, type: !152)
!12642 = !DILocation(line: 0, scope: !12638)
!12643 = !DILocation(line: 260, column: 3, scope: !12638)
!12644 = !DILocation(line: 261, column: 1, scope: !12638)
!12645 = distinct !DISubprogram(name: "LL_InitTick", scope: !12646, file: !12646, line: 260, type: !10261, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12647)
!12646 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12647 = !{!12648, !12649}
!12648 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12645, file: !12646, line: 260, type: !152)
!12649 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12645, file: !12646, line: 260, type: !152)
!12650 = !DILocation(line: 0, scope: !12645)
!12651 = !DILocation(line: 263, column: 46, scope: !12645)
!12652 = !DILocation(line: 263, column: 55, scope: !12645)
!12653 = !DILocation(line: 263, column: 18, scope: !12645)
!12654 = !DILocation(line: 264, column: 18, scope: !12645)
!12655 = !DILocation(line: 265, column: 18, scope: !12645)
!12656 = !DILocation(line: 267, column: 1, scope: !12645)
!12657 = distinct !DISubprogram(name: "LL_mDelay", scope: !12639, file: !12639, line: 273, type: !6370, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12658)
!12658 = !{!12659, !12660}
!12659 = !DILocalVariable(name: "Delay", arg: 1, scope: !12657, file: !12639, line: 273, type: !152)
!12660 = !DILocalVariable(name: "tmp", scope: !12657, file: !12639, line: 275, type: !227)
!12661 = !DILocation(line: 0, scope: !12657)
!12662 = !DILocation(line: 275, column: 3, scope: !12657)
!12663 = !DILocation(line: 275, column: 18, scope: !12657)
!12664 = !DILocation(line: 275, column: 33, scope: !12657)
!12665 = !DILocation(line: 277, column: 10, scope: !12657)
!12666 = !DILocation(line: 280, column: 12, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12657, file: !12639, line: 280, column: 6)
!12668 = !DILocation(line: 285, column: 3, scope: !12657)
!12669 = !DILocation(line: 287, column: 18, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12639, line: 287, column: 8)
!12671 = distinct !DILexicalBlock(scope: !12657, file: !12639, line: 286, column: 3)
!12672 = !DILocation(line: 292, column: 1, scope: !12657)
!12673 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12639, file: !12639, line: 323, type: !6370, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12674)
!12674 = !{!12675}
!12675 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12673, file: !12639, line: 323, type: !152)
!12676 = !DILocation(line: 0, scope: !12673)
!12677 = !DILocation(line: 326, column: 19, scope: !12673)
!12678 = !DILocation(line: 327, column: 1, scope: !12673)
!12679 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12639, file: !12639, line: 338, type: !12680, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12683)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{!12682, !152}
!12682 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !943, line: 201, baseType: !942)
!12683 = !{!12684, !12685, !12686, !12687, !12688}
!12684 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12679, file: !12639, line: 338, type: !152)
!12685 = !DILocalVariable(name: "timeout", scope: !12679, file: !12639, line: 340, type: !152)
!12686 = !DILocalVariable(name: "getlatency", scope: !12679, file: !12639, line: 341, type: !152)
!12687 = !DILocalVariable(name: "latency", scope: !12679, file: !12639, line: 342, type: !152)
!12688 = !DILocalVariable(name: "status", scope: !12679, file: !12639, line: 343, type: !12682)
!12689 = !DILocation(line: 0, scope: !12679)
!12690 = !DILocation(line: 347, column: 21, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12679, file: !12639, line: 347, column: 6)
!12692 = !DILocation(line: 347, column: 6, scope: !12679)
!12693 = !DILocation(line: 353, column: 8, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !12639, line: 353, column: 8)
!12695 = distinct !DILexicalBlock(scope: !12691, file: !12639, line: 352, column: 3)
!12696 = !DILocation(line: 387, column: 8, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12695, file: !12639, line: 387, column: 8)
!12698 = !DILocation(line: 387, column: 40, scope: !12697)
!12699 = !DILocation(line: 387, column: 8, scope: !12695)
!12700 = !DILocation(line: 407, column: 26, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !12639, line: 407, column: 10)
!12702 = distinct !DILexicalBlock(scope: !12697, file: !12639, line: 388, column: 5)
!12703 = !DILocation(line: 407, column: 55, scope: !12701)
!12704 = !DILocation(line: 413, column: 28, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12639, line: 413, column: 12)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !12639, line: 412, column: 7)
!12707 = !DILocation(line: 413, column: 57, scope: !12705)
!12708 = !DILocation(line: 420, column: 8, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12695, file: !12639, line: 420, column: 8)
!12710 = !DILocation(line: 420, column: 40, scope: !12709)
!12711 = !DILocation(line: 420, column: 8, scope: !12695)
!12712 = !DILocation(line: 429, column: 26, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12714, file: !12639, line: 429, column: 10)
!12714 = distinct !DILexicalBlock(scope: !12709, file: !12639, line: 421, column: 5)
!12715 = !DILocation(line: 429, column: 55, scope: !12713)
!12716 = !DILocation(line: 435, column: 28, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !12639, line: 435, column: 12)
!12718 = distinct !DILexicalBlock(scope: !12713, file: !12639, line: 434, column: 7)
!12719 = !DILocation(line: 435, column: 57, scope: !12717)
!12720 = !DILocation(line: 0, scope: !12695)
!12721 = !DILocation(line: 444, column: 5, scope: !12695)
!12722 = !DILocation(line: 448, column: 5, scope: !12695)
!12723 = !DILocation(line: 451, column: 18, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12695, file: !12639, line: 449, column: 5)
!12725 = !DILocation(line: 452, column: 12, scope: !12724)
!12726 = !DILocation(line: 453, column: 26, scope: !12695)
!12727 = !DILocation(line: 453, column: 38, scope: !12695)
!12728 = !DILocation(line: 453, column: 5, scope: !12724)
!12729 = distinct !{!12729, !12722, !12730}
!12730 = !DILocation(line: 453, column: 54, scope: !12695)
!12731 = !DILocation(line: 0, scope: !12691)
!12732 = !DILocation(line: 464, column: 3, scope: !12679)
!12733 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12734, file: !12734, line: 519, type: !6360, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12734 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12735 = !DILocation(line: 521, column: 21, scope: !12733)
!12736 = !DILocation(line: 521, column: 3, scope: !12733)
!12737 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5975, file: !5975, line: 1543, type: !6370, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12738)
!12738 = !{!12739}
!12739 = !DILocalVariable(name: "Latency", arg: 1, scope: !12737, file: !5975, line: 1543, type: !152)
!12740 = !DILocation(line: 0, scope: !12737)
!12741 = !DILocation(line: 1545, column: 3, scope: !12737)
!12742 = !DILocation(line: 1546, column: 1, scope: !12737)
!12743 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5975, file: !5975, line: 1569, type: !6360, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12744 = !DILocation(line: 1571, column: 21, scope: !12743)
!12745 = !DILocation(line: 1571, column: 3, scope: !12743)
!12746 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12639, file: !12639, line: 483, type: !12747, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12763)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{!12682, !12749, !12756}
!12749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12750, size: 32)
!12750 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12646, line: 114, baseType: !12751)
!12751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12646, line: 94, size: 96, elements: !12752)
!12752 = !{!12753, !12754, !12755}
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12751, file: !12646, line: 96, baseType: !152, size: 32)
!12754 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12751, file: !12646, line: 102, baseType: !152, size: 32, offset: 32)
!12755 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12751, file: !12646, line: 109, baseType: !152, size: 32, offset: 64)
!12756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12757, size: 32)
!12757 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12646, line: 139, baseType: !12758)
!12758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12646, line: 119, size: 96, elements: !12759)
!12759 = !{!12760, !12761, !12762}
!12760 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12758, file: !12646, line: 121, baseType: !152, size: 32)
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12758, file: !12646, line: 127, baseType: !152, size: 32, offset: 32)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12758, file: !12646, line: 133, baseType: !152, size: 32, offset: 64)
!12763 = !{!12764, !12765, !12766, !12767}
!12764 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12746, file: !12639, line: 483, type: !12749)
!12765 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12746, file: !12639, line: 484, type: !12756)
!12766 = !DILocalVariable(name: "status", scope: !12746, file: !12639, line: 486, type: !12682)
!12767 = !DILocalVariable(name: "pllfreq", scope: !12746, file: !12639, line: 487, type: !152)
!12768 = !DILocation(line: 0, scope: !12746)
!12769 = !DILocation(line: 490, column: 6, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12746, file: !12639, line: 490, column: 6)
!12771 = !DILocation(line: 490, column: 25, scope: !12770)
!12772 = !DILocation(line: 490, column: 6, scope: !12746)
!12773 = !DILocation(line: 493, column: 15, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12770, file: !12639, line: 491, column: 3)
!12775 = !DILocation(line: 496, column: 8, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12774, file: !12639, line: 496, column: 8)
!12777 = !DILocation(line: 496, column: 29, scope: !12776)
!12778 = !DILocation(line: 496, column: 8, scope: !12774)
!12779 = !DILocation(line: 498, column: 7, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12776, file: !12639, line: 497, column: 5)
!12781 = !DILocation(line: 499, column: 7, scope: !12780)
!12782 = !DILocation(line: 499, column: 14, scope: !12780)
!12783 = !DILocation(line: 499, column: 35, scope: !12780)
!12784 = distinct !{!12784, !12781, !12785}
!12785 = !DILocation(line: 502, column: 7, scope: !12780)
!12786 = !DILocation(line: 506, column: 76, scope: !12774)
!12787 = !DILocation(line: 506, column: 103, scope: !12774)
!12788 = !DILocation(line: 507, column: 54, scope: !12774)
!12789 = !DILocation(line: 506, column: 5, scope: !12774)
!12790 = !DILocation(line: 510, column: 14, scope: !12774)
!12791 = !DILocation(line: 511, column: 3, scope: !12774)
!12792 = !DILocation(line: 0, scope: !12770)
!12793 = !DILocation(line: 518, column: 3, scope: !12746)
!12794 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12639, file: !12639, line: 642, type: !12795, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12797)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{!12682}
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "status", scope: !12794, file: !12639, line: 644, type: !12682)
!12799 = !DILocation(line: 0, scope: !12794)
!12800 = !DILocation(line: 647, column: 6, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12794, file: !12639, line: 647, column: 6)
!12802 = !DILocation(line: 647, column: 27, scope: !12801)
!12803 = !DILocation(line: 663, column: 6, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12794, file: !12639, line: 663, column: 6)
!12805 = !DILocation(line: 663, column: 30, scope: !12804)
!12806 = !DILocation(line: 663, column: 6, scope: !12794)
!12807 = !DILocation(line: 669, column: 3, scope: !12794)
!12808 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12639, file: !12639, line: 611, type: !12809, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12811)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!152, !152, !12749}
!12811 = !{!12812, !12813, !12814}
!12812 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12808, file: !12639, line: 611, type: !152)
!12813 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12808, file: !12639, line: 611, type: !12749)
!12814 = !DILocalVariable(name: "pllfreq", scope: !12808, file: !12639, line: 613, type: !152)
!12815 = !DILocation(line: 0, scope: !12808)
!12816 = !DILocation(line: 622, column: 56, scope: !12808)
!12817 = !DILocation(line: 622, column: 61, scope: !12808)
!12818 = !DILocation(line: 622, column: 32, scope: !12808)
!12819 = !DILocation(line: 626, column: 45, scope: !12808)
!12820 = !DILocation(line: 626, column: 50, scope: !12808)
!12821 = !DILocation(line: 626, column: 21, scope: !12808)
!12822 = !DILocation(line: 630, column: 47, scope: !12808)
!12823 = !DILocation(line: 630, column: 82, scope: !12808)
!12824 = !DILocation(line: 630, column: 21, scope: !12808)
!12825 = !DILocation(line: 633, column: 3, scope: !12808)
!12826 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9587, file: !9587, line: 3007, type: !6360, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12827 = !DILocation(line: 3009, column: 11, scope: !12826)
!12828 = !DILocation(line: 3009, column: 44, scope: !12826)
!12829 = !DILocation(line: 3009, column: 3, scope: !12826)
!12830 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9587, file: !9587, line: 2987, type: !3111, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12831 = !DILocation(line: 2989, column: 3, scope: !12830)
!12832 = !DILocation(line: 2990, column: 1, scope: !12830)
!12833 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9587, file: !9587, line: 4304, type: !9721, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12834)
!12834 = !{!12835, !12836, !12837, !12838}
!12835 = !DILocalVariable(name: "Source", arg: 1, scope: !12833, file: !9587, line: 4304, type: !152)
!12836 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12833, file: !9587, line: 4304, type: !152)
!12837 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12833, file: !9587, line: 4304, type: !152)
!12838 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12833, file: !9587, line: 4304, type: !152)
!12839 = !DILocation(line: 0, scope: !12833)
!12840 = !DILocation(line: 4306, column: 3, scope: !12833)
!12841 = !DILocation(line: 4308, column: 3, scope: !12833)
!12842 = !DILocation(line: 4312, column: 1, scope: !12833)
!12843 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12639, file: !12639, line: 681, type: !12844, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12846)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{!12682, !152, !12756}
!12846 = !{!12847, !12848, !12849, !12850}
!12847 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12843, file: !12639, line: 681, type: !152)
!12848 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12843, file: !12639, line: 681, type: !12756)
!12849 = !DILocalVariable(name: "status", scope: !12843, file: !12639, line: 683, type: !12682)
!12850 = !DILocalVariable(name: "hclk_frequency", scope: !12843, file: !12639, line: 684, type: !152)
!12851 = !DILocation(line: 0, scope: !12843)
!12852 = !DILocation(line: 691, column: 20, scope: !12843)
!12853 = !DILocation(line: 694, column: 6, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12843, file: !12639, line: 694, column: 6)
!12855 = !DILocation(line: 694, column: 22, scope: !12854)
!12856 = !DILocation(line: 694, column: 6, scope: !12843)
!12857 = !DILocation(line: 697, column: 14, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12854, file: !12639, line: 695, column: 3)
!12859 = !DILocation(line: 701, column: 13, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12843, file: !12639, line: 701, column: 6)
!12861 = !DILocation(line: 701, column: 6, scope: !12843)
!12862 = !DILocation(line: 704, column: 5, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12860, file: !12639, line: 702, column: 3)
!12864 = !DILocation(line: 705, column: 5, scope: !12863)
!12865 = !DILocation(line: 705, column: 12, scope: !12863)
!12866 = !DILocation(line: 705, column: 33, scope: !12863)
!12867 = distinct !{!12867, !12864, !12868}
!12868 = !DILocation(line: 708, column: 5, scope: !12863)
!12869 = !DILocation(line: 711, column: 49, scope: !12863)
!12870 = !DILocation(line: 711, column: 5, scope: !12863)
!12871 = !DILocation(line: 712, column: 5, scope: !12863)
!12872 = !DILocation(line: 713, column: 5, scope: !12863)
!12873 = !DILocation(line: 713, column: 12, scope: !12863)
!12874 = !DILocation(line: 713, column: 37, scope: !12863)
!12875 = distinct !{!12875, !12872, !12876}
!12876 = !DILocation(line: 716, column: 5, scope: !12863)
!12877 = !DILocation(line: 719, column: 50, scope: !12863)
!12878 = !DILocation(line: 719, column: 5, scope: !12863)
!12879 = !DILocation(line: 720, column: 50, scope: !12863)
!12880 = !DILocation(line: 720, column: 5, scope: !12863)
!12881 = !DILocation(line: 721, column: 3, scope: !12863)
!12882 = !DILocation(line: 724, column: 6, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12843, file: !12639, line: 724, column: 6)
!12884 = !DILocation(line: 724, column: 22, scope: !12883)
!12885 = !DILocation(line: 724, column: 6, scope: !12843)
!12886 = !DILocation(line: 727, column: 14, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12883, file: !12639, line: 725, column: 3)
!12888 = !DILocation(line: 728, column: 3, scope: !12887)
!12889 = !DILocation(line: 731, column: 13, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12843, file: !12639, line: 731, column: 6)
!12891 = !DILocation(line: 731, column: 6, scope: !12843)
!12892 = !DILocation(line: 733, column: 5, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12890, file: !12639, line: 732, column: 3)
!12894 = !DILocation(line: 734, column: 3, scope: !12893)
!12895 = !DILocation(line: 736, column: 3, scope: !12843)
!12896 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9587, file: !9587, line: 4184, type: !3111, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12897 = !DILocation(line: 4186, column: 3, scope: !12896)
!12898 = !DILocation(line: 4187, column: 1, scope: !12896)
!12899 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9587, file: !9587, line: 4205, type: !6360, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12900 = !DILocation(line: 4207, column: 11, scope: !12899)
!12901 = !DILocation(line: 4207, column: 44, scope: !12899)
!12902 = !DILocation(line: 4207, column: 3, scope: !12899)
!12903 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9587, file: !9587, line: 3224, type: !6370, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12904)
!12904 = !{!12905}
!12905 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12903, file: !9587, line: 3224, type: !152)
!12906 = !DILocation(line: 0, scope: !12903)
!12907 = !DILocation(line: 3226, column: 3, scope: !12903)
!12908 = !DILocation(line: 3227, column: 1, scope: !12903)
!12909 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9587, file: !9587, line: 3188, type: !6370, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12910)
!12910 = !{!12911}
!12911 = !DILocalVariable(name: "Source", arg: 1, scope: !12909, file: !9587, line: 3188, type: !152)
!12912 = !DILocation(line: 0, scope: !12909)
!12913 = !DILocation(line: 3190, column: 3, scope: !12909)
!12914 = !DILocation(line: 3191, column: 1, scope: !12909)
!12915 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9587, file: !9587, line: 3204, type: !6360, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12916 = !DILocation(line: 3206, column: 21, scope: !12915)
!12917 = !DILocation(line: 3206, column: 3, scope: !12915)
!12918 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9587, file: !9587, line: 3240, type: !6370, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12919)
!12919 = !{!12920}
!12920 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12918, file: !9587, line: 3240, type: !152)
!12921 = !DILocation(line: 0, scope: !12918)
!12922 = !DILocation(line: 3242, column: 3, scope: !12918)
!12923 = !DILocation(line: 3243, column: 1, scope: !12918)
!12924 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9587, file: !9587, line: 3256, type: !6370, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12925)
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12924, file: !9587, line: 3256, type: !152)
!12927 = !DILocation(line: 0, scope: !12924)
!12928 = !DILocation(line: 3258, column: 3, scope: !12924)
!12929 = !DILocation(line: 3259, column: 1, scope: !12924)
!12930 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9587, file: !9587, line: 5153, type: !6360, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12931 = !DILocation(line: 5155, column: 11, scope: !12930)
!12932 = !DILocation(line: 5155, column: 47, scope: !12930)
!12933 = !DILocation(line: 5155, column: 3, scope: !12930)
!12934 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12639, file: !12639, line: 540, type: !12935, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !12937)
!12935 = !DISubroutineType(types: !12936)
!12936 = !{!12682, !152, !152, !12749, !12756}
!12937 = !{!12938, !12939, !12940, !12941, !12942, !12943}
!12938 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12934, file: !12639, line: 540, type: !152)
!12939 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12934, file: !12639, line: 540, type: !152)
!12940 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12934, file: !12639, line: 541, type: !12749)
!12941 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12934, file: !12639, line: 541, type: !12756)
!12942 = !DILocalVariable(name: "status", scope: !12934, file: !12639, line: 543, type: !12682)
!12943 = !DILocalVariable(name: "pllfreq", scope: !12934, file: !12639, line: 544, type: !152)
!12944 = !DILocation(line: 0, scope: !12934)
!12945 = !DILocation(line: 551, column: 6, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12934, file: !12639, line: 551, column: 6)
!12947 = !DILocation(line: 551, column: 25, scope: !12946)
!12948 = !DILocation(line: 551, column: 6, scope: !12934)
!12949 = !DILocation(line: 554, column: 15, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12946, file: !12639, line: 552, column: 3)
!12951 = !DILocation(line: 557, column: 8, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12950, file: !12639, line: 557, column: 8)
!12953 = !DILocation(line: 557, column: 29, scope: !12952)
!12954 = !DILocation(line: 557, column: 8, scope: !12950)
!12955 = !DILocation(line: 560, column: 20, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12957, file: !12639, line: 560, column: 10)
!12957 = distinct !DILexicalBlock(scope: !12952, file: !12639, line: 558, column: 5)
!12958 = !DILocation(line: 560, column: 10, scope: !12957)
!12959 = !DILocation(line: 562, column: 9, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12956, file: !12639, line: 561, column: 7)
!12961 = !DILocation(line: 563, column: 7, scope: !12960)
!12962 = !DILocation(line: 566, column: 9, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12956, file: !12639, line: 565, column: 7)
!12964 = !DILocation(line: 570, column: 7, scope: !12957)
!12965 = !DILocation(line: 571, column: 7, scope: !12957)
!12966 = !DILocation(line: 571, column: 14, scope: !12957)
!12967 = !DILocation(line: 571, column: 35, scope: !12957)
!12968 = distinct !{!12968, !12965, !12969}
!12969 = !DILocation(line: 574, column: 7, scope: !12957)
!12970 = !DILocation(line: 578, column: 76, scope: !12950)
!12971 = !DILocation(line: 578, column: 103, scope: !12950)
!12972 = !DILocation(line: 579, column: 54, scope: !12950)
!12973 = !DILocation(line: 578, column: 5, scope: !12950)
!12974 = !DILocation(line: 582, column: 14, scope: !12950)
!12975 = !DILocation(line: 583, column: 3, scope: !12950)
!12976 = !DILocation(line: 0, scope: !12946)
!12977 = !DILocation(line: 590, column: 3, scope: !12934)
!12978 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9587, file: !9587, line: 2969, type: !6360, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12979 = !DILocation(line: 2971, column: 11, scope: !12978)
!12980 = !DILocation(line: 2971, column: 44, scope: !12978)
!12981 = !DILocation(line: 2971, column: 3, scope: !12978)
!12982 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9587, file: !9587, line: 2929, type: !3111, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12983 = !DILocation(line: 2931, column: 3, scope: !12982)
!12984 = !DILocation(line: 2932, column: 1, scope: !12982)
!12985 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9587, file: !9587, line: 2939, type: !3111, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12986 = !DILocation(line: 2941, column: 3, scope: !12985)
!12987 = !DILocation(line: 2942, column: 1, scope: !12985)
!12988 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9587, file: !9587, line: 2949, type: !3111, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !2182)
!12989 = !DILocation(line: 2951, column: 3, scope: !12988)
!12990 = !DILocation(line: 2952, column: 1, scope: !12988)
!12991 = distinct !DISubprogram(name: "z_device_state_init", scope: !12992, file: !12992, line: 23, type: !3111, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12993)
!12992 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12993 = !{!12994}
!12994 = !DILocalVariable(name: "dev", scope: !12991, file: !12992, line: 25, type: !12995)
!12995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12996, size: 32)
!12996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12997)
!12997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12998)
!12998 = !{!12999, !13000, !13001, !13002, !13008, !13009}
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12997, file: !247, line: 380, baseType: !118, size: 32)
!13000 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12997, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12997, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12997, file: !247, line: 386, baseType: !13003, size: 32, offset: 96)
!13003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13004, size: 32)
!13004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13005)
!13005 = !{!13006, !13007}
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13004, file: !247, line: 359, baseType: !195, size: 8)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13004, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12997, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12997, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13010 = !DILocation(line: 0, scope: !12991)
!13011 = !DILocation(line: 31, column: 1, scope: !12991)
!13012 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12992, file: !12992, line: 33, type: !13013, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13015)
!13013 = !DISubroutineType(types: !13014)
!13014 = !{!12995, !118}
!13015 = !{!13016, !13017}
!13016 = !DILocalVariable(name: "name", arg: 1, scope: !13012, file: !12992, line: 33, type: !118)
!13017 = !DILocalVariable(name: "dev", scope: !13012, file: !12992, line: 35, type: !12995)
!13018 = !DILocation(line: 0, scope: !13012)
!13019 = !DILocation(line: 40, column: 12, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13012, file: !12992, line: 40, column: 6)
!13021 = !DILocation(line: 40, column: 21, scope: !13020)
!13022 = !DILocation(line: 40, column: 25, scope: !13020)
!13023 = !DILocation(line: 40, column: 33, scope: !13020)
!13024 = !DILocation(line: 40, column: 6, scope: !13012)
!13025 = !DILocation(line: 55, column: 2, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13012, file: !12992, line: 55, column: 2)
!13027 = !DILocation(line: 50, column: 7, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12992, line: 50, column: 7)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !12992, line: 49, column: 57)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !12992, line: 49, column: 2)
!13031 = distinct !DILexicalBlock(scope: !13012, file: !12992, line: 49, column: 2)
!13032 = !DILocation(line: 50, column: 30, scope: !13028)
!13033 = !DILocation(line: 50, column: 39, scope: !13028)
!13034 = !DILocation(line: 50, column: 44, scope: !13028)
!13035 = !DILocation(line: 50, column: 7, scope: !13029)
!13036 = !DILocation(line: 49, column: 53, scope: !13030)
!13037 = !DILocation(line: 49, column: 33, scope: !13030)
!13038 = !DILocation(line: 49, column: 2, scope: !13031)
!13039 = distinct !{!13039, !13038, !13040}
!13040 = !DILocation(line: 53, column: 2, scope: !13031)
!13041 = !DILocation(line: 56, column: 7, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !12992, line: 56, column: 7)
!13043 = distinct !DILexicalBlock(scope: !13044, file: !12992, line: 55, column: 57)
!13044 = distinct !DILexicalBlock(scope: !13026, file: !12992, line: 55, column: 2)
!13045 = !DILocation(line: 56, column: 30, scope: !13042)
!13046 = !DILocation(line: 56, column: 52, scope: !13042)
!13047 = !DILocation(line: 56, column: 34, scope: !13042)
!13048 = !DILocation(line: 56, column: 58, scope: !13042)
!13049 = !DILocation(line: 56, column: 7, scope: !13043)
!13050 = !DILocation(line: 55, column: 53, scope: !13044)
!13051 = !DILocation(line: 55, column: 33, scope: !13044)
!13052 = distinct !{!13052, !13025, !13053}
!13053 = !DILocation(line: 59, column: 2, scope: !13026)
!13054 = !DILocation(line: 62, column: 1, scope: !13012)
!13055 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12992, file: !12992, line: 93, type: !13056, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13058)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{!145, !12995}
!13058 = !{!13059}
!13059 = !DILocalVariable(name: "dev", arg: 1, scope: !13055, file: !12992, line: 93, type: !12995)
!13060 = !DILocation(line: 0, scope: !13055)
!13061 = !DILocation(line: 99, column: 10, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13055, file: !12992, line: 99, column: 6)
!13063 = !DILocation(line: 99, column: 6, scope: !13055)
!13064 = !DILocation(line: 103, column: 14, scope: !13055)
!13065 = !DILocation(line: 103, column: 21, scope: !13055)
!13066 = !DILocation(line: 103, column: 33, scope: !13055)
!13067 = !DILocation(line: 103, column: 49, scope: !13055)
!13068 = !DILocation(line: 103, column: 58, scope: !13055)
!13069 = !DILocation(line: 104, column: 1, scope: !13055)
!13070 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12992, file: !12992, line: 87, type: !13071, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13074)
!13071 = !DISubroutineType(types: !13072)
!13072 = !{!185, !13073}
!13073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12995, size: 32)
!13074 = !{!13075}
!13075 = !DILocalVariable(name: "devices", arg: 1, scope: !13070, file: !12992, line: 87, type: !13073)
!13076 = !DILocation(line: 0, scope: !13070)
!13077 = !DILocation(line: 89, column: 11, scope: !13070)
!13078 = !DILocation(line: 90, column: 2, scope: !13070)
!13079 = distinct !DISubprogram(name: "device_required_foreach", scope: !12992, file: !12992, line: 125, type: !13080, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13086)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!107, !12995, !13082, !106}
!13082 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13083)
!13083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13084, size: 32)
!13084 = !DISubroutineType(types: !13085)
!13085 = !{!107, !12995, !106}
!13086 = !{!13087, !13088, !13089, !13090, !13091}
!13087 = !DILocalVariable(name: "dev", arg: 1, scope: !13079, file: !12992, line: 125, type: !12995)
!13088 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13079, file: !12992, line: 126, type: !13082)
!13089 = !DILocalVariable(name: "context", arg: 3, scope: !13079, file: !12992, line: 127, type: !106)
!13090 = !DILocalVariable(name: "handle_count", scope: !13079, file: !12992, line: 129, type: !185)
!13091 = !DILocalVariable(name: "handles", scope: !13079, file: !12992, line: 130, type: !260)
!13092 = !DILocation(line: 0, scope: !13079)
!13093 = !DILocation(line: 129, column: 2, scope: !13079)
!13094 = !DILocation(line: 129, column: 9, scope: !13079)
!13095 = !DILocation(line: 130, column: 35, scope: !13079)
!13096 = !DILocation(line: 132, column: 33, scope: !13079)
!13097 = !DILocation(line: 132, column: 9, scope: !13079)
!13098 = !DILocation(line: 133, column: 1, scope: !13079)
!13099 = !DILocation(line: 132, column: 2, scope: !13079)
!13100 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13101, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13103)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{!260, !12995, !2561}
!13103 = !{!13104, !13105, !13106, !13107}
!13104 = !DILocalVariable(name: "dev", arg: 1, scope: !13100, file: !247, line: 493, type: !12995)
!13105 = !DILocalVariable(name: "count", arg: 2, scope: !13100, file: !247, line: 493, type: !2561)
!13106 = !DILocalVariable(name: "rv", scope: !13100, file: !247, line: 495, type: !260)
!13107 = !DILocalVariable(name: "i", scope: !13108, file: !247, line: 498, type: !185)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !247, line: 497, column: 18)
!13109 = distinct !DILexicalBlock(scope: !13100, file: !247, line: 497, column: 6)
!13110 = !DILocation(line: 0, scope: !13100)
!13111 = !DILocation(line: 495, column: 35, scope: !13100)
!13112 = !DILocation(line: 497, column: 9, scope: !13109)
!13113 = !DILocation(line: 497, column: 6, scope: !13100)
!13114 = !DILocation(line: 0, scope: !13108)
!13115 = !DILocation(line: 500, column: 11, scope: !13108)
!13116 = !DILocation(line: 500, column: 40, scope: !13108)
!13117 = !DILocation(line: 502, column: 4, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13108, file: !247, line: 501, column: 40)
!13119 = distinct !{!13119, !13120, !13121}
!13120 = !DILocation(line: 500, column: 3, scope: !13108)
!13121 = !DILocation(line: 503, column: 3, scope: !13108)
!13122 = !DILocation(line: 504, column: 10, scope: !13108)
!13123 = !DILocation(line: 505, column: 2, scope: !13108)
!13124 = !DILocation(line: 507, column: 2, scope: !13100)
!13125 = distinct !DISubprogram(name: "device_visitor", scope: !12992, file: !12992, line: 106, type: !13126, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13128)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{!107, !260, !185, !13082, !106}
!13128 = !{!13129, !13130, !13131, !13132, !13133, !13135, !13138, !13139}
!13129 = !DILocalVariable(name: "handles", arg: 1, scope: !13125, file: !12992, line: 106, type: !260)
!13130 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13125, file: !12992, line: 107, type: !185)
!13131 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13125, file: !12992, line: 108, type: !13082)
!13132 = !DILocalVariable(name: "context", arg: 4, scope: !13125, file: !12992, line: 109, type: !106)
!13133 = !DILocalVariable(name: "i", scope: !13134, file: !12992, line: 112, type: !185)
!13134 = distinct !DILexicalBlock(scope: !13125, file: !12992, line: 112, column: 2)
!13135 = !DILocalVariable(name: "dh", scope: !13136, file: !12992, line: 113, type: !262)
!13136 = distinct !DILexicalBlock(scope: !13137, file: !12992, line: 112, column: 44)
!13137 = distinct !DILexicalBlock(scope: !13134, file: !12992, line: 112, column: 2)
!13138 = !DILocalVariable(name: "rdev", scope: !13136, file: !12992, line: 114, type: !12995)
!13139 = !DILocalVariable(name: "rc", scope: !13136, file: !12992, line: 115, type: !107)
!13140 = !DILocation(line: 0, scope: !13125)
!13141 = !DILocation(line: 0, scope: !13134)
!13142 = !DILocation(line: 112, column: 23, scope: !13137)
!13143 = !DILocation(line: 112, column: 2, scope: !13134)
!13144 = distinct !{!13144, !13143, !13145}
!13145 = !DILocation(line: 120, column: 2, scope: !13134)
!13146 = !DILocation(line: 113, column: 24, scope: !13136)
!13147 = !DILocation(line: 0, scope: !13136)
!13148 = !DILocation(line: 114, column: 31, scope: !13136)
!13149 = !DILocation(line: 115, column: 12, scope: !13136)
!13150 = !DILocation(line: 117, column: 10, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13136, file: !12992, line: 117, column: 7)
!13152 = !DILocation(line: 112, column: 39, scope: !13137)
!13153 = !DILocation(line: 123, column: 1, scope: !13125)
!13154 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13155, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13157)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{!12995, !262}
!13157 = !{!13158, !13159, !13160}
!13158 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13154, file: !247, line: 439, type: !262)
!13159 = !DILocalVariable(name: "dev", scope: !13154, file: !247, line: 443, type: !12995)
!13160 = !DILocalVariable(name: "numdev", scope: !13154, file: !247, line: 444, type: !185)
!13161 = !DILocation(line: 0, scope: !13154)
!13162 = !DILocation(line: 446, column: 7, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13154, file: !247, line: 446, column: 6)
!13164 = !DILocation(line: 446, column: 18, scope: !13163)
!13165 = !DILocation(line: 446, column: 23, scope: !13163)
!13166 = !DILocation(line: 450, column: 2, scope: !13154)
!13167 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12992, file: !12992, line: 135, type: !13080, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13168)
!13168 = !{!13169, !13170, !13171, !13172, !13173}
!13169 = !DILocalVariable(name: "dev", arg: 1, scope: !13167, file: !12992, line: 135, type: !12995)
!13170 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13167, file: !12992, line: 136, type: !13082)
!13171 = !DILocalVariable(name: "context", arg: 3, scope: !13167, file: !12992, line: 137, type: !106)
!13172 = !DILocalVariable(name: "handle_count", scope: !13167, file: !12992, line: 139, type: !185)
!13173 = !DILocalVariable(name: "handles", scope: !13167, file: !12992, line: 140, type: !260)
!13174 = !DILocation(line: 0, scope: !13167)
!13175 = !DILocation(line: 139, column: 2, scope: !13167)
!13176 = !DILocation(line: 139, column: 9, scope: !13167)
!13177 = !DILocation(line: 140, column: 35, scope: !13167)
!13178 = !DILocation(line: 142, column: 33, scope: !13167)
!13179 = !DILocation(line: 142, column: 9, scope: !13167)
!13180 = !DILocation(line: 143, column: 1, scope: !13167)
!13181 = !DILocation(line: 142, column: 2, scope: !13167)
!13182 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13101, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !13183)
!13183 = !{!13184, !13185, !13186, !13187, !13188}
!13184 = !DILocalVariable(name: "dev", arg: 1, scope: !13182, file: !247, line: 573, type: !12995)
!13185 = !DILocalVariable(name: "count", arg: 2, scope: !13182, file: !247, line: 573, type: !2561)
!13186 = !DILocalVariable(name: "rv", scope: !13182, file: !247, line: 575, type: !260)
!13187 = !DILocalVariable(name: "region", scope: !13182, file: !247, line: 576, type: !185)
!13188 = !DILocalVariable(name: "i", scope: !13182, file: !247, line: 577, type: !185)
!13189 = !DILocation(line: 0, scope: !13182)
!13190 = !DILocation(line: 575, column: 35, scope: !13182)
!13191 = !DILocation(line: 579, column: 9, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13182, file: !247, line: 579, column: 6)
!13193 = !DILocation(line: 579, column: 6, scope: !13182)
!13194 = !DILocation(line: 582, column: 8, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !247, line: 582, column: 8)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !247, line: 581, column: 23)
!13197 = distinct !DILexicalBlock(scope: !13192, file: !247, line: 579, column: 18)
!13198 = !DILocation(line: 582, column: 12, scope: !13195)
!13199 = !DILocation(line: 585, column: 6, scope: !13196)
!13200 = !DILocation(line: 0, scope: !13197)
!13201 = !DILocation(line: 581, column: 17, scope: !13197)
!13202 = !DILocation(line: 581, column: 3, scope: !13197)
!13203 = !DILocation(line: 588, column: 10, scope: !13197)
!13204 = !DILocation(line: 588, column: 16, scope: !13197)
!13205 = !DILocation(line: 589, column: 4, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13197, file: !247, line: 588, column: 39)
!13207 = !DILocation(line: 588, column: 3, scope: !13197)
!13208 = distinct !{!13208, !13207, !13209}
!13209 = !DILocation(line: 590, column: 3, scope: !13197)
!13210 = !DILocation(line: 591, column: 10, scope: !13197)
!13211 = !DILocation(line: 592, column: 2, scope: !13197)
!13212 = !DILocation(line: 575, column: 25, scope: !13182)
!13213 = !DILocation(line: 594, column: 2, scope: !13182)
!13214 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1973, file: !1973, line: 49, type: !13215, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2182)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{!187}
!13217 = !DILocation(line: 51, column: 10, scope: !13214)
!13218 = !DILocation(line: 51, column: 20, scope: !13214)
!13219 = !DILocation(line: 51, column: 2, scope: !13214)
!13220 = distinct !DISubprogram(name: "coredump", scope: !3078, file: !3078, line: 209, type: !13221, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13370)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{null, !32, !13223, !13267}
!13223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13224, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13225)
!13225 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !13226)
!13226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !13227)
!13227 = !{!13228}
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13226, file: !2691, line: 107, baseType: !13229, size: 256)
!13229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !13230)
!13230 = !{!13231, !13236, !13241, !13246, !13251, !13256, !13261, !13266}
!13231 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 99, baseType: !13232, size: 32)
!13232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 99, size: 32, elements: !13233)
!13233 = !{!13234, !13235}
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13232, file: !2691, line: 99, baseType: !152, size: 32)
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13232, file: !2691, line: 99, baseType: !152, size: 32)
!13236 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 100, baseType: !13237, size: 32, offset: 32)
!13237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 100, size: 32, elements: !13238)
!13238 = !{!13239, !13240}
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13237, file: !2691, line: 100, baseType: !152, size: 32)
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13237, file: !2691, line: 100, baseType: !152, size: 32)
!13241 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 101, baseType: !13242, size: 32, offset: 64)
!13242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 101, size: 32, elements: !13243)
!13243 = !{!13244, !13245}
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13242, file: !2691, line: 101, baseType: !152, size: 32)
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13242, file: !2691, line: 101, baseType: !152, size: 32)
!13246 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 102, baseType: !13247, size: 32, offset: 96)
!13247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 102, size: 32, elements: !13248)
!13248 = !{!13249, !13250}
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13247, file: !2691, line: 102, baseType: !152, size: 32)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13247, file: !2691, line: 102, baseType: !152, size: 32)
!13251 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 103, baseType: !13252, size: 32, offset: 128)
!13252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 103, size: 32, elements: !13253)
!13253 = !{!13254, !13255}
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13252, file: !2691, line: 103, baseType: !152, size: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13252, file: !2691, line: 103, baseType: !152, size: 32)
!13256 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 104, baseType: !13257, size: 32, offset: 160)
!13257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 104, size: 32, elements: !13258)
!13258 = !{!13259, !13260}
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13257, file: !2691, line: 104, baseType: !152, size: 32)
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13257, file: !2691, line: 104, baseType: !152, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_member, scope: !13229, file: !2691, line: 105, baseType: !13262, size: 32, offset: 192)
!13262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13229, file: !2691, line: 105, size: 32, elements: !13263)
!13263 = !{!13264, !13265}
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13262, file: !2691, line: 105, baseType: !152, size: 32)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13262, file: !2691, line: 105, baseType: !152, size: 32)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13229, file: !2691, line: 106, baseType: !152, size: 32, offset: 224)
!13267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13268, size: 32)
!13268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13269)
!13269 = !{!13270, !13328, !13340, !13341, !13342, !13343, !13344, !13350, !13365}
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13268, file: !309, line: 247, baseType: !13271, size: 384)
!13271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13272)
!13272 = !{!13273, !13297, !13304, !13305, !13306, !13315, !13316, !13317}
!13273 = !DIDerivedType(tag: DW_TAG_member, scope: !13271, file: !309, line: 60, baseType: !13274, size: 64)
!13274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13271, file: !309, line: 60, size: 64, elements: !13275)
!13275 = !{!13276, !13291}
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13274, file: !309, line: 61, baseType: !13277, size: 64)
!13277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13278)
!13278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13279)
!13279 = !{!13280, !13286}
!13280 = !DIDerivedType(tag: DW_TAG_member, scope: !13278, file: !319, line: 38, baseType: !13281, size: 32)
!13281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13278, file: !319, line: 38, size: 32, elements: !13282)
!13282 = !{!13283, !13285}
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13281, file: !319, line: 39, baseType: !13284, size: 32)
!13284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13278, size: 32)
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13281, file: !319, line: 40, baseType: !13284, size: 32)
!13286 = !DIDerivedType(tag: DW_TAG_member, scope: !13278, file: !319, line: 42, baseType: !13287, size: 32, offset: 32)
!13287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13278, file: !319, line: 42, size: 32, elements: !13288)
!13288 = !{!13289, !13290}
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13287, file: !319, line: 43, baseType: !13284, size: 32)
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13287, file: !319, line: 44, baseType: !13284, size: 32)
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13274, file: !309, line: 62, baseType: !13292, size: 64)
!13292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13293)
!13293 = !{!13294}
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13292, file: !335, line: 50, baseType: !13295, size: 64)
!13295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13296, size: 64, elements: !340)
!13296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13292, size: 32)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13271, file: !309, line: 68, baseType: !13298, size: 32, offset: 64)
!13298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13299, size: 32)
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13300)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13301)
!13301 = !{!13302}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13300, file: !345, line: 232, baseType: !13303, size: 64)
!13303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13278)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13271, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13271, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13306 = !DIDerivedType(tag: DW_TAG_member, scope: !13271, file: !309, line: 90, baseType: !13307, size: 16, offset: 112)
!13307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13271, file: !309, line: 90, size: 16, elements: !13308)
!13308 = !{!13309, !13314}
!13309 = !DIDerivedType(tag: DW_TAG_member, scope: !13307, file: !309, line: 91, baseType: !13310, size: 16)
!13310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13307, file: !309, line: 91, size: 16, elements: !13311)
!13311 = !{!13312, !13313}
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13310, file: !309, line: 96, baseType: !359, size: 8)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13310, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13307, file: !309, line: 100, baseType: !197, size: 16)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13271, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13271, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13271, file: !309, line: 131, baseType: !13318, size: 192, offset: 192)
!13318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13319)
!13319 = !{!13320, !13321, !13327}
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13318, file: !345, line: 245, baseType: !13277, size: 64)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13318, file: !345, line: 246, baseType: !13322, size: 32, offset: 64)
!13322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13323)
!13323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13324, size: 32)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{null, !13326}
!13326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13318, size: 32)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13318, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13268, file: !309, line: 250, baseType: !13329, size: 288, offset: 384)
!13329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13330)
!13330 = !{!13331, !13332, !13333, !13334, !13335, !13336, !13337, !13338, !13339}
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13329, file: !379, line: 26, baseType: !152, size: 32)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13329, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13329, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13329, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13329, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13329, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13329, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13329, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13329, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13268, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13268, file: !309, line: 256, baseType: !13299, size: 64, offset: 704)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13268, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13268, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13268, file: !309, line: 300, baseType: !13345, size: 96, offset: 1056)
!13345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13346)
!13346 = !{!13347, !13348, !13349}
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13345, file: !309, line: 153, baseType: !22, size: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13345, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13345, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13268, file: !309, line: 325, baseType: !13351, size: 32, offset: 1152)
!13351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13352, size: 32)
!13352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13353)
!13353 = !{!13354, !13360, !13361}
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13352, file: !406, line: 5074, baseType: !13355, size: 96)
!13355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13356)
!13356 = !{!13357, !13358, !13359}
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13355, file: !410, line: 57, baseType: !413, size: 32)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13355, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13355, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13352, file: !406, line: 5075, baseType: !13299, size: 64, offset: 96)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13352, file: !406, line: 5076, baseType: !13362, size: 32, offset: 160)
!13362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13363)
!13363 = !{!13364}
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13362, file: !420, line: 52, baseType: !22, size: 32)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13268, file: !309, line: 343, baseType: !13366, size: 64, offset: 1184)
!13366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13367)
!13367 = !{!13368, !13369}
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13366, file: !379, line: 63, baseType: !152, size: 32)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13366, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13370 = !{!13371, !13372, !13373}
!13371 = !DILocalVariable(name: "reason", arg: 1, scope: !13220, file: !3078, line: 209, type: !32)
!13372 = !DILocalVariable(name: "esf", arg: 2, scope: !13220, file: !3078, line: 209, type: !13223)
!13373 = !DILocalVariable(name: "thread", arg: 3, scope: !13220, file: !3078, line: 210, type: !13267)
!13374 = !DILocation(line: 0, scope: !13220)
!13375 = !DILocation(line: 212, column: 1, scope: !13220)
!13376 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3078, file: !3078, line: 214, type: !13377, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13379)
!13377 = !DISubroutineType(types: !13378)
!13378 = !{null, !22, !22}
!13379 = !{!13380, !13381}
!13380 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13376, file: !3078, line: 214, type: !22)
!13381 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13376, file: !3078, line: 214, type: !22)
!13382 = !DILocation(line: 0, scope: !13376)
!13383 = !DILocation(line: 216, column: 1, scope: !13376)
!13384 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3078, file: !3078, line: 218, type: !13385, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13387)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{null, !194, !185}
!13387 = !{!13388, !13389}
!13388 = !DILocalVariable(name: "buf", arg: 1, scope: !13384, file: !3078, line: 218, type: !194)
!13389 = !DILocalVariable(name: "buflen", arg: 2, scope: !13384, file: !3078, line: 218, type: !185)
!13390 = !DILocation(line: 0, scope: !13384)
!13391 = !DILocation(line: 220, column: 1, scope: !13384)
!13392 = distinct !DISubprogram(name: "coredump_query", scope: !3078, file: !3078, line: 222, type: !13393, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13395)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{!107, !3077, !106}
!13395 = !{!13396, !13397}
!13396 = !DILocalVariable(name: "query_id", arg: 1, scope: !13392, file: !3078, line: 222, type: !3077)
!13397 = !DILocalVariable(name: "arg", arg: 2, scope: !13392, file: !3078, line: 222, type: !106)
!13398 = !DILocation(line: 0, scope: !13392)
!13399 = !DILocation(line: 224, column: 2, scope: !13392)
!13400 = distinct !DISubprogram(name: "coredump_cmd", scope: !3078, file: !3078, line: 227, type: !13401, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13403)
!13401 = !DISubroutineType(types: !13402)
!13402 = !{!107, !3084, !106}
!13403 = !{!13404, !13405}
!13404 = !DILocalVariable(name: "query_id", arg: 1, scope: !13400, file: !3078, line: 227, type: !3084)
!13405 = !DILocalVariable(name: "arg", arg: 2, scope: !13400, file: !3078, line: 227, type: !106)
!13406 = !DILocation(line: 0, scope: !13400)
!13407 = !DILocation(line: 229, column: 2, scope: !13400)
!13408 = distinct !DISubprogram(name: "arch_system_halt", scope: !13409, file: !13409, line: 23, type: !5965, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13410)
!13409 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13410 = !{!13411}
!13411 = !DILocalVariable(name: "reason", arg: 1, scope: !13408, file: !13409, line: 23, type: !32)
!13412 = !DILocation(line: 0, scope: !13408)
!13413 = !DILocation(line: 55, column: 2, scope: !13414, inlinedAt: !13418)
!13414 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13415)
!13415 = !{!13416, !13417}
!13416 = !DILocalVariable(name: "key", scope: !13414, file: !5954, line: 44, type: !32)
!13417 = !DILocalVariable(name: "tmp", scope: !13414, file: !5954, line: 53, type: !32)
!13418 = distinct !DILocation(line: 31, column: 8, scope: !13408)
!13419 = !{i64 2043396}
!13420 = !DILocation(line: 0, scope: !13414, inlinedAt: !13418)
!13421 = !DILocation(line: 32, column: 2, scope: !13408)
!13422 = !DILocation(line: 32, column: 2, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !13409, line: 32, column: 2)
!13424 = distinct !DILexicalBlock(scope: !13408, file: !13409, line: 32, column: 2)
!13425 = distinct !{!13425, !13426, !13427}
!13426 = !DILocation(line: 32, column: 2, scope: !13424)
!13427 = !DILocation(line: 34, column: 2, scope: !13424)
!13428 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13409, file: !13409, line: 39, type: !13429, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{null, !32, !13223}
!13431 = !{!13432, !13433}
!13432 = !DILocalVariable(name: "reason", arg: 1, scope: !13428, file: !13409, line: 39, type: !32)
!13433 = !DILocalVariable(name: "esf", arg: 2, scope: !13428, file: !13409, line: 40, type: !13223)
!13434 = !DILocation(line: 0, scope: !13428)
!13435 = !DILocation(line: 45, column: 2, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !13409, line: 45, column: 2)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13409, line: 45, column: 2)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13409, line: 45, column: 2)
!13439 = distinct !DILexicalBlock(scope: !13428, file: !13409, line: 45, column: 2)
!13440 = !DILocation(line: 46, column: 2, scope: !13428)
!13441 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13409, file: !13409, line: 81, type: !5965, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13442)
!13442 = !{!13443}
!13443 = !DILocalVariable(name: "reason", arg: 1, scope: !13441, file: !13409, line: 81, type: !32)
!13444 = !DILocation(line: 0, scope: !13441)
!13445 = !DILocation(line: 83, column: 2, scope: !13441)
!13446 = distinct !DISubprogram(name: "z_fatal_error", scope: !13409, file: !13409, line: 96, type: !13429, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13447)
!13447 = !{!13448, !13449, !13450, !13451}
!13448 = !DILocalVariable(name: "reason", arg: 1, scope: !13446, file: !13409, line: 96, type: !32)
!13449 = !DILocalVariable(name: "esf", arg: 2, scope: !13446, file: !13409, line: 96, type: !13223)
!13450 = !DILocalVariable(name: "key", scope: !13446, file: !13409, line: 102, type: !32)
!13451 = !DILocalVariable(name: "thread", scope: !13446, file: !13409, line: 103, type: !13267)
!13452 = !DILocation(line: 0, scope: !13446)
!13453 = !DILocation(line: 55, column: 2, scope: !13414, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 102, column: 21, scope: !13446)
!13455 = !DILocation(line: 0, scope: !13414, inlinedAt: !13454)
!13456 = !DILocation(line: 104, column: 4, scope: !13446)
!13457 = !DILocation(line: 109, column: 2, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !13409, line: 109, column: 2)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !13409, line: 109, column: 2)
!13460 = distinct !DILexicalBlock(scope: !13461, file: !13409, line: 109, column: 2)
!13461 = distinct !DILexicalBlock(scope: !13446, file: !13409, line: 109, column: 2)
!13462 = !DILocation(line: 119, column: 11, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13446, file: !13409, line: 119, column: 6)
!13464 = !DILocation(line: 119, column: 20, scope: !13463)
!13465 = !DILocalVariable(name: "esf", arg: 1, scope: !13466, file: !7325, line: 71, type: !13223)
!13466 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7325, file: !7325, line: 71, type: !13467, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13469)
!13467 = !DISubroutineType(types: !13468)
!13468 = !{!145, !13223}
!13469 = !{!13465}
!13470 = !DILocation(line: 0, scope: !13466, inlinedAt: !13471)
!13471 = distinct !DILocation(line: 119, column: 23, scope: !13463)
!13472 = !DILocation(line: 73, column: 21, scope: !13466, inlinedAt: !13471)
!13473 = !DILocation(line: 73, column: 26, scope: !13466, inlinedAt: !13471)
!13474 = !DILocation(line: 73, column: 9, scope: !13466, inlinedAt: !13471)
!13475 = !DILocation(line: 119, column: 6, scope: !13446)
!13476 = !DILocation(line: 120, column: 3, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !13409, line: 120, column: 3)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13409, line: 120, column: 3)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !13409, line: 120, column: 3)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !13409, line: 120, column: 3)
!13481 = distinct !DILexicalBlock(scope: !13463, file: !13409, line: 119, column: 57)
!13482 = !DILocation(line: 121, column: 2, scope: !13481)
!13483 = !DILocation(line: 124, column: 2, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13485, file: !13409, line: 124, column: 2)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !13409, line: 124, column: 2)
!13486 = distinct !DILexicalBlock(scope: !13487, file: !13409, line: 124, column: 2)
!13487 = distinct !DILexicalBlock(scope: !13446, file: !13409, line: 124, column: 2)
!13488 = !DILocation(line: 131, column: 2, scope: !13446)
!13489 = !DILocation(line: 0, scope: !13466, inlinedAt: !13490)
!13490 = distinct !DILocation(line: 163, column: 24, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !13409, line: 163, column: 7)
!13492 = distinct !DILexicalBlock(scope: !13493, file: !13409, line: 160, column: 9)
!13493 = distinct !DILexicalBlock(scope: !13446, file: !13409, line: 146, column: 6)
!13494 = !DILocation(line: 73, column: 21, scope: !13466, inlinedAt: !13490)
!13495 = !DILocation(line: 73, column: 26, scope: !13466, inlinedAt: !13490)
!13496 = !DILocation(line: 73, column: 9, scope: !13466, inlinedAt: !13490)
!13497 = !DILocation(line: 163, column: 7, scope: !13492)
!13498 = !DILocalVariable(name: "key", arg: 1, scope: !13499, file: !5954, line: 84, type: !32)
!13499 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13500)
!13500 = !{!13498}
!13501 = !DILocation(line: 0, scope: !13499, inlinedAt: !13502)
!13502 = distinct !DILocation(line: 171, column: 4, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13491, file: !13409, line: 163, column: 58)
!13504 = !DILocation(line: 95, column: 2, scope: !13499, inlinedAt: !13502)
!13505 = !{i64 2044213}
!13506 = !DILocation(line: 172, column: 4, scope: !13503)
!13507 = !DILocation(line: 163, column: 21, scope: !13491)
!13508 = !DILocation(line: 178, column: 15, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !13409, line: 178, column: 8)
!13510 = distinct !DILexicalBlock(scope: !13491, file: !13409, line: 174, column: 10)
!13511 = !DILocation(line: 0, scope: !13499, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 179, column: 5, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13509, file: !13409, line: 178, column: 38)
!13514 = !DILocation(line: 0, scope: !13499, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 186, column: 2, scope: !13446)
!13516 = !DILocation(line: 178, column: 8, scope: !13510)
!13517 = !DILocation(line: 189, column: 3, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !13409, line: 188, column: 41)
!13519 = distinct !DILexicalBlock(scope: !13446, file: !13409, line: 188, column: 6)
!13520 = !DILocation(line: 191, column: 1, scope: !13446)
!13521 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13522, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !2182)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{!13524}
!13524 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13267)
!13525 = !DILocation(line: 535, column: 9, scope: !13521)
!13526 = !DILocation(line: 535, column: 2, scope: !13521)
!13527 = distinct !DISubprogram(name: "reason_to_str", scope: !13409, file: !13409, line: 62, type: !13528, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13530)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!118, !32}
!13530 = !{!13531}
!13531 = !DILocalVariable(name: "reason", arg: 1, scope: !13527, file: !13409, line: 62, type: !32)
!13532 = !DILocation(line: 0, scope: !13527)
!13533 = !DILocation(line: 64, column: 2, scope: !13527)
!13534 = !DILocation(line: 0, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13527, file: !13409, line: 64, column: 18)
!13536 = !DILocation(line: 78, column: 1, scope: !13527)
!13537 = distinct !DISubprogram(name: "thread_name_get", scope: !13409, file: !13409, line: 51, type: !13538, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!118, !13267}
!13540 = !{!13541, !13542}
!13541 = !DILocalVariable(name: "thread", arg: 1, scope: !13537, file: !13409, line: 51, type: !13267)
!13542 = !DILocalVariable(name: "thread_name", scope: !13537, file: !13409, line: 53, type: !118)
!13543 = !DILocation(line: 0, scope: !13537)
!13544 = !DILocation(line: 53, column: 36, scope: !13537)
!13545 = !DILocation(line: 53, column: 28, scope: !13537)
!13546 = !DILocation(line: 53, column: 47, scope: !13537)
!13547 = !DILocation(line: 55, column: 19, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13537, file: !13409, line: 55, column: 6)
!13549 = !DILocation(line: 55, column: 28, scope: !13548)
!13550 = !DILocation(line: 55, column: 32, scope: !13548)
!13551 = !DILocation(line: 55, column: 47, scope: !13548)
!13552 = !DILocation(line: 55, column: 6, scope: !13537)
!13553 = !DILocation(line: 57, column: 2, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13548, file: !13409, line: 55, column: 57)
!13555 = !DILocation(line: 59, column: 2, scope: !13537)
!13556 = distinct !DISubprogram(name: "k_thread_abort", scope: !4439, file: !4439, line: 188, type: !13557, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !13559)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{null, !13524}
!13559 = !{!13560}
!13560 = !DILocalVariable(name: "thread", arg: 1, scope: !13556, file: !4439, line: 188, type: !13524)
!13561 = !DILocation(line: 0, scope: !13556)
!13562 = !DILocation(line: 197, column: 2, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13556, file: !4439, line: 197, column: 2)
!13564 = !{i64 2154159717}
!13565 = !DILocation(line: 198, column: 2, scope: !13556)
!13566 = !DILocation(line: 199, column: 1, scope: !13556)
!13567 = distinct !DISubprogram(name: "z_current_get", scope: !4439, file: !4439, line: 173, type: !13522, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !2182)
!13568 = !DILocation(line: 180, column: 2, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13567, file: !4439, line: 180, column: 2)
!13570 = !{i64 2154159649}
!13571 = !DILocation(line: 181, column: 9, scope: !13567)
!13572 = !DILocation(line: 181, column: 2, scope: !13567)
!13573 = distinct !DISubprogram(name: "z_early_memset", scope: !1981, file: !1981, line: 108, type: !13574, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13576)
!13574 = !DISubroutineType(types: !13575)
!13575 = !{null, !106, !107, !185}
!13576 = !{!13577, !13578, !13579}
!13577 = !DILocalVariable(name: "dst", arg: 1, scope: !13573, file: !1981, line: 108, type: !106)
!13578 = !DILocalVariable(name: "c", arg: 2, scope: !13573, file: !1981, line: 108, type: !107)
!13579 = !DILocalVariable(name: "n", arg: 3, scope: !13573, file: !1981, line: 108, type: !185)
!13580 = !DILocation(line: 0, scope: !13573)
!13581 = !DILocation(line: 110, column: 9, scope: !13573)
!13582 = !DILocation(line: 111, column: 1, scope: !13573)
!13583 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1981, file: !1981, line: 121, type: !13584, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13586)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{null, !106, !13, !185}
!13586 = !{!13587, !13588, !13589}
!13587 = !DILocalVariable(name: "dst", arg: 1, scope: !13583, file: !1981, line: 121, type: !106)
!13588 = !DILocalVariable(name: "src", arg: 2, scope: !13583, file: !1981, line: 121, type: !13)
!13589 = !DILocalVariable(name: "n", arg: 3, scope: !13583, file: !1981, line: 121, type: !185)
!13590 = !DILocation(line: 0, scope: !13583)
!13591 = !DILocation(line: 123, column: 9, scope: !13583)
!13592 = !DILocation(line: 124, column: 1, scope: !13583)
!13593 = distinct !DISubprogram(name: "z_bss_zero", scope: !1981, file: !1981, line: 132, type: !3111, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13594 = !DILocation(line: 143, column: 2, scope: !13593)
!13595 = !DILocation(line: 168, column: 1, scope: !13593)
!13596 = distinct !DISubprogram(name: "z_init_cpu", scope: !1981, file: !1981, line: 372, type: !9187, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13597)
!13597 = !{!13598}
!13598 = !DILocalVariable(name: "id", arg: 1, scope: !13596, file: !1981, line: 372, type: !107)
!13599 = !DILocation(line: 0, scope: !13596)
!13600 = !DILocation(line: 374, column: 2, scope: !13596)
!13601 = !DILocation(line: 375, column: 34, scope: !13596)
!13602 = !DILocation(line: 375, column: 19, scope: !13596)
!13603 = !DILocation(line: 375, column: 31, scope: !13596)
!13604 = !DILocation(line: 376, column: 24, scope: !13596)
!13605 = !DILocation(line: 376, column: 19, scope: !13596)
!13606 = !DILocation(line: 376, column: 22, scope: !13596)
!13607 = !DILocation(line: 378, column: 26, scope: !13596)
!13608 = !DILocation(line: 378, column: 4, scope: !13596)
!13609 = !DILocation(line: 378, column: 50, scope: !13596)
!13610 = !DILocation(line: 377, column: 19, scope: !13596)
!13611 = !DILocation(line: 377, column: 29, scope: !13596)
!13612 = !DILocation(line: 384, column: 1, scope: !13596)
!13613 = distinct !DISubprogram(name: "init_idle_thread", scope: !1981, file: !1981, line: 343, type: !9187, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13614)
!13614 = !{!13615, !13616, !13617, !13620}
!13615 = !DILocalVariable(name: "i", arg: 1, scope: !13613, file: !1981, line: 343, type: !107)
!13616 = !DILocalVariable(name: "thread", scope: !13613, file: !1981, line: 345, type: !2073)
!13617 = !DILocalVariable(name: "stack", scope: !13613, file: !1981, line: 346, type: !13618)
!13618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13619, size: 32)
!13619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2191)
!13620 = !DILocalVariable(name: "tname", scope: !13613, file: !1981, line: 354, type: !193)
!13621 = !DILocation(line: 0, scope: !13613)
!13622 = !DILocation(line: 345, column: 29, scope: !13613)
!13623 = !DILocation(line: 346, column: 28, scope: !13613)
!13624 = !DILocation(line: 362, column: 37, scope: !13613)
!13625 = !DILocation(line: 362, column: 36, scope: !13613)
!13626 = !DILocation(line: 361, column: 2, scope: !13613)
!13627 = !DILocation(line: 365, column: 2, scope: !13613)
!13628 = !DILocation(line: 370, column: 1, scope: !13613)
!13629 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13630, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!193, !13618}
!13632 = !{!13633}
!13633 = !DILocalVariable(name: "sym", arg: 1, scope: !13629, file: !577, line: 331, type: !13618)
!13634 = !DILocation(line: 0, scope: !13629)
!13635 = !DILocation(line: 333, column: 21, scope: !13629)
!13636 = !DILocation(line: 333, column: 2, scope: !13629)
!13637 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13638, file: !13638, line: 155, type: !13639, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13641)
!13638 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !2073}
!13641 = !{!13642}
!13642 = !DILocalVariable(name: "thread", arg: 1, scope: !13637, file: !13638, line: 155, type: !2073)
!13643 = !DILocation(line: 0, scope: !13637)
!13644 = !DILocation(line: 157, column: 15, scope: !13637)
!13645 = !DILocation(line: 157, column: 28, scope: !13637)
!13646 = !DILocation(line: 158, column: 1, scope: !13637)
!13647 = distinct !DISubprogram(name: "z_cstart", scope: !1981, file: !1981, line: 501, type: !3111, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13648)
!13648 = !{!13649}
!13649 = !DILocalVariable(name: "dummy_thread", scope: !13647, file: !1981, line: 518, type: !2074)
!13650 = !DILocation(line: 507, column: 2, scope: !13647)
!13651 = !DILocation(line: 43, column: 14, scope: !13652, inlinedAt: !13656)
!13652 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13653, file: !13653, line: 40, type: !3111, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13654)
!13653 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13654 = !{!13655}
!13655 = !DILocalVariable(name: "msp", scope: !13652, file: !13653, line: 42, type: !152)
!13656 = distinct !DILocation(line: 44, column: 2, scope: !13657, inlinedAt: !13659)
!13657 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13658, file: !13658, line: 42, type: !3111, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13658 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13659 = distinct !DILocation(line: 510, column: 2, scope: !13647)
!13660 = !DILocation(line: 43, column: 3, scope: !13652, inlinedAt: !13656)
!13661 = !DILocation(line: 43, column: 60, scope: !13652, inlinedAt: !13656)
!13662 = !DILocation(line: 0, scope: !13652, inlinedAt: !13656)
!13663 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13664, file: !6273, line: 1153, type: !152)
!13664 = distinct !DISubprogram(name: "__set_MSP", scope: !6273, file: !6273, line: 1153, type: !6370, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13665)
!13665 = !{!13663}
!13666 = !DILocation(line: 0, scope: !13664, inlinedAt: !13667)
!13667 = distinct !DILocation(line: 46, column: 2, scope: !13652, inlinedAt: !13656)
!13668 = !DILocation(line: 1155, column: 3, scope: !13664, inlinedAt: !13667)
!13669 = !{i64 2937476}
!13670 = !DILocation(line: 62, column: 11, scope: !13652, inlinedAt: !13656)
!13671 = !DILocation(line: 102, column: 2, scope: !13672, inlinedAt: !13673)
!13672 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7325, file: !7325, line: 97, type: !3111, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13673 = distinct !DILocation(line: 45, column: 2, scope: !13657, inlinedAt: !13659)
!13674 = !DILocation(line: 108, column: 2, scope: !13672, inlinedAt: !13673)
!13675 = !DILocation(line: 112, column: 2, scope: !13672, inlinedAt: !13673)
!13676 = !DILocation(line: 113, column: 2, scope: !13672, inlinedAt: !13673)
!13677 = !DILocation(line: 114, column: 2, scope: !13672, inlinedAt: !13673)
!13678 = !DILocation(line: 116, column: 2, scope: !13672, inlinedAt: !13673)
!13679 = !DILocation(line: 123, column: 13, scope: !13672, inlinedAt: !13673)
!13680 = !DILocation(line: 46, column: 2, scope: !13657, inlinedAt: !13659)
!13681 = !DILocation(line: 47, column: 2, scope: !13657, inlinedAt: !13659)
!13682 = !DILocation(line: 174, column: 12, scope: !13683, inlinedAt: !13684)
!13683 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7325, file: !7325, line: 169, type: !3111, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !2182)
!13684 = distinct !DILocation(line: 48, column: 2, scope: !13657, inlinedAt: !13659)
!13685 = !DILocation(line: 179, column: 12, scope: !13683, inlinedAt: !13684)
!13686 = !DILocation(line: 50, column: 2, scope: !13657, inlinedAt: !13659)
!13687 = !DILocation(line: 57, column: 2, scope: !13657, inlinedAt: !13659)
!13688 = !DILocation(line: 518, column: 2, scope: !13647)
!13689 = !DILocation(line: 518, column: 18, scope: !13647)
!13690 = !DILocation(line: 520, column: 2, scope: !13647)
!13691 = !DILocation(line: 523, column: 2, scope: !13647)
!13692 = !DILocation(line: 526, column: 2, scope: !13647)
!13693 = !DILocation(line: 527, column: 2, scope: !13647)
!13694 = !DILocation(line: 543, column: 24, scope: !13647)
!13695 = !DILocation(line: 543, column: 2, scope: !13647)
!13696 = !DILocation(line: 0, scope: !2213)
!13697 = !DILocation(line: 246, column: 15, scope: !2231)
!13698 = !DILocation(line: 246, column: 36, scope: !2230)
!13699 = !DILocation(line: 246, column: 2, scope: !2231)
!13700 = !DILocation(line: 247, column: 37, scope: !2229)
!13701 = !DILocation(line: 0, scope: !2229)
!13702 = !DILocation(line: 248, column: 19, scope: !2229)
!13703 = !DILocation(line: 248, column: 12, scope: !2229)
!13704 = !DILocation(line: 250, column: 11, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !2229, file: !1981, line: 250, column: 7)
!13706 = !DILocation(line: 250, column: 7, scope: !2229)
!13707 = !DILocation(line: 254, column: 11, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !1981, line: 254, column: 8)
!13709 = distinct !DILexicalBlock(scope: !13705, file: !1981, line: 250, column: 20)
!13710 = !DILocation(line: 254, column: 8, scope: !13709)
!13711 = !DILocation(line: 255, column: 9, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13708, file: !1981, line: 254, column: 17)
!13713 = !DILocation(line: 258, column: 9, scope: !13712)
!13714 = !DILocation(line: 261, column: 28, scope: !13712)
!13715 = !DILocation(line: 261, column: 10, scope: !13712)
!13716 = !DILocation(line: 261, column: 17, scope: !13712)
!13717 = !DILocation(line: 261, column: 26, scope: !13712)
!13718 = !DILocation(line: 262, column: 4, scope: !13712)
!13719 = !DILocation(line: 263, column: 9, scope: !13709)
!13720 = !DILocation(line: 263, column: 16, scope: !13709)
!13721 = !DILocation(line: 263, column: 28, scope: !13709)
!13722 = !DILocation(line: 264, column: 3, scope: !13709)
!13723 = !DILocation(line: 246, column: 60, scope: !2230)
!13724 = distinct !{!13724, !13699, !13725}
!13725 = !DILocation(line: 265, column: 2, scope: !2231)
!13726 = !DILocation(line: 266, column: 1, scope: !2213)
!13727 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6313, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13728)
!13728 = !{!13729, !13730}
!13729 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13727, file: !463, line: 1814, type: !900)
!13730 = !DILocalVariable(name: "priority", arg: 2, scope: !13727, file: !463, line: 1814, type: !152)
!13731 = !DILocation(line: 0, scope: !13727)
!13732 = !DILocation(line: 1822, column: 48, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13734, file: !463, line: 1821, column: 3)
!13734 = distinct !DILexicalBlock(scope: !13727, file: !463, line: 1816, column: 7)
!13735 = !DILocation(line: 1822, column: 32, scope: !13733)
!13736 = !DILocation(line: 1822, column: 40, scope: !13733)
!13737 = !DILocation(line: 1822, column: 5, scope: !13733)
!13738 = !DILocation(line: 1822, column: 46, scope: !13733)
!13739 = !DILocation(line: 1824, column: 1, scope: !13727)
!13740 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13658, file: !13658, line: 32, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!13741 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13742, file: !13742, line: 215, type: !13639, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13743)
!13742 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13741, file: !13742, line: 215, type: !2073)
!13745 = !DILocation(line: 0, scope: !13741)
!13746 = !DILocation(line: 217, column: 21, scope: !13741)
!13747 = !DILocation(line: 217, column: 34, scope: !13741)
!13748 = !DILocation(line: 221, column: 21, scope: !13741)
!13749 = !DILocation(line: 221, column: 34, scope: !13741)
!13750 = !DILocation(line: 223, column: 27, scope: !13741)
!13751 = !DILocation(line: 223, column: 33, scope: !13741)
!13752 = !DILocation(line: 224, column: 27, scope: !13741)
!13753 = !DILocation(line: 224, column: 32, scope: !13741)
!13754 = !DILocation(line: 232, column: 16, scope: !13741)
!13755 = !DILocation(line: 232, column: 30, scope: !13741)
!13756 = !DILocation(line: 239, column: 24, scope: !13741)
!13757 = !DILocation(line: 240, column: 1, scope: !13741)
!13758 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1981, file: !1981, line: 399, type: !13759, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13761)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{!193}
!13761 = !{!13762}
!13762 = !DILocalVariable(name: "stack_ptr", scope: !13758, file: !1981, line: 401, type: !193)
!13763 = !DILocation(line: 404, column: 2, scope: !13758)
!13764 = !DILocation(line: 416, column: 24, scope: !13758)
!13765 = !DILocation(line: 418, column: 14, scope: !13758)
!13766 = !DILocation(line: 0, scope: !13758)
!13767 = !DILocation(line: 423, column: 2, scope: !13758)
!13768 = !DILocation(line: 424, column: 2, scope: !13758)
!13769 = !DILocation(line: 426, column: 2, scope: !13758)
!13770 = !DILocation(line: 428, column: 2, scope: !13758)
!13771 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1981, file: !1981, line: 432, type: !13772, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13774)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{null, !193}
!13774 = !{!13775}
!13775 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13771, file: !1981, line: 432, type: !193)
!13776 = !DILocation(line: 0, scope: !13771)
!13777 = !DILocation(line: 435, column: 2, scope: !13771)
!13778 = !DILocation(line: 445, column: 2, scope: !13771)
!13779 = distinct !DISubprogram(name: "bg_thread_main", scope: !1981, file: !1981, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !13780)
!13780 = !{!13781, !13782, !13783}
!13781 = !DILocalVariable(name: "unused1", arg: 1, scope: !13779, file: !1981, line: 277, type: !106)
!13782 = !DILocalVariable(name: "unused2", arg: 2, scope: !13779, file: !1981, line: 277, type: !106)
!13783 = !DILocalVariable(name: "unused3", arg: 3, scope: !13779, file: !1981, line: 277, type: !106)
!13784 = !DILocation(line: 0, scope: !13779)
!13785 = !DILocation(line: 291, column: 20, scope: !13779)
!13786 = !DILocation(line: 293, column: 2, scope: !13779)
!13787 = !DILocation(line: 297, column: 2, scope: !13779)
!13788 = !DILocation(line: 305, column: 2, scope: !13779)
!13789 = !DILocation(line: 307, column: 2, scope: !13779)
!13790 = !DILocation(line: 330, column: 8, scope: !13779)
!13791 = !DILocation(line: 333, column: 34, scope: !13779)
!13792 = !DILocation(line: 339, column: 1, scope: !13779)
!13793 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2242, file: !2242, line: 45, type: !13794, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13802)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{null, !13796, !106}
!13796 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13797)
!13797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13798, size: 32)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{null, !13800, !106}
!13800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13801, size: 32)
!13801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!13802 = !{!13803, !13804}
!13803 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13793, file: !2242, line: 45, type: !13796)
!13804 = !DILocalVariable(name: "user_data", arg: 2, scope: !13793, file: !2242, line: 45, type: !106)
!13805 = !DILocation(line: 0, scope: !13793)
!13806 = !DILocation(line: 71, column: 1, scope: !13793)
!13807 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2242, file: !2242, line: 73, type: !13794, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13808)
!13808 = !{!13809, !13810}
!13809 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13807, file: !2242, line: 73, type: !13796)
!13810 = !DILocalVariable(name: "user_data", arg: 2, scope: !13807, file: !2242, line: 73, type: !106)
!13811 = !DILocation(line: 0, scope: !13807)
!13812 = !DILocation(line: 95, column: 1, scope: !13807)
!13813 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2242, file: !2242, line: 97, type: !7326, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13814 = !DILocation(line: 1031, column: 3, scope: !13815, inlinedAt: !13818)
!13815 = distinct !DISubprogram(name: "__get_IPSR", scope: !6273, file: !6273, line: 1027, type: !6360, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13816)
!13816 = !{!13817}
!13817 = !DILocalVariable(name: "result", scope: !13815, file: !6273, line: 1029, type: !152)
!13818 = distinct !DILocation(line: 48, column: 10, scope: !13819, inlinedAt: !13820)
!13819 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7325, file: !7325, line: 46, type: !7326, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13820 = distinct !DILocation(line: 99, column: 9, scope: !13813)
!13821 = !{i64 2943127}
!13822 = !DILocation(line: 0, scope: !13815, inlinedAt: !13818)
!13823 = !DILocation(line: 48, column: 9, scope: !13819, inlinedAt: !13820)
!13824 = !DILocation(line: 99, column: 2, scope: !13813)
!13825 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2242, file: !2242, line: 106, type: !3111, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13826 = !DILocation(line: 108, column: 2, scope: !13825)
!13827 = !DILocation(line: 108, column: 17, scope: !13825)
!13828 = !DILocation(line: 108, column: 30, scope: !13825)
!13829 = !DILocation(line: 109, column: 1, scope: !13825)
!13830 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2242, file: !2242, line: 116, type: !3111, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13831 = !DILocation(line: 118, column: 2, scope: !13830)
!13832 = !DILocation(line: 118, column: 17, scope: !13830)
!13833 = !DILocation(line: 118, column: 30, scope: !13830)
!13834 = !DILocation(line: 119, column: 1, scope: !13830)
!13835 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2242, file: !2242, line: 126, type: !7326, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2182)
!13836 = !DILocation(line: 128, column: 10, scope: !13835)
!13837 = !DILocation(line: 128, column: 25, scope: !13835)
!13838 = !DILocation(line: 128, column: 38, scope: !13835)
!13839 = !DILocation(line: 128, column: 53, scope: !13835)
!13840 = !DILocation(line: 128, column: 2, scope: !13835)
!13841 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2242, file: !2242, line: 187, type: !13842, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13844)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{!107, !2246, !118}
!13844 = !{!13845, !13846}
!13845 = !DILocalVariable(name: "thread", arg: 1, scope: !13841, file: !2242, line: 187, type: !2246)
!13846 = !DILocalVariable(name: "value", arg: 2, scope: !13841, file: !2242, line: 187, type: !118)
!13847 = !DILocation(line: 0, scope: !13841)
!13848 = !DILocation(line: 190, column: 13, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13841, file: !2242, line: 190, column: 6)
!13850 = !DILocation(line: 190, column: 6, scope: !13841)
!13851 = !DILocation(line: 194, column: 10, scope: !13841)
!13852 = !DILocation(line: 194, column: 2, scope: !13841)
!13853 = !DILocation(line: 195, column: 2, scope: !13841)
!13854 = !DILocation(line: 195, column: 47, scope: !13841)
!13855 = !DILocation(line: 199, column: 2, scope: !13841)
!13856 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2242, file: !2242, line: 238, type: !13857, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!118, !2246}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "thread", arg: 1, scope: !13856, file: !2242, line: 238, type: !2246)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 241, column: 23, scope: !13856)
!13863 = !DILocation(line: 241, column: 2, scope: !13856)
!13864 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2242, file: !2242, line: 248, type: !13865, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!107, !2245, !193, !185}
!13867 = !{!13868, !13869, !13870}
!13868 = !DILocalVariable(name: "thread", arg: 1, scope: !13864, file: !2242, line: 248, type: !2245)
!13869 = !DILocalVariable(name: "buf", arg: 2, scope: !13864, file: !2242, line: 248, type: !193)
!13870 = !DILocalVariable(name: "size", arg: 3, scope: !13864, file: !2242, line: 248, type: !185)
!13871 = !DILocation(line: 0, scope: !13864)
!13872 = !DILocation(line: 251, column: 15, scope: !13864)
!13873 = !DILocation(line: 251, column: 2, scope: !13864)
!13874 = !DILocation(line: 252, column: 2, scope: !13864)
!13875 = !DILocation(line: 0, scope: !2241)
!13876 = !DILocation(line: 281, column: 11, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !2241, file: !2242, line: 281, column: 6)
!13878 = !DILocation(line: 281, column: 20, scope: !13877)
!13879 = !DILocation(line: 275, column: 45, scope: !2241)
!13880 = !DILocation(line: 285, column: 10, scope: !2241)
!13881 = !DILocation(line: 0, scope: !2365)
!13882 = !DILocation(line: 293, column: 39, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !2365, file: !2242, line: 293, column: 2)
!13884 = !DILocation(line: 293, column: 2, scope: !2365)
!13885 = !DILocation(line: 273, column: 14, scope: !2241)
!13886 = !DILocation(line: 309, column: 2, scope: !2241)
!13887 = !DILocation(line: 309, column: 11, scope: !2241)
!13888 = !DILocation(line: 311, column: 2, scope: !2241)
!13889 = !DILocation(line: 293, column: 26, scope: !13883)
!13890 = !DILocation(line: 294, column: 9, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13883, file: !2242, line: 293, column: 54)
!13892 = !DILocation(line: 295, column: 21, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13891, file: !2242, line: 295, column: 7)
!13894 = !DILocation(line: 295, column: 28, scope: !13893)
!13895 = !DILocation(line: 295, column: 7, scope: !13891)
!13896 = !DILocation(line: 299, column: 25, scope: !13891)
!13897 = !DILocation(line: 299, column: 41, scope: !13891)
!13898 = !DILocation(line: 300, column: 7, scope: !13891)
!13899 = !DILocation(line: 300, column: 26, scope: !13891)
!13900 = !DILocation(line: 299, column: 10, scope: !13891)
!13901 = !DILocation(line: 299, column: 7, scope: !13891)
!13902 = !DILocation(line: 302, column: 16, scope: !13891)
!13903 = !DILocation(line: 304, column: 20, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13891, file: !2242, line: 304, column: 7)
!13905 = !DILocation(line: 304, column: 7, scope: !13891)
!13906 = !DILocation(line: 305, column: 26, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13904, file: !2242, line: 304, column: 26)
!13908 = !DILocation(line: 305, column: 42, scope: !13907)
!13909 = !DILocation(line: 305, column: 11, scope: !13907)
!13910 = !DILocation(line: 305, column: 8, scope: !13907)
!13911 = !DILocation(line: 306, column: 3, scope: !13907)
!13912 = !DILocation(line: 293, column: 50, scope: !13883)
!13913 = !DILocation(line: 312, column: 1, scope: !2241)
!13914 = distinct !DISubprogram(name: "copy_bytes", scope: !2242, file: !2242, line: 261, type: !13915, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13917)
!13915 = !DISubroutineType(types: !13916)
!13916 = !{!185, !193, !185, !118, !185}
!13917 = !{!13918, !13919, !13920, !13921, !13922}
!13918 = !DILocalVariable(name: "dest", arg: 1, scope: !13914, file: !2242, line: 261, type: !193)
!13919 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13914, file: !2242, line: 261, type: !185)
!13920 = !DILocalVariable(name: "src", arg: 3, scope: !13914, file: !2242, line: 261, type: !118)
!13921 = !DILocalVariable(name: "src_size", arg: 4, scope: !13914, file: !2242, line: 261, type: !185)
!13922 = !DILocalVariable(name: "bytes_to_copy", scope: !13914, file: !2242, line: 263, type: !185)
!13923 = !DILocation(line: 0, scope: !13914)
!13924 = !DILocation(line: 265, column: 18, scope: !13914)
!13925 = !DILocation(line: 266, column: 2, scope: !13914)
!13926 = !DILocation(line: 268, column: 2, scope: !13914)
!13927 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2242, file: !2242, line: 383, type: !13928, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13930)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{null, !2246}
!13930 = !{!13931}
!13931 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !2242, line: 383, type: !2246)
!13932 = !DILocation(line: 0, scope: !13927)
!13933 = !DILocation(line: 387, column: 2, scope: !13927)
!13934 = !DILocation(line: 388, column: 1, scope: !13927)
!13935 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2242, file: !2242, line: 528, type: !13936, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13943)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!193, !2246, !13938, !185, !559, !106, !106, !106, !107, !152, !118}
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13939, size: 32)
!13939 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13940)
!13940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13941)
!13941 = !{!13942}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13940, file: !577, line: 48, baseType: !120, size: 8)
!13943 = !{!13944, !13945, !13946, !13947, !13948, !13949, !13950, !13951, !13952, !13953, !13954}
!13944 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13935, file: !2242, line: 528, type: !2246)
!13945 = !DILocalVariable(name: "stack", arg: 2, scope: !13935, file: !2242, line: 529, type: !13938)
!13946 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13935, file: !2242, line: 529, type: !185)
!13947 = !DILocalVariable(name: "entry", arg: 4, scope: !13935, file: !2242, line: 530, type: !559)
!13948 = !DILocalVariable(name: "p1", arg: 5, scope: !13935, file: !2242, line: 531, type: !106)
!13949 = !DILocalVariable(name: "p2", arg: 6, scope: !13935, file: !2242, line: 531, type: !106)
!13950 = !DILocalVariable(name: "p3", arg: 7, scope: !13935, file: !2242, line: 531, type: !106)
!13951 = !DILocalVariable(name: "prio", arg: 8, scope: !13935, file: !2242, line: 532, type: !107)
!13952 = !DILocalVariable(name: "options", arg: 9, scope: !13935, file: !2242, line: 532, type: !152)
!13953 = !DILocalVariable(name: "name", arg: 10, scope: !13935, file: !2242, line: 532, type: !118)
!13954 = !DILocalVariable(name: "stack_ptr", scope: !13935, file: !2242, line: 534, type: !193)
!13955 = !DILocation(line: 0, scope: !13935)
!13956 = !DILocation(line: 536, column: 2, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13958, file: !2242, line: 536, column: 2)
!13958 = distinct !DILexicalBlock(scope: !13959, file: !2242, line: 536, column: 2)
!13959 = distinct !DILexicalBlock(scope: !13935, file: !2242, line: 536, column: 2)
!13960 = !DILocation(line: 536, column: 2, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13957, file: !2242, line: 536, column: 2)
!13962 = !DILocation(line: 550, column: 28, scope: !13935)
!13963 = !DILocation(line: 550, column: 2, scope: !13935)
!13964 = !DILocation(line: 553, column: 34, scope: !13935)
!13965 = !DILocation(line: 553, column: 2, scope: !13935)
!13966 = !DILocation(line: 554, column: 14, scope: !13935)
!13967 = !DILocation(line: 564, column: 2, scope: !13935)
!13968 = !DILocation(line: 567, column: 14, scope: !13935)
!13969 = !DILocation(line: 567, column: 24, scope: !13935)
!13970 = !DILocation(line: 594, column: 11, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13935, file: !2242, line: 594, column: 6)
!13972 = !DILocation(line: 0, scope: !13971)
!13973 = !DILocation(line: 594, column: 6, scope: !13935)
!13974 = !DILocation(line: 595, column: 3, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13971, file: !2242, line: 594, column: 20)
!13976 = !DILocation(line: 598, column: 3, scope: !13975)
!13977 = !DILocation(line: 598, column: 52, scope: !13975)
!13978 = !DILocation(line: 599, column: 2, scope: !13975)
!13979 = !DILocation(line: 600, column: 23, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13971, file: !2242, line: 599, column: 9)
!13981 = !DILocation(line: 612, column: 7, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13935, file: !2242, line: 612, column: 6)
!13983 = !DILocation(line: 612, column: 6, scope: !13935)
!13984 = !DILocation(line: 627, column: 40, scope: !13935)
!13985 = !DILocation(line: 637, column: 2, scope: !13935)
!13986 = !DILocation(line: 613, column: 15, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13982, file: !2242, line: 612, column: 17)
!13988 = !DILocation(line: 613, column: 29, scope: !13987)
!13989 = !DILocation(line: 638, column: 1, scope: !13935)
!13990 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13638, file: !13638, line: 78, type: !13991, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!145, !106}
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13990, file: !13638, line: 78, type: !106)
!13995 = !DILocation(line: 0, scope: !13990)
!13996 = !DILocation(line: 80, column: 21, scope: !13990)
!13997 = !DILocation(line: 80, column: 2, scope: !13990)
!13998 = distinct !DISubprogram(name: "z_waitq_init", scope: !13999, file: !13999, line: 47, type: !14000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14002)
!13999 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14000 = !DISubroutineType(types: !14001)
!14001 = !{null, !2277}
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "w", arg: 1, scope: !13998, file: !13999, line: 47, type: !2277)
!14004 = !DILocation(line: 0, scope: !13998)
!14005 = !DILocation(line: 49, column: 21, scope: !13998)
!14006 = !DILocation(line: 49, column: 2, scope: !13998)
!14007 = !DILocation(line: 50, column: 1, scope: !13998)
!14008 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2242, file: !2242, line: 791, type: !14009, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14012)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{null, !14011, !107, !152, !32}
!14011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!14012 = !{!14013, !14014, !14015, !14016}
!14013 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14008, file: !2242, line: 791, type: !14011)
!14014 = !DILocalVariable(name: "priority", arg: 2, scope: !14008, file: !2242, line: 791, type: !107)
!14015 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14008, file: !2242, line: 792, type: !152)
!14016 = !DILocalVariable(name: "options", arg: 4, scope: !14008, file: !2242, line: 792, type: !32)
!14017 = !DILocation(line: 0, scope: !14008)
!14018 = !DILocation(line: 795, column: 15, scope: !14008)
!14019 = !DILocation(line: 795, column: 25, scope: !14008)
!14020 = !DILocation(line: 796, column: 30, scope: !14008)
!14021 = !DILocation(line: 796, column: 15, scope: !14008)
!14022 = !DILocation(line: 796, column: 28, scope: !14008)
!14023 = !DILocation(line: 797, column: 30, scope: !14008)
!14024 = !DILocation(line: 797, column: 15, scope: !14008)
!14025 = !DILocation(line: 797, column: 28, scope: !14008)
!14026 = !DILocation(line: 799, column: 22, scope: !14008)
!14027 = !DILocation(line: 799, column: 15, scope: !14008)
!14028 = !DILocation(line: 799, column: 20, scope: !14008)
!14029 = !DILocation(line: 801, column: 15, scope: !14008)
!14030 = !DILocation(line: 801, column: 28, scope: !14008)
!14031 = !DILocation(line: 814, column: 2, scope: !14008)
!14032 = !DILocation(line: 815, column: 1, scope: !14008)
!14033 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2242, file: !2242, line: 449, type: !14034, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14036)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!193, !2246, !13938, !185}
!14036 = !{!14037, !14038, !14039, !14040, !14041, !14042, !14043, !14044}
!14037 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14033, file: !2242, line: 449, type: !2246)
!14038 = !DILocalVariable(name: "stack", arg: 2, scope: !14033, file: !2242, line: 450, type: !13938)
!14039 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14033, file: !2242, line: 450, type: !185)
!14040 = !DILocalVariable(name: "stack_obj_size", scope: !14033, file: !2242, line: 452, type: !185)
!14041 = !DILocalVariable(name: "stack_buf_size", scope: !14033, file: !2242, line: 452, type: !185)
!14042 = !DILocalVariable(name: "stack_ptr", scope: !14033, file: !2242, line: 453, type: !193)
!14043 = !DILocalVariable(name: "stack_buf_start", scope: !14033, file: !2242, line: 453, type: !193)
!14044 = !DILocalVariable(name: "delta", scope: !14033, file: !2242, line: 454, type: !185)
!14045 = !DILocation(line: 0, scope: !14033)
!14046 = !DILocation(line: 465, column: 20, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14033, file: !2242, line: 463, column: 2)
!14048 = !DILocation(line: 466, column: 21, scope: !14047)
!14049 = !DILocation(line: 473, column: 28, scope: !14033)
!14050 = !DILocation(line: 514, column: 33, scope: !14033)
!14051 = !DILocation(line: 514, column: 25, scope: !14033)
!14052 = !DILocation(line: 514, column: 31, scope: !14033)
!14053 = !DILocation(line: 515, column: 25, scope: !14033)
!14054 = !DILocation(line: 515, column: 30, scope: !14033)
!14055 = !DILocation(line: 516, column: 25, scope: !14033)
!14056 = !DILocation(line: 516, column: 31, scope: !14033)
!14057 = !DILocation(line: 520, column: 2, scope: !14033)
!14058 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14059, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{!193, !13938}
!14061 = !{!14062}
!14062 = !DILocalVariable(name: "sym", arg: 1, scope: !14058, file: !577, line: 331, type: !13938)
!14063 = !DILocation(line: 0, scope: !14058)
!14064 = !DILocation(line: 333, column: 21, scope: !14058)
!14065 = !DILocation(line: 333, column: 2, scope: !14058)
!14066 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14067, file: !14067, line: 40, type: !14068, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14070)
!14067 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14068 = !DISubroutineType(types: !14069)
!14069 = !{null, !14011}
!14070 = !{!14071}
!14071 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14066, file: !14067, line: 40, type: !14011)
!14072 = !DILocation(line: 0, scope: !14066)
!14073 = !DILocation(line: 42, column: 31, scope: !14066)
!14074 = !DILocation(line: 42, column: 2, scope: !14066)
!14075 = !DILocation(line: 43, column: 1, scope: !14066)
!14076 = distinct !DISubprogram(name: "z_init_timeout", scope: !14067, file: !14067, line: 25, type: !2303, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14077)
!14077 = !{!14078}
!14078 = !DILocalVariable(name: "to", arg: 1, scope: !14076, file: !14067, line: 25, type: !2305)
!14079 = !DILocation(line: 0, scope: !14076)
!14080 = !DILocation(line: 27, column: 22, scope: !14076)
!14081 = !DILocation(line: 27, column: 2, scope: !14076)
!14082 = !DILocation(line: 28, column: 1, scope: !14076)
!14083 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14084, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{null, !2352}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "node", arg: 1, scope: !14083, file: !319, line: 211, type: !2352)
!14088 = !DILocation(line: 0, scope: !14083)
!14089 = !DILocation(line: 213, column: 8, scope: !14083)
!14090 = !DILocation(line: 213, column: 13, scope: !14083)
!14091 = !DILocation(line: 214, column: 8, scope: !14083)
!14092 = !DILocation(line: 214, column: 13, scope: !14083)
!14093 = !DILocation(line: 215, column: 1, scope: !14083)
!14094 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14095, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14098)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{null, !14097}
!14097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!14098 = !{!14099}
!14099 = !DILocalVariable(name: "list", arg: 1, scope: !14094, file: !319, line: 197, type: !14097)
!14100 = !DILocation(line: 0, scope: !14094)
!14101 = !DILocation(line: 199, column: 8, scope: !14094)
!14102 = !DILocation(line: 199, column: 13, scope: !14094)
!14103 = !DILocation(line: 200, column: 8, scope: !14094)
!14104 = !DILocation(line: 200, column: 13, scope: !14094)
!14105 = !DILocation(line: 201, column: 1, scope: !14094)
!14106 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2242, file: !2242, line: 641, type: !14107, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14113)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!2245, !2246, !13938, !185, !559, !106, !106, !106, !107, !152, !14109}
!14109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14110)
!14110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14111)
!14111 = !{!14112}
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14110, file: !565, line: 66, baseType: !564, size: 64)
!14113 = !{!14114, !14115, !14116, !14117, !14118, !14119, !14120, !14121, !14122, !14123}
!14114 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14106, file: !2242, line: 641, type: !2246)
!14115 = !DILocalVariable(name: "stack", arg: 2, scope: !14106, file: !2242, line: 642, type: !13938)
!14116 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14106, file: !2242, line: 643, type: !185)
!14117 = !DILocalVariable(name: "entry", arg: 4, scope: !14106, file: !2242, line: 643, type: !559)
!14118 = !DILocalVariable(name: "p1", arg: 5, scope: !14106, file: !2242, line: 644, type: !106)
!14119 = !DILocalVariable(name: "p2", arg: 6, scope: !14106, file: !2242, line: 644, type: !106)
!14120 = !DILocalVariable(name: "p3", arg: 7, scope: !14106, file: !2242, line: 644, type: !106)
!14121 = !DILocalVariable(name: "prio", arg: 8, scope: !14106, file: !2242, line: 645, type: !107)
!14122 = !DILocalVariable(name: "options", arg: 9, scope: !14106, file: !2242, line: 645, type: !152)
!14123 = !DILocalVariable(name: "delay", arg: 10, scope: !14106, file: !2242, line: 645, type: !14109)
!14124 = !DILocation(line: 0, scope: !14106)
!14125 = !DILocation(line: 1031, column: 3, scope: !13815, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 48, column: 10, scope: !13819, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 647, column: 2, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !2242, line: 647, column: 2)
!14129 = distinct !DILexicalBlock(scope: !14106, file: !2242, line: 647, column: 2)
!14130 = !DILocation(line: 0, scope: !13815, inlinedAt: !14126)
!14131 = !DILocation(line: 48, column: 9, scope: !13819, inlinedAt: !14127)
!14132 = !DILocation(line: 647, column: 2, scope: !14129)
!14133 = !DILocation(line: 647, column: 2, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14128, file: !2242, line: 647, column: 2)
!14135 = !DILocation(line: 649, column: 2, scope: !14106)
!14136 = !DILocation(line: 652, column: 7, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14106, file: !2242, line: 652, column: 6)
!14138 = !DILocation(line: 652, column: 6, scope: !14106)
!14139 = !DILocation(line: 653, column: 3, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14137, file: !2242, line: 652, column: 39)
!14141 = !DILocation(line: 654, column: 2, scope: !14140)
!14142 = !DILocation(line: 656, column: 2, scope: !14106)
!14143 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2242, file: !2242, line: 401, type: !14144, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14146)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{null, !2246, !14109}
!14146 = !{!14147, !14148}
!14147 = !DILocalVariable(name: "thread", arg: 1, scope: !14143, file: !2242, line: 401, type: !2246)
!14148 = !DILocalVariable(name: "delay", arg: 2, scope: !14143, file: !2242, line: 401, type: !14109)
!14149 = !DILocation(line: 0, scope: !14143)
!14150 = !DILocation(line: 404, column: 6, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14143, file: !2242, line: 404, column: 6)
!14152 = !DILocation(line: 404, column: 6, scope: !14143)
!14153 = !DILocation(line: 405, column: 3, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14151, file: !2242, line: 404, column: 38)
!14155 = !DILocation(line: 406, column: 2, scope: !14154)
!14156 = !DILocation(line: 407, column: 3, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14151, file: !2242, line: 406, column: 9)
!14158 = !DILocation(line: 413, column: 1, scope: !14143)
!14159 = distinct !DISubprogram(name: "k_thread_start", scope: !4439, file: !4439, line: 205, type: !14160, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !2245}
!14162 = !{!14163}
!14163 = !DILocalVariable(name: "thread", arg: 1, scope: !14159, file: !4439, line: 205, type: !2245)
!14164 = !DILocation(line: 0, scope: !14159)
!14165 = !DILocation(line: 214, column: 2, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14159, file: !4439, line: 214, column: 2)
!14167 = !{i64 2154184941}
!14168 = !DILocation(line: 215, column: 2, scope: !14159)
!14169 = !DILocation(line: 216, column: 1, scope: !14159)
!14170 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14067, file: !14067, line: 47, type: !14144, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14171)
!14171 = !{!14172, !14173}
!14172 = !DILocalVariable(name: "thread", arg: 1, scope: !14170, file: !14067, line: 47, type: !2246)
!14173 = !DILocalVariable(name: "ticks", arg: 2, scope: !14170, file: !14067, line: 47, type: !14109)
!14174 = !DILocation(line: 0, scope: !14170)
!14175 = !DILocation(line: 49, column: 30, scope: !14170)
!14176 = !DILocation(line: 49, column: 2, scope: !14170)
!14177 = !DILocation(line: 50, column: 1, scope: !14170)
!14178 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2242, file: !2242, line: 748, type: !3111, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14179)
!14179 = !{!14180, !14198}
!14180 = !DILocalVariable(name: "thread_data", scope: !14181, file: !2242, line: 750, type: !14182)
!14181 = distinct !DILexicalBlock(scope: !14178, file: !2242, line: 750, column: 2)
!14182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14183, size: 32)
!14183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14184)
!14184 = !{!14185, !14186, !14187, !14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195, !14197}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14183, file: !406, line: 621, baseType: !2246, size: 32)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14183, file: !406, line: 622, baseType: !13938, size: 32, offset: 32)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14183, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14183, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14183, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14183, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14183, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14183, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14183, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14183, file: !406, line: 630, baseType: !874, size: 32, offset: 288)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14183, file: !406, line: 631, baseType: !14196, size: 32, offset: 320)
!14196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 32)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14183, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14198 = !DILocalVariable(name: "thread_data", scope: !14199, file: !2242, line: 781, type: !14182)
!14199 = distinct !DILexicalBlock(scope: !14178, file: !2242, line: 781, column: 2)
!14200 = !DILocation(line: 0, scope: !14181)
!14201 = !DILocation(line: 750, column: 2, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14203, file: !2242, line: 750, column: 2)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !2242, line: 750, column: 2)
!14204 = distinct !DILexicalBlock(scope: !14181, file: !2242, line: 750, column: 2)
!14205 = !DILocation(line: 750, column: 2, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14207, file: !2242, line: 750, column: 2)
!14207 = distinct !DILexicalBlock(scope: !14202, file: !2242, line: 750, column: 2)
!14208 = !DILocation(line: 750, column: 2, scope: !14203)
!14209 = !DILocation(line: 750, column: 2, scope: !14181)
!14210 = !DILocation(line: 780, column: 2, scope: !14178)
!14211 = !DILocation(line: 0, scope: !14199)
!14212 = !DILocation(line: 781, column: 2, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14214, file: !2242, line: 781, column: 2)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !2242, line: 781, column: 2)
!14215 = distinct !DILexicalBlock(scope: !14199, file: !2242, line: 781, column: 2)
!14216 = !DILocation(line: 752, column: 17, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14204, file: !2242, line: 750, column: 38)
!14218 = !DILocation(line: 753, column: 17, scope: !14217)
!14219 = !DILocation(line: 754, column: 17, scope: !14217)
!14220 = !DILocation(line: 755, column: 17, scope: !14217)
!14221 = !DILocation(line: 756, column: 17, scope: !14217)
!14222 = !DILocation(line: 757, column: 17, scope: !14217)
!14223 = !DILocation(line: 758, column: 17, scope: !14217)
!14224 = !DILocation(line: 759, column: 17, scope: !14217)
!14225 = !DILocation(line: 760, column: 17, scope: !14217)
!14226 = !DILocation(line: 761, column: 17, scope: !14217)
!14227 = !DILocation(line: 751, column: 3, scope: !14217)
!14228 = !DILocation(line: 763, column: 16, scope: !14217)
!14229 = !DILocation(line: 763, column: 29, scope: !14217)
!14230 = !DILocation(line: 763, column: 39, scope: !14217)
!14231 = !DILocation(line: 750, column: 2, scope: !14204)
!14232 = !DILocation(line: 750, column: 2, scope: !14207)
!14233 = distinct !{!14233, !14209, !14234}
!14234 = !DILocation(line: 764, column: 2, scope: !14181)
!14235 = !DILocation(line: 781, column: 2, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !2242, line: 781, column: 2)
!14237 = distinct !DILexicalBlock(scope: !14213, file: !2242, line: 781, column: 2)
!14238 = !DILocation(line: 781, column: 2, scope: !14214)
!14239 = !DILocation(line: 781, column: 2, scope: !14199)
!14240 = !DILocation(line: 787, column: 2, scope: !14178)
!14241 = !DILocation(line: 788, column: 1, scope: !14178)
!14242 = !DILocation(line: 782, column: 20, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2242, line: 782, column: 7)
!14244 = distinct !DILexicalBlock(scope: !14215, file: !2242, line: 781, column: 38)
!14245 = !DILocation(line: 782, column: 31, scope: !14243)
!14246 = !DILocation(line: 782, column: 7, scope: !14244)
!14247 = !DILocation(line: 783, column: 37, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14243, file: !2242, line: 782, column: 51)
!14249 = !DILocation(line: 784, column: 10, scope: !14248)
!14250 = !DILocation(line: 783, column: 4, scope: !14248)
!14251 = !DILocation(line: 785, column: 3, scope: !14248)
!14252 = !DILocation(line: 781, column: 2, scope: !14215)
!14253 = !DILocation(line: 781, column: 2, scope: !14237)
!14254 = distinct !{!14254, !14239, !14255}
!14255 = !DILocation(line: 786, column: 2, scope: !14199)
!14256 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8741, file: !8741, line: 403, type: !14257, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14259)
!14257 = !DISubroutineType(types: !14258)
!14258 = !{!566, !566}
!14259 = !{!14260}
!14260 = !DILocalVariable(name: "t", arg: 1, scope: !14256, file: !8741, line: 403, type: !566)
!14261 = !DILocation(line: 0, scope: !14256)
!14262 = !DILocalVariable(name: "t", arg: 1, scope: !14263, file: !8741, line: 102, type: !566)
!14263 = distinct !DISubprogram(name: "z_tmcvt", scope: !8741, file: !8741, line: 102, type: !8748, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14264)
!14264 = !{!14262, !14265, !14266, !14267, !14268, !14269, !14270, !14271, !14272, !14273, !14274}
!14265 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14263, file: !8741, line: 102, type: !152)
!14266 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14263, file: !8741, line: 103, type: !152)
!14267 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14263, file: !8741, line: 103, type: !145)
!14268 = !DILocalVariable(name: "result32", arg: 5, scope: !14263, file: !8741, line: 104, type: !145)
!14269 = !DILocalVariable(name: "round_up", arg: 6, scope: !14263, file: !8741, line: 104, type: !145)
!14270 = !DILocalVariable(name: "round_off", arg: 7, scope: !14263, file: !8741, line: 105, type: !145)
!14271 = !DILocalVariable(name: "mul_ratio", scope: !14263, file: !8741, line: 107, type: !145)
!14272 = !DILocalVariable(name: "div_ratio", scope: !14263, file: !8741, line: 109, type: !145)
!14273 = !DILocalVariable(name: "off", scope: !14263, file: !8741, line: 116, type: !566)
!14274 = !DILocalVariable(name: "rdivisor", scope: !14275, file: !8741, line: 119, type: !152)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !8741, line: 118, column: 18)
!14276 = distinct !DILexicalBlock(scope: !14263, file: !8741, line: 118, column: 6)
!14277 = !DILocation(line: 0, scope: !14263, inlinedAt: !14278)
!14278 = distinct !DILocation(line: 406, column: 9, scope: !14256)
!14279 = !DILocation(line: 145, column: 13, scope: !14280, inlinedAt: !14278)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !8741, line: 144, column: 10)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !8741, line: 142, column: 7)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !8741, line: 141, column: 24)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !8741, line: 141, column: 13)
!14284 = distinct !DILexicalBlock(scope: !14263, file: !8741, line: 134, column: 6)
!14285 = !DILocation(line: 406, column: 2, scope: !14256)
!14286 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2242, file: !2242, line: 817, type: !4317, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14287)
!14287 = !{!14288, !14289, !14290, !14291}
!14288 = !DILocalVariable(name: "entry", arg: 1, scope: !14286, file: !2242, line: 817, type: !559)
!14289 = !DILocalVariable(name: "p1", arg: 2, scope: !14286, file: !2242, line: 818, type: !106)
!14290 = !DILocalVariable(name: "p2", arg: 3, scope: !14286, file: !2242, line: 818, type: !106)
!14291 = !DILocalVariable(name: "p3", arg: 4, scope: !14286, file: !2242, line: 818, type: !106)
!14292 = !DILocation(line: 0, scope: !14286)
!14293 = !DILocation(line: 822, column: 2, scope: !14286)
!14294 = !DILocation(line: 822, column: 17, scope: !14286)
!14295 = !DILocation(line: 822, column: 30, scope: !14286)
!14296 = !DILocation(line: 823, column: 2, scope: !14286)
!14297 = !DILocation(line: 845, column: 2, scope: !14286)
!14298 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2242, file: !2242, line: 853, type: !14299, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14302)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!145, !14301}
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!14302 = !{!14303, !14304}
!14303 = !DILocalVariable(name: "l", arg: 1, scope: !14298, file: !2242, line: 853, type: !14301)
!14304 = !DILocalVariable(name: "thread_cpu", scope: !14298, file: !2242, line: 855, type: !22)
!14305 = !DILocation(line: 0, scope: !14298)
!14306 = !DILocation(line: 855, column: 28, scope: !14298)
!14307 = !DILocation(line: 857, column: 17, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14298, file: !2242, line: 857, column: 6)
!14309 = !DILocation(line: 857, column: 6, scope: !14298)
!14310 = !DILocation(line: 858, column: 19, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !2242, line: 858, column: 7)
!14312 = distinct !DILexicalBlock(scope: !14308, file: !2242, line: 857, column: 24)
!14313 = !DILocation(line: 858, column: 42, scope: !14311)
!14314 = !DILocation(line: 858, column: 28, scope: !14311)
!14315 = !DILocation(line: 858, column: 25, scope: !14311)
!14316 = !DILocation(line: 858, column: 7, scope: !14312)
!14317 = !DILocation(line: 862, column: 2, scope: !14298)
!14318 = !DILocation(line: 863, column: 1, scope: !14298)
!14319 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2242, file: !2242, line: 865, type: !14299, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14320)
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "l", arg: 1, scope: !14319, file: !2242, line: 865, type: !14301)
!14322 = !DILocation(line: 0, scope: !14319)
!14323 = !DILocation(line: 867, column: 9, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14319, file: !2242, line: 867, column: 6)
!14325 = !DILocation(line: 867, column: 38, scope: !14324)
!14326 = !DILocation(line: 867, column: 24, scope: !14324)
!14327 = !DILocation(line: 867, column: 54, scope: !14324)
!14328 = !DILocation(line: 867, column: 43, scope: !14324)
!14329 = !DILocation(line: 867, column: 41, scope: !14324)
!14330 = !DILocation(line: 867, column: 20, scope: !14324)
!14331 = !DILocation(line: 867, column: 6, scope: !14319)
!14332 = !DILocation(line: 870, column: 16, scope: !14319)
!14333 = !DILocation(line: 871, column: 2, scope: !14319)
!14334 = !DILocation(line: 872, column: 1, scope: !14319)
!14335 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2242, file: !2242, line: 874, type: !14336, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !14301}
!14338 = !{!14339}
!14339 = !DILocalVariable(name: "l", arg: 1, scope: !14335, file: !2242, line: 874, type: !14301)
!14340 = !DILocation(line: 0, scope: !14335)
!14341 = !DILocation(line: 876, column: 32, scope: !14335)
!14342 = !DILocation(line: 876, column: 18, scope: !14335)
!14343 = !DILocation(line: 876, column: 48, scope: !14335)
!14344 = !DILocation(line: 876, column: 37, scope: !14335)
!14345 = !DILocation(line: 876, column: 35, scope: !14335)
!14346 = !DILocation(line: 876, column: 5, scope: !14335)
!14347 = !DILocation(line: 876, column: 16, scope: !14335)
!14348 = !DILocation(line: 877, column: 1, scope: !14335)
!14349 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2242, file: !2242, line: 888, type: !14350, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!107, !2246}
!14352 = !{!14353}
!14353 = !DILocalVariable(name: "thread", arg: 1, scope: !14349, file: !2242, line: 888, type: !2246)
!14354 = !DILocation(line: 0, scope: !14349)
!14355 = !DILocation(line: 893, column: 2, scope: !14349)
!14356 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2242, file: !2242, line: 897, type: !14357, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14359)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!107, !2246, !32}
!14359 = !{!14360, !14361}
!14360 = !DILocalVariable(name: "thread", arg: 1, scope: !14356, file: !2242, line: 897, type: !2246)
!14361 = !DILocalVariable(name: "options", arg: 2, scope: !14356, file: !2242, line: 897, type: !32)
!14362 = !DILocation(line: 0, scope: !14356)
!14363 = !DILocation(line: 902, column: 2, scope: !14356)
!14364 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2242, file: !2242, line: 1072, type: !14365, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14370)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!107, !2245, !14367}
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14368, size: 32)
!14368 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14369)
!14369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2182)
!14370 = !{!14371, !14372}
!14371 = !DILocalVariable(name: "thread", arg: 1, scope: !14364, file: !2242, line: 1072, type: !2245)
!14372 = !DILocalVariable(name: "stats", arg: 2, scope: !14364, file: !2242, line: 1073, type: !14367)
!14373 = !DILocation(line: 0, scope: !14364)
!14374 = !DILocation(line: 1075, column: 14, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14364, file: !2242, line: 1075, column: 6)
!14376 = !DILocation(line: 1075, column: 23, scope: !14375)
!14377 = !DILocation(line: 1086, column: 1, scope: !14364)
!14378 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2242, file: !2242, line: 1088, type: !14379, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14381)
!14379 = !DISubroutineType(types: !14380)
!14380 = !{!107, !14367}
!14381 = !{!14382}
!14382 = !DILocalVariable(name: "stats", arg: 1, scope: !14378, file: !2242, line: 1088, type: !14367)
!14383 = !DILocation(line: 0, scope: !14378)
!14384 = !DILocation(line: 1094, column: 12, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14378, file: !2242, line: 1094, column: 6)
!14386 = !DILocation(line: 1120, column: 1, scope: !14378)
!14387 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14388, file: !14388, line: 20, type: !3111, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !2182)
!14388 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14389 = !DILocation(line: 30, column: 2, scope: !14387)
!14390 = !DILocation(line: 31, column: 1, scope: !14387)
!14391 = distinct !DISubprogram(name: "idle", scope: !14388, file: !14388, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !14392)
!14392 = !{!14393, !14394, !14395}
!14393 = !DILocalVariable(name: "unused1", arg: 1, scope: !14391, file: !14388, line: 33, type: !106)
!14394 = !DILocalVariable(name: "unused2", arg: 2, scope: !14391, file: !14388, line: 33, type: !106)
!14395 = !DILocalVariable(name: "unused3", arg: 3, scope: !14391, file: !14388, line: 33, type: !106)
!14396 = !DILocation(line: 0, scope: !14391)
!14397 = !DILocation(line: 39, column: 2, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !14388, line: 39, column: 2)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !14388, line: 39, column: 2)
!14400 = !DILocation(line: 39, column: 2, scope: !14399)
!14401 = !DILocation(line: 39, column: 2, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !14388, line: 39, column: 2)
!14403 = !DILocation(line: 55, column: 2, scope: !14404, inlinedAt: !14408)
!14404 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !14405)
!14405 = !{!14406, !14407}
!14406 = !DILocalVariable(name: "key", scope: !14404, file: !5954, line: 44, type: !32)
!14407 = !DILocalVariable(name: "tmp", scope: !14404, file: !5954, line: 53, type: !32)
!14408 = distinct !DILocation(line: 62, column: 10, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14391, file: !14388, line: 41, column: 15)
!14410 = !{i64 2041738}
!14411 = !DILocation(line: 0, scope: !14404, inlinedAt: !14408)
!14412 = !DILocation(line: 86, column: 3, scope: !14409)
!14413 = !DILocation(line: 41, column: 2, scope: !14391)
!14414 = distinct !{!14414, !14413, !14415}
!14415 = !DILocation(line: 105, column: 2, scope: !14391)
!14416 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3111, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !2182)
!14417 = !DILocation(line: 5629, column: 2, scope: !14416)
!14418 = !DILocation(line: 5630, column: 1, scope: !14416)
!14419 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!14420 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2480, file: !2480, line: 93, type: !14421, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14423)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!874, !2372, !2372}
!14423 = !{!14424, !14425, !14426, !14427}
!14424 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14420, file: !2480, line: 93, type: !2372)
!14425 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14420, file: !2480, line: 94, type: !2372)
!14426 = !DILocalVariable(name: "b1", scope: !14420, file: !2480, line: 97, type: !874)
!14427 = !DILocalVariable(name: "b2", scope: !14420, file: !2480, line: 98, type: !874)
!14428 = !DILocation(line: 0, scope: !14420)
!14429 = !DILocation(line: 97, column: 30, scope: !14420)
!14430 = !DILocation(line: 98, column: 30, scope: !14420)
!14431 = !DILocation(line: 100, column: 9, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14420, file: !2480, line: 100, column: 6)
!14433 = !DILocation(line: 100, column: 6, scope: !14420)
!14434 = !DILocation(line: 125, column: 1, scope: !14420)
!14435 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2480, file: !2480, line: 428, type: !14436, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{null, !2372}
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "curr", arg: 1, scope: !14435, file: !2480, line: 428, type: !2372)
!14440 = !DILocation(line: 0, scope: !14435)
!14441 = !DILocation(line: 434, column: 6, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14435, file: !2480, line: 434, column: 6)
!14443 = !DILocation(line: 434, column: 23, scope: !14442)
!14444 = !DILocation(line: 434, column: 6, scope: !14435)
!14445 = !DILocation(line: 435, column: 50, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !2480, line: 434, column: 29)
!14447 = !DILocation(line: 435, column: 48, scope: !14446)
!14448 = !DILocation(line: 435, column: 29, scope: !14446)
!14449 = !DILocation(line: 436, column: 24, scope: !14446)
!14450 = !DILocation(line: 436, column: 3, scope: !14446)
!14451 = !DILocation(line: 437, column: 2, scope: !14446)
!14452 = !DILocation(line: 438, column: 1, scope: !14435)
!14453 = distinct !DISubprogram(name: "slice_time", scope: !2480, file: !2480, line: 407, type: !14454, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14456)
!14454 = !DISubroutineType(types: !14455)
!14455 = !{!107, !2372}
!14456 = !{!14457, !14458}
!14457 = !DILocalVariable(name: "curr", arg: 1, scope: !14453, file: !2480, line: 407, type: !2372)
!14458 = !DILocalVariable(name: "ret", scope: !14453, file: !2480, line: 409, type: !107)
!14459 = !DILocation(line: 0, scope: !14453)
!14460 = !DILocation(line: 409, column: 12, scope: !14453)
!14461 = !DILocation(line: 416, column: 2, scope: !14453)
!14462 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2480, file: !2480, line: 440, type: !14463, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{null, !874, !107}
!14465 = !{!14466, !14467, !14468, !14474}
!14466 = !DILocalVariable(name: "slice", arg: 1, scope: !14462, file: !2480, line: 440, type: !874)
!14467 = !DILocalVariable(name: "prio", arg: 2, scope: !14462, file: !2480, line: 440, type: !107)
!14468 = !DILocalVariable(name: "__i", scope: !14469, file: !2480, line: 442, type: !14470)
!14469 = distinct !DILexicalBlock(scope: !14462, file: !2480, line: 442, column: 2)
!14470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14471)
!14471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14472)
!14472 = !{!14473}
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14471, file: !420, line: 33, baseType: !107, size: 32)
!14474 = !DILocalVariable(name: "__key", scope: !14469, file: !2480, line: 442, type: !14470)
!14475 = !DILocation(line: 0, scope: !14462)
!14476 = !DILocation(line: 0, scope: !14469)
!14477 = !DILocalVariable(name: "l", arg: 1, scope: !14478, file: !420, line: 136, type: !14481)
!14478 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14479, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14482)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{!14470, !14481}
!14481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!14482 = !{!14477, !14483}
!14483 = !DILocalVariable(name: "k", scope: !14478, file: !420, line: 139, type: !14470)
!14484 = !DILocation(line: 0, scope: !14478, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 442, column: 2, scope: !14469)
!14486 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !14491)
!14487 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14488)
!14488 = !{!14489, !14490}
!14489 = !DILocalVariable(name: "key", scope: !14487, file: !5954, line: 44, type: !32)
!14490 = !DILocalVariable(name: "tmp", scope: !14487, file: !5954, line: 53, type: !32)
!14491 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !14485)
!14492 = !{i64 2085709}
!14493 = !DILocation(line: 0, scope: !14487, inlinedAt: !14491)
!14494 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14485)
!14495 = distinct !DILexicalBlock(scope: !14496, file: !420, line: 148, column: 2)
!14496 = distinct !DILexicalBlock(scope: !14478, file: !420, line: 148, column: 2)
!14497 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14485)
!14498 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14485)
!14499 = distinct !DILexicalBlock(scope: !14495, file: !420, line: 148, column: 2)
!14500 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !14485)
!14501 = !DILocation(line: 443, column: 29, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !2480, line: 442, column: 26)
!14503 = distinct !DILexicalBlock(scope: !14469, file: !2480, line: 442, column: 2)
!14504 = !DILocation(line: 444, column: 17, scope: !14502)
!14505 = !DILocation(line: 445, column: 51, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14502, file: !2480, line: 445, column: 7)
!14507 = !DILocation(line: 445, column: 7, scope: !14502)
!14508 = !DILocation(line: 0, scope: !14502)
!14509 = !DILocation(line: 451, column: 18, scope: !14502)
!14510 = !DILocation(line: 452, column: 3, scope: !14502)
!14511 = !DILocalVariable(name: "key", arg: 2, scope: !14512, file: !420, line: 190, type: !14470)
!14512 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14513, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14515)
!14513 = !DISubroutineType(types: !14514)
!14514 = !{null, !14481, !14470}
!14515 = !{!14516, !14511}
!14516 = !DILocalVariable(name: "l", arg: 1, scope: !14512, file: !420, line: 189, type: !14481)
!14517 = !DILocation(line: 0, scope: !14512, inlinedAt: !14518)
!14518 = distinct !DILocation(line: 442, column: 2, scope: !14503)
!14519 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14518)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !420, line: 194, column: 2)
!14521 = distinct !DILexicalBlock(scope: !14512, file: !420, line: 194, column: 2)
!14522 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14518)
!14523 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14518)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !420, line: 194, column: 2)
!14525 = !DILocalVariable(name: "key", arg: 1, scope: !14526, file: !5954, line: 84, type: !32)
!14526 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14527)
!14527 = !{!14525}
!14528 = !DILocation(line: 0, scope: !14526, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14518)
!14530 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14529)
!14531 = !{i64 2086526}
!14532 = !DILocation(line: 454, column: 1, scope: !14462)
!14533 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8741, file: !8741, line: 389, type: !7560, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14534)
!14534 = !{!14535}
!14535 = !DILocalVariable(name: "t", arg: 1, scope: !14533, file: !8741, line: 389, type: !152)
!14536 = !DILocation(line: 0, scope: !14533)
!14537 = !DILocalVariable(name: "t", arg: 1, scope: !14538, file: !8741, line: 102, type: !566)
!14538 = distinct !DISubprogram(name: "z_tmcvt", scope: !8741, file: !8741, line: 102, type: !8748, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14539)
!14539 = !{!14537, !14540, !14541, !14542, !14543, !14544, !14545, !14546, !14547, !14548, !14549}
!14540 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14538, file: !8741, line: 102, type: !152)
!14541 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14538, file: !8741, line: 103, type: !152)
!14542 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14538, file: !8741, line: 103, type: !145)
!14543 = !DILocalVariable(name: "result32", arg: 5, scope: !14538, file: !8741, line: 104, type: !145)
!14544 = !DILocalVariable(name: "round_up", arg: 6, scope: !14538, file: !8741, line: 104, type: !145)
!14545 = !DILocalVariable(name: "round_off", arg: 7, scope: !14538, file: !8741, line: 105, type: !145)
!14546 = !DILocalVariable(name: "mul_ratio", scope: !14538, file: !8741, line: 107, type: !145)
!14547 = !DILocalVariable(name: "div_ratio", scope: !14538, file: !8741, line: 109, type: !145)
!14548 = !DILocalVariable(name: "off", scope: !14538, file: !8741, line: 116, type: !566)
!14549 = !DILocalVariable(name: "rdivisor", scope: !14550, file: !8741, line: 119, type: !152)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !8741, line: 118, column: 18)
!14551 = distinct !DILexicalBlock(scope: !14538, file: !8741, line: 118, column: 6)
!14552 = !DILocation(line: 0, scope: !14538, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 392, column: 9, scope: !14533)
!14554 = !DILocation(line: 143, column: 25, scope: !14555, inlinedAt: !14553)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !8741, line: 142, column: 17)
!14556 = distinct !DILexicalBlock(scope: !14557, file: !8741, line: 142, column: 7)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !8741, line: 141, column: 24)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !8741, line: 141, column: 13)
!14559 = distinct !DILexicalBlock(scope: !14538, file: !8741, line: 134, column: 6)
!14560 = !DILocation(line: 392, column: 2, scope: !14533)
!14561 = distinct !DISubprogram(name: "z_time_slice", scope: !2480, file: !2480, line: 502, type: !9187, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14562)
!14562 = !{!14563, !14564}
!14563 = !DILocalVariable(name: "ticks", arg: 1, scope: !14561, file: !2480, line: 502, type: !107)
!14564 = !DILocalVariable(name: "key", scope: !14561, file: !2480, line: 511, type: !14470)
!14565 = !DILocation(line: 0, scope: !14561)
!14566 = !DILocation(line: 0, scope: !14478, inlinedAt: !14567)
!14567 = distinct !DILocation(line: 511, column: 25, scope: !14561)
!14568 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !14567)
!14570 = !DILocation(line: 0, scope: !14487, inlinedAt: !14569)
!14571 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14567)
!14572 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14567)
!14573 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14567)
!14574 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !14567)
!14575 = !DILocation(line: 514, column: 6, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14561, file: !2480, line: 514, column: 6)
!14577 = !DILocation(line: 514, column: 25, scope: !14576)
!14578 = !DILocation(line: 514, column: 22, scope: !14576)
!14579 = !DILocation(line: 514, column: 6, scope: !14561)
!14580 = !DILocation(line: 515, column: 3, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14576, file: !2480, line: 514, column: 35)
!14582 = !DILocation(line: 0, scope: !14512, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 516, column: 3, scope: !14581)
!14584 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14583)
!14585 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14583)
!14586 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14583)
!14587 = !DILocation(line: 0, scope: !14526, inlinedAt: !14588)
!14588 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14583)
!14589 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14588)
!14590 = !DILocation(line: 517, column: 3, scope: !14581)
!14591 = !DILocation(line: 519, column: 18, scope: !14561)
!14592 = !DILocation(line: 522, column: 6, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14561, file: !2480, line: 522, column: 6)
!14594 = !DILocation(line: 522, column: 27, scope: !14593)
!14595 = !DILocation(line: 522, column: 30, scope: !14593)
!14596 = !DILocation(line: 522, column: 6, scope: !14561)
!14597 = !DILocation(line: 523, column: 30, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14599, file: !2480, line: 523, column: 7)
!14599 = distinct !DILexicalBlock(scope: !14593, file: !2480, line: 522, column: 51)
!14600 = !DILocation(line: 523, column: 13, scope: !14598)
!14601 = !DILocation(line: 523, column: 7, scope: !14599)
!14602 = !DILocation(line: 530, column: 10, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14598, file: !2480, line: 523, column: 43)
!14604 = !DILocation(line: 531, column: 3, scope: !14603)
!14605 = !DILocation(line: 532, column: 30, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14598, file: !2480, line: 531, column: 10)
!14607 = !DILocation(line: 535, column: 29, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14593, file: !2480, line: 534, column: 9)
!14609 = !DILocation(line: 0, scope: !14512, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 537, column: 2, scope: !14561)
!14611 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14610)
!14612 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14610)
!14613 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14610)
!14614 = !DILocation(line: 0, scope: !14526, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14610)
!14616 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14615)
!14617 = !DILocation(line: 538, column: 1, scope: !14561)
!14618 = distinct !DISubprogram(name: "sliceable", scope: !2480, file: !2480, line: 468, type: !14619, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{!145, !2372}
!14621 = !{!14622, !14623}
!14622 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !2480, line: 468, type: !2372)
!14623 = !DILocalVariable(name: "ret", scope: !14618, file: !2480, line: 470, type: !145)
!14624 = !DILocation(line: 0, scope: !14618)
!14625 = !DILocation(line: 470, column: 13, scope: !14618)
!14626 = !DILocation(line: 471, column: 3, scope: !14618)
!14627 = !DILocation(line: 471, column: 7, scope: !14618)
!14628 = !DILocation(line: 472, column: 3, scope: !14618)
!14629 = !DILocation(line: 472, column: 37, scope: !14618)
!14630 = !DILocation(line: 472, column: 24, scope: !14618)
!14631 = !DILocation(line: 472, column: 43, scope: !14618)
!14632 = !DILocation(line: 472, column: 7, scope: !14618)
!14633 = !DILocation(line: 473, column: 3, scope: !14618)
!14634 = !DILocation(line: 473, column: 7, scope: !14618)
!14635 = !DILocation(line: 473, column: 6, scope: !14618)
!14636 = !DILocation(line: 479, column: 2, scope: !14618)
!14637 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2480, file: !2480, line: 482, type: !14638, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!14470, !14470}
!14640 = !{!14641, !14642}
!14641 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14637, file: !2480, line: 482, type: !14470)
!14642 = !DILocalVariable(name: "curr", scope: !14637, file: !2480, line: 484, type: !2372)
!14643 = !DILocation(line: 0, scope: !14637)
!14644 = !DILocation(line: 484, column: 26, scope: !14637)
!14645 = !DILocation(line: 493, column: 7, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14637, file: !2480, line: 493, column: 6)
!14647 = !DILocation(line: 493, column: 6, scope: !14637)
!14648 = !DILocation(line: 494, column: 3, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14646, file: !2480, line: 493, column: 49)
!14650 = !DILocation(line: 495, column: 2, scope: !14649)
!14651 = !DILocation(line: 496, column: 2, scope: !14637)
!14652 = !DILocation(line: 499, column: 1, scope: !14637)
!14653 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13638, file: !13638, line: 106, type: !14619, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14654)
!14654 = !{!14655, !14656}
!14655 = !DILocalVariable(name: "thread", arg: 1, scope: !14653, file: !13638, line: 106, type: !2372)
!14656 = !DILocalVariable(name: "state", scope: !14653, file: !13638, line: 108, type: !195)
!14657 = !DILocation(line: 0, scope: !14653)
!14658 = !DILocation(line: 108, column: 31, scope: !14653)
!14659 = !DILocation(line: 110, column: 16, scope: !14653)
!14660 = !DILocation(line: 111, column: 41, scope: !14653)
!14661 = !DILocation(line: 110, column: 2, scope: !14653)
!14662 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 393, type: !14436, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14663)
!14663 = !{!14664}
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14662, file: !2480, line: 393, type: !2372)
!14665 = !DILocation(line: 0, scope: !14662)
!14666 = !DILocation(line: 395, column: 6, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14662, file: !2480, line: 395, column: 6)
!14668 = !DILocation(line: 395, column: 6, scope: !14662)
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14670, file: !2480, line: 264, type: !2372)
!14670 = distinct !DISubprogram(name: "dequeue_thread", scope: !2480, file: !2480, line: 264, type: !14436, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14671)
!14671 = !{!14669}
!14672 = !DILocation(line: 0, scope: !14670, inlinedAt: !14673)
!14673 = distinct !DILocation(line: 396, column: 3, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14667, file: !2480, line: 395, column: 34)
!14675 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !14673)
!14676 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !14673)
!14677 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !2480, line: 232, type: !2372)
!14678 = distinct !DISubprogram(name: "runq_remove", scope: !2480, file: !2480, line: 232, type: !14436, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14679)
!14679 = !{!14677}
!14680 = !DILocation(line: 0, scope: !14678, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !14673)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !2480, line: 267, column: 35)
!14683 = distinct !DILexicalBlock(scope: !14670, file: !2480, line: 267, column: 6)
!14684 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !14681)
!14685 = !DILocation(line: 397, column: 2, scope: !14674)
!14686 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !2480, line: 250, type: !2372)
!14687 = distinct !DISubprogram(name: "queue_thread", scope: !2480, file: !2480, line: 250, type: !14436, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14688)
!14688 = !{!14686}
!14689 = !DILocation(line: 0, scope: !14687, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 398, column: 2, scope: !14662)
!14691 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !14690)
!14692 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !14690)
!14693 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !2480, line: 227, type: !2372)
!14694 = distinct !DISubprogram(name: "runq_add", scope: !2480, file: !2480, line: 227, type: !14436, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14695)
!14695 = !{!14693}
!14696 = !DILocation(line: 0, scope: !14694, inlinedAt: !14697)
!14697 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !14690)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !2480, line: 253, column: 35)
!14699 = distinct !DILexicalBlock(scope: !14687, file: !2480, line: 253, column: 6)
!14700 = !DILocalVariable(name: "pq", arg: 1, scope: !14701, file: !2480, line: 181, type: !14704)
!14701 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2480, file: !2480, line: 181, type: !14702, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14705)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !14704, !2372}
!14704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!14705 = !{!14700, !14706, !14707}
!14706 = !DILocalVariable(name: "thread", arg: 2, scope: !14701, file: !2480, line: 182, type: !2372)
!14707 = !DILocalVariable(name: "t", scope: !14701, file: !2480, line: 184, type: !2372)
!14708 = !DILocation(line: 0, scope: !14701, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !14697)
!14710 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !14709)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !2480, line: 186, column: 2)
!14712 = distinct !DILexicalBlock(scope: !14701, file: !2480, line: 186, column: 2)
!14713 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !14709)
!14714 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !14709)
!14715 = distinct !DILexicalBlock(scope: !14711, file: !2480, line: 186, column: 2)
!14716 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !14709)
!14717 = distinct !DILexicalBlock(scope: !14701, file: !2480, line: 188, column: 2)
!14718 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !14709)
!14719 = distinct !DILexicalBlock(scope: !14717, file: !2480, line: 188, column: 2)
!14720 = !DILocation(line: 0, scope: !14717, inlinedAt: !14709)
!14721 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !14709)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !2480, line: 189, column: 7)
!14723 = distinct !DILexicalBlock(scope: !14719, file: !2480, line: 188, column: 56)
!14724 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !14709)
!14725 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !14709)
!14726 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !14709)
!14727 = distinct !DILexicalBlock(scope: !14722, file: !2480, line: 189, column: 40)
!14728 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !14709)
!14729 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !14709)
!14730 = distinct !{!14730, !14716, !14731}
!14731 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !14709)
!14732 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !14709)
!14733 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !14709)
!14734 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !14709)
!14735 = !DILocation(line: 399, column: 25, scope: !14662)
!14736 = !DILocation(line: 399, column: 22, scope: !14662)
!14737 = !DILocation(line: 399, column: 2, scope: !14662)
!14738 = !DILocation(line: 400, column: 1, scope: !14662)
!14739 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13638, file: !13638, line: 136, type: !14619, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14740)
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !13638, line: 136, type: !2372)
!14742 = !DILocation(line: 0, scope: !14739)
!14743 = !DILocation(line: 138, column: 9, scope: !14739)
!14744 = !DILocation(line: 138, column: 2, scope: !14739)
!14745 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2480, file: !2480, line: 1137, type: !14702, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14746)
!14746 = !{!14747, !14748}
!14747 = !DILocalVariable(name: "pq", arg: 1, scope: !14745, file: !2480, line: 1137, type: !14704)
!14748 = !DILocalVariable(name: "thread", arg: 2, scope: !14745, file: !2480, line: 1137, type: !2372)
!14749 = !DILocation(line: 0, scope: !14745)
!14750 = !DILocation(line: 1139, column: 2, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2480, line: 1139, column: 2)
!14752 = distinct !DILexicalBlock(scope: !14745, file: !2480, line: 1139, column: 2)
!14753 = !DILocation(line: 1139, column: 2, scope: !14752)
!14754 = !DILocation(line: 1139, column: 2, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14751, file: !2480, line: 1139, column: 2)
!14756 = !DILocation(line: 1141, column: 33, scope: !14745)
!14757 = !DILocation(line: 1141, column: 2, scope: !14745)
!14758 = !DILocation(line: 1142, column: 1, scope: !14745)
!14759 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13638, file: !13638, line: 83, type: !14619, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14760)
!14760 = !{!14761}
!14761 = !DILocalVariable(name: "thread", arg: 1, scope: !14759, file: !13638, line: 83, type: !2372)
!14762 = !DILocation(line: 0, scope: !14759)
!14763 = !DILocation(line: 89, column: 16, scope: !14759)
!14764 = !DILocation(line: 89, column: 2, scope: !14759)
!14765 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14766, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{!2476, !14704}
!14768 = !{!14769}
!14769 = !DILocalVariable(name: "list", arg: 1, scope: !14765, file: !319, line: 294, type: !14704)
!14770 = !DILocation(line: 0, scope: !14765)
!14771 = !DILocation(line: 296, column: 9, scope: !14765)
!14772 = !DILocation(line: 296, column: 49, scope: !14765)
!14773 = !DILocation(line: 296, column: 2, scope: !14765)
!14774 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14775, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14777)
!14775 = !DISubroutineType(types: !14776)
!14776 = !{null, !2476, !2476}
!14777 = !{!14778, !14779, !14780}
!14778 = !DILocalVariable(name: "successor", arg: 1, scope: !14774, file: !319, line: 443, type: !2476)
!14779 = !DILocalVariable(name: "node", arg: 2, scope: !14774, file: !319, line: 443, type: !2476)
!14780 = !DILocalVariable(name: "prev", scope: !14774, file: !319, line: 445, type: !14781)
!14781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2476)
!14782 = !DILocation(line: 0, scope: !14774)
!14783 = !DILocation(line: 445, column: 39, scope: !14774)
!14784 = !DILocation(line: 447, column: 8, scope: !14774)
!14785 = !DILocation(line: 447, column: 13, scope: !14774)
!14786 = !DILocation(line: 448, column: 8, scope: !14774)
!14787 = !DILocation(line: 448, column: 13, scope: !14774)
!14788 = !DILocation(line: 449, column: 8, scope: !14774)
!14789 = !DILocation(line: 449, column: 13, scope: !14774)
!14790 = !DILocation(line: 450, column: 18, scope: !14774)
!14791 = !DILocation(line: 451, column: 1, scope: !14774)
!14792 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14793, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14795)
!14793 = !DISubroutineType(types: !14794)
!14794 = !{!2476, !14704, !2476}
!14795 = !{!14796, !14797}
!14796 = !DILocalVariable(name: "list", arg: 1, scope: !14792, file: !319, line: 341, type: !14704)
!14797 = !DILocalVariable(name: "node", arg: 2, scope: !14792, file: !319, line: 342, type: !2476)
!14798 = !DILocation(line: 0, scope: !14792)
!14799 = !DILocation(line: 344, column: 15, scope: !14792)
!14800 = !DILocation(line: 344, column: 9, scope: !14792)
!14801 = !DILocation(line: 344, column: 26, scope: !14792)
!14802 = !DILocation(line: 344, column: 2, scope: !14792)
!14803 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14804, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14806)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{null, !14704, !2476}
!14806 = !{!14807, !14808, !14809}
!14807 = !DILocalVariable(name: "list", arg: 1, scope: !14803, file: !319, line: 404, type: !14704)
!14808 = !DILocalVariable(name: "node", arg: 2, scope: !14803, file: !319, line: 404, type: !2476)
!14809 = !DILocalVariable(name: "tail", scope: !14803, file: !319, line: 406, type: !14781)
!14810 = !DILocation(line: 0, scope: !14803)
!14811 = !DILocation(line: 406, column: 34, scope: !14803)
!14812 = !DILocation(line: 408, column: 8, scope: !14803)
!14813 = !DILocation(line: 408, column: 13, scope: !14803)
!14814 = !DILocation(line: 409, column: 8, scope: !14803)
!14815 = !DILocation(line: 409, column: 13, scope: !14803)
!14816 = !DILocation(line: 411, column: 8, scope: !14803)
!14817 = !DILocation(line: 411, column: 13, scope: !14803)
!14818 = !DILocation(line: 412, column: 13, scope: !14803)
!14819 = !DILocation(line: 413, column: 1, scope: !14803)
!14820 = distinct !DISubprogram(name: "update_cache", scope: !2480, file: !2480, line: 559, type: !9187, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14821)
!14821 = !{!14822, !14823}
!14822 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14820, file: !2480, line: 559, type: !107)
!14823 = !DILocalVariable(name: "thread", scope: !14820, file: !2480, line: 562, type: !2372)
!14824 = !DILocation(line: 0, scope: !14820)
!14825 = !DILocation(line: 239, column: 9, scope: !14826, inlinedAt: !14829)
!14826 = distinct !DISubprogram(name: "runq_best", scope: !2480, file: !2480, line: 237, type: !14827, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!14827 = !DISubroutineType(types: !14828)
!14828 = !{!2372}
!14829 = distinct !DILocation(line: 314, column: 28, scope: !14830, inlinedAt: !14833)
!14830 = distinct !DISubprogram(name: "next_up", scope: !2480, file: !2480, line: 312, type: !14827, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14831)
!14831 = !{!14832}
!14832 = !DILocalVariable(name: "thread", scope: !14830, file: !2480, line: 314, type: !2372)
!14833 = distinct !DILocation(line: 562, column: 28, scope: !14820)
!14834 = !DILocation(line: 0, scope: !14830, inlinedAt: !14833)
!14835 = !DILocation(line: 340, column: 17, scope: !14830, inlinedAt: !14833)
!14836 = !DILocation(line: 340, column: 9, scope: !14830, inlinedAt: !14833)
!14837 = !DILocalVariable(name: "thread", arg: 1, scope: !14838, file: !2480, line: 127, type: !2372)
!14838 = distinct !DISubprogram(name: "should_preempt", scope: !2480, file: !2480, line: 127, type: !14839, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14841)
!14839 = !DISubroutineType(types: !14840)
!14840 = !{!145, !2372, !107}
!14841 = !{!14837, !14842}
!14842 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14838, file: !2480, line: 128, type: !107)
!14843 = !DILocation(line: 0, scope: !14838, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 564, column: 6, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14820, file: !2480, line: 564, column: 6)
!14846 = !DILocation(line: 133, column: 17, scope: !14847, inlinedAt: !14844)
!14847 = distinct !DILexicalBlock(scope: !14838, file: !2480, line: 133, column: 6)
!14848 = !DILocation(line: 0, scope: !14845)
!14849 = !DILocation(line: 133, column: 6, scope: !14838, inlinedAt: !14844)
!14850 = !DILocation(line: 137, column: 2, scope: !14851, inlinedAt: !14844)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !2480, line: 137, column: 2)
!14852 = distinct !DILexicalBlock(scope: !14838, file: !2480, line: 137, column: 2)
!14853 = !DILocation(line: 137, column: 2, scope: !14852, inlinedAt: !14844)
!14854 = !DILocation(line: 137, column: 2, scope: !14855, inlinedAt: !14844)
!14855 = distinct !DILexicalBlock(scope: !14851, file: !2480, line: 137, column: 2)
!14856 = !DILocation(line: 140, column: 6, scope: !14857, inlinedAt: !14844)
!14857 = distinct !DILexicalBlock(scope: !14838, file: !2480, line: 140, column: 6)
!14858 = !DILocation(line: 140, column: 6, scope: !14838, inlinedAt: !14844)
!14859 = !DILocation(line: 150, column: 9, scope: !14860, inlinedAt: !14844)
!14860 = distinct !DILexicalBlock(scope: !14838, file: !2480, line: 149, column: 6)
!14861 = !DILocation(line: 149, column: 6, scope: !14838, inlinedAt: !14844)
!14862 = !DILocation(line: 157, column: 6, scope: !14863, inlinedAt: !14844)
!14863 = distinct !DILexicalBlock(scope: !14838, file: !2480, line: 157, column: 6)
!14864 = !DILocation(line: 564, column: 6, scope: !14820)
!14865 = !DILocation(line: 566, column: 14, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2480, line: 566, column: 7)
!14867 = distinct !DILexicalBlock(scope: !14845, file: !2480, line: 564, column: 42)
!14868 = !DILocation(line: 566, column: 7, scope: !14867)
!14869 = !DILocation(line: 567, column: 4, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14866, file: !2480, line: 566, column: 27)
!14871 = !DILocation(line: 568, column: 3, scope: !14870)
!14872 = !DILocation(line: 585, column: 1, scope: !14820)
!14873 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2480, file: !2480, line: 1144, type: !14874, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14876)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!2372, !14704}
!14876 = !{!14877, !14878, !14879}
!14877 = !DILocalVariable(name: "pq", arg: 1, scope: !14873, file: !2480, line: 1144, type: !14704)
!14878 = !DILocalVariable(name: "thread", scope: !14873, file: !2480, line: 1146, type: !2372)
!14879 = !DILocalVariable(name: "n", scope: !14873, file: !2480, line: 1147, type: !2476)
!14880 = !DILocation(line: 0, scope: !14873)
!14881 = !DILocation(line: 1147, column: 19, scope: !14873)
!14882 = !DILocation(line: 1152, column: 2, scope: !14873)
!14883 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13638, file: !13638, line: 115, type: !14619, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14884)
!14884 = !{!14885}
!14885 = !DILocalVariable(name: "thread", arg: 1, scope: !14883, file: !13638, line: 115, type: !2372)
!14886 = !DILocation(line: 0, scope: !14883)
!14887 = !DILocation(line: 117, column: 46, scope: !14883)
!14888 = !DILocation(line: 117, column: 10, scope: !14883)
!14889 = !DILocation(line: 117, column: 9, scope: !14883)
!14890 = !DILocation(line: 117, column: 2, scope: !14883)
!14891 = distinct !DISubprogram(name: "is_preempt", scope: !2480, file: !2480, line: 62, type: !14454, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14892)
!14892 = !{!14893}
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !2480, line: 62, type: !2372)
!14894 = !DILocation(line: 0, scope: !14891)
!14895 = !DILocation(line: 65, column: 22, scope: !14891)
!14896 = !DILocation(line: 65, column: 30, scope: !14891)
!14897 = !DILocation(line: 65, column: 2, scope: !14891)
!14898 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14067, file: !14067, line: 35, type: !14899, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14903)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{!145, !14901}
!14901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14902, size: 32)
!14902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2423)
!14903 = !{!14904}
!14904 = !DILocalVariable(name: "to", arg: 1, scope: !14898, file: !14067, line: 35, type: !14901)
!14905 = !DILocation(line: 0, scope: !14898)
!14906 = !DILocation(line: 37, column: 35, scope: !14898)
!14907 = !DILocation(line: 37, column: 10, scope: !14898)
!14908 = !DILocation(line: 37, column: 9, scope: !14898)
!14909 = !DILocation(line: 37, column: 2, scope: !14898)
!14910 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14911, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14915)
!14911 = !DISubroutineType(types: !14912)
!14912 = !{!145, !14913}
!14913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14914, size: 32)
!14914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!14915 = !{!14916}
!14916 = !DILocalVariable(name: "node", arg: 1, scope: !14910, file: !319, line: 225, type: !14913)
!14917 = !DILocation(line: 0, scope: !14910)
!14918 = !DILocation(line: 227, column: 15, scope: !14910)
!14919 = !DILocation(line: 227, column: 20, scope: !14910)
!14920 = !DILocation(line: 227, column: 2, scope: !14910)
!14921 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14793, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14922)
!14922 = !{!14923, !14924}
!14923 = !DILocalVariable(name: "list", arg: 1, scope: !14921, file: !319, line: 325, type: !14704)
!14924 = !DILocalVariable(name: "node", arg: 2, scope: !14921, file: !319, line: 326, type: !2476)
!14925 = !DILocation(line: 0, scope: !14921)
!14926 = !DILocation(line: 328, column: 24, scope: !14921)
!14927 = !DILocation(line: 328, column: 15, scope: !14921)
!14928 = !DILocation(line: 328, column: 9, scope: !14921)
!14929 = !DILocation(line: 328, column: 45, scope: !14921)
!14930 = !DILocation(line: 328, column: 2, scope: !14921)
!14931 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14932, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14934)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{!145, !14704}
!14934 = !{!14935}
!14935 = !DILocalVariable(name: "list", arg: 1, scope: !14931, file: !319, line: 266, type: !14704)
!14936 = !DILocation(line: 0, scope: !14931)
!14937 = !DILocation(line: 268, column: 15, scope: !14931)
!14938 = !DILocation(line: 268, column: 20, scope: !14931)
!14939 = !DILocation(line: 268, column: 2, scope: !14931)
!14940 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14941, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14943)
!14941 = !DISubroutineType(types: !14942)
!14942 = !{null, !2476}
!14943 = !{!14944, !14945, !14946}
!14944 = !DILocalVariable(name: "node", arg: 1, scope: !14940, file: !319, line: 496, type: !2476)
!14945 = !DILocalVariable(name: "prev", scope: !14940, file: !319, line: 498, type: !14781)
!14946 = !DILocalVariable(name: "next", scope: !14940, file: !319, line: 499, type: !14781)
!14947 = !DILocation(line: 0, scope: !14940)
!14948 = !DILocation(line: 498, column: 34, scope: !14940)
!14949 = !DILocation(line: 499, column: 34, scope: !14940)
!14950 = !DILocation(line: 501, column: 8, scope: !14940)
!14951 = !DILocation(line: 501, column: 13, scope: !14940)
!14952 = !DILocation(line: 502, column: 8, scope: !14940)
!14953 = !DILocation(line: 502, column: 13, scope: !14940)
!14954 = !DILocation(line: 503, column: 2, scope: !14940)
!14955 = !DILocation(line: 504, column: 1, scope: !14940)
!14956 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14941, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14957)
!14957 = !{!14958}
!14958 = !DILocalVariable(name: "node", arg: 1, scope: !14956, file: !319, line: 211, type: !2476)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 213, column: 8, scope: !14956)
!14961 = !DILocation(line: 213, column: 13, scope: !14956)
!14962 = !DILocation(line: 214, column: 8, scope: !14956)
!14963 = !DILocation(line: 214, column: 13, scope: !14956)
!14964 = !DILocation(line: 215, column: 1, scope: !14956)
!14965 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13638, file: !13638, line: 131, type: !14966, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!145, !2372, !152}
!14968 = !{!14969, !14970}
!14969 = !DILocalVariable(name: "thread", arg: 1, scope: !14965, file: !13638, line: 131, type: !2372)
!14970 = !DILocalVariable(name: "state", arg: 2, scope: !14965, file: !13638, line: 131, type: !152)
!14971 = !DILocation(line: 0, scope: !14965)
!14972 = !DILocation(line: 133, column: 23, scope: !14965)
!14973 = !DILocation(line: 133, column: 10, scope: !14965)
!14974 = !DILocation(line: 133, column: 36, scope: !14965)
!14975 = !DILocation(line: 133, column: 45, scope: !14965)
!14976 = !DILocation(line: 133, column: 2, scope: !14965)
!14977 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13638, file: !13638, line: 211, type: !14978, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14980)
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!145, !107, !107}
!14980 = !{!14981, !14982}
!14981 = !DILocalVariable(name: "prio", arg: 1, scope: !14977, file: !13638, line: 211, type: !107)
!14982 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14977, file: !13638, line: 211, type: !107)
!14983 = !DILocation(line: 0, scope: !14977)
!14984 = !DILocation(line: 213, column: 9, scope: !14977)
!14985 = !DILocation(line: 213, column: 2, scope: !14977)
!14986 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13638, file: !13638, line: 206, type: !14978, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14987)
!14987 = !{!14988, !14989}
!14988 = !DILocalVariable(name: "prio1", arg: 1, scope: !14986, file: !13638, line: 206, type: !107)
!14989 = !DILocalVariable(name: "prio2", arg: 2, scope: !14986, file: !13638, line: 206, type: !107)
!14990 = !DILocation(line: 0, scope: !14986)
!14991 = !DILocation(line: 208, column: 15, scope: !14986)
!14992 = !DILocation(line: 208, column: 2, scope: !14986)
!14993 = distinct !DISubprogram(name: "z_ready_thread", scope: !2480, file: !2480, line: 635, type: !14436, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !14994)
!14994 = !{!14995, !14996, !14998}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !2480, line: 635, type: !2372)
!14996 = !DILocalVariable(name: "__i", scope: !14997, file: !2480, line: 637, type: !14470)
!14997 = distinct !DILexicalBlock(scope: !14993, file: !2480, line: 637, column: 2)
!14998 = !DILocalVariable(name: "__key", scope: !14997, file: !2480, line: 637, type: !14470)
!14999 = !DILocation(line: 0, scope: !14993)
!15000 = !DILocation(line: 0, scope: !14997)
!15001 = !DILocation(line: 0, scope: !14478, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 637, column: 2, scope: !14997)
!15003 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15002)
!15005 = !DILocation(line: 0, scope: !14487, inlinedAt: !15004)
!15006 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15002)
!15007 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15002)
!15008 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15002)
!15009 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15002)
!15010 = !DILocation(line: 639, column: 4, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15012, file: !2480, line: 638, column: 41)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2480, line: 638, column: 7)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2480, line: 637, column: 26)
!15014 = distinct !DILexicalBlock(scope: !14997, file: !2480, line: 637, column: 2)
!15015 = !DILocation(line: 0, scope: !14512, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 637, column: 2, scope: !15014)
!15017 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15016)
!15018 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15016)
!15019 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15016)
!15020 = !DILocation(line: 0, scope: !14526, inlinedAt: !15021)
!15021 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15016)
!15022 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15021)
!15023 = !DILocation(line: 642, column: 1, scope: !14993)
!15024 = distinct !DISubprogram(name: "ready_thread", scope: !2480, file: !2480, line: 617, type: !14436, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15025)
!15025 = !{!15026}
!15026 = !DILocalVariable(name: "thread", arg: 1, scope: !15024, file: !2480, line: 617, type: !2372)
!15027 = !DILocation(line: 0, scope: !15024)
!15028 = !DILocation(line: 626, column: 7, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15024, file: !2480, line: 626, column: 6)
!15030 = !DILocation(line: 626, column: 34, scope: !15029)
!15031 = !DILocation(line: 626, column: 37, scope: !15029)
!15032 = !DILocation(line: 626, column: 6, scope: !15024)
!15033 = !DILocation(line: 0, scope: !14687, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 629, column: 3, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15029, file: !2480, line: 626, column: 64)
!15036 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !15034)
!15037 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !15034)
!15038 = !DILocation(line: 0, scope: !14694, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !15034)
!15040 = !DILocation(line: 0, scope: !14701, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !15039)
!15042 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15041)
!15043 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15041)
!15044 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15041)
!15045 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15041)
!15046 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15041)
!15047 = !DILocation(line: 0, scope: !14717, inlinedAt: !15041)
!15048 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15041)
!15049 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15041)
!15050 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15041)
!15051 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !15041)
!15052 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15041)
!15053 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15041)
!15054 = distinct !{!15054, !15045, !15055}
!15055 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15041)
!15056 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !15041)
!15057 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15041)
!15058 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15041)
!15059 = !DILocation(line: 630, column: 3, scope: !15035)
!15060 = !DILocation(line: 632, column: 2, scope: !15035)
!15061 = !DILocation(line: 633, column: 1, scope: !15024)
!15062 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13638, file: !13638, line: 120, type: !14619, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15063)
!15063 = !{!15064}
!15064 = !DILocalVariable(name: "thread", arg: 1, scope: !15062, file: !13638, line: 120, type: !2372)
!15065 = !DILocation(line: 0, scope: !15062)
!15066 = !DILocation(line: 122, column: 12, scope: !15062)
!15067 = !DILocation(line: 122, column: 62, scope: !15062)
!15068 = !DILocation(line: 123, column: 4, scope: !15062)
!15069 = !DILocation(line: 122, column: 2, scope: !15062)
!15070 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 644, type: !14436, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15071)
!15071 = !{!15072, !15073, !15075}
!15072 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !2480, line: 644, type: !2372)
!15073 = !DILocalVariable(name: "__i", scope: !15074, file: !2480, line: 646, type: !14470)
!15074 = distinct !DILexicalBlock(scope: !15070, file: !2480, line: 646, column: 2)
!15075 = !DILocalVariable(name: "__key", scope: !15074, file: !2480, line: 646, type: !14470)
!15076 = !DILocation(line: 0, scope: !15070)
!15077 = !DILocation(line: 0, scope: !15074)
!15078 = !DILocation(line: 0, scope: !14478, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 646, column: 2, scope: !15074)
!15080 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15081)
!15081 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15079)
!15082 = !DILocation(line: 0, scope: !14487, inlinedAt: !15081)
!15083 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15079)
!15084 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15079)
!15085 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15079)
!15086 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15079)
!15087 = !DILocation(line: 647, column: 3, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15089, file: !2480, line: 646, column: 26)
!15089 = distinct !DILexicalBlock(scope: !15074, file: !2480, line: 646, column: 2)
!15090 = !DILocation(line: 0, scope: !14512, inlinedAt: !15091)
!15091 = distinct !DILocation(line: 646, column: 2, scope: !15089)
!15092 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15091)
!15093 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15091)
!15094 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15091)
!15095 = !DILocation(line: 0, scope: !14526, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15091)
!15097 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15096)
!15098 = !DILocation(line: 649, column: 1, scope: !15070)
!15099 = distinct !DISubprogram(name: "z_sched_start", scope: !2480, file: !2480, line: 651, type: !14436, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15100)
!15100 = !{!15101, !15102}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !2480, line: 651, type: !2372)
!15102 = !DILocalVariable(name: "key", scope: !15099, file: !2480, line: 653, type: !14470)
!15103 = !DILocation(line: 0, scope: !15099)
!15104 = !DILocation(line: 0, scope: !14478, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 653, column: 25, scope: !15099)
!15106 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15105)
!15108 = !DILocation(line: 0, scope: !14487, inlinedAt: !15107)
!15109 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15105)
!15110 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15105)
!15111 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15105)
!15112 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15105)
!15113 = !DILocation(line: 655, column: 6, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15099, file: !2480, line: 655, column: 6)
!15115 = !DILocation(line: 655, column: 6, scope: !15099)
!15116 = !DILocation(line: 0, scope: !14512, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 656, column: 3, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15114, file: !2480, line: 655, column: 36)
!15119 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15117)
!15120 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15117)
!15121 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15117)
!15122 = !DILocation(line: 0, scope: !14526, inlinedAt: !15123)
!15123 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15117)
!15124 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15123)
!15125 = !DILocation(line: 657, column: 3, scope: !15118)
!15126 = !DILocation(line: 660, column: 2, scope: !15099)
!15127 = !DILocation(line: 661, column: 2, scope: !15099)
!15128 = !DILocation(line: 662, column: 2, scope: !15099)
!15129 = !DILocation(line: 663, column: 1, scope: !15099)
!15130 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13638, file: !13638, line: 126, type: !14619, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15131)
!15131 = !{!15132}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15130, file: !13638, line: 126, type: !2372)
!15133 = !DILocation(line: 0, scope: !15130)
!15134 = !DILocation(line: 128, column: 23, scope: !15130)
!15135 = !DILocation(line: 128, column: 36, scope: !15130)
!15136 = !DILocation(line: 128, column: 56, scope: !15130)
!15137 = !DILocation(line: 128, column: 2, scope: !15130)
!15138 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13638, file: !13638, line: 155, type: !14436, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15139)
!15139 = !{!15140}
!15140 = !DILocalVariable(name: "thread", arg: 1, scope: !15138, file: !13638, line: 155, type: !2372)
!15141 = !DILocation(line: 0, scope: !15138)
!15142 = !DILocation(line: 157, column: 15, scope: !15138)
!15143 = !DILocation(line: 157, column: 28, scope: !15138)
!15144 = !DILocation(line: 158, column: 1, scope: !15138)
!15145 = distinct !DISubprogram(name: "z_reschedule", scope: !2480, file: !2480, line: 967, type: !14513, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15146)
!15146 = !{!15147, !15148}
!15147 = !DILocalVariable(name: "lock", arg: 1, scope: !15145, file: !2480, line: 967, type: !14481)
!15148 = !DILocalVariable(name: "key", arg: 2, scope: !15145, file: !2480, line: 967, type: !14470)
!15149 = !DILocation(line: 0, scope: !15145)
!15150 = !DILocation(line: 969, column: 6, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15145, file: !2480, line: 969, column: 6)
!15152 = !DILocation(line: 969, column: 23, scope: !15151)
!15153 = !DILocation(line: 969, column: 26, scope: !15151)
!15154 = !DILocation(line: 969, column: 6, scope: !15145)
!15155 = !DILocalVariable(name: "key", arg: 2, scope: !15156, file: !13742, line: 193, type: !14470)
!15156 = distinct !DISubprogram(name: "z_swap", scope: !13742, file: !13742, line: 193, type: !15157, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!107, !14481, !14470}
!15159 = !{!15160, !15155}
!15160 = !DILocalVariable(name: "lock", arg: 1, scope: !15156, file: !13742, line: 193, type: !14481)
!15161 = !DILocation(line: 0, scope: !15156, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 970, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15151, file: !2480, line: 969, column: 39)
!15164 = !DILocalVariable(name: "l", arg: 1, scope: !15165, file: !420, line: 221, type: !14481)
!15165 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15166, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15168)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{null, !14481}
!15168 = !{!15164}
!15169 = !DILocation(line: 0, scope: !15165, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !15162)
!15171 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15170)
!15172 = distinct !DILexicalBlock(scope: !15173, file: !420, line: 225, column: 2)
!15173 = distinct !DILexicalBlock(scope: !15165, file: !420, line: 225, column: 2)
!15174 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15170)
!15175 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15170)
!15176 = distinct !DILexicalBlock(scope: !15172, file: !420, line: 225, column: 2)
!15177 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !15162)
!15178 = !DILocation(line: 971, column: 2, scope: !15163)
!15179 = !DILocation(line: 0, scope: !14512, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 972, column: 3, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15151, file: !2480, line: 971, column: 9)
!15182 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15180)
!15183 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15180)
!15184 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15180)
!15185 = !DILocation(line: 0, scope: !14526, inlinedAt: !15186)
!15186 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15180)
!15187 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15186)
!15188 = !DILocation(line: 975, column: 1, scope: !15145)
!15189 = distinct !DISubprogram(name: "resched", scope: !2480, file: !2480, line: 940, type: !15190, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15192)
!15190 = !DISubroutineType(types: !15191)
!15191 = !{!145, !152}
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "key", arg: 1, scope: !15189, file: !2480, line: 940, type: !152)
!15194 = !DILocation(line: 0, scope: !15189)
!15195 = !DILocalVariable(name: "key", arg: 1, scope: !15196, file: !5954, line: 112, type: !32)
!15196 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5954, file: !5954, line: 112, type: !15197, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15199)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!145, !32}
!15199 = !{!15195}
!15200 = !DILocation(line: 0, scope: !15196, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 946, column: 9, scope: !15189)
!15202 = !DILocation(line: 115, column: 13, scope: !15196, inlinedAt: !15201)
!15203 = !DILocation(line: 946, column: 32, scope: !15189)
!15204 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15208)
!15205 = distinct !DISubprogram(name: "__get_IPSR", scope: !6273, file: !6273, line: 1027, type: !6360, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15206)
!15206 = !{!15207}
!15207 = !DILocalVariable(name: "result", scope: !15205, file: !6273, line: 1029, type: !152)
!15208 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15210)
!15209 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7325, file: !7325, line: 46, type: !7326, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15210 = distinct !DILocation(line: 946, column: 36, scope: !15189)
!15211 = !{i64 2960284}
!15212 = !DILocation(line: 0, scope: !15205, inlinedAt: !15208)
!15213 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15210)
!15214 = !DILocation(line: 946, column: 2, scope: !15189)
!15215 = distinct !DISubprogram(name: "need_swap", scope: !2480, file: !2480, line: 953, type: !7326, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15216)
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "new_thread", scope: !15215, file: !2480, line: 959, type: !2372)
!15218 = !DILocation(line: 962, column: 31, scope: !15215)
!15219 = !DILocation(line: 0, scope: !15215)
!15220 = !DILocation(line: 963, column: 23, scope: !15215)
!15221 = !DILocation(line: 963, column: 20, scope: !15215)
!15222 = !DILocation(line: 963, column: 2, scope: !15215)
!15223 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13742, file: !13742, line: 181, type: !6283, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15224)
!15224 = !{!15225, !15226}
!15225 = !DILocalVariable(name: "key", arg: 1, scope: !15223, file: !13742, line: 181, type: !32)
!15226 = !DILocalVariable(name: "ret", scope: !15223, file: !13742, line: 183, type: !107)
!15227 = !DILocation(line: 0, scope: !15223)
!15228 = !DILocation(line: 185, column: 8, scope: !15223)
!15229 = !DILocation(line: 186, column: 2, scope: !15223)
!15230 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2480, file: !2480, line: 665, type: !14436, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15231)
!15231 = !{!15232, !15233, !15235}
!15232 = !DILocalVariable(name: "thread", arg: 1, scope: !15230, file: !2480, line: 665, type: !2372)
!15233 = !DILocalVariable(name: "__i", scope: !15234, file: !2480, line: 671, type: !14470)
!15234 = distinct !DILexicalBlock(scope: !15230, file: !2480, line: 671, column: 2)
!15235 = !DILocalVariable(name: "__key", scope: !15234, file: !2480, line: 671, type: !14470)
!15236 = !DILocation(line: 0, scope: !15230)
!15237 = !DILocation(line: 669, column: 8, scope: !15230)
!15238 = !DILocation(line: 0, scope: !15234)
!15239 = !DILocation(line: 0, scope: !14478, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 671, column: 2, scope: !15234)
!15241 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15240)
!15243 = !DILocation(line: 0, scope: !14487, inlinedAt: !15242)
!15244 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15240)
!15245 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15240)
!15246 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15240)
!15247 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15240)
!15248 = !DILocation(line: 672, column: 7, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !2480, line: 672, column: 7)
!15250 = distinct !DILexicalBlock(scope: !15251, file: !2480, line: 671, column: 26)
!15251 = distinct !DILexicalBlock(scope: !15234, file: !2480, line: 671, column: 2)
!15252 = !DILocation(line: 672, column: 7, scope: !15250)
!15253 = !DILocation(line: 0, scope: !14670, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 673, column: 4, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15249, file: !2480, line: 672, column: 35)
!15256 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !15254)
!15257 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15254)
!15258 = !DILocation(line: 0, scope: !14678, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15254)
!15260 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15259)
!15261 = !DILocation(line: 674, column: 3, scope: !15255)
!15262 = !DILocation(line: 675, column: 3, scope: !15250)
!15263 = !DILocation(line: 676, column: 26, scope: !15250)
!15264 = !DILocation(line: 676, column: 23, scope: !15250)
!15265 = !DILocation(line: 676, column: 3, scope: !15250)
!15266 = !DILocation(line: 0, scope: !14512, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 671, column: 2, scope: !15251)
!15268 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15267)
!15269 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15267)
!15270 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15267)
!15271 = !DILocation(line: 0, scope: !14526, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15267)
!15273 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15272)
!15274 = !DILocation(line: 679, column: 16, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15230, file: !2480, line: 679, column: 6)
!15276 = !DILocation(line: 679, column: 13, scope: !15275)
!15277 = !DILocation(line: 679, column: 6, scope: !15230)
!15278 = !DILocation(line: 680, column: 3, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15275, file: !2480, line: 679, column: 26)
!15280 = !DILocation(line: 681, column: 2, scope: !15279)
!15281 = !DILocation(line: 684, column: 1, scope: !15230)
!15282 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14067, file: !14067, line: 52, type: !14454, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15283)
!15283 = !{!15284}
!15284 = !DILocalVariable(name: "thread", arg: 1, scope: !15282, file: !14067, line: 52, type: !2372)
!15285 = !DILocation(line: 0, scope: !15282)
!15286 = !DILocation(line: 54, column: 39, scope: !15282)
!15287 = !DILocation(line: 54, column: 9, scope: !15282)
!15288 = !DILocation(line: 54, column: 2, scope: !15282)
!15289 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13638, file: !13638, line: 141, type: !14436, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15290)
!15290 = !{!15291}
!15291 = !DILocalVariable(name: "thread", arg: 1, scope: !15289, file: !13638, line: 141, type: !2372)
!15292 = !DILocation(line: 0, scope: !15289)
!15293 = !DILocation(line: 143, column: 15, scope: !15289)
!15294 = !DILocation(line: 143, column: 28, scope: !15289)
!15295 = !DILocation(line: 146, column: 1, scope: !15289)
!15296 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13638, file: !13638, line: 73, type: !3111, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15297 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 75, column: 30, scope: !15296)
!15299 = !DILocation(line: 0, scope: !14487, inlinedAt: !15298)
!15300 = !DILocation(line: 75, column: 9, scope: !15296)
!15301 = !DILocation(line: 76, column: 1, scope: !15296)
!15302 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2480, file: !2480, line: 977, type: !6370, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15303)
!15303 = !{!15304}
!15304 = !DILocalVariable(name: "key", arg: 1, scope: !15302, file: !2480, line: 977, type: !152)
!15305 = !DILocation(line: 0, scope: !15302)
!15306 = !DILocation(line: 979, column: 6, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15302, file: !2480, line: 979, column: 6)
!15308 = !DILocation(line: 979, column: 6, scope: !15302)
!15309 = !DILocation(line: 980, column: 3, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15307, file: !2480, line: 979, column: 20)
!15311 = !DILocation(line: 981, column: 2, scope: !15310)
!15312 = !DILocation(line: 0, scope: !14526, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 982, column: 3, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15307, file: !2480, line: 981, column: 9)
!15315 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15313)
!15316 = !DILocation(line: 985, column: 1, scope: !15302)
!15317 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2480, file: !2480, line: 695, type: !14436, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15318)
!15318 = !{!15319, !15320}
!15319 = !DILocalVariable(name: "thread", arg: 1, scope: !15317, file: !2480, line: 695, type: !2372)
!15320 = !DILocalVariable(name: "key", scope: !15317, file: !2480, line: 699, type: !14470)
!15321 = !DILocation(line: 0, scope: !15317)
!15322 = !DILocation(line: 0, scope: !14478, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 699, column: 25, scope: !15317)
!15324 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15323)
!15326 = !DILocation(line: 0, scope: !14487, inlinedAt: !15325)
!15327 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15323)
!15328 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15323)
!15329 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15323)
!15330 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15323)
!15331 = !DILocation(line: 702, column: 7, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15317, file: !2480, line: 702, column: 6)
!15333 = !DILocation(line: 702, column: 6, scope: !15317)
!15334 = !DILocation(line: 0, scope: !14512, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 703, column: 3, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !2480, line: 702, column: 38)
!15337 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15335)
!15338 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15335)
!15339 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15335)
!15340 = !DILocation(line: 0, scope: !14526, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15335)
!15342 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15341)
!15343 = !DILocation(line: 704, column: 3, scope: !15336)
!15344 = !DILocation(line: 707, column: 2, scope: !15317)
!15345 = !DILocation(line: 708, column: 2, scope: !15317)
!15346 = !DILocation(line: 710, column: 2, scope: !15317)
!15347 = !DILocation(line: 713, column: 1, scope: !15317)
!15348 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13638, file: !13638, line: 96, type: !14619, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15349)
!15349 = !{!15350}
!15350 = !DILocalVariable(name: "thread", arg: 1, scope: !15348, file: !13638, line: 96, type: !2372)
!15351 = !DILocation(line: 0, scope: !15348)
!15352 = !DILocation(line: 98, column: 23, scope: !15348)
!15353 = !DILocation(line: 98, column: 36, scope: !15348)
!15354 = !DILocation(line: 98, column: 57, scope: !15348)
!15355 = !DILocation(line: 98, column: 2, scope: !15348)
!15356 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13638, file: !13638, line: 148, type: !14436, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15357)
!15357 = !{!15358}
!15358 = !DILocalVariable(name: "thread", arg: 1, scope: !15356, file: !13638, line: 148, type: !2372)
!15359 = !DILocation(line: 0, scope: !15356)
!15360 = !DILocation(line: 150, column: 15, scope: !15356)
!15361 = !DILocation(line: 150, column: 28, scope: !15356)
!15362 = !DILocation(line: 153, column: 1, scope: !15356)
!15363 = distinct !DISubprogram(name: "z_pend_thread", scope: !2480, file: !2480, line: 770, type: !15364, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15370)
!15364 = !DISubroutineType(types: !15365)
!15365 = !{null, !2372, !2403, !15366}
!15366 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15367)
!15367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15368)
!15368 = !{!15369}
!15369 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15367, file: !565, line: 66, baseType: !564, size: 64)
!15370 = !{!15371, !15372, !15373, !15374, !15376}
!15371 = !DILocalVariable(name: "thread", arg: 1, scope: !15363, file: !2480, line: 770, type: !2372)
!15372 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15363, file: !2480, line: 770, type: !2403)
!15373 = !DILocalVariable(name: "timeout", arg: 3, scope: !15363, file: !2480, line: 771, type: !15366)
!15374 = !DILocalVariable(name: "__i", scope: !15375, file: !2480, line: 774, type: !14470)
!15375 = distinct !DILexicalBlock(scope: !15363, file: !2480, line: 774, column: 2)
!15376 = !DILocalVariable(name: "__key", scope: !15375, file: !2480, line: 774, type: !14470)
!15377 = !DILocation(line: 0, scope: !15363)
!15378 = !DILocation(line: 773, column: 2, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15380, file: !2480, line: 773, column: 2)
!15380 = distinct !DILexicalBlock(scope: !15363, file: !2480, line: 773, column: 2)
!15381 = !DILocation(line: 773, column: 2, scope: !15380)
!15382 = !DILocation(line: 773, column: 2, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15379, file: !2480, line: 773, column: 2)
!15384 = !DILocation(line: 0, scope: !15375)
!15385 = !DILocation(line: 0, scope: !14478, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 774, column: 2, scope: !15375)
!15387 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15386)
!15389 = !DILocation(line: 0, scope: !14487, inlinedAt: !15388)
!15390 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15386)
!15391 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15386)
!15392 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15386)
!15393 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15386)
!15394 = !DILocation(line: 775, column: 3, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2480, line: 774, column: 26)
!15396 = distinct !DILexicalBlock(scope: !15375, file: !2480, line: 774, column: 2)
!15397 = !DILocation(line: 0, scope: !14512, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 774, column: 2, scope: !15396)
!15399 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15398)
!15400 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15398)
!15401 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15398)
!15402 = !DILocation(line: 0, scope: !14526, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15398)
!15404 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15403)
!15405 = !DILocation(line: 777, column: 1, scope: !15363)
!15406 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2480, file: !2480, line: 79, type: !14619, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15407)
!15407 = !{!15408}
!15408 = !DILocalVariable(name: "thread", arg: 1, scope: !15406, file: !2480, line: 79, type: !2372)
!15409 = !DILocation(line: 0, scope: !15406)
!15410 = !DILocation(line: 81, column: 23, scope: !15406)
!15411 = !DILocation(line: 81, column: 36, scope: !15406)
!15412 = !DILocation(line: 81, column: 53, scope: !15406)
!15413 = !DILocation(line: 81, column: 2, scope: !15406)
!15414 = distinct !DISubprogram(name: "pend_locked", scope: !2480, file: !2480, line: 760, type: !15364, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15415)
!15415 = !{!15416, !15417, !15418}
!15416 = !DILocalVariable(name: "thread", arg: 1, scope: !15414, file: !2480, line: 760, type: !2372)
!15417 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15414, file: !2480, line: 760, type: !2403)
!15418 = !DILocalVariable(name: "timeout", arg: 3, scope: !15414, file: !2480, line: 761, type: !15366)
!15419 = !DILocation(line: 0, scope: !15414)
!15420 = !DILocation(line: 766, column: 2, scope: !15414)
!15421 = !DILocation(line: 767, column: 2, scope: !15414)
!15422 = !DILocation(line: 768, column: 1, scope: !15414)
!15423 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2480, file: !2480, line: 740, type: !15424, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{null, !2372, !2403}
!15426 = !{!15427, !15428}
!15427 = !DILocalVariable(name: "thread", arg: 1, scope: !15423, file: !2480, line: 740, type: !2372)
!15428 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15423, file: !2480, line: 740, type: !2403)
!15429 = !DILocation(line: 0, scope: !15423)
!15430 = !DILocation(line: 742, column: 2, scope: !15423)
!15431 = !DILocation(line: 743, column: 2, scope: !15423)
!15432 = !DILocation(line: 747, column: 13, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15423, file: !2480, line: 747, column: 6)
!15434 = !DILocation(line: 747, column: 6, scope: !15423)
!15435 = !DILocation(line: 748, column: 16, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15433, file: !2480, line: 747, column: 22)
!15437 = !DILocation(line: 748, column: 26, scope: !15436)
!15438 = !DILocation(line: 749, column: 28, scope: !15436)
!15439 = !DILocation(line: 0, scope: !14701, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 749, column: 3, scope: !15436)
!15441 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15440)
!15442 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15440)
!15443 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15440)
!15444 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15440)
!15445 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15440)
!15446 = !DILocation(line: 0, scope: !14717, inlinedAt: !15440)
!15447 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15440)
!15448 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15440)
!15449 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15440)
!15450 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !15440)
!15451 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15440)
!15452 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15440)
!15453 = distinct !{!15453, !15444, !15454}
!15454 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15440)
!15455 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !15440)
!15456 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15440)
!15457 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15440)
!15458 = !DILocation(line: 751, column: 1, scope: !15423)
!15459 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2480, file: !2480, line: 753, type: !15460, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15462)
!15460 = !DISubroutineType(types: !15461)
!15461 = !{null, !2372, !15366}
!15462 = !{!15463, !15464}
!15463 = !DILocalVariable(name: "thread", arg: 1, scope: !15459, file: !2480, line: 753, type: !2372)
!15464 = !DILocalVariable(name: "timeout", arg: 2, scope: !15459, file: !2480, line: 753, type: !15366)
!15465 = !DILocation(line: 0, scope: !15459)
!15466 = !DILocation(line: 755, column: 7, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15459, file: !2480, line: 755, column: 6)
!15468 = !DILocation(line: 755, column: 6, scope: !15459)
!15469 = !DILocation(line: 756, column: 3, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15467, file: !2480, line: 755, column: 41)
!15471 = !DILocation(line: 757, column: 2, scope: !15470)
!15472 = !DILocation(line: 758, column: 1, scope: !15459)
!15473 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14067, file: !14067, line: 47, type: !15460, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15474)
!15474 = !{!15475, !15476}
!15475 = !DILocalVariable(name: "thread", arg: 1, scope: !15473, file: !14067, line: 47, type: !2372)
!15476 = !DILocalVariable(name: "ticks", arg: 2, scope: !15473, file: !14067, line: 47, type: !15366)
!15477 = !DILocation(line: 0, scope: !15473)
!15478 = !DILocation(line: 49, column: 30, scope: !15473)
!15479 = !DILocation(line: 49, column: 2, scope: !15473)
!15480 = !DILocation(line: 50, column: 1, scope: !15473)
!15481 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2480, file: !2480, line: 795, type: !2429, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15482)
!15482 = !{!15483, !15484, !15485, !15487, !15488}
!15483 = !DILocalVariable(name: "timeout", arg: 1, scope: !15481, file: !2480, line: 795, type: !2431)
!15484 = !DILocalVariable(name: "thread", scope: !15481, file: !2480, line: 797, type: !2372)
!15485 = !DILocalVariable(name: "__i", scope: !15486, file: !2480, line: 800, type: !14470)
!15486 = distinct !DILexicalBlock(scope: !15481, file: !2480, line: 800, column: 2)
!15487 = !DILocalVariable(name: "__key", scope: !15486, file: !2480, line: 800, type: !14470)
!15488 = !DILocalVariable(name: "killed", scope: !15489, file: !2480, line: 801, type: !145)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2480, line: 800, column: 26)
!15490 = distinct !DILexicalBlock(scope: !15486, file: !2480, line: 800, column: 2)
!15491 = !DILocation(line: 0, scope: !15481)
!15492 = !DILocation(line: 797, column: 28, scope: !15481)
!15493 = !DILocation(line: 0, scope: !15486)
!15494 = !DILocation(line: 0, scope: !14478, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 800, column: 2, scope: !15486)
!15496 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15495)
!15498 = !DILocation(line: 0, scope: !14487, inlinedAt: !15497)
!15499 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15495)
!15500 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15495)
!15501 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15495)
!15502 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15495)
!15503 = !DILocation(line: 801, column: 27, scope: !15489)
!15504 = !DILocation(line: 801, column: 32, scope: !15489)
!15505 = !DILocation(line: 801, column: 61, scope: !15489)
!15506 = !DILocation(line: 0, scope: !15489)
!15507 = !DILocation(line: 804, column: 7, scope: !15489)
!15508 = !DILocation(line: 805, column: 21, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2480, line: 805, column: 8)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !2480, line: 804, column: 16)
!15511 = distinct !DILexicalBlock(scope: !15489, file: !2480, line: 804, column: 7)
!15512 = !DILocation(line: 805, column: 31, scope: !15509)
!15513 = !DILocation(line: 805, column: 8, scope: !15510)
!15514 = !DILocation(line: 806, column: 5, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15509, file: !2480, line: 805, column: 40)
!15516 = !DILocation(line: 807, column: 4, scope: !15515)
!15517 = !DILocation(line: 808, column: 4, scope: !15510)
!15518 = !DILocation(line: 809, column: 4, scope: !15510)
!15519 = !DILocation(line: 810, column: 4, scope: !15510)
!15520 = !DILocation(line: 811, column: 3, scope: !15510)
!15521 = !DILocation(line: 0, scope: !14512, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 800, column: 2, scope: !15490)
!15523 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15522)
!15524 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15522)
!15525 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15522)
!15526 = !DILocation(line: 0, scope: !14526, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15522)
!15528 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15527)
!15529 = !DILocation(line: 813, column: 1, scope: !15481)
!15530 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2480, file: !2480, line: 779, type: !14436, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15531)
!15531 = !{!15532}
!15532 = !DILocalVariable(name: "thread", arg: 1, scope: !15530, file: !2480, line: 779, type: !2372)
!15533 = !DILocation(line: 0, scope: !15530)
!15534 = !DILocation(line: 781, column: 21, scope: !15530)
!15535 = !DILocation(line: 781, column: 2, scope: !15530)
!15536 = !DILocation(line: 782, column: 2, scope: !15530)
!15537 = !DILocation(line: 783, column: 15, scope: !15530)
!15538 = !DILocation(line: 783, column: 25, scope: !15530)
!15539 = !DILocation(line: 784, column: 1, scope: !15530)
!15540 = distinct !DISubprogram(name: "pended_on_thread", scope: !2480, file: !2480, line: 724, type: !15541, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15543)
!15541 = !DISubroutineType(types: !15542)
!15542 = !{!2403, !2372}
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15540, file: !2480, line: 724, type: !2372)
!15545 = !DILocation(line: 0, scope: !15540)
!15546 = !DILocation(line: 726, column: 2, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15548, file: !2480, line: 726, column: 2)
!15548 = distinct !DILexicalBlock(scope: !15540, file: !2480, line: 726, column: 2)
!15549 = !DILocation(line: 726, column: 2, scope: !15548)
!15550 = !DILocation(line: 726, column: 2, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15547, file: !2480, line: 726, column: 2)
!15552 = !DILocation(line: 728, column: 2, scope: !15540)
!15553 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13638, file: !13638, line: 165, type: !14436, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15554)
!15554 = !{!15555}
!15555 = !DILocalVariable(name: "thread", arg: 1, scope: !15553, file: !13638, line: 165, type: !2372)
!15556 = !DILocation(line: 0, scope: !15553)
!15557 = !DILocation(line: 167, column: 15, scope: !15553)
!15558 = !DILocation(line: 167, column: 28, scope: !15553)
!15559 = !DILocation(line: 168, column: 1, scope: !15553)
!15560 = distinct !DISubprogram(name: "unready_thread", scope: !2480, file: !2480, line: 731, type: !14436, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15561)
!15561 = !{!15562}
!15562 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2480, line: 731, type: !2372)
!15563 = !DILocation(line: 0, scope: !15560)
!15564 = !DILocation(line: 733, column: 6, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15560, file: !2480, line: 733, column: 6)
!15566 = !DILocation(line: 733, column: 6, scope: !15560)
!15567 = !DILocation(line: 0, scope: !14670, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 734, column: 3, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15565, file: !2480, line: 733, column: 34)
!15570 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !15568)
!15571 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15568)
!15572 = !DILocation(line: 0, scope: !14678, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15568)
!15574 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15573)
!15575 = !DILocation(line: 735, column: 2, scope: !15569)
!15576 = !DILocation(line: 736, column: 25, scope: !15560)
!15577 = !DILocation(line: 736, column: 22, scope: !15560)
!15578 = !DILocation(line: 736, column: 2, scope: !15560)
!15579 = !DILocation(line: 737, column: 1, scope: !15560)
!15580 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13638, file: !13638, line: 160, type: !14436, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15581)
!15581 = !{!15582}
!15582 = !DILocalVariable(name: "thread", arg: 1, scope: !15580, file: !13638, line: 160, type: !2372)
!15583 = !DILocation(line: 0, scope: !15580)
!15584 = !DILocation(line: 162, column: 15, scope: !15580)
!15585 = !DILocation(line: 162, column: 28, scope: !15580)
!15586 = !DILocation(line: 163, column: 1, scope: !15580)
!15587 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2480, file: !2480, line: 786, type: !14436, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15588)
!15588 = !{!15589, !15590, !15592}
!15589 = !DILocalVariable(name: "thread", arg: 1, scope: !15587, file: !2480, line: 786, type: !2372)
!15590 = !DILocalVariable(name: "__i", scope: !15591, file: !2480, line: 788, type: !14470)
!15591 = distinct !DILexicalBlock(scope: !15587, file: !2480, line: 788, column: 2)
!15592 = !DILocalVariable(name: "__key", scope: !15591, file: !2480, line: 788, type: !14470)
!15593 = !DILocation(line: 0, scope: !15587)
!15594 = !DILocation(line: 0, scope: !15591)
!15595 = !DILocation(line: 0, scope: !14478, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 788, column: 2, scope: !15591)
!15597 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15596)
!15599 = !DILocation(line: 0, scope: !14487, inlinedAt: !15598)
!15600 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15596)
!15601 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15596)
!15602 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15596)
!15603 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15596)
!15604 = !DILocation(line: 789, column: 3, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2480, line: 788, column: 26)
!15606 = distinct !DILexicalBlock(scope: !15591, file: !2480, line: 788, column: 2)
!15607 = !DILocation(line: 0, scope: !14512, inlinedAt: !15608)
!15608 = distinct !DILocation(line: 788, column: 2, scope: !15606)
!15609 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15608)
!15610 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15608)
!15611 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15608)
!15612 = !DILocation(line: 0, scope: !14526, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15608)
!15614 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15613)
!15615 = !DILocation(line: 791, column: 1, scope: !15587)
!15616 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2480, file: !2480, line: 816, type: !15617, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15619)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{!107, !152, !2403, !15366}
!15619 = !{!15620, !15621, !15622, !15623, !15624, !15626}
!15620 = !DILocalVariable(name: "key", arg: 1, scope: !15616, file: !2480, line: 816, type: !152)
!15621 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15616, file: !2480, line: 816, type: !2403)
!15622 = !DILocalVariable(name: "timeout", arg: 3, scope: !15616, file: !2480, line: 816, type: !15366)
!15623 = !DILocalVariable(name: "ret", scope: !15616, file: !2480, line: 828, type: !107)
!15624 = !DILocalVariable(name: "__i", scope: !15625, file: !2480, line: 829, type: !14470)
!15625 = distinct !DILexicalBlock(scope: !15616, file: !2480, line: 829, column: 2)
!15626 = !DILocalVariable(name: "__key", scope: !15625, file: !2480, line: 829, type: !14470)
!15627 = !DILocation(line: 0, scope: !15616)
!15628 = !DILocation(line: 823, column: 14, scope: !15616)
!15629 = !DILocation(line: 823, column: 2, scope: !15616)
!15630 = !DILocation(line: 826, column: 20, scope: !15616)
!15631 = !DILocation(line: 826, column: 18, scope: !15616)
!15632 = !DILocation(line: 828, column: 12, scope: !15616)
!15633 = !DILocation(line: 0, scope: !15625)
!15634 = !DILocation(line: 0, scope: !14478, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 829, column: 2, scope: !15625)
!15636 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15635)
!15638 = !DILocation(line: 0, scope: !14487, inlinedAt: !15637)
!15639 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15635)
!15640 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15635)
!15641 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15635)
!15642 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15635)
!15643 = !DILocation(line: 830, column: 7, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2480, line: 830, column: 7)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2480, line: 829, column: 26)
!15646 = distinct !DILexicalBlock(scope: !15625, file: !2480, line: 829, column: 2)
!15647 = !DILocation(line: 830, column: 26, scope: !15644)
!15648 = !DILocation(line: 830, column: 23, scope: !15644)
!15649 = !DILocation(line: 830, column: 7, scope: !15645)
!15650 = !DILocation(line: 831, column: 20, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15644, file: !2480, line: 830, column: 36)
!15652 = !DILocation(line: 832, column: 3, scope: !15651)
!15653 = !DILocation(line: 0, scope: !14512, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 829, column: 2, scope: !15646)
!15655 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15654)
!15656 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15654)
!15657 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15654)
!15658 = !DILocation(line: 0, scope: !14526, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15654)
!15660 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15659)
!15661 = !DILocation(line: 834, column: 2, scope: !15616)
!15662 = distinct !DISubprogram(name: "z_pend_curr", scope: !2480, file: !2480, line: 840, type: !15663, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15665)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!107, !14481, !14470, !2403, !15366}
!15665 = !{!15666, !15667, !15668, !15669}
!15666 = !DILocalVariable(name: "lock", arg: 1, scope: !15662, file: !2480, line: 840, type: !14481)
!15667 = !DILocalVariable(name: "key", arg: 2, scope: !15662, file: !2480, line: 840, type: !14470)
!15668 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15662, file: !2480, line: 841, type: !2403)
!15669 = !DILocalVariable(name: "timeout", arg: 4, scope: !15662, file: !2480, line: 841, type: !15366)
!15670 = !DILocation(line: 0, scope: !15662)
!15671 = !DILocation(line: 844, column: 20, scope: !15662)
!15672 = !DILocation(line: 844, column: 18, scope: !15662)
!15673 = !DILocation(line: 846, column: 2, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !2480, line: 846, column: 2)
!15675 = distinct !DILexicalBlock(scope: !15662, file: !2480, line: 846, column: 2)
!15676 = !DILocation(line: 846, column: 2, scope: !15675)
!15677 = !DILocation(line: 846, column: 2, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15674, file: !2480, line: 846, column: 2)
!15679 = !DILocation(line: 0, scope: !14478, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 856, column: 9, scope: !15662)
!15681 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15682)
!15682 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15680)
!15683 = !DILocation(line: 0, scope: !14487, inlinedAt: !15682)
!15684 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15680)
!15685 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15680)
!15686 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15680)
!15687 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15680)
!15688 = !DILocation(line: 857, column: 14, scope: !15662)
!15689 = !DILocation(line: 857, column: 2, scope: !15662)
!15690 = !DILocation(line: 0, scope: !15165, inlinedAt: !15691)
!15691 = distinct !DILocation(line: 858, column: 2, scope: !15662)
!15692 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15691)
!15693 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15691)
!15694 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15691)
!15695 = !DILocation(line: 0, scope: !15156, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 859, column: 9, scope: !15662)
!15697 = !DILocation(line: 0, scope: !15165, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !15696)
!15699 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15698)
!15700 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15698)
!15701 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15698)
!15702 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !15696)
!15703 = !DILocation(line: 859, column: 2, scope: !15662)
!15704 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2480, file: !2480, line: 862, type: !15705, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15707)
!15705 = !DISubroutineType(types: !15706)
!15706 = !{!2372, !2403}
!15707 = !{!15708, !15709, !15710, !15712}
!15708 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15704, file: !2480, line: 862, type: !2403)
!15709 = !DILocalVariable(name: "thread", scope: !15704, file: !2480, line: 864, type: !2372)
!15710 = !DILocalVariable(name: "__i", scope: !15711, file: !2480, line: 866, type: !14470)
!15711 = distinct !DILexicalBlock(scope: !15704, file: !2480, line: 866, column: 2)
!15712 = !DILocalVariable(name: "__key", scope: !15711, file: !2480, line: 866, type: !14470)
!15713 = !DILocation(line: 0, scope: !15704)
!15714 = !DILocation(line: 0, scope: !15711)
!15715 = !DILocation(line: 0, scope: !14478, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 866, column: 2, scope: !15711)
!15717 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15718)
!15718 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15716)
!15719 = !DILocation(line: 0, scope: !14487, inlinedAt: !15718)
!15720 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15716)
!15721 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15716)
!15722 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15716)
!15723 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15716)
!15724 = !DILocation(line: 867, column: 12, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !2480, line: 866, column: 26)
!15726 = distinct !DILexicalBlock(scope: !15711, file: !2480, line: 866, column: 2)
!15727 = !DILocation(line: 869, column: 14, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15725, file: !2480, line: 869, column: 7)
!15729 = !DILocation(line: 869, column: 7, scope: !15725)
!15730 = !DILocation(line: 870, column: 4, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15728, file: !2480, line: 869, column: 23)
!15732 = !DILocation(line: 871, column: 3, scope: !15731)
!15733 = !DILocation(line: 0, scope: !14512, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 866, column: 2, scope: !15726)
!15735 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15734)
!15736 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15734)
!15737 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15734)
!15738 = !DILocation(line: 0, scope: !14526, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15734)
!15740 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15739)
!15741 = !DILocation(line: 874, column: 2, scope: !15704)
!15742 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2480, file: !2480, line: 877, type: !15705, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15743)
!15743 = !{!15744, !15745, !15746, !15748}
!15744 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15742, file: !2480, line: 877, type: !2403)
!15745 = !DILocalVariable(name: "thread", scope: !15742, file: !2480, line: 879, type: !2372)
!15746 = !DILocalVariable(name: "__i", scope: !15747, file: !2480, line: 881, type: !14470)
!15747 = distinct !DILexicalBlock(scope: !15742, file: !2480, line: 881, column: 2)
!15748 = !DILocalVariable(name: "__key", scope: !15747, file: !2480, line: 881, type: !14470)
!15749 = !DILocation(line: 0, scope: !15742)
!15750 = !DILocation(line: 0, scope: !15747)
!15751 = !DILocation(line: 0, scope: !14478, inlinedAt: !15752)
!15752 = distinct !DILocation(line: 881, column: 2, scope: !15747)
!15753 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15752)
!15755 = !DILocation(line: 0, scope: !14487, inlinedAt: !15754)
!15756 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15752)
!15757 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15752)
!15758 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15752)
!15759 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15752)
!15760 = !DILocation(line: 882, column: 12, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !2480, line: 881, column: 26)
!15762 = distinct !DILexicalBlock(scope: !15747, file: !2480, line: 881, column: 2)
!15763 = !DILocation(line: 884, column: 14, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15761, file: !2480, line: 884, column: 7)
!15765 = !DILocation(line: 884, column: 7, scope: !15761)
!15766 = !DILocation(line: 885, column: 4, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15764, file: !2480, line: 884, column: 23)
!15768 = !DILocation(line: 886, column: 10, scope: !15767)
!15769 = !DILocation(line: 887, column: 3, scope: !15767)
!15770 = !DILocation(line: 0, scope: !14512, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 881, column: 2, scope: !15762)
!15772 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15771)
!15773 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15771)
!15774 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15771)
!15775 = !DILocation(line: 0, scope: !14526, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15771)
!15777 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15776)
!15778 = !DILocation(line: 890, column: 2, scope: !15742)
!15779 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2480, file: !2480, line: 893, type: !14436, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15780)
!15780 = !{!15781}
!15781 = !DILocalVariable(name: "thread", arg: 1, scope: !15779, file: !2480, line: 893, type: !2372)
!15782 = !DILocation(line: 0, scope: !15779)
!15783 = !DILocation(line: 0, scope: !15587, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 895, column: 2, scope: !15779)
!15785 = !DILocation(line: 0, scope: !15591, inlinedAt: !15784)
!15786 = !DILocation(line: 0, scope: !14478, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 788, column: 2, scope: !15591, inlinedAt: !15784)
!15788 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15787)
!15790 = !DILocation(line: 0, scope: !14487, inlinedAt: !15789)
!15791 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15787)
!15792 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15787)
!15793 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15787)
!15794 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15787)
!15795 = !DILocation(line: 789, column: 3, scope: !15605, inlinedAt: !15784)
!15796 = !DILocation(line: 0, scope: !14512, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 788, column: 2, scope: !15606, inlinedAt: !15784)
!15798 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15797)
!15799 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15797)
!15800 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15797)
!15801 = !DILocation(line: 0, scope: !14526, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15797)
!15803 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15802)
!15804 = !DILocation(line: 896, column: 8, scope: !15779)
!15805 = !DILocation(line: 897, column: 1, scope: !15779)
!15806 = distinct !DISubprogram(name: "z_set_prio", scope: !2480, file: !2480, line: 902, type: !14839, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15807)
!15807 = !{!15808, !15809, !15810, !15811, !15813}
!15808 = !DILocalVariable(name: "thread", arg: 1, scope: !15806, file: !2480, line: 902, type: !2372)
!15809 = !DILocalVariable(name: "prio", arg: 2, scope: !15806, file: !2480, line: 902, type: !107)
!15810 = !DILocalVariable(name: "need_sched", scope: !15806, file: !2480, line: 904, type: !145)
!15811 = !DILocalVariable(name: "__i", scope: !15812, file: !2480, line: 906, type: !14470)
!15812 = distinct !DILexicalBlock(scope: !15806, file: !2480, line: 906, column: 2)
!15813 = !DILocalVariable(name: "__key", scope: !15812, file: !2480, line: 906, type: !14470)
!15814 = !DILocation(line: 0, scope: !15806)
!15815 = !DILocation(line: 0, scope: !15812)
!15816 = !DILocation(line: 0, scope: !14478, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 906, column: 2, scope: !15812)
!15818 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15817)
!15820 = !DILocation(line: 0, scope: !14487, inlinedAt: !15819)
!15821 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15817)
!15822 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15817)
!15823 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15817)
!15824 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15817)
!15825 = !DILocation(line: 907, column: 16, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15827, file: !2480, line: 906, column: 26)
!15827 = distinct !DILexicalBlock(scope: !15812, file: !2480, line: 906, column: 2)
!15828 = !DILocation(line: 909, column: 7, scope: !15826)
!15829 = !DILocation(line: 0, scope: !14670, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 912, column: 5, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15832, file: !2480, line: 911, column: 63)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !2480, line: 911, column: 8)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !2480, line: 909, column: 19)
!15834 = distinct !DILexicalBlock(scope: !15826, file: !2480, line: 909, column: 7)
!15835 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15830)
!15836 = !DILocation(line: 0, scope: !14678, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15830)
!15838 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15837)
!15839 = !DILocation(line: 913, column: 23, scope: !15831)
!15840 = !DILocation(line: 0, scope: !14687, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 914, column: 5, scope: !15831)
!15842 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !15841)
!15843 = !DILocation(line: 0, scope: !14694, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !15841)
!15845 = !DILocation(line: 0, scope: !14701, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !15844)
!15847 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15846)
!15848 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15846)
!15849 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15846)
!15850 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15846)
!15851 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15846)
!15852 = !DILocation(line: 0, scope: !14717, inlinedAt: !15846)
!15853 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15846)
!15854 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15846)
!15855 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15846)
!15856 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15846)
!15857 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15846)
!15858 = distinct !{!15858, !15850, !15859}
!15859 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15846)
!15860 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15846)
!15861 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15846)
!15862 = !DILocation(line: 918, column: 4, scope: !15833)
!15863 = !DILocation(line: 919, column: 3, scope: !15833)
!15864 = !DILocation(line: 920, column: 22, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15834, file: !2480, line: 919, column: 10)
!15866 = !DILocation(line: 0, scope: !14512, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 906, column: 2, scope: !15827)
!15868 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15867)
!15869 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15867)
!15870 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15867)
!15871 = !DILocation(line: 0, scope: !14526, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15867)
!15873 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15872)
!15874 = !DILocation(line: 926, column: 2, scope: !15806)
!15875 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2480, file: !2480, line: 929, type: !15876, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15878)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{null, !2372, !107}
!15878 = !{!15879, !15880, !15881}
!15879 = !DILocalVariable(name: "thread", arg: 1, scope: !15875, file: !2480, line: 929, type: !2372)
!15880 = !DILocalVariable(name: "prio", arg: 2, scope: !15875, file: !2480, line: 929, type: !107)
!15881 = !DILocalVariable(name: "need_sched", scope: !15875, file: !2480, line: 931, type: !145)
!15882 = !DILocation(line: 0, scope: !15875)
!15883 = !DILocation(line: 931, column: 20, scope: !15875)
!15884 = !DILocation(line: 935, column: 17, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15875, file: !2480, line: 935, column: 6)
!15886 = !DILocation(line: 935, column: 20, scope: !15885)
!15887 = !DILocation(line: 935, column: 35, scope: !15885)
!15888 = !DILocation(line: 935, column: 48, scope: !15885)
!15889 = !DILocation(line: 935, column: 6, scope: !15875)
!15890 = !DILocation(line: 936, column: 3, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15885, file: !2480, line: 935, column: 55)
!15892 = !DILocation(line: 937, column: 2, scope: !15891)
!15893 = !DILocation(line: 938, column: 1, scope: !15875)
!15894 = distinct !DISubprogram(name: "k_sched_lock", scope: !2480, file: !2480, line: 987, type: !3111, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15895)
!15895 = !{!15896, !15898}
!15896 = !DILocalVariable(name: "__i", scope: !15897, file: !2480, line: 989, type: !14470)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !2480, line: 989, column: 2)
!15898 = !DILocalVariable(name: "__key", scope: !15897, file: !2480, line: 989, type: !14470)
!15899 = !DILocation(line: 0, scope: !15897)
!15900 = !DILocation(line: 0, scope: !14478, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 989, column: 2, scope: !15897)
!15902 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15901)
!15904 = !DILocation(line: 0, scope: !14487, inlinedAt: !15903)
!15905 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15901)
!15906 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15901)
!15907 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15901)
!15908 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15901)
!15909 = !DILocation(line: 992, column: 3, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !2480, line: 989, column: 26)
!15911 = distinct !DILexicalBlock(scope: !15897, file: !2480, line: 989, column: 2)
!15912 = !DILocation(line: 0, scope: !14512, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 989, column: 2, scope: !15911)
!15914 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15913)
!15915 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15913)
!15916 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15913)
!15917 = !DILocation(line: 0, scope: !14526, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15913)
!15919 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15918)
!15920 = !DILocation(line: 994, column: 1, scope: !15894)
!15921 = distinct !DISubprogram(name: "z_sched_lock", scope: !13638, file: !13638, line: 251, type: !3111, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15922 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 253, column: 2, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !13638, line: 253, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 253, column: 2)
!15927 = !DILocation(line: 0, scope: !15205, inlinedAt: !15923)
!15928 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15924)
!15929 = !DILocation(line: 253, column: 2, scope: !15926)
!15930 = !DILocation(line: 253, column: 2, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15925, file: !13638, line: 253, column: 2)
!15932 = !DILocation(line: 254, column: 2, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !13638, line: 254, column: 2)
!15934 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 254, column: 2)
!15935 = !DILocation(line: 254, column: 2, scope: !15934)
!15936 = !DILocation(line: 254, column: 2, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15933, file: !13638, line: 254, column: 2)
!15938 = !DILocation(line: 256, column: 2, scope: !15921)
!15939 = !DILocation(line: 258, column: 2, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 258, column: 2)
!15941 = !{i64 2154286348}
!15942 = !DILocation(line: 259, column: 1, scope: !15921)
!15943 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2480, file: !2480, line: 996, type: !3111, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15944)
!15944 = !{!15945, !15947}
!15945 = !DILocalVariable(name: "__i", scope: !15946, file: !2480, line: 998, type: !14470)
!15946 = distinct !DILexicalBlock(scope: !15943, file: !2480, line: 998, column: 2)
!15947 = !DILocalVariable(name: "__key", scope: !15946, file: !2480, line: 998, type: !14470)
!15948 = !DILocation(line: 0, scope: !15946)
!15949 = !DILocation(line: 0, scope: !14478, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 998, column: 2, scope: !15946)
!15951 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15950)
!15953 = !DILocation(line: 0, scope: !14487, inlinedAt: !15952)
!15954 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15950)
!15955 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15950)
!15956 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15950)
!15957 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15950)
!15958 = !DILocation(line: 999, column: 3, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15960, file: !2480, line: 999, column: 3)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !2480, line: 999, column: 3)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2480, line: 998, column: 26)
!15962 = distinct !DILexicalBlock(scope: !15946, file: !2480, line: 998, column: 2)
!15963 = !DILocation(line: 999, column: 3, scope: !15960)
!15964 = !DILocation(line: 999, column: 3, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15959, file: !2480, line: 999, column: 3)
!15966 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 1000, column: 3, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15970, file: !2480, line: 1000, column: 3)
!15970 = distinct !DILexicalBlock(scope: !15961, file: !2480, line: 1000, column: 3)
!15971 = !DILocation(line: 0, scope: !15205, inlinedAt: !15967)
!15972 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15968)
!15973 = !DILocation(line: 1000, column: 3, scope: !15970)
!15974 = !DILocation(line: 1000, column: 3, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15969, file: !2480, line: 1000, column: 3)
!15976 = !DILocation(line: 1002, column: 5, scope: !15961)
!15977 = !DILocation(line: 1002, column: 20, scope: !15961)
!15978 = !DILocation(line: 1002, column: 3, scope: !15961)
!15979 = !DILocation(line: 1003, column: 3, scope: !15961)
!15980 = !DILocation(line: 0, scope: !14512, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 998, column: 2, scope: !15962)
!15982 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15981)
!15983 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15981)
!15984 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15981)
!15985 = !DILocation(line: 0, scope: !14526, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15981)
!15987 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15986)
!15988 = !DILocation(line: 1011, column: 2, scope: !15943)
!15989 = !DILocation(line: 1012, column: 1, scope: !15943)
!15990 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2480, file: !2480, line: 1014, type: !14827, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!15991 = !DILocation(line: 1028, column: 25, scope: !15990)
!15992 = !DILocation(line: 1028, column: 2, scope: !15990)
!15993 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2480, file: !2480, line: 1155, type: !15994, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{!145, !2401, !2401}
!15996 = !{!15997, !15998, !15999, !16000, !16001}
!15997 = !DILocalVariable(name: "a", arg: 1, scope: !15993, file: !2480, line: 1155, type: !2401)
!15998 = !DILocalVariable(name: "b", arg: 2, scope: !15993, file: !2480, line: 1155, type: !2401)
!15999 = !DILocalVariable(name: "thread_a", scope: !15993, file: !2480, line: 1157, type: !2372)
!16000 = !DILocalVariable(name: "thread_b", scope: !15993, file: !2480, line: 1157, type: !2372)
!16001 = !DILocalVariable(name: "cmp", scope: !15993, file: !2480, line: 1158, type: !874)
!16002 = !DILocation(line: 0, scope: !15993)
!16003 = !DILocation(line: 1160, column: 13, scope: !15993)
!16004 = !DILocation(line: 1161, column: 13, scope: !15993)
!16005 = !DILocation(line: 1163, column: 8, scope: !15993)
!16006 = !DILocation(line: 1165, column: 10, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !15993, file: !2480, line: 1165, column: 6)
!16008 = !DILocation(line: 1165, column: 6, scope: !15993)
!16009 = !DILocation(line: 1167, column: 17, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16007, file: !2480, line: 1167, column: 13)
!16011 = !DILocation(line: 1167, column: 13, scope: !16007)
!16012 = !DILocation(line: 1170, column: 25, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16010, file: !2480, line: 1169, column: 9)
!16014 = !DILocation(line: 1170, column: 52, scope: !16013)
!16015 = !DILocation(line: 1170, column: 35, scope: !16013)
!16016 = !DILocation(line: 1170, column: 3, scope: !16013)
!16017 = !DILocation(line: 0, scope: !16007)
!16018 = !DILocation(line: 1173, column: 1, scope: !15993)
!16019 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2480, file: !2480, line: 1175, type: !16020, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16035)
!16020 = !DISubroutineType(types: !16021)
!16021 = !{null, !16022, !2372}
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16023, size: 32)
!16023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16024, line: 37, size: 128, elements: !16025)
!16024 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16025 = !{!16026, !16034}
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16023, file: !16024, line: 38, baseType: !16027, size: 96)
!16027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16028)
!16028 = !{!16029, !16030, !16033}
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16027, file: !335, line: 84, baseType: !2401, size: 32)
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16027, file: !335, line: 85, baseType: !16031, size: 32, offset: 32)
!16031 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16032)
!16032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15994, size: 32)
!16033 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16027, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16034 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16023, file: !16024, line: 39, baseType: !107, size: 32, offset: 96)
!16035 = !{!16036, !16037, !16038, !16039, !16048}
!16036 = !DILocalVariable(name: "pq", arg: 1, scope: !16019, file: !2480, line: 1175, type: !16022)
!16037 = !DILocalVariable(name: "thread", arg: 2, scope: !16019, file: !2480, line: 1175, type: !2372)
!16038 = !DILocalVariable(name: "t", scope: !16019, file: !2480, line: 1177, type: !2372)
!16039 = !DILocalVariable(name: "__f", scope: !16040, file: !2480, line: 1190, type: !16043)
!16040 = distinct !DILexicalBlock(scope: !16041, file: !2480, line: 1190, column: 3)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !2480, line: 1189, column: 27)
!16042 = distinct !DILexicalBlock(scope: !16019, file: !2480, line: 1189, column: 6)
!16043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16044)
!16044 = !{!16045, !16046, !16047}
!16045 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16043, file: !335, line: 156, baseType: !2475, size: 32)
!16046 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16043, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16047 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16043, file: !335, line: 158, baseType: !874, size: 32, offset: 64)
!16048 = !DILocalVariable(name: "n", scope: !16049, file: !2480, line: 1190, type: !2401)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !2480, line: 1190, column: 3)
!16050 = distinct !DILexicalBlock(scope: !16040, file: !2480, line: 1190, column: 3)
!16051 = !DILocation(line: 0, scope: !16019)
!16052 = !DILocation(line: 1179, column: 2, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2480, line: 1179, column: 2)
!16054 = distinct !DILexicalBlock(scope: !16019, file: !2480, line: 1179, column: 2)
!16055 = !DILocation(line: 1179, column: 2, scope: !16054)
!16056 = !DILocation(line: 1179, column: 2, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16053, file: !2480, line: 1179, column: 2)
!16058 = !DILocation(line: 1181, column: 31, scope: !16019)
!16059 = !DILocation(line: 1181, column: 45, scope: !16019)
!16060 = !DILocation(line: 1181, column: 15, scope: !16019)
!16061 = !DILocation(line: 1181, column: 25, scope: !16019)
!16062 = !DILocation(line: 1189, column: 11, scope: !16042)
!16063 = !DILocation(line: 1189, column: 7, scope: !16042)
!16064 = !DILocation(line: 1189, column: 6, scope: !16019)
!16065 = !DILocation(line: 1190, column: 3, scope: !16040)
!16066 = !DILocation(line: 1190, column: 3, scope: !16049)
!16067 = !DILocation(line: 0, scope: !16049)
!16068 = !DILocation(line: 1190, column: 3, scope: !16050)
!16069 = !DILocation(line: 1193, column: 2, scope: !16041)
!16070 = !DILocation(line: 1191, column: 42, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16050, file: !2480, line: 1190, column: 54)
!16072 = !DILocation(line: 1191, column: 12, scope: !16071)
!16073 = !DILocation(line: 1191, column: 22, scope: !16071)
!16074 = distinct !{!16074, !16065, !16075}
!16075 = !DILocation(line: 1192, column: 3, scope: !16040)
!16076 = !DILocation(line: 1195, column: 17, scope: !16019)
!16077 = !DILocation(line: 1195, column: 37, scope: !16019)
!16078 = !DILocation(line: 1195, column: 2, scope: !16019)
!16079 = !DILocation(line: 1196, column: 1, scope: !16019)
!16080 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16081, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16081 = !DISubroutineType(types: !16082)
!16082 = !{!2401, !16083, !16084}
!16083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16027, size: 32)
!16084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16043, size: 32)
!16085 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{null, !16083, !2401}
!16088 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2480, file: !2480, line: 1198, type: !16020, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16089)
!16089 = !{!16090, !16091}
!16090 = !DILocalVariable(name: "pq", arg: 1, scope: !16088, file: !2480, line: 1198, type: !16022)
!16091 = !DILocalVariable(name: "thread", arg: 2, scope: !16088, file: !2480, line: 1198, type: !2372)
!16092 = !DILocation(line: 0, scope: !16088)
!16093 = !DILocation(line: 1200, column: 2, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16095, file: !2480, line: 1200, column: 2)
!16095 = distinct !DILexicalBlock(scope: !16088, file: !2480, line: 1200, column: 2)
!16096 = !DILocation(line: 1200, column: 2, scope: !16095)
!16097 = !DILocation(line: 1200, column: 2, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16094, file: !2480, line: 1200, column: 2)
!16099 = !DILocation(line: 1202, column: 17, scope: !16088)
!16100 = !DILocation(line: 1202, column: 37, scope: !16088)
!16101 = !DILocation(line: 1202, column: 2, scope: !16088)
!16102 = !DILocation(line: 1204, column: 16, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16088, file: !2480, line: 1204, column: 6)
!16104 = !DILocation(line: 1204, column: 7, scope: !16103)
!16105 = !DILocation(line: 1204, column: 6, scope: !16088)
!16106 = !DILocation(line: 1205, column: 7, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16103, file: !2480, line: 1204, column: 22)
!16108 = !DILocation(line: 1205, column: 22, scope: !16107)
!16109 = !DILocation(line: 1206, column: 2, scope: !16107)
!16110 = !DILocation(line: 1207, column: 1, scope: !16088)
!16111 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16112 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2480, file: !2480, line: 1209, type: !16113, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16115)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!2372, !16022}
!16115 = !{!16116, !16117, !16118}
!16116 = !DILocalVariable(name: "pq", arg: 1, scope: !16112, file: !2480, line: 1209, type: !16022)
!16117 = !DILocalVariable(name: "thread", scope: !16112, file: !2480, line: 1211, type: !2372)
!16118 = !DILocalVariable(name: "n", scope: !16112, file: !2480, line: 1212, type: !2401)
!16119 = !DILocation(line: 0, scope: !16112)
!16120 = !DILocation(line: 1212, column: 37, scope: !16112)
!16121 = !DILocation(line: 1212, column: 21, scope: !16112)
!16122 = !DILocation(line: 1217, column: 2, scope: !16112)
!16123 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16124, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16126)
!16124 = !DISubroutineType(types: !16125)
!16125 = !{!2401, !16083}
!16126 = !{!16127}
!16127 = !DILocalVariable(name: "tree", arg: 1, scope: !16123, file: !335, line: 115, type: !16083)
!16128 = !DILocation(line: 0, scope: !16123)
!16129 = !DILocation(line: 117, column: 9, scope: !16123)
!16130 = !DILocation(line: 117, column: 2, scope: !16123)
!16131 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16132, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2182)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!2401, !16083, !195}
!16134 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2480, file: !2480, line: 1246, type: !16135, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16143)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!2372, !16137}
!16137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16138, size: 32)
!16138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16024, line: 53, size: 2080, elements: !16139)
!16139 = !{!16140, !16142}
!16140 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16138, file: !16024, line: 54, baseType: !16141, size: 2048)
!16141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 2048, elements: !394)
!16142 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16138, file: !16024, line: 55, baseType: !32, size: 32, offset: 2048)
!16143 = !{!16144, !16145, !16146, !16147}
!16144 = !DILocalVariable(name: "pq", arg: 1, scope: !16134, file: !2480, line: 1246, type: !16137)
!16145 = !DILocalVariable(name: "thread", scope: !16134, file: !2480, line: 1252, type: !2372)
!16146 = !DILocalVariable(name: "l", scope: !16134, file: !2480, line: 1253, type: !14704)
!16147 = !DILocalVariable(name: "n", scope: !16134, file: !2480, line: 1254, type: !2476)
!16148 = !DILocation(line: 0, scope: !16134)
!16149 = !DILocation(line: 1248, column: 11, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16134, file: !2480, line: 1248, column: 6)
!16151 = !DILocation(line: 1248, column: 7, scope: !16150)
!16152 = !DILocation(line: 1248, column: 6, scope: !16134)
!16153 = !DILocation(line: 1253, column: 31, scope: !16134)
!16154 = !DILocation(line: 1253, column: 20, scope: !16134)
!16155 = !DILocation(line: 1254, column: 19, scope: !16134)
!16156 = !DILocation(line: 1260, column: 1, scope: !16134)
!16157 = distinct !DISubprogram(name: "z_unpend_all", scope: !2480, file: !2480, line: 1262, type: !16158, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16160)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{!107, !2403}
!16160 = !{!16161, !16162, !16163}
!16161 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16157, file: !2480, line: 1262, type: !2403)
!16162 = !DILocalVariable(name: "need_sched", scope: !16157, file: !2480, line: 1264, type: !107)
!16163 = !DILocalVariable(name: "thread", scope: !16157, file: !2480, line: 1265, type: !2372)
!16164 = !DILocation(line: 0, scope: !16157)
!16165 = !DILocation(line: 1267, column: 19, scope: !16157)
!16166 = !DILocation(line: 1267, column: 41, scope: !16157)
!16167 = !DILocation(line: 1267, column: 2, scope: !16157)
!16168 = !DILocation(line: 1268, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16157, file: !2480, line: 1267, column: 50)
!16170 = !DILocation(line: 1269, column: 3, scope: !16169)
!16171 = distinct !{!16171, !16167, !16172}
!16172 = !DILocation(line: 1271, column: 2, scope: !16157)
!16173 = !DILocation(line: 1273, column: 2, scope: !16157)
!16174 = distinct !DISubprogram(name: "z_waitq_head", scope: !13999, file: !13999, line: 52, type: !15705, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16175)
!16175 = !{!16176}
!16176 = !DILocalVariable(name: "w", arg: 1, scope: !16174, file: !13999, line: 52, type: !2403)
!16177 = !DILocation(line: 0, scope: !16174)
!16178 = !DILocation(line: 54, column: 52, scope: !16174)
!16179 = !DILocation(line: 54, column: 28, scope: !16174)
!16180 = !DILocation(line: 54, column: 9, scope: !16174)
!16181 = !DILocation(line: 54, column: 2, scope: !16174)
!16182 = distinct !DISubprogram(name: "init_ready_q", scope: !2480, file: !2480, line: 1276, type: !16183, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16190)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !16185}
!16185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16186, size: 32)
!16186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16187)
!16187 = !{!16188, !16189}
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16186, file: !345, line: 86, baseType: !2372, size: 32)
!16189 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16186, file: !345, line: 90, baseType: !2408, size: 64, offset: 32)
!16190 = !{!16191}
!16191 = !DILocalVariable(name: "rq", arg: 1, scope: !16182, file: !2480, line: 1276, type: !16185)
!16192 = !DILocation(line: 0, scope: !16182)
!16193 = !DILocation(line: 1289, column: 22, scope: !16182)
!16194 = !DILocation(line: 1289, column: 2, scope: !16182)
!16195 = !DILocation(line: 1291, column: 1, scope: !16182)
!16196 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16197, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16199)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{null, !14704}
!16199 = !{!16200}
!16200 = !DILocalVariable(name: "list", arg: 1, scope: !16196, file: !319, line: 197, type: !14704)
!16201 = !DILocation(line: 0, scope: !16196)
!16202 = !DILocation(line: 199, column: 8, scope: !16196)
!16203 = !DILocation(line: 199, column: 13, scope: !16196)
!16204 = !DILocation(line: 200, column: 8, scope: !16196)
!16205 = !DILocation(line: 200, column: 13, scope: !16196)
!16206 = !DILocation(line: 201, column: 1, scope: !16196)
!16207 = distinct !DISubprogram(name: "z_sched_init", scope: !2480, file: !2480, line: 1293, type: !3111, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16208 = !DILocation(line: 1302, column: 2, scope: !16207)
!16209 = !DILocation(line: 1306, column: 2, scope: !16207)
!16210 = !DILocation(line: 1309, column: 1, scope: !16207)
!16211 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2480, file: !2480, line: 1311, type: !16212, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16215)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!107, !16214}
!16214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2372)
!16215 = !{!16216}
!16216 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !2480, line: 1311, type: !16214)
!16217 = !DILocation(line: 0, scope: !16211)
!16218 = !DILocation(line: 1313, column: 22, scope: !16211)
!16219 = !DILocation(line: 1313, column: 9, scope: !16211)
!16220 = !DILocation(line: 1313, column: 2, scope: !16211)
!16221 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2480, file: !2480, line: 1325, type: !16222, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{null, !16214, !107}
!16224 = !{!16225, !16226, !16227}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2480, line: 1325, type: !16214)
!16226 = !DILocalVariable(name: "prio", arg: 2, scope: !16221, file: !2480, line: 1325, type: !107)
!16227 = !DILocalVariable(name: "th", scope: !16221, file: !2480, line: 1334, type: !2372)
!16228 = !DILocation(line: 0, scope: !16221)
!16229 = !DILocation(line: 1331, column: 2, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2480, line: 1331, column: 2)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2480, line: 1331, column: 2)
!16232 = distinct !DILexicalBlock(scope: !16221, file: !2480, line: 1331, column: 2)
!16233 = !DILocation(line: 1331, column: 2, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16230, file: !2480, line: 1331, column: 2)
!16235 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 1332, column: 2, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16239, file: !2480, line: 1332, column: 2)
!16239 = distinct !DILexicalBlock(scope: !16221, file: !2480, line: 1332, column: 2)
!16240 = !DILocation(line: 0, scope: !15205, inlinedAt: !16236)
!16241 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16237)
!16242 = !DILocation(line: 1332, column: 2, scope: !16239)
!16243 = !DILocation(line: 1332, column: 2, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16238, file: !2480, line: 1332, column: 2)
!16245 = !DILocation(line: 1336, column: 2, scope: !16221)
!16246 = !DILocation(line: 1337, column: 1, scope: !16221)
!16247 = distinct !DISubprogram(name: "k_can_yield", scope: !2480, file: !2480, line: 1384, type: !7326, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16248 = !DILocation(line: 1386, column: 11, scope: !16247)
!16249 = !DILocation(line: 1386, column: 29, scope: !16247)
!16250 = !DILocation(line: 1386, column: 32, scope: !16247)
!16251 = !DILocation(line: 1386, column: 46, scope: !16247)
!16252 = !DILocation(line: 1387, column: 28, scope: !16247)
!16253 = !DILocation(line: 1387, column: 4, scope: !16247)
!16254 = !DILocation(line: 1386, column: 2, scope: !16247)
!16255 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7326, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16256 = !DILocation(line: 993, column: 10, scope: !16255)
!16257 = !DILocation(line: 993, column: 2, scope: !16255)
!16258 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2480, file: !2480, line: 1390, type: !3111, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16259)
!16259 = !{!16260}
!16260 = !DILocalVariable(name: "key", scope: !16258, file: !2480, line: 1396, type: !14470)
!16261 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1392, column: 2, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2480, line: 1392, column: 2)
!16265 = distinct !DILexicalBlock(scope: !16258, file: !2480, line: 1392, column: 2)
!16266 = !DILocation(line: 0, scope: !15205, inlinedAt: !16262)
!16267 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16263)
!16268 = !DILocation(line: 1392, column: 2, scope: !16265)
!16269 = !DILocation(line: 1392, column: 2, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16264, file: !2480, line: 1392, column: 2)
!16271 = !DILocation(line: 0, scope: !14478, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1396, column: 25, scope: !16258)
!16273 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !14487, inlinedAt: !16274)
!16276 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16272)
!16277 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16272)
!16278 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16272)
!16279 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16272)
!16280 = !DILocation(line: 0, scope: !16258)
!16281 = !DILocation(line: 1400, column: 18, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16283, file: !2480, line: 1399, column: 36)
!16283 = distinct !DILexicalBlock(scope: !16258, file: !2480, line: 1398, column: 6)
!16284 = !DILocation(line: 0, scope: !14670, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 1400, column: 3, scope: !16282)
!16286 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !16285)
!16287 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !16285)
!16288 = !DILocation(line: 0, scope: !14678, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !16285)
!16290 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !16289)
!16291 = !DILocation(line: 1402, column: 15, scope: !16258)
!16292 = !DILocation(line: 0, scope: !14687, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1402, column: 2, scope: !16258)
!16294 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !16293)
!16295 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !16293)
!16296 = !DILocation(line: 0, scope: !14694, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !16293)
!16298 = !DILocation(line: 0, scope: !14701, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !16297)
!16300 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !16299)
!16301 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !16299)
!16302 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !16299)
!16303 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !16299)
!16304 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !16299)
!16305 = !DILocation(line: 0, scope: !14717, inlinedAt: !16299)
!16306 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !16299)
!16307 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !16299)
!16308 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !16299)
!16309 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !16299)
!16310 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !16299)
!16311 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !16299)
!16312 = distinct !{!16312, !16303, !16313}
!16313 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !16299)
!16314 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !16299)
!16315 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !16299)
!16316 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !16299)
!16317 = !DILocation(line: 1403, column: 2, scope: !16258)
!16318 = !DILocation(line: 0, scope: !15156, inlinedAt: !16319)
!16319 = distinct !DILocation(line: 1404, column: 2, scope: !16258)
!16320 = !DILocation(line: 0, scope: !15165, inlinedAt: !16321)
!16321 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16319)
!16322 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16321)
!16323 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16321)
!16324 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16321)
!16325 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16319)
!16326 = !DILocation(line: 1405, column: 1, scope: !16258)
!16327 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2480, file: !2480, line: 1459, type: !16328, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16330)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{!874, !15366}
!16330 = !{!16331, !16332, !16333}
!16331 = !DILocalVariable(name: "timeout", arg: 1, scope: !16327, file: !2480, line: 1459, type: !15366)
!16332 = !DILocalVariable(name: "ticks", scope: !16327, file: !2480, line: 1461, type: !564)
!16333 = !DILocalVariable(name: "ret", scope: !16327, file: !2480, line: 1480, type: !874)
!16334 = !DILocation(line: 0, scope: !16327)
!16335 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 1463, column: 2, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !2480, line: 1463, column: 2)
!16339 = distinct !DILexicalBlock(scope: !16327, file: !2480, line: 1463, column: 2)
!16340 = !DILocation(line: 0, scope: !15205, inlinedAt: !16336)
!16341 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16337)
!16342 = !DILocation(line: 1463, column: 2, scope: !16339)
!16343 = !DILocation(line: 1463, column: 2, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16338, file: !2480, line: 1463, column: 2)
!16345 = !DILocation(line: 1468, column: 6, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16327, file: !2480, line: 1468, column: 6)
!16347 = !DILocation(line: 1468, column: 6, scope: !16327)
!16348 = !DILocation(line: 1469, column: 20, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16346, file: !2480, line: 1468, column: 40)
!16350 = !DILocation(line: 1469, column: 3, scope: !16349)
!16351 = !DILocation(line: 1473, column: 3, scope: !16349)
!16352 = !DILocation(line: 1478, column: 10, scope: !16327)
!16353 = !DILocation(line: 1480, column: 16, scope: !16327)
!16354 = !DILocation(line: 1485, column: 1, scope: !16327)
!16355 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4439, file: !4439, line: 310, type: !16356, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16358)
!16356 = !DISubroutineType(types: !16357)
!16357 = !{null, !16214}
!16358 = !{!16359}
!16359 = !DILocalVariable(name: "thread", arg: 1, scope: !16355, file: !4439, line: 310, type: !16214)
!16360 = !DILocation(line: 0, scope: !16355)
!16361 = !DILocation(line: 319, column: 2, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16355, file: !4439, line: 319, column: 2)
!16363 = !{i64 2154202506}
!16364 = !DILocation(line: 320, column: 2, scope: !16355)
!16365 = !DILocation(line: 321, column: 1, scope: !16355)
!16366 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2480, file: !2480, line: 1415, type: !16367, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16369)
!16367 = !DISubroutineType(types: !16368)
!16368 = !{!874, !564}
!16369 = !{!16370, !16371, !16372, !16373}
!16370 = !DILocalVariable(name: "ticks", arg: 1, scope: !16366, file: !2480, line: 1415, type: !564)
!16371 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16366, file: !2480, line: 1418, type: !152)
!16372 = !DILocalVariable(name: "timeout", scope: !16366, file: !2480, line: 1430, type: !15366)
!16373 = !DILocalVariable(name: "key", scope: !16366, file: !2480, line: 1437, type: !14470)
!16374 = !DILocation(line: 0, scope: !16366)
!16375 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16376)
!16376 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 1420, column: 2, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !2480, line: 1420, column: 2)
!16379 = distinct !DILexicalBlock(scope: !16366, file: !2480, line: 1420, column: 2)
!16380 = !DILocation(line: 0, scope: !15205, inlinedAt: !16376)
!16381 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16377)
!16382 = !DILocation(line: 1420, column: 2, scope: !16379)
!16383 = !DILocation(line: 1420, column: 2, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16378, file: !2480, line: 1420, column: 2)
!16385 = !DILocation(line: 1425, column: 12, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16366, file: !2480, line: 1425, column: 6)
!16387 = !DILocation(line: 1425, column: 6, scope: !16366)
!16388 = !DILocation(line: 1426, column: 3, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !2480, line: 1425, column: 18)
!16390 = !DILocation(line: 1427, column: 3, scope: !16389)
!16391 = !DILocation(line: 1431, column: 24, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16366, file: !2480, line: 1431, column: 6)
!16393 = !DILocation(line: 1431, column: 6, scope: !16366)
!16394 = !DILocation(line: 1432, column: 35, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16392, file: !2480, line: 1431, column: 30)
!16396 = !DILocation(line: 1432, column: 27, scope: !16395)
!16397 = !DILocation(line: 1433, column: 2, scope: !16395)
!16398 = !DILocation(line: 1434, column: 27, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16392, file: !2480, line: 1433, column: 9)
!16400 = !DILocation(line: 0, scope: !16392)
!16401 = !DILocation(line: 0, scope: !14478, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 1437, column: 25, scope: !16366)
!16403 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16402)
!16405 = !DILocation(line: 0, scope: !14487, inlinedAt: !16404)
!16406 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16402)
!16407 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16402)
!16408 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16402)
!16409 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16402)
!16410 = !DILocation(line: 1440, column: 20, scope: !16366)
!16411 = !DILocation(line: 1440, column: 18, scope: !16366)
!16412 = !DILocation(line: 1442, column: 2, scope: !16366)
!16413 = !DILocation(line: 1443, column: 23, scope: !16366)
!16414 = !DILocation(line: 1443, column: 2, scope: !16366)
!16415 = !DILocation(line: 1444, column: 29, scope: !16366)
!16416 = !DILocation(line: 1444, column: 2, scope: !16366)
!16417 = !DILocation(line: 0, scope: !15156, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 1446, column: 8, scope: !16366)
!16419 = !DILocation(line: 0, scope: !15165, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16418)
!16421 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16420)
!16422 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16420)
!16423 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16420)
!16424 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16418)
!16425 = !DILocation(line: 1448, column: 2, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2480, line: 1448, column: 2)
!16427 = distinct !DILexicalBlock(scope: !16366, file: !2480, line: 1448, column: 2)
!16428 = !DILocation(line: 1448, column: 2, scope: !16427)
!16429 = !DILocation(line: 1448, column: 2, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16426, file: !2480, line: 1448, column: 2)
!16431 = !DILocation(line: 1450, column: 10, scope: !16366)
!16432 = !DILocation(line: 1450, column: 45, scope: !16366)
!16433 = !DILocation(line: 1450, column: 43, scope: !16366)
!16434 = !DILocation(line: 1451, column: 6, scope: !16366)
!16435 = !DILocation(line: 1457, column: 1, scope: !16366)
!16436 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8741, file: !8741, line: 1103, type: !14257, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16437)
!16437 = !{!16438}
!16438 = !DILocalVariable(name: "t", arg: 1, scope: !16436, file: !8741, line: 1103, type: !566)
!16439 = !DILocation(line: 0, scope: !16436)
!16440 = !DILocation(line: 0, scope: !14538, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 1106, column: 9, scope: !16436)
!16442 = !DILocation(line: 139, column: 13, scope: !16443, inlinedAt: !16441)
!16443 = distinct !DILexicalBlock(scope: !16444, file: !8741, line: 138, column: 10)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !8741, line: 136, column: 7)
!16445 = distinct !DILexicalBlock(scope: !14559, file: !8741, line: 134, column: 17)
!16446 = !DILocation(line: 1106, column: 2, scope: !16436)
!16447 = distinct !DISubprogram(name: "k_yield", scope: !4439, file: !4439, line: 140, type: !3111, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16448 = !DILocation(line: 148, column: 2, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16447, file: !4439, line: 148, column: 2)
!16450 = !{i64 2154201826}
!16451 = !DILocation(line: 149, column: 2, scope: !16447)
!16452 = !DILocation(line: 150, column: 1, scope: !16447)
!16453 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2480, file: !2480, line: 1495, type: !16454, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16456)
!16454 = !DISubroutineType(types: !16455)
!16455 = !{!874, !107}
!16456 = !{!16457, !16458}
!16457 = !DILocalVariable(name: "us", arg: 1, scope: !16453, file: !2480, line: 1495, type: !107)
!16458 = !DILocalVariable(name: "ticks", scope: !16453, file: !2480, line: 1497, type: !874)
!16459 = !DILocation(line: 0, scope: !16453)
!16460 = !DILocation(line: 1501, column: 31, scope: !16453)
!16461 = !DILocation(line: 1501, column: 10, scope: !16453)
!16462 = !DILocation(line: 1502, column: 23, scope: !16453)
!16463 = !DILocation(line: 1502, column: 10, scope: !16453)
!16464 = !DILocation(line: 1506, column: 31, scope: !16453)
!16465 = !DILocation(line: 1506, column: 9, scope: !16453)
!16466 = !DILocation(line: 1506, column: 2, scope: !16453)
!16467 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8741, file: !8741, line: 571, type: !14257, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16468)
!16468 = !{!16469}
!16469 = !DILocalVariable(name: "t", arg: 1, scope: !16467, file: !8741, line: 571, type: !566)
!16470 = !DILocation(line: 0, scope: !16467)
!16471 = !DILocation(line: 0, scope: !14538, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 574, column: 9, scope: !16467)
!16473 = !DILocation(line: 135, column: 5, scope: !16445, inlinedAt: !16472)
!16474 = !DILocation(line: 139, column: 13, scope: !16443, inlinedAt: !16472)
!16475 = !DILocation(line: 574, column: 2, scope: !16467)
!16476 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8741, file: !8741, line: 1187, type: !14257, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16477)
!16477 = !{!16478}
!16478 = !DILocalVariable(name: "t", arg: 1, scope: !16476, file: !8741, line: 1187, type: !566)
!16479 = !DILocation(line: 0, scope: !16476)
!16480 = !DILocation(line: 0, scope: !14538, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 1190, column: 9, scope: !16476)
!16482 = !DILocation(line: 145, column: 13, scope: !16483, inlinedAt: !16481)
!16483 = distinct !DILexicalBlock(scope: !14556, file: !8741, line: 144, column: 10)
!16484 = !DILocation(line: 1190, column: 2, scope: !16476)
!16485 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2480, file: !2480, line: 1517, type: !16356, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16486)
!16486 = !{!16487}
!16487 = !DILocalVariable(name: "thread", arg: 1, scope: !16485, file: !2480, line: 1517, type: !16214)
!16488 = !DILocation(line: 0, scope: !16485)
!16489 = !DILocation(line: 1521, column: 6, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16485, file: !2480, line: 1521, column: 6)
!16491 = !DILocation(line: 1521, column: 6, scope: !16485)
!16492 = !DILocation(line: 1525, column: 6, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16485, file: !2480, line: 1525, column: 6)
!16494 = !DILocation(line: 1525, column: 37, scope: !16493)
!16495 = !DILocation(line: 1525, column: 6, scope: !16485)
!16496 = !DILocation(line: 1527, column: 20, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !2480, line: 1527, column: 7)
!16498 = distinct !DILexicalBlock(scope: !16493, file: !2480, line: 1525, column: 42)
!16499 = !DILocation(line: 1527, column: 33, scope: !16497)
!16500 = !DILocation(line: 1527, column: 7, scope: !16498)
!16501 = !DILocation(line: 1532, column: 2, scope: !16485)
!16502 = !DILocation(line: 1533, column: 2, scope: !16485)
!16503 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 1537, column: 7, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16485, file: !2480, line: 1537, column: 6)
!16507 = !DILocation(line: 0, scope: !15205, inlinedAt: !16504)
!16508 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16505)
!16509 = !DILocation(line: 1537, column: 6, scope: !16485)
!16510 = !DILocation(line: 1538, column: 3, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16506, file: !2480, line: 1537, column: 25)
!16512 = !DILocation(line: 1539, column: 2, scope: !16511)
!16513 = !DILocation(line: 1540, column: 1, scope: !16485)
!16514 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13638, file: !13638, line: 101, type: !14619, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16515)
!16515 = !{!16516}
!16516 = !DILocalVariable(name: "thread", arg: 1, scope: !16514, file: !13638, line: 101, type: !2372)
!16517 = !DILocation(line: 0, scope: !16514)
!16518 = !DILocation(line: 103, column: 23, scope: !16514)
!16519 = !DILocation(line: 103, column: 36, scope: !16514)
!16520 = !DILocation(line: 103, column: 55, scope: !16514)
!16521 = !DILocation(line: 103, column: 2, scope: !16514)
!16522 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2480, file: !2480, line: 1567, type: !16523, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16525)
!16523 = !DISubroutineType(types: !16524)
!16524 = !{!16214}
!16525 = !{!16526}
!16526 = !DILocalVariable(name: "ret", scope: !16522, file: !2480, line: 1577, type: !16214)
!16527 = !DILocation(line: 1577, column: 30, scope: !16522)
!16528 = !DILocation(line: 0, scope: !16522)
!16529 = !DILocation(line: 1582, column: 2, scope: !16522)
!16530 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2480, file: !2480, line: 1593, type: !7629, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !2182)
!16531 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 1595, column: 10, scope: !16530)
!16534 = !DILocation(line: 0, scope: !15205, inlinedAt: !16532)
!16535 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16533)
!16536 = !DILocation(line: 1595, column: 27, scope: !16530)
!16537 = !DILocation(line: 1595, column: 41, scope: !16530)
!16538 = !DILocation(line: 1595, column: 30, scope: !16530)
!16539 = !DILocation(line: 1595, column: 2, scope: !16530)
!16540 = distinct !DISubprogram(name: "z_thread_abort", scope: !2480, file: !2480, line: 1725, type: !14436, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16541)
!16541 = !{!16542, !16543}
!16542 = !DILocalVariable(name: "thread", arg: 1, scope: !16540, file: !2480, line: 1725, type: !2372)
!16543 = !DILocalVariable(name: "key", scope: !16540, file: !2480, line: 1727, type: !14470)
!16544 = !DILocation(line: 0, scope: !16540)
!16545 = !DILocation(line: 0, scope: !14478, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 1727, column: 25, scope: !16540)
!16547 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16546)
!16549 = !DILocation(line: 0, scope: !14487, inlinedAt: !16548)
!16550 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16546)
!16551 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16546)
!16552 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16546)
!16553 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16546)
!16554 = !DILocation(line: 1729, column: 20, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16540, file: !2480, line: 1729, column: 6)
!16556 = !DILocation(line: 1729, column: 33, scope: !16555)
!16557 = !DILocation(line: 1729, column: 48, scope: !16555)
!16558 = !DILocation(line: 1729, column: 6, scope: !16540)
!16559 = !DILocation(line: 0, scope: !14512, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 1730, column: 3, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16555, file: !2480, line: 1729, column: 54)
!16562 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16560)
!16563 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16560)
!16564 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16560)
!16565 = !DILocation(line: 0, scope: !14526, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16560)
!16567 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16566)
!16568 = !DILocation(line: 1731, column: 3, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !2480, line: 1731, column: 3)
!16570 = distinct !DILexicalBlock(scope: !16571, file: !2480, line: 1731, column: 3)
!16571 = distinct !DILexicalBlock(scope: !16561, file: !2480, line: 1731, column: 3)
!16572 = !DILocation(line: 1736, column: 20, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16540, file: !2480, line: 1736, column: 6)
!16574 = !DILocation(line: 1736, column: 33, scope: !16573)
!16575 = !DILocation(line: 1736, column: 49, scope: !16573)
!16576 = !DILocation(line: 1736, column: 6, scope: !16540)
!16577 = !DILocation(line: 0, scope: !14512, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1737, column: 3, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16573, file: !2480, line: 1736, column: 56)
!16580 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16578)
!16581 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16578)
!16582 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16578)
!16583 = !DILocation(line: 0, scope: !14526, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16578)
!16585 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16584)
!16586 = !DILocation(line: 1738, column: 3, scope: !16579)
!16587 = !DILocation(line: 1775, column: 2, scope: !16540)
!16588 = !DILocation(line: 1776, column: 16, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16540, file: !2480, line: 1776, column: 6)
!16590 = !DILocation(line: 1776, column: 13, scope: !16589)
!16591 = !DILocation(line: 1776, column: 25, scope: !16589)
!16592 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 1776, column: 29, scope: !16589)
!16595 = !DILocation(line: 0, scope: !15205, inlinedAt: !16593)
!16596 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16594)
!16597 = !DILocation(line: 1776, column: 6, scope: !16540)
!16598 = !DILocation(line: 0, scope: !15156, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 1777, column: 3, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16589, file: !2480, line: 1776, column: 47)
!16601 = !DILocation(line: 0, scope: !15165, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16599)
!16603 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16602)
!16604 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16602)
!16605 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16602)
!16606 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16599)
!16607 = !DILocation(line: 1778, column: 3, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16609, file: !2480, line: 1778, column: 3)
!16609 = distinct !DILexicalBlock(scope: !16610, file: !2480, line: 1778, column: 3)
!16610 = distinct !DILexicalBlock(scope: !16600, file: !2480, line: 1778, column: 3)
!16611 = !DILocation(line: 0, scope: !14512, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 1780, column: 2, scope: !16540)
!16613 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16612)
!16614 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16612)
!16615 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16612)
!16616 = !DILocation(line: 0, scope: !14526, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16612)
!16618 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16617)
!16619 = !DILocation(line: 1781, column: 1, scope: !16540)
!16620 = distinct !DISubprogram(name: "end_thread", scope: !2480, file: !2480, line: 1690, type: !14436, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16621)
!16621 = !{!16622}
!16622 = !DILocalVariable(name: "thread", arg: 1, scope: !16620, file: !2480, line: 1690, type: !2372)
!16623 = !DILocation(line: 0, scope: !16620)
!16624 = !DILocation(line: 1695, column: 20, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16620, file: !2480, line: 1695, column: 6)
!16626 = !DILocation(line: 1695, column: 33, scope: !16625)
!16627 = !DILocation(line: 1695, column: 49, scope: !16625)
!16628 = !DILocation(line: 1695, column: 6, scope: !16620)
!16629 = !DILocation(line: 1697, column: 29, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16625, file: !2480, line: 1695, column: 56)
!16631 = !DILocation(line: 1698, column: 7, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16630, file: !2480, line: 1698, column: 7)
!16633 = !DILocation(line: 1698, column: 7, scope: !16630)
!16634 = !DILocation(line: 0, scope: !14670, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 1699, column: 4, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16632, file: !2480, line: 1698, column: 35)
!16637 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !16635)
!16638 = !DILocation(line: 0, scope: !14678, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !16635)
!16640 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !16639)
!16641 = !DILocation(line: 1700, column: 3, scope: !16636)
!16642 = !DILocation(line: 1701, column: 20, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16630, file: !2480, line: 1701, column: 7)
!16644 = !DILocation(line: 1701, column: 30, scope: !16643)
!16645 = !DILocation(line: 1701, column: 7, scope: !16630)
!16646 = !DILocation(line: 1702, column: 4, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !2480, line: 1701, column: 39)
!16648 = !DILocation(line: 1703, column: 3, scope: !16647)
!16649 = !DILocation(line: 1704, column: 9, scope: !16630)
!16650 = !DILocation(line: 1705, column: 23, scope: !16630)
!16651 = !DILocation(line: 1705, column: 3, scope: !16630)
!16652 = !DILocation(line: 1706, column: 3, scope: !16630)
!16653 = !DILocation(line: 1722, column: 2, scope: !16630)
!16654 = !DILocation(line: 1723, column: 1, scope: !16620)
!16655 = distinct !DISubprogram(name: "unpend_all", scope: !2480, file: !2480, line: 1674, type: !16656, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{null, !2403}
!16658 = !{!16659, !16660}
!16659 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16655, file: !2480, line: 1674, type: !2403)
!16660 = !DILocalVariable(name: "thread", scope: !16655, file: !2480, line: 1676, type: !2372)
!16661 = !DILocation(line: 0, scope: !16655)
!16662 = !DILocation(line: 1678, column: 19, scope: !16655)
!16663 = !DILocation(line: 1678, column: 41, scope: !16655)
!16664 = !DILocation(line: 1678, column: 2, scope: !16655)
!16665 = !DILocation(line: 1679, column: 3, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16655, file: !2480, line: 1678, column: 50)
!16667 = !DILocation(line: 1680, column: 9, scope: !16666)
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16669, file: !13658, line: 65, type: !2372)
!16669 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13658, file: !13658, line: 65, type: !16670, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16672)
!16670 = !DISubroutineType(types: !16671)
!16671 = !{null, !2372, !32}
!16672 = !{!16668, !16673}
!16673 = !DILocalVariable(name: "value", arg: 2, scope: !16669, file: !13658, line: 65, type: !32)
!16674 = !DILocation(line: 0, scope: !16669, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 1681, column: 3, scope: !16666)
!16676 = !DILocation(line: 67, column: 15, scope: !16669, inlinedAt: !16675)
!16677 = !DILocation(line: 67, column: 33, scope: !16669, inlinedAt: !16675)
!16678 = !DILocation(line: 1682, column: 3, scope: !16666)
!16679 = distinct !{!16679, !16664, !16680}
!16680 = !DILocation(line: 1683, column: 2, scope: !16655)
!16681 = !DILocation(line: 1684, column: 1, scope: !16655)
!16682 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2480, file: !2480, line: 1794, type: !16683, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16685)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!107, !2372, !15366}
!16685 = !{!16686, !16687, !16688, !16689}
!16686 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !2480, line: 1794, type: !2372)
!16687 = !DILocalVariable(name: "timeout", arg: 2, scope: !16682, file: !2480, line: 1794, type: !15366)
!16688 = !DILocalVariable(name: "key", scope: !16682, file: !2480, line: 1796, type: !14470)
!16689 = !DILocalVariable(name: "ret", scope: !16682, file: !2480, line: 1797, type: !107)
!16690 = !DILocation(line: 0, scope: !16682)
!16691 = !DILocation(line: 0, scope: !14478, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 1796, column: 25, scope: !16682)
!16693 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16692)
!16695 = !DILocation(line: 0, scope: !14487, inlinedAt: !16694)
!16696 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16692)
!16697 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16692)
!16698 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16692)
!16699 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16692)
!16700 = !DILocation(line: 1801, column: 20, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16682, file: !2480, line: 1801, column: 6)
!16702 = !DILocation(line: 1801, column: 33, scope: !16701)
!16703 = !DILocation(line: 1801, column: 49, scope: !16701)
!16704 = !DILocation(line: 1801, column: 6, scope: !16682)
!16705 = !DILocation(line: 1803, column: 13, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16701, file: !2480, line: 1803, column: 13)
!16707 = !DILocation(line: 1803, column: 13, scope: !16701)
!16708 = !DILocation(line: 1805, column: 24, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16706, file: !2480, line: 1805, column: 13)
!16710 = !DILocation(line: 1805, column: 21, scope: !16709)
!16711 = !DILocation(line: 1805, column: 34, scope: !16709)
!16712 = !DILocation(line: 1806, column: 20, scope: !16709)
!16713 = !DILocation(line: 1806, column: 44, scope: !16709)
!16714 = !DILocation(line: 1806, column: 30, scope: !16709)
!16715 = !DILocation(line: 1805, column: 13, scope: !16706)
!16716 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16717)
!16717 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 1809, column: 3, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2480, line: 1809, column: 3)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2480, line: 1809, column: 3)
!16721 = distinct !DILexicalBlock(scope: !16709, file: !2480, line: 1808, column: 9)
!16722 = !DILocation(line: 0, scope: !15205, inlinedAt: !16717)
!16723 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16718)
!16724 = !DILocation(line: 1809, column: 3, scope: !16720)
!16725 = !DILocation(line: 1809, column: 3, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16719, file: !2480, line: 1809, column: 3)
!16727 = !DILocation(line: 1810, column: 23, scope: !16721)
!16728 = !DILocation(line: 1810, column: 42, scope: !16721)
!16729 = !DILocation(line: 1810, column: 3, scope: !16721)
!16730 = !DILocation(line: 1811, column: 22, scope: !16721)
!16731 = !DILocation(line: 1811, column: 3, scope: !16721)
!16732 = !DILocation(line: 0, scope: !15156, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 1814, column: 9, scope: !16721)
!16734 = !DILocation(line: 0, scope: !15165, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16733)
!16736 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16735)
!16737 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16735)
!16738 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16735)
!16739 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16733)
!16740 = !DILocation(line: 1817, column: 3, scope: !16721)
!16741 = !DILocation(line: 0, scope: !16701)
!16742 = !DILocation(line: 0, scope: !14512, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 1822, column: 2, scope: !16682)
!16744 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16743)
!16745 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16743)
!16746 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16743)
!16747 = !DILocation(line: 0, scope: !14526, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16743)
!16749 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16748)
!16750 = !DILocation(line: 1823, column: 2, scope: !16682)
!16751 = !DILocation(line: 1824, column: 1, scope: !16682)
!16752 = distinct !DISubprogram(name: "z_sched_wake", scope: !2480, file: !2480, line: 1882, type: !16753, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16755)
!16753 = !DISubroutineType(types: !16754)
!16754 = !{!145, !2403, !107, !106}
!16755 = !{!16756, !16757, !16758, !16759, !16760, !16761, !16763}
!16756 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16752, file: !2480, line: 1882, type: !2403)
!16757 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16752, file: !2480, line: 1882, type: !107)
!16758 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16752, file: !2480, line: 1882, type: !106)
!16759 = !DILocalVariable(name: "thread", scope: !16752, file: !2480, line: 1884, type: !2372)
!16760 = !DILocalVariable(name: "ret", scope: !16752, file: !2480, line: 1885, type: !145)
!16761 = !DILocalVariable(name: "__i", scope: !16762, file: !2480, line: 1887, type: !14470)
!16762 = distinct !DILexicalBlock(scope: !16752, file: !2480, line: 1887, column: 2)
!16763 = !DILocalVariable(name: "__key", scope: !16762, file: !2480, line: 1887, type: !14470)
!16764 = !DILocation(line: 0, scope: !16752)
!16765 = !DILocation(line: 0, scope: !16762)
!16766 = !DILocation(line: 0, scope: !14478, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 1887, column: 2, scope: !16762)
!16768 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16767)
!16770 = !DILocation(line: 0, scope: !14487, inlinedAt: !16769)
!16771 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16767)
!16772 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16767)
!16773 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16767)
!16774 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16767)
!16775 = !DILocation(line: 1888, column: 12, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !2480, line: 1887, column: 26)
!16777 = distinct !DILexicalBlock(scope: !16762, file: !2480, line: 1887, column: 2)
!16778 = !DILocation(line: 1890, column: 14, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16776, file: !2480, line: 1890, column: 7)
!16780 = !DILocation(line: 1890, column: 7, scope: !16776)
!16781 = !DILocalVariable(name: "thread", arg: 1, scope: !16782, file: !16783, line: 134, type: !2372)
!16782 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16783, file: !16783, line: 134, type: !16784, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16786)
!16783 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16784 = !DISubroutineType(types: !16785)
!16785 = !{null, !2372, !32, !106}
!16786 = !{!16781, !16787, !16788}
!16787 = !DILocalVariable(name: "value", arg: 2, scope: !16782, file: !16783, line: 135, type: !32)
!16788 = !DILocalVariable(name: "data", arg: 3, scope: !16782, file: !16783, line: 136, type: !106)
!16789 = !DILocation(line: 0, scope: !16782, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 1891, column: 4, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16779, file: !2480, line: 1890, column: 23)
!16792 = !DILocation(line: 0, scope: !16669, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 138, column: 2, scope: !16782, inlinedAt: !16790)
!16794 = !DILocation(line: 67, column: 15, scope: !16669, inlinedAt: !16793)
!16795 = !DILocation(line: 67, column: 33, scope: !16669, inlinedAt: !16793)
!16796 = !DILocation(line: 139, column: 15, scope: !16782, inlinedAt: !16790)
!16797 = !DILocation(line: 139, column: 25, scope: !16782, inlinedAt: !16790)
!16798 = !DILocation(line: 1894, column: 4, scope: !16791)
!16799 = !DILocation(line: 1895, column: 10, scope: !16791)
!16800 = !DILocation(line: 1896, column: 4, scope: !16791)
!16801 = !DILocation(line: 1898, column: 3, scope: !16791)
!16802 = !DILocation(line: 0, scope: !14512, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 1887, column: 2, scope: !16777)
!16804 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16803)
!16805 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16803)
!16806 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16803)
!16807 = !DILocation(line: 0, scope: !14526, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16803)
!16809 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16808)
!16810 = !DILocation(line: 1901, column: 2, scope: !16752)
!16811 = distinct !DISubprogram(name: "z_sched_wait", scope: !2480, file: !2480, line: 1904, type: !16812, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2369, retainedNodes: !16815)
!16812 = !DISubroutineType(types: !16813)
!16813 = !{!107, !14481, !14470, !2403, !15366, !16814}
!16814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16815 = !{!16816, !16817, !16818, !16819, !16820, !16821}
!16816 = !DILocalVariable(name: "lock", arg: 1, scope: !16811, file: !2480, line: 1904, type: !14481)
!16817 = !DILocalVariable(name: "key", arg: 2, scope: !16811, file: !2480, line: 1904, type: !14470)
!16818 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16811, file: !2480, line: 1905, type: !2403)
!16819 = !DILocalVariable(name: "timeout", arg: 4, scope: !16811, file: !2480, line: 1905, type: !15366)
!16820 = !DILocalVariable(name: "data", arg: 5, scope: !16811, file: !2480, line: 1905, type: !16814)
!16821 = !DILocalVariable(name: "ret", scope: !16811, file: !2480, line: 1907, type: !107)
!16822 = !DILocation(line: 0, scope: !16811)
!16823 = !DILocation(line: 1907, column: 12, scope: !16811)
!16824 = !DILocation(line: 1909, column: 11, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16811, file: !2480, line: 1909, column: 6)
!16826 = !DILocation(line: 1909, column: 6, scope: !16811)
!16827 = !DILocation(line: 1910, column: 11, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16825, file: !2480, line: 1909, column: 20)
!16829 = !DILocation(line: 1910, column: 26, scope: !16828)
!16830 = !DILocation(line: 1910, column: 9, scope: !16828)
!16831 = !DILocation(line: 1911, column: 2, scope: !16828)
!16832 = !DILocation(line: 1912, column: 2, scope: !16811)
!16833 = distinct !DISubprogram(name: "z_data_copy", scope: !16834, file: !16834, line: 22, type: !3111, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !2182)
!16834 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16835 = !DILocation(line: 24, column: 2, scope: !16833)
!16836 = !DILocation(line: 27, column: 2, scope: !16833)
!16837 = !DILocation(line: 71, column: 1, scope: !16833)
!16838 = distinct !DISubprogram(name: "z_add_timeout", scope: !2517, file: !2517, line: 88, type: !16839, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16845)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{null, !2490, !2509, !16841}
!16841 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16842)
!16842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16843)
!16843 = !{!16844}
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16842, file: !565, line: 66, baseType: !564, size: 64)
!16845 = !{!16846, !16847, !16848, !16849, !16855, !16856, !16859, !16862}
!16846 = !DILocalVariable(name: "to", arg: 1, scope: !16838, file: !2517, line: 88, type: !2490)
!16847 = !DILocalVariable(name: "fn", arg: 2, scope: !16838, file: !2517, line: 88, type: !2509)
!16848 = !DILocalVariable(name: "timeout", arg: 3, scope: !16838, file: !2517, line: 89, type: !16841)
!16849 = !DILocalVariable(name: "__i", scope: !16850, file: !2517, line: 102, type: !16851)
!16850 = distinct !DILexicalBlock(scope: !16838, file: !2517, line: 102, column: 2)
!16851 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16852)
!16852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16853)
!16853 = !{!16854}
!16854 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16852, file: !420, line: 33, baseType: !107, size: 32)
!16855 = !DILocalVariable(name: "__key", scope: !16850, file: !2517, line: 102, type: !16851)
!16856 = !DILocalVariable(name: "t", scope: !16857, file: !2517, line: 103, type: !2490)
!16857 = distinct !DILexicalBlock(scope: !16858, file: !2517, line: 102, column: 24)
!16858 = distinct !DILexicalBlock(scope: !16850, file: !2517, line: 102, column: 2)
!16859 = !DILocalVariable(name: "ticks", scope: !16860, file: !2517, line: 107, type: !564)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !2517, line: 106, column: 39)
!16861 = distinct !DILexicalBlock(scope: !16857, file: !2517, line: 105, column: 7)
!16862 = !DILocalVariable(name: "next_time", scope: !16863, file: !2517, line: 137, type: !874)
!16863 = distinct !DILexicalBlock(scope: !16864, file: !2517, line: 127, column: 22)
!16864 = distinct !DILexicalBlock(scope: !16857, file: !2517, line: 127, column: 7)
!16865 = !DILocation(line: 0, scope: !16838)
!16866 = !DILocation(line: 91, column: 6, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16838, file: !2517, line: 91, column: 6)
!16868 = !DILocation(line: 91, column: 6, scope: !16838)
!16869 = !DILocation(line: 99, column: 2, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16871, file: !2517, line: 99, column: 2)
!16871 = distinct !DILexicalBlock(scope: !16838, file: !2517, line: 99, column: 2)
!16872 = !DILocation(line: 99, column: 2, scope: !16871)
!16873 = !DILocation(line: 99, column: 2, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16870, file: !2517, line: 99, column: 2)
!16875 = !DILocation(line: 100, column: 6, scope: !16838)
!16876 = !DILocation(line: 100, column: 9, scope: !16838)
!16877 = !DILocation(line: 0, scope: !16850)
!16878 = !DILocalVariable(name: "l", arg: 1, scope: !16879, file: !420, line: 136, type: !16882)
!16879 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16880, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16883)
!16880 = !DISubroutineType(types: !16881)
!16881 = !{!16851, !16882}
!16882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!16883 = !{!16878, !16884}
!16884 = !DILocalVariable(name: "k", scope: !16879, file: !420, line: 139, type: !16851)
!16885 = !DILocation(line: 0, scope: !16879, inlinedAt: !16886)
!16886 = distinct !DILocation(line: 102, column: 2, scope: !16850)
!16887 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !16892)
!16888 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16889)
!16889 = !{!16890, !16891}
!16890 = !DILocalVariable(name: "key", scope: !16888, file: !5954, line: 44, type: !32)
!16891 = !DILocalVariable(name: "tmp", scope: !16888, file: !5954, line: 53, type: !32)
!16892 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !16886)
!16893 = !{i64 2047251}
!16894 = !DILocation(line: 0, scope: !16888, inlinedAt: !16892)
!16895 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !16886)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !420, line: 148, column: 2)
!16897 = distinct !DILexicalBlock(scope: !16879, file: !420, line: 148, column: 2)
!16898 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !16886)
!16899 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !16886)
!16900 = distinct !DILexicalBlock(scope: !16896, file: !420, line: 148, column: 2)
!16901 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !16886)
!16902 = !DILocation(line: 106, column: 33, scope: !16861)
!16903 = !DILocation(line: 105, column: 7, scope: !16857)
!16904 = !DILocation(line: 107, column: 50, scope: !16860)
!16905 = !DILocation(line: 107, column: 48, scope: !16860)
!16906 = !DILocation(line: 0, scope: !16860)
!16907 = !DILocation(line: 109, column: 17, scope: !16860)
!16908 = !DILocation(line: 110, column: 3, scope: !16860)
!16909 = !DILocation(line: 111, column: 31, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16861, file: !2517, line: 110, column: 10)
!16911 = !DILocation(line: 111, column: 37, scope: !16910)
!16912 = !DILocation(line: 111, column: 35, scope: !16910)
!16913 = !DILocation(line: 0, scope: !16861)
!16914 = !DILocation(line: 109, column: 8, scope: !16860)
!16915 = !DILocation(line: 109, column: 15, scope: !16860)
!16916 = !DILocation(line: 114, column: 12, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16857, file: !2517, line: 114, column: 3)
!16918 = !DILocation(line: 0, scope: !16857)
!16919 = !DILocation(line: 114, column: 3, scope: !16917)
!16920 = !DILocation(line: 115, column: 24, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16922, file: !2517, line: 115, column: 8)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2517, line: 114, column: 45)
!16923 = distinct !DILexicalBlock(scope: !16917, file: !2517, line: 114, column: 3)
!16924 = !DILocation(line: 115, column: 11, scope: !16921)
!16925 = !DILocation(line: 115, column: 18, scope: !16921)
!16926 = !DILocation(line: 115, column: 8, scope: !16922)
!16927 = !DILocation(line: 116, column: 15, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16921, file: !2517, line: 115, column: 32)
!16929 = !DILocation(line: 117, column: 26, scope: !16928)
!16930 = !DILocation(line: 117, column: 5, scope: !16928)
!16931 = !DILocation(line: 123, column: 7, scope: !16857)
!16932 = !DILocation(line: 120, column: 15, scope: !16922)
!16933 = !DILocation(line: 114, column: 36, scope: !16923)
!16934 = distinct !{!16934, !16919, !16935}
!16935 = !DILocation(line: 121, column: 3, scope: !16917)
!16936 = !DILocation(line: 124, column: 4, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16938, file: !2517, line: 123, column: 18)
!16938 = distinct !DILexicalBlock(scope: !16857, file: !2517, line: 123, column: 7)
!16939 = !DILocation(line: 125, column: 3, scope: !16937)
!16940 = !DILocation(line: 127, column: 13, scope: !16864)
!16941 = !DILocation(line: 127, column: 10, scope: !16864)
!16942 = !DILocation(line: 127, column: 7, scope: !16857)
!16943 = !DILocation(line: 137, column: 24, scope: !16863)
!16944 = !DILocation(line: 0, scope: !16863)
!16945 = !DILocation(line: 139, column: 18, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16863, file: !2517, line: 139, column: 8)
!16947 = !DILocation(line: 139, column: 23, scope: !16946)
!16948 = !DILocation(line: 141, column: 5, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16946, file: !2517, line: 140, column: 48)
!16950 = !DILocation(line: 142, column: 4, scope: !16949)
!16951 = !DILocalVariable(name: "key", arg: 2, scope: !16952, file: !420, line: 190, type: !16851)
!16952 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16953, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16955)
!16953 = !DISubroutineType(types: !16954)
!16954 = !{null, !16882, !16851}
!16955 = !{!16956, !16951}
!16956 = !DILocalVariable(name: "l", arg: 1, scope: !16952, file: !420, line: 189, type: !16882)
!16957 = !DILocation(line: 0, scope: !16952, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 102, column: 2, scope: !16858)
!16959 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !16958)
!16960 = distinct !DILexicalBlock(scope: !16961, file: !420, line: 194, column: 2)
!16961 = distinct !DILexicalBlock(scope: !16952, file: !420, line: 194, column: 2)
!16962 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !16958)
!16963 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !16958)
!16964 = distinct !DILexicalBlock(scope: !16960, file: !420, line: 194, column: 2)
!16965 = !DILocalVariable(name: "key", arg: 1, scope: !16966, file: !5954, line: 84, type: !32)
!16966 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16967)
!16967 = !{!16965}
!16968 = !DILocation(line: 0, scope: !16966, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !16958)
!16970 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !16969)
!16971 = !{i64 2048068}
!16972 = !DILocation(line: 148, column: 1, scope: !16838)
!16973 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16974, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16978)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{!145, !16976}
!16976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16977, size: 32)
!16977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!16978 = !{!16979}
!16979 = !DILocalVariable(name: "node", arg: 1, scope: !16973, file: !319, line: 225, type: !16976)
!16980 = !DILocation(line: 0, scope: !16973)
!16981 = !DILocation(line: 227, column: 15, scope: !16973)
!16982 = !DILocation(line: 227, column: 20, scope: !16973)
!16983 = !DILocation(line: 227, column: 2, scope: !16973)
!16984 = distinct !DISubprogram(name: "elapsed", scope: !2517, file: !2517, line: 62, type: !16985, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!16985 = !DISubroutineType(types: !16986)
!16986 = !{!874}
!16987 = !DILocation(line: 64, column: 9, scope: !16984)
!16988 = !DILocation(line: 64, column: 28, scope: !16984)
!16989 = !DILocation(line: 64, column: 35, scope: !16984)
!16990 = !DILocation(line: 64, column: 2, scope: !16984)
!16991 = distinct !DISubprogram(name: "first", scope: !2517, file: !2517, line: 39, type: !16992, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16994)
!16992 = !DISubroutineType(types: !16993)
!16993 = !{!2490}
!16994 = !{!16995}
!16995 = !DILocalVariable(name: "t", scope: !16991, file: !2517, line: 41, type: !16996)
!16996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!16997 = !DILocation(line: 41, column: 19, scope: !16991)
!16998 = !DILocation(line: 0, scope: !16991)
!16999 = !DILocation(line: 43, column: 9, scope: !16991)
!17000 = !DILocation(line: 43, column: 2, scope: !16991)
!17001 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17002, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17004)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{null, !16996, !16996}
!17004 = !{!17005, !17006, !17007}
!17005 = !DILocalVariable(name: "successor", arg: 1, scope: !17001, file: !319, line: 443, type: !16996)
!17006 = !DILocalVariable(name: "node", arg: 2, scope: !17001, file: !319, line: 443, type: !16996)
!17007 = !DILocalVariable(name: "prev", scope: !17001, file: !319, line: 445, type: !17008)
!17008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16996)
!17009 = !DILocation(line: 0, scope: !17001)
!17010 = !DILocation(line: 445, column: 39, scope: !17001)
!17011 = !DILocation(line: 447, column: 8, scope: !17001)
!17012 = !DILocation(line: 447, column: 13, scope: !17001)
!17013 = !DILocation(line: 448, column: 8, scope: !17001)
!17014 = !DILocation(line: 448, column: 13, scope: !17001)
!17015 = !DILocation(line: 449, column: 8, scope: !17001)
!17016 = !DILocation(line: 449, column: 13, scope: !17001)
!17017 = !DILocation(line: 450, column: 18, scope: !17001)
!17018 = !DILocation(line: 451, column: 1, scope: !17001)
!17019 = distinct !DISubprogram(name: "next", scope: !2517, file: !2517, line: 46, type: !17020, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17022)
!17020 = !DISubroutineType(types: !17021)
!17021 = !{!2490, !2490}
!17022 = !{!17023, !17024}
!17023 = !DILocalVariable(name: "t", arg: 1, scope: !17019, file: !2517, line: 46, type: !2490)
!17024 = !DILocalVariable(name: "n", scope: !17019, file: !2517, line: 48, type: !16996)
!17025 = !DILocation(line: 0, scope: !17019)
!17026 = !DILocation(line: 48, column: 58, scope: !17019)
!17027 = !DILocation(line: 48, column: 19, scope: !17019)
!17028 = !DILocation(line: 50, column: 9, scope: !17019)
!17029 = !DILocation(line: 50, column: 2, scope: !17019)
!17030 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17031, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17034)
!17031 = !DISubroutineType(types: !17032)
!17032 = !{null, !17033, !16996}
!17033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!17034 = !{!17035, !17036, !17037}
!17035 = !DILocalVariable(name: "list", arg: 1, scope: !17030, file: !319, line: 404, type: !17033)
!17036 = !DILocalVariable(name: "node", arg: 2, scope: !17030, file: !319, line: 404, type: !16996)
!17037 = !DILocalVariable(name: "tail", scope: !17030, file: !319, line: 406, type: !17008)
!17038 = !DILocation(line: 0, scope: !17030)
!17039 = !DILocation(line: 406, column: 34, scope: !17030)
!17040 = !DILocation(line: 408, column: 8, scope: !17030)
!17041 = !DILocation(line: 408, column: 13, scope: !17030)
!17042 = !DILocation(line: 409, column: 8, scope: !17030)
!17043 = !DILocation(line: 409, column: 13, scope: !17030)
!17044 = !DILocation(line: 411, column: 8, scope: !17030)
!17045 = !DILocation(line: 411, column: 13, scope: !17030)
!17046 = !DILocation(line: 412, column: 13, scope: !17030)
!17047 = !DILocation(line: 413, column: 1, scope: !17030)
!17048 = distinct !DISubprogram(name: "next_timeout", scope: !2517, file: !2517, line: 67, type: !16985, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17049)
!17049 = !{!17050, !17051, !17052}
!17050 = !DILocalVariable(name: "to", scope: !17048, file: !2517, line: 69, type: !2490)
!17051 = !DILocalVariable(name: "ticks_elapsed", scope: !17048, file: !2517, line: 70, type: !874)
!17052 = !DILocalVariable(name: "ret", scope: !17048, file: !2517, line: 71, type: !874)
!17053 = !DILocation(line: 69, column: 24, scope: !17048)
!17054 = !DILocation(line: 0, scope: !17048)
!17055 = !DILocation(line: 70, column: 26, scope: !17048)
!17056 = !DILocation(line: 73, column: 10, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17048, file: !2517, line: 73, column: 6)
!17058 = !DILocation(line: 73, column: 19, scope: !17057)
!17059 = !DILocation(line: 74, column: 21, scope: !17057)
!17060 = !DILocation(line: 74, column: 30, scope: !17057)
!17061 = !DILocation(line: 74, column: 28, scope: !17057)
!17062 = !DILocation(line: 74, column: 45, scope: !17057)
!17063 = !DILocation(line: 73, column: 6, scope: !17048)
!17064 = !DILocation(line: 77, column: 9, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17057, file: !2517, line: 76, column: 9)
!17066 = !DILocation(line: 0, scope: !17057)
!17067 = !DILocation(line: 81, column: 20, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17048, file: !2517, line: 81, column: 6)
!17069 = !DILocation(line: 81, column: 6, scope: !17068)
!17070 = !DILocation(line: 81, column: 32, scope: !17068)
!17071 = !DILocation(line: 85, column: 2, scope: !17048)
!17072 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17073, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17075)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{!16996, !17033, !16996}
!17075 = !{!17076, !17077}
!17076 = !DILocalVariable(name: "list", arg: 1, scope: !17072, file: !319, line: 341, type: !17033)
!17077 = !DILocalVariable(name: "node", arg: 2, scope: !17072, file: !319, line: 342, type: !16996)
!17078 = !DILocation(line: 0, scope: !17072)
!17079 = !DILocation(line: 344, column: 15, scope: !17072)
!17080 = !DILocation(line: 344, column: 9, scope: !17072)
!17081 = !DILocation(line: 344, column: 26, scope: !17072)
!17082 = !DILocation(line: 344, column: 2, scope: !17072)
!17083 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17073, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17084)
!17084 = !{!17085, !17086}
!17085 = !DILocalVariable(name: "list", arg: 1, scope: !17083, file: !319, line: 325, type: !17033)
!17086 = !DILocalVariable(name: "node", arg: 2, scope: !17083, file: !319, line: 326, type: !16996)
!17087 = !DILocation(line: 0, scope: !17083)
!17088 = !DILocation(line: 328, column: 24, scope: !17083)
!17089 = !DILocation(line: 328, column: 15, scope: !17083)
!17090 = !DILocation(line: 328, column: 9, scope: !17083)
!17091 = !DILocation(line: 328, column: 45, scope: !17083)
!17092 = !DILocation(line: 328, column: 2, scope: !17083)
!17093 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17094, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17096)
!17094 = !DISubroutineType(types: !17095)
!17095 = !{!16996, !17033}
!17096 = !{!17097}
!17097 = !DILocalVariable(name: "list", arg: 1, scope: !17093, file: !319, line: 294, type: !17033)
!17098 = !DILocation(line: 0, scope: !17093)
!17099 = !DILocation(line: 296, column: 9, scope: !17093)
!17100 = !DILocation(line: 296, column: 2, scope: !17093)
!17101 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17102, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17104)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{!145, !17033}
!17104 = !{!17105}
!17105 = !DILocalVariable(name: "list", arg: 1, scope: !17101, file: !319, line: 266, type: !17033)
!17106 = !DILocation(line: 0, scope: !17101)
!17107 = !DILocation(line: 268, column: 15, scope: !17101)
!17108 = !DILocation(line: 268, column: 20, scope: !17101)
!17109 = !DILocation(line: 268, column: 2, scope: !17101)
!17110 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2517, file: !2517, line: 150, type: !17111, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17113)
!17111 = !DISubroutineType(types: !17112)
!17112 = !{!107, !2490}
!17113 = !{!17114, !17115, !17116, !17118}
!17114 = !DILocalVariable(name: "to", arg: 1, scope: !17110, file: !2517, line: 150, type: !2490)
!17115 = !DILocalVariable(name: "ret", scope: !17110, file: !2517, line: 152, type: !107)
!17116 = !DILocalVariable(name: "__i", scope: !17117, file: !2517, line: 154, type: !16851)
!17117 = distinct !DILexicalBlock(scope: !17110, file: !2517, line: 154, column: 2)
!17118 = !DILocalVariable(name: "__key", scope: !17117, file: !2517, line: 154, type: !16851)
!17119 = !DILocation(line: 0, scope: !17110)
!17120 = !DILocation(line: 0, scope: !17117)
!17121 = !DILocation(line: 0, scope: !16879, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 154, column: 2, scope: !17117)
!17123 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17124)
!17124 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17122)
!17125 = !DILocation(line: 0, scope: !16888, inlinedAt: !17124)
!17126 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17122)
!17127 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17122)
!17128 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17122)
!17129 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17122)
!17130 = !DILocation(line: 155, column: 7, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17132, file: !2517, line: 155, column: 7)
!17132 = distinct !DILexicalBlock(scope: !17133, file: !2517, line: 154, column: 24)
!17133 = distinct !DILexicalBlock(scope: !17117, file: !2517, line: 154, column: 2)
!17134 = !DILocation(line: 155, column: 7, scope: !17132)
!17135 = !DILocation(line: 156, column: 4, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17131, file: !2517, line: 155, column: 39)
!17137 = !DILocation(line: 158, column: 3, scope: !17136)
!17138 = !DILocation(line: 0, scope: !16952, inlinedAt: !17139)
!17139 = distinct !DILocation(line: 154, column: 2, scope: !17133)
!17140 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17139)
!17141 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17139)
!17142 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17139)
!17143 = !DILocation(line: 0, scope: !16966, inlinedAt: !17144)
!17144 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17139)
!17145 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17144)
!17146 = !DILocation(line: 161, column: 2, scope: !17110)
!17147 = distinct !DISubprogram(name: "remove_timeout", scope: !2517, file: !2517, line: 53, type: !2511, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17148)
!17148 = !{!17149}
!17149 = !DILocalVariable(name: "t", arg: 1, scope: !17147, file: !2517, line: 53, type: !2490)
!17150 = !DILocation(line: 0, scope: !17147)
!17151 = !DILocation(line: 55, column: 6, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17147, file: !2517, line: 55, column: 6)
!17153 = !DILocation(line: 55, column: 14, scope: !17152)
!17154 = !DILocation(line: 55, column: 6, scope: !17147)
!17155 = !DILocation(line: 56, column: 25, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17152, file: !2517, line: 55, column: 23)
!17157 = !DILocation(line: 56, column: 12, scope: !17156)
!17158 = !DILocation(line: 56, column: 19, scope: !17156)
!17159 = !DILocation(line: 57, column: 2, scope: !17156)
!17160 = !DILocation(line: 59, column: 23, scope: !17147)
!17161 = !DILocation(line: 59, column: 2, scope: !17147)
!17162 = !DILocation(line: 60, column: 1, scope: !17147)
!17163 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17164, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17166)
!17164 = !DISubroutineType(types: !17165)
!17165 = !{null, !16996}
!17166 = !{!17167, !17168, !17169}
!17167 = !DILocalVariable(name: "node", arg: 1, scope: !17163, file: !319, line: 496, type: !16996)
!17168 = !DILocalVariable(name: "prev", scope: !17163, file: !319, line: 498, type: !17008)
!17169 = !DILocalVariable(name: "next", scope: !17163, file: !319, line: 499, type: !17008)
!17170 = !DILocation(line: 0, scope: !17163)
!17171 = !DILocation(line: 498, column: 34, scope: !17163)
!17172 = !DILocation(line: 499, column: 34, scope: !17163)
!17173 = !DILocation(line: 501, column: 8, scope: !17163)
!17174 = !DILocation(line: 501, column: 13, scope: !17163)
!17175 = !DILocation(line: 502, column: 8, scope: !17163)
!17176 = !DILocation(line: 502, column: 13, scope: !17163)
!17177 = !DILocation(line: 503, column: 2, scope: !17163)
!17178 = !DILocation(line: 504, column: 1, scope: !17163)
!17179 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17164, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17180)
!17180 = !{!17181}
!17181 = !DILocalVariable(name: "node", arg: 1, scope: !17179, file: !319, line: 211, type: !16996)
!17182 = !DILocation(line: 0, scope: !17179)
!17183 = !DILocation(line: 213, column: 8, scope: !17179)
!17184 = !DILocation(line: 213, column: 13, scope: !17179)
!17185 = !DILocation(line: 214, column: 8, scope: !17179)
!17186 = !DILocation(line: 214, column: 13, scope: !17179)
!17187 = !DILocation(line: 215, column: 1, scope: !17179)
!17188 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2517, file: !2517, line: 183, type: !17189, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17193)
!17189 = !DISubroutineType(types: !17190)
!17190 = !{!564, !17191}
!17191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17192, size: 32)
!17192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2491)
!17193 = !{!17194, !17195, !17196, !17198}
!17194 = !DILocalVariable(name: "timeout", arg: 1, scope: !17188, file: !2517, line: 183, type: !17191)
!17195 = !DILocalVariable(name: "ticks", scope: !17188, file: !2517, line: 185, type: !564)
!17196 = !DILocalVariable(name: "__i", scope: !17197, file: !2517, line: 187, type: !16851)
!17197 = distinct !DILexicalBlock(scope: !17188, file: !2517, line: 187, column: 2)
!17198 = !DILocalVariable(name: "__key", scope: !17197, file: !2517, line: 187, type: !16851)
!17199 = !DILocation(line: 0, scope: !17188)
!17200 = !DILocation(line: 0, scope: !17197)
!17201 = !DILocation(line: 0, scope: !16879, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 187, column: 2, scope: !17197)
!17203 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17202)
!17205 = !DILocation(line: 0, scope: !16888, inlinedAt: !17204)
!17206 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17202)
!17207 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17202)
!17208 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17202)
!17209 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17202)
!17210 = !DILocation(line: 188, column: 11, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17212, file: !2517, line: 187, column: 24)
!17212 = distinct !DILexicalBlock(scope: !17197, file: !2517, line: 187, column: 2)
!17213 = !DILocation(line: 0, scope: !16952, inlinedAt: !17214)
!17214 = distinct !DILocation(line: 187, column: 2, scope: !17212)
!17215 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17214)
!17216 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17214)
!17217 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17214)
!17218 = !DILocation(line: 0, scope: !16966, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17214)
!17220 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17219)
!17221 = !DILocation(line: 191, column: 2, scope: !17188)
!17222 = distinct !DISubprogram(name: "timeout_rem", scope: !2517, file: !2517, line: 165, type: !17189, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17223)
!17223 = !{!17224, !17225, !17226}
!17224 = !DILocalVariable(name: "timeout", arg: 1, scope: !17222, file: !2517, line: 165, type: !17191)
!17225 = !DILocalVariable(name: "ticks", scope: !17222, file: !2517, line: 167, type: !564)
!17226 = !DILocalVariable(name: "t", scope: !17227, file: !2517, line: 173, type: !2490)
!17227 = distinct !DILexicalBlock(scope: !17222, file: !2517, line: 173, column: 2)
!17228 = !DILocation(line: 0, scope: !17222)
!17229 = !DILocation(line: 169, column: 6, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17222, file: !2517, line: 169, column: 6)
!17231 = !DILocation(line: 169, column: 6, scope: !17222)
!17232 = !DILocation(line: 173, column: 28, scope: !17227)
!17233 = !DILocation(line: 0, scope: !17227)
!17234 = !DILocation(line: 173, column: 39, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17227, file: !2517, line: 173, column: 2)
!17236 = !DILocation(line: 173, column: 2, scope: !17227)
!17237 = !DILocation(line: 174, column: 15, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17235, file: !2517, line: 173, column: 61)
!17239 = !DILocation(line: 174, column: 9, scope: !17238)
!17240 = !DILocation(line: 175, column: 15, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17238, file: !2517, line: 175, column: 7)
!17242 = !DILocation(line: 175, column: 7, scope: !17238)
!17243 = !DILocation(line: 173, column: 52, scope: !17235)
!17244 = distinct !{!17244, !17236, !17245}
!17245 = !DILocation(line: 178, column: 2, scope: !17227)
!17246 = !DILocation(line: 180, column: 17, scope: !17222)
!17247 = !DILocation(line: 180, column: 15, scope: !17222)
!17248 = !DILocation(line: 180, column: 2, scope: !17222)
!17249 = !DILocation(line: 181, column: 1, scope: !17222)
!17250 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14067, file: !14067, line: 35, type: !17251, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17253)
!17251 = !DISubroutineType(types: !17252)
!17252 = !{!145, !17191}
!17253 = !{!17254}
!17254 = !DILocalVariable(name: "to", arg: 1, scope: !17250, file: !14067, line: 35, type: !17191)
!17255 = !DILocation(line: 0, scope: !17250)
!17256 = !DILocation(line: 37, column: 35, scope: !17250)
!17257 = !DILocation(line: 37, column: 10, scope: !17250)
!17258 = !DILocation(line: 37, column: 9, scope: !17250)
!17259 = !DILocation(line: 37, column: 2, scope: !17250)
!17260 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2517, file: !2517, line: 194, type: !17189, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17261)
!17261 = !{!17262, !17263, !17264, !17266}
!17262 = !DILocalVariable(name: "timeout", arg: 1, scope: !17260, file: !2517, line: 194, type: !17191)
!17263 = !DILocalVariable(name: "ticks", scope: !17260, file: !2517, line: 196, type: !564)
!17264 = !DILocalVariable(name: "__i", scope: !17265, file: !2517, line: 198, type: !16851)
!17265 = distinct !DILexicalBlock(scope: !17260, file: !2517, line: 198, column: 2)
!17266 = !DILocalVariable(name: "__key", scope: !17265, file: !2517, line: 198, type: !16851)
!17267 = !DILocation(line: 0, scope: !17260)
!17268 = !DILocation(line: 0, scope: !17265)
!17269 = !DILocation(line: 0, scope: !16879, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 198, column: 2, scope: !17265)
!17271 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17270)
!17273 = !DILocation(line: 0, scope: !16888, inlinedAt: !17272)
!17274 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17270)
!17275 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17270)
!17276 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17270)
!17277 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17270)
!17278 = !DILocation(line: 199, column: 11, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17280, file: !2517, line: 198, column: 24)
!17280 = distinct !DILexicalBlock(scope: !17265, file: !2517, line: 198, column: 2)
!17281 = !DILocation(line: 199, column: 23, scope: !17279)
!17282 = !DILocation(line: 0, scope: !16952, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 198, column: 2, scope: !17280)
!17284 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17283)
!17285 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17283)
!17286 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17283)
!17287 = !DILocation(line: 0, scope: !16966, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17283)
!17289 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17288)
!17290 = !DILocation(line: 199, column: 21, scope: !17279)
!17291 = !DILocation(line: 202, column: 2, scope: !17260)
!17292 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2517, file: !2517, line: 205, type: !16985, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17293)
!17293 = !{!17294, !17295, !17297}
!17294 = !DILocalVariable(name: "ret", scope: !17292, file: !2517, line: 207, type: !874)
!17295 = !DILocalVariable(name: "__i", scope: !17296, file: !2517, line: 209, type: !16851)
!17296 = distinct !DILexicalBlock(scope: !17292, file: !2517, line: 209, column: 2)
!17297 = !DILocalVariable(name: "__key", scope: !17296, file: !2517, line: 209, type: !16851)
!17298 = !DILocation(line: 0, scope: !17292)
!17299 = !DILocation(line: 0, scope: !17296)
!17300 = !DILocation(line: 0, scope: !16879, inlinedAt: !17301)
!17301 = distinct !DILocation(line: 209, column: 2, scope: !17296)
!17302 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17303)
!17303 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17301)
!17304 = !DILocation(line: 0, scope: !16888, inlinedAt: !17303)
!17305 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17301)
!17306 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17301)
!17307 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17301)
!17308 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17301)
!17309 = !DILocation(line: 210, column: 9, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17311, file: !2517, line: 209, column: 24)
!17311 = distinct !DILexicalBlock(scope: !17296, file: !2517, line: 209, column: 2)
!17312 = !DILocation(line: 0, scope: !16952, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 209, column: 2, scope: !17311)
!17314 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17313)
!17315 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17313)
!17316 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17313)
!17317 = !DILocation(line: 0, scope: !16966, inlinedAt: !17318)
!17318 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17313)
!17319 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17318)
!17320 = !DILocation(line: 212, column: 2, scope: !17292)
!17321 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2517, file: !2517, line: 215, type: !11561, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17322)
!17322 = !{!17323, !17324, !17325, !17327, !17328, !17331, !17332}
!17323 = !DILocalVariable(name: "ticks", arg: 1, scope: !17321, file: !2517, line: 215, type: !874)
!17324 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17321, file: !2517, line: 215, type: !145)
!17325 = !DILocalVariable(name: "__i", scope: !17326, file: !2517, line: 217, type: !16851)
!17326 = distinct !DILexicalBlock(scope: !17321, file: !2517, line: 217, column: 2)
!17327 = !DILocalVariable(name: "__key", scope: !17326, file: !2517, line: 217, type: !16851)
!17328 = !DILocalVariable(name: "next_to", scope: !17329, file: !2517, line: 218, type: !107)
!17329 = distinct !DILexicalBlock(scope: !17330, file: !2517, line: 217, column: 24)
!17330 = distinct !DILexicalBlock(scope: !17326, file: !2517, line: 217, column: 2)
!17331 = !DILocalVariable(name: "sooner", scope: !17329, file: !2517, line: 219, type: !145)
!17332 = !DILocalVariable(name: "imminent", scope: !17329, file: !2517, line: 221, type: !145)
!17333 = !DILocation(line: 0, scope: !17321)
!17334 = !DILocation(line: 0, scope: !17326)
!17335 = !DILocation(line: 0, scope: !16879, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 217, column: 2, scope: !17326)
!17337 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17336)
!17339 = !DILocation(line: 0, scope: !16888, inlinedAt: !17338)
!17340 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17336)
!17341 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17336)
!17342 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17336)
!17343 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17336)
!17344 = !DILocation(line: 218, column: 17, scope: !17329)
!17345 = !DILocation(line: 0, scope: !17329)
!17346 = !DILocation(line: 221, column: 27, scope: !17329)
!17347 = !DILocation(line: 233, column: 17, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17329, file: !2517, line: 233, column: 7)
!17349 = !DILocation(line: 234, column: 26, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17348, file: !2517, line: 233, column: 56)
!17351 = !DILocation(line: 234, column: 4, scope: !17350)
!17352 = !DILocation(line: 235, column: 3, scope: !17350)
!17353 = !DILocation(line: 0, scope: !16952, inlinedAt: !17354)
!17354 = distinct !DILocation(line: 217, column: 2, scope: !17330)
!17355 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17354)
!17356 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17354)
!17357 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17354)
!17358 = !DILocation(line: 0, scope: !16966, inlinedAt: !17359)
!17359 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17354)
!17360 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17359)
!17361 = !DILocation(line: 237, column: 1, scope: !17321)
!17362 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2517, file: !2517, line: 239, type: !17363, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17365)
!17363 = !DISubroutineType(types: !17364)
!17364 = !{null, !874}
!17365 = !{!17366, !17367, !17368, !17370}
!17366 = !DILocalVariable(name: "ticks", arg: 1, scope: !17362, file: !2517, line: 239, type: !874)
!17367 = !DILocalVariable(name: "key", scope: !17362, file: !2517, line: 245, type: !16851)
!17368 = !DILocalVariable(name: "t", scope: !17369, file: !2517, line: 262, type: !2490)
!17369 = distinct !DILexicalBlock(scope: !17362, file: !2517, line: 261, column: 67)
!17370 = !DILocalVariable(name: "dt", scope: !17369, file: !2517, line: 263, type: !107)
!17371 = !DILocation(line: 0, scope: !17362)
!17372 = !DILocation(line: 242, column: 2, scope: !17362)
!17373 = !DILocation(line: 0, scope: !16879, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 245, column: 25, scope: !17362)
!17375 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17374)
!17377 = !DILocation(line: 0, scope: !16888, inlinedAt: !17376)
!17378 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17374)
!17379 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17374)
!17380 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17374)
!17381 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17374)
!17382 = !DILocation(line: 261, column: 9, scope: !17362)
!17383 = !DILocation(line: 261, column: 17, scope: !17362)
!17384 = !DILocation(line: 261, column: 25, scope: !17362)
!17385 = !DILocation(line: 261, column: 37, scope: !17362)
!17386 = !DILocation(line: 261, column: 47, scope: !17362)
!17387 = !DILocation(line: 261, column: 44, scope: !17362)
!17388 = !DILocation(line: 261, column: 2, scope: !17362)
!17389 = !DILocation(line: 0, scope: !17369)
!17390 = !DILocation(line: 263, column: 12, scope: !17369)
!17391 = !DILocation(line: 265, column: 16, scope: !17369)
!17392 = !DILocation(line: 265, column: 13, scope: !17369)
!17393 = !DILocation(line: 266, column: 13, scope: !17369)
!17394 = !DILocation(line: 267, column: 3, scope: !17369)
!17395 = !DILocation(line: 0, scope: !16952, inlinedAt: !17396)
!17396 = distinct !DILocation(line: 269, column: 3, scope: !17369)
!17397 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17396)
!17398 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17396)
!17399 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17396)
!17400 = !DILocation(line: 0, scope: !16966, inlinedAt: !17401)
!17401 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17396)
!17402 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17401)
!17403 = !DILocation(line: 270, column: 6, scope: !17369)
!17404 = !DILocation(line: 270, column: 3, scope: !17369)
!17405 = !DILocation(line: 0, scope: !16879, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 271, column: 9, scope: !17369)
!17407 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17408)
!17408 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17406)
!17409 = !DILocation(line: 0, scope: !16888, inlinedAt: !17408)
!17410 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17406)
!17411 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17406)
!17412 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17406)
!17413 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17406)
!17414 = !DILocation(line: 272, column: 22, scope: !17369)
!17415 = distinct !{!17415, !17388, !17416}
!17416 = !DILocation(line: 273, column: 2, scope: !17362)
!17417 = !DILocation(line: 276, column: 19, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17419, file: !2517, line: 275, column: 23)
!17419 = distinct !DILexicalBlock(scope: !17362, file: !2517, line: 275, column: 6)
!17420 = !DILocation(line: 277, column: 2, scope: !17418)
!17421 = !DILocation(line: 279, column: 15, scope: !17362)
!17422 = !DILocation(line: 279, column: 12, scope: !17362)
!17423 = !DILocation(line: 280, column: 21, scope: !17362)
!17424 = !DILocation(line: 282, column: 24, scope: !17362)
!17425 = !DILocation(line: 282, column: 2, scope: !17362)
!17426 = !DILocation(line: 0, scope: !16952, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 284, column: 2, scope: !17362)
!17428 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17427)
!17429 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17427)
!17430 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17427)
!17431 = !DILocation(line: 0, scope: !16966, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17427)
!17433 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17432)
!17434 = !DILocation(line: 285, column: 1, scope: !17362)
!17435 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2517, file: !2517, line: 287, type: !17436, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17438)
!17436 = !DISubroutineType(types: !17437)
!17437 = !{!376}
!17438 = !{!17439, !17440, !17442}
!17439 = !DILocalVariable(name: "t", scope: !17435, file: !2517, line: 289, type: !566)
!17440 = !DILocalVariable(name: "__i", scope: !17441, file: !2517, line: 291, type: !16851)
!17441 = distinct !DILexicalBlock(scope: !17435, file: !2517, line: 291, column: 2)
!17442 = !DILocalVariable(name: "__key", scope: !17441, file: !2517, line: 291, type: !16851)
!17443 = !DILocation(line: 0, scope: !17435)
!17444 = !DILocation(line: 0, scope: !17441)
!17445 = !DILocation(line: 0, scope: !16879, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 291, column: 2, scope: !17441)
!17447 = !DILocation(line: 55, column: 2, scope: !16888, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 145, column: 10, scope: !16879, inlinedAt: !17446)
!17449 = !DILocation(line: 0, scope: !16888, inlinedAt: !17448)
!17450 = !DILocation(line: 148, column: 2, scope: !16896, inlinedAt: !17446)
!17451 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17446)
!17452 = !DILocation(line: 148, column: 2, scope: !16900, inlinedAt: !17446)
!17453 = !DILocation(line: 160, column: 2, scope: !16879, inlinedAt: !17446)
!17454 = !DILocation(line: 292, column: 7, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17456, file: !2517, line: 291, column: 24)
!17456 = distinct !DILexicalBlock(scope: !17441, file: !2517, line: 291, column: 2)
!17457 = !DILocation(line: 292, column: 19, scope: !17455)
!17458 = !DILocation(line: 0, scope: !16952, inlinedAt: !17459)
!17459 = distinct !DILocation(line: 291, column: 2, scope: !17456)
!17460 = !DILocation(line: 194, column: 2, scope: !16960, inlinedAt: !17459)
!17461 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17459)
!17462 = !DILocation(line: 194, column: 2, scope: !16964, inlinedAt: !17459)
!17463 = !DILocation(line: 0, scope: !16966, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 215, column: 2, scope: !16952, inlinedAt: !17459)
!17465 = !DILocation(line: 95, column: 2, scope: !16966, inlinedAt: !17464)
!17466 = !DILocation(line: 292, column: 17, scope: !17455)
!17467 = !DILocation(line: 294, column: 2, scope: !17435)
!17468 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2517, file: !2517, line: 297, type: !6360, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17469 = !DILocation(line: 300, column: 19, scope: !17468)
!17470 = !DILocation(line: 300, column: 9, scope: !17468)
!17471 = !DILocation(line: 300, column: 2, scope: !17468)
!17472 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2517, file: !2517, line: 306, type: !17436, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17473 = !DILocation(line: 308, column: 9, scope: !17472)
!17474 = !DILocation(line: 308, column: 2, scope: !17472)
!17475 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2517, file: !2517, line: 319, type: !6370, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17476)
!17476 = !{!17477, !17478, !17479, !17480}
!17477 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17475, file: !2517, line: 319, type: !152)
!17478 = !DILocalVariable(name: "start_cycles", scope: !17475, file: !2517, line: 328, type: !152)
!17479 = !DILocalVariable(name: "cycles_to_wait", scope: !17475, file: !2517, line: 331, type: !152)
!17480 = !DILocalVariable(name: "current_cycles", scope: !17481, file: !2517, line: 338, type: !152)
!17481 = distinct !DILexicalBlock(scope: !17482, file: !2517, line: 337, column: 11)
!17482 = distinct !DILexicalBlock(scope: !17483, file: !2517, line: 337, column: 2)
!17483 = distinct !DILexicalBlock(scope: !17475, file: !2517, line: 337, column: 2)
!17484 = !DILocation(line: 0, scope: !17475)
!17485 = !DILocation(line: 322, column: 19, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17475, file: !2517, line: 322, column: 6)
!17487 = !DILocation(line: 322, column: 6, scope: !17475)
!17488 = !DILocation(line: 328, column: 26, scope: !17475)
!17489 = !DILocation(line: 333, column: 43, scope: !17475)
!17490 = !DILocation(line: 337, column: 2, scope: !17475)
!17491 = !DILocation(line: 338, column: 29, scope: !17481)
!17492 = !DILocation(line: 0, scope: !17481)
!17493 = !DILocation(line: 341, column: 23, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17481, file: !2517, line: 341, column: 7)
!17495 = !DILocation(line: 341, column: 39, scope: !17494)
!17496 = !DILocation(line: 349, column: 1, scope: !17475)
!17497 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6360, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17498 = !DILocation(line: 1677, column: 9, scope: !17497)
!17499 = !DILocation(line: 1677, column: 2, scope: !17497)
!17500 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8773, file: !8773, line: 24, type: !6360, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2182)
!17501 = !DILocation(line: 26, column: 9, scope: !17500)
!17502 = !DILocation(line: 26, column: 2, scope: !17500)
!17503 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2517, file: !2517, line: 364, type: !17504, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17506)
!17504 = !DISubroutineType(types: !17505)
!17505 = !{!566, !16841}
!17506 = !{!17507, !17508}
!17507 = !DILocalVariable(name: "timeout", arg: 1, scope: !17503, file: !2517, line: 364, type: !16841)
!17508 = !DILocalVariable(name: "dt", scope: !17503, file: !2517, line: 366, type: !564)
!17509 = !DILocation(line: 0, scope: !17503)
!17510 = !DILocation(line: 368, column: 6, scope: !17503)
!17511 = !DILocation(line: 371, column: 10, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17513, file: !2517, line: 370, column: 47)
!17513 = distinct !DILexicalBlock(scope: !17514, file: !2517, line: 370, column: 13)
!17514 = distinct !DILexicalBlock(scope: !17503, file: !2517, line: 368, column: 6)
!17515 = !DILocation(line: 371, column: 3, scope: !17512)
!17516 = !DILocation(line: 376, column: 58, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17518, file: !2517, line: 376, column: 7)
!17518 = distinct !DILexicalBlock(scope: !17513, file: !2517, line: 372, column: 9)
!17519 = !DILocation(line: 376, column: 7, scope: !17518)
!17520 = !DILocation(line: 376, column: 43, scope: !17517)
!17521 = !DILocation(line: 377, column: 4, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17517, file: !2517, line: 376, column: 64)
!17523 = !DILocation(line: 379, column: 10, scope: !17518)
!17524 = !DILocation(line: 379, column: 33, scope: !17518)
!17525 = !DILocation(line: 379, column: 31, scope: !17518)
!17526 = !DILocation(line: 379, column: 3, scope: !17518)
!17527 = !DILocation(line: 0, scope: !17514)
!17528 = !DILocation(line: 381, column: 1, scope: !17503)
!17529 = distinct !DISubprogram(name: "boot_banner", scope: !17530, file: !17530, line: 26, type: !3111, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !2182)
!17530 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17531 = !DILocation(line: 34, column: 2, scope: !17529)
!17532 = !DILocation(line: 36, column: 1, scope: !17529)
